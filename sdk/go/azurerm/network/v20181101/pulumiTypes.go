// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20181101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpace struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
}

// AddressSpaceInput is an input type that accepts AddressSpaceArgs and AddressSpaceOutput values.
// You can construct a concrete instance of `AddressSpaceInput` via:
//
//          AddressSpaceArgs{...}
type AddressSpaceInput interface {
	pulumi.Input

	ToAddressSpaceOutput() AddressSpaceOutput
	ToAddressSpaceOutputWithContext(context.Context) AddressSpaceOutput
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceArgs struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
}

func (AddressSpaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpace)(nil)).Elem()
}

func (i AddressSpaceArgs) ToAddressSpaceOutput() AddressSpaceOutput {
	return i.ToAddressSpaceOutputWithContext(context.Background())
}

func (i AddressSpaceArgs) ToAddressSpaceOutputWithContext(ctx context.Context) AddressSpaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceOutput)
}

func (i AddressSpaceArgs) ToAddressSpacePtrOutput() AddressSpacePtrOutput {
	return i.ToAddressSpacePtrOutputWithContext(context.Background())
}

func (i AddressSpaceArgs) ToAddressSpacePtrOutputWithContext(ctx context.Context) AddressSpacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceOutput).ToAddressSpacePtrOutputWithContext(ctx)
}

// AddressSpacePtrInput is an input type that accepts AddressSpaceArgs, AddressSpacePtr and AddressSpacePtrOutput values.
// You can construct a concrete instance of `AddressSpacePtrInput` via:
//
//          AddressSpaceArgs{...}
//
//  or:
//
//          nil
type AddressSpacePtrInput interface {
	pulumi.Input

	ToAddressSpacePtrOutput() AddressSpacePtrOutput
	ToAddressSpacePtrOutputWithContext(context.Context) AddressSpacePtrOutput
}

type addressSpacePtrType AddressSpaceArgs

func AddressSpacePtr(v *AddressSpaceArgs) AddressSpacePtrInput {
	return (*addressSpacePtrType)(v)
}

func (*addressSpacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpace)(nil)).Elem()
}

func (i *addressSpacePtrType) ToAddressSpacePtrOutput() AddressSpacePtrOutput {
	return i.ToAddressSpacePtrOutputWithContext(context.Background())
}

func (i *addressSpacePtrType) ToAddressSpacePtrOutputWithContext(ctx context.Context) AddressSpacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpacePtrOutput)
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceOutput struct{ *pulumi.OutputState }

func (AddressSpaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpace)(nil)).Elem()
}

func (o AddressSpaceOutput) ToAddressSpaceOutput() AddressSpaceOutput {
	return o
}

func (o AddressSpaceOutput) ToAddressSpaceOutputWithContext(ctx context.Context) AddressSpaceOutput {
	return o
}

func (o AddressSpaceOutput) ToAddressSpacePtrOutput() AddressSpacePtrOutput {
	return o.ToAddressSpacePtrOutputWithContext(context.Background())
}

func (o AddressSpaceOutput) ToAddressSpacePtrOutputWithContext(ctx context.Context) AddressSpacePtrOutput {
	return o.ApplyT(func(v AddressSpace) *AddressSpace {
		return &v
	}).(AddressSpacePtrOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o AddressSpaceOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AddressSpace) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

type AddressSpacePtrOutput struct{ *pulumi.OutputState }

func (AddressSpacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpace)(nil)).Elem()
}

func (o AddressSpacePtrOutput) ToAddressSpacePtrOutput() AddressSpacePtrOutput {
	return o
}

func (o AddressSpacePtrOutput) ToAddressSpacePtrOutputWithContext(ctx context.Context) AddressSpacePtrOutput {
	return o
}

func (o AddressSpacePtrOutput) Elem() AddressSpaceOutput {
	return o.ApplyT(func(v *AddressSpace) AddressSpace { return *v }).(AddressSpaceOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o AddressSpacePtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AddressSpace) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceResponse struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
}

// AddressSpaceResponseInput is an input type that accepts AddressSpaceResponseArgs and AddressSpaceResponseOutput values.
// You can construct a concrete instance of `AddressSpaceResponseInput` via:
//
//          AddressSpaceResponseArgs{...}
type AddressSpaceResponseInput interface {
	pulumi.Input

	ToAddressSpaceResponseOutput() AddressSpaceResponseOutput
	ToAddressSpaceResponseOutputWithContext(context.Context) AddressSpaceResponseOutput
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceResponseArgs struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
}

func (AddressSpaceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceResponse)(nil)).Elem()
}

func (i AddressSpaceResponseArgs) ToAddressSpaceResponseOutput() AddressSpaceResponseOutput {
	return i.ToAddressSpaceResponseOutputWithContext(context.Background())
}

func (i AddressSpaceResponseArgs) ToAddressSpaceResponseOutputWithContext(ctx context.Context) AddressSpaceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceResponseOutput)
}

func (i AddressSpaceResponseArgs) ToAddressSpaceResponsePtrOutput() AddressSpaceResponsePtrOutput {
	return i.ToAddressSpaceResponsePtrOutputWithContext(context.Background())
}

func (i AddressSpaceResponseArgs) ToAddressSpaceResponsePtrOutputWithContext(ctx context.Context) AddressSpaceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceResponseOutput).ToAddressSpaceResponsePtrOutputWithContext(ctx)
}

// AddressSpaceResponsePtrInput is an input type that accepts AddressSpaceResponseArgs, AddressSpaceResponsePtr and AddressSpaceResponsePtrOutput values.
// You can construct a concrete instance of `AddressSpaceResponsePtrInput` via:
//
//          AddressSpaceResponseArgs{...}
//
//  or:
//
//          nil
type AddressSpaceResponsePtrInput interface {
	pulumi.Input

	ToAddressSpaceResponsePtrOutput() AddressSpaceResponsePtrOutput
	ToAddressSpaceResponsePtrOutputWithContext(context.Context) AddressSpaceResponsePtrOutput
}

type addressSpaceResponsePtrType AddressSpaceResponseArgs

func AddressSpaceResponsePtr(v *AddressSpaceResponseArgs) AddressSpaceResponsePtrInput {
	return (*addressSpaceResponsePtrType)(v)
}

func (*addressSpaceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceResponse)(nil)).Elem()
}

func (i *addressSpaceResponsePtrType) ToAddressSpaceResponsePtrOutput() AddressSpaceResponsePtrOutput {
	return i.ToAddressSpaceResponsePtrOutputWithContext(context.Background())
}

func (i *addressSpaceResponsePtrType) ToAddressSpaceResponsePtrOutputWithContext(ctx context.Context) AddressSpaceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceResponsePtrOutput)
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceResponseOutput struct{ *pulumi.OutputState }

func (AddressSpaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceResponse)(nil)).Elem()
}

func (o AddressSpaceResponseOutput) ToAddressSpaceResponseOutput() AddressSpaceResponseOutput {
	return o
}

func (o AddressSpaceResponseOutput) ToAddressSpaceResponseOutputWithContext(ctx context.Context) AddressSpaceResponseOutput {
	return o
}

func (o AddressSpaceResponseOutput) ToAddressSpaceResponsePtrOutput() AddressSpaceResponsePtrOutput {
	return o.ToAddressSpaceResponsePtrOutputWithContext(context.Background())
}

func (o AddressSpaceResponseOutput) ToAddressSpaceResponsePtrOutputWithContext(ctx context.Context) AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v AddressSpaceResponse) *AddressSpaceResponse {
		return &v
	}).(AddressSpaceResponsePtrOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o AddressSpaceResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AddressSpaceResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

type AddressSpaceResponsePtrOutput struct{ *pulumi.OutputState }

func (AddressSpaceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceResponse)(nil)).Elem()
}

func (o AddressSpaceResponsePtrOutput) ToAddressSpaceResponsePtrOutput() AddressSpaceResponsePtrOutput {
	return o
}

func (o AddressSpaceResponsePtrOutput) ToAddressSpaceResponsePtrOutputWithContext(ctx context.Context) AddressSpaceResponsePtrOutput {
	return o
}

func (o AddressSpaceResponsePtrOutput) Elem() AddressSpaceResponseOutput {
	return o.ApplyT(func(v *AddressSpaceResponse) AddressSpaceResponse { return *v }).(AddressSpaceResponseOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o AddressSpaceResponsePtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AddressSpaceResponse) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// Application gateway resource
type ApplicationGatewayType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// The identity of the application gateway, if configured.
	Identity *ManagedServiceIdentityResponse `pulumi:"identity"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the application gateway.
	Properties ApplicationGatewayPropertiesFormatResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// A list of availability zones denoting where the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// ApplicationGatewayTypeInput is an input type that accepts ApplicationGatewayTypeArgs and ApplicationGatewayTypeOutput values.
// You can construct a concrete instance of `ApplicationGatewayTypeInput` via:
//
//          ApplicationGatewayTypeArgs{...}
type ApplicationGatewayTypeInput interface {
	pulumi.Input

	ToApplicationGatewayTypeOutput() ApplicationGatewayTypeOutput
	ToApplicationGatewayTypeOutputWithContext(context.Context) ApplicationGatewayTypeOutput
}

// Application gateway resource
type ApplicationGatewayTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// The identity of the application gateway, if configured.
	Identity ManagedServiceIdentityResponsePtrInput `pulumi:"identity"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the application gateway.
	Properties ApplicationGatewayPropertiesFormatResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// A list of availability zones denoting where the resource needs to come from.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (ApplicationGatewayTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayType)(nil)).Elem()
}

func (i ApplicationGatewayTypeArgs) ToApplicationGatewayTypeOutput() ApplicationGatewayTypeOutput {
	return i.ToApplicationGatewayTypeOutputWithContext(context.Background())
}

func (i ApplicationGatewayTypeArgs) ToApplicationGatewayTypeOutputWithContext(ctx context.Context) ApplicationGatewayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTypeOutput)
}

// Application gateway resource
type ApplicationGatewayTypeOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayType)(nil)).Elem()
}

func (o ApplicationGatewayTypeOutput) ToApplicationGatewayTypeOutput() ApplicationGatewayTypeOutput {
	return o
}

func (o ApplicationGatewayTypeOutput) ToApplicationGatewayTypeOutputWithContext(ctx context.Context) ApplicationGatewayTypeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The identity of the application gateway, if configured.
func (o ApplicationGatewayTypeOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayType) *ManagedServiceIdentityResponse { return v.Identity }).(ManagedServiceIdentityResponsePtrOutput)
}

// Resource location.
func (o ApplicationGatewayTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o ApplicationGatewayTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the application gateway.
func (o ApplicationGatewayTypeOutput) Properties() ApplicationGatewayPropertiesFormatResponseOutput {
	return o.ApplyT(func(v ApplicationGatewayType) ApplicationGatewayPropertiesFormatResponse { return v.Properties }).(ApplicationGatewayPropertiesFormatResponseOutput)
}

// Resource tags.
func (o ApplicationGatewayTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationGatewayType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o ApplicationGatewayTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayType) string { return v.Type }).(pulumi.StringOutput)
}

// A list of availability zones denoting where the resource needs to come from.
func (o ApplicationGatewayTypeOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayType) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificate struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the authentication certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Authentication certificates properties of an application gateway.
	Properties *ApplicationGatewayAuthenticationCertificatePropertiesFormat `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayAuthenticationCertificateInput is an input type that accepts ApplicationGatewayAuthenticationCertificateArgs and ApplicationGatewayAuthenticationCertificateOutput values.
// You can construct a concrete instance of `ApplicationGatewayAuthenticationCertificateInput` via:
//
//          ApplicationGatewayAuthenticationCertificateArgs{...}
type ApplicationGatewayAuthenticationCertificateInput interface {
	pulumi.Input

	ToApplicationGatewayAuthenticationCertificateOutput() ApplicationGatewayAuthenticationCertificateOutput
	ToApplicationGatewayAuthenticationCertificateOutputWithContext(context.Context) ApplicationGatewayAuthenticationCertificateOutput
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificateArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the authentication certificate that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Authentication certificates properties of an application gateway.
	Properties ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayAuthenticationCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (i ApplicationGatewayAuthenticationCertificateArgs) ToApplicationGatewayAuthenticationCertificateOutput() ApplicationGatewayAuthenticationCertificateOutput {
	return i.ToApplicationGatewayAuthenticationCertificateOutputWithContext(context.Background())
}

func (i ApplicationGatewayAuthenticationCertificateArgs) ToApplicationGatewayAuthenticationCertificateOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAuthenticationCertificateOutput)
}

// ApplicationGatewayAuthenticationCertificateArrayInput is an input type that accepts ApplicationGatewayAuthenticationCertificateArray and ApplicationGatewayAuthenticationCertificateArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayAuthenticationCertificateArrayInput` via:
//
//          ApplicationGatewayAuthenticationCertificateArray{ ApplicationGatewayAuthenticationCertificateArgs{...} }
type ApplicationGatewayAuthenticationCertificateArrayInput interface {
	pulumi.Input

	ToApplicationGatewayAuthenticationCertificateArrayOutput() ApplicationGatewayAuthenticationCertificateArrayOutput
	ToApplicationGatewayAuthenticationCertificateArrayOutputWithContext(context.Context) ApplicationGatewayAuthenticationCertificateArrayOutput
}

type ApplicationGatewayAuthenticationCertificateArray []ApplicationGatewayAuthenticationCertificateInput

func (ApplicationGatewayAuthenticationCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (i ApplicationGatewayAuthenticationCertificateArray) ToApplicationGatewayAuthenticationCertificateArrayOutput() ApplicationGatewayAuthenticationCertificateArrayOutput {
	return i.ToApplicationGatewayAuthenticationCertificateArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayAuthenticationCertificateArray) ToApplicationGatewayAuthenticationCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAuthenticationCertificateArrayOutput)
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificateOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAuthenticationCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (o ApplicationGatewayAuthenticationCertificateOutput) ToApplicationGatewayAuthenticationCertificateOutput() ApplicationGatewayAuthenticationCertificateOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateOutput) ToApplicationGatewayAuthenticationCertificateOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayAuthenticationCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayAuthenticationCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the authentication certificate that is unique within an Application Gateway.
func (o ApplicationGatewayAuthenticationCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Authentication certificates properties of an application gateway.
func (o ApplicationGatewayAuthenticationCertificateOutput) Properties() ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificate) *ApplicationGatewayAuthenticationCertificatePropertiesFormat {
		return v.Properties
	}).(ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayAuthenticationCertificateOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificate) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayAuthenticationCertificateArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAuthenticationCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (o ApplicationGatewayAuthenticationCertificateArrayOutput) ToApplicationGatewayAuthenticationCertificateArrayOutput() ApplicationGatewayAuthenticationCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateArrayOutput) ToApplicationGatewayAuthenticationCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayAuthenticationCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayAuthenticationCertificate {
		return vs[0].([]ApplicationGatewayAuthenticationCertificate)[vs[1].(int)]
	}).(ApplicationGatewayAuthenticationCertificateOutput)
}

// Authentication certificates properties of an application gateway.
type ApplicationGatewayAuthenticationCertificatePropertiesFormat struct {
	// Certificate public data.
	Data *string `pulumi:"data"`
	// Provisioning state of the authentication certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ApplicationGatewayAuthenticationCertificatePropertiesFormatInput is an input type that accepts ApplicationGatewayAuthenticationCertificatePropertiesFormatArgs and ApplicationGatewayAuthenticationCertificatePropertiesFormatOutput values.
// You can construct a concrete instance of `ApplicationGatewayAuthenticationCertificatePropertiesFormatInput` via:
//
//          ApplicationGatewayAuthenticationCertificatePropertiesFormatArgs{...}
type ApplicationGatewayAuthenticationCertificatePropertiesFormatInput interface {
	pulumi.Input

	ToApplicationGatewayAuthenticationCertificatePropertiesFormatOutput() ApplicationGatewayAuthenticationCertificatePropertiesFormatOutput
	ToApplicationGatewayAuthenticationCertificatePropertiesFormatOutputWithContext(context.Context) ApplicationGatewayAuthenticationCertificatePropertiesFormatOutput
}

// Authentication certificates properties of an application gateway.
type ApplicationGatewayAuthenticationCertificatePropertiesFormatArgs struct {
	// Certificate public data.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// Provisioning state of the authentication certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ApplicationGatewayAuthenticationCertificatePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAuthenticationCertificatePropertiesFormat)(nil)).Elem()
}

func (i ApplicationGatewayAuthenticationCertificatePropertiesFormatArgs) ToApplicationGatewayAuthenticationCertificatePropertiesFormatOutput() ApplicationGatewayAuthenticationCertificatePropertiesFormatOutput {
	return i.ToApplicationGatewayAuthenticationCertificatePropertiesFormatOutputWithContext(context.Background())
}

func (i ApplicationGatewayAuthenticationCertificatePropertiesFormatArgs) ToApplicationGatewayAuthenticationCertificatePropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificatePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAuthenticationCertificatePropertiesFormatOutput)
}

func (i ApplicationGatewayAuthenticationCertificatePropertiesFormatArgs) ToApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput() ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput {
	return i.ToApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayAuthenticationCertificatePropertiesFormatArgs) ToApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAuthenticationCertificatePropertiesFormatOutput).ToApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutputWithContext(ctx)
}

// ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrInput is an input type that accepts ApplicationGatewayAuthenticationCertificatePropertiesFormatArgs, ApplicationGatewayAuthenticationCertificatePropertiesFormatPtr and ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrInput` via:
//
//          ApplicationGatewayAuthenticationCertificatePropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrInput interface {
	pulumi.Input

	ToApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput() ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput
	ToApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutputWithContext(context.Context) ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput
}

type applicationGatewayAuthenticationCertificatePropertiesFormatPtrType ApplicationGatewayAuthenticationCertificatePropertiesFormatArgs

func ApplicationGatewayAuthenticationCertificatePropertiesFormatPtr(v *ApplicationGatewayAuthenticationCertificatePropertiesFormatArgs) ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrInput {
	return (*applicationGatewayAuthenticationCertificatePropertiesFormatPtrType)(v)
}

func (*applicationGatewayAuthenticationCertificatePropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAuthenticationCertificatePropertiesFormat)(nil)).Elem()
}

func (i *applicationGatewayAuthenticationCertificatePropertiesFormatPtrType) ToApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput() ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput {
	return i.ToApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayAuthenticationCertificatePropertiesFormatPtrType) ToApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput)
}

// Authentication certificates properties of an application gateway.
type ApplicationGatewayAuthenticationCertificatePropertiesFormatOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAuthenticationCertificatePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAuthenticationCertificatePropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayAuthenticationCertificatePropertiesFormatOutput) ToApplicationGatewayAuthenticationCertificatePropertiesFormatOutput() ApplicationGatewayAuthenticationCertificatePropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificatePropertiesFormatOutput) ToApplicationGatewayAuthenticationCertificatePropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificatePropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificatePropertiesFormatOutput) ToApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput() ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput {
	return o.ToApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayAuthenticationCertificatePropertiesFormatOutput) ToApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificatePropertiesFormat) *ApplicationGatewayAuthenticationCertificatePropertiesFormat {
		return &v
	}).(ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput)
}

// Certificate public data.
func (o ApplicationGatewayAuthenticationCertificatePropertiesFormatOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificatePropertiesFormat) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// Provisioning state of the authentication certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayAuthenticationCertificatePropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificatePropertiesFormat) *string {
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

type ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAuthenticationCertificatePropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput) ToApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput() ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput) ToApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput) Elem() ApplicationGatewayAuthenticationCertificatePropertiesFormatOutput {
	return o.ApplyT(func(v *ApplicationGatewayAuthenticationCertificatePropertiesFormat) ApplicationGatewayAuthenticationCertificatePropertiesFormat {
		return *v
	}).(ApplicationGatewayAuthenticationCertificatePropertiesFormatOutput)
}

// Certificate public data.
func (o ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAuthenticationCertificatePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.Data
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the authentication certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAuthenticationCertificatePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Authentication certificates properties of an application gateway.
type ApplicationGatewayAuthenticationCertificatePropertiesFormatResponse struct {
	// Certificate public data.
	Data *string `pulumi:"data"`
	// Provisioning state of the authentication certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseInput is an input type that accepts ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseArgs and ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseInput` via:
//
//          ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseArgs{...}
type ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseInput interface {
	pulumi.Input

	ToApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput() ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput
	ToApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutputWithContext(context.Context) ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput
}

// Authentication certificates properties of an application gateway.
type ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseArgs struct {
	// Certificate public data.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// Provisioning state of the authentication certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAuthenticationCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (i ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseArgs) ToApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput() ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput {
	return i.ToApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseArgs) ToApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput)
}

func (i ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseArgs) ToApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput() ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseArgs) ToApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput).ToApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrInput is an input type that accepts ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseArgs, ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtr and ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrInput` via:
//
//          ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput() ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput
	ToApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutputWithContext(context.Context) ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput
}

type applicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrType ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseArgs

func ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtr(v *ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseArgs) ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrInput {
	return (*applicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrType)(v)
}

func (*applicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAuthenticationCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (i *applicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrType) ToApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput() ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrType) ToApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput)
}

// Authentication certificates properties of an application gateway.
type ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAuthenticationCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput) ToApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput() ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput) ToApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput) ToApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput() ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput {
	return o.ToApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput) ToApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificatePropertiesFormatResponse) *ApplicationGatewayAuthenticationCertificatePropertiesFormatResponse {
		return &v
	}).(ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput)
}

// Certificate public data.
func (o ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificatePropertiesFormatResponse) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// Provisioning state of the authentication certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificatePropertiesFormatResponse) *string {
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

type ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAuthenticationCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput) ToApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput() ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput) ToApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput) Elem() ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayAuthenticationCertificatePropertiesFormatResponse) ApplicationGatewayAuthenticationCertificatePropertiesFormatResponse {
		return *v
	}).(ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput)
}

// Certificate public data.
func (o ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAuthenticationCertificatePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.Data
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the authentication certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAuthenticationCertificatePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the authentication certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Authentication certificates properties of an application gateway.
	Properties *ApplicationGatewayAuthenticationCertificatePropertiesFormatResponse `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayAuthenticationCertificateResponseInput is an input type that accepts ApplicationGatewayAuthenticationCertificateResponseArgs and ApplicationGatewayAuthenticationCertificateResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayAuthenticationCertificateResponseInput` via:
//
//          ApplicationGatewayAuthenticationCertificateResponseArgs{...}
type ApplicationGatewayAuthenticationCertificateResponseInput interface {
	pulumi.Input

	ToApplicationGatewayAuthenticationCertificateResponseOutput() ApplicationGatewayAuthenticationCertificateResponseOutput
	ToApplicationGatewayAuthenticationCertificateResponseOutputWithContext(context.Context) ApplicationGatewayAuthenticationCertificateResponseOutput
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificateResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the authentication certificate that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Authentication certificates properties of an application gateway.
	Properties ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayAuthenticationCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAuthenticationCertificateResponse)(nil)).Elem()
}

func (i ApplicationGatewayAuthenticationCertificateResponseArgs) ToApplicationGatewayAuthenticationCertificateResponseOutput() ApplicationGatewayAuthenticationCertificateResponseOutput {
	return i.ToApplicationGatewayAuthenticationCertificateResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayAuthenticationCertificateResponseArgs) ToApplicationGatewayAuthenticationCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAuthenticationCertificateResponseOutput)
}

// ApplicationGatewayAuthenticationCertificateResponseArrayInput is an input type that accepts ApplicationGatewayAuthenticationCertificateResponseArray and ApplicationGatewayAuthenticationCertificateResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayAuthenticationCertificateResponseArrayInput` via:
//
//          ApplicationGatewayAuthenticationCertificateResponseArray{ ApplicationGatewayAuthenticationCertificateResponseArgs{...} }
type ApplicationGatewayAuthenticationCertificateResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayAuthenticationCertificateResponseArrayOutput() ApplicationGatewayAuthenticationCertificateResponseArrayOutput
	ToApplicationGatewayAuthenticationCertificateResponseArrayOutputWithContext(context.Context) ApplicationGatewayAuthenticationCertificateResponseArrayOutput
}

type ApplicationGatewayAuthenticationCertificateResponseArray []ApplicationGatewayAuthenticationCertificateResponseInput

func (ApplicationGatewayAuthenticationCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayAuthenticationCertificateResponse)(nil)).Elem()
}

func (i ApplicationGatewayAuthenticationCertificateResponseArray) ToApplicationGatewayAuthenticationCertificateResponseArrayOutput() ApplicationGatewayAuthenticationCertificateResponseArrayOutput {
	return i.ToApplicationGatewayAuthenticationCertificateResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayAuthenticationCertificateResponseArray) ToApplicationGatewayAuthenticationCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAuthenticationCertificateResponseArrayOutput)
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificateResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAuthenticationCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAuthenticationCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewayAuthenticationCertificateResponseOutput) ToApplicationGatewayAuthenticationCertificateResponseOutput() ApplicationGatewayAuthenticationCertificateResponseOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateResponseOutput) ToApplicationGatewayAuthenticationCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the authentication certificate that is unique within an Application Gateway.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Authentication certificates properties of an application gateway.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) Properties() ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) *ApplicationGatewayAuthenticationCertificatePropertiesFormatResponse {
		return v.Properties
	}).(ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayAuthenticationCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAuthenticationCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayAuthenticationCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewayAuthenticationCertificateResponseArrayOutput) ToApplicationGatewayAuthenticationCertificateResponseArrayOutput() ApplicationGatewayAuthenticationCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateResponseArrayOutput) ToApplicationGatewayAuthenticationCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayAuthenticationCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayAuthenticationCertificateResponse {
		return vs[0].([]ApplicationGatewayAuthenticationCertificateResponse)[vs[1].(int)]
	}).(ApplicationGatewayAuthenticationCertificateResponseOutput)
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfiguration struct {
	// Upper bound on number of Application Gateway capacity
	MaxCapacity *int `pulumi:"maxCapacity"`
	// Lower bound on number of Application Gateway capacity
	MinCapacity int `pulumi:"minCapacity"`
}

// ApplicationGatewayAutoscaleConfigurationInput is an input type that accepts ApplicationGatewayAutoscaleConfigurationArgs and ApplicationGatewayAutoscaleConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayAutoscaleConfigurationInput` via:
//
//          ApplicationGatewayAutoscaleConfigurationArgs{...}
type ApplicationGatewayAutoscaleConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayAutoscaleConfigurationOutput() ApplicationGatewayAutoscaleConfigurationOutput
	ToApplicationGatewayAutoscaleConfigurationOutputWithContext(context.Context) ApplicationGatewayAutoscaleConfigurationOutput
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfigurationArgs struct {
	// Upper bound on number of Application Gateway capacity
	MaxCapacity pulumi.IntPtrInput `pulumi:"maxCapacity"`
	// Lower bound on number of Application Gateway capacity
	MinCapacity pulumi.IntInput `pulumi:"minCapacity"`
}

func (ApplicationGatewayAutoscaleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayAutoscaleConfigurationArgs) ToApplicationGatewayAutoscaleConfigurationOutput() ApplicationGatewayAutoscaleConfigurationOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayAutoscaleConfigurationArgs) ToApplicationGatewayAutoscaleConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationOutput)
}

func (i ApplicationGatewayAutoscaleConfigurationArgs) ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayAutoscaleConfigurationArgs) ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationOutput).ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx)
}

// ApplicationGatewayAutoscaleConfigurationPtrInput is an input type that accepts ApplicationGatewayAutoscaleConfigurationArgs, ApplicationGatewayAutoscaleConfigurationPtr and ApplicationGatewayAutoscaleConfigurationPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayAutoscaleConfigurationPtrInput` via:
//
//          ApplicationGatewayAutoscaleConfigurationArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayAutoscaleConfigurationPtrInput interface {
	pulumi.Input

	ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput
	ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput
}

type applicationGatewayAutoscaleConfigurationPtrType ApplicationGatewayAutoscaleConfigurationArgs

func ApplicationGatewayAutoscaleConfigurationPtr(v *ApplicationGatewayAutoscaleConfigurationArgs) ApplicationGatewayAutoscaleConfigurationPtrInput {
	return (*applicationGatewayAutoscaleConfigurationPtrType)(v)
}

func (*applicationGatewayAutoscaleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (i *applicationGatewayAutoscaleConfigurationPtrType) ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayAutoscaleConfigurationPtrType) ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationPtrOutput)
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAutoscaleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayAutoscaleConfigurationOutput) ToApplicationGatewayAutoscaleConfigurationOutput() ApplicationGatewayAutoscaleConfigurationOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationOutput) ToApplicationGatewayAutoscaleConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationOutput) ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return o.ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayAutoscaleConfigurationOutput) ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleConfiguration) *ApplicationGatewayAutoscaleConfiguration {
		return &v
	}).(ApplicationGatewayAutoscaleConfigurationPtrOutput)
}

// Upper bound on number of Application Gateway capacity
func (o ApplicationGatewayAutoscaleConfigurationOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleConfiguration) *int { return v.MaxCapacity }).(pulumi.IntPtrOutput)
}

// Lower bound on number of Application Gateway capacity
func (o ApplicationGatewayAutoscaleConfigurationOutput) MinCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleConfiguration) int { return v.MinCapacity }).(pulumi.IntOutput)
}

type ApplicationGatewayAutoscaleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAutoscaleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) Elem() ApplicationGatewayAutoscaleConfigurationOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfiguration) ApplicationGatewayAutoscaleConfiguration { return *v }).(ApplicationGatewayAutoscaleConfigurationOutput)
}

// Upper bound on number of Application Gateway capacity
func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxCapacity
	}).(pulumi.IntPtrOutput)
}

// Lower bound on number of Application Gateway capacity
func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfigurationResponse struct {
	// Upper bound on number of Application Gateway capacity
	MaxCapacity *int `pulumi:"maxCapacity"`
	// Lower bound on number of Application Gateway capacity
	MinCapacity int `pulumi:"minCapacity"`
}

// ApplicationGatewayAutoscaleConfigurationResponseInput is an input type that accepts ApplicationGatewayAutoscaleConfigurationResponseArgs and ApplicationGatewayAutoscaleConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayAutoscaleConfigurationResponseInput` via:
//
//          ApplicationGatewayAutoscaleConfigurationResponseArgs{...}
type ApplicationGatewayAutoscaleConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayAutoscaleConfigurationResponseOutput() ApplicationGatewayAutoscaleConfigurationResponseOutput
	ToApplicationGatewayAutoscaleConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayAutoscaleConfigurationResponseOutput
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfigurationResponseArgs struct {
	// Upper bound on number of Application Gateway capacity
	MaxCapacity pulumi.IntPtrInput `pulumi:"maxCapacity"`
	// Lower bound on number of Application Gateway capacity
	MinCapacity pulumi.IntInput `pulumi:"minCapacity"`
}

func (ApplicationGatewayAutoscaleConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAutoscaleConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayAutoscaleConfigurationResponseArgs) ToApplicationGatewayAutoscaleConfigurationResponseOutput() ApplicationGatewayAutoscaleConfigurationResponseOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayAutoscaleConfigurationResponseArgs) ToApplicationGatewayAutoscaleConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationResponseOutput)
}

func (i ApplicationGatewayAutoscaleConfigurationResponseArgs) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutput() ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayAutoscaleConfigurationResponseArgs) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationResponseOutput).ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayAutoscaleConfigurationResponsePtrInput is an input type that accepts ApplicationGatewayAutoscaleConfigurationResponseArgs, ApplicationGatewayAutoscaleConfigurationResponsePtr and ApplicationGatewayAutoscaleConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayAutoscaleConfigurationResponsePtrInput` via:
//
//          ApplicationGatewayAutoscaleConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayAutoscaleConfigurationResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayAutoscaleConfigurationResponsePtrOutput() ApplicationGatewayAutoscaleConfigurationResponsePtrOutput
	ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(context.Context) ApplicationGatewayAutoscaleConfigurationResponsePtrOutput
}

type applicationGatewayAutoscaleConfigurationResponsePtrType ApplicationGatewayAutoscaleConfigurationResponseArgs

func ApplicationGatewayAutoscaleConfigurationResponsePtr(v *ApplicationGatewayAutoscaleConfigurationResponseArgs) ApplicationGatewayAutoscaleConfigurationResponsePtrInput {
	return (*applicationGatewayAutoscaleConfigurationResponsePtrType)(v)
}

func (*applicationGatewayAutoscaleConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAutoscaleConfigurationResponse)(nil)).Elem()
}

func (i *applicationGatewayAutoscaleConfigurationResponsePtrType) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutput() ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayAutoscaleConfigurationResponsePtrType) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationResponsePtrOutput)
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAutoscaleConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAutoscaleConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayAutoscaleConfigurationResponseOutput) ToApplicationGatewayAutoscaleConfigurationResponseOutput() ApplicationGatewayAutoscaleConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationResponseOutput) ToApplicationGatewayAutoscaleConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationResponseOutput) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutput() ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return o.ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayAutoscaleConfigurationResponseOutput) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleConfigurationResponse) *ApplicationGatewayAutoscaleConfigurationResponse {
		return &v
	}).(ApplicationGatewayAutoscaleConfigurationResponsePtrOutput)
}

// Upper bound on number of Application Gateway capacity
func (o ApplicationGatewayAutoscaleConfigurationResponseOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleConfigurationResponse) *int { return v.MaxCapacity }).(pulumi.IntPtrOutput)
}

// Lower bound on number of Application Gateway capacity
func (o ApplicationGatewayAutoscaleConfigurationResponseOutput) MinCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleConfigurationResponse) int { return v.MinCapacity }).(pulumi.IntOutput)
}

type ApplicationGatewayAutoscaleConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAutoscaleConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutput() ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) Elem() ApplicationGatewayAutoscaleConfigurationResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfigurationResponse) ApplicationGatewayAutoscaleConfigurationResponse {
		return *v
	}).(ApplicationGatewayAutoscaleConfigurationResponseOutput)
}

// Upper bound on number of Application Gateway capacity
func (o ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxCapacity
	}).(pulumi.IntPtrOutput)
}

// Lower bound on number of Application Gateway capacity
func (o ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddress struct {
	// Fully qualified domain name (FQDN).
	Fqdn *string `pulumi:"fqdn"`
	// IP address
	IpAddress *string `pulumi:"ipAddress"`
}

// ApplicationGatewayBackendAddressInput is an input type that accepts ApplicationGatewayBackendAddressArgs and ApplicationGatewayBackendAddressOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressInput` via:
//
//          ApplicationGatewayBackendAddressArgs{...}
type ApplicationGatewayBackendAddressInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressOutput() ApplicationGatewayBackendAddressOutput
	ToApplicationGatewayBackendAddressOutputWithContext(context.Context) ApplicationGatewayBackendAddressOutput
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressArgs struct {
	// Fully qualified domain name (FQDN).
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// IP address
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (ApplicationGatewayBackendAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddress)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressArgs) ToApplicationGatewayBackendAddressOutput() ApplicationGatewayBackendAddressOutput {
	return i.ToApplicationGatewayBackendAddressOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressArgs) ToApplicationGatewayBackendAddressOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressOutput)
}

// ApplicationGatewayBackendAddressArrayInput is an input type that accepts ApplicationGatewayBackendAddressArray and ApplicationGatewayBackendAddressArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressArrayInput` via:
//
//          ApplicationGatewayBackendAddressArray{ ApplicationGatewayBackendAddressArgs{...} }
type ApplicationGatewayBackendAddressArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressArrayOutput() ApplicationGatewayBackendAddressArrayOutput
	ToApplicationGatewayBackendAddressArrayOutputWithContext(context.Context) ApplicationGatewayBackendAddressArrayOutput
}

type ApplicationGatewayBackendAddressArray []ApplicationGatewayBackendAddressInput

func (ApplicationGatewayBackendAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddress)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressArray) ToApplicationGatewayBackendAddressArrayOutput() ApplicationGatewayBackendAddressArrayOutput {
	return i.ToApplicationGatewayBackendAddressArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressArray) ToApplicationGatewayBackendAddressArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressArrayOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddress)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressOutput) ToApplicationGatewayBackendAddressOutput() ApplicationGatewayBackendAddressOutput {
	return o
}

func (o ApplicationGatewayBackendAddressOutput) ToApplicationGatewayBackendAddressOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressOutput {
	return o
}

// Fully qualified domain name (FQDN).
func (o ApplicationGatewayBackendAddressOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddress) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// IP address
func (o ApplicationGatewayBackendAddressOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddress) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddress)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressArrayOutput) ToApplicationGatewayBackendAddressArrayOutput() ApplicationGatewayBackendAddressArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressArrayOutput) ToApplicationGatewayBackendAddressArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddress {
		return vs[0].([]ApplicationGatewayBackendAddress)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressOutput)
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPool struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the backend address pool that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of Backend Address Pool of an application gateway.
	Properties *ApplicationGatewayBackendAddressPoolPropertiesFormat `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayBackendAddressPoolInput is an input type that accepts ApplicationGatewayBackendAddressPoolArgs and ApplicationGatewayBackendAddressPoolOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolInput` via:
//
//          ApplicationGatewayBackendAddressPoolArgs{...}
type ApplicationGatewayBackendAddressPoolInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolOutput() ApplicationGatewayBackendAddressPoolOutput
	ToApplicationGatewayBackendAddressPoolOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolOutput
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the backend address pool that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of Backend Address Pool of an application gateway.
	Properties ApplicationGatewayBackendAddressPoolPropertiesFormatPtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayBackendAddressPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolArgs) ToApplicationGatewayBackendAddressPoolOutput() ApplicationGatewayBackendAddressPoolOutput {
	return i.ToApplicationGatewayBackendAddressPoolOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolArgs) ToApplicationGatewayBackendAddressPoolOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolOutput)
}

// ApplicationGatewayBackendAddressPoolArrayInput is an input type that accepts ApplicationGatewayBackendAddressPoolArray and ApplicationGatewayBackendAddressPoolArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolArrayInput` via:
//
//          ApplicationGatewayBackendAddressPoolArray{ ApplicationGatewayBackendAddressPoolArgs{...} }
type ApplicationGatewayBackendAddressPoolArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolArrayOutput() ApplicationGatewayBackendAddressPoolArrayOutput
	ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolArrayOutput
}

type ApplicationGatewayBackendAddressPoolArray []ApplicationGatewayBackendAddressPoolInput

func (ApplicationGatewayBackendAddressPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolArray) ToApplicationGatewayBackendAddressPoolArrayOutput() ApplicationGatewayBackendAddressPoolArrayOutput {
	return i.ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolArray) ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolArrayOutput)
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolOutput) ToApplicationGatewayBackendAddressPoolOutput() ApplicationGatewayBackendAddressPoolOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolOutput) ToApplicationGatewayBackendAddressPoolOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendAddressPoolOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendAddressPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the backend address pool that is unique within an Application Gateway.
func (o ApplicationGatewayBackendAddressPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of Backend Address Pool of an application gateway.
func (o ApplicationGatewayBackendAddressPoolOutput) Properties() ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) *ApplicationGatewayBackendAddressPoolPropertiesFormat {
		return v.Properties
	}).(ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayBackendAddressPoolOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressPoolArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolArrayOutput) ToApplicationGatewayBackendAddressPoolArrayOutput() ApplicationGatewayBackendAddressPoolArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolArrayOutput) ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddressPool {
		return vs[0].([]ApplicationGatewayBackendAddressPool)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressPoolOutput)
}

// Properties of Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolPropertiesFormat struct {
	// Backend addresses
	BackendAddresses []ApplicationGatewayBackendAddress `pulumi:"backendAddresses"`
	// Collection of references to IPs defined in network interfaces.
	BackendIPConfigurations []NetworkInterfaceIPConfiguration `pulumi:"backendIPConfigurations"`
	// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ApplicationGatewayBackendAddressPoolPropertiesFormatInput is an input type that accepts ApplicationGatewayBackendAddressPoolPropertiesFormatArgs and ApplicationGatewayBackendAddressPoolPropertiesFormatOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolPropertiesFormatInput` via:
//
//          ApplicationGatewayBackendAddressPoolPropertiesFormatArgs{...}
type ApplicationGatewayBackendAddressPoolPropertiesFormatInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolPropertiesFormatOutput() ApplicationGatewayBackendAddressPoolPropertiesFormatOutput
	ToApplicationGatewayBackendAddressPoolPropertiesFormatOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolPropertiesFormatOutput
}

// Properties of Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolPropertiesFormatArgs struct {
	// Backend addresses
	BackendAddresses ApplicationGatewayBackendAddressArrayInput `pulumi:"backendAddresses"`
	// Collection of references to IPs defined in network interfaces.
	BackendIPConfigurations NetworkInterfaceIPConfigurationArrayInput `pulumi:"backendIPConfigurations"`
	// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ApplicationGatewayBackendAddressPoolPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPoolPropertiesFormat)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolPropertiesFormatArgs) ToApplicationGatewayBackendAddressPoolPropertiesFormatOutput() ApplicationGatewayBackendAddressPoolPropertiesFormatOutput {
	return i.ToApplicationGatewayBackendAddressPoolPropertiesFormatOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolPropertiesFormatArgs) ToApplicationGatewayBackendAddressPoolPropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolPropertiesFormatOutput)
}

func (i ApplicationGatewayBackendAddressPoolPropertiesFormatArgs) ToApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput() ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput {
	return i.ToApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolPropertiesFormatArgs) ToApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolPropertiesFormatOutput).ToApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutputWithContext(ctx)
}

// ApplicationGatewayBackendAddressPoolPropertiesFormatPtrInput is an input type that accepts ApplicationGatewayBackendAddressPoolPropertiesFormatArgs, ApplicationGatewayBackendAddressPoolPropertiesFormatPtr and ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolPropertiesFormatPtrInput` via:
//
//          ApplicationGatewayBackendAddressPoolPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayBackendAddressPoolPropertiesFormatPtrInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput() ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput
	ToApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput
}

type applicationGatewayBackendAddressPoolPropertiesFormatPtrType ApplicationGatewayBackendAddressPoolPropertiesFormatArgs

func ApplicationGatewayBackendAddressPoolPropertiesFormatPtr(v *ApplicationGatewayBackendAddressPoolPropertiesFormatArgs) ApplicationGatewayBackendAddressPoolPropertiesFormatPtrInput {
	return (*applicationGatewayBackendAddressPoolPropertiesFormatPtrType)(v)
}

func (*applicationGatewayBackendAddressPoolPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayBackendAddressPoolPropertiesFormat)(nil)).Elem()
}

func (i *applicationGatewayBackendAddressPoolPropertiesFormatPtrType) ToApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput() ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput {
	return i.ToApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayBackendAddressPoolPropertiesFormatPtrType) ToApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput)
}

// Properties of Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPoolPropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolPropertiesFormatOutput) ToApplicationGatewayBackendAddressPoolPropertiesFormatOutput() ApplicationGatewayBackendAddressPoolPropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolPropertiesFormatOutput) ToApplicationGatewayBackendAddressPoolPropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolPropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolPropertiesFormatOutput) ToApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput() ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput {
	return o.ToApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayBackendAddressPoolPropertiesFormatOutput) ToApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolPropertiesFormat) *ApplicationGatewayBackendAddressPoolPropertiesFormat {
		return &v
	}).(ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput)
}

// Backend addresses
func (o ApplicationGatewayBackendAddressPoolPropertiesFormatOutput) BackendAddresses() ApplicationGatewayBackendAddressArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolPropertiesFormat) []ApplicationGatewayBackendAddress {
		return v.BackendAddresses
	}).(ApplicationGatewayBackendAddressArrayOutput)
}

// Collection of references to IPs defined in network interfaces.
func (o ApplicationGatewayBackendAddressPoolPropertiesFormatOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolPropertiesFormat) []NetworkInterfaceIPConfiguration {
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationArrayOutput)
}

// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayBackendAddressPoolPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayBackendAddressPoolPropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput) ToApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput() ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput) ToApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput) Elem() ApplicationGatewayBackendAddressPoolPropertiesFormatOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendAddressPoolPropertiesFormat) ApplicationGatewayBackendAddressPoolPropertiesFormat {
		return *v
	}).(ApplicationGatewayBackendAddressPoolPropertiesFormatOutput)
}

// Backend addresses
func (o ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput) BackendAddresses() ApplicationGatewayBackendAddressArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendAddressPoolPropertiesFormat) []ApplicationGatewayBackendAddress {
		if v == nil {
			return nil
		}
		return v.BackendAddresses
	}).(ApplicationGatewayBackendAddressArrayOutput)
}

// Collection of references to IPs defined in network interfaces.
func (o ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendAddressPoolPropertiesFormat) []NetworkInterfaceIPConfiguration {
		if v == nil {
			return nil
		}
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationArrayOutput)
}

// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendAddressPoolPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Properties of Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolPropertiesFormatResponse struct {
	// Backend addresses
	BackendAddresses []ApplicationGatewayBackendAddressResponse `pulumi:"backendAddresses"`
	// Collection of references to IPs defined in network interfaces.
	BackendIPConfigurations []NetworkInterfaceIPConfigurationResponse `pulumi:"backendIPConfigurations"`
	// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ApplicationGatewayBackendAddressPoolPropertiesFormatResponseInput is an input type that accepts ApplicationGatewayBackendAddressPoolPropertiesFormatResponseArgs and ApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolPropertiesFormatResponseInput` via:
//
//          ApplicationGatewayBackendAddressPoolPropertiesFormatResponseArgs{...}
type ApplicationGatewayBackendAddressPoolPropertiesFormatResponseInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput() ApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput
	ToApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput
}

// Properties of Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolPropertiesFormatResponseArgs struct {
	// Backend addresses
	BackendAddresses ApplicationGatewayBackendAddressResponseArrayInput `pulumi:"backendAddresses"`
	// Collection of references to IPs defined in network interfaces.
	BackendIPConfigurations NetworkInterfaceIPConfigurationResponseArrayInput `pulumi:"backendIPConfigurations"`
	// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ApplicationGatewayBackendAddressPoolPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPoolPropertiesFormatResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolPropertiesFormatResponseArgs) ToApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput() ApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput {
	return i.ToApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolPropertiesFormatResponseArgs) ToApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput)
}

func (i ApplicationGatewayBackendAddressPoolPropertiesFormatResponseArgs) ToApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput() ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolPropertiesFormatResponseArgs) ToApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput).ToApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrInput is an input type that accepts ApplicationGatewayBackendAddressPoolPropertiesFormatResponseArgs, ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtr and ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrInput` via:
//
//          ApplicationGatewayBackendAddressPoolPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput() ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput
	ToApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput
}

type applicationGatewayBackendAddressPoolPropertiesFormatResponsePtrType ApplicationGatewayBackendAddressPoolPropertiesFormatResponseArgs

func ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtr(v *ApplicationGatewayBackendAddressPoolPropertiesFormatResponseArgs) ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrInput {
	return (*applicationGatewayBackendAddressPoolPropertiesFormatResponsePtrType)(v)
}

func (*applicationGatewayBackendAddressPoolPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayBackendAddressPoolPropertiesFormatResponse)(nil)).Elem()
}

func (i *applicationGatewayBackendAddressPoolPropertiesFormatResponsePtrType) ToApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput() ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayBackendAddressPoolPropertiesFormatResponsePtrType) ToApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput)
}

// Properties of Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPoolPropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput) ToApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput() ApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput) ToApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput) ToApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput() ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput {
	return o.ToApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput) ToApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolPropertiesFormatResponse) *ApplicationGatewayBackendAddressPoolPropertiesFormatResponse {
		return &v
	}).(ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput)
}

// Backend addresses
func (o ApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput) BackendAddresses() ApplicationGatewayBackendAddressResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolPropertiesFormatResponse) []ApplicationGatewayBackendAddressResponse {
		return v.BackendAddresses
	}).(ApplicationGatewayBackendAddressResponseArrayOutput)
}

// Collection of references to IPs defined in network interfaces.
func (o ApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolPropertiesFormatResponse) []NetworkInterfaceIPConfigurationResponse {
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolPropertiesFormatResponse) *string {
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayBackendAddressPoolPropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput) ToApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput() ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput) ToApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput) Elem() ApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendAddressPoolPropertiesFormatResponse) ApplicationGatewayBackendAddressPoolPropertiesFormatResponse {
		return *v
	}).(ApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput)
}

// Backend addresses
func (o ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput) BackendAddresses() ApplicationGatewayBackendAddressResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendAddressPoolPropertiesFormatResponse) []ApplicationGatewayBackendAddressResponse {
		if v == nil {
			return nil
		}
		return v.BackendAddresses
	}).(ApplicationGatewayBackendAddressResponseArrayOutput)
}

// Collection of references to IPs defined in network interfaces.
func (o ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendAddressPoolPropertiesFormatResponse) []NetworkInterfaceIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendAddressPoolPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the backend address pool that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of Backend Address Pool of an application gateway.
	Properties *ApplicationGatewayBackendAddressPoolPropertiesFormatResponse `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayBackendAddressPoolResponseInput is an input type that accepts ApplicationGatewayBackendAddressPoolResponseArgs and ApplicationGatewayBackendAddressPoolResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolResponseInput` via:
//
//          ApplicationGatewayBackendAddressPoolResponseArgs{...}
type ApplicationGatewayBackendAddressPoolResponseInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolResponseOutput() ApplicationGatewayBackendAddressPoolResponseOutput
	ToApplicationGatewayBackendAddressPoolResponseOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolResponseOutput
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the backend address pool that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of Backend Address Pool of an application gateway.
	Properties ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayBackendAddressPoolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolResponseArgs) ToApplicationGatewayBackendAddressPoolResponseOutput() ApplicationGatewayBackendAddressPoolResponseOutput {
	return i.ToApplicationGatewayBackendAddressPoolResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolResponseArgs) ToApplicationGatewayBackendAddressPoolResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolResponseOutput)
}

// ApplicationGatewayBackendAddressPoolResponseArrayInput is an input type that accepts ApplicationGatewayBackendAddressPoolResponseArray and ApplicationGatewayBackendAddressPoolResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolResponseArrayInput` via:
//
//          ApplicationGatewayBackendAddressPoolResponseArray{ ApplicationGatewayBackendAddressPoolResponseArgs{...} }
type ApplicationGatewayBackendAddressPoolResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolResponseArrayOutput() ApplicationGatewayBackendAddressPoolResponseArrayOutput
	ToApplicationGatewayBackendAddressPoolResponseArrayOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolResponseArrayOutput
}

type ApplicationGatewayBackendAddressPoolResponseArray []ApplicationGatewayBackendAddressPoolResponseInput

func (ApplicationGatewayBackendAddressPoolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolResponseArray) ToApplicationGatewayBackendAddressPoolResponseArrayOutput() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return i.ToApplicationGatewayBackendAddressPoolResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolResponseArray) ToApplicationGatewayBackendAddressPoolResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolResponseArrayOutput)
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolResponseOutput) ToApplicationGatewayBackendAddressPoolResponseOutput() ApplicationGatewayBackendAddressPoolResponseOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponseOutput) ToApplicationGatewayBackendAddressPoolResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the backend address pool that is unique within an Application Gateway.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of Backend Address Pool of an application gateway.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Properties() ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) *ApplicationGatewayBackendAddressPoolPropertiesFormatResponse {
		return v.Properties
	}).(ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolResponseArrayOutput) ToApplicationGatewayBackendAddressPoolResponseArrayOutput() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponseArrayOutput) ToApplicationGatewayBackendAddressPoolResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddressPoolResponse {
		return vs[0].([]ApplicationGatewayBackendAddressPoolResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressPoolResponseOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressResponse struct {
	// Fully qualified domain name (FQDN).
	Fqdn *string `pulumi:"fqdn"`
	// IP address
	IpAddress *string `pulumi:"ipAddress"`
}

// ApplicationGatewayBackendAddressResponseInput is an input type that accepts ApplicationGatewayBackendAddressResponseArgs and ApplicationGatewayBackendAddressResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressResponseInput` via:
//
//          ApplicationGatewayBackendAddressResponseArgs{...}
type ApplicationGatewayBackendAddressResponseInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressResponseOutput() ApplicationGatewayBackendAddressResponseOutput
	ToApplicationGatewayBackendAddressResponseOutputWithContext(context.Context) ApplicationGatewayBackendAddressResponseOutput
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressResponseArgs struct {
	// Fully qualified domain name (FQDN).
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// IP address
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (ApplicationGatewayBackendAddressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressResponseArgs) ToApplicationGatewayBackendAddressResponseOutput() ApplicationGatewayBackendAddressResponseOutput {
	return i.ToApplicationGatewayBackendAddressResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressResponseArgs) ToApplicationGatewayBackendAddressResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressResponseOutput)
}

// ApplicationGatewayBackendAddressResponseArrayInput is an input type that accepts ApplicationGatewayBackendAddressResponseArray and ApplicationGatewayBackendAddressResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressResponseArrayInput` via:
//
//          ApplicationGatewayBackendAddressResponseArray{ ApplicationGatewayBackendAddressResponseArgs{...} }
type ApplicationGatewayBackendAddressResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressResponseArrayOutput() ApplicationGatewayBackendAddressResponseArrayOutput
	ToApplicationGatewayBackendAddressResponseArrayOutputWithContext(context.Context) ApplicationGatewayBackendAddressResponseArrayOutput
}

type ApplicationGatewayBackendAddressResponseArray []ApplicationGatewayBackendAddressResponseInput

func (ApplicationGatewayBackendAddressResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressResponseArray) ToApplicationGatewayBackendAddressResponseArrayOutput() ApplicationGatewayBackendAddressResponseArrayOutput {
	return i.ToApplicationGatewayBackendAddressResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressResponseArray) ToApplicationGatewayBackendAddressResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressResponseArrayOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressResponseOutput) ToApplicationGatewayBackendAddressResponseOutput() ApplicationGatewayBackendAddressResponseOutput {
	return o
}

func (o ApplicationGatewayBackendAddressResponseOutput) ToApplicationGatewayBackendAddressResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressResponseOutput {
	return o
}

// Fully qualified domain name (FQDN).
func (o ApplicationGatewayBackendAddressResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// IP address
func (o ApplicationGatewayBackendAddressResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressResponseArrayOutput) ToApplicationGatewayBackendAddressResponseArrayOutput() ApplicationGatewayBackendAddressResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressResponseArrayOutput) ToApplicationGatewayBackendAddressResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddressResponse {
		return vs[0].([]ApplicationGatewayBackendAddressResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressResponseOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettings struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the backend http settings that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of Backend address pool settings of an application gateway.
	Properties *ApplicationGatewayBackendHttpSettingsPropertiesFormat `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayBackendHttpSettingsInput is an input type that accepts ApplicationGatewayBackendHttpSettingsArgs and ApplicationGatewayBackendHttpSettingsOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsInput` via:
//
//          ApplicationGatewayBackendHttpSettingsArgs{...}
type ApplicationGatewayBackendHttpSettingsInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsOutput() ApplicationGatewayBackendHttpSettingsOutput
	ToApplicationGatewayBackendHttpSettingsOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsOutput
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the backend http settings that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of Backend address pool settings of an application gateway.
	Properties ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayBackendHttpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettings)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingsArgs) ToApplicationGatewayBackendHttpSettingsOutput() ApplicationGatewayBackendHttpSettingsOutput {
	return i.ToApplicationGatewayBackendHttpSettingsOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsArgs) ToApplicationGatewayBackendHttpSettingsOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsOutput)
}

// ApplicationGatewayBackendHttpSettingsArrayInput is an input type that accepts ApplicationGatewayBackendHttpSettingsArray and ApplicationGatewayBackendHttpSettingsArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsArrayInput` via:
//
//          ApplicationGatewayBackendHttpSettingsArray{ ApplicationGatewayBackendHttpSettingsArgs{...} }
type ApplicationGatewayBackendHttpSettingsArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsArrayOutput() ApplicationGatewayBackendHttpSettingsArrayOutput
	ToApplicationGatewayBackendHttpSettingsArrayOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsArrayOutput
}

type ApplicationGatewayBackendHttpSettingsArray []ApplicationGatewayBackendHttpSettingsInput

func (ApplicationGatewayBackendHttpSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettings)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingsArray) ToApplicationGatewayBackendHttpSettingsArrayOutput() ApplicationGatewayBackendHttpSettingsArrayOutput {
	return i.ToApplicationGatewayBackendHttpSettingsArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsArray) ToApplicationGatewayBackendHttpSettingsArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsArrayOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettings)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsOutput) ToApplicationGatewayBackendHttpSettingsOutput() ApplicationGatewayBackendHttpSettingsOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsOutput) ToApplicationGatewayBackendHttpSettingsOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendHttpSettingsOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendHttpSettingsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the backend http settings that is unique within an Application Gateway.
func (o ApplicationGatewayBackendHttpSettingsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of Backend address pool settings of an application gateway.
func (o ApplicationGatewayBackendHttpSettingsOutput) Properties() ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *ApplicationGatewayBackendHttpSettingsPropertiesFormat {
		return v.Properties
	}).(ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayBackendHttpSettingsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendHttpSettingsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettings)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsArrayOutput) ToApplicationGatewayBackendHttpSettingsArrayOutput() ApplicationGatewayBackendHttpSettingsArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsArrayOutput) ToApplicationGatewayBackendHttpSettingsArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendHttpSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendHttpSettings {
		return vs[0].([]ApplicationGatewayBackendHttpSettings)[vs[1].(int)]
	}).(ApplicationGatewayBackendHttpSettingsOutput)
}

// Properties of Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsPropertiesFormat struct {
	// Cookie name to use for the affinity cookie.
	AffinityCookieName *string `pulumi:"affinityCookieName"`
	// Array of references to application gateway authentication certificates.
	AuthenticationCertificates []SubResource `pulumi:"authenticationCertificates"`
	// Connection draining of the backend http settings resource.
	ConnectionDraining *ApplicationGatewayConnectionDraining `pulumi:"connectionDraining"`
	// Cookie based affinity.
	CookieBasedAffinity *string `pulumi:"cookieBasedAffinity"`
	// Host header to be sent to the backend servers.
	HostName *string `pulumi:"hostName"`
	// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
	Path *string `pulumi:"path"`
	// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
	PickHostNameFromBackendAddress *bool `pulumi:"pickHostNameFromBackendAddress"`
	// The destination port on the backend.
	Port *int `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe *SubResource `pulumi:"probe"`
	// Whether the probe is enabled. Default value is false.
	ProbeEnabled *bool `pulumi:"probeEnabled"`
	// The protocol used to communicate with the backend. Possible values are 'Http' and 'Https'.
	Protocol *string `pulumi:"protocol"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
	RequestTimeout *int `pulumi:"requestTimeout"`
	// Array of references to application gateway trusted root certificates.
	TrustedRootCertificates []SubResource `pulumi:"trustedRootCertificates"`
}

// ApplicationGatewayBackendHttpSettingsPropertiesFormatInput is an input type that accepts ApplicationGatewayBackendHttpSettingsPropertiesFormatArgs and ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsPropertiesFormatInput` via:
//
//          ApplicationGatewayBackendHttpSettingsPropertiesFormatArgs{...}
type ApplicationGatewayBackendHttpSettingsPropertiesFormatInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsPropertiesFormatOutput() ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput
	ToApplicationGatewayBackendHttpSettingsPropertiesFormatOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput
}

// Properties of Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsPropertiesFormatArgs struct {
	// Cookie name to use for the affinity cookie.
	AffinityCookieName pulumi.StringPtrInput `pulumi:"affinityCookieName"`
	// Array of references to application gateway authentication certificates.
	AuthenticationCertificates SubResourceArrayInput `pulumi:"authenticationCertificates"`
	// Connection draining of the backend http settings resource.
	ConnectionDraining ApplicationGatewayConnectionDrainingPtrInput `pulumi:"connectionDraining"`
	// Cookie based affinity.
	CookieBasedAffinity pulumi.StringPtrInput `pulumi:"cookieBasedAffinity"`
	// Host header to be sent to the backend servers.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
	PickHostNameFromBackendAddress pulumi.BoolPtrInput `pulumi:"pickHostNameFromBackendAddress"`
	// The destination port on the backend.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe SubResourcePtrInput `pulumi:"probe"`
	// Whether the probe is enabled. Default value is false.
	ProbeEnabled pulumi.BoolPtrInput `pulumi:"probeEnabled"`
	// The protocol used to communicate with the backend. Possible values are 'Http' and 'Https'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
	RequestTimeout pulumi.IntPtrInput `pulumi:"requestTimeout"`
	// Array of references to application gateway trusted root certificates.
	TrustedRootCertificates SubResourceArrayInput `pulumi:"trustedRootCertificates"`
}

func (ApplicationGatewayBackendHttpSettingsPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettingsPropertiesFormat)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingsPropertiesFormatArgs) ToApplicationGatewayBackendHttpSettingsPropertiesFormatOutput() ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput {
	return i.ToApplicationGatewayBackendHttpSettingsPropertiesFormatOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsPropertiesFormatArgs) ToApplicationGatewayBackendHttpSettingsPropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput)
}

func (i ApplicationGatewayBackendHttpSettingsPropertiesFormatArgs) ToApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput() ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput {
	return i.ToApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsPropertiesFormatArgs) ToApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput).ToApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutputWithContext(ctx)
}

// ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrInput is an input type that accepts ApplicationGatewayBackendHttpSettingsPropertiesFormatArgs, ApplicationGatewayBackendHttpSettingsPropertiesFormatPtr and ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrInput` via:
//
//          ApplicationGatewayBackendHttpSettingsPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput() ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput
	ToApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput
}

type applicationGatewayBackendHttpSettingsPropertiesFormatPtrType ApplicationGatewayBackendHttpSettingsPropertiesFormatArgs

func ApplicationGatewayBackendHttpSettingsPropertiesFormatPtr(v *ApplicationGatewayBackendHttpSettingsPropertiesFormatArgs) ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrInput {
	return (*applicationGatewayBackendHttpSettingsPropertiesFormatPtrType)(v)
}

func (*applicationGatewayBackendHttpSettingsPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayBackendHttpSettingsPropertiesFormat)(nil)).Elem()
}

func (i *applicationGatewayBackendHttpSettingsPropertiesFormatPtrType) ToApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput() ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput {
	return i.ToApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayBackendHttpSettingsPropertiesFormatPtrType) ToApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput)
}

// Properties of Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettingsPropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput) ToApplicationGatewayBackendHttpSettingsPropertiesFormatOutput() ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput) ToApplicationGatewayBackendHttpSettingsPropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput) ToApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput() ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput {
	return o.ToApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput) ToApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormat) *ApplicationGatewayBackendHttpSettingsPropertiesFormat {
		return &v
	}).(ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput)
}

// Cookie name to use for the affinity cookie.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput) AffinityCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormat) *string { return v.AffinityCookieName }).(pulumi.StringPtrOutput)
}

// Array of references to application gateway authentication certificates.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput) AuthenticationCertificates() SubResourceArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormat) []SubResource {
		return v.AuthenticationCertificates
	}).(SubResourceArrayOutput)
}

// Connection draining of the backend http settings resource.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput) ConnectionDraining() ApplicationGatewayConnectionDrainingPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormat) *ApplicationGatewayConnectionDraining {
		return v.ConnectionDraining
	}).(ApplicationGatewayConnectionDrainingPtrOutput)
}

// Cookie based affinity.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput) CookieBasedAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormat) *string { return v.CookieBasedAffinity }).(pulumi.StringPtrOutput)
}

// Host header to be sent to the backend servers.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormat) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormat) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput) PickHostNameFromBackendAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormat) *bool {
		return v.PickHostNameFromBackendAddress
	}).(pulumi.BoolPtrOutput)
}

// The destination port on the backend.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormat) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Probe resource of an application gateway.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput) Probe() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormat) *SubResource { return v.Probe }).(SubResourcePtrOutput)
}

// Whether the probe is enabled. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput) ProbeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormat) *bool { return v.ProbeEnabled }).(pulumi.BoolPtrOutput)
}

// The protocol used to communicate with the backend. Possible values are 'Http' and 'Https'.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormat) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormat) *int { return v.RequestTimeout }).(pulumi.IntPtrOutput)
}

// Array of references to application gateway trusted root certificates.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput) TrustedRootCertificates() SubResourceArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormat) []SubResource {
		return v.TrustedRootCertificates
	}).(SubResourceArrayOutput)
}

type ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayBackendHttpSettingsPropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput) ToApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput() ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput) ToApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput) Elem() ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormat) ApplicationGatewayBackendHttpSettingsPropertiesFormat {
		return *v
	}).(ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput)
}

// Cookie name to use for the affinity cookie.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput) AffinityCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.AffinityCookieName
	}).(pulumi.StringPtrOutput)
}

// Array of references to application gateway authentication certificates.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput) AuthenticationCertificates() SubResourceArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormat) []SubResource {
		if v == nil {
			return nil
		}
		return v.AuthenticationCertificates
	}).(SubResourceArrayOutput)
}

// Connection draining of the backend http settings resource.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput) ConnectionDraining() ApplicationGatewayConnectionDrainingPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormat) *ApplicationGatewayConnectionDraining {
		if v == nil {
			return nil
		}
		return v.ConnectionDraining
	}).(ApplicationGatewayConnectionDrainingPtrOutput)
}

// Cookie based affinity.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput) CookieBasedAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.CookieBasedAffinity
	}).(pulumi.StringPtrOutput)
}

// Host header to be sent to the backend servers.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.HostName
	}).(pulumi.StringPtrOutput)
}

// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput) PickHostNameFromBackendAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.PickHostNameFromBackendAddress
	}).(pulumi.BoolPtrOutput)
}

// The destination port on the backend.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Probe resource of an application gateway.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput) Probe() SubResourcePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.Probe
	}).(SubResourcePtrOutput)
}

// Whether the probe is enabled. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput) ProbeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.ProbeEnabled
	}).(pulumi.BoolPtrOutput)
}

// The protocol used to communicate with the backend. Possible values are 'Http' and 'Https'.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.RequestTimeout
	}).(pulumi.IntPtrOutput)
}

// Array of references to application gateway trusted root certificates.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput) TrustedRootCertificates() SubResourceArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormat) []SubResource {
		if v == nil {
			return nil
		}
		return v.TrustedRootCertificates
	}).(SubResourceArrayOutput)
}

// Properties of Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse struct {
	// Cookie name to use for the affinity cookie.
	AffinityCookieName *string `pulumi:"affinityCookieName"`
	// Array of references to application gateway authentication certificates.
	AuthenticationCertificates []SubResourceResponse `pulumi:"authenticationCertificates"`
	// Connection draining of the backend http settings resource.
	ConnectionDraining *ApplicationGatewayConnectionDrainingResponse `pulumi:"connectionDraining"`
	// Cookie based affinity.
	CookieBasedAffinity *string `pulumi:"cookieBasedAffinity"`
	// Host header to be sent to the backend servers.
	HostName *string `pulumi:"hostName"`
	// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
	Path *string `pulumi:"path"`
	// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
	PickHostNameFromBackendAddress *bool `pulumi:"pickHostNameFromBackendAddress"`
	// The destination port on the backend.
	Port *int `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe *SubResourceResponse `pulumi:"probe"`
	// Whether the probe is enabled. Default value is false.
	ProbeEnabled *bool `pulumi:"probeEnabled"`
	// The protocol used to communicate with the backend. Possible values are 'Http' and 'Https'.
	Protocol *string `pulumi:"protocol"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
	RequestTimeout *int `pulumi:"requestTimeout"`
	// Array of references to application gateway trusted root certificates.
	TrustedRootCertificates []SubResourceResponse `pulumi:"trustedRootCertificates"`
}

// ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseInput is an input type that accepts ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseArgs and ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseInput` via:
//
//          ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseArgs{...}
type ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput() ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput
	ToApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput
}

// Properties of Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseArgs struct {
	// Cookie name to use for the affinity cookie.
	AffinityCookieName pulumi.StringPtrInput `pulumi:"affinityCookieName"`
	// Array of references to application gateway authentication certificates.
	AuthenticationCertificates SubResourceResponseArrayInput `pulumi:"authenticationCertificates"`
	// Connection draining of the backend http settings resource.
	ConnectionDraining ApplicationGatewayConnectionDrainingResponsePtrInput `pulumi:"connectionDraining"`
	// Cookie based affinity.
	CookieBasedAffinity pulumi.StringPtrInput `pulumi:"cookieBasedAffinity"`
	// Host header to be sent to the backend servers.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
	PickHostNameFromBackendAddress pulumi.BoolPtrInput `pulumi:"pickHostNameFromBackendAddress"`
	// The destination port on the backend.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe SubResourceResponsePtrInput `pulumi:"probe"`
	// Whether the probe is enabled. Default value is false.
	ProbeEnabled pulumi.BoolPtrInput `pulumi:"probeEnabled"`
	// The protocol used to communicate with the backend. Possible values are 'Http' and 'Https'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
	RequestTimeout pulumi.IntPtrInput `pulumi:"requestTimeout"`
	// Array of references to application gateway trusted root certificates.
	TrustedRootCertificates SubResourceResponseArrayInput `pulumi:"trustedRootCertificates"`
}

func (ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseArgs) ToApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput() ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput {
	return i.ToApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseArgs) ToApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput)
}

func (i ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseArgs) ToApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput() ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseArgs) ToApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput).ToApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrInput is an input type that accepts ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseArgs, ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtr and ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrInput` via:
//
//          ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput() ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput
	ToApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput
}

type applicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrType ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseArgs

func ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtr(v *ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseArgs) ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrInput {
	return (*applicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrType)(v)
}

func (*applicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse)(nil)).Elem()
}

func (i *applicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrType) ToApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput() ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrType) ToApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput)
}

// Properties of Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput) ToApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput() ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput) ToApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput) ToApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput() ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput {
	return o.ToApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput) ToApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse {
		return &v
	}).(ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput)
}

// Cookie name to use for the affinity cookie.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput) AffinityCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *string {
		return v.AffinityCookieName
	}).(pulumi.StringPtrOutput)
}

// Array of references to application gateway authentication certificates.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput) AuthenticationCertificates() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) []SubResourceResponse {
		return v.AuthenticationCertificates
	}).(SubResourceResponseArrayOutput)
}

// Connection draining of the backend http settings resource.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput) ConnectionDraining() ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *ApplicationGatewayConnectionDrainingResponse {
		return v.ConnectionDraining
	}).(ApplicationGatewayConnectionDrainingResponsePtrOutput)
}

// Cookie based affinity.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput) CookieBasedAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *string {
		return v.CookieBasedAffinity
	}).(pulumi.StringPtrOutput)
}

// Host header to be sent to the backend servers.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput) PickHostNameFromBackendAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *bool {
		return v.PickHostNameFromBackendAddress
	}).(pulumi.BoolPtrOutput)
}

// The destination port on the backend.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Probe resource of an application gateway.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput) Probe() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *SubResourceResponse {
		return v.Probe
	}).(SubResourceResponsePtrOutput)
}

// Whether the probe is enabled. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput) ProbeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *bool { return v.ProbeEnabled }).(pulumi.BoolPtrOutput)
}

// The protocol used to communicate with the backend. Possible values are 'Http' and 'Https'.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *string {
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *int { return v.RequestTimeout }).(pulumi.IntPtrOutput)
}

// Array of references to application gateway trusted root certificates.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput) TrustedRootCertificates() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) []SubResourceResponse {
		return v.TrustedRootCertificates
	}).(SubResourceResponseArrayOutput)
}

type ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput) ToApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput() ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput) ToApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput) Elem() ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse {
		return *v
	}).(ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput)
}

// Cookie name to use for the affinity cookie.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput) AffinityCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.AffinityCookieName
	}).(pulumi.StringPtrOutput)
}

// Array of references to application gateway authentication certificates.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput) AuthenticationCertificates() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.AuthenticationCertificates
	}).(SubResourceResponseArrayOutput)
}

// Connection draining of the backend http settings resource.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput) ConnectionDraining() ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *ApplicationGatewayConnectionDrainingResponse {
		if v == nil {
			return nil
		}
		return v.ConnectionDraining
	}).(ApplicationGatewayConnectionDrainingResponsePtrOutput)
}

// Cookie based affinity.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput) CookieBasedAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.CookieBasedAffinity
	}).(pulumi.StringPtrOutput)
}

// Host header to be sent to the backend servers.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostName
	}).(pulumi.StringPtrOutput)
}

// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput) PickHostNameFromBackendAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.PickHostNameFromBackendAddress
	}).(pulumi.BoolPtrOutput)
}

// The destination port on the backend.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Probe resource of an application gateway.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput) Probe() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.Probe
	}).(SubResourceResponsePtrOutput)
}

// Whether the probe is enabled. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput) ProbeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ProbeEnabled
	}).(pulumi.BoolPtrOutput)
}

// The protocol used to communicate with the backend. Possible values are 'Http' and 'Https'.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.RequestTimeout
	}).(pulumi.IntPtrOutput)
}

// Array of references to application gateway trusted root certificates.
func (o ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput) TrustedRootCertificates() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.TrustedRootCertificates
	}).(SubResourceResponseArrayOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the backend http settings that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of Backend address pool settings of an application gateway.
	Properties *ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayBackendHttpSettingsResponseInput is an input type that accepts ApplicationGatewayBackendHttpSettingsResponseArgs and ApplicationGatewayBackendHttpSettingsResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsResponseInput` via:
//
//          ApplicationGatewayBackendHttpSettingsResponseArgs{...}
type ApplicationGatewayBackendHttpSettingsResponseInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsResponseOutput() ApplicationGatewayBackendHttpSettingsResponseOutput
	ToApplicationGatewayBackendHttpSettingsResponseOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsResponseOutput
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the backend http settings that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of Backend address pool settings of an application gateway.
	Properties ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayBackendHttpSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettingsResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingsResponseArgs) ToApplicationGatewayBackendHttpSettingsResponseOutput() ApplicationGatewayBackendHttpSettingsResponseOutput {
	return i.ToApplicationGatewayBackendHttpSettingsResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsResponseArgs) ToApplicationGatewayBackendHttpSettingsResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsResponseOutput)
}

// ApplicationGatewayBackendHttpSettingsResponseArrayInput is an input type that accepts ApplicationGatewayBackendHttpSettingsResponseArray and ApplicationGatewayBackendHttpSettingsResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsResponseArrayInput` via:
//
//          ApplicationGatewayBackendHttpSettingsResponseArray{ ApplicationGatewayBackendHttpSettingsResponseArgs{...} }
type ApplicationGatewayBackendHttpSettingsResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsResponseArrayOutput() ApplicationGatewayBackendHttpSettingsResponseArrayOutput
	ToApplicationGatewayBackendHttpSettingsResponseArrayOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsResponseArrayOutput
}

type ApplicationGatewayBackendHttpSettingsResponseArray []ApplicationGatewayBackendHttpSettingsResponseInput

func (ApplicationGatewayBackendHttpSettingsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettingsResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingsResponseArray) ToApplicationGatewayBackendHttpSettingsResponseArrayOutput() ApplicationGatewayBackendHttpSettingsResponseArrayOutput {
	return i.ToApplicationGatewayBackendHttpSettingsResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsResponseArray) ToApplicationGatewayBackendHttpSettingsResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsResponseArrayOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettingsResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsResponseOutput) ToApplicationGatewayBackendHttpSettingsResponseOutput() ApplicationGatewayBackendHttpSettingsResponseOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsResponseOutput) ToApplicationGatewayBackendHttpSettingsResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the backend http settings that is unique within an Application Gateway.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of Backend address pool settings of an application gateway.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Properties() ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *ApplicationGatewayBackendHttpSettingsPropertiesFormatResponse {
		return v.Properties
	}).(ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendHttpSettingsResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettingsResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsResponseArrayOutput) ToApplicationGatewayBackendHttpSettingsResponseArrayOutput() ApplicationGatewayBackendHttpSettingsResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsResponseArrayOutput) ToApplicationGatewayBackendHttpSettingsResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendHttpSettingsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendHttpSettingsResponse {
		return vs[0].([]ApplicationGatewayBackendHttpSettingsResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendHttpSettingsResponseOutput)
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDraining struct {
	// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
	DrainTimeoutInSec int `pulumi:"drainTimeoutInSec"`
	// Whether connection draining is enabled or not.
	Enabled bool `pulumi:"enabled"`
}

// ApplicationGatewayConnectionDrainingInput is an input type that accepts ApplicationGatewayConnectionDrainingArgs and ApplicationGatewayConnectionDrainingOutput values.
// You can construct a concrete instance of `ApplicationGatewayConnectionDrainingInput` via:
//
//          ApplicationGatewayConnectionDrainingArgs{...}
type ApplicationGatewayConnectionDrainingInput interface {
	pulumi.Input

	ToApplicationGatewayConnectionDrainingOutput() ApplicationGatewayConnectionDrainingOutput
	ToApplicationGatewayConnectionDrainingOutputWithContext(context.Context) ApplicationGatewayConnectionDrainingOutput
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDrainingArgs struct {
	// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
	DrainTimeoutInSec pulumi.IntInput `pulumi:"drainTimeoutInSec"`
	// Whether connection draining is enabled or not.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ApplicationGatewayConnectionDrainingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayConnectionDraining)(nil)).Elem()
}

func (i ApplicationGatewayConnectionDrainingArgs) ToApplicationGatewayConnectionDrainingOutput() ApplicationGatewayConnectionDrainingOutput {
	return i.ToApplicationGatewayConnectionDrainingOutputWithContext(context.Background())
}

func (i ApplicationGatewayConnectionDrainingArgs) ToApplicationGatewayConnectionDrainingOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayConnectionDrainingOutput)
}

func (i ApplicationGatewayConnectionDrainingArgs) ToApplicationGatewayConnectionDrainingPtrOutput() ApplicationGatewayConnectionDrainingPtrOutput {
	return i.ToApplicationGatewayConnectionDrainingPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayConnectionDrainingArgs) ToApplicationGatewayConnectionDrainingPtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayConnectionDrainingOutput).ToApplicationGatewayConnectionDrainingPtrOutputWithContext(ctx)
}

// ApplicationGatewayConnectionDrainingPtrInput is an input type that accepts ApplicationGatewayConnectionDrainingArgs, ApplicationGatewayConnectionDrainingPtr and ApplicationGatewayConnectionDrainingPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayConnectionDrainingPtrInput` via:
//
//          ApplicationGatewayConnectionDrainingArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayConnectionDrainingPtrInput interface {
	pulumi.Input

	ToApplicationGatewayConnectionDrainingPtrOutput() ApplicationGatewayConnectionDrainingPtrOutput
	ToApplicationGatewayConnectionDrainingPtrOutputWithContext(context.Context) ApplicationGatewayConnectionDrainingPtrOutput
}

type applicationGatewayConnectionDrainingPtrType ApplicationGatewayConnectionDrainingArgs

func ApplicationGatewayConnectionDrainingPtr(v *ApplicationGatewayConnectionDrainingArgs) ApplicationGatewayConnectionDrainingPtrInput {
	return (*applicationGatewayConnectionDrainingPtrType)(v)
}

func (*applicationGatewayConnectionDrainingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayConnectionDraining)(nil)).Elem()
}

func (i *applicationGatewayConnectionDrainingPtrType) ToApplicationGatewayConnectionDrainingPtrOutput() ApplicationGatewayConnectionDrainingPtrOutput {
	return i.ToApplicationGatewayConnectionDrainingPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayConnectionDrainingPtrType) ToApplicationGatewayConnectionDrainingPtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayConnectionDrainingPtrOutput)
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDrainingOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayConnectionDrainingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayConnectionDraining)(nil)).Elem()
}

func (o ApplicationGatewayConnectionDrainingOutput) ToApplicationGatewayConnectionDrainingOutput() ApplicationGatewayConnectionDrainingOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingOutput) ToApplicationGatewayConnectionDrainingOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingOutput) ToApplicationGatewayConnectionDrainingPtrOutput() ApplicationGatewayConnectionDrainingPtrOutput {
	return o.ToApplicationGatewayConnectionDrainingPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayConnectionDrainingOutput) ToApplicationGatewayConnectionDrainingPtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayConnectionDraining) *ApplicationGatewayConnectionDraining {
		return &v
	}).(ApplicationGatewayConnectionDrainingPtrOutput)
}

// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
func (o ApplicationGatewayConnectionDrainingOutput) DrainTimeoutInSec() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayConnectionDraining) int { return v.DrainTimeoutInSec }).(pulumi.IntOutput)
}

// Whether connection draining is enabled or not.
func (o ApplicationGatewayConnectionDrainingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationGatewayConnectionDraining) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ApplicationGatewayConnectionDrainingPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayConnectionDrainingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayConnectionDraining)(nil)).Elem()
}

func (o ApplicationGatewayConnectionDrainingPtrOutput) ToApplicationGatewayConnectionDrainingPtrOutput() ApplicationGatewayConnectionDrainingPtrOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingPtrOutput) ToApplicationGatewayConnectionDrainingPtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingPtrOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingPtrOutput) Elem() ApplicationGatewayConnectionDrainingOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDraining) ApplicationGatewayConnectionDraining { return *v }).(ApplicationGatewayConnectionDrainingOutput)
}

// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
func (o ApplicationGatewayConnectionDrainingPtrOutput) DrainTimeoutInSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDraining) *int {
		if v == nil {
			return nil
		}
		return &v.DrainTimeoutInSec
	}).(pulumi.IntPtrOutput)
}

// Whether connection draining is enabled or not.
func (o ApplicationGatewayConnectionDrainingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDraining) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDrainingResponse struct {
	// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
	DrainTimeoutInSec int `pulumi:"drainTimeoutInSec"`
	// Whether connection draining is enabled or not.
	Enabled bool `pulumi:"enabled"`
}

// ApplicationGatewayConnectionDrainingResponseInput is an input type that accepts ApplicationGatewayConnectionDrainingResponseArgs and ApplicationGatewayConnectionDrainingResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayConnectionDrainingResponseInput` via:
//
//          ApplicationGatewayConnectionDrainingResponseArgs{...}
type ApplicationGatewayConnectionDrainingResponseInput interface {
	pulumi.Input

	ToApplicationGatewayConnectionDrainingResponseOutput() ApplicationGatewayConnectionDrainingResponseOutput
	ToApplicationGatewayConnectionDrainingResponseOutputWithContext(context.Context) ApplicationGatewayConnectionDrainingResponseOutput
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDrainingResponseArgs struct {
	// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
	DrainTimeoutInSec pulumi.IntInput `pulumi:"drainTimeoutInSec"`
	// Whether connection draining is enabled or not.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ApplicationGatewayConnectionDrainingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayConnectionDrainingResponse)(nil)).Elem()
}

func (i ApplicationGatewayConnectionDrainingResponseArgs) ToApplicationGatewayConnectionDrainingResponseOutput() ApplicationGatewayConnectionDrainingResponseOutput {
	return i.ToApplicationGatewayConnectionDrainingResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayConnectionDrainingResponseArgs) ToApplicationGatewayConnectionDrainingResponseOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayConnectionDrainingResponseOutput)
}

func (i ApplicationGatewayConnectionDrainingResponseArgs) ToApplicationGatewayConnectionDrainingResponsePtrOutput() ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return i.ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayConnectionDrainingResponseArgs) ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayConnectionDrainingResponseOutput).ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayConnectionDrainingResponsePtrInput is an input type that accepts ApplicationGatewayConnectionDrainingResponseArgs, ApplicationGatewayConnectionDrainingResponsePtr and ApplicationGatewayConnectionDrainingResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayConnectionDrainingResponsePtrInput` via:
//
//          ApplicationGatewayConnectionDrainingResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayConnectionDrainingResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayConnectionDrainingResponsePtrOutput() ApplicationGatewayConnectionDrainingResponsePtrOutput
	ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(context.Context) ApplicationGatewayConnectionDrainingResponsePtrOutput
}

type applicationGatewayConnectionDrainingResponsePtrType ApplicationGatewayConnectionDrainingResponseArgs

func ApplicationGatewayConnectionDrainingResponsePtr(v *ApplicationGatewayConnectionDrainingResponseArgs) ApplicationGatewayConnectionDrainingResponsePtrInput {
	return (*applicationGatewayConnectionDrainingResponsePtrType)(v)
}

func (*applicationGatewayConnectionDrainingResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayConnectionDrainingResponse)(nil)).Elem()
}

func (i *applicationGatewayConnectionDrainingResponsePtrType) ToApplicationGatewayConnectionDrainingResponsePtrOutput() ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return i.ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayConnectionDrainingResponsePtrType) ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayConnectionDrainingResponsePtrOutput)
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDrainingResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayConnectionDrainingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayConnectionDrainingResponse)(nil)).Elem()
}

func (o ApplicationGatewayConnectionDrainingResponseOutput) ToApplicationGatewayConnectionDrainingResponseOutput() ApplicationGatewayConnectionDrainingResponseOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingResponseOutput) ToApplicationGatewayConnectionDrainingResponseOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingResponseOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingResponseOutput) ToApplicationGatewayConnectionDrainingResponsePtrOutput() ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return o.ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayConnectionDrainingResponseOutput) ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayConnectionDrainingResponse) *ApplicationGatewayConnectionDrainingResponse {
		return &v
	}).(ApplicationGatewayConnectionDrainingResponsePtrOutput)
}

// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
func (o ApplicationGatewayConnectionDrainingResponseOutput) DrainTimeoutInSec() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayConnectionDrainingResponse) int { return v.DrainTimeoutInSec }).(pulumi.IntOutput)
}

// Whether connection draining is enabled or not.
func (o ApplicationGatewayConnectionDrainingResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationGatewayConnectionDrainingResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ApplicationGatewayConnectionDrainingResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayConnectionDrainingResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayConnectionDrainingResponse)(nil)).Elem()
}

func (o ApplicationGatewayConnectionDrainingResponsePtrOutput) ToApplicationGatewayConnectionDrainingResponsePtrOutput() ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingResponsePtrOutput) ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingResponsePtrOutput) Elem() ApplicationGatewayConnectionDrainingResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDrainingResponse) ApplicationGatewayConnectionDrainingResponse {
		return *v
	}).(ApplicationGatewayConnectionDrainingResponseOutput)
}

// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
func (o ApplicationGatewayConnectionDrainingResponsePtrOutput) DrainTimeoutInSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDrainingResponse) *int {
		if v == nil {
			return nil
		}
		return &v.DrainTimeoutInSec
	}).(pulumi.IntPtrOutput)
}

// Whether connection draining is enabled or not.
func (o ApplicationGatewayConnectionDrainingResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDrainingResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Customer error of an application gateway.
type ApplicationGatewayCustomError struct {
	// Error page URL of the application gateway customer error.
	CustomErrorPageUrl *string `pulumi:"customErrorPageUrl"`
	// Status code of the application gateway customer error.
	StatusCode *string `pulumi:"statusCode"`
}

// ApplicationGatewayCustomErrorInput is an input type that accepts ApplicationGatewayCustomErrorArgs and ApplicationGatewayCustomErrorOutput values.
// You can construct a concrete instance of `ApplicationGatewayCustomErrorInput` via:
//
//          ApplicationGatewayCustomErrorArgs{...}
type ApplicationGatewayCustomErrorInput interface {
	pulumi.Input

	ToApplicationGatewayCustomErrorOutput() ApplicationGatewayCustomErrorOutput
	ToApplicationGatewayCustomErrorOutputWithContext(context.Context) ApplicationGatewayCustomErrorOutput
}

// Customer error of an application gateway.
type ApplicationGatewayCustomErrorArgs struct {
	// Error page URL of the application gateway customer error.
	CustomErrorPageUrl pulumi.StringPtrInput `pulumi:"customErrorPageUrl"`
	// Status code of the application gateway customer error.
	StatusCode pulumi.StringPtrInput `pulumi:"statusCode"`
}

func (ApplicationGatewayCustomErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayCustomError)(nil)).Elem()
}

func (i ApplicationGatewayCustomErrorArgs) ToApplicationGatewayCustomErrorOutput() ApplicationGatewayCustomErrorOutput {
	return i.ToApplicationGatewayCustomErrorOutputWithContext(context.Background())
}

func (i ApplicationGatewayCustomErrorArgs) ToApplicationGatewayCustomErrorOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayCustomErrorOutput)
}

// ApplicationGatewayCustomErrorArrayInput is an input type that accepts ApplicationGatewayCustomErrorArray and ApplicationGatewayCustomErrorArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayCustomErrorArrayInput` via:
//
//          ApplicationGatewayCustomErrorArray{ ApplicationGatewayCustomErrorArgs{...} }
type ApplicationGatewayCustomErrorArrayInput interface {
	pulumi.Input

	ToApplicationGatewayCustomErrorArrayOutput() ApplicationGatewayCustomErrorArrayOutput
	ToApplicationGatewayCustomErrorArrayOutputWithContext(context.Context) ApplicationGatewayCustomErrorArrayOutput
}

type ApplicationGatewayCustomErrorArray []ApplicationGatewayCustomErrorInput

func (ApplicationGatewayCustomErrorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayCustomError)(nil)).Elem()
}

func (i ApplicationGatewayCustomErrorArray) ToApplicationGatewayCustomErrorArrayOutput() ApplicationGatewayCustomErrorArrayOutput {
	return i.ToApplicationGatewayCustomErrorArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayCustomErrorArray) ToApplicationGatewayCustomErrorArrayOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayCustomErrorArrayOutput)
}

// Customer error of an application gateway.
type ApplicationGatewayCustomErrorOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayCustomErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayCustomError)(nil)).Elem()
}

func (o ApplicationGatewayCustomErrorOutput) ToApplicationGatewayCustomErrorOutput() ApplicationGatewayCustomErrorOutput {
	return o
}

func (o ApplicationGatewayCustomErrorOutput) ToApplicationGatewayCustomErrorOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorOutput {
	return o
}

// Error page URL of the application gateway customer error.
func (o ApplicationGatewayCustomErrorOutput) CustomErrorPageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayCustomError) *string { return v.CustomErrorPageUrl }).(pulumi.StringPtrOutput)
}

// Status code of the application gateway customer error.
func (o ApplicationGatewayCustomErrorOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayCustomError) *string { return v.StatusCode }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayCustomErrorArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayCustomErrorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayCustomError)(nil)).Elem()
}

func (o ApplicationGatewayCustomErrorArrayOutput) ToApplicationGatewayCustomErrorArrayOutput() ApplicationGatewayCustomErrorArrayOutput {
	return o
}

func (o ApplicationGatewayCustomErrorArrayOutput) ToApplicationGatewayCustomErrorArrayOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorArrayOutput {
	return o
}

func (o ApplicationGatewayCustomErrorArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayCustomErrorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayCustomError {
		return vs[0].([]ApplicationGatewayCustomError)[vs[1].(int)]
	}).(ApplicationGatewayCustomErrorOutput)
}

// Customer error of an application gateway.
type ApplicationGatewayCustomErrorResponse struct {
	// Error page URL of the application gateway customer error.
	CustomErrorPageUrl *string `pulumi:"customErrorPageUrl"`
	// Status code of the application gateway customer error.
	StatusCode *string `pulumi:"statusCode"`
}

// ApplicationGatewayCustomErrorResponseInput is an input type that accepts ApplicationGatewayCustomErrorResponseArgs and ApplicationGatewayCustomErrorResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayCustomErrorResponseInput` via:
//
//          ApplicationGatewayCustomErrorResponseArgs{...}
type ApplicationGatewayCustomErrorResponseInput interface {
	pulumi.Input

	ToApplicationGatewayCustomErrorResponseOutput() ApplicationGatewayCustomErrorResponseOutput
	ToApplicationGatewayCustomErrorResponseOutputWithContext(context.Context) ApplicationGatewayCustomErrorResponseOutput
}

// Customer error of an application gateway.
type ApplicationGatewayCustomErrorResponseArgs struct {
	// Error page URL of the application gateway customer error.
	CustomErrorPageUrl pulumi.StringPtrInput `pulumi:"customErrorPageUrl"`
	// Status code of the application gateway customer error.
	StatusCode pulumi.StringPtrInput `pulumi:"statusCode"`
}

func (ApplicationGatewayCustomErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayCustomErrorResponse)(nil)).Elem()
}

func (i ApplicationGatewayCustomErrorResponseArgs) ToApplicationGatewayCustomErrorResponseOutput() ApplicationGatewayCustomErrorResponseOutput {
	return i.ToApplicationGatewayCustomErrorResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayCustomErrorResponseArgs) ToApplicationGatewayCustomErrorResponseOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayCustomErrorResponseOutput)
}

// ApplicationGatewayCustomErrorResponseArrayInput is an input type that accepts ApplicationGatewayCustomErrorResponseArray and ApplicationGatewayCustomErrorResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayCustomErrorResponseArrayInput` via:
//
//          ApplicationGatewayCustomErrorResponseArray{ ApplicationGatewayCustomErrorResponseArgs{...} }
type ApplicationGatewayCustomErrorResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayCustomErrorResponseArrayOutput() ApplicationGatewayCustomErrorResponseArrayOutput
	ToApplicationGatewayCustomErrorResponseArrayOutputWithContext(context.Context) ApplicationGatewayCustomErrorResponseArrayOutput
}

type ApplicationGatewayCustomErrorResponseArray []ApplicationGatewayCustomErrorResponseInput

func (ApplicationGatewayCustomErrorResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayCustomErrorResponse)(nil)).Elem()
}

func (i ApplicationGatewayCustomErrorResponseArray) ToApplicationGatewayCustomErrorResponseArrayOutput() ApplicationGatewayCustomErrorResponseArrayOutput {
	return i.ToApplicationGatewayCustomErrorResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayCustomErrorResponseArray) ToApplicationGatewayCustomErrorResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayCustomErrorResponseArrayOutput)
}

// Customer error of an application gateway.
type ApplicationGatewayCustomErrorResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayCustomErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayCustomErrorResponse)(nil)).Elem()
}

func (o ApplicationGatewayCustomErrorResponseOutput) ToApplicationGatewayCustomErrorResponseOutput() ApplicationGatewayCustomErrorResponseOutput {
	return o
}

func (o ApplicationGatewayCustomErrorResponseOutput) ToApplicationGatewayCustomErrorResponseOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorResponseOutput {
	return o
}

// Error page URL of the application gateway customer error.
func (o ApplicationGatewayCustomErrorResponseOutput) CustomErrorPageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayCustomErrorResponse) *string { return v.CustomErrorPageUrl }).(pulumi.StringPtrOutput)
}

// Status code of the application gateway customer error.
func (o ApplicationGatewayCustomErrorResponseOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayCustomErrorResponse) *string { return v.StatusCode }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayCustomErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayCustomErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayCustomErrorResponse)(nil)).Elem()
}

func (o ApplicationGatewayCustomErrorResponseArrayOutput) ToApplicationGatewayCustomErrorResponseArrayOutput() ApplicationGatewayCustomErrorResponseArrayOutput {
	return o
}

func (o ApplicationGatewayCustomErrorResponseArrayOutput) ToApplicationGatewayCustomErrorResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorResponseArrayOutput {
	return o
}

func (o ApplicationGatewayCustomErrorResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayCustomErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayCustomErrorResponse {
		return vs[0].([]ApplicationGatewayCustomErrorResponse)[vs[1].(int)]
	}).(ApplicationGatewayCustomErrorResponseOutput)
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroup struct {
	// The name of the rule group that will be disabled.
	RuleGroupName string `pulumi:"ruleGroupName"`
	// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
	Rules []int `pulumi:"rules"`
}

// ApplicationGatewayFirewallDisabledRuleGroupInput is an input type that accepts ApplicationGatewayFirewallDisabledRuleGroupArgs and ApplicationGatewayFirewallDisabledRuleGroupOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallDisabledRuleGroupInput` via:
//
//          ApplicationGatewayFirewallDisabledRuleGroupArgs{...}
type ApplicationGatewayFirewallDisabledRuleGroupInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallDisabledRuleGroupOutput() ApplicationGatewayFirewallDisabledRuleGroupOutput
	ToApplicationGatewayFirewallDisabledRuleGroupOutputWithContext(context.Context) ApplicationGatewayFirewallDisabledRuleGroupOutput
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroupArgs struct {
	// The name of the rule group that will be disabled.
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
	// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
	Rules pulumi.IntArrayInput `pulumi:"rules"`
}

func (ApplicationGatewayFirewallDisabledRuleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallDisabledRuleGroup)(nil)).Elem()
}

func (i ApplicationGatewayFirewallDisabledRuleGroupArgs) ToApplicationGatewayFirewallDisabledRuleGroupOutput() ApplicationGatewayFirewallDisabledRuleGroupOutput {
	return i.ToApplicationGatewayFirewallDisabledRuleGroupOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallDisabledRuleGroupArgs) ToApplicationGatewayFirewallDisabledRuleGroupOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallDisabledRuleGroupOutput)
}

// ApplicationGatewayFirewallDisabledRuleGroupArrayInput is an input type that accepts ApplicationGatewayFirewallDisabledRuleGroupArray and ApplicationGatewayFirewallDisabledRuleGroupArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallDisabledRuleGroupArrayInput` via:
//
//          ApplicationGatewayFirewallDisabledRuleGroupArray{ ApplicationGatewayFirewallDisabledRuleGroupArgs{...} }
type ApplicationGatewayFirewallDisabledRuleGroupArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallDisabledRuleGroupArrayOutput() ApplicationGatewayFirewallDisabledRuleGroupArrayOutput
	ToApplicationGatewayFirewallDisabledRuleGroupArrayOutputWithContext(context.Context) ApplicationGatewayFirewallDisabledRuleGroupArrayOutput
}

type ApplicationGatewayFirewallDisabledRuleGroupArray []ApplicationGatewayFirewallDisabledRuleGroupInput

func (ApplicationGatewayFirewallDisabledRuleGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallDisabledRuleGroup)(nil)).Elem()
}

func (i ApplicationGatewayFirewallDisabledRuleGroupArray) ToApplicationGatewayFirewallDisabledRuleGroupArrayOutput() ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return i.ToApplicationGatewayFirewallDisabledRuleGroupArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallDisabledRuleGroupArray) ToApplicationGatewayFirewallDisabledRuleGroupArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallDisabledRuleGroupArrayOutput)
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroupOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallDisabledRuleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallDisabledRuleGroup)(nil)).Elem()
}

func (o ApplicationGatewayFirewallDisabledRuleGroupOutput) ToApplicationGatewayFirewallDisabledRuleGroupOutput() ApplicationGatewayFirewallDisabledRuleGroupOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupOutput) ToApplicationGatewayFirewallDisabledRuleGroupOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupOutput {
	return o
}

// The name of the rule group that will be disabled.
func (o ApplicationGatewayFirewallDisabledRuleGroupOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallDisabledRuleGroup) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
func (o ApplicationGatewayFirewallDisabledRuleGroupOutput) Rules() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallDisabledRuleGroup) []int { return v.Rules }).(pulumi.IntArrayOutput)
}

type ApplicationGatewayFirewallDisabledRuleGroupArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallDisabledRuleGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallDisabledRuleGroup)(nil)).Elem()
}

func (o ApplicationGatewayFirewallDisabledRuleGroupArrayOutput) ToApplicationGatewayFirewallDisabledRuleGroupArrayOutput() ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupArrayOutput) ToApplicationGatewayFirewallDisabledRuleGroupArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFirewallDisabledRuleGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFirewallDisabledRuleGroup {
		return vs[0].([]ApplicationGatewayFirewallDisabledRuleGroup)[vs[1].(int)]
	}).(ApplicationGatewayFirewallDisabledRuleGroupOutput)
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroupResponse struct {
	// The name of the rule group that will be disabled.
	RuleGroupName string `pulumi:"ruleGroupName"`
	// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
	Rules []int `pulumi:"rules"`
}

// ApplicationGatewayFirewallDisabledRuleGroupResponseInput is an input type that accepts ApplicationGatewayFirewallDisabledRuleGroupResponseArgs and ApplicationGatewayFirewallDisabledRuleGroupResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallDisabledRuleGroupResponseInput` via:
//
//          ApplicationGatewayFirewallDisabledRuleGroupResponseArgs{...}
type ApplicationGatewayFirewallDisabledRuleGroupResponseInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallDisabledRuleGroupResponseOutput() ApplicationGatewayFirewallDisabledRuleGroupResponseOutput
	ToApplicationGatewayFirewallDisabledRuleGroupResponseOutputWithContext(context.Context) ApplicationGatewayFirewallDisabledRuleGroupResponseOutput
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroupResponseArgs struct {
	// The name of the rule group that will be disabled.
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
	// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
	Rules pulumi.IntArrayInput `pulumi:"rules"`
}

func (ApplicationGatewayFirewallDisabledRuleGroupResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallDisabledRuleGroupResponse)(nil)).Elem()
}

func (i ApplicationGatewayFirewallDisabledRuleGroupResponseArgs) ToApplicationGatewayFirewallDisabledRuleGroupResponseOutput() ApplicationGatewayFirewallDisabledRuleGroupResponseOutput {
	return i.ToApplicationGatewayFirewallDisabledRuleGroupResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallDisabledRuleGroupResponseArgs) ToApplicationGatewayFirewallDisabledRuleGroupResponseOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallDisabledRuleGroupResponseOutput)
}

// ApplicationGatewayFirewallDisabledRuleGroupResponseArrayInput is an input type that accepts ApplicationGatewayFirewallDisabledRuleGroupResponseArray and ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallDisabledRuleGroupResponseArrayInput` via:
//
//          ApplicationGatewayFirewallDisabledRuleGroupResponseArray{ ApplicationGatewayFirewallDisabledRuleGroupResponseArgs{...} }
type ApplicationGatewayFirewallDisabledRuleGroupResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput() ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput
	ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutputWithContext(context.Context) ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput
}

type ApplicationGatewayFirewallDisabledRuleGroupResponseArray []ApplicationGatewayFirewallDisabledRuleGroupResponseInput

func (ApplicationGatewayFirewallDisabledRuleGroupResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallDisabledRuleGroupResponse)(nil)).Elem()
}

func (i ApplicationGatewayFirewallDisabledRuleGroupResponseArray) ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput() ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput {
	return i.ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallDisabledRuleGroupResponseArray) ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput)
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroupResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallDisabledRuleGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallDisabledRuleGroupResponse)(nil)).Elem()
}

func (o ApplicationGatewayFirewallDisabledRuleGroupResponseOutput) ToApplicationGatewayFirewallDisabledRuleGroupResponseOutput() ApplicationGatewayFirewallDisabledRuleGroupResponseOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupResponseOutput) ToApplicationGatewayFirewallDisabledRuleGroupResponseOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupResponseOutput {
	return o
}

// The name of the rule group that will be disabled.
func (o ApplicationGatewayFirewallDisabledRuleGroupResponseOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallDisabledRuleGroupResponse) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
func (o ApplicationGatewayFirewallDisabledRuleGroupResponseOutput) Rules() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallDisabledRuleGroupResponse) []int { return v.Rules }).(pulumi.IntArrayOutput)
}

type ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallDisabledRuleGroupResponse)(nil)).Elem()
}

func (o ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput) ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput() ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput) ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFirewallDisabledRuleGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFirewallDisabledRuleGroupResponse {
		return vs[0].([]ApplicationGatewayFirewallDisabledRuleGroupResponse)[vs[1].(int)]
	}).(ApplicationGatewayFirewallDisabledRuleGroupResponseOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check
type ApplicationGatewayFirewallExclusion struct {
	// The variable to be excluded.
	MatchVariable string `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
	Selector string `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
	SelectorMatchOperator string `pulumi:"selectorMatchOperator"`
}

// ApplicationGatewayFirewallExclusionInput is an input type that accepts ApplicationGatewayFirewallExclusionArgs and ApplicationGatewayFirewallExclusionOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallExclusionInput` via:
//
//          ApplicationGatewayFirewallExclusionArgs{...}
type ApplicationGatewayFirewallExclusionInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallExclusionOutput() ApplicationGatewayFirewallExclusionOutput
	ToApplicationGatewayFirewallExclusionOutputWithContext(context.Context) ApplicationGatewayFirewallExclusionOutput
}

// Allow to exclude some variable satisfy the condition for the WAF check
type ApplicationGatewayFirewallExclusionArgs struct {
	// The variable to be excluded.
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
	Selector pulumi.StringInput `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
	SelectorMatchOperator pulumi.StringInput `pulumi:"selectorMatchOperator"`
}

func (ApplicationGatewayFirewallExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallExclusion)(nil)).Elem()
}

func (i ApplicationGatewayFirewallExclusionArgs) ToApplicationGatewayFirewallExclusionOutput() ApplicationGatewayFirewallExclusionOutput {
	return i.ToApplicationGatewayFirewallExclusionOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallExclusionArgs) ToApplicationGatewayFirewallExclusionOutputWithContext(ctx context.Context) ApplicationGatewayFirewallExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallExclusionOutput)
}

// ApplicationGatewayFirewallExclusionArrayInput is an input type that accepts ApplicationGatewayFirewallExclusionArray and ApplicationGatewayFirewallExclusionArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallExclusionArrayInput` via:
//
//          ApplicationGatewayFirewallExclusionArray{ ApplicationGatewayFirewallExclusionArgs{...} }
type ApplicationGatewayFirewallExclusionArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallExclusionArrayOutput() ApplicationGatewayFirewallExclusionArrayOutput
	ToApplicationGatewayFirewallExclusionArrayOutputWithContext(context.Context) ApplicationGatewayFirewallExclusionArrayOutput
}

type ApplicationGatewayFirewallExclusionArray []ApplicationGatewayFirewallExclusionInput

func (ApplicationGatewayFirewallExclusionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallExclusion)(nil)).Elem()
}

func (i ApplicationGatewayFirewallExclusionArray) ToApplicationGatewayFirewallExclusionArrayOutput() ApplicationGatewayFirewallExclusionArrayOutput {
	return i.ToApplicationGatewayFirewallExclusionArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallExclusionArray) ToApplicationGatewayFirewallExclusionArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallExclusionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallExclusionArrayOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check
type ApplicationGatewayFirewallExclusionOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallExclusion)(nil)).Elem()
}

func (o ApplicationGatewayFirewallExclusionOutput) ToApplicationGatewayFirewallExclusionOutput() ApplicationGatewayFirewallExclusionOutput {
	return o
}

func (o ApplicationGatewayFirewallExclusionOutput) ToApplicationGatewayFirewallExclusionOutputWithContext(ctx context.Context) ApplicationGatewayFirewallExclusionOutput {
	return o
}

// The variable to be excluded.
func (o ApplicationGatewayFirewallExclusionOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallExclusion) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
func (o ApplicationGatewayFirewallExclusionOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallExclusion) string { return v.Selector }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
func (o ApplicationGatewayFirewallExclusionOutput) SelectorMatchOperator() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallExclusion) string { return v.SelectorMatchOperator }).(pulumi.StringOutput)
}

type ApplicationGatewayFirewallExclusionArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallExclusionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallExclusion)(nil)).Elem()
}

func (o ApplicationGatewayFirewallExclusionArrayOutput) ToApplicationGatewayFirewallExclusionArrayOutput() ApplicationGatewayFirewallExclusionArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallExclusionArrayOutput) ToApplicationGatewayFirewallExclusionArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallExclusionArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallExclusionArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFirewallExclusionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFirewallExclusion {
		return vs[0].([]ApplicationGatewayFirewallExclusion)[vs[1].(int)]
	}).(ApplicationGatewayFirewallExclusionOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check
type ApplicationGatewayFirewallExclusionResponse struct {
	// The variable to be excluded.
	MatchVariable string `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
	Selector string `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
	SelectorMatchOperator string `pulumi:"selectorMatchOperator"`
}

// ApplicationGatewayFirewallExclusionResponseInput is an input type that accepts ApplicationGatewayFirewallExclusionResponseArgs and ApplicationGatewayFirewallExclusionResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallExclusionResponseInput` via:
//
//          ApplicationGatewayFirewallExclusionResponseArgs{...}
type ApplicationGatewayFirewallExclusionResponseInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallExclusionResponseOutput() ApplicationGatewayFirewallExclusionResponseOutput
	ToApplicationGatewayFirewallExclusionResponseOutputWithContext(context.Context) ApplicationGatewayFirewallExclusionResponseOutput
}

// Allow to exclude some variable satisfy the condition for the WAF check
type ApplicationGatewayFirewallExclusionResponseArgs struct {
	// The variable to be excluded.
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
	Selector pulumi.StringInput `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
	SelectorMatchOperator pulumi.StringInput `pulumi:"selectorMatchOperator"`
}

func (ApplicationGatewayFirewallExclusionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallExclusionResponse)(nil)).Elem()
}

func (i ApplicationGatewayFirewallExclusionResponseArgs) ToApplicationGatewayFirewallExclusionResponseOutput() ApplicationGatewayFirewallExclusionResponseOutput {
	return i.ToApplicationGatewayFirewallExclusionResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallExclusionResponseArgs) ToApplicationGatewayFirewallExclusionResponseOutputWithContext(ctx context.Context) ApplicationGatewayFirewallExclusionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallExclusionResponseOutput)
}

// ApplicationGatewayFirewallExclusionResponseArrayInput is an input type that accepts ApplicationGatewayFirewallExclusionResponseArray and ApplicationGatewayFirewallExclusionResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallExclusionResponseArrayInput` via:
//
//          ApplicationGatewayFirewallExclusionResponseArray{ ApplicationGatewayFirewallExclusionResponseArgs{...} }
type ApplicationGatewayFirewallExclusionResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallExclusionResponseArrayOutput() ApplicationGatewayFirewallExclusionResponseArrayOutput
	ToApplicationGatewayFirewallExclusionResponseArrayOutputWithContext(context.Context) ApplicationGatewayFirewallExclusionResponseArrayOutput
}

type ApplicationGatewayFirewallExclusionResponseArray []ApplicationGatewayFirewallExclusionResponseInput

func (ApplicationGatewayFirewallExclusionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallExclusionResponse)(nil)).Elem()
}

func (i ApplicationGatewayFirewallExclusionResponseArray) ToApplicationGatewayFirewallExclusionResponseArrayOutput() ApplicationGatewayFirewallExclusionResponseArrayOutput {
	return i.ToApplicationGatewayFirewallExclusionResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallExclusionResponseArray) ToApplicationGatewayFirewallExclusionResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallExclusionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallExclusionResponseArrayOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check
type ApplicationGatewayFirewallExclusionResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallExclusionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallExclusionResponse)(nil)).Elem()
}

func (o ApplicationGatewayFirewallExclusionResponseOutput) ToApplicationGatewayFirewallExclusionResponseOutput() ApplicationGatewayFirewallExclusionResponseOutput {
	return o
}

func (o ApplicationGatewayFirewallExclusionResponseOutput) ToApplicationGatewayFirewallExclusionResponseOutputWithContext(ctx context.Context) ApplicationGatewayFirewallExclusionResponseOutput {
	return o
}

// The variable to be excluded.
func (o ApplicationGatewayFirewallExclusionResponseOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallExclusionResponse) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
func (o ApplicationGatewayFirewallExclusionResponseOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallExclusionResponse) string { return v.Selector }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
func (o ApplicationGatewayFirewallExclusionResponseOutput) SelectorMatchOperator() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallExclusionResponse) string { return v.SelectorMatchOperator }).(pulumi.StringOutput)
}

type ApplicationGatewayFirewallExclusionResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallExclusionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallExclusionResponse)(nil)).Elem()
}

func (o ApplicationGatewayFirewallExclusionResponseArrayOutput) ToApplicationGatewayFirewallExclusionResponseArrayOutput() ApplicationGatewayFirewallExclusionResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallExclusionResponseArrayOutput) ToApplicationGatewayFirewallExclusionResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallExclusionResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallExclusionResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFirewallExclusionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFirewallExclusionResponse {
		return vs[0].([]ApplicationGatewayFirewallExclusionResponse)[vs[1].(int)]
	}).(ApplicationGatewayFirewallExclusionResponseOutput)
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfiguration struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the frontend IP configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of Frontend IP configuration of an application gateway.
	Properties *ApplicationGatewayFrontendIPConfigurationPropertiesFormat `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayFrontendIPConfigurationInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationArgs and ApplicationGatewayFrontendIPConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationInput` via:
//
//          ApplicationGatewayFrontendIPConfigurationArgs{...}
type ApplicationGatewayFrontendIPConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationOutput() ApplicationGatewayFrontendIPConfigurationOutput
	ToApplicationGatewayFrontendIPConfigurationOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationOutput
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the frontend IP configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of Frontend IP configuration of an application gateway.
	Properties ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayFrontendIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIPConfigurationArgs) ToApplicationGatewayFrontendIPConfigurationOutput() ApplicationGatewayFrontendIPConfigurationOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationArgs) ToApplicationGatewayFrontendIPConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationOutput)
}

// ApplicationGatewayFrontendIPConfigurationArrayInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationArray and ApplicationGatewayFrontendIPConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationArrayInput` via:
//
//          ApplicationGatewayFrontendIPConfigurationArray{ ApplicationGatewayFrontendIPConfigurationArgs{...} }
type ApplicationGatewayFrontendIPConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationArrayOutput() ApplicationGatewayFrontendIPConfigurationArrayOutput
	ToApplicationGatewayFrontendIPConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationArrayOutput
}

type ApplicationGatewayFrontendIPConfigurationArray []ApplicationGatewayFrontendIPConfigurationInput

func (ApplicationGatewayFrontendIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIPConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIPConfigurationArray) ToApplicationGatewayFrontendIPConfigurationArrayOutput() ApplicationGatewayFrontendIPConfigurationArrayOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationArray) ToApplicationGatewayFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationArrayOutput)
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationOutput) ToApplicationGatewayFrontendIPConfigurationOutput() ApplicationGatewayFrontendIPConfigurationOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationOutput) ToApplicationGatewayFrontendIPConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayFrontendIPConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayFrontendIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the frontend IP configuration that is unique within an Application Gateway.
func (o ApplicationGatewayFrontendIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of Frontend IP configuration of an application gateway.
func (o ApplicationGatewayFrontendIPConfigurationOutput) Properties() ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *ApplicationGatewayFrontendIPConfigurationPropertiesFormat {
		return v.Properties
	}).(ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayFrontendIPConfigurationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayFrontendIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIPConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationArrayOutput) ToApplicationGatewayFrontendIPConfigurationArrayOutput() ApplicationGatewayFrontendIPConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationArrayOutput) ToApplicationGatewayFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendIPConfiguration {
		return vs[0].([]ApplicationGatewayFrontendIPConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayFrontendIPConfigurationOutput)
}

// Properties of Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationPropertiesFormat struct {
	// PrivateIPAddress of the network interface IP Configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// PrivateIP allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Reference of the PublicIP resource.
	PublicIPAddress *SubResource `pulumi:"publicIPAddress"`
	// Reference of the subnet resource.
	Subnet *SubResource `pulumi:"subnet"`
}

// ApplicationGatewayFrontendIPConfigurationPropertiesFormatInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationPropertiesFormatArgs and ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationPropertiesFormatInput` via:
//
//          ApplicationGatewayFrontendIPConfigurationPropertiesFormatArgs{...}
type ApplicationGatewayFrontendIPConfigurationPropertiesFormatInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput() ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput
	ToApplicationGatewayFrontendIPConfigurationPropertiesFormatOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput
}

// Properties of Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationPropertiesFormatArgs struct {
	// PrivateIPAddress of the network interface IP Configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// PrivateIP allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Reference of the PublicIP resource.
	PublicIPAddress SubResourcePtrInput `pulumi:"publicIPAddress"`
	// Reference of the subnet resource.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
}

func (ApplicationGatewayFrontendIPConfigurationPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIPConfigurationPropertiesFormatArgs) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput() ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationPropertiesFormatOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationPropertiesFormatArgs) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput)
}

func (i ApplicationGatewayFrontendIPConfigurationPropertiesFormatArgs) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput() ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationPropertiesFormatArgs) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput).ToApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutputWithContext(ctx)
}

// ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationPropertiesFormatArgs, ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtr and ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrInput` via:
//
//          ApplicationGatewayFrontendIPConfigurationPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput() ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput
	ToApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput
}

type applicationGatewayFrontendIPConfigurationPropertiesFormatPtrType ApplicationGatewayFrontendIPConfigurationPropertiesFormatArgs

func ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtr(v *ApplicationGatewayFrontendIPConfigurationPropertiesFormatArgs) ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrInput {
	return (*applicationGatewayFrontendIPConfigurationPropertiesFormatPtrType)(v)
}

func (*applicationGatewayFrontendIPConfigurationPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayFrontendIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (i *applicationGatewayFrontendIPConfigurationPropertiesFormatPtrType) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput() ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayFrontendIPConfigurationPropertiesFormatPtrType) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput)
}

// Properties of Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput() ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput() ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput {
	return o.ToApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationPropertiesFormat) *ApplicationGatewayFrontendIPConfigurationPropertiesFormat {
		return &v
	}).(ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput)
}

// PrivateIPAddress of the network interface IP Configuration.
func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationPropertiesFormat) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// PrivateIP allocation method.
func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationPropertiesFormat) *string {
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Reference of the PublicIP resource.
func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput) PublicIPAddress() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationPropertiesFormat) *SubResource {
		return v.PublicIPAddress
	}).(SubResourcePtrOutput)
}

// Reference of the subnet resource.
func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationPropertiesFormat) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

type ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayFrontendIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput() ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput) Elem() ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput {
	return o.ApplyT(func(v *ApplicationGatewayFrontendIPConfigurationPropertiesFormat) ApplicationGatewayFrontendIPConfigurationPropertiesFormat {
		return *v
	}).(ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput)
}

// PrivateIPAddress of the network interface IP Configuration.
func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayFrontendIPConfigurationPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// PrivateIP allocation method.
func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayFrontendIPConfigurationPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayFrontendIPConfigurationPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Reference of the PublicIP resource.
func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput) PublicIPAddress() SubResourcePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayFrontendIPConfigurationPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(SubResourcePtrOutput)
}

// Reference of the subnet resource.
func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayFrontendIPConfigurationPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubResourcePtrOutput)
}

// Properties of Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse struct {
	// PrivateIPAddress of the network interface IP Configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// PrivateIP allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Reference of the PublicIP resource.
	PublicIPAddress *SubResourceResponse `pulumi:"publicIPAddress"`
	// Reference of the subnet resource.
	Subnet *SubResourceResponse `pulumi:"subnet"`
}

// ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseArgs and ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseInput` via:
//
//          ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseArgs{...}
type ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput() ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput
	ToApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput
}

// Properties of Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseArgs struct {
	// PrivateIPAddress of the network interface IP Configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// PrivateIP allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Reference of the PublicIP resource.
	PublicIPAddress SubResourceResponsePtrInput `pulumi:"publicIPAddress"`
	// Reference of the subnet resource.
	Subnet SubResourceResponsePtrInput `pulumi:"subnet"`
}

func (ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseArgs) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput() ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseArgs) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput)
}

func (i ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseArgs) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput() ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseArgs) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput).ToApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseArgs, ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtr and ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrInput` via:
//
//          ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput() ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput
	ToApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput
}

type applicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrType ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseArgs

func ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtr(v *ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseArgs) ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrInput {
	return (*applicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrType)(v)
}

func (*applicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (i *applicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrType) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput() ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrType) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput)
}

// Properties of Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput() ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput() ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ToApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse) *ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse {
		return &v
	}).(ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput)
}

// PrivateIPAddress of the network interface IP Configuration.
func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse) *string {
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// PrivateIP allocation method.
func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse) *string {
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse) *string {
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Reference of the PublicIP resource.
func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput) PublicIPAddress() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse) *SubResourceResponse {
		return v.PublicIPAddress
	}).(SubResourceResponsePtrOutput)
}

// Reference of the subnet resource.
func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse) *SubResourceResponse {
		return v.Subnet
	}).(SubResourceResponsePtrOutput)
}

type ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput() ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput) ToApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput) Elem() ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse) ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse {
		return *v
	}).(ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput)
}

// PrivateIPAddress of the network interface IP Configuration.
func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// PrivateIP allocation method.
func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Reference of the PublicIP resource.
func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput) PublicIPAddress() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(SubResourceResponsePtrOutput)
}

// Reference of the subnet resource.
func (o ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubResourceResponsePtrOutput)
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the frontend IP configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of Frontend IP configuration of an application gateway.
	Properties *ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayFrontendIPConfigurationResponseInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationResponseArgs and ApplicationGatewayFrontendIPConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationResponseInput` via:
//
//          ApplicationGatewayFrontendIPConfigurationResponseArgs{...}
type ApplicationGatewayFrontendIPConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationResponseOutput() ApplicationGatewayFrontendIPConfigurationResponseOutput
	ToApplicationGatewayFrontendIPConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationResponseOutput
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the frontend IP configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of Frontend IP configuration of an application gateway.
	Properties ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayFrontendIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIPConfigurationResponseArgs) ToApplicationGatewayFrontendIPConfigurationResponseOutput() ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationResponseArgs) ToApplicationGatewayFrontendIPConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationResponseOutput)
}

// ApplicationGatewayFrontendIPConfigurationResponseArrayInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationResponseArray and ApplicationGatewayFrontendIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationResponseArrayInput` via:
//
//          ApplicationGatewayFrontendIPConfigurationResponseArray{ ApplicationGatewayFrontendIPConfigurationResponseArgs{...} }
type ApplicationGatewayFrontendIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationResponseArrayOutput() ApplicationGatewayFrontendIPConfigurationResponseArrayOutput
	ToApplicationGatewayFrontendIPConfigurationResponseArrayOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationResponseArrayOutput
}

type ApplicationGatewayFrontendIPConfigurationResponseArray []ApplicationGatewayFrontendIPConfigurationResponseInput

func (ApplicationGatewayFrontendIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIPConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIPConfigurationResponseArray) ToApplicationGatewayFrontendIPConfigurationResponseArrayOutput() ApplicationGatewayFrontendIPConfigurationResponseArrayOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationResponseArray) ToApplicationGatewayFrontendIPConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationResponseArrayOutput)
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) ToApplicationGatewayFrontendIPConfigurationResponseOutput() ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) ToApplicationGatewayFrontendIPConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the frontend IP configuration that is unique within an Application Gateway.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of Frontend IP configuration of an application gateway.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Properties() ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponse {
		return v.Properties
	}).(ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayFrontendIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIPConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationResponseArrayOutput) ToApplicationGatewayFrontendIPConfigurationResponseArrayOutput() ApplicationGatewayFrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationResponseArrayOutput) ToApplicationGatewayFrontendIPConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendIPConfigurationResponse {
		return vs[0].([]ApplicationGatewayFrontendIPConfigurationResponse)[vs[1].(int)]
	}).(ApplicationGatewayFrontendIPConfigurationResponseOutput)
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPort struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the frontend port that is unique within an Application Gateway
	Name *string `pulumi:"name"`
	// Properties of Frontend port of an application gateway.
	Properties *ApplicationGatewayFrontendPortPropertiesFormat `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayFrontendPortInput is an input type that accepts ApplicationGatewayFrontendPortArgs and ApplicationGatewayFrontendPortOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortInput` via:
//
//          ApplicationGatewayFrontendPortArgs{...}
type ApplicationGatewayFrontendPortInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortOutput() ApplicationGatewayFrontendPortOutput
	ToApplicationGatewayFrontendPortOutputWithContext(context.Context) ApplicationGatewayFrontendPortOutput
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the frontend port that is unique within an Application Gateway
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of Frontend port of an application gateway.
	Properties ApplicationGatewayFrontendPortPropertiesFormatPtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayFrontendPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortArgs) ToApplicationGatewayFrontendPortOutput() ApplicationGatewayFrontendPortOutput {
	return i.ToApplicationGatewayFrontendPortOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortArgs) ToApplicationGatewayFrontendPortOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortOutput)
}

// ApplicationGatewayFrontendPortArrayInput is an input type that accepts ApplicationGatewayFrontendPortArray and ApplicationGatewayFrontendPortArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortArrayInput` via:
//
//          ApplicationGatewayFrontendPortArray{ ApplicationGatewayFrontendPortArgs{...} }
type ApplicationGatewayFrontendPortArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortArrayOutput() ApplicationGatewayFrontendPortArrayOutput
	ToApplicationGatewayFrontendPortArrayOutputWithContext(context.Context) ApplicationGatewayFrontendPortArrayOutput
}

type ApplicationGatewayFrontendPortArray []ApplicationGatewayFrontendPortInput

func (ApplicationGatewayFrontendPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortArray) ToApplicationGatewayFrontendPortArrayOutput() ApplicationGatewayFrontendPortArrayOutput {
	return i.ToApplicationGatewayFrontendPortArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortArray) ToApplicationGatewayFrontendPortArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortArrayOutput)
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortOutput) ToApplicationGatewayFrontendPortOutput() ApplicationGatewayFrontendPortOutput {
	return o
}

func (o ApplicationGatewayFrontendPortOutput) ToApplicationGatewayFrontendPortOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayFrontendPortOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayFrontendPortOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the frontend port that is unique within an Application Gateway
func (o ApplicationGatewayFrontendPortOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of Frontend port of an application gateway.
func (o ApplicationGatewayFrontendPortOutput) Properties() ApplicationGatewayFrontendPortPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *ApplicationGatewayFrontendPortPropertiesFormat {
		return v.Properties
	}).(ApplicationGatewayFrontendPortPropertiesFormatPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayFrontendPortOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayFrontendPortArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortArrayOutput) ToApplicationGatewayFrontendPortArrayOutput() ApplicationGatewayFrontendPortArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortArrayOutput) ToApplicationGatewayFrontendPortArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendPort {
		return vs[0].([]ApplicationGatewayFrontendPort)[vs[1].(int)]
	}).(ApplicationGatewayFrontendPortOutput)
}

// Properties of Frontend port of an application gateway.
type ApplicationGatewayFrontendPortPropertiesFormat struct {
	// Frontend port
	Port *int `pulumi:"port"`
	// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ApplicationGatewayFrontendPortPropertiesFormatInput is an input type that accepts ApplicationGatewayFrontendPortPropertiesFormatArgs and ApplicationGatewayFrontendPortPropertiesFormatOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortPropertiesFormatInput` via:
//
//          ApplicationGatewayFrontendPortPropertiesFormatArgs{...}
type ApplicationGatewayFrontendPortPropertiesFormatInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortPropertiesFormatOutput() ApplicationGatewayFrontendPortPropertiesFormatOutput
	ToApplicationGatewayFrontendPortPropertiesFormatOutputWithContext(context.Context) ApplicationGatewayFrontendPortPropertiesFormatOutput
}

// Properties of Frontend port of an application gateway.
type ApplicationGatewayFrontendPortPropertiesFormatArgs struct {
	// Frontend port
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ApplicationGatewayFrontendPortPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPortPropertiesFormat)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortPropertiesFormatArgs) ToApplicationGatewayFrontendPortPropertiesFormatOutput() ApplicationGatewayFrontendPortPropertiesFormatOutput {
	return i.ToApplicationGatewayFrontendPortPropertiesFormatOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortPropertiesFormatArgs) ToApplicationGatewayFrontendPortPropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortPropertiesFormatOutput)
}

func (i ApplicationGatewayFrontendPortPropertiesFormatArgs) ToApplicationGatewayFrontendPortPropertiesFormatPtrOutput() ApplicationGatewayFrontendPortPropertiesFormatPtrOutput {
	return i.ToApplicationGatewayFrontendPortPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortPropertiesFormatArgs) ToApplicationGatewayFrontendPortPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortPropertiesFormatOutput).ToApplicationGatewayFrontendPortPropertiesFormatPtrOutputWithContext(ctx)
}

// ApplicationGatewayFrontendPortPropertiesFormatPtrInput is an input type that accepts ApplicationGatewayFrontendPortPropertiesFormatArgs, ApplicationGatewayFrontendPortPropertiesFormatPtr and ApplicationGatewayFrontendPortPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortPropertiesFormatPtrInput` via:
//
//          ApplicationGatewayFrontendPortPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayFrontendPortPropertiesFormatPtrInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortPropertiesFormatPtrOutput() ApplicationGatewayFrontendPortPropertiesFormatPtrOutput
	ToApplicationGatewayFrontendPortPropertiesFormatPtrOutputWithContext(context.Context) ApplicationGatewayFrontendPortPropertiesFormatPtrOutput
}

type applicationGatewayFrontendPortPropertiesFormatPtrType ApplicationGatewayFrontendPortPropertiesFormatArgs

func ApplicationGatewayFrontendPortPropertiesFormatPtr(v *ApplicationGatewayFrontendPortPropertiesFormatArgs) ApplicationGatewayFrontendPortPropertiesFormatPtrInput {
	return (*applicationGatewayFrontendPortPropertiesFormatPtrType)(v)
}

func (*applicationGatewayFrontendPortPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayFrontendPortPropertiesFormat)(nil)).Elem()
}

func (i *applicationGatewayFrontendPortPropertiesFormatPtrType) ToApplicationGatewayFrontendPortPropertiesFormatPtrOutput() ApplicationGatewayFrontendPortPropertiesFormatPtrOutput {
	return i.ToApplicationGatewayFrontendPortPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayFrontendPortPropertiesFormatPtrType) ToApplicationGatewayFrontendPortPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortPropertiesFormatPtrOutput)
}

// Properties of Frontend port of an application gateway.
type ApplicationGatewayFrontendPortPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPortPropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortPropertiesFormatOutput) ToApplicationGatewayFrontendPortPropertiesFormatOutput() ApplicationGatewayFrontendPortPropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayFrontendPortPropertiesFormatOutput) ToApplicationGatewayFrontendPortPropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortPropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayFrontendPortPropertiesFormatOutput) ToApplicationGatewayFrontendPortPropertiesFormatPtrOutput() ApplicationGatewayFrontendPortPropertiesFormatPtrOutput {
	return o.ToApplicationGatewayFrontendPortPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayFrontendPortPropertiesFormatOutput) ToApplicationGatewayFrontendPortPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortPropertiesFormat) *ApplicationGatewayFrontendPortPropertiesFormat {
		return &v
	}).(ApplicationGatewayFrontendPortPropertiesFormatPtrOutput)
}

// Frontend port
func (o ApplicationGatewayFrontendPortPropertiesFormatOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortPropertiesFormat) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayFrontendPortPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayFrontendPortPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayFrontendPortPropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortPropertiesFormatPtrOutput) ToApplicationGatewayFrontendPortPropertiesFormatPtrOutput() ApplicationGatewayFrontendPortPropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayFrontendPortPropertiesFormatPtrOutput) ToApplicationGatewayFrontendPortPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortPropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayFrontendPortPropertiesFormatPtrOutput) Elem() ApplicationGatewayFrontendPortPropertiesFormatOutput {
	return o.ApplyT(func(v *ApplicationGatewayFrontendPortPropertiesFormat) ApplicationGatewayFrontendPortPropertiesFormat {
		return *v
	}).(ApplicationGatewayFrontendPortPropertiesFormatOutput)
}

// Frontend port
func (o ApplicationGatewayFrontendPortPropertiesFormatPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayFrontendPortPropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayFrontendPortPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayFrontendPortPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Properties of Frontend port of an application gateway.
type ApplicationGatewayFrontendPortPropertiesFormatResponse struct {
	// Frontend port
	Port *int `pulumi:"port"`
	// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ApplicationGatewayFrontendPortPropertiesFormatResponseInput is an input type that accepts ApplicationGatewayFrontendPortPropertiesFormatResponseArgs and ApplicationGatewayFrontendPortPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortPropertiesFormatResponseInput` via:
//
//          ApplicationGatewayFrontendPortPropertiesFormatResponseArgs{...}
type ApplicationGatewayFrontendPortPropertiesFormatResponseInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortPropertiesFormatResponseOutput() ApplicationGatewayFrontendPortPropertiesFormatResponseOutput
	ToApplicationGatewayFrontendPortPropertiesFormatResponseOutputWithContext(context.Context) ApplicationGatewayFrontendPortPropertiesFormatResponseOutput
}

// Properties of Frontend port of an application gateway.
type ApplicationGatewayFrontendPortPropertiesFormatResponseArgs struct {
	// Frontend port
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ApplicationGatewayFrontendPortPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPortPropertiesFormatResponse)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortPropertiesFormatResponseArgs) ToApplicationGatewayFrontendPortPropertiesFormatResponseOutput() ApplicationGatewayFrontendPortPropertiesFormatResponseOutput {
	return i.ToApplicationGatewayFrontendPortPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortPropertiesFormatResponseArgs) ToApplicationGatewayFrontendPortPropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortPropertiesFormatResponseOutput)
}

func (i ApplicationGatewayFrontendPortPropertiesFormatResponseArgs) ToApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput() ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortPropertiesFormatResponseArgs) ToApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortPropertiesFormatResponseOutput).ToApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayFrontendPortPropertiesFormatResponsePtrInput is an input type that accepts ApplicationGatewayFrontendPortPropertiesFormatResponseArgs, ApplicationGatewayFrontendPortPropertiesFormatResponsePtr and ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortPropertiesFormatResponsePtrInput` via:
//
//          ApplicationGatewayFrontendPortPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayFrontendPortPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput() ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput
	ToApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutputWithContext(context.Context) ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput
}

type applicationGatewayFrontendPortPropertiesFormatResponsePtrType ApplicationGatewayFrontendPortPropertiesFormatResponseArgs

func ApplicationGatewayFrontendPortPropertiesFormatResponsePtr(v *ApplicationGatewayFrontendPortPropertiesFormatResponseArgs) ApplicationGatewayFrontendPortPropertiesFormatResponsePtrInput {
	return (*applicationGatewayFrontendPortPropertiesFormatResponsePtrType)(v)
}

func (*applicationGatewayFrontendPortPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayFrontendPortPropertiesFormatResponse)(nil)).Elem()
}

func (i *applicationGatewayFrontendPortPropertiesFormatResponsePtrType) ToApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput() ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayFrontendPortPropertiesFormatResponsePtrType) ToApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput)
}

// Properties of Frontend port of an application gateway.
type ApplicationGatewayFrontendPortPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPortPropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortPropertiesFormatResponseOutput) ToApplicationGatewayFrontendPortPropertiesFormatResponseOutput() ApplicationGatewayFrontendPortPropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayFrontendPortPropertiesFormatResponseOutput) ToApplicationGatewayFrontendPortPropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortPropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayFrontendPortPropertiesFormatResponseOutput) ToApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput() ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput {
	return o.ToApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayFrontendPortPropertiesFormatResponseOutput) ToApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortPropertiesFormatResponse) *ApplicationGatewayFrontendPortPropertiesFormatResponse {
		return &v
	}).(ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput)
}

// Frontend port
func (o ApplicationGatewayFrontendPortPropertiesFormatResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortPropertiesFormatResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayFrontendPortPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayFrontendPortPropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput) ToApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput() ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput) ToApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput) Elem() ApplicationGatewayFrontendPortPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayFrontendPortPropertiesFormatResponse) ApplicationGatewayFrontendPortPropertiesFormatResponse {
		return *v
	}).(ApplicationGatewayFrontendPortPropertiesFormatResponseOutput)
}

// Frontend port
func (o ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayFrontendPortPropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayFrontendPortPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the frontend port that is unique within an Application Gateway
	Name *string `pulumi:"name"`
	// Properties of Frontend port of an application gateway.
	Properties *ApplicationGatewayFrontendPortPropertiesFormatResponse `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayFrontendPortResponseInput is an input type that accepts ApplicationGatewayFrontendPortResponseArgs and ApplicationGatewayFrontendPortResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortResponseInput` via:
//
//          ApplicationGatewayFrontendPortResponseArgs{...}
type ApplicationGatewayFrontendPortResponseInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortResponseOutput() ApplicationGatewayFrontendPortResponseOutput
	ToApplicationGatewayFrontendPortResponseOutputWithContext(context.Context) ApplicationGatewayFrontendPortResponseOutput
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the frontend port that is unique within an Application Gateway
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of Frontend port of an application gateway.
	Properties ApplicationGatewayFrontendPortPropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayFrontendPortResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPortResponse)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortResponseArgs) ToApplicationGatewayFrontendPortResponseOutput() ApplicationGatewayFrontendPortResponseOutput {
	return i.ToApplicationGatewayFrontendPortResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortResponseArgs) ToApplicationGatewayFrontendPortResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortResponseOutput)
}

// ApplicationGatewayFrontendPortResponseArrayInput is an input type that accepts ApplicationGatewayFrontendPortResponseArray and ApplicationGatewayFrontendPortResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortResponseArrayInput` via:
//
//          ApplicationGatewayFrontendPortResponseArray{ ApplicationGatewayFrontendPortResponseArgs{...} }
type ApplicationGatewayFrontendPortResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortResponseArrayOutput() ApplicationGatewayFrontendPortResponseArrayOutput
	ToApplicationGatewayFrontendPortResponseArrayOutputWithContext(context.Context) ApplicationGatewayFrontendPortResponseArrayOutput
}

type ApplicationGatewayFrontendPortResponseArray []ApplicationGatewayFrontendPortResponseInput

func (ApplicationGatewayFrontendPortResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPortResponse)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortResponseArray) ToApplicationGatewayFrontendPortResponseArrayOutput() ApplicationGatewayFrontendPortResponseArrayOutput {
	return i.ToApplicationGatewayFrontendPortResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortResponseArray) ToApplicationGatewayFrontendPortResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortResponseArrayOutput)
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPortResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortResponseOutput) ToApplicationGatewayFrontendPortResponseOutput() ApplicationGatewayFrontendPortResponseOutput {
	return o
}

func (o ApplicationGatewayFrontendPortResponseOutput) ToApplicationGatewayFrontendPortResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayFrontendPortResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayFrontendPortResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the frontend port that is unique within an Application Gateway
func (o ApplicationGatewayFrontendPortResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of Frontend port of an application gateway.
func (o ApplicationGatewayFrontendPortResponseOutput) Properties() ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) *ApplicationGatewayFrontendPortPropertiesFormatResponse {
		return v.Properties
	}).(ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayFrontendPortResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayFrontendPortResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPortResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortResponseArrayOutput) ToApplicationGatewayFrontendPortResponseArrayOutput() ApplicationGatewayFrontendPortResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortResponseArrayOutput) ToApplicationGatewayFrontendPortResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendPortResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendPortResponse {
		return vs[0].([]ApplicationGatewayFrontendPortResponse)[vs[1].(int)]
	}).(ApplicationGatewayFrontendPortResponseOutput)
}

// Header configuration of the Actions set in Application Gateway.
type ApplicationGatewayHeaderConfiguration struct {
	// Header name of the header configuration
	HeaderName *string `pulumi:"headerName"`
	// Header value of the header configuration
	HeaderValue *string `pulumi:"headerValue"`
}

// ApplicationGatewayHeaderConfigurationInput is an input type that accepts ApplicationGatewayHeaderConfigurationArgs and ApplicationGatewayHeaderConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayHeaderConfigurationInput` via:
//
//          ApplicationGatewayHeaderConfigurationArgs{...}
type ApplicationGatewayHeaderConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayHeaderConfigurationOutput() ApplicationGatewayHeaderConfigurationOutput
	ToApplicationGatewayHeaderConfigurationOutputWithContext(context.Context) ApplicationGatewayHeaderConfigurationOutput
}

// Header configuration of the Actions set in Application Gateway.
type ApplicationGatewayHeaderConfigurationArgs struct {
	// Header name of the header configuration
	HeaderName pulumi.StringPtrInput `pulumi:"headerName"`
	// Header value of the header configuration
	HeaderValue pulumi.StringPtrInput `pulumi:"headerValue"`
}

func (ApplicationGatewayHeaderConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHeaderConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayHeaderConfigurationArgs) ToApplicationGatewayHeaderConfigurationOutput() ApplicationGatewayHeaderConfigurationOutput {
	return i.ToApplicationGatewayHeaderConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayHeaderConfigurationArgs) ToApplicationGatewayHeaderConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayHeaderConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHeaderConfigurationOutput)
}

// ApplicationGatewayHeaderConfigurationArrayInput is an input type that accepts ApplicationGatewayHeaderConfigurationArray and ApplicationGatewayHeaderConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayHeaderConfigurationArrayInput` via:
//
//          ApplicationGatewayHeaderConfigurationArray{ ApplicationGatewayHeaderConfigurationArgs{...} }
type ApplicationGatewayHeaderConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayHeaderConfigurationArrayOutput() ApplicationGatewayHeaderConfigurationArrayOutput
	ToApplicationGatewayHeaderConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayHeaderConfigurationArrayOutput
}

type ApplicationGatewayHeaderConfigurationArray []ApplicationGatewayHeaderConfigurationInput

func (ApplicationGatewayHeaderConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHeaderConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayHeaderConfigurationArray) ToApplicationGatewayHeaderConfigurationArrayOutput() ApplicationGatewayHeaderConfigurationArrayOutput {
	return i.ToApplicationGatewayHeaderConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayHeaderConfigurationArray) ToApplicationGatewayHeaderConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayHeaderConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHeaderConfigurationArrayOutput)
}

// Header configuration of the Actions set in Application Gateway.
type ApplicationGatewayHeaderConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHeaderConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHeaderConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayHeaderConfigurationOutput) ToApplicationGatewayHeaderConfigurationOutput() ApplicationGatewayHeaderConfigurationOutput {
	return o
}

func (o ApplicationGatewayHeaderConfigurationOutput) ToApplicationGatewayHeaderConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayHeaderConfigurationOutput {
	return o
}

// Header name of the header configuration
func (o ApplicationGatewayHeaderConfigurationOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHeaderConfiguration) *string { return v.HeaderName }).(pulumi.StringPtrOutput)
}

// Header value of the header configuration
func (o ApplicationGatewayHeaderConfigurationOutput) HeaderValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHeaderConfiguration) *string { return v.HeaderValue }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayHeaderConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHeaderConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHeaderConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayHeaderConfigurationArrayOutput) ToApplicationGatewayHeaderConfigurationArrayOutput() ApplicationGatewayHeaderConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayHeaderConfigurationArrayOutput) ToApplicationGatewayHeaderConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayHeaderConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayHeaderConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayHeaderConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayHeaderConfiguration {
		return vs[0].([]ApplicationGatewayHeaderConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayHeaderConfigurationOutput)
}

// Header configuration of the Actions set in Application Gateway.
type ApplicationGatewayHeaderConfigurationResponse struct {
	// Header name of the header configuration
	HeaderName *string `pulumi:"headerName"`
	// Header value of the header configuration
	HeaderValue *string `pulumi:"headerValue"`
}

// ApplicationGatewayHeaderConfigurationResponseInput is an input type that accepts ApplicationGatewayHeaderConfigurationResponseArgs and ApplicationGatewayHeaderConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayHeaderConfigurationResponseInput` via:
//
//          ApplicationGatewayHeaderConfigurationResponseArgs{...}
type ApplicationGatewayHeaderConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayHeaderConfigurationResponseOutput() ApplicationGatewayHeaderConfigurationResponseOutput
	ToApplicationGatewayHeaderConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayHeaderConfigurationResponseOutput
}

// Header configuration of the Actions set in Application Gateway.
type ApplicationGatewayHeaderConfigurationResponseArgs struct {
	// Header name of the header configuration
	HeaderName pulumi.StringPtrInput `pulumi:"headerName"`
	// Header value of the header configuration
	HeaderValue pulumi.StringPtrInput `pulumi:"headerValue"`
}

func (ApplicationGatewayHeaderConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHeaderConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayHeaderConfigurationResponseArgs) ToApplicationGatewayHeaderConfigurationResponseOutput() ApplicationGatewayHeaderConfigurationResponseOutput {
	return i.ToApplicationGatewayHeaderConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayHeaderConfigurationResponseArgs) ToApplicationGatewayHeaderConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayHeaderConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHeaderConfigurationResponseOutput)
}

// ApplicationGatewayHeaderConfigurationResponseArrayInput is an input type that accepts ApplicationGatewayHeaderConfigurationResponseArray and ApplicationGatewayHeaderConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayHeaderConfigurationResponseArrayInput` via:
//
//          ApplicationGatewayHeaderConfigurationResponseArray{ ApplicationGatewayHeaderConfigurationResponseArgs{...} }
type ApplicationGatewayHeaderConfigurationResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayHeaderConfigurationResponseArrayOutput() ApplicationGatewayHeaderConfigurationResponseArrayOutput
	ToApplicationGatewayHeaderConfigurationResponseArrayOutputWithContext(context.Context) ApplicationGatewayHeaderConfigurationResponseArrayOutput
}

type ApplicationGatewayHeaderConfigurationResponseArray []ApplicationGatewayHeaderConfigurationResponseInput

func (ApplicationGatewayHeaderConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHeaderConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayHeaderConfigurationResponseArray) ToApplicationGatewayHeaderConfigurationResponseArrayOutput() ApplicationGatewayHeaderConfigurationResponseArrayOutput {
	return i.ToApplicationGatewayHeaderConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayHeaderConfigurationResponseArray) ToApplicationGatewayHeaderConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayHeaderConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHeaderConfigurationResponseArrayOutput)
}

// Header configuration of the Actions set in Application Gateway.
type ApplicationGatewayHeaderConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHeaderConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHeaderConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayHeaderConfigurationResponseOutput) ToApplicationGatewayHeaderConfigurationResponseOutput() ApplicationGatewayHeaderConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayHeaderConfigurationResponseOutput) ToApplicationGatewayHeaderConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayHeaderConfigurationResponseOutput {
	return o
}

// Header name of the header configuration
func (o ApplicationGatewayHeaderConfigurationResponseOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHeaderConfigurationResponse) *string { return v.HeaderName }).(pulumi.StringPtrOutput)
}

// Header value of the header configuration
func (o ApplicationGatewayHeaderConfigurationResponseOutput) HeaderValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHeaderConfigurationResponse) *string { return v.HeaderValue }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayHeaderConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHeaderConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHeaderConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayHeaderConfigurationResponseArrayOutput) ToApplicationGatewayHeaderConfigurationResponseArrayOutput() ApplicationGatewayHeaderConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayHeaderConfigurationResponseArrayOutput) ToApplicationGatewayHeaderConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayHeaderConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayHeaderConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayHeaderConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayHeaderConfigurationResponse {
		return vs[0].([]ApplicationGatewayHeaderConfigurationResponse)[vs[1].(int)]
	}).(ApplicationGatewayHeaderConfigurationResponseOutput)
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListener struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the HTTP listener that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of HTTP listener of an application gateway.
	Properties *ApplicationGatewayHttpListenerPropertiesFormat `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayHttpListenerInput is an input type that accepts ApplicationGatewayHttpListenerArgs and ApplicationGatewayHttpListenerOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerInput` via:
//
//          ApplicationGatewayHttpListenerArgs{...}
type ApplicationGatewayHttpListenerInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerOutput() ApplicationGatewayHttpListenerOutput
	ToApplicationGatewayHttpListenerOutputWithContext(context.Context) ApplicationGatewayHttpListenerOutput
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the HTTP listener that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of HTTP listener of an application gateway.
	Properties ApplicationGatewayHttpListenerPropertiesFormatPtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayHttpListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListener)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerArgs) ToApplicationGatewayHttpListenerOutput() ApplicationGatewayHttpListenerOutput {
	return i.ToApplicationGatewayHttpListenerOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerArgs) ToApplicationGatewayHttpListenerOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerOutput)
}

// ApplicationGatewayHttpListenerArrayInput is an input type that accepts ApplicationGatewayHttpListenerArray and ApplicationGatewayHttpListenerArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerArrayInput` via:
//
//          ApplicationGatewayHttpListenerArray{ ApplicationGatewayHttpListenerArgs{...} }
type ApplicationGatewayHttpListenerArrayInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerArrayOutput() ApplicationGatewayHttpListenerArrayOutput
	ToApplicationGatewayHttpListenerArrayOutputWithContext(context.Context) ApplicationGatewayHttpListenerArrayOutput
}

type ApplicationGatewayHttpListenerArray []ApplicationGatewayHttpListenerInput

func (ApplicationGatewayHttpListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListener)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerArray) ToApplicationGatewayHttpListenerArrayOutput() ApplicationGatewayHttpListenerArrayOutput {
	return i.ToApplicationGatewayHttpListenerArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerArray) ToApplicationGatewayHttpListenerArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerArrayOutput)
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListener)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerOutput) ToApplicationGatewayHttpListenerOutput() ApplicationGatewayHttpListenerOutput {
	return o
}

func (o ApplicationGatewayHttpListenerOutput) ToApplicationGatewayHttpListenerOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayHttpListenerOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayHttpListenerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the HTTP listener that is unique within an Application Gateway.
func (o ApplicationGatewayHttpListenerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of HTTP listener of an application gateway.
func (o ApplicationGatewayHttpListenerOutput) Properties() ApplicationGatewayHttpListenerPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *ApplicationGatewayHttpListenerPropertiesFormat {
		return v.Properties
	}).(ApplicationGatewayHttpListenerPropertiesFormatPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayHttpListenerOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayHttpListenerArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListener)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerArrayOutput) ToApplicationGatewayHttpListenerArrayOutput() ApplicationGatewayHttpListenerArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerArrayOutput) ToApplicationGatewayHttpListenerArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayHttpListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayHttpListener {
		return vs[0].([]ApplicationGatewayHttpListener)[vs[1].(int)]
	}).(ApplicationGatewayHttpListenerOutput)
}

// Properties of HTTP listener of an application gateway.
type ApplicationGatewayHttpListenerPropertiesFormat struct {
	// Custom error configurations of the HTTP listener.
	CustomErrorConfigurations []ApplicationGatewayCustomError `pulumi:"customErrorConfigurations"`
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration *SubResource `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort *SubResource `pulumi:"frontendPort"`
	// Host name of HTTP listener.
	HostName *string `pulumi:"hostName"`
	// Protocol of the HTTP listener. Possible values are 'Http' and 'Https'.
	Protocol *string `pulumi:"protocol"`
	// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Applicable only if protocol is https. Enables SNI for multi-hosting.
	RequireServerNameIndication *bool `pulumi:"requireServerNameIndication"`
	// SSL certificate resource of an application gateway.
	SslCertificate *SubResource `pulumi:"sslCertificate"`
}

// ApplicationGatewayHttpListenerPropertiesFormatInput is an input type that accepts ApplicationGatewayHttpListenerPropertiesFormatArgs and ApplicationGatewayHttpListenerPropertiesFormatOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerPropertiesFormatInput` via:
//
//          ApplicationGatewayHttpListenerPropertiesFormatArgs{...}
type ApplicationGatewayHttpListenerPropertiesFormatInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerPropertiesFormatOutput() ApplicationGatewayHttpListenerPropertiesFormatOutput
	ToApplicationGatewayHttpListenerPropertiesFormatOutputWithContext(context.Context) ApplicationGatewayHttpListenerPropertiesFormatOutput
}

// Properties of HTTP listener of an application gateway.
type ApplicationGatewayHttpListenerPropertiesFormatArgs struct {
	// Custom error configurations of the HTTP listener.
	CustomErrorConfigurations ApplicationGatewayCustomErrorArrayInput `pulumi:"customErrorConfigurations"`
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration SubResourcePtrInput `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort SubResourcePtrInput `pulumi:"frontendPort"`
	// Host name of HTTP listener.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// Protocol of the HTTP listener. Possible values are 'Http' and 'Https'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Applicable only if protocol is https. Enables SNI for multi-hosting.
	RequireServerNameIndication pulumi.BoolPtrInput `pulumi:"requireServerNameIndication"`
	// SSL certificate resource of an application gateway.
	SslCertificate SubResourcePtrInput `pulumi:"sslCertificate"`
}

func (ApplicationGatewayHttpListenerPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListenerPropertiesFormat)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerPropertiesFormatArgs) ToApplicationGatewayHttpListenerPropertiesFormatOutput() ApplicationGatewayHttpListenerPropertiesFormatOutput {
	return i.ToApplicationGatewayHttpListenerPropertiesFormatOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerPropertiesFormatArgs) ToApplicationGatewayHttpListenerPropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerPropertiesFormatOutput)
}

func (i ApplicationGatewayHttpListenerPropertiesFormatArgs) ToApplicationGatewayHttpListenerPropertiesFormatPtrOutput() ApplicationGatewayHttpListenerPropertiesFormatPtrOutput {
	return i.ToApplicationGatewayHttpListenerPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerPropertiesFormatArgs) ToApplicationGatewayHttpListenerPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerPropertiesFormatOutput).ToApplicationGatewayHttpListenerPropertiesFormatPtrOutputWithContext(ctx)
}

// ApplicationGatewayHttpListenerPropertiesFormatPtrInput is an input type that accepts ApplicationGatewayHttpListenerPropertiesFormatArgs, ApplicationGatewayHttpListenerPropertiesFormatPtr and ApplicationGatewayHttpListenerPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerPropertiesFormatPtrInput` via:
//
//          ApplicationGatewayHttpListenerPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayHttpListenerPropertiesFormatPtrInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerPropertiesFormatPtrOutput() ApplicationGatewayHttpListenerPropertiesFormatPtrOutput
	ToApplicationGatewayHttpListenerPropertiesFormatPtrOutputWithContext(context.Context) ApplicationGatewayHttpListenerPropertiesFormatPtrOutput
}

type applicationGatewayHttpListenerPropertiesFormatPtrType ApplicationGatewayHttpListenerPropertiesFormatArgs

func ApplicationGatewayHttpListenerPropertiesFormatPtr(v *ApplicationGatewayHttpListenerPropertiesFormatArgs) ApplicationGatewayHttpListenerPropertiesFormatPtrInput {
	return (*applicationGatewayHttpListenerPropertiesFormatPtrType)(v)
}

func (*applicationGatewayHttpListenerPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayHttpListenerPropertiesFormat)(nil)).Elem()
}

func (i *applicationGatewayHttpListenerPropertiesFormatPtrType) ToApplicationGatewayHttpListenerPropertiesFormatPtrOutput() ApplicationGatewayHttpListenerPropertiesFormatPtrOutput {
	return i.ToApplicationGatewayHttpListenerPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayHttpListenerPropertiesFormatPtrType) ToApplicationGatewayHttpListenerPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerPropertiesFormatPtrOutput)
}

// Properties of HTTP listener of an application gateway.
type ApplicationGatewayHttpListenerPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListenerPropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerPropertiesFormatOutput) ToApplicationGatewayHttpListenerPropertiesFormatOutput() ApplicationGatewayHttpListenerPropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayHttpListenerPropertiesFormatOutput) ToApplicationGatewayHttpListenerPropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerPropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayHttpListenerPropertiesFormatOutput) ToApplicationGatewayHttpListenerPropertiesFormatPtrOutput() ApplicationGatewayHttpListenerPropertiesFormatPtrOutput {
	return o.ToApplicationGatewayHttpListenerPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayHttpListenerPropertiesFormatOutput) ToApplicationGatewayHttpListenerPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerPropertiesFormat) *ApplicationGatewayHttpListenerPropertiesFormat {
		return &v
	}).(ApplicationGatewayHttpListenerPropertiesFormatPtrOutput)
}

// Custom error configurations of the HTTP listener.
func (o ApplicationGatewayHttpListenerPropertiesFormatOutput) CustomErrorConfigurations() ApplicationGatewayCustomErrorArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerPropertiesFormat) []ApplicationGatewayCustomError {
		return v.CustomErrorConfigurations
	}).(ApplicationGatewayCustomErrorArrayOutput)
}

// Frontend IP configuration resource of an application gateway.
func (o ApplicationGatewayHttpListenerPropertiesFormatOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerPropertiesFormat) *SubResource { return v.FrontendIPConfiguration }).(SubResourcePtrOutput)
}

// Frontend port resource of an application gateway.
func (o ApplicationGatewayHttpListenerPropertiesFormatOutput) FrontendPort() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerPropertiesFormat) *SubResource { return v.FrontendPort }).(SubResourcePtrOutput)
}

// Host name of HTTP listener.
func (o ApplicationGatewayHttpListenerPropertiesFormatOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerPropertiesFormat) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Protocol of the HTTP listener. Possible values are 'Http' and 'Https'.
func (o ApplicationGatewayHttpListenerPropertiesFormatOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerPropertiesFormat) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayHttpListenerPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Applicable only if protocol is https. Enables SNI for multi-hosting.
func (o ApplicationGatewayHttpListenerPropertiesFormatOutput) RequireServerNameIndication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerPropertiesFormat) *bool { return v.RequireServerNameIndication }).(pulumi.BoolPtrOutput)
}

// SSL certificate resource of an application gateway.
func (o ApplicationGatewayHttpListenerPropertiesFormatOutput) SslCertificate() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerPropertiesFormat) *SubResource { return v.SslCertificate }).(SubResourcePtrOutput)
}

type ApplicationGatewayHttpListenerPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayHttpListenerPropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerPropertiesFormatPtrOutput) ToApplicationGatewayHttpListenerPropertiesFormatPtrOutput() ApplicationGatewayHttpListenerPropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayHttpListenerPropertiesFormatPtrOutput) ToApplicationGatewayHttpListenerPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerPropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayHttpListenerPropertiesFormatPtrOutput) Elem() ApplicationGatewayHttpListenerPropertiesFormatOutput {
	return o.ApplyT(func(v *ApplicationGatewayHttpListenerPropertiesFormat) ApplicationGatewayHttpListenerPropertiesFormat {
		return *v
	}).(ApplicationGatewayHttpListenerPropertiesFormatOutput)
}

// Custom error configurations of the HTTP listener.
func (o ApplicationGatewayHttpListenerPropertiesFormatPtrOutput) CustomErrorConfigurations() ApplicationGatewayCustomErrorArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayHttpListenerPropertiesFormat) []ApplicationGatewayCustomError {
		if v == nil {
			return nil
		}
		return v.CustomErrorConfigurations
	}).(ApplicationGatewayCustomErrorArrayOutput)
}

// Frontend IP configuration resource of an application gateway.
func (o ApplicationGatewayHttpListenerPropertiesFormatPtrOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayHttpListenerPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.FrontendIPConfiguration
	}).(SubResourcePtrOutput)
}

// Frontend port resource of an application gateway.
func (o ApplicationGatewayHttpListenerPropertiesFormatPtrOutput) FrontendPort() SubResourcePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayHttpListenerPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.FrontendPort
	}).(SubResourcePtrOutput)
}

// Host name of HTTP listener.
func (o ApplicationGatewayHttpListenerPropertiesFormatPtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayHttpListenerPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.HostName
	}).(pulumi.StringPtrOutput)
}

// Protocol of the HTTP listener. Possible values are 'Http' and 'Https'.
func (o ApplicationGatewayHttpListenerPropertiesFormatPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayHttpListenerPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayHttpListenerPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayHttpListenerPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Applicable only if protocol is https. Enables SNI for multi-hosting.
func (o ApplicationGatewayHttpListenerPropertiesFormatPtrOutput) RequireServerNameIndication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayHttpListenerPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.RequireServerNameIndication
	}).(pulumi.BoolPtrOutput)
}

// SSL certificate resource of an application gateway.
func (o ApplicationGatewayHttpListenerPropertiesFormatPtrOutput) SslCertificate() SubResourcePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayHttpListenerPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.SslCertificate
	}).(SubResourcePtrOutput)
}

// Properties of HTTP listener of an application gateway.
type ApplicationGatewayHttpListenerPropertiesFormatResponse struct {
	// Custom error configurations of the HTTP listener.
	CustomErrorConfigurations []ApplicationGatewayCustomErrorResponse `pulumi:"customErrorConfigurations"`
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort *SubResourceResponse `pulumi:"frontendPort"`
	// Host name of HTTP listener.
	HostName *string `pulumi:"hostName"`
	// Protocol of the HTTP listener. Possible values are 'Http' and 'Https'.
	Protocol *string `pulumi:"protocol"`
	// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Applicable only if protocol is https. Enables SNI for multi-hosting.
	RequireServerNameIndication *bool `pulumi:"requireServerNameIndication"`
	// SSL certificate resource of an application gateway.
	SslCertificate *SubResourceResponse `pulumi:"sslCertificate"`
}

// ApplicationGatewayHttpListenerPropertiesFormatResponseInput is an input type that accepts ApplicationGatewayHttpListenerPropertiesFormatResponseArgs and ApplicationGatewayHttpListenerPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerPropertiesFormatResponseInput` via:
//
//          ApplicationGatewayHttpListenerPropertiesFormatResponseArgs{...}
type ApplicationGatewayHttpListenerPropertiesFormatResponseInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerPropertiesFormatResponseOutput() ApplicationGatewayHttpListenerPropertiesFormatResponseOutput
	ToApplicationGatewayHttpListenerPropertiesFormatResponseOutputWithContext(context.Context) ApplicationGatewayHttpListenerPropertiesFormatResponseOutput
}

// Properties of HTTP listener of an application gateway.
type ApplicationGatewayHttpListenerPropertiesFormatResponseArgs struct {
	// Custom error configurations of the HTTP listener.
	CustomErrorConfigurations ApplicationGatewayCustomErrorResponseArrayInput `pulumi:"customErrorConfigurations"`
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration SubResourceResponsePtrInput `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort SubResourceResponsePtrInput `pulumi:"frontendPort"`
	// Host name of HTTP listener.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// Protocol of the HTTP listener. Possible values are 'Http' and 'Https'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Applicable only if protocol is https. Enables SNI for multi-hosting.
	RequireServerNameIndication pulumi.BoolPtrInput `pulumi:"requireServerNameIndication"`
	// SSL certificate resource of an application gateway.
	SslCertificate SubResourceResponsePtrInput `pulumi:"sslCertificate"`
}

func (ApplicationGatewayHttpListenerPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListenerPropertiesFormatResponse)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerPropertiesFormatResponseArgs) ToApplicationGatewayHttpListenerPropertiesFormatResponseOutput() ApplicationGatewayHttpListenerPropertiesFormatResponseOutput {
	return i.ToApplicationGatewayHttpListenerPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerPropertiesFormatResponseArgs) ToApplicationGatewayHttpListenerPropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerPropertiesFormatResponseOutput)
}

func (i ApplicationGatewayHttpListenerPropertiesFormatResponseArgs) ToApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput() ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerPropertiesFormatResponseArgs) ToApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerPropertiesFormatResponseOutput).ToApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayHttpListenerPropertiesFormatResponsePtrInput is an input type that accepts ApplicationGatewayHttpListenerPropertiesFormatResponseArgs, ApplicationGatewayHttpListenerPropertiesFormatResponsePtr and ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerPropertiesFormatResponsePtrInput` via:
//
//          ApplicationGatewayHttpListenerPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayHttpListenerPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput() ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput
	ToApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutputWithContext(context.Context) ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput
}

type applicationGatewayHttpListenerPropertiesFormatResponsePtrType ApplicationGatewayHttpListenerPropertiesFormatResponseArgs

func ApplicationGatewayHttpListenerPropertiesFormatResponsePtr(v *ApplicationGatewayHttpListenerPropertiesFormatResponseArgs) ApplicationGatewayHttpListenerPropertiesFormatResponsePtrInput {
	return (*applicationGatewayHttpListenerPropertiesFormatResponsePtrType)(v)
}

func (*applicationGatewayHttpListenerPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayHttpListenerPropertiesFormatResponse)(nil)).Elem()
}

func (i *applicationGatewayHttpListenerPropertiesFormatResponsePtrType) ToApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput() ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayHttpListenerPropertiesFormatResponsePtrType) ToApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput)
}

// Properties of HTTP listener of an application gateway.
type ApplicationGatewayHttpListenerPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListenerPropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerPropertiesFormatResponseOutput) ToApplicationGatewayHttpListenerPropertiesFormatResponseOutput() ApplicationGatewayHttpListenerPropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayHttpListenerPropertiesFormatResponseOutput) ToApplicationGatewayHttpListenerPropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerPropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayHttpListenerPropertiesFormatResponseOutput) ToApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput() ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput {
	return o.ToApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayHttpListenerPropertiesFormatResponseOutput) ToApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerPropertiesFormatResponse) *ApplicationGatewayHttpListenerPropertiesFormatResponse {
		return &v
	}).(ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput)
}

// Custom error configurations of the HTTP listener.
func (o ApplicationGatewayHttpListenerPropertiesFormatResponseOutput) CustomErrorConfigurations() ApplicationGatewayCustomErrorResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerPropertiesFormatResponse) []ApplicationGatewayCustomErrorResponse {
		return v.CustomErrorConfigurations
	}).(ApplicationGatewayCustomErrorResponseArrayOutput)
}

// Frontend IP configuration resource of an application gateway.
func (o ApplicationGatewayHttpListenerPropertiesFormatResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerPropertiesFormatResponse) *SubResourceResponse {
		return v.FrontendIPConfiguration
	}).(SubResourceResponsePtrOutput)
}

// Frontend port resource of an application gateway.
func (o ApplicationGatewayHttpListenerPropertiesFormatResponseOutput) FrontendPort() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerPropertiesFormatResponse) *SubResourceResponse {
		return v.FrontendPort
	}).(SubResourceResponsePtrOutput)
}

// Host name of HTTP listener.
func (o ApplicationGatewayHttpListenerPropertiesFormatResponseOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerPropertiesFormatResponse) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Protocol of the HTTP listener. Possible values are 'Http' and 'Https'.
func (o ApplicationGatewayHttpListenerPropertiesFormatResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerPropertiesFormatResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayHttpListenerPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Applicable only if protocol is https. Enables SNI for multi-hosting.
func (o ApplicationGatewayHttpListenerPropertiesFormatResponseOutput) RequireServerNameIndication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerPropertiesFormatResponse) *bool {
		return v.RequireServerNameIndication
	}).(pulumi.BoolPtrOutput)
}

// SSL certificate resource of an application gateway.
func (o ApplicationGatewayHttpListenerPropertiesFormatResponseOutput) SslCertificate() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerPropertiesFormatResponse) *SubResourceResponse {
		return v.SslCertificate
	}).(SubResourceResponsePtrOutput)
}

type ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayHttpListenerPropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput) ToApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput() ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput) ToApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput) Elem() ApplicationGatewayHttpListenerPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayHttpListenerPropertiesFormatResponse) ApplicationGatewayHttpListenerPropertiesFormatResponse {
		return *v
	}).(ApplicationGatewayHttpListenerPropertiesFormatResponseOutput)
}

// Custom error configurations of the HTTP listener.
func (o ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput) CustomErrorConfigurations() ApplicationGatewayCustomErrorResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayHttpListenerPropertiesFormatResponse) []ApplicationGatewayCustomErrorResponse {
		if v == nil {
			return nil
		}
		return v.CustomErrorConfigurations
	}).(ApplicationGatewayCustomErrorResponseArrayOutput)
}

// Frontend IP configuration resource of an application gateway.
func (o ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayHttpListenerPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.FrontendIPConfiguration
	}).(SubResourceResponsePtrOutput)
}

// Frontend port resource of an application gateway.
func (o ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput) FrontendPort() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayHttpListenerPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.FrontendPort
	}).(SubResourceResponsePtrOutput)
}

// Host name of HTTP listener.
func (o ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayHttpListenerPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostName
	}).(pulumi.StringPtrOutput)
}

// Protocol of the HTTP listener. Possible values are 'Http' and 'Https'.
func (o ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayHttpListenerPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayHttpListenerPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Applicable only if protocol is https. Enables SNI for multi-hosting.
func (o ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput) RequireServerNameIndication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayHttpListenerPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RequireServerNameIndication
	}).(pulumi.BoolPtrOutput)
}

// SSL certificate resource of an application gateway.
func (o ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput) SslCertificate() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayHttpListenerPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.SslCertificate
	}).(SubResourceResponsePtrOutput)
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the HTTP listener that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of HTTP listener of an application gateway.
	Properties *ApplicationGatewayHttpListenerPropertiesFormatResponse `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayHttpListenerResponseInput is an input type that accepts ApplicationGatewayHttpListenerResponseArgs and ApplicationGatewayHttpListenerResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerResponseInput` via:
//
//          ApplicationGatewayHttpListenerResponseArgs{...}
type ApplicationGatewayHttpListenerResponseInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerResponseOutput() ApplicationGatewayHttpListenerResponseOutput
	ToApplicationGatewayHttpListenerResponseOutputWithContext(context.Context) ApplicationGatewayHttpListenerResponseOutput
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the HTTP listener that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of HTTP listener of an application gateway.
	Properties ApplicationGatewayHttpListenerPropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayHttpListenerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListenerResponse)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerResponseArgs) ToApplicationGatewayHttpListenerResponseOutput() ApplicationGatewayHttpListenerResponseOutput {
	return i.ToApplicationGatewayHttpListenerResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerResponseArgs) ToApplicationGatewayHttpListenerResponseOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerResponseOutput)
}

// ApplicationGatewayHttpListenerResponseArrayInput is an input type that accepts ApplicationGatewayHttpListenerResponseArray and ApplicationGatewayHttpListenerResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerResponseArrayInput` via:
//
//          ApplicationGatewayHttpListenerResponseArray{ ApplicationGatewayHttpListenerResponseArgs{...} }
type ApplicationGatewayHttpListenerResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerResponseArrayOutput() ApplicationGatewayHttpListenerResponseArrayOutput
	ToApplicationGatewayHttpListenerResponseArrayOutputWithContext(context.Context) ApplicationGatewayHttpListenerResponseArrayOutput
}

type ApplicationGatewayHttpListenerResponseArray []ApplicationGatewayHttpListenerResponseInput

func (ApplicationGatewayHttpListenerResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListenerResponse)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerResponseArray) ToApplicationGatewayHttpListenerResponseArrayOutput() ApplicationGatewayHttpListenerResponseArrayOutput {
	return i.ToApplicationGatewayHttpListenerResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerResponseArray) ToApplicationGatewayHttpListenerResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerResponseArrayOutput)
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListenerResponse)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerResponseOutput) ToApplicationGatewayHttpListenerResponseOutput() ApplicationGatewayHttpListenerResponseOutput {
	return o
}

func (o ApplicationGatewayHttpListenerResponseOutput) ToApplicationGatewayHttpListenerResponseOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayHttpListenerResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayHttpListenerResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the HTTP listener that is unique within an Application Gateway.
func (o ApplicationGatewayHttpListenerResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of HTTP listener of an application gateway.
func (o ApplicationGatewayHttpListenerResponseOutput) Properties() ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *ApplicationGatewayHttpListenerPropertiesFormatResponse {
		return v.Properties
	}).(ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayHttpListenerResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayHttpListenerResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListenerResponse)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerResponseArrayOutput) ToApplicationGatewayHttpListenerResponseArrayOutput() ApplicationGatewayHttpListenerResponseArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerResponseArrayOutput) ToApplicationGatewayHttpListenerResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerResponseArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayHttpListenerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayHttpListenerResponse {
		return vs[0].([]ApplicationGatewayHttpListenerResponse)[vs[1].(int)]
	}).(ApplicationGatewayHttpListenerResponseOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfiguration struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the IP configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of IP configuration of an application gateway.
	Properties *ApplicationGatewayIPConfigurationPropertiesFormat `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayIPConfigurationInput is an input type that accepts ApplicationGatewayIPConfigurationArgs and ApplicationGatewayIPConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationInput` via:
//
//          ApplicationGatewayIPConfigurationArgs{...}
type ApplicationGatewayIPConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationOutput() ApplicationGatewayIPConfigurationOutput
	ToApplicationGatewayIPConfigurationOutputWithContext(context.Context) ApplicationGatewayIPConfigurationOutput
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the IP configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of IP configuration of an application gateway.
	Properties ApplicationGatewayIPConfigurationPropertiesFormatPtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationArgs) ToApplicationGatewayIPConfigurationOutput() ApplicationGatewayIPConfigurationOutput {
	return i.ToApplicationGatewayIPConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationArgs) ToApplicationGatewayIPConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationOutput)
}

// ApplicationGatewayIPConfigurationArrayInput is an input type that accepts ApplicationGatewayIPConfigurationArray and ApplicationGatewayIPConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationArrayInput` via:
//
//          ApplicationGatewayIPConfigurationArray{ ApplicationGatewayIPConfigurationArgs{...} }
type ApplicationGatewayIPConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationArrayOutput() ApplicationGatewayIPConfigurationArrayOutput
	ToApplicationGatewayIPConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayIPConfigurationArrayOutput
}

type ApplicationGatewayIPConfigurationArray []ApplicationGatewayIPConfigurationInput

func (ApplicationGatewayIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationArray) ToApplicationGatewayIPConfigurationArrayOutput() ApplicationGatewayIPConfigurationArrayOutput {
	return i.ToApplicationGatewayIPConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationArray) ToApplicationGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationArrayOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationOutput) ToApplicationGatewayIPConfigurationOutput() ApplicationGatewayIPConfigurationOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationOutput) ToApplicationGatewayIPConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayIPConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the IP configuration that is unique within an Application Gateway.
func (o ApplicationGatewayIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of IP configuration of an application gateway.
func (o ApplicationGatewayIPConfigurationOutput) Properties() ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *ApplicationGatewayIPConfigurationPropertiesFormat {
		return v.Properties
	}).(ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayIPConfigurationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationArrayOutput) ToApplicationGatewayIPConfigurationArrayOutput() ApplicationGatewayIPConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationArrayOutput) ToApplicationGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayIPConfiguration {
		return vs[0].([]ApplicationGatewayIPConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayIPConfigurationOutput)
}

// Properties of IP configuration of an application gateway.
type ApplicationGatewayIPConfigurationPropertiesFormat struct {
	// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Reference of the subnet resource. A subnet from where application gateway gets its private address.
	Subnet *SubResource `pulumi:"subnet"`
}

// ApplicationGatewayIPConfigurationPropertiesFormatInput is an input type that accepts ApplicationGatewayIPConfigurationPropertiesFormatArgs and ApplicationGatewayIPConfigurationPropertiesFormatOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationPropertiesFormatInput` via:
//
//          ApplicationGatewayIPConfigurationPropertiesFormatArgs{...}
type ApplicationGatewayIPConfigurationPropertiesFormatInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationPropertiesFormatOutput() ApplicationGatewayIPConfigurationPropertiesFormatOutput
	ToApplicationGatewayIPConfigurationPropertiesFormatOutputWithContext(context.Context) ApplicationGatewayIPConfigurationPropertiesFormatOutput
}

// Properties of IP configuration of an application gateway.
type ApplicationGatewayIPConfigurationPropertiesFormatArgs struct {
	// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Reference of the subnet resource. A subnet from where application gateway gets its private address.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
}

func (ApplicationGatewayIPConfigurationPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationPropertiesFormatArgs) ToApplicationGatewayIPConfigurationPropertiesFormatOutput() ApplicationGatewayIPConfigurationPropertiesFormatOutput {
	return i.ToApplicationGatewayIPConfigurationPropertiesFormatOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationPropertiesFormatArgs) ToApplicationGatewayIPConfigurationPropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationPropertiesFormatOutput)
}

func (i ApplicationGatewayIPConfigurationPropertiesFormatArgs) ToApplicationGatewayIPConfigurationPropertiesFormatPtrOutput() ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput {
	return i.ToApplicationGatewayIPConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationPropertiesFormatArgs) ToApplicationGatewayIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationPropertiesFormatOutput).ToApplicationGatewayIPConfigurationPropertiesFormatPtrOutputWithContext(ctx)
}

// ApplicationGatewayIPConfigurationPropertiesFormatPtrInput is an input type that accepts ApplicationGatewayIPConfigurationPropertiesFormatArgs, ApplicationGatewayIPConfigurationPropertiesFormatPtr and ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationPropertiesFormatPtrInput` via:
//
//          ApplicationGatewayIPConfigurationPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayIPConfigurationPropertiesFormatPtrInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationPropertiesFormatPtrOutput() ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput
	ToApplicationGatewayIPConfigurationPropertiesFormatPtrOutputWithContext(context.Context) ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput
}

type applicationGatewayIPConfigurationPropertiesFormatPtrType ApplicationGatewayIPConfigurationPropertiesFormatArgs

func ApplicationGatewayIPConfigurationPropertiesFormatPtr(v *ApplicationGatewayIPConfigurationPropertiesFormatArgs) ApplicationGatewayIPConfigurationPropertiesFormatPtrInput {
	return (*applicationGatewayIPConfigurationPropertiesFormatPtrType)(v)
}

func (*applicationGatewayIPConfigurationPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (i *applicationGatewayIPConfigurationPropertiesFormatPtrType) ToApplicationGatewayIPConfigurationPropertiesFormatPtrOutput() ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput {
	return i.ToApplicationGatewayIPConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayIPConfigurationPropertiesFormatPtrType) ToApplicationGatewayIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput)
}

// Properties of IP configuration of an application gateway.
type ApplicationGatewayIPConfigurationPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationPropertiesFormatOutput) ToApplicationGatewayIPConfigurationPropertiesFormatOutput() ApplicationGatewayIPConfigurationPropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationPropertiesFormatOutput) ToApplicationGatewayIPConfigurationPropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationPropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationPropertiesFormatOutput) ToApplicationGatewayIPConfigurationPropertiesFormatPtrOutput() ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput {
	return o.ToApplicationGatewayIPConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayIPConfigurationPropertiesFormatOutput) ToApplicationGatewayIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationPropertiesFormat) *ApplicationGatewayIPConfigurationPropertiesFormat {
		return &v
	}).(ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput)
}

// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayIPConfigurationPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Reference of the subnet resource. A subnet from where application gateway gets its private address.
func (o ApplicationGatewayIPConfigurationPropertiesFormatOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationPropertiesFormat) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

type ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput) ToApplicationGatewayIPConfigurationPropertiesFormatPtrOutput() ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput) ToApplicationGatewayIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput) Elem() ApplicationGatewayIPConfigurationPropertiesFormatOutput {
	return o.ApplyT(func(v *ApplicationGatewayIPConfigurationPropertiesFormat) ApplicationGatewayIPConfigurationPropertiesFormat {
		return *v
	}).(ApplicationGatewayIPConfigurationPropertiesFormatOutput)
}

// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayIPConfigurationPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Reference of the subnet resource. A subnet from where application gateway gets its private address.
func (o ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayIPConfigurationPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubResourcePtrOutput)
}

// Properties of IP configuration of an application gateway.
type ApplicationGatewayIPConfigurationPropertiesFormatResponse struct {
	// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Reference of the subnet resource. A subnet from where application gateway gets its private address.
	Subnet *SubResourceResponse `pulumi:"subnet"`
}

// ApplicationGatewayIPConfigurationPropertiesFormatResponseInput is an input type that accepts ApplicationGatewayIPConfigurationPropertiesFormatResponseArgs and ApplicationGatewayIPConfigurationPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationPropertiesFormatResponseInput` via:
//
//          ApplicationGatewayIPConfigurationPropertiesFormatResponseArgs{...}
type ApplicationGatewayIPConfigurationPropertiesFormatResponseInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationPropertiesFormatResponseOutput() ApplicationGatewayIPConfigurationPropertiesFormatResponseOutput
	ToApplicationGatewayIPConfigurationPropertiesFormatResponseOutputWithContext(context.Context) ApplicationGatewayIPConfigurationPropertiesFormatResponseOutput
}

// Properties of IP configuration of an application gateway.
type ApplicationGatewayIPConfigurationPropertiesFormatResponseArgs struct {
	// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Reference of the subnet resource. A subnet from where application gateway gets its private address.
	Subnet SubResourceResponsePtrInput `pulumi:"subnet"`
}

func (ApplicationGatewayIPConfigurationPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationPropertiesFormatResponseArgs) ToApplicationGatewayIPConfigurationPropertiesFormatResponseOutput() ApplicationGatewayIPConfigurationPropertiesFormatResponseOutput {
	return i.ToApplicationGatewayIPConfigurationPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationPropertiesFormatResponseArgs) ToApplicationGatewayIPConfigurationPropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationPropertiesFormatResponseOutput)
}

func (i ApplicationGatewayIPConfigurationPropertiesFormatResponseArgs) ToApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput() ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationPropertiesFormatResponseArgs) ToApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationPropertiesFormatResponseOutput).ToApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrInput is an input type that accepts ApplicationGatewayIPConfigurationPropertiesFormatResponseArgs, ApplicationGatewayIPConfigurationPropertiesFormatResponsePtr and ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrInput` via:
//
//          ApplicationGatewayIPConfigurationPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput() ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput
	ToApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Context) ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput
}

type applicationGatewayIPConfigurationPropertiesFormatResponsePtrType ApplicationGatewayIPConfigurationPropertiesFormatResponseArgs

func ApplicationGatewayIPConfigurationPropertiesFormatResponsePtr(v *ApplicationGatewayIPConfigurationPropertiesFormatResponseArgs) ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrInput {
	return (*applicationGatewayIPConfigurationPropertiesFormatResponsePtrType)(v)
}

func (*applicationGatewayIPConfigurationPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (i *applicationGatewayIPConfigurationPropertiesFormatResponsePtrType) ToApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput() ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayIPConfigurationPropertiesFormatResponsePtrType) ToApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput)
}

// Properties of IP configuration of an application gateway.
type ApplicationGatewayIPConfigurationPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationPropertiesFormatResponseOutput) ToApplicationGatewayIPConfigurationPropertiesFormatResponseOutput() ApplicationGatewayIPConfigurationPropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationPropertiesFormatResponseOutput) ToApplicationGatewayIPConfigurationPropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationPropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationPropertiesFormatResponseOutput) ToApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput() ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ToApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayIPConfigurationPropertiesFormatResponseOutput) ToApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationPropertiesFormatResponse) *ApplicationGatewayIPConfigurationPropertiesFormatResponse {
		return &v
	}).(ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput)
}

// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayIPConfigurationPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Reference of the subnet resource. A subnet from where application gateway gets its private address.
func (o ApplicationGatewayIPConfigurationPropertiesFormatResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationPropertiesFormatResponse) *SubResourceResponse {
		return v.Subnet
	}).(SubResourceResponsePtrOutput)
}

type ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput) ToApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput() ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput) ToApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput) Elem() ApplicationGatewayIPConfigurationPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayIPConfigurationPropertiesFormatResponse) ApplicationGatewayIPConfigurationPropertiesFormatResponse {
		return *v
	}).(ApplicationGatewayIPConfigurationPropertiesFormatResponseOutput)
}

// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayIPConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Reference of the subnet resource. A subnet from where application gateway gets its private address.
func (o ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayIPConfigurationPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubResourceResponsePtrOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the IP configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of IP configuration of an application gateway.
	Properties *ApplicationGatewayIPConfigurationPropertiesFormatResponse `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayIPConfigurationResponseInput is an input type that accepts ApplicationGatewayIPConfigurationResponseArgs and ApplicationGatewayIPConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationResponseInput` via:
//
//          ApplicationGatewayIPConfigurationResponseArgs{...}
type ApplicationGatewayIPConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationResponseOutput() ApplicationGatewayIPConfigurationResponseOutput
	ToApplicationGatewayIPConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayIPConfigurationResponseOutput
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the IP configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of IP configuration of an application gateway.
	Properties ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationResponseArgs) ToApplicationGatewayIPConfigurationResponseOutput() ApplicationGatewayIPConfigurationResponseOutput {
	return i.ToApplicationGatewayIPConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationResponseArgs) ToApplicationGatewayIPConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationResponseOutput)
}

// ApplicationGatewayIPConfigurationResponseArrayInput is an input type that accepts ApplicationGatewayIPConfigurationResponseArray and ApplicationGatewayIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationResponseArrayInput` via:
//
//          ApplicationGatewayIPConfigurationResponseArray{ ApplicationGatewayIPConfigurationResponseArgs{...} }
type ApplicationGatewayIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationResponseArrayOutput() ApplicationGatewayIPConfigurationResponseArrayOutput
	ToApplicationGatewayIPConfigurationResponseArrayOutputWithContext(context.Context) ApplicationGatewayIPConfigurationResponseArrayOutput
}

type ApplicationGatewayIPConfigurationResponseArray []ApplicationGatewayIPConfigurationResponseInput

func (ApplicationGatewayIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationResponseArray) ToApplicationGatewayIPConfigurationResponseArrayOutput() ApplicationGatewayIPConfigurationResponseArrayOutput {
	return i.ToApplicationGatewayIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationResponseArray) ToApplicationGatewayIPConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationResponseArrayOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationResponseOutput) ToApplicationGatewayIPConfigurationResponseOutput() ApplicationGatewayIPConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationResponseOutput) ToApplicationGatewayIPConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayIPConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the IP configuration that is unique within an Application Gateway.
func (o ApplicationGatewayIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of IP configuration of an application gateway.
func (o ApplicationGatewayIPConfigurationResponseOutput) Properties() ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *ApplicationGatewayIPConfigurationPropertiesFormatResponse {
		return v.Properties
	}).(ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayIPConfigurationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationResponseArrayOutput) ToApplicationGatewayIPConfigurationResponseArrayOutput() ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationResponseArrayOutput) ToApplicationGatewayIPConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayIPConfigurationResponse {
		return vs[0].([]ApplicationGatewayIPConfigurationResponse)[vs[1].(int)]
	}).(ApplicationGatewayIPConfigurationResponseOutput)
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRule struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the path rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of path rule of an application gateway.
	Properties *ApplicationGatewayPathRulePropertiesFormat `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayPathRuleInput is an input type that accepts ApplicationGatewayPathRuleArgs and ApplicationGatewayPathRuleOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRuleInput` via:
//
//          ApplicationGatewayPathRuleArgs{...}
type ApplicationGatewayPathRuleInput interface {
	pulumi.Input

	ToApplicationGatewayPathRuleOutput() ApplicationGatewayPathRuleOutput
	ToApplicationGatewayPathRuleOutputWithContext(context.Context) ApplicationGatewayPathRuleOutput
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the path rule that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of path rule of an application gateway.
	Properties ApplicationGatewayPathRulePropertiesFormatPtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayPathRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRule)(nil)).Elem()
}

func (i ApplicationGatewayPathRuleArgs) ToApplicationGatewayPathRuleOutput() ApplicationGatewayPathRuleOutput {
	return i.ToApplicationGatewayPathRuleOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRuleArgs) ToApplicationGatewayPathRuleOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRuleOutput)
}

// ApplicationGatewayPathRuleArrayInput is an input type that accepts ApplicationGatewayPathRuleArray and ApplicationGatewayPathRuleArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRuleArrayInput` via:
//
//          ApplicationGatewayPathRuleArray{ ApplicationGatewayPathRuleArgs{...} }
type ApplicationGatewayPathRuleArrayInput interface {
	pulumi.Input

	ToApplicationGatewayPathRuleArrayOutput() ApplicationGatewayPathRuleArrayOutput
	ToApplicationGatewayPathRuleArrayOutputWithContext(context.Context) ApplicationGatewayPathRuleArrayOutput
}

type ApplicationGatewayPathRuleArray []ApplicationGatewayPathRuleInput

func (ApplicationGatewayPathRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPathRule)(nil)).Elem()
}

func (i ApplicationGatewayPathRuleArray) ToApplicationGatewayPathRuleArrayOutput() ApplicationGatewayPathRuleArrayOutput {
	return i.ToApplicationGatewayPathRuleArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRuleArray) ToApplicationGatewayPathRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRuleArrayOutput)
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRule)(nil)).Elem()
}

func (o ApplicationGatewayPathRuleOutput) ToApplicationGatewayPathRuleOutput() ApplicationGatewayPathRuleOutput {
	return o
}

func (o ApplicationGatewayPathRuleOutput) ToApplicationGatewayPathRuleOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayPathRuleOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayPathRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the path rule that is unique within an Application Gateway.
func (o ApplicationGatewayPathRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of path rule of an application gateway.
func (o ApplicationGatewayPathRuleOutput) Properties() ApplicationGatewayPathRulePropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *ApplicationGatewayPathRulePropertiesFormat { return v.Properties }).(ApplicationGatewayPathRulePropertiesFormatPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayPathRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayPathRuleArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPathRule)(nil)).Elem()
}

func (o ApplicationGatewayPathRuleArrayOutput) ToApplicationGatewayPathRuleArrayOutput() ApplicationGatewayPathRuleArrayOutput {
	return o
}

func (o ApplicationGatewayPathRuleArrayOutput) ToApplicationGatewayPathRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleArrayOutput {
	return o
}

func (o ApplicationGatewayPathRuleArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPathRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPathRule {
		return vs[0].([]ApplicationGatewayPathRule)[vs[1].(int)]
	}).(ApplicationGatewayPathRuleOutput)
}

// Properties of path rule of an application gateway.
type ApplicationGatewayPathRulePropertiesFormat struct {
	// Backend address pool resource of URL path map path rule.
	BackendAddressPool *SubResource `pulumi:"backendAddressPool"`
	// Backend http settings resource of URL path map path rule.
	BackendHttpSettings *SubResource `pulumi:"backendHttpSettings"`
	// Path rules of URL path map.
	Paths []string `pulumi:"paths"`
	// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Redirect configuration resource of URL path map path rule.
	RedirectConfiguration *SubResource `pulumi:"redirectConfiguration"`
	// Rewrite rule set resource of URL path map path rule.
	RewriteRuleSet *SubResource `pulumi:"rewriteRuleSet"`
}

// ApplicationGatewayPathRulePropertiesFormatInput is an input type that accepts ApplicationGatewayPathRulePropertiesFormatArgs and ApplicationGatewayPathRulePropertiesFormatOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRulePropertiesFormatInput` via:
//
//          ApplicationGatewayPathRulePropertiesFormatArgs{...}
type ApplicationGatewayPathRulePropertiesFormatInput interface {
	pulumi.Input

	ToApplicationGatewayPathRulePropertiesFormatOutput() ApplicationGatewayPathRulePropertiesFormatOutput
	ToApplicationGatewayPathRulePropertiesFormatOutputWithContext(context.Context) ApplicationGatewayPathRulePropertiesFormatOutput
}

// Properties of path rule of an application gateway.
type ApplicationGatewayPathRulePropertiesFormatArgs struct {
	// Backend address pool resource of URL path map path rule.
	BackendAddressPool SubResourcePtrInput `pulumi:"backendAddressPool"`
	// Backend http settings resource of URL path map path rule.
	BackendHttpSettings SubResourcePtrInput `pulumi:"backendHttpSettings"`
	// Path rules of URL path map.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Redirect configuration resource of URL path map path rule.
	RedirectConfiguration SubResourcePtrInput `pulumi:"redirectConfiguration"`
	// Rewrite rule set resource of URL path map path rule.
	RewriteRuleSet SubResourcePtrInput `pulumi:"rewriteRuleSet"`
}

func (ApplicationGatewayPathRulePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRulePropertiesFormat)(nil)).Elem()
}

func (i ApplicationGatewayPathRulePropertiesFormatArgs) ToApplicationGatewayPathRulePropertiesFormatOutput() ApplicationGatewayPathRulePropertiesFormatOutput {
	return i.ToApplicationGatewayPathRulePropertiesFormatOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRulePropertiesFormatArgs) ToApplicationGatewayPathRulePropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayPathRulePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRulePropertiesFormatOutput)
}

func (i ApplicationGatewayPathRulePropertiesFormatArgs) ToApplicationGatewayPathRulePropertiesFormatPtrOutput() ApplicationGatewayPathRulePropertiesFormatPtrOutput {
	return i.ToApplicationGatewayPathRulePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRulePropertiesFormatArgs) ToApplicationGatewayPathRulePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayPathRulePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRulePropertiesFormatOutput).ToApplicationGatewayPathRulePropertiesFormatPtrOutputWithContext(ctx)
}

// ApplicationGatewayPathRulePropertiesFormatPtrInput is an input type that accepts ApplicationGatewayPathRulePropertiesFormatArgs, ApplicationGatewayPathRulePropertiesFormatPtr and ApplicationGatewayPathRulePropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRulePropertiesFormatPtrInput` via:
//
//          ApplicationGatewayPathRulePropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayPathRulePropertiesFormatPtrInput interface {
	pulumi.Input

	ToApplicationGatewayPathRulePropertiesFormatPtrOutput() ApplicationGatewayPathRulePropertiesFormatPtrOutput
	ToApplicationGatewayPathRulePropertiesFormatPtrOutputWithContext(context.Context) ApplicationGatewayPathRulePropertiesFormatPtrOutput
}

type applicationGatewayPathRulePropertiesFormatPtrType ApplicationGatewayPathRulePropertiesFormatArgs

func ApplicationGatewayPathRulePropertiesFormatPtr(v *ApplicationGatewayPathRulePropertiesFormatArgs) ApplicationGatewayPathRulePropertiesFormatPtrInput {
	return (*applicationGatewayPathRulePropertiesFormatPtrType)(v)
}

func (*applicationGatewayPathRulePropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayPathRulePropertiesFormat)(nil)).Elem()
}

func (i *applicationGatewayPathRulePropertiesFormatPtrType) ToApplicationGatewayPathRulePropertiesFormatPtrOutput() ApplicationGatewayPathRulePropertiesFormatPtrOutput {
	return i.ToApplicationGatewayPathRulePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayPathRulePropertiesFormatPtrType) ToApplicationGatewayPathRulePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayPathRulePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRulePropertiesFormatPtrOutput)
}

// Properties of path rule of an application gateway.
type ApplicationGatewayPathRulePropertiesFormatOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRulePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRulePropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayPathRulePropertiesFormatOutput) ToApplicationGatewayPathRulePropertiesFormatOutput() ApplicationGatewayPathRulePropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayPathRulePropertiesFormatOutput) ToApplicationGatewayPathRulePropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayPathRulePropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayPathRulePropertiesFormatOutput) ToApplicationGatewayPathRulePropertiesFormatPtrOutput() ApplicationGatewayPathRulePropertiesFormatPtrOutput {
	return o.ToApplicationGatewayPathRulePropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayPathRulePropertiesFormatOutput) ToApplicationGatewayPathRulePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayPathRulePropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRulePropertiesFormat) *ApplicationGatewayPathRulePropertiesFormat {
		return &v
	}).(ApplicationGatewayPathRulePropertiesFormatPtrOutput)
}

// Backend address pool resource of URL path map path rule.
func (o ApplicationGatewayPathRulePropertiesFormatOutput) BackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRulePropertiesFormat) *SubResource { return v.BackendAddressPool }).(SubResourcePtrOutput)
}

// Backend http settings resource of URL path map path rule.
func (o ApplicationGatewayPathRulePropertiesFormatOutput) BackendHttpSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRulePropertiesFormat) *SubResource { return v.BackendHttpSettings }).(SubResourcePtrOutput)
}

// Path rules of URL path map.
func (o ApplicationGatewayPathRulePropertiesFormatOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRulePropertiesFormat) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayPathRulePropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRulePropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Redirect configuration resource of URL path map path rule.
func (o ApplicationGatewayPathRulePropertiesFormatOutput) RedirectConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRulePropertiesFormat) *SubResource { return v.RedirectConfiguration }).(SubResourcePtrOutput)
}

// Rewrite rule set resource of URL path map path rule.
func (o ApplicationGatewayPathRulePropertiesFormatOutput) RewriteRuleSet() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRulePropertiesFormat) *SubResource { return v.RewriteRuleSet }).(SubResourcePtrOutput)
}

type ApplicationGatewayPathRulePropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRulePropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayPathRulePropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayPathRulePropertiesFormatPtrOutput) ToApplicationGatewayPathRulePropertiesFormatPtrOutput() ApplicationGatewayPathRulePropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayPathRulePropertiesFormatPtrOutput) ToApplicationGatewayPathRulePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayPathRulePropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayPathRulePropertiesFormatPtrOutput) Elem() ApplicationGatewayPathRulePropertiesFormatOutput {
	return o.ApplyT(func(v *ApplicationGatewayPathRulePropertiesFormat) ApplicationGatewayPathRulePropertiesFormat {
		return *v
	}).(ApplicationGatewayPathRulePropertiesFormatOutput)
}

// Backend address pool resource of URL path map path rule.
func (o ApplicationGatewayPathRulePropertiesFormatPtrOutput) BackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPathRulePropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.BackendAddressPool
	}).(SubResourcePtrOutput)
}

// Backend http settings resource of URL path map path rule.
func (o ApplicationGatewayPathRulePropertiesFormatPtrOutput) BackendHttpSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPathRulePropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.BackendHttpSettings
	}).(SubResourcePtrOutput)
}

// Path rules of URL path map.
func (o ApplicationGatewayPathRulePropertiesFormatPtrOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPathRulePropertiesFormat) []string {
		if v == nil {
			return nil
		}
		return v.Paths
	}).(pulumi.StringArrayOutput)
}

// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayPathRulePropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPathRulePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Redirect configuration resource of URL path map path rule.
func (o ApplicationGatewayPathRulePropertiesFormatPtrOutput) RedirectConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPathRulePropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.RedirectConfiguration
	}).(SubResourcePtrOutput)
}

// Rewrite rule set resource of URL path map path rule.
func (o ApplicationGatewayPathRulePropertiesFormatPtrOutput) RewriteRuleSet() SubResourcePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPathRulePropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.RewriteRuleSet
	}).(SubResourcePtrOutput)
}

// Properties of path rule of an application gateway.
type ApplicationGatewayPathRulePropertiesFormatResponse struct {
	// Backend address pool resource of URL path map path rule.
	BackendAddressPool *SubResourceResponse `pulumi:"backendAddressPool"`
	// Backend http settings resource of URL path map path rule.
	BackendHttpSettings *SubResourceResponse `pulumi:"backendHttpSettings"`
	// Path rules of URL path map.
	Paths []string `pulumi:"paths"`
	// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Redirect configuration resource of URL path map path rule.
	RedirectConfiguration *SubResourceResponse `pulumi:"redirectConfiguration"`
	// Rewrite rule set resource of URL path map path rule.
	RewriteRuleSet *SubResourceResponse `pulumi:"rewriteRuleSet"`
}

// ApplicationGatewayPathRulePropertiesFormatResponseInput is an input type that accepts ApplicationGatewayPathRulePropertiesFormatResponseArgs and ApplicationGatewayPathRulePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRulePropertiesFormatResponseInput` via:
//
//          ApplicationGatewayPathRulePropertiesFormatResponseArgs{...}
type ApplicationGatewayPathRulePropertiesFormatResponseInput interface {
	pulumi.Input

	ToApplicationGatewayPathRulePropertiesFormatResponseOutput() ApplicationGatewayPathRulePropertiesFormatResponseOutput
	ToApplicationGatewayPathRulePropertiesFormatResponseOutputWithContext(context.Context) ApplicationGatewayPathRulePropertiesFormatResponseOutput
}

// Properties of path rule of an application gateway.
type ApplicationGatewayPathRulePropertiesFormatResponseArgs struct {
	// Backend address pool resource of URL path map path rule.
	BackendAddressPool SubResourceResponsePtrInput `pulumi:"backendAddressPool"`
	// Backend http settings resource of URL path map path rule.
	BackendHttpSettings SubResourceResponsePtrInput `pulumi:"backendHttpSettings"`
	// Path rules of URL path map.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Redirect configuration resource of URL path map path rule.
	RedirectConfiguration SubResourceResponsePtrInput `pulumi:"redirectConfiguration"`
	// Rewrite rule set resource of URL path map path rule.
	RewriteRuleSet SubResourceResponsePtrInput `pulumi:"rewriteRuleSet"`
}

func (ApplicationGatewayPathRulePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRulePropertiesFormatResponse)(nil)).Elem()
}

func (i ApplicationGatewayPathRulePropertiesFormatResponseArgs) ToApplicationGatewayPathRulePropertiesFormatResponseOutput() ApplicationGatewayPathRulePropertiesFormatResponseOutput {
	return i.ToApplicationGatewayPathRulePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRulePropertiesFormatResponseArgs) ToApplicationGatewayPathRulePropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayPathRulePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRulePropertiesFormatResponseOutput)
}

func (i ApplicationGatewayPathRulePropertiesFormatResponseArgs) ToApplicationGatewayPathRulePropertiesFormatResponsePtrOutput() ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayPathRulePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRulePropertiesFormatResponseArgs) ToApplicationGatewayPathRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRulePropertiesFormatResponseOutput).ToApplicationGatewayPathRulePropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayPathRulePropertiesFormatResponsePtrInput is an input type that accepts ApplicationGatewayPathRulePropertiesFormatResponseArgs, ApplicationGatewayPathRulePropertiesFormatResponsePtr and ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRulePropertiesFormatResponsePtrInput` via:
//
//          ApplicationGatewayPathRulePropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayPathRulePropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayPathRulePropertiesFormatResponsePtrOutput() ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput
	ToApplicationGatewayPathRulePropertiesFormatResponsePtrOutputWithContext(context.Context) ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput
}

type applicationGatewayPathRulePropertiesFormatResponsePtrType ApplicationGatewayPathRulePropertiesFormatResponseArgs

func ApplicationGatewayPathRulePropertiesFormatResponsePtr(v *ApplicationGatewayPathRulePropertiesFormatResponseArgs) ApplicationGatewayPathRulePropertiesFormatResponsePtrInput {
	return (*applicationGatewayPathRulePropertiesFormatResponsePtrType)(v)
}

func (*applicationGatewayPathRulePropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayPathRulePropertiesFormatResponse)(nil)).Elem()
}

func (i *applicationGatewayPathRulePropertiesFormatResponsePtrType) ToApplicationGatewayPathRulePropertiesFormatResponsePtrOutput() ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayPathRulePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayPathRulePropertiesFormatResponsePtrType) ToApplicationGatewayPathRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput)
}

// Properties of path rule of an application gateway.
type ApplicationGatewayPathRulePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRulePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRulePropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayPathRulePropertiesFormatResponseOutput) ToApplicationGatewayPathRulePropertiesFormatResponseOutput() ApplicationGatewayPathRulePropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayPathRulePropertiesFormatResponseOutput) ToApplicationGatewayPathRulePropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayPathRulePropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayPathRulePropertiesFormatResponseOutput) ToApplicationGatewayPathRulePropertiesFormatResponsePtrOutput() ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput {
	return o.ToApplicationGatewayPathRulePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayPathRulePropertiesFormatResponseOutput) ToApplicationGatewayPathRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRulePropertiesFormatResponse) *ApplicationGatewayPathRulePropertiesFormatResponse {
		return &v
	}).(ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput)
}

// Backend address pool resource of URL path map path rule.
func (o ApplicationGatewayPathRulePropertiesFormatResponseOutput) BackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRulePropertiesFormatResponse) *SubResourceResponse {
		return v.BackendAddressPool
	}).(SubResourceResponsePtrOutput)
}

// Backend http settings resource of URL path map path rule.
func (o ApplicationGatewayPathRulePropertiesFormatResponseOutput) BackendHttpSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRulePropertiesFormatResponse) *SubResourceResponse {
		return v.BackendHttpSettings
	}).(SubResourceResponsePtrOutput)
}

// Path rules of URL path map.
func (o ApplicationGatewayPathRulePropertiesFormatResponseOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRulePropertiesFormatResponse) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayPathRulePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRulePropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Redirect configuration resource of URL path map path rule.
func (o ApplicationGatewayPathRulePropertiesFormatResponseOutput) RedirectConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRulePropertiesFormatResponse) *SubResourceResponse {
		return v.RedirectConfiguration
	}).(SubResourceResponsePtrOutput)
}

// Rewrite rule set resource of URL path map path rule.
func (o ApplicationGatewayPathRulePropertiesFormatResponseOutput) RewriteRuleSet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRulePropertiesFormatResponse) *SubResourceResponse {
		return v.RewriteRuleSet
	}).(SubResourceResponsePtrOutput)
}

type ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayPathRulePropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput) ToApplicationGatewayPathRulePropertiesFormatResponsePtrOutput() ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput) ToApplicationGatewayPathRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput) Elem() ApplicationGatewayPathRulePropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayPathRulePropertiesFormatResponse) ApplicationGatewayPathRulePropertiesFormatResponse {
		return *v
	}).(ApplicationGatewayPathRulePropertiesFormatResponseOutput)
}

// Backend address pool resource of URL path map path rule.
func (o ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput) BackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPathRulePropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.BackendAddressPool
	}).(SubResourceResponsePtrOutput)
}

// Backend http settings resource of URL path map path rule.
func (o ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput) BackendHttpSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPathRulePropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.BackendHttpSettings
	}).(SubResourceResponsePtrOutput)
}

// Path rules of URL path map.
func (o ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPathRulePropertiesFormatResponse) []string {
		if v == nil {
			return nil
		}
		return v.Paths
	}).(pulumi.StringArrayOutput)
}

// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPathRulePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Redirect configuration resource of URL path map path rule.
func (o ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput) RedirectConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPathRulePropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.RedirectConfiguration
	}).(SubResourceResponsePtrOutput)
}

// Rewrite rule set resource of URL path map path rule.
func (o ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput) RewriteRuleSet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPathRulePropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.RewriteRuleSet
	}).(SubResourceResponsePtrOutput)
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the path rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of path rule of an application gateway.
	Properties *ApplicationGatewayPathRulePropertiesFormatResponse `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayPathRuleResponseInput is an input type that accepts ApplicationGatewayPathRuleResponseArgs and ApplicationGatewayPathRuleResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRuleResponseInput` via:
//
//          ApplicationGatewayPathRuleResponseArgs{...}
type ApplicationGatewayPathRuleResponseInput interface {
	pulumi.Input

	ToApplicationGatewayPathRuleResponseOutput() ApplicationGatewayPathRuleResponseOutput
	ToApplicationGatewayPathRuleResponseOutputWithContext(context.Context) ApplicationGatewayPathRuleResponseOutput
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the path rule that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of path rule of an application gateway.
	Properties ApplicationGatewayPathRulePropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayPathRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRuleResponse)(nil)).Elem()
}

func (i ApplicationGatewayPathRuleResponseArgs) ToApplicationGatewayPathRuleResponseOutput() ApplicationGatewayPathRuleResponseOutput {
	return i.ToApplicationGatewayPathRuleResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRuleResponseArgs) ToApplicationGatewayPathRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRuleResponseOutput)
}

// ApplicationGatewayPathRuleResponseArrayInput is an input type that accepts ApplicationGatewayPathRuleResponseArray and ApplicationGatewayPathRuleResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRuleResponseArrayInput` via:
//
//          ApplicationGatewayPathRuleResponseArray{ ApplicationGatewayPathRuleResponseArgs{...} }
type ApplicationGatewayPathRuleResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayPathRuleResponseArrayOutput() ApplicationGatewayPathRuleResponseArrayOutput
	ToApplicationGatewayPathRuleResponseArrayOutputWithContext(context.Context) ApplicationGatewayPathRuleResponseArrayOutput
}

type ApplicationGatewayPathRuleResponseArray []ApplicationGatewayPathRuleResponseInput

func (ApplicationGatewayPathRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPathRuleResponse)(nil)).Elem()
}

func (i ApplicationGatewayPathRuleResponseArray) ToApplicationGatewayPathRuleResponseArrayOutput() ApplicationGatewayPathRuleResponseArrayOutput {
	return i.ToApplicationGatewayPathRuleResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRuleResponseArray) ToApplicationGatewayPathRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRuleResponseArrayOutput)
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayPathRuleResponseOutput) ToApplicationGatewayPathRuleResponseOutput() ApplicationGatewayPathRuleResponseOutput {
	return o
}

func (o ApplicationGatewayPathRuleResponseOutput) ToApplicationGatewayPathRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayPathRuleResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayPathRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the path rule that is unique within an Application Gateway.
func (o ApplicationGatewayPathRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of path rule of an application gateway.
func (o ApplicationGatewayPathRuleResponseOutput) Properties() ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *ApplicationGatewayPathRulePropertiesFormatResponse {
		return v.Properties
	}).(ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayPathRuleResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayPathRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPathRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayPathRuleResponseArrayOutput) ToApplicationGatewayPathRuleResponseArrayOutput() ApplicationGatewayPathRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPathRuleResponseArrayOutput) ToApplicationGatewayPathRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPathRuleResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPathRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPathRuleResponse {
		return vs[0].([]ApplicationGatewayPathRuleResponse)[vs[1].(int)]
	}).(ApplicationGatewayPathRuleResponseOutput)
}

// Probe of the application gateway.
type ApplicationGatewayProbe struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the probe that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of probe of an application gateway.
	Properties *ApplicationGatewayProbePropertiesFormat `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayProbeInput is an input type that accepts ApplicationGatewayProbeArgs and ApplicationGatewayProbeOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeInput` via:
//
//          ApplicationGatewayProbeArgs{...}
type ApplicationGatewayProbeInput interface {
	pulumi.Input

	ToApplicationGatewayProbeOutput() ApplicationGatewayProbeOutput
	ToApplicationGatewayProbeOutputWithContext(context.Context) ApplicationGatewayProbeOutput
}

// Probe of the application gateway.
type ApplicationGatewayProbeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the probe that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of probe of an application gateway.
	Properties ApplicationGatewayProbePropertiesFormatPtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbe)(nil)).Elem()
}

func (i ApplicationGatewayProbeArgs) ToApplicationGatewayProbeOutput() ApplicationGatewayProbeOutput {
	return i.ToApplicationGatewayProbeOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeArgs) ToApplicationGatewayProbeOutputWithContext(ctx context.Context) ApplicationGatewayProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeOutput)
}

// ApplicationGatewayProbeArrayInput is an input type that accepts ApplicationGatewayProbeArray and ApplicationGatewayProbeArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeArrayInput` via:
//
//          ApplicationGatewayProbeArray{ ApplicationGatewayProbeArgs{...} }
type ApplicationGatewayProbeArrayInput interface {
	pulumi.Input

	ToApplicationGatewayProbeArrayOutput() ApplicationGatewayProbeArrayOutput
	ToApplicationGatewayProbeArrayOutputWithContext(context.Context) ApplicationGatewayProbeArrayOutput
}

type ApplicationGatewayProbeArray []ApplicationGatewayProbeInput

func (ApplicationGatewayProbeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbe)(nil)).Elem()
}

func (i ApplicationGatewayProbeArray) ToApplicationGatewayProbeArrayOutput() ApplicationGatewayProbeArrayOutput {
	return i.ToApplicationGatewayProbeArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeArray) ToApplicationGatewayProbeArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeArrayOutput)
}

// Probe of the application gateway.
type ApplicationGatewayProbeOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbe)(nil)).Elem()
}

func (o ApplicationGatewayProbeOutput) ToApplicationGatewayProbeOutput() ApplicationGatewayProbeOutput {
	return o
}

func (o ApplicationGatewayProbeOutput) ToApplicationGatewayProbeOutputWithContext(ctx context.Context) ApplicationGatewayProbeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayProbeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayProbeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the probe that is unique within an Application Gateway.
func (o ApplicationGatewayProbeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of probe of an application gateway.
func (o ApplicationGatewayProbeOutput) Properties() ApplicationGatewayProbePropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *ApplicationGatewayProbePropertiesFormat { return v.Properties }).(ApplicationGatewayProbePropertiesFormatPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayProbeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayProbeArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbe)(nil)).Elem()
}

func (o ApplicationGatewayProbeArrayOutput) ToApplicationGatewayProbeArrayOutput() ApplicationGatewayProbeArrayOutput {
	return o
}

func (o ApplicationGatewayProbeArrayOutput) ToApplicationGatewayProbeArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeArrayOutput {
	return o
}

func (o ApplicationGatewayProbeArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayProbeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayProbe {
		return vs[0].([]ApplicationGatewayProbe)[vs[1].(int)]
	}).(ApplicationGatewayProbeOutput)
}

// Application gateway probe health response match
type ApplicationGatewayProbeHealthResponseMatch struct {
	// Body that must be contained in the health response. Default value is empty.
	Body *string `pulumi:"body"`
	// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
	StatusCodes []string `pulumi:"statusCodes"`
}

// ApplicationGatewayProbeHealthResponseMatchInput is an input type that accepts ApplicationGatewayProbeHealthResponseMatchArgs and ApplicationGatewayProbeHealthResponseMatchOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeHealthResponseMatchInput` via:
//
//          ApplicationGatewayProbeHealthResponseMatchArgs{...}
type ApplicationGatewayProbeHealthResponseMatchInput interface {
	pulumi.Input

	ToApplicationGatewayProbeHealthResponseMatchOutput() ApplicationGatewayProbeHealthResponseMatchOutput
	ToApplicationGatewayProbeHealthResponseMatchOutputWithContext(context.Context) ApplicationGatewayProbeHealthResponseMatchOutput
}

// Application gateway probe health response match
type ApplicationGatewayProbeHealthResponseMatchArgs struct {
	// Body that must be contained in the health response. Default value is empty.
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
	StatusCodes pulumi.StringArrayInput `pulumi:"statusCodes"`
}

func (ApplicationGatewayProbeHealthResponseMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeHealthResponseMatch)(nil)).Elem()
}

func (i ApplicationGatewayProbeHealthResponseMatchArgs) ToApplicationGatewayProbeHealthResponseMatchOutput() ApplicationGatewayProbeHealthResponseMatchOutput {
	return i.ToApplicationGatewayProbeHealthResponseMatchOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeHealthResponseMatchArgs) ToApplicationGatewayProbeHealthResponseMatchOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeHealthResponseMatchOutput)
}

func (i ApplicationGatewayProbeHealthResponseMatchArgs) ToApplicationGatewayProbeHealthResponseMatchPtrOutput() ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return i.ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeHealthResponseMatchArgs) ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeHealthResponseMatchOutput).ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(ctx)
}

// ApplicationGatewayProbeHealthResponseMatchPtrInput is an input type that accepts ApplicationGatewayProbeHealthResponseMatchArgs, ApplicationGatewayProbeHealthResponseMatchPtr and ApplicationGatewayProbeHealthResponseMatchPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeHealthResponseMatchPtrInput` via:
//
//          ApplicationGatewayProbeHealthResponseMatchArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayProbeHealthResponseMatchPtrInput interface {
	pulumi.Input

	ToApplicationGatewayProbeHealthResponseMatchPtrOutput() ApplicationGatewayProbeHealthResponseMatchPtrOutput
	ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(context.Context) ApplicationGatewayProbeHealthResponseMatchPtrOutput
}

type applicationGatewayProbeHealthResponseMatchPtrType ApplicationGatewayProbeHealthResponseMatchArgs

func ApplicationGatewayProbeHealthResponseMatchPtr(v *ApplicationGatewayProbeHealthResponseMatchArgs) ApplicationGatewayProbeHealthResponseMatchPtrInput {
	return (*applicationGatewayProbeHealthResponseMatchPtrType)(v)
}

func (*applicationGatewayProbeHealthResponseMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayProbeHealthResponseMatch)(nil)).Elem()
}

func (i *applicationGatewayProbeHealthResponseMatchPtrType) ToApplicationGatewayProbeHealthResponseMatchPtrOutput() ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return i.ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayProbeHealthResponseMatchPtrType) ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeHealthResponseMatchPtrOutput)
}

// Application gateway probe health response match
type ApplicationGatewayProbeHealthResponseMatchOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeHealthResponseMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeHealthResponseMatch)(nil)).Elem()
}

func (o ApplicationGatewayProbeHealthResponseMatchOutput) ToApplicationGatewayProbeHealthResponseMatchOutput() ApplicationGatewayProbeHealthResponseMatchOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchOutput) ToApplicationGatewayProbeHealthResponseMatchOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchOutput) ToApplicationGatewayProbeHealthResponseMatchPtrOutput() ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return o.ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayProbeHealthResponseMatchOutput) ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeHealthResponseMatch) *ApplicationGatewayProbeHealthResponseMatch {
		return &v
	}).(ApplicationGatewayProbeHealthResponseMatchPtrOutput)
}

// Body that must be contained in the health response. Default value is empty.
func (o ApplicationGatewayProbeHealthResponseMatchOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeHealthResponseMatch) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
func (o ApplicationGatewayProbeHealthResponseMatchOutput) StatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeHealthResponseMatch) []string { return v.StatusCodes }).(pulumi.StringArrayOutput)
}

type ApplicationGatewayProbeHealthResponseMatchPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeHealthResponseMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayProbeHealthResponseMatch)(nil)).Elem()
}

func (o ApplicationGatewayProbeHealthResponseMatchPtrOutput) ToApplicationGatewayProbeHealthResponseMatchPtrOutput() ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchPtrOutput) ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchPtrOutput) Elem() ApplicationGatewayProbeHealthResponseMatchOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatch) ApplicationGatewayProbeHealthResponseMatch {
		return *v
	}).(ApplicationGatewayProbeHealthResponseMatchOutput)
}

// Body that must be contained in the health response. Default value is empty.
func (o ApplicationGatewayProbeHealthResponseMatchPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatch) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
func (o ApplicationGatewayProbeHealthResponseMatchPtrOutput) StatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatch) []string {
		if v == nil {
			return nil
		}
		return v.StatusCodes
	}).(pulumi.StringArrayOutput)
}

// Application gateway probe health response match
type ApplicationGatewayProbeHealthResponseMatchResponse struct {
	// Body that must be contained in the health response. Default value is empty.
	Body *string `pulumi:"body"`
	// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
	StatusCodes []string `pulumi:"statusCodes"`
}

// ApplicationGatewayProbeHealthResponseMatchResponseInput is an input type that accepts ApplicationGatewayProbeHealthResponseMatchResponseArgs and ApplicationGatewayProbeHealthResponseMatchResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeHealthResponseMatchResponseInput` via:
//
//          ApplicationGatewayProbeHealthResponseMatchResponseArgs{...}
type ApplicationGatewayProbeHealthResponseMatchResponseInput interface {
	pulumi.Input

	ToApplicationGatewayProbeHealthResponseMatchResponseOutput() ApplicationGatewayProbeHealthResponseMatchResponseOutput
	ToApplicationGatewayProbeHealthResponseMatchResponseOutputWithContext(context.Context) ApplicationGatewayProbeHealthResponseMatchResponseOutput
}

// Application gateway probe health response match
type ApplicationGatewayProbeHealthResponseMatchResponseArgs struct {
	// Body that must be contained in the health response. Default value is empty.
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
	StatusCodes pulumi.StringArrayInput `pulumi:"statusCodes"`
}

func (ApplicationGatewayProbeHealthResponseMatchResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeHealthResponseMatchResponse)(nil)).Elem()
}

func (i ApplicationGatewayProbeHealthResponseMatchResponseArgs) ToApplicationGatewayProbeHealthResponseMatchResponseOutput() ApplicationGatewayProbeHealthResponseMatchResponseOutput {
	return i.ToApplicationGatewayProbeHealthResponseMatchResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeHealthResponseMatchResponseArgs) ToApplicationGatewayProbeHealthResponseMatchResponseOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeHealthResponseMatchResponseOutput)
}

func (i ApplicationGatewayProbeHealthResponseMatchResponseArgs) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutput() ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return i.ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeHealthResponseMatchResponseArgs) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeHealthResponseMatchResponseOutput).ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayProbeHealthResponseMatchResponsePtrInput is an input type that accepts ApplicationGatewayProbeHealthResponseMatchResponseArgs, ApplicationGatewayProbeHealthResponseMatchResponsePtr and ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeHealthResponseMatchResponsePtrInput` via:
//
//          ApplicationGatewayProbeHealthResponseMatchResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayProbeHealthResponseMatchResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutput() ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput
	ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(context.Context) ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput
}

type applicationGatewayProbeHealthResponseMatchResponsePtrType ApplicationGatewayProbeHealthResponseMatchResponseArgs

func ApplicationGatewayProbeHealthResponseMatchResponsePtr(v *ApplicationGatewayProbeHealthResponseMatchResponseArgs) ApplicationGatewayProbeHealthResponseMatchResponsePtrInput {
	return (*applicationGatewayProbeHealthResponseMatchResponsePtrType)(v)
}

func (*applicationGatewayProbeHealthResponseMatchResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayProbeHealthResponseMatchResponse)(nil)).Elem()
}

func (i *applicationGatewayProbeHealthResponseMatchResponsePtrType) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutput() ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return i.ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayProbeHealthResponseMatchResponsePtrType) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput)
}

// Application gateway probe health response match
type ApplicationGatewayProbeHealthResponseMatchResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeHealthResponseMatchResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeHealthResponseMatchResponse)(nil)).Elem()
}

func (o ApplicationGatewayProbeHealthResponseMatchResponseOutput) ToApplicationGatewayProbeHealthResponseMatchResponseOutput() ApplicationGatewayProbeHealthResponseMatchResponseOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchResponseOutput) ToApplicationGatewayProbeHealthResponseMatchResponseOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchResponseOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchResponseOutput) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutput() ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return o.ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayProbeHealthResponseMatchResponseOutput) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeHealthResponseMatchResponse) *ApplicationGatewayProbeHealthResponseMatchResponse {
		return &v
	}).(ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput)
}

// Body that must be contained in the health response. Default value is empty.
func (o ApplicationGatewayProbeHealthResponseMatchResponseOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeHealthResponseMatchResponse) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
func (o ApplicationGatewayProbeHealthResponseMatchResponseOutput) StatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeHealthResponseMatchResponse) []string { return v.StatusCodes }).(pulumi.StringArrayOutput)
}

type ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayProbeHealthResponseMatchResponse)(nil)).Elem()
}

func (o ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutput() ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) Elem() ApplicationGatewayProbeHealthResponseMatchResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatchResponse) ApplicationGatewayProbeHealthResponseMatchResponse {
		return *v
	}).(ApplicationGatewayProbeHealthResponseMatchResponseOutput)
}

// Body that must be contained in the health response. Default value is empty.
func (o ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatchResponse) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
func (o ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) StatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatchResponse) []string {
		if v == nil {
			return nil
		}
		return v.StatusCodes
	}).(pulumi.StringArrayOutput)
}

// Properties of probe of an application gateway.
type ApplicationGatewayProbePropertiesFormat struct {
	// Host name to send the probe to.
	Host *string `pulumi:"host"`
	// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
	Interval *int `pulumi:"interval"`
	// Criterion for classifying a healthy probe response.
	Match *ApplicationGatewayProbeHealthResponseMatch `pulumi:"match"`
	// Minimum number of servers that are always marked healthy. Default value is 0.
	MinServers *int `pulumi:"minServers"`
	// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
	Path *string `pulumi:"path"`
	// Whether the host header should be picked from the backend http settings. Default value is false.
	PickHostNameFromBackendHttpSettings *bool `pulumi:"pickHostNameFromBackendHttpSettings"`
	// The protocol used for the probe. Possible values are 'Http' and 'Https'.
	Protocol *string `pulumi:"protocol"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
	Timeout *int `pulumi:"timeout"`
	// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// ApplicationGatewayProbePropertiesFormatInput is an input type that accepts ApplicationGatewayProbePropertiesFormatArgs and ApplicationGatewayProbePropertiesFormatOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbePropertiesFormatInput` via:
//
//          ApplicationGatewayProbePropertiesFormatArgs{...}
type ApplicationGatewayProbePropertiesFormatInput interface {
	pulumi.Input

	ToApplicationGatewayProbePropertiesFormatOutput() ApplicationGatewayProbePropertiesFormatOutput
	ToApplicationGatewayProbePropertiesFormatOutputWithContext(context.Context) ApplicationGatewayProbePropertiesFormatOutput
}

// Properties of probe of an application gateway.
type ApplicationGatewayProbePropertiesFormatArgs struct {
	// Host name to send the probe to.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Criterion for classifying a healthy probe response.
	Match ApplicationGatewayProbeHealthResponseMatchPtrInput `pulumi:"match"`
	// Minimum number of servers that are always marked healthy. Default value is 0.
	MinServers pulumi.IntPtrInput `pulumi:"minServers"`
	// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Whether the host header should be picked from the backend http settings. Default value is false.
	PickHostNameFromBackendHttpSettings pulumi.BoolPtrInput `pulumi:"pickHostNameFromBackendHttpSettings"`
	// The protocol used for the probe. Possible values are 'Http' and 'Https'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (ApplicationGatewayProbePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbePropertiesFormat)(nil)).Elem()
}

func (i ApplicationGatewayProbePropertiesFormatArgs) ToApplicationGatewayProbePropertiesFormatOutput() ApplicationGatewayProbePropertiesFormatOutput {
	return i.ToApplicationGatewayProbePropertiesFormatOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbePropertiesFormatArgs) ToApplicationGatewayProbePropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayProbePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbePropertiesFormatOutput)
}

func (i ApplicationGatewayProbePropertiesFormatArgs) ToApplicationGatewayProbePropertiesFormatPtrOutput() ApplicationGatewayProbePropertiesFormatPtrOutput {
	return i.ToApplicationGatewayProbePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbePropertiesFormatArgs) ToApplicationGatewayProbePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbePropertiesFormatOutput).ToApplicationGatewayProbePropertiesFormatPtrOutputWithContext(ctx)
}

// ApplicationGatewayProbePropertiesFormatPtrInput is an input type that accepts ApplicationGatewayProbePropertiesFormatArgs, ApplicationGatewayProbePropertiesFormatPtr and ApplicationGatewayProbePropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbePropertiesFormatPtrInput` via:
//
//          ApplicationGatewayProbePropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayProbePropertiesFormatPtrInput interface {
	pulumi.Input

	ToApplicationGatewayProbePropertiesFormatPtrOutput() ApplicationGatewayProbePropertiesFormatPtrOutput
	ToApplicationGatewayProbePropertiesFormatPtrOutputWithContext(context.Context) ApplicationGatewayProbePropertiesFormatPtrOutput
}

type applicationGatewayProbePropertiesFormatPtrType ApplicationGatewayProbePropertiesFormatArgs

func ApplicationGatewayProbePropertiesFormatPtr(v *ApplicationGatewayProbePropertiesFormatArgs) ApplicationGatewayProbePropertiesFormatPtrInput {
	return (*applicationGatewayProbePropertiesFormatPtrType)(v)
}

func (*applicationGatewayProbePropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayProbePropertiesFormat)(nil)).Elem()
}

func (i *applicationGatewayProbePropertiesFormatPtrType) ToApplicationGatewayProbePropertiesFormatPtrOutput() ApplicationGatewayProbePropertiesFormatPtrOutput {
	return i.ToApplicationGatewayProbePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayProbePropertiesFormatPtrType) ToApplicationGatewayProbePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbePropertiesFormatPtrOutput)
}

// Properties of probe of an application gateway.
type ApplicationGatewayProbePropertiesFormatOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbePropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayProbePropertiesFormatOutput) ToApplicationGatewayProbePropertiesFormatOutput() ApplicationGatewayProbePropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayProbePropertiesFormatOutput) ToApplicationGatewayProbePropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayProbePropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayProbePropertiesFormatOutput) ToApplicationGatewayProbePropertiesFormatPtrOutput() ApplicationGatewayProbePropertiesFormatPtrOutput {
	return o.ToApplicationGatewayProbePropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayProbePropertiesFormatOutput) ToApplicationGatewayProbePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbePropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbePropertiesFormat) *ApplicationGatewayProbePropertiesFormat {
		return &v
	}).(ApplicationGatewayProbePropertiesFormatPtrOutput)
}

// Host name to send the probe to.
func (o ApplicationGatewayProbePropertiesFormatOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbePropertiesFormat) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbePropertiesFormatOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbePropertiesFormat) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Criterion for classifying a healthy probe response.
func (o ApplicationGatewayProbePropertiesFormatOutput) Match() ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbePropertiesFormat) *ApplicationGatewayProbeHealthResponseMatch {
		return v.Match
	}).(ApplicationGatewayProbeHealthResponseMatchPtrOutput)
}

// Minimum number of servers that are always marked healthy. Default value is 0.
func (o ApplicationGatewayProbePropertiesFormatOutput) MinServers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbePropertiesFormat) *int { return v.MinServers }).(pulumi.IntPtrOutput)
}

// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
func (o ApplicationGatewayProbePropertiesFormatOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbePropertiesFormat) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Whether the host header should be picked from the backend http settings. Default value is false.
func (o ApplicationGatewayProbePropertiesFormatOutput) PickHostNameFromBackendHttpSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbePropertiesFormat) *bool { return v.PickHostNameFromBackendHttpSettings }).(pulumi.BoolPtrOutput)
}

// The protocol used for the probe. Possible values are 'Http' and 'Https'.
func (o ApplicationGatewayProbePropertiesFormatOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbePropertiesFormat) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayProbePropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbePropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbePropertiesFormatOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbePropertiesFormat) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
func (o ApplicationGatewayProbePropertiesFormatOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbePropertiesFormat) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type ApplicationGatewayProbePropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbePropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayProbePropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayProbePropertiesFormatPtrOutput) ToApplicationGatewayProbePropertiesFormatPtrOutput() ApplicationGatewayProbePropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayProbePropertiesFormatPtrOutput) ToApplicationGatewayProbePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbePropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayProbePropertiesFormatPtrOutput) Elem() ApplicationGatewayProbePropertiesFormatOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbePropertiesFormat) ApplicationGatewayProbePropertiesFormat { return *v }).(ApplicationGatewayProbePropertiesFormatOutput)
}

// Host name to send the probe to.
func (o ApplicationGatewayProbePropertiesFormatPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbePropertiesFormatPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbePropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// Criterion for classifying a healthy probe response.
func (o ApplicationGatewayProbePropertiesFormatPtrOutput) Match() ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbePropertiesFormat) *ApplicationGatewayProbeHealthResponseMatch {
		if v == nil {
			return nil
		}
		return v.Match
	}).(ApplicationGatewayProbeHealthResponseMatchPtrOutput)
}

// Minimum number of servers that are always marked healthy. Default value is 0.
func (o ApplicationGatewayProbePropertiesFormatPtrOutput) MinServers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbePropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.MinServers
	}).(pulumi.IntPtrOutput)
}

// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
func (o ApplicationGatewayProbePropertiesFormatPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Whether the host header should be picked from the backend http settings. Default value is false.
func (o ApplicationGatewayProbePropertiesFormatPtrOutput) PickHostNameFromBackendHttpSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbePropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.PickHostNameFromBackendHttpSettings
	}).(pulumi.BoolPtrOutput)
}

// The protocol used for the probe. Possible values are 'Http' and 'Https'.
func (o ApplicationGatewayProbePropertiesFormatPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayProbePropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbePropertiesFormatPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbePropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
func (o ApplicationGatewayProbePropertiesFormatPtrOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbePropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.UnhealthyThreshold
	}).(pulumi.IntPtrOutput)
}

// Properties of probe of an application gateway.
type ApplicationGatewayProbePropertiesFormatResponse struct {
	// Host name to send the probe to.
	Host *string `pulumi:"host"`
	// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
	Interval *int `pulumi:"interval"`
	// Criterion for classifying a healthy probe response.
	Match *ApplicationGatewayProbeHealthResponseMatchResponse `pulumi:"match"`
	// Minimum number of servers that are always marked healthy. Default value is 0.
	MinServers *int `pulumi:"minServers"`
	// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
	Path *string `pulumi:"path"`
	// Whether the host header should be picked from the backend http settings. Default value is false.
	PickHostNameFromBackendHttpSettings *bool `pulumi:"pickHostNameFromBackendHttpSettings"`
	// The protocol used for the probe. Possible values are 'Http' and 'Https'.
	Protocol *string `pulumi:"protocol"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
	Timeout *int `pulumi:"timeout"`
	// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// ApplicationGatewayProbePropertiesFormatResponseInput is an input type that accepts ApplicationGatewayProbePropertiesFormatResponseArgs and ApplicationGatewayProbePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbePropertiesFormatResponseInput` via:
//
//          ApplicationGatewayProbePropertiesFormatResponseArgs{...}
type ApplicationGatewayProbePropertiesFormatResponseInput interface {
	pulumi.Input

	ToApplicationGatewayProbePropertiesFormatResponseOutput() ApplicationGatewayProbePropertiesFormatResponseOutput
	ToApplicationGatewayProbePropertiesFormatResponseOutputWithContext(context.Context) ApplicationGatewayProbePropertiesFormatResponseOutput
}

// Properties of probe of an application gateway.
type ApplicationGatewayProbePropertiesFormatResponseArgs struct {
	// Host name to send the probe to.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Criterion for classifying a healthy probe response.
	Match ApplicationGatewayProbeHealthResponseMatchResponsePtrInput `pulumi:"match"`
	// Minimum number of servers that are always marked healthy. Default value is 0.
	MinServers pulumi.IntPtrInput `pulumi:"minServers"`
	// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Whether the host header should be picked from the backend http settings. Default value is false.
	PickHostNameFromBackendHttpSettings pulumi.BoolPtrInput `pulumi:"pickHostNameFromBackendHttpSettings"`
	// The protocol used for the probe. Possible values are 'Http' and 'Https'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (ApplicationGatewayProbePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbePropertiesFormatResponse)(nil)).Elem()
}

func (i ApplicationGatewayProbePropertiesFormatResponseArgs) ToApplicationGatewayProbePropertiesFormatResponseOutput() ApplicationGatewayProbePropertiesFormatResponseOutput {
	return i.ToApplicationGatewayProbePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbePropertiesFormatResponseArgs) ToApplicationGatewayProbePropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayProbePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbePropertiesFormatResponseOutput)
}

func (i ApplicationGatewayProbePropertiesFormatResponseArgs) ToApplicationGatewayProbePropertiesFormatResponsePtrOutput() ApplicationGatewayProbePropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayProbePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbePropertiesFormatResponseArgs) ToApplicationGatewayProbePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayProbePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbePropertiesFormatResponseOutput).ToApplicationGatewayProbePropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayProbePropertiesFormatResponsePtrInput is an input type that accepts ApplicationGatewayProbePropertiesFormatResponseArgs, ApplicationGatewayProbePropertiesFormatResponsePtr and ApplicationGatewayProbePropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbePropertiesFormatResponsePtrInput` via:
//
//          ApplicationGatewayProbePropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayProbePropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayProbePropertiesFormatResponsePtrOutput() ApplicationGatewayProbePropertiesFormatResponsePtrOutput
	ToApplicationGatewayProbePropertiesFormatResponsePtrOutputWithContext(context.Context) ApplicationGatewayProbePropertiesFormatResponsePtrOutput
}

type applicationGatewayProbePropertiesFormatResponsePtrType ApplicationGatewayProbePropertiesFormatResponseArgs

func ApplicationGatewayProbePropertiesFormatResponsePtr(v *ApplicationGatewayProbePropertiesFormatResponseArgs) ApplicationGatewayProbePropertiesFormatResponsePtrInput {
	return (*applicationGatewayProbePropertiesFormatResponsePtrType)(v)
}

func (*applicationGatewayProbePropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayProbePropertiesFormatResponse)(nil)).Elem()
}

func (i *applicationGatewayProbePropertiesFormatResponsePtrType) ToApplicationGatewayProbePropertiesFormatResponsePtrOutput() ApplicationGatewayProbePropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayProbePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayProbePropertiesFormatResponsePtrType) ToApplicationGatewayProbePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayProbePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbePropertiesFormatResponsePtrOutput)
}

// Properties of probe of an application gateway.
type ApplicationGatewayProbePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbePropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayProbePropertiesFormatResponseOutput) ToApplicationGatewayProbePropertiesFormatResponseOutput() ApplicationGatewayProbePropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayProbePropertiesFormatResponseOutput) ToApplicationGatewayProbePropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayProbePropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayProbePropertiesFormatResponseOutput) ToApplicationGatewayProbePropertiesFormatResponsePtrOutput() ApplicationGatewayProbePropertiesFormatResponsePtrOutput {
	return o.ToApplicationGatewayProbePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayProbePropertiesFormatResponseOutput) ToApplicationGatewayProbePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayProbePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbePropertiesFormatResponse) *ApplicationGatewayProbePropertiesFormatResponse {
		return &v
	}).(ApplicationGatewayProbePropertiesFormatResponsePtrOutput)
}

// Host name to send the probe to.
func (o ApplicationGatewayProbePropertiesFormatResponseOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbePropertiesFormatResponse) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbePropertiesFormatResponseOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbePropertiesFormatResponse) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Criterion for classifying a healthy probe response.
func (o ApplicationGatewayProbePropertiesFormatResponseOutput) Match() ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbePropertiesFormatResponse) *ApplicationGatewayProbeHealthResponseMatchResponse {
		return v.Match
	}).(ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput)
}

// Minimum number of servers that are always marked healthy. Default value is 0.
func (o ApplicationGatewayProbePropertiesFormatResponseOutput) MinServers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbePropertiesFormatResponse) *int { return v.MinServers }).(pulumi.IntPtrOutput)
}

// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
func (o ApplicationGatewayProbePropertiesFormatResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbePropertiesFormatResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Whether the host header should be picked from the backend http settings. Default value is false.
func (o ApplicationGatewayProbePropertiesFormatResponseOutput) PickHostNameFromBackendHttpSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbePropertiesFormatResponse) *bool {
		return v.PickHostNameFromBackendHttpSettings
	}).(pulumi.BoolPtrOutput)
}

// The protocol used for the probe. Possible values are 'Http' and 'Https'.
func (o ApplicationGatewayProbePropertiesFormatResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbePropertiesFormatResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayProbePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbePropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbePropertiesFormatResponseOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbePropertiesFormatResponse) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
func (o ApplicationGatewayProbePropertiesFormatResponseOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbePropertiesFormatResponse) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type ApplicationGatewayProbePropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbePropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayProbePropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayProbePropertiesFormatResponsePtrOutput) ToApplicationGatewayProbePropertiesFormatResponsePtrOutput() ApplicationGatewayProbePropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayProbePropertiesFormatResponsePtrOutput) ToApplicationGatewayProbePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayProbePropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayProbePropertiesFormatResponsePtrOutput) Elem() ApplicationGatewayProbePropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbePropertiesFormatResponse) ApplicationGatewayProbePropertiesFormatResponse {
		return *v
	}).(ApplicationGatewayProbePropertiesFormatResponseOutput)
}

// Host name to send the probe to.
func (o ApplicationGatewayProbePropertiesFormatResponsePtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbePropertiesFormatResponsePtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbePropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// Criterion for classifying a healthy probe response.
func (o ApplicationGatewayProbePropertiesFormatResponsePtrOutput) Match() ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbePropertiesFormatResponse) *ApplicationGatewayProbeHealthResponseMatchResponse {
		if v == nil {
			return nil
		}
		return v.Match
	}).(ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput)
}

// Minimum number of servers that are always marked healthy. Default value is 0.
func (o ApplicationGatewayProbePropertiesFormatResponsePtrOutput) MinServers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbePropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinServers
	}).(pulumi.IntPtrOutput)
}

// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
func (o ApplicationGatewayProbePropertiesFormatResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Whether the host header should be picked from the backend http settings. Default value is false.
func (o ApplicationGatewayProbePropertiesFormatResponsePtrOutput) PickHostNameFromBackendHttpSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbePropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.PickHostNameFromBackendHttpSettings
	}).(pulumi.BoolPtrOutput)
}

// The protocol used for the probe. Possible values are 'Http' and 'Https'.
func (o ApplicationGatewayProbePropertiesFormatResponsePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayProbePropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbePropertiesFormatResponsePtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbePropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
func (o ApplicationGatewayProbePropertiesFormatResponsePtrOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbePropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.UnhealthyThreshold
	}).(pulumi.IntPtrOutput)
}

// Probe of the application gateway.
type ApplicationGatewayProbeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the probe that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of probe of an application gateway.
	Properties *ApplicationGatewayProbePropertiesFormatResponse `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayProbeResponseInput is an input type that accepts ApplicationGatewayProbeResponseArgs and ApplicationGatewayProbeResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeResponseInput` via:
//
//          ApplicationGatewayProbeResponseArgs{...}
type ApplicationGatewayProbeResponseInput interface {
	pulumi.Input

	ToApplicationGatewayProbeResponseOutput() ApplicationGatewayProbeResponseOutput
	ToApplicationGatewayProbeResponseOutputWithContext(context.Context) ApplicationGatewayProbeResponseOutput
}

// Probe of the application gateway.
type ApplicationGatewayProbeResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the probe that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of probe of an application gateway.
	Properties ApplicationGatewayProbePropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayProbeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeResponse)(nil)).Elem()
}

func (i ApplicationGatewayProbeResponseArgs) ToApplicationGatewayProbeResponseOutput() ApplicationGatewayProbeResponseOutput {
	return i.ToApplicationGatewayProbeResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeResponseArgs) ToApplicationGatewayProbeResponseOutputWithContext(ctx context.Context) ApplicationGatewayProbeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeResponseOutput)
}

// ApplicationGatewayProbeResponseArrayInput is an input type that accepts ApplicationGatewayProbeResponseArray and ApplicationGatewayProbeResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeResponseArrayInput` via:
//
//          ApplicationGatewayProbeResponseArray{ ApplicationGatewayProbeResponseArgs{...} }
type ApplicationGatewayProbeResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayProbeResponseArrayOutput() ApplicationGatewayProbeResponseArrayOutput
	ToApplicationGatewayProbeResponseArrayOutputWithContext(context.Context) ApplicationGatewayProbeResponseArrayOutput
}

type ApplicationGatewayProbeResponseArray []ApplicationGatewayProbeResponseInput

func (ApplicationGatewayProbeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbeResponse)(nil)).Elem()
}

func (i ApplicationGatewayProbeResponseArray) ToApplicationGatewayProbeResponseArrayOutput() ApplicationGatewayProbeResponseArrayOutput {
	return i.ToApplicationGatewayProbeResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeResponseArray) ToApplicationGatewayProbeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeResponseArrayOutput)
}

// Probe of the application gateway.
type ApplicationGatewayProbeResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeResponse)(nil)).Elem()
}

func (o ApplicationGatewayProbeResponseOutput) ToApplicationGatewayProbeResponseOutput() ApplicationGatewayProbeResponseOutput {
	return o
}

func (o ApplicationGatewayProbeResponseOutput) ToApplicationGatewayProbeResponseOutputWithContext(ctx context.Context) ApplicationGatewayProbeResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayProbeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayProbeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the probe that is unique within an Application Gateway.
func (o ApplicationGatewayProbeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of probe of an application gateway.
func (o ApplicationGatewayProbeResponseOutput) Properties() ApplicationGatewayProbePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *ApplicationGatewayProbePropertiesFormatResponse {
		return v.Properties
	}).(ApplicationGatewayProbePropertiesFormatResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayProbeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayProbeResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbeResponse)(nil)).Elem()
}

func (o ApplicationGatewayProbeResponseArrayOutput) ToApplicationGatewayProbeResponseArrayOutput() ApplicationGatewayProbeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayProbeResponseArrayOutput) ToApplicationGatewayProbeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayProbeResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayProbeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayProbeResponse {
		return vs[0].([]ApplicationGatewayProbeResponse)[vs[1].(int)]
	}).(ApplicationGatewayProbeResponseOutput)
}

// Properties of the application gateway.
type ApplicationGatewayPropertiesFormat struct {
	// Authentication certificates of the application gateway resource.
	AuthenticationCertificates []ApplicationGatewayAuthenticationCertificate `pulumi:"authenticationCertificates"`
	// Autoscale Configuration.
	AutoscaleConfiguration *ApplicationGatewayAutoscaleConfiguration `pulumi:"autoscaleConfiguration"`
	// Backend address pool of the application gateway resource.
	BackendAddressPools []ApplicationGatewayBackendAddressPool `pulumi:"backendAddressPools"`
	// Backend http settings of the application gateway resource.
	BackendHttpSettingsCollection []ApplicationGatewayBackendHttpSettings `pulumi:"backendHttpSettingsCollection"`
	// Custom error configurations of the application gateway resource.
	CustomErrorConfigurations []ApplicationGatewayCustomError `pulumi:"customErrorConfigurations"`
	// Whether FIPS is enabled on the application gateway resource.
	EnableFips *bool `pulumi:"enableFips"`
	// Whether HTTP2 is enabled on the application gateway resource.
	EnableHttp2 *bool `pulumi:"enableHttp2"`
	// Frontend IP addresses of the application gateway resource.
	FrontendIPConfigurations []ApplicationGatewayFrontendIPConfiguration `pulumi:"frontendIPConfigurations"`
	// Frontend ports of the application gateway resource.
	FrontendPorts []ApplicationGatewayFrontendPort `pulumi:"frontendPorts"`
	// Subnets of application the gateway resource.
	GatewayIPConfigurations []ApplicationGatewayIPConfiguration `pulumi:"gatewayIPConfigurations"`
	// Http listeners of the application gateway resource.
	HttpListeners []ApplicationGatewayHttpListener `pulumi:"httpListeners"`
	// Probes of the application gateway resource.
	Probes []ApplicationGatewayProbe `pulumi:"probes"`
	// Provisioning state of the application gateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Redirect configurations of the application gateway resource.
	RedirectConfigurations []ApplicationGatewayRedirectConfiguration `pulumi:"redirectConfigurations"`
	// Request routing rules of the application gateway resource.
	RequestRoutingRules []ApplicationGatewayRequestRoutingRule `pulumi:"requestRoutingRules"`
	// Resource GUID property of the application gateway resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// Rewrite rules for the application gateway resource.
	RewriteRuleSets []ApplicationGatewayRewriteRuleSet `pulumi:"rewriteRuleSets"`
	// SKU of the application gateway resource.
	Sku *ApplicationGatewaySku `pulumi:"sku"`
	// SSL certificates of the application gateway resource.
	SslCertificates []ApplicationGatewaySslCertificate `pulumi:"sslCertificates"`
	// SSL policy of the application gateway resource.
	SslPolicy *ApplicationGatewaySslPolicy `pulumi:"sslPolicy"`
	// Trusted Root certificates of the application gateway resource.
	TrustedRootCertificates []ApplicationGatewayTrustedRootCertificate `pulumi:"trustedRootCertificates"`
	// URL path map of the application gateway resource.
	UrlPathMaps []ApplicationGatewayUrlPathMap `pulumi:"urlPathMaps"`
	// Web application firewall configuration.
	WebApplicationFirewallConfiguration *ApplicationGatewayWebApplicationFirewallConfiguration `pulumi:"webApplicationFirewallConfiguration"`
}

// ApplicationGatewayPropertiesFormatInput is an input type that accepts ApplicationGatewayPropertiesFormatArgs and ApplicationGatewayPropertiesFormatOutput values.
// You can construct a concrete instance of `ApplicationGatewayPropertiesFormatInput` via:
//
//          ApplicationGatewayPropertiesFormatArgs{...}
type ApplicationGatewayPropertiesFormatInput interface {
	pulumi.Input

	ToApplicationGatewayPropertiesFormatOutput() ApplicationGatewayPropertiesFormatOutput
	ToApplicationGatewayPropertiesFormatOutputWithContext(context.Context) ApplicationGatewayPropertiesFormatOutput
}

// Properties of the application gateway.
type ApplicationGatewayPropertiesFormatArgs struct {
	// Authentication certificates of the application gateway resource.
	AuthenticationCertificates ApplicationGatewayAuthenticationCertificateArrayInput `pulumi:"authenticationCertificates"`
	// Autoscale Configuration.
	AutoscaleConfiguration ApplicationGatewayAutoscaleConfigurationPtrInput `pulumi:"autoscaleConfiguration"`
	// Backend address pool of the application gateway resource.
	BackendAddressPools ApplicationGatewayBackendAddressPoolArrayInput `pulumi:"backendAddressPools"`
	// Backend http settings of the application gateway resource.
	BackendHttpSettingsCollection ApplicationGatewayBackendHttpSettingsArrayInput `pulumi:"backendHttpSettingsCollection"`
	// Custom error configurations of the application gateway resource.
	CustomErrorConfigurations ApplicationGatewayCustomErrorArrayInput `pulumi:"customErrorConfigurations"`
	// Whether FIPS is enabled on the application gateway resource.
	EnableFips pulumi.BoolPtrInput `pulumi:"enableFips"`
	// Whether HTTP2 is enabled on the application gateway resource.
	EnableHttp2 pulumi.BoolPtrInput `pulumi:"enableHttp2"`
	// Frontend IP addresses of the application gateway resource.
	FrontendIPConfigurations ApplicationGatewayFrontendIPConfigurationArrayInput `pulumi:"frontendIPConfigurations"`
	// Frontend ports of the application gateway resource.
	FrontendPorts ApplicationGatewayFrontendPortArrayInput `pulumi:"frontendPorts"`
	// Subnets of application the gateway resource.
	GatewayIPConfigurations ApplicationGatewayIPConfigurationArrayInput `pulumi:"gatewayIPConfigurations"`
	// Http listeners of the application gateway resource.
	HttpListeners ApplicationGatewayHttpListenerArrayInput `pulumi:"httpListeners"`
	// Probes of the application gateway resource.
	Probes ApplicationGatewayProbeArrayInput `pulumi:"probes"`
	// Provisioning state of the application gateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Redirect configurations of the application gateway resource.
	RedirectConfigurations ApplicationGatewayRedirectConfigurationArrayInput `pulumi:"redirectConfigurations"`
	// Request routing rules of the application gateway resource.
	RequestRoutingRules ApplicationGatewayRequestRoutingRuleArrayInput `pulumi:"requestRoutingRules"`
	// Resource GUID property of the application gateway resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// Rewrite rules for the application gateway resource.
	RewriteRuleSets ApplicationGatewayRewriteRuleSetArrayInput `pulumi:"rewriteRuleSets"`
	// SKU of the application gateway resource.
	Sku ApplicationGatewaySkuPtrInput `pulumi:"sku"`
	// SSL certificates of the application gateway resource.
	SslCertificates ApplicationGatewaySslCertificateArrayInput `pulumi:"sslCertificates"`
	// SSL policy of the application gateway resource.
	SslPolicy ApplicationGatewaySslPolicyPtrInput `pulumi:"sslPolicy"`
	// Trusted Root certificates of the application gateway resource.
	TrustedRootCertificates ApplicationGatewayTrustedRootCertificateArrayInput `pulumi:"trustedRootCertificates"`
	// URL path map of the application gateway resource.
	UrlPathMaps ApplicationGatewayUrlPathMapArrayInput `pulumi:"urlPathMaps"`
	// Web application firewall configuration.
	WebApplicationFirewallConfiguration ApplicationGatewayWebApplicationFirewallConfigurationPtrInput `pulumi:"webApplicationFirewallConfiguration"`
}

func (ApplicationGatewayPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPropertiesFormat)(nil)).Elem()
}

func (i ApplicationGatewayPropertiesFormatArgs) ToApplicationGatewayPropertiesFormatOutput() ApplicationGatewayPropertiesFormatOutput {
	return i.ToApplicationGatewayPropertiesFormatOutputWithContext(context.Background())
}

func (i ApplicationGatewayPropertiesFormatArgs) ToApplicationGatewayPropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPropertiesFormatOutput)
}

func (i ApplicationGatewayPropertiesFormatArgs) ToApplicationGatewayPropertiesFormatPtrOutput() ApplicationGatewayPropertiesFormatPtrOutput {
	return i.ToApplicationGatewayPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayPropertiesFormatArgs) ToApplicationGatewayPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPropertiesFormatOutput).ToApplicationGatewayPropertiesFormatPtrOutputWithContext(ctx)
}

// ApplicationGatewayPropertiesFormatPtrInput is an input type that accepts ApplicationGatewayPropertiesFormatArgs, ApplicationGatewayPropertiesFormatPtr and ApplicationGatewayPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayPropertiesFormatPtrInput` via:
//
//          ApplicationGatewayPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayPropertiesFormatPtrInput interface {
	pulumi.Input

	ToApplicationGatewayPropertiesFormatPtrOutput() ApplicationGatewayPropertiesFormatPtrOutput
	ToApplicationGatewayPropertiesFormatPtrOutputWithContext(context.Context) ApplicationGatewayPropertiesFormatPtrOutput
}

type applicationGatewayPropertiesFormatPtrType ApplicationGatewayPropertiesFormatArgs

func ApplicationGatewayPropertiesFormatPtr(v *ApplicationGatewayPropertiesFormatArgs) ApplicationGatewayPropertiesFormatPtrInput {
	return (*applicationGatewayPropertiesFormatPtrType)(v)
}

func (*applicationGatewayPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayPropertiesFormat)(nil)).Elem()
}

func (i *applicationGatewayPropertiesFormatPtrType) ToApplicationGatewayPropertiesFormatPtrOutput() ApplicationGatewayPropertiesFormatPtrOutput {
	return i.ToApplicationGatewayPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayPropertiesFormatPtrType) ToApplicationGatewayPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPropertiesFormatPtrOutput)
}

// Properties of the application gateway.
type ApplicationGatewayPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayPropertiesFormatOutput) ToApplicationGatewayPropertiesFormatOutput() ApplicationGatewayPropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayPropertiesFormatOutput) ToApplicationGatewayPropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayPropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayPropertiesFormatOutput) ToApplicationGatewayPropertiesFormatPtrOutput() ApplicationGatewayPropertiesFormatPtrOutput {
	return o.ToApplicationGatewayPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayPropertiesFormatOutput) ToApplicationGatewayPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) *ApplicationGatewayPropertiesFormat {
		return &v
	}).(ApplicationGatewayPropertiesFormatPtrOutput)
}

// Authentication certificates of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatOutput) AuthenticationCertificates() ApplicationGatewayAuthenticationCertificateArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) []ApplicationGatewayAuthenticationCertificate {
		return v.AuthenticationCertificates
	}).(ApplicationGatewayAuthenticationCertificateArrayOutput)
}

// Autoscale Configuration.
func (o ApplicationGatewayPropertiesFormatOutput) AutoscaleConfiguration() ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) *ApplicationGatewayAutoscaleConfiguration {
		return v.AutoscaleConfiguration
	}).(ApplicationGatewayAutoscaleConfigurationPtrOutput)
}

// Backend address pool of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatOutput) BackendAddressPools() ApplicationGatewayBackendAddressPoolArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) []ApplicationGatewayBackendAddressPool {
		return v.BackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolArrayOutput)
}

// Backend http settings of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatOutput) BackendHttpSettingsCollection() ApplicationGatewayBackendHttpSettingsArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) []ApplicationGatewayBackendHttpSettings {
		return v.BackendHttpSettingsCollection
	}).(ApplicationGatewayBackendHttpSettingsArrayOutput)
}

// Custom error configurations of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatOutput) CustomErrorConfigurations() ApplicationGatewayCustomErrorArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) []ApplicationGatewayCustomError {
		return v.CustomErrorConfigurations
	}).(ApplicationGatewayCustomErrorArrayOutput)
}

// Whether FIPS is enabled on the application gateway resource.
func (o ApplicationGatewayPropertiesFormatOutput) EnableFips() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) *bool { return v.EnableFips }).(pulumi.BoolPtrOutput)
}

// Whether HTTP2 is enabled on the application gateway resource.
func (o ApplicationGatewayPropertiesFormatOutput) EnableHttp2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) *bool { return v.EnableHttp2 }).(pulumi.BoolPtrOutput)
}

// Frontend IP addresses of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatOutput) FrontendIPConfigurations() ApplicationGatewayFrontendIPConfigurationArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) []ApplicationGatewayFrontendIPConfiguration {
		return v.FrontendIPConfigurations
	}).(ApplicationGatewayFrontendIPConfigurationArrayOutput)
}

// Frontend ports of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatOutput) FrontendPorts() ApplicationGatewayFrontendPortArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) []ApplicationGatewayFrontendPort { return v.FrontendPorts }).(ApplicationGatewayFrontendPortArrayOutput)
}

// Subnets of application the gateway resource.
func (o ApplicationGatewayPropertiesFormatOutput) GatewayIPConfigurations() ApplicationGatewayIPConfigurationArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) []ApplicationGatewayIPConfiguration {
		return v.GatewayIPConfigurations
	}).(ApplicationGatewayIPConfigurationArrayOutput)
}

// Http listeners of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatOutput) HttpListeners() ApplicationGatewayHttpListenerArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) []ApplicationGatewayHttpListener { return v.HttpListeners }).(ApplicationGatewayHttpListenerArrayOutput)
}

// Probes of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatOutput) Probes() ApplicationGatewayProbeArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) []ApplicationGatewayProbe { return v.Probes }).(ApplicationGatewayProbeArrayOutput)
}

// Provisioning state of the application gateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Redirect configurations of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatOutput) RedirectConfigurations() ApplicationGatewayRedirectConfigurationArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) []ApplicationGatewayRedirectConfiguration {
		return v.RedirectConfigurations
	}).(ApplicationGatewayRedirectConfigurationArrayOutput)
}

// Request routing rules of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatOutput) RequestRoutingRules() ApplicationGatewayRequestRoutingRuleArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) []ApplicationGatewayRequestRoutingRule {
		return v.RequestRoutingRules
	}).(ApplicationGatewayRequestRoutingRuleArrayOutput)
}

// Resource GUID property of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// Rewrite rules for the application gateway resource.
func (o ApplicationGatewayPropertiesFormatOutput) RewriteRuleSets() ApplicationGatewayRewriteRuleSetArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) []ApplicationGatewayRewriteRuleSet {
		return v.RewriteRuleSets
	}).(ApplicationGatewayRewriteRuleSetArrayOutput)
}

// SKU of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatOutput) Sku() ApplicationGatewaySkuPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) *ApplicationGatewaySku { return v.Sku }).(ApplicationGatewaySkuPtrOutput)
}

// SSL certificates of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatOutput) SslCertificates() ApplicationGatewaySslCertificateArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) []ApplicationGatewaySslCertificate {
		return v.SslCertificates
	}).(ApplicationGatewaySslCertificateArrayOutput)
}

// SSL policy of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatOutput) SslPolicy() ApplicationGatewaySslPolicyPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) *ApplicationGatewaySslPolicy { return v.SslPolicy }).(ApplicationGatewaySslPolicyPtrOutput)
}

// Trusted Root certificates of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatOutput) TrustedRootCertificates() ApplicationGatewayTrustedRootCertificateArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) []ApplicationGatewayTrustedRootCertificate {
		return v.TrustedRootCertificates
	}).(ApplicationGatewayTrustedRootCertificateArrayOutput)
}

// URL path map of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatOutput) UrlPathMaps() ApplicationGatewayUrlPathMapArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) []ApplicationGatewayUrlPathMap { return v.UrlPathMaps }).(ApplicationGatewayUrlPathMapArrayOutput)
}

// Web application firewall configuration.
func (o ApplicationGatewayPropertiesFormatOutput) WebApplicationFirewallConfiguration() ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormat) *ApplicationGatewayWebApplicationFirewallConfiguration {
		return v.WebApplicationFirewallConfiguration
	}).(ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput)
}

type ApplicationGatewayPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayPropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayPropertiesFormatPtrOutput) ToApplicationGatewayPropertiesFormatPtrOutput() ApplicationGatewayPropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayPropertiesFormatPtrOutput) ToApplicationGatewayPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayPropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayPropertiesFormatPtrOutput) Elem() ApplicationGatewayPropertiesFormatOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) ApplicationGatewayPropertiesFormat { return *v }).(ApplicationGatewayPropertiesFormatOutput)
}

// Authentication certificates of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatPtrOutput) AuthenticationCertificates() ApplicationGatewayAuthenticationCertificateArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) []ApplicationGatewayAuthenticationCertificate {
		if v == nil {
			return nil
		}
		return v.AuthenticationCertificates
	}).(ApplicationGatewayAuthenticationCertificateArrayOutput)
}

// Autoscale Configuration.
func (o ApplicationGatewayPropertiesFormatPtrOutput) AutoscaleConfiguration() ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) *ApplicationGatewayAutoscaleConfiguration {
		if v == nil {
			return nil
		}
		return v.AutoscaleConfiguration
	}).(ApplicationGatewayAutoscaleConfigurationPtrOutput)
}

// Backend address pool of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatPtrOutput) BackendAddressPools() ApplicationGatewayBackendAddressPoolArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) []ApplicationGatewayBackendAddressPool {
		if v == nil {
			return nil
		}
		return v.BackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolArrayOutput)
}

// Backend http settings of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatPtrOutput) BackendHttpSettingsCollection() ApplicationGatewayBackendHttpSettingsArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) []ApplicationGatewayBackendHttpSettings {
		if v == nil {
			return nil
		}
		return v.BackendHttpSettingsCollection
	}).(ApplicationGatewayBackendHttpSettingsArrayOutput)
}

// Custom error configurations of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatPtrOutput) CustomErrorConfigurations() ApplicationGatewayCustomErrorArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) []ApplicationGatewayCustomError {
		if v == nil {
			return nil
		}
		return v.CustomErrorConfigurations
	}).(ApplicationGatewayCustomErrorArrayOutput)
}

// Whether FIPS is enabled on the application gateway resource.
func (o ApplicationGatewayPropertiesFormatPtrOutput) EnableFips() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.EnableFips
	}).(pulumi.BoolPtrOutput)
}

// Whether HTTP2 is enabled on the application gateway resource.
func (o ApplicationGatewayPropertiesFormatPtrOutput) EnableHttp2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.EnableHttp2
	}).(pulumi.BoolPtrOutput)
}

// Frontend IP addresses of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatPtrOutput) FrontendIPConfigurations() ApplicationGatewayFrontendIPConfigurationArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) []ApplicationGatewayFrontendIPConfiguration {
		if v == nil {
			return nil
		}
		return v.FrontendIPConfigurations
	}).(ApplicationGatewayFrontendIPConfigurationArrayOutput)
}

// Frontend ports of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatPtrOutput) FrontendPorts() ApplicationGatewayFrontendPortArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) []ApplicationGatewayFrontendPort {
		if v == nil {
			return nil
		}
		return v.FrontendPorts
	}).(ApplicationGatewayFrontendPortArrayOutput)
}

// Subnets of application the gateway resource.
func (o ApplicationGatewayPropertiesFormatPtrOutput) GatewayIPConfigurations() ApplicationGatewayIPConfigurationArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) []ApplicationGatewayIPConfiguration {
		if v == nil {
			return nil
		}
		return v.GatewayIPConfigurations
	}).(ApplicationGatewayIPConfigurationArrayOutput)
}

// Http listeners of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatPtrOutput) HttpListeners() ApplicationGatewayHttpListenerArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) []ApplicationGatewayHttpListener {
		if v == nil {
			return nil
		}
		return v.HttpListeners
	}).(ApplicationGatewayHttpListenerArrayOutput)
}

// Probes of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatPtrOutput) Probes() ApplicationGatewayProbeArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) []ApplicationGatewayProbe {
		if v == nil {
			return nil
		}
		return v.Probes
	}).(ApplicationGatewayProbeArrayOutput)
}

// Provisioning state of the application gateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Redirect configurations of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatPtrOutput) RedirectConfigurations() ApplicationGatewayRedirectConfigurationArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) []ApplicationGatewayRedirectConfiguration {
		if v == nil {
			return nil
		}
		return v.RedirectConfigurations
	}).(ApplicationGatewayRedirectConfigurationArrayOutput)
}

// Request routing rules of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatPtrOutput) RequestRoutingRules() ApplicationGatewayRequestRoutingRuleArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) []ApplicationGatewayRequestRoutingRule {
		if v == nil {
			return nil
		}
		return v.RequestRoutingRules
	}).(ApplicationGatewayRequestRoutingRuleArrayOutput)
}

// Resource GUID property of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatPtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Rewrite rules for the application gateway resource.
func (o ApplicationGatewayPropertiesFormatPtrOutput) RewriteRuleSets() ApplicationGatewayRewriteRuleSetArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) []ApplicationGatewayRewriteRuleSet {
		if v == nil {
			return nil
		}
		return v.RewriteRuleSets
	}).(ApplicationGatewayRewriteRuleSetArrayOutput)
}

// SKU of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatPtrOutput) Sku() ApplicationGatewaySkuPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) *ApplicationGatewaySku {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(ApplicationGatewaySkuPtrOutput)
}

// SSL certificates of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatPtrOutput) SslCertificates() ApplicationGatewaySslCertificateArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) []ApplicationGatewaySslCertificate {
		if v == nil {
			return nil
		}
		return v.SslCertificates
	}).(ApplicationGatewaySslCertificateArrayOutput)
}

// SSL policy of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatPtrOutput) SslPolicy() ApplicationGatewaySslPolicyPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) *ApplicationGatewaySslPolicy {
		if v == nil {
			return nil
		}
		return v.SslPolicy
	}).(ApplicationGatewaySslPolicyPtrOutput)
}

// Trusted Root certificates of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatPtrOutput) TrustedRootCertificates() ApplicationGatewayTrustedRootCertificateArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) []ApplicationGatewayTrustedRootCertificate {
		if v == nil {
			return nil
		}
		return v.TrustedRootCertificates
	}).(ApplicationGatewayTrustedRootCertificateArrayOutput)
}

// URL path map of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatPtrOutput) UrlPathMaps() ApplicationGatewayUrlPathMapArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) []ApplicationGatewayUrlPathMap {
		if v == nil {
			return nil
		}
		return v.UrlPathMaps
	}).(ApplicationGatewayUrlPathMapArrayOutput)
}

// Web application firewall configuration.
func (o ApplicationGatewayPropertiesFormatPtrOutput) WebApplicationFirewallConfiguration() ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormat) *ApplicationGatewayWebApplicationFirewallConfiguration {
		if v == nil {
			return nil
		}
		return v.WebApplicationFirewallConfiguration
	}).(ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput)
}

// Properties of the application gateway.
type ApplicationGatewayPropertiesFormatResponse struct {
	// Authentication certificates of the application gateway resource.
	AuthenticationCertificates []ApplicationGatewayAuthenticationCertificateResponse `pulumi:"authenticationCertificates"`
	// Autoscale Configuration.
	AutoscaleConfiguration *ApplicationGatewayAutoscaleConfigurationResponse `pulumi:"autoscaleConfiguration"`
	// Backend address pool of the application gateway resource.
	BackendAddressPools []ApplicationGatewayBackendAddressPoolResponse `pulumi:"backendAddressPools"`
	// Backend http settings of the application gateway resource.
	BackendHttpSettingsCollection []ApplicationGatewayBackendHttpSettingsResponse `pulumi:"backendHttpSettingsCollection"`
	// Custom error configurations of the application gateway resource.
	CustomErrorConfigurations []ApplicationGatewayCustomErrorResponse `pulumi:"customErrorConfigurations"`
	// Whether FIPS is enabled on the application gateway resource.
	EnableFips *bool `pulumi:"enableFips"`
	// Whether HTTP2 is enabled on the application gateway resource.
	EnableHttp2 *bool `pulumi:"enableHttp2"`
	// Frontend IP addresses of the application gateway resource.
	FrontendIPConfigurations []ApplicationGatewayFrontendIPConfigurationResponse `pulumi:"frontendIPConfigurations"`
	// Frontend ports of the application gateway resource.
	FrontendPorts []ApplicationGatewayFrontendPortResponse `pulumi:"frontendPorts"`
	// Subnets of application the gateway resource.
	GatewayIPConfigurations []ApplicationGatewayIPConfigurationResponse `pulumi:"gatewayIPConfigurations"`
	// Http listeners of the application gateway resource.
	HttpListeners []ApplicationGatewayHttpListenerResponse `pulumi:"httpListeners"`
	// Operational state of the application gateway resource.
	OperationalState string `pulumi:"operationalState"`
	// Probes of the application gateway resource.
	Probes []ApplicationGatewayProbeResponse `pulumi:"probes"`
	// Provisioning state of the application gateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Redirect configurations of the application gateway resource.
	RedirectConfigurations []ApplicationGatewayRedirectConfigurationResponse `pulumi:"redirectConfigurations"`
	// Request routing rules of the application gateway resource.
	RequestRoutingRules []ApplicationGatewayRequestRoutingRuleResponse `pulumi:"requestRoutingRules"`
	// Resource GUID property of the application gateway resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// Rewrite rules for the application gateway resource.
	RewriteRuleSets []ApplicationGatewayRewriteRuleSetResponse `pulumi:"rewriteRuleSets"`
	// SKU of the application gateway resource.
	Sku *ApplicationGatewaySkuResponse `pulumi:"sku"`
	// SSL certificates of the application gateway resource.
	SslCertificates []ApplicationGatewaySslCertificateResponse `pulumi:"sslCertificates"`
	// SSL policy of the application gateway resource.
	SslPolicy *ApplicationGatewaySslPolicyResponse `pulumi:"sslPolicy"`
	// Trusted Root certificates of the application gateway resource.
	TrustedRootCertificates []ApplicationGatewayTrustedRootCertificateResponse `pulumi:"trustedRootCertificates"`
	// URL path map of the application gateway resource.
	UrlPathMaps []ApplicationGatewayUrlPathMapResponse `pulumi:"urlPathMaps"`
	// Web application firewall configuration.
	WebApplicationFirewallConfiguration *ApplicationGatewayWebApplicationFirewallConfigurationResponse `pulumi:"webApplicationFirewallConfiguration"`
}

// ApplicationGatewayPropertiesFormatResponseInput is an input type that accepts ApplicationGatewayPropertiesFormatResponseArgs and ApplicationGatewayPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayPropertiesFormatResponseInput` via:
//
//          ApplicationGatewayPropertiesFormatResponseArgs{...}
type ApplicationGatewayPropertiesFormatResponseInput interface {
	pulumi.Input

	ToApplicationGatewayPropertiesFormatResponseOutput() ApplicationGatewayPropertiesFormatResponseOutput
	ToApplicationGatewayPropertiesFormatResponseOutputWithContext(context.Context) ApplicationGatewayPropertiesFormatResponseOutput
}

// Properties of the application gateway.
type ApplicationGatewayPropertiesFormatResponseArgs struct {
	// Authentication certificates of the application gateway resource.
	AuthenticationCertificates ApplicationGatewayAuthenticationCertificateResponseArrayInput `pulumi:"authenticationCertificates"`
	// Autoscale Configuration.
	AutoscaleConfiguration ApplicationGatewayAutoscaleConfigurationResponsePtrInput `pulumi:"autoscaleConfiguration"`
	// Backend address pool of the application gateway resource.
	BackendAddressPools ApplicationGatewayBackendAddressPoolResponseArrayInput `pulumi:"backendAddressPools"`
	// Backend http settings of the application gateway resource.
	BackendHttpSettingsCollection ApplicationGatewayBackendHttpSettingsResponseArrayInput `pulumi:"backendHttpSettingsCollection"`
	// Custom error configurations of the application gateway resource.
	CustomErrorConfigurations ApplicationGatewayCustomErrorResponseArrayInput `pulumi:"customErrorConfigurations"`
	// Whether FIPS is enabled on the application gateway resource.
	EnableFips pulumi.BoolPtrInput `pulumi:"enableFips"`
	// Whether HTTP2 is enabled on the application gateway resource.
	EnableHttp2 pulumi.BoolPtrInput `pulumi:"enableHttp2"`
	// Frontend IP addresses of the application gateway resource.
	FrontendIPConfigurations ApplicationGatewayFrontendIPConfigurationResponseArrayInput `pulumi:"frontendIPConfigurations"`
	// Frontend ports of the application gateway resource.
	FrontendPorts ApplicationGatewayFrontendPortResponseArrayInput `pulumi:"frontendPorts"`
	// Subnets of application the gateway resource.
	GatewayIPConfigurations ApplicationGatewayIPConfigurationResponseArrayInput `pulumi:"gatewayIPConfigurations"`
	// Http listeners of the application gateway resource.
	HttpListeners ApplicationGatewayHttpListenerResponseArrayInput `pulumi:"httpListeners"`
	// Operational state of the application gateway resource.
	OperationalState pulumi.StringInput `pulumi:"operationalState"`
	// Probes of the application gateway resource.
	Probes ApplicationGatewayProbeResponseArrayInput `pulumi:"probes"`
	// Provisioning state of the application gateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Redirect configurations of the application gateway resource.
	RedirectConfigurations ApplicationGatewayRedirectConfigurationResponseArrayInput `pulumi:"redirectConfigurations"`
	// Request routing rules of the application gateway resource.
	RequestRoutingRules ApplicationGatewayRequestRoutingRuleResponseArrayInput `pulumi:"requestRoutingRules"`
	// Resource GUID property of the application gateway resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// Rewrite rules for the application gateway resource.
	RewriteRuleSets ApplicationGatewayRewriteRuleSetResponseArrayInput `pulumi:"rewriteRuleSets"`
	// SKU of the application gateway resource.
	Sku ApplicationGatewaySkuResponsePtrInput `pulumi:"sku"`
	// SSL certificates of the application gateway resource.
	SslCertificates ApplicationGatewaySslCertificateResponseArrayInput `pulumi:"sslCertificates"`
	// SSL policy of the application gateway resource.
	SslPolicy ApplicationGatewaySslPolicyResponsePtrInput `pulumi:"sslPolicy"`
	// Trusted Root certificates of the application gateway resource.
	TrustedRootCertificates ApplicationGatewayTrustedRootCertificateResponseArrayInput `pulumi:"trustedRootCertificates"`
	// URL path map of the application gateway resource.
	UrlPathMaps ApplicationGatewayUrlPathMapResponseArrayInput `pulumi:"urlPathMaps"`
	// Web application firewall configuration.
	WebApplicationFirewallConfiguration ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrInput `pulumi:"webApplicationFirewallConfiguration"`
}

func (ApplicationGatewayPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPropertiesFormatResponse)(nil)).Elem()
}

func (i ApplicationGatewayPropertiesFormatResponseArgs) ToApplicationGatewayPropertiesFormatResponseOutput() ApplicationGatewayPropertiesFormatResponseOutput {
	return i.ToApplicationGatewayPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayPropertiesFormatResponseArgs) ToApplicationGatewayPropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPropertiesFormatResponseOutput)
}

func (i ApplicationGatewayPropertiesFormatResponseArgs) ToApplicationGatewayPropertiesFormatResponsePtrOutput() ApplicationGatewayPropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayPropertiesFormatResponseArgs) ToApplicationGatewayPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPropertiesFormatResponseOutput).ToApplicationGatewayPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayPropertiesFormatResponsePtrInput is an input type that accepts ApplicationGatewayPropertiesFormatResponseArgs, ApplicationGatewayPropertiesFormatResponsePtr and ApplicationGatewayPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayPropertiesFormatResponsePtrInput` via:
//
//          ApplicationGatewayPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayPropertiesFormatResponsePtrOutput() ApplicationGatewayPropertiesFormatResponsePtrOutput
	ToApplicationGatewayPropertiesFormatResponsePtrOutputWithContext(context.Context) ApplicationGatewayPropertiesFormatResponsePtrOutput
}

type applicationGatewayPropertiesFormatResponsePtrType ApplicationGatewayPropertiesFormatResponseArgs

func ApplicationGatewayPropertiesFormatResponsePtr(v *ApplicationGatewayPropertiesFormatResponseArgs) ApplicationGatewayPropertiesFormatResponsePtrInput {
	return (*applicationGatewayPropertiesFormatResponsePtrType)(v)
}

func (*applicationGatewayPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayPropertiesFormatResponse)(nil)).Elem()
}

func (i *applicationGatewayPropertiesFormatResponsePtrType) ToApplicationGatewayPropertiesFormatResponsePtrOutput() ApplicationGatewayPropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayPropertiesFormatResponsePtrType) ToApplicationGatewayPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPropertiesFormatResponsePtrOutput)
}

// Properties of the application gateway.
type ApplicationGatewayPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayPropertiesFormatResponseOutput) ToApplicationGatewayPropertiesFormatResponseOutput() ApplicationGatewayPropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayPropertiesFormatResponseOutput) ToApplicationGatewayPropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayPropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayPropertiesFormatResponseOutput) ToApplicationGatewayPropertiesFormatResponsePtrOutput() ApplicationGatewayPropertiesFormatResponsePtrOutput {
	return o.ToApplicationGatewayPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayPropertiesFormatResponseOutput) ToApplicationGatewayPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) *ApplicationGatewayPropertiesFormatResponse {
		return &v
	}).(ApplicationGatewayPropertiesFormatResponsePtrOutput)
}

// Authentication certificates of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponseOutput) AuthenticationCertificates() ApplicationGatewayAuthenticationCertificateResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayAuthenticationCertificateResponse {
		return v.AuthenticationCertificates
	}).(ApplicationGatewayAuthenticationCertificateResponseArrayOutput)
}

// Autoscale Configuration.
func (o ApplicationGatewayPropertiesFormatResponseOutput) AutoscaleConfiguration() ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) *ApplicationGatewayAutoscaleConfigurationResponse {
		return v.AutoscaleConfiguration
	}).(ApplicationGatewayAutoscaleConfigurationResponsePtrOutput)
}

// Backend address pool of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponseOutput) BackendAddressPools() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayBackendAddressPoolResponse {
		return v.BackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolResponseArrayOutput)
}

// Backend http settings of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponseOutput) BackendHttpSettingsCollection() ApplicationGatewayBackendHttpSettingsResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayBackendHttpSettingsResponse {
		return v.BackendHttpSettingsCollection
	}).(ApplicationGatewayBackendHttpSettingsResponseArrayOutput)
}

// Custom error configurations of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponseOutput) CustomErrorConfigurations() ApplicationGatewayCustomErrorResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayCustomErrorResponse {
		return v.CustomErrorConfigurations
	}).(ApplicationGatewayCustomErrorResponseArrayOutput)
}

// Whether FIPS is enabled on the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponseOutput) EnableFips() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) *bool { return v.EnableFips }).(pulumi.BoolPtrOutput)
}

// Whether HTTP2 is enabled on the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponseOutput) EnableHttp2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) *bool { return v.EnableHttp2 }).(pulumi.BoolPtrOutput)
}

// Frontend IP addresses of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponseOutput) FrontendIPConfigurations() ApplicationGatewayFrontendIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayFrontendIPConfigurationResponse {
		return v.FrontendIPConfigurations
	}).(ApplicationGatewayFrontendIPConfigurationResponseArrayOutput)
}

// Frontend ports of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponseOutput) FrontendPorts() ApplicationGatewayFrontendPortResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayFrontendPortResponse {
		return v.FrontendPorts
	}).(ApplicationGatewayFrontendPortResponseArrayOutput)
}

// Subnets of application the gateway resource.
func (o ApplicationGatewayPropertiesFormatResponseOutput) GatewayIPConfigurations() ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayIPConfigurationResponse {
		return v.GatewayIPConfigurations
	}).(ApplicationGatewayIPConfigurationResponseArrayOutput)
}

// Http listeners of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponseOutput) HttpListeners() ApplicationGatewayHttpListenerResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayHttpListenerResponse {
		return v.HttpListeners
	}).(ApplicationGatewayHttpListenerResponseArrayOutput)
}

// Operational state of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponseOutput) OperationalState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) string { return v.OperationalState }).(pulumi.StringOutput)
}

// Probes of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponseOutput) Probes() ApplicationGatewayProbeResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayProbeResponse { return v.Probes }).(ApplicationGatewayProbeResponseArrayOutput)
}

// Provisioning state of the application gateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Redirect configurations of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponseOutput) RedirectConfigurations() ApplicationGatewayRedirectConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayRedirectConfigurationResponse {
		return v.RedirectConfigurations
	}).(ApplicationGatewayRedirectConfigurationResponseArrayOutput)
}

// Request routing rules of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponseOutput) RequestRoutingRules() ApplicationGatewayRequestRoutingRuleResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayRequestRoutingRuleResponse {
		return v.RequestRoutingRules
	}).(ApplicationGatewayRequestRoutingRuleResponseArrayOutput)
}

// Resource GUID property of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// Rewrite rules for the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponseOutput) RewriteRuleSets() ApplicationGatewayRewriteRuleSetResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayRewriteRuleSetResponse {
		return v.RewriteRuleSets
	}).(ApplicationGatewayRewriteRuleSetResponseArrayOutput)
}

// SKU of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponseOutput) Sku() ApplicationGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) *ApplicationGatewaySkuResponse { return v.Sku }).(ApplicationGatewaySkuResponsePtrOutput)
}

// SSL certificates of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponseOutput) SslCertificates() ApplicationGatewaySslCertificateResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewaySslCertificateResponse {
		return v.SslCertificates
	}).(ApplicationGatewaySslCertificateResponseArrayOutput)
}

// SSL policy of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponseOutput) SslPolicy() ApplicationGatewaySslPolicyResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) *ApplicationGatewaySslPolicyResponse {
		return v.SslPolicy
	}).(ApplicationGatewaySslPolicyResponsePtrOutput)
}

// Trusted Root certificates of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponseOutput) TrustedRootCertificates() ApplicationGatewayTrustedRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayTrustedRootCertificateResponse {
		return v.TrustedRootCertificates
	}).(ApplicationGatewayTrustedRootCertificateResponseArrayOutput)
}

// URL path map of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponseOutput) UrlPathMaps() ApplicationGatewayUrlPathMapResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayUrlPathMapResponse {
		return v.UrlPathMaps
	}).(ApplicationGatewayUrlPathMapResponseArrayOutput)
}

// Web application firewall configuration.
func (o ApplicationGatewayPropertiesFormatResponseOutput) WebApplicationFirewallConfiguration() ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPropertiesFormatResponse) *ApplicationGatewayWebApplicationFirewallConfigurationResponse {
		return v.WebApplicationFirewallConfiguration
	}).(ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput)
}

type ApplicationGatewayPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayPropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) ToApplicationGatewayPropertiesFormatResponsePtrOutput() ApplicationGatewayPropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) ToApplicationGatewayPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayPropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) Elem() ApplicationGatewayPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) ApplicationGatewayPropertiesFormatResponse {
		return *v
	}).(ApplicationGatewayPropertiesFormatResponseOutput)
}

// Authentication certificates of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) AuthenticationCertificates() ApplicationGatewayAuthenticationCertificateResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayAuthenticationCertificateResponse {
		if v == nil {
			return nil
		}
		return v.AuthenticationCertificates
	}).(ApplicationGatewayAuthenticationCertificateResponseArrayOutput)
}

// Autoscale Configuration.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) AutoscaleConfiguration() ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) *ApplicationGatewayAutoscaleConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.AutoscaleConfiguration
	}).(ApplicationGatewayAutoscaleConfigurationResponsePtrOutput)
}

// Backend address pool of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) BackendAddressPools() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayBackendAddressPoolResponse {
		if v == nil {
			return nil
		}
		return v.BackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolResponseArrayOutput)
}

// Backend http settings of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) BackendHttpSettingsCollection() ApplicationGatewayBackendHttpSettingsResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayBackendHttpSettingsResponse {
		if v == nil {
			return nil
		}
		return v.BackendHttpSettingsCollection
	}).(ApplicationGatewayBackendHttpSettingsResponseArrayOutput)
}

// Custom error configurations of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) CustomErrorConfigurations() ApplicationGatewayCustomErrorResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayCustomErrorResponse {
		if v == nil {
			return nil
		}
		return v.CustomErrorConfigurations
	}).(ApplicationGatewayCustomErrorResponseArrayOutput)
}

// Whether FIPS is enabled on the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) EnableFips() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableFips
	}).(pulumi.BoolPtrOutput)
}

// Whether HTTP2 is enabled on the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) EnableHttp2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableHttp2
	}).(pulumi.BoolPtrOutput)
}

// Frontend IP addresses of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) FrontendIPConfigurations() ApplicationGatewayFrontendIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayFrontendIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.FrontendIPConfigurations
	}).(ApplicationGatewayFrontendIPConfigurationResponseArrayOutput)
}

// Frontend ports of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) FrontendPorts() ApplicationGatewayFrontendPortResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayFrontendPortResponse {
		if v == nil {
			return nil
		}
		return v.FrontendPorts
	}).(ApplicationGatewayFrontendPortResponseArrayOutput)
}

// Subnets of application the gateway resource.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) GatewayIPConfigurations() ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.GatewayIPConfigurations
	}).(ApplicationGatewayIPConfigurationResponseArrayOutput)
}

// Http listeners of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) HttpListeners() ApplicationGatewayHttpListenerResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayHttpListenerResponse {
		if v == nil {
			return nil
		}
		return v.HttpListeners
	}).(ApplicationGatewayHttpListenerResponseArrayOutput)
}

// Operational state of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) OperationalState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OperationalState
	}).(pulumi.StringPtrOutput)
}

// Probes of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) Probes() ApplicationGatewayProbeResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayProbeResponse {
		if v == nil {
			return nil
		}
		return v.Probes
	}).(ApplicationGatewayProbeResponseArrayOutput)
}

// Provisioning state of the application gateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Redirect configurations of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) RedirectConfigurations() ApplicationGatewayRedirectConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayRedirectConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.RedirectConfigurations
	}).(ApplicationGatewayRedirectConfigurationResponseArrayOutput)
}

// Request routing rules of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) RequestRoutingRules() ApplicationGatewayRequestRoutingRuleResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayRequestRoutingRuleResponse {
		if v == nil {
			return nil
		}
		return v.RequestRoutingRules
	}).(ApplicationGatewayRequestRoutingRuleResponseArrayOutput)
}

// Resource GUID property of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Rewrite rules for the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) RewriteRuleSets() ApplicationGatewayRewriteRuleSetResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayRewriteRuleSetResponse {
		if v == nil {
			return nil
		}
		return v.RewriteRuleSets
	}).(ApplicationGatewayRewriteRuleSetResponseArrayOutput)
}

// SKU of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) Sku() ApplicationGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) *ApplicationGatewaySkuResponse {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(ApplicationGatewaySkuResponsePtrOutput)
}

// SSL certificates of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) SslCertificates() ApplicationGatewaySslCertificateResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewaySslCertificateResponse {
		if v == nil {
			return nil
		}
		return v.SslCertificates
	}).(ApplicationGatewaySslCertificateResponseArrayOutput)
}

// SSL policy of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) SslPolicy() ApplicationGatewaySslPolicyResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) *ApplicationGatewaySslPolicyResponse {
		if v == nil {
			return nil
		}
		return v.SslPolicy
	}).(ApplicationGatewaySslPolicyResponsePtrOutput)
}

// Trusted Root certificates of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) TrustedRootCertificates() ApplicationGatewayTrustedRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayTrustedRootCertificateResponse {
		if v == nil {
			return nil
		}
		return v.TrustedRootCertificates
	}).(ApplicationGatewayTrustedRootCertificateResponseArrayOutput)
}

// URL path map of the application gateway resource.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) UrlPathMaps() ApplicationGatewayUrlPathMapResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) []ApplicationGatewayUrlPathMapResponse {
		if v == nil {
			return nil
		}
		return v.UrlPathMaps
	}).(ApplicationGatewayUrlPathMapResponseArrayOutput)
}

// Web application firewall configuration.
func (o ApplicationGatewayPropertiesFormatResponsePtrOutput) WebApplicationFirewallConfiguration() ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayPropertiesFormatResponse) *ApplicationGatewayWebApplicationFirewallConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.WebApplicationFirewallConfiguration
	}).(ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput)
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfiguration struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the redirect configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of redirect configuration of the application gateway.
	Properties *ApplicationGatewayRedirectConfigurationPropertiesFormat `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayRedirectConfigurationInput is an input type that accepts ApplicationGatewayRedirectConfigurationArgs and ApplicationGatewayRedirectConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayRedirectConfigurationInput` via:
//
//          ApplicationGatewayRedirectConfigurationArgs{...}
type ApplicationGatewayRedirectConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayRedirectConfigurationOutput() ApplicationGatewayRedirectConfigurationOutput
	ToApplicationGatewayRedirectConfigurationOutputWithContext(context.Context) ApplicationGatewayRedirectConfigurationOutput
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the redirect configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of redirect configuration of the application gateway.
	Properties ApplicationGatewayRedirectConfigurationPropertiesFormatPtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayRedirectConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayRedirectConfigurationArgs) ToApplicationGatewayRedirectConfigurationOutput() ApplicationGatewayRedirectConfigurationOutput {
	return i.ToApplicationGatewayRedirectConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayRedirectConfigurationArgs) ToApplicationGatewayRedirectConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRedirectConfigurationOutput)
}

// ApplicationGatewayRedirectConfigurationArrayInput is an input type that accepts ApplicationGatewayRedirectConfigurationArray and ApplicationGatewayRedirectConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRedirectConfigurationArrayInput` via:
//
//          ApplicationGatewayRedirectConfigurationArray{ ApplicationGatewayRedirectConfigurationArgs{...} }
type ApplicationGatewayRedirectConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRedirectConfigurationArrayOutput() ApplicationGatewayRedirectConfigurationArrayOutput
	ToApplicationGatewayRedirectConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayRedirectConfigurationArrayOutput
}

type ApplicationGatewayRedirectConfigurationArray []ApplicationGatewayRedirectConfigurationInput

func (ApplicationGatewayRedirectConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayRedirectConfigurationArray) ToApplicationGatewayRedirectConfigurationArrayOutput() ApplicationGatewayRedirectConfigurationArrayOutput {
	return i.ToApplicationGatewayRedirectConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRedirectConfigurationArray) ToApplicationGatewayRedirectConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRedirectConfigurationArrayOutput)
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRedirectConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayRedirectConfigurationOutput) ToApplicationGatewayRedirectConfigurationOutput() ApplicationGatewayRedirectConfigurationOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationOutput) ToApplicationGatewayRedirectConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayRedirectConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayRedirectConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the redirect configuration that is unique within an Application Gateway.
func (o ApplicationGatewayRedirectConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of redirect configuration of the application gateway.
func (o ApplicationGatewayRedirectConfigurationOutput) Properties() ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *ApplicationGatewayRedirectConfigurationPropertiesFormat {
		return v.Properties
	}).(ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayRedirectConfigurationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayRedirectConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRedirectConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayRedirectConfigurationArrayOutput) ToApplicationGatewayRedirectConfigurationArrayOutput() ApplicationGatewayRedirectConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationArrayOutput) ToApplicationGatewayRedirectConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRedirectConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRedirectConfiguration {
		return vs[0].([]ApplicationGatewayRedirectConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayRedirectConfigurationOutput)
}

// Properties of redirect configuration of the application gateway.
type ApplicationGatewayRedirectConfigurationPropertiesFormat struct {
	// Include path in the redirected url.
	IncludePath *bool `pulumi:"includePath"`
	// Include query string in the redirected url.
	IncludeQueryString *bool `pulumi:"includeQueryString"`
	// Path rules specifying redirect configuration.
	PathRules []SubResource `pulumi:"pathRules"`
	// Supported http redirection types - Permanent, Temporary, Found, SeeOther.
	RedirectType *string `pulumi:"redirectType"`
	// Request routing specifying redirect configuration.
	RequestRoutingRules []SubResource `pulumi:"requestRoutingRules"`
	// Reference to a listener to redirect the request to.
	TargetListener *SubResource `pulumi:"targetListener"`
	// Url to redirect the request to.
	TargetUrl *string `pulumi:"targetUrl"`
	// Url path maps specifying default redirect configuration.
	UrlPathMaps []SubResource `pulumi:"urlPathMaps"`
}

// ApplicationGatewayRedirectConfigurationPropertiesFormatInput is an input type that accepts ApplicationGatewayRedirectConfigurationPropertiesFormatArgs and ApplicationGatewayRedirectConfigurationPropertiesFormatOutput values.
// You can construct a concrete instance of `ApplicationGatewayRedirectConfigurationPropertiesFormatInput` via:
//
//          ApplicationGatewayRedirectConfigurationPropertiesFormatArgs{...}
type ApplicationGatewayRedirectConfigurationPropertiesFormatInput interface {
	pulumi.Input

	ToApplicationGatewayRedirectConfigurationPropertiesFormatOutput() ApplicationGatewayRedirectConfigurationPropertiesFormatOutput
	ToApplicationGatewayRedirectConfigurationPropertiesFormatOutputWithContext(context.Context) ApplicationGatewayRedirectConfigurationPropertiesFormatOutput
}

// Properties of redirect configuration of the application gateway.
type ApplicationGatewayRedirectConfigurationPropertiesFormatArgs struct {
	// Include path in the redirected url.
	IncludePath pulumi.BoolPtrInput `pulumi:"includePath"`
	// Include query string in the redirected url.
	IncludeQueryString pulumi.BoolPtrInput `pulumi:"includeQueryString"`
	// Path rules specifying redirect configuration.
	PathRules SubResourceArrayInput `pulumi:"pathRules"`
	// Supported http redirection types - Permanent, Temporary, Found, SeeOther.
	RedirectType pulumi.StringPtrInput `pulumi:"redirectType"`
	// Request routing specifying redirect configuration.
	RequestRoutingRules SubResourceArrayInput `pulumi:"requestRoutingRules"`
	// Reference to a listener to redirect the request to.
	TargetListener SubResourcePtrInput `pulumi:"targetListener"`
	// Url to redirect the request to.
	TargetUrl pulumi.StringPtrInput `pulumi:"targetUrl"`
	// Url path maps specifying default redirect configuration.
	UrlPathMaps SubResourceArrayInput `pulumi:"urlPathMaps"`
}

func (ApplicationGatewayRedirectConfigurationPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRedirectConfigurationPropertiesFormat)(nil)).Elem()
}

func (i ApplicationGatewayRedirectConfigurationPropertiesFormatArgs) ToApplicationGatewayRedirectConfigurationPropertiesFormatOutput() ApplicationGatewayRedirectConfigurationPropertiesFormatOutput {
	return i.ToApplicationGatewayRedirectConfigurationPropertiesFormatOutputWithContext(context.Background())
}

func (i ApplicationGatewayRedirectConfigurationPropertiesFormatArgs) ToApplicationGatewayRedirectConfigurationPropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRedirectConfigurationPropertiesFormatOutput)
}

func (i ApplicationGatewayRedirectConfigurationPropertiesFormatArgs) ToApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput() ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput {
	return i.ToApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayRedirectConfigurationPropertiesFormatArgs) ToApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRedirectConfigurationPropertiesFormatOutput).ToApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutputWithContext(ctx)
}

// ApplicationGatewayRedirectConfigurationPropertiesFormatPtrInput is an input type that accepts ApplicationGatewayRedirectConfigurationPropertiesFormatArgs, ApplicationGatewayRedirectConfigurationPropertiesFormatPtr and ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayRedirectConfigurationPropertiesFormatPtrInput` via:
//
//          ApplicationGatewayRedirectConfigurationPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayRedirectConfigurationPropertiesFormatPtrInput interface {
	pulumi.Input

	ToApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput() ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput
	ToApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutputWithContext(context.Context) ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput
}

type applicationGatewayRedirectConfigurationPropertiesFormatPtrType ApplicationGatewayRedirectConfigurationPropertiesFormatArgs

func ApplicationGatewayRedirectConfigurationPropertiesFormatPtr(v *ApplicationGatewayRedirectConfigurationPropertiesFormatArgs) ApplicationGatewayRedirectConfigurationPropertiesFormatPtrInput {
	return (*applicationGatewayRedirectConfigurationPropertiesFormatPtrType)(v)
}

func (*applicationGatewayRedirectConfigurationPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRedirectConfigurationPropertiesFormat)(nil)).Elem()
}

func (i *applicationGatewayRedirectConfigurationPropertiesFormatPtrType) ToApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput() ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput {
	return i.ToApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayRedirectConfigurationPropertiesFormatPtrType) ToApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput)
}

// Properties of redirect configuration of the application gateway.
type ApplicationGatewayRedirectConfigurationPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRedirectConfigurationPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRedirectConfigurationPropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayRedirectConfigurationPropertiesFormatOutput) ToApplicationGatewayRedirectConfigurationPropertiesFormatOutput() ApplicationGatewayRedirectConfigurationPropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationPropertiesFormatOutput) ToApplicationGatewayRedirectConfigurationPropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationPropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationPropertiesFormatOutput) ToApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput() ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput {
	return o.ToApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayRedirectConfigurationPropertiesFormatOutput) ToApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationPropertiesFormat) *ApplicationGatewayRedirectConfigurationPropertiesFormat {
		return &v
	}).(ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput)
}

// Include path in the redirected url.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatOutput) IncludePath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationPropertiesFormat) *bool { return v.IncludePath }).(pulumi.BoolPtrOutput)
}

// Include query string in the redirected url.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatOutput) IncludeQueryString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationPropertiesFormat) *bool { return v.IncludeQueryString }).(pulumi.BoolPtrOutput)
}

// Path rules specifying redirect configuration.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatOutput) PathRules() SubResourceArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationPropertiesFormat) []SubResource { return v.PathRules }).(SubResourceArrayOutput)
}

// Supported http redirection types - Permanent, Temporary, Found, SeeOther.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatOutput) RedirectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationPropertiesFormat) *string { return v.RedirectType }).(pulumi.StringPtrOutput)
}

// Request routing specifying redirect configuration.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatOutput) RequestRoutingRules() SubResourceArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationPropertiesFormat) []SubResource {
		return v.RequestRoutingRules
	}).(SubResourceArrayOutput)
}

// Reference to a listener to redirect the request to.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatOutput) TargetListener() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationPropertiesFormat) *SubResource { return v.TargetListener }).(SubResourcePtrOutput)
}

// Url to redirect the request to.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatOutput) TargetUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationPropertiesFormat) *string { return v.TargetUrl }).(pulumi.StringPtrOutput)
}

// Url path maps specifying default redirect configuration.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatOutput) UrlPathMaps() SubResourceArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationPropertiesFormat) []SubResource { return v.UrlPathMaps }).(SubResourceArrayOutput)
}

type ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRedirectConfigurationPropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput) ToApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput() ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput) ToApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput) Elem() ApplicationGatewayRedirectConfigurationPropertiesFormatOutput {
	return o.ApplyT(func(v *ApplicationGatewayRedirectConfigurationPropertiesFormat) ApplicationGatewayRedirectConfigurationPropertiesFormat {
		return *v
	}).(ApplicationGatewayRedirectConfigurationPropertiesFormatOutput)
}

// Include path in the redirected url.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput) IncludePath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRedirectConfigurationPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.IncludePath
	}).(pulumi.BoolPtrOutput)
}

// Include query string in the redirected url.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput) IncludeQueryString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRedirectConfigurationPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeQueryString
	}).(pulumi.BoolPtrOutput)
}

// Path rules specifying redirect configuration.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput) PathRules() SubResourceArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayRedirectConfigurationPropertiesFormat) []SubResource {
		if v == nil {
			return nil
		}
		return v.PathRules
	}).(SubResourceArrayOutput)
}

// Supported http redirection types - Permanent, Temporary, Found, SeeOther.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput) RedirectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRedirectConfigurationPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.RedirectType
	}).(pulumi.StringPtrOutput)
}

// Request routing specifying redirect configuration.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput) RequestRoutingRules() SubResourceArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayRedirectConfigurationPropertiesFormat) []SubResource {
		if v == nil {
			return nil
		}
		return v.RequestRoutingRules
	}).(SubResourceArrayOutput)
}

// Reference to a listener to redirect the request to.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput) TargetListener() SubResourcePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRedirectConfigurationPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.TargetListener
	}).(SubResourcePtrOutput)
}

// Url to redirect the request to.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput) TargetUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRedirectConfigurationPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.TargetUrl
	}).(pulumi.StringPtrOutput)
}

// Url path maps specifying default redirect configuration.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput) UrlPathMaps() SubResourceArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayRedirectConfigurationPropertiesFormat) []SubResource {
		if v == nil {
			return nil
		}
		return v.UrlPathMaps
	}).(SubResourceArrayOutput)
}

// Properties of redirect configuration of the application gateway.
type ApplicationGatewayRedirectConfigurationPropertiesFormatResponse struct {
	// Include path in the redirected url.
	IncludePath *bool `pulumi:"includePath"`
	// Include query string in the redirected url.
	IncludeQueryString *bool `pulumi:"includeQueryString"`
	// Path rules specifying redirect configuration.
	PathRules []SubResourceResponse `pulumi:"pathRules"`
	// Supported http redirection types - Permanent, Temporary, Found, SeeOther.
	RedirectType *string `pulumi:"redirectType"`
	// Request routing specifying redirect configuration.
	RequestRoutingRules []SubResourceResponse `pulumi:"requestRoutingRules"`
	// Reference to a listener to redirect the request to.
	TargetListener *SubResourceResponse `pulumi:"targetListener"`
	// Url to redirect the request to.
	TargetUrl *string `pulumi:"targetUrl"`
	// Url path maps specifying default redirect configuration.
	UrlPathMaps []SubResourceResponse `pulumi:"urlPathMaps"`
}

// ApplicationGatewayRedirectConfigurationPropertiesFormatResponseInput is an input type that accepts ApplicationGatewayRedirectConfigurationPropertiesFormatResponseArgs and ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayRedirectConfigurationPropertiesFormatResponseInput` via:
//
//          ApplicationGatewayRedirectConfigurationPropertiesFormatResponseArgs{...}
type ApplicationGatewayRedirectConfigurationPropertiesFormatResponseInput interface {
	pulumi.Input

	ToApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput() ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput
	ToApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutputWithContext(context.Context) ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput
}

// Properties of redirect configuration of the application gateway.
type ApplicationGatewayRedirectConfigurationPropertiesFormatResponseArgs struct {
	// Include path in the redirected url.
	IncludePath pulumi.BoolPtrInput `pulumi:"includePath"`
	// Include query string in the redirected url.
	IncludeQueryString pulumi.BoolPtrInput `pulumi:"includeQueryString"`
	// Path rules specifying redirect configuration.
	PathRules SubResourceResponseArrayInput `pulumi:"pathRules"`
	// Supported http redirection types - Permanent, Temporary, Found, SeeOther.
	RedirectType pulumi.StringPtrInput `pulumi:"redirectType"`
	// Request routing specifying redirect configuration.
	RequestRoutingRules SubResourceResponseArrayInput `pulumi:"requestRoutingRules"`
	// Reference to a listener to redirect the request to.
	TargetListener SubResourceResponsePtrInput `pulumi:"targetListener"`
	// Url to redirect the request to.
	TargetUrl pulumi.StringPtrInput `pulumi:"targetUrl"`
	// Url path maps specifying default redirect configuration.
	UrlPathMaps SubResourceResponseArrayInput `pulumi:"urlPathMaps"`
}

func (ApplicationGatewayRedirectConfigurationPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRedirectConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (i ApplicationGatewayRedirectConfigurationPropertiesFormatResponseArgs) ToApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput() ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput {
	return i.ToApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayRedirectConfigurationPropertiesFormatResponseArgs) ToApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput)
}

func (i ApplicationGatewayRedirectConfigurationPropertiesFormatResponseArgs) ToApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput() ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayRedirectConfigurationPropertiesFormatResponseArgs) ToApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput).ToApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrInput is an input type that accepts ApplicationGatewayRedirectConfigurationPropertiesFormatResponseArgs, ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtr and ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrInput` via:
//
//          ApplicationGatewayRedirectConfigurationPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput() ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput
	ToApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Context) ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput
}

type applicationGatewayRedirectConfigurationPropertiesFormatResponsePtrType ApplicationGatewayRedirectConfigurationPropertiesFormatResponseArgs

func ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtr(v *ApplicationGatewayRedirectConfigurationPropertiesFormatResponseArgs) ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrInput {
	return (*applicationGatewayRedirectConfigurationPropertiesFormatResponsePtrType)(v)
}

func (*applicationGatewayRedirectConfigurationPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRedirectConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (i *applicationGatewayRedirectConfigurationPropertiesFormatResponsePtrType) ToApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput() ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayRedirectConfigurationPropertiesFormatResponsePtrType) ToApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput)
}

// Properties of redirect configuration of the application gateway.
type ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRedirectConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput) ToApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput() ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput) ToApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput) ToApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput() ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput {
	return o.ToApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput) ToApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationPropertiesFormatResponse) *ApplicationGatewayRedirectConfigurationPropertiesFormatResponse {
		return &v
	}).(ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput)
}

// Include path in the redirected url.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput) IncludePath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationPropertiesFormatResponse) *bool { return v.IncludePath }).(pulumi.BoolPtrOutput)
}

// Include query string in the redirected url.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput) IncludeQueryString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationPropertiesFormatResponse) *bool {
		return v.IncludeQueryString
	}).(pulumi.BoolPtrOutput)
}

// Path rules specifying redirect configuration.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput) PathRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationPropertiesFormatResponse) []SubResourceResponse {
		return v.PathRules
	}).(SubResourceResponseArrayOutput)
}

// Supported http redirection types - Permanent, Temporary, Found, SeeOther.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput) RedirectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationPropertiesFormatResponse) *string { return v.RedirectType }).(pulumi.StringPtrOutput)
}

// Request routing specifying redirect configuration.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput) RequestRoutingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationPropertiesFormatResponse) []SubResourceResponse {
		return v.RequestRoutingRules
	}).(SubResourceResponseArrayOutput)
}

// Reference to a listener to redirect the request to.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput) TargetListener() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationPropertiesFormatResponse) *SubResourceResponse {
		return v.TargetListener
	}).(SubResourceResponsePtrOutput)
}

// Url to redirect the request to.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput) TargetUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationPropertiesFormatResponse) *string { return v.TargetUrl }).(pulumi.StringPtrOutput)
}

// Url path maps specifying default redirect configuration.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput) UrlPathMaps() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationPropertiesFormatResponse) []SubResourceResponse {
		return v.UrlPathMaps
	}).(SubResourceResponseArrayOutput)
}

type ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRedirectConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput) ToApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput() ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput) ToApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput) Elem() ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayRedirectConfigurationPropertiesFormatResponse) ApplicationGatewayRedirectConfigurationPropertiesFormatResponse {
		return *v
	}).(ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput)
}

// Include path in the redirected url.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput) IncludePath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRedirectConfigurationPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IncludePath
	}).(pulumi.BoolPtrOutput)
}

// Include query string in the redirected url.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput) IncludeQueryString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRedirectConfigurationPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeQueryString
	}).(pulumi.BoolPtrOutput)
}

// Path rules specifying redirect configuration.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput) PathRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayRedirectConfigurationPropertiesFormatResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PathRules
	}).(SubResourceResponseArrayOutput)
}

// Supported http redirection types - Permanent, Temporary, Found, SeeOther.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput) RedirectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRedirectConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.RedirectType
	}).(pulumi.StringPtrOutput)
}

// Request routing specifying redirect configuration.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput) RequestRoutingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayRedirectConfigurationPropertiesFormatResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.RequestRoutingRules
	}).(SubResourceResponseArrayOutput)
}

// Reference to a listener to redirect the request to.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput) TargetListener() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRedirectConfigurationPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.TargetListener
	}).(SubResourceResponsePtrOutput)
}

// Url to redirect the request to.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput) TargetUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRedirectConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetUrl
	}).(pulumi.StringPtrOutput)
}

// Url path maps specifying default redirect configuration.
func (o ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput) UrlPathMaps() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayRedirectConfigurationPropertiesFormatResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.UrlPathMaps
	}).(SubResourceResponseArrayOutput)
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the redirect configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of redirect configuration of the application gateway.
	Properties *ApplicationGatewayRedirectConfigurationPropertiesFormatResponse `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayRedirectConfigurationResponseInput is an input type that accepts ApplicationGatewayRedirectConfigurationResponseArgs and ApplicationGatewayRedirectConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayRedirectConfigurationResponseInput` via:
//
//          ApplicationGatewayRedirectConfigurationResponseArgs{...}
type ApplicationGatewayRedirectConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayRedirectConfigurationResponseOutput() ApplicationGatewayRedirectConfigurationResponseOutput
	ToApplicationGatewayRedirectConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayRedirectConfigurationResponseOutput
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the redirect configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of redirect configuration of the application gateway.
	Properties ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayRedirectConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRedirectConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayRedirectConfigurationResponseArgs) ToApplicationGatewayRedirectConfigurationResponseOutput() ApplicationGatewayRedirectConfigurationResponseOutput {
	return i.ToApplicationGatewayRedirectConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayRedirectConfigurationResponseArgs) ToApplicationGatewayRedirectConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRedirectConfigurationResponseOutput)
}

// ApplicationGatewayRedirectConfigurationResponseArrayInput is an input type that accepts ApplicationGatewayRedirectConfigurationResponseArray and ApplicationGatewayRedirectConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRedirectConfigurationResponseArrayInput` via:
//
//          ApplicationGatewayRedirectConfigurationResponseArray{ ApplicationGatewayRedirectConfigurationResponseArgs{...} }
type ApplicationGatewayRedirectConfigurationResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRedirectConfigurationResponseArrayOutput() ApplicationGatewayRedirectConfigurationResponseArrayOutput
	ToApplicationGatewayRedirectConfigurationResponseArrayOutputWithContext(context.Context) ApplicationGatewayRedirectConfigurationResponseArrayOutput
}

type ApplicationGatewayRedirectConfigurationResponseArray []ApplicationGatewayRedirectConfigurationResponseInput

func (ApplicationGatewayRedirectConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRedirectConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayRedirectConfigurationResponseArray) ToApplicationGatewayRedirectConfigurationResponseArrayOutput() ApplicationGatewayRedirectConfigurationResponseArrayOutput {
	return i.ToApplicationGatewayRedirectConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRedirectConfigurationResponseArray) ToApplicationGatewayRedirectConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRedirectConfigurationResponseArrayOutput)
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRedirectConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRedirectConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayRedirectConfigurationResponseOutput) ToApplicationGatewayRedirectConfigurationResponseOutput() ApplicationGatewayRedirectConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationResponseOutput) ToApplicationGatewayRedirectConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the redirect configuration that is unique within an Application Gateway.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of redirect configuration of the application gateway.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) Properties() ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *ApplicationGatewayRedirectConfigurationPropertiesFormatResponse {
		return v.Properties
	}).(ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayRedirectConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRedirectConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRedirectConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayRedirectConfigurationResponseArrayOutput) ToApplicationGatewayRedirectConfigurationResponseArrayOutput() ApplicationGatewayRedirectConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationResponseArrayOutput) ToApplicationGatewayRedirectConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRedirectConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRedirectConfigurationResponse {
		return vs[0].([]ApplicationGatewayRedirectConfigurationResponse)[vs[1].(int)]
	}).(ApplicationGatewayRedirectConfigurationResponseOutput)
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRule struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the request routing rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of request routing rule of the application gateway.
	Properties *ApplicationGatewayRequestRoutingRulePropertiesFormat `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayRequestRoutingRuleInput is an input type that accepts ApplicationGatewayRequestRoutingRuleArgs and ApplicationGatewayRequestRoutingRuleOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRuleInput` via:
//
//          ApplicationGatewayRequestRoutingRuleArgs{...}
type ApplicationGatewayRequestRoutingRuleInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRuleOutput() ApplicationGatewayRequestRoutingRuleOutput
	ToApplicationGatewayRequestRoutingRuleOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRuleOutput
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the request routing rule that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of request routing rule of the application gateway.
	Properties ApplicationGatewayRequestRoutingRulePropertiesFormatPtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayRequestRoutingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRuleArgs) ToApplicationGatewayRequestRoutingRuleOutput() ApplicationGatewayRequestRoutingRuleOutput {
	return i.ToApplicationGatewayRequestRoutingRuleOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRuleArgs) ToApplicationGatewayRequestRoutingRuleOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRuleOutput)
}

// ApplicationGatewayRequestRoutingRuleArrayInput is an input type that accepts ApplicationGatewayRequestRoutingRuleArray and ApplicationGatewayRequestRoutingRuleArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRuleArrayInput` via:
//
//          ApplicationGatewayRequestRoutingRuleArray{ ApplicationGatewayRequestRoutingRuleArgs{...} }
type ApplicationGatewayRequestRoutingRuleArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRuleArrayOutput() ApplicationGatewayRequestRoutingRuleArrayOutput
	ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRuleArrayOutput
}

type ApplicationGatewayRequestRoutingRuleArray []ApplicationGatewayRequestRoutingRuleInput

func (ApplicationGatewayRequestRoutingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRuleArray) ToApplicationGatewayRequestRoutingRuleArrayOutput() ApplicationGatewayRequestRoutingRuleArrayOutput {
	return i.ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRuleArray) ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRuleArrayOutput)
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleOutput) ToApplicationGatewayRequestRoutingRuleOutput() ApplicationGatewayRequestRoutingRuleOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleOutput) ToApplicationGatewayRequestRoutingRuleOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayRequestRoutingRuleOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayRequestRoutingRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the request routing rule that is unique within an Application Gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of request routing rule of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) Properties() ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *ApplicationGatewayRequestRoutingRulePropertiesFormat {
		return v.Properties
	}).(ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayRequestRoutingRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayRequestRoutingRuleArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleArrayOutput) ToApplicationGatewayRequestRoutingRuleArrayOutput() ApplicationGatewayRequestRoutingRuleArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleArrayOutput) ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRequestRoutingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRequestRoutingRule {
		return vs[0].([]ApplicationGatewayRequestRoutingRule)[vs[1].(int)]
	}).(ApplicationGatewayRequestRoutingRuleOutput)
}

// Properties of request routing rule of the application gateway.
type ApplicationGatewayRequestRoutingRulePropertiesFormat struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool *SubResource `pulumi:"backendAddressPool"`
	// Backend http settings resource of the application gateway.
	BackendHttpSettings *SubResource `pulumi:"backendHttpSettings"`
	// Http listener resource of the application gateway.
	HttpListener *SubResource `pulumi:"httpListener"`
	// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Redirect configuration resource of the application gateway.
	RedirectConfiguration *SubResource `pulumi:"redirectConfiguration"`
	// Rewrite Rule Set resource in Basic rule of the application gateway.
	RewriteRuleSet *SubResource `pulumi:"rewriteRuleSet"`
	// Rule type.
	RuleType *string `pulumi:"ruleType"`
	// URL path map resource of the application gateway.
	UrlPathMap *SubResource `pulumi:"urlPathMap"`
}

// ApplicationGatewayRequestRoutingRulePropertiesFormatInput is an input type that accepts ApplicationGatewayRequestRoutingRulePropertiesFormatArgs and ApplicationGatewayRequestRoutingRulePropertiesFormatOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRulePropertiesFormatInput` via:
//
//          ApplicationGatewayRequestRoutingRulePropertiesFormatArgs{...}
type ApplicationGatewayRequestRoutingRulePropertiesFormatInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRulePropertiesFormatOutput() ApplicationGatewayRequestRoutingRulePropertiesFormatOutput
	ToApplicationGatewayRequestRoutingRulePropertiesFormatOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRulePropertiesFormatOutput
}

// Properties of request routing rule of the application gateway.
type ApplicationGatewayRequestRoutingRulePropertiesFormatArgs struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool SubResourcePtrInput `pulumi:"backendAddressPool"`
	// Backend http settings resource of the application gateway.
	BackendHttpSettings SubResourcePtrInput `pulumi:"backendHttpSettings"`
	// Http listener resource of the application gateway.
	HttpListener SubResourcePtrInput `pulumi:"httpListener"`
	// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Redirect configuration resource of the application gateway.
	RedirectConfiguration SubResourcePtrInput `pulumi:"redirectConfiguration"`
	// Rewrite Rule Set resource in Basic rule of the application gateway.
	RewriteRuleSet SubResourcePtrInput `pulumi:"rewriteRuleSet"`
	// Rule type.
	RuleType pulumi.StringPtrInput `pulumi:"ruleType"`
	// URL path map resource of the application gateway.
	UrlPathMap SubResourcePtrInput `pulumi:"urlPathMap"`
}

func (ApplicationGatewayRequestRoutingRulePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRulePropertiesFormat)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRulePropertiesFormatArgs) ToApplicationGatewayRequestRoutingRulePropertiesFormatOutput() ApplicationGatewayRequestRoutingRulePropertiesFormatOutput {
	return i.ToApplicationGatewayRequestRoutingRulePropertiesFormatOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRulePropertiesFormatArgs) ToApplicationGatewayRequestRoutingRulePropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRulePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRulePropertiesFormatOutput)
}

func (i ApplicationGatewayRequestRoutingRulePropertiesFormatArgs) ToApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput() ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput {
	return i.ToApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRulePropertiesFormatArgs) ToApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRulePropertiesFormatOutput).ToApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutputWithContext(ctx)
}

// ApplicationGatewayRequestRoutingRulePropertiesFormatPtrInput is an input type that accepts ApplicationGatewayRequestRoutingRulePropertiesFormatArgs, ApplicationGatewayRequestRoutingRulePropertiesFormatPtr and ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRulePropertiesFormatPtrInput` via:
//
//          ApplicationGatewayRequestRoutingRulePropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayRequestRoutingRulePropertiesFormatPtrInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput() ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput
	ToApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput
}

type applicationGatewayRequestRoutingRulePropertiesFormatPtrType ApplicationGatewayRequestRoutingRulePropertiesFormatArgs

func ApplicationGatewayRequestRoutingRulePropertiesFormatPtr(v *ApplicationGatewayRequestRoutingRulePropertiesFormatArgs) ApplicationGatewayRequestRoutingRulePropertiesFormatPtrInput {
	return (*applicationGatewayRequestRoutingRulePropertiesFormatPtrType)(v)
}

func (*applicationGatewayRequestRoutingRulePropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRequestRoutingRulePropertiesFormat)(nil)).Elem()
}

func (i *applicationGatewayRequestRoutingRulePropertiesFormatPtrType) ToApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput() ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput {
	return i.ToApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayRequestRoutingRulePropertiesFormatPtrType) ToApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput)
}

// Properties of request routing rule of the application gateway.
type ApplicationGatewayRequestRoutingRulePropertiesFormatOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRulePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRulePropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRulePropertiesFormatOutput) ToApplicationGatewayRequestRoutingRulePropertiesFormatOutput() ApplicationGatewayRequestRoutingRulePropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRulePropertiesFormatOutput) ToApplicationGatewayRequestRoutingRulePropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRulePropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRulePropertiesFormatOutput) ToApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput() ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput {
	return o.ToApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayRequestRoutingRulePropertiesFormatOutput) ToApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRulePropertiesFormat) *ApplicationGatewayRequestRoutingRulePropertiesFormat {
		return &v
	}).(ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput)
}

// Backend address pool resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatOutput) BackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRulePropertiesFormat) *SubResource { return v.BackendAddressPool }).(SubResourcePtrOutput)
}

// Backend http settings resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatOutput) BackendHttpSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRulePropertiesFormat) *SubResource {
		return v.BackendHttpSettings
	}).(SubResourcePtrOutput)
}

// Http listener resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatOutput) HttpListener() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRulePropertiesFormat) *SubResource { return v.HttpListener }).(SubResourcePtrOutput)
}

// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRulePropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Redirect configuration resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatOutput) RedirectConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRulePropertiesFormat) *SubResource {
		return v.RedirectConfiguration
	}).(SubResourcePtrOutput)
}

// Rewrite Rule Set resource in Basic rule of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatOutput) RewriteRuleSet() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRulePropertiesFormat) *SubResource { return v.RewriteRuleSet }).(SubResourcePtrOutput)
}

// Rule type.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatOutput) RuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRulePropertiesFormat) *string { return v.RuleType }).(pulumi.StringPtrOutput)
}

// URL path map resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatOutput) UrlPathMap() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRulePropertiesFormat) *SubResource { return v.UrlPathMap }).(SubResourcePtrOutput)
}

type ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRequestRoutingRulePropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput) ToApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput() ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput) ToApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput) Elem() ApplicationGatewayRequestRoutingRulePropertiesFormatOutput {
	return o.ApplyT(func(v *ApplicationGatewayRequestRoutingRulePropertiesFormat) ApplicationGatewayRequestRoutingRulePropertiesFormat {
		return *v
	}).(ApplicationGatewayRequestRoutingRulePropertiesFormatOutput)
}

// Backend address pool resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput) BackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRequestRoutingRulePropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.BackendAddressPool
	}).(SubResourcePtrOutput)
}

// Backend http settings resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput) BackendHttpSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRequestRoutingRulePropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.BackendHttpSettings
	}).(SubResourcePtrOutput)
}

// Http listener resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput) HttpListener() SubResourcePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRequestRoutingRulePropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.HttpListener
	}).(SubResourcePtrOutput)
}

// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRequestRoutingRulePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Redirect configuration resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput) RedirectConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRequestRoutingRulePropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.RedirectConfiguration
	}).(SubResourcePtrOutput)
}

// Rewrite Rule Set resource in Basic rule of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput) RewriteRuleSet() SubResourcePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRequestRoutingRulePropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.RewriteRuleSet
	}).(SubResourcePtrOutput)
}

// Rule type.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput) RuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRequestRoutingRulePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.RuleType
	}).(pulumi.StringPtrOutput)
}

// URL path map resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput) UrlPathMap() SubResourcePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRequestRoutingRulePropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.UrlPathMap
	}).(SubResourcePtrOutput)
}

// Properties of request routing rule of the application gateway.
type ApplicationGatewayRequestRoutingRulePropertiesFormatResponse struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool *SubResourceResponse `pulumi:"backendAddressPool"`
	// Backend http settings resource of the application gateway.
	BackendHttpSettings *SubResourceResponse `pulumi:"backendHttpSettings"`
	// Http listener resource of the application gateway.
	HttpListener *SubResourceResponse `pulumi:"httpListener"`
	// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Redirect configuration resource of the application gateway.
	RedirectConfiguration *SubResourceResponse `pulumi:"redirectConfiguration"`
	// Rewrite Rule Set resource in Basic rule of the application gateway.
	RewriteRuleSet *SubResourceResponse `pulumi:"rewriteRuleSet"`
	// Rule type.
	RuleType *string `pulumi:"ruleType"`
	// URL path map resource of the application gateway.
	UrlPathMap *SubResourceResponse `pulumi:"urlPathMap"`
}

// ApplicationGatewayRequestRoutingRulePropertiesFormatResponseInput is an input type that accepts ApplicationGatewayRequestRoutingRulePropertiesFormatResponseArgs and ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRulePropertiesFormatResponseInput` via:
//
//          ApplicationGatewayRequestRoutingRulePropertiesFormatResponseArgs{...}
type ApplicationGatewayRequestRoutingRulePropertiesFormatResponseInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput() ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput
	ToApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput
}

// Properties of request routing rule of the application gateway.
type ApplicationGatewayRequestRoutingRulePropertiesFormatResponseArgs struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool SubResourceResponsePtrInput `pulumi:"backendAddressPool"`
	// Backend http settings resource of the application gateway.
	BackendHttpSettings SubResourceResponsePtrInput `pulumi:"backendHttpSettings"`
	// Http listener resource of the application gateway.
	HttpListener SubResourceResponsePtrInput `pulumi:"httpListener"`
	// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Redirect configuration resource of the application gateway.
	RedirectConfiguration SubResourceResponsePtrInput `pulumi:"redirectConfiguration"`
	// Rewrite Rule Set resource in Basic rule of the application gateway.
	RewriteRuleSet SubResourceResponsePtrInput `pulumi:"rewriteRuleSet"`
	// Rule type.
	RuleType pulumi.StringPtrInput `pulumi:"ruleType"`
	// URL path map resource of the application gateway.
	UrlPathMap SubResourceResponsePtrInput `pulumi:"urlPathMap"`
}

func (ApplicationGatewayRequestRoutingRulePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRulePropertiesFormatResponse)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRulePropertiesFormatResponseArgs) ToApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput() ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput {
	return i.ToApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRulePropertiesFormatResponseArgs) ToApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput)
}

func (i ApplicationGatewayRequestRoutingRulePropertiesFormatResponseArgs) ToApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput() ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRulePropertiesFormatResponseArgs) ToApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput).ToApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrInput is an input type that accepts ApplicationGatewayRequestRoutingRulePropertiesFormatResponseArgs, ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtr and ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrInput` via:
//
//          ApplicationGatewayRequestRoutingRulePropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput() ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput
	ToApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput
}

type applicationGatewayRequestRoutingRulePropertiesFormatResponsePtrType ApplicationGatewayRequestRoutingRulePropertiesFormatResponseArgs

func ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtr(v *ApplicationGatewayRequestRoutingRulePropertiesFormatResponseArgs) ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrInput {
	return (*applicationGatewayRequestRoutingRulePropertiesFormatResponsePtrType)(v)
}

func (*applicationGatewayRequestRoutingRulePropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRequestRoutingRulePropertiesFormatResponse)(nil)).Elem()
}

func (i *applicationGatewayRequestRoutingRulePropertiesFormatResponsePtrType) ToApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput() ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayRequestRoutingRulePropertiesFormatResponsePtrType) ToApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput)
}

// Properties of request routing rule of the application gateway.
type ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRulePropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput) ToApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput() ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput) ToApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput) ToApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput() ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput {
	return o.ToApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput) ToApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRulePropertiesFormatResponse) *ApplicationGatewayRequestRoutingRulePropertiesFormatResponse {
		return &v
	}).(ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput)
}

// Backend address pool resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput) BackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRulePropertiesFormatResponse) *SubResourceResponse {
		return v.BackendAddressPool
	}).(SubResourceResponsePtrOutput)
}

// Backend http settings resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput) BackendHttpSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRulePropertiesFormatResponse) *SubResourceResponse {
		return v.BackendHttpSettings
	}).(SubResourceResponsePtrOutput)
}

// Http listener resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput) HttpListener() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRulePropertiesFormatResponse) *SubResourceResponse {
		return v.HttpListener
	}).(SubResourceResponsePtrOutput)
}

// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRulePropertiesFormatResponse) *string {
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Redirect configuration resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput) RedirectConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRulePropertiesFormatResponse) *SubResourceResponse {
		return v.RedirectConfiguration
	}).(SubResourceResponsePtrOutput)
}

// Rewrite Rule Set resource in Basic rule of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput) RewriteRuleSet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRulePropertiesFormatResponse) *SubResourceResponse {
		return v.RewriteRuleSet
	}).(SubResourceResponsePtrOutput)
}

// Rule type.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput) RuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRulePropertiesFormatResponse) *string { return v.RuleType }).(pulumi.StringPtrOutput)
}

// URL path map resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput) UrlPathMap() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRulePropertiesFormatResponse) *SubResourceResponse {
		return v.UrlPathMap
	}).(SubResourceResponsePtrOutput)
}

type ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRequestRoutingRulePropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput) ToApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput() ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput) ToApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput) Elem() ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayRequestRoutingRulePropertiesFormatResponse) ApplicationGatewayRequestRoutingRulePropertiesFormatResponse {
		return *v
	}).(ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput)
}

// Backend address pool resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput) BackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRequestRoutingRulePropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.BackendAddressPool
	}).(SubResourceResponsePtrOutput)
}

// Backend http settings resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput) BackendHttpSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRequestRoutingRulePropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.BackendHttpSettings
	}).(SubResourceResponsePtrOutput)
}

// Http listener resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput) HttpListener() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRequestRoutingRulePropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.HttpListener
	}).(SubResourceResponsePtrOutput)
}

// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRequestRoutingRulePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Redirect configuration resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput) RedirectConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRequestRoutingRulePropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.RedirectConfiguration
	}).(SubResourceResponsePtrOutput)
}

// Rewrite Rule Set resource in Basic rule of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput) RewriteRuleSet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRequestRoutingRulePropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.RewriteRuleSet
	}).(SubResourceResponsePtrOutput)
}

// Rule type.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput) RuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRequestRoutingRulePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.RuleType
	}).(pulumi.StringPtrOutput)
}

// URL path map resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput) UrlPathMap() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRequestRoutingRulePropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.UrlPathMap
	}).(SubResourceResponsePtrOutput)
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the request routing rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of request routing rule of the application gateway.
	Properties *ApplicationGatewayRequestRoutingRulePropertiesFormatResponse `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayRequestRoutingRuleResponseInput is an input type that accepts ApplicationGatewayRequestRoutingRuleResponseArgs and ApplicationGatewayRequestRoutingRuleResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRuleResponseInput` via:
//
//          ApplicationGatewayRequestRoutingRuleResponseArgs{...}
type ApplicationGatewayRequestRoutingRuleResponseInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRuleResponseOutput() ApplicationGatewayRequestRoutingRuleResponseOutput
	ToApplicationGatewayRequestRoutingRuleResponseOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRuleResponseOutput
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the request routing rule that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of request routing rule of the application gateway.
	Properties ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayRequestRoutingRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRuleResponse)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRuleResponseArgs) ToApplicationGatewayRequestRoutingRuleResponseOutput() ApplicationGatewayRequestRoutingRuleResponseOutput {
	return i.ToApplicationGatewayRequestRoutingRuleResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRuleResponseArgs) ToApplicationGatewayRequestRoutingRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRuleResponseOutput)
}

// ApplicationGatewayRequestRoutingRuleResponseArrayInput is an input type that accepts ApplicationGatewayRequestRoutingRuleResponseArray and ApplicationGatewayRequestRoutingRuleResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRuleResponseArrayInput` via:
//
//          ApplicationGatewayRequestRoutingRuleResponseArray{ ApplicationGatewayRequestRoutingRuleResponseArgs{...} }
type ApplicationGatewayRequestRoutingRuleResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRuleResponseArrayOutput() ApplicationGatewayRequestRoutingRuleResponseArrayOutput
	ToApplicationGatewayRequestRoutingRuleResponseArrayOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRuleResponseArrayOutput
}

type ApplicationGatewayRequestRoutingRuleResponseArray []ApplicationGatewayRequestRoutingRuleResponseInput

func (ApplicationGatewayRequestRoutingRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRuleResponse)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRuleResponseArray) ToApplicationGatewayRequestRoutingRuleResponseArrayOutput() ApplicationGatewayRequestRoutingRuleResponseArrayOutput {
	return i.ToApplicationGatewayRequestRoutingRuleResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRuleResponseArray) ToApplicationGatewayRequestRoutingRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRuleResponseArrayOutput)
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleResponseOutput) ToApplicationGatewayRequestRoutingRuleResponseOutput() ApplicationGatewayRequestRoutingRuleResponseOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleResponseOutput) ToApplicationGatewayRequestRoutingRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the request routing rule that is unique within an Application Gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of request routing rule of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) Properties() ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *ApplicationGatewayRequestRoutingRulePropertiesFormatResponse {
		return v.Properties
	}).(ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayRequestRoutingRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleResponseArrayOutput) ToApplicationGatewayRequestRoutingRuleResponseArrayOutput() ApplicationGatewayRequestRoutingRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleResponseArrayOutput) ToApplicationGatewayRequestRoutingRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRequestRoutingRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRequestRoutingRuleResponse {
		return vs[0].([]ApplicationGatewayRequestRoutingRuleResponse)[vs[1].(int)]
	}).(ApplicationGatewayRequestRoutingRuleResponseOutput)
}

// Rewrite rule of an application gateway.
type ApplicationGatewayRewriteRule struct {
	// Set of actions to be done as part of the rewrite Rule.
	ActionSet *ApplicationGatewayRewriteRuleActionSet `pulumi:"actionSet"`
	// Name of the rewrite rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
}

// ApplicationGatewayRewriteRuleInput is an input type that accepts ApplicationGatewayRewriteRuleArgs and ApplicationGatewayRewriteRuleOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleInput` via:
//
//          ApplicationGatewayRewriteRuleArgs{...}
type ApplicationGatewayRewriteRuleInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleOutput() ApplicationGatewayRewriteRuleOutput
	ToApplicationGatewayRewriteRuleOutputWithContext(context.Context) ApplicationGatewayRewriteRuleOutput
}

// Rewrite rule of an application gateway.
type ApplicationGatewayRewriteRuleArgs struct {
	// Set of actions to be done as part of the rewrite Rule.
	ActionSet ApplicationGatewayRewriteRuleActionSetPtrInput `pulumi:"actionSet"`
	// Name of the rewrite rule that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ApplicationGatewayRewriteRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRule)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleArgs) ToApplicationGatewayRewriteRuleOutput() ApplicationGatewayRewriteRuleOutput {
	return i.ToApplicationGatewayRewriteRuleOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleArgs) ToApplicationGatewayRewriteRuleOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleOutput)
}

// ApplicationGatewayRewriteRuleArrayInput is an input type that accepts ApplicationGatewayRewriteRuleArray and ApplicationGatewayRewriteRuleArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleArrayInput` via:
//
//          ApplicationGatewayRewriteRuleArray{ ApplicationGatewayRewriteRuleArgs{...} }
type ApplicationGatewayRewriteRuleArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleArrayOutput() ApplicationGatewayRewriteRuleArrayOutput
	ToApplicationGatewayRewriteRuleArrayOutputWithContext(context.Context) ApplicationGatewayRewriteRuleArrayOutput
}

type ApplicationGatewayRewriteRuleArray []ApplicationGatewayRewriteRuleInput

func (ApplicationGatewayRewriteRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRule)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleArray) ToApplicationGatewayRewriteRuleArrayOutput() ApplicationGatewayRewriteRuleArrayOutput {
	return i.ToApplicationGatewayRewriteRuleArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleArray) ToApplicationGatewayRewriteRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleArrayOutput)
}

// Rewrite rule of an application gateway.
type ApplicationGatewayRewriteRuleOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRule)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleOutput) ToApplicationGatewayRewriteRuleOutput() ApplicationGatewayRewriteRuleOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleOutput) ToApplicationGatewayRewriteRuleOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleOutput {
	return o
}

// Set of actions to be done as part of the rewrite Rule.
func (o ApplicationGatewayRewriteRuleOutput) ActionSet() ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRule) *ApplicationGatewayRewriteRuleActionSet { return v.ActionSet }).(ApplicationGatewayRewriteRuleActionSetPtrOutput)
}

// Name of the rewrite rule that is unique within an Application Gateway.
func (o ApplicationGatewayRewriteRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayRewriteRuleArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRule)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleArrayOutput) ToApplicationGatewayRewriteRuleArrayOutput() ApplicationGatewayRewriteRuleArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleArrayOutput) ToApplicationGatewayRewriteRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRewriteRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRewriteRule {
		return vs[0].([]ApplicationGatewayRewriteRule)[vs[1].(int)]
	}).(ApplicationGatewayRewriteRuleOutput)
}

// Set of actions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleActionSet struct {
	// Request Header Actions in the Action Set
	RequestHeaderConfigurations []ApplicationGatewayHeaderConfiguration `pulumi:"requestHeaderConfigurations"`
	// Response Header Actions in the Action Set
	ResponseHeaderConfigurations []ApplicationGatewayHeaderConfiguration `pulumi:"responseHeaderConfigurations"`
}

// ApplicationGatewayRewriteRuleActionSetInput is an input type that accepts ApplicationGatewayRewriteRuleActionSetArgs and ApplicationGatewayRewriteRuleActionSetOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleActionSetInput` via:
//
//          ApplicationGatewayRewriteRuleActionSetArgs{...}
type ApplicationGatewayRewriteRuleActionSetInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleActionSetOutput() ApplicationGatewayRewriteRuleActionSetOutput
	ToApplicationGatewayRewriteRuleActionSetOutputWithContext(context.Context) ApplicationGatewayRewriteRuleActionSetOutput
}

// Set of actions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleActionSetArgs struct {
	// Request Header Actions in the Action Set
	RequestHeaderConfigurations ApplicationGatewayHeaderConfigurationArrayInput `pulumi:"requestHeaderConfigurations"`
	// Response Header Actions in the Action Set
	ResponseHeaderConfigurations ApplicationGatewayHeaderConfigurationArrayInput `pulumi:"responseHeaderConfigurations"`
}

func (ApplicationGatewayRewriteRuleActionSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleActionSet)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleActionSetArgs) ToApplicationGatewayRewriteRuleActionSetOutput() ApplicationGatewayRewriteRuleActionSetOutput {
	return i.ToApplicationGatewayRewriteRuleActionSetOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleActionSetArgs) ToApplicationGatewayRewriteRuleActionSetOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleActionSetOutput)
}

func (i ApplicationGatewayRewriteRuleActionSetArgs) ToApplicationGatewayRewriteRuleActionSetPtrOutput() ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return i.ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleActionSetArgs) ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleActionSetOutput).ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(ctx)
}

// ApplicationGatewayRewriteRuleActionSetPtrInput is an input type that accepts ApplicationGatewayRewriteRuleActionSetArgs, ApplicationGatewayRewriteRuleActionSetPtr and ApplicationGatewayRewriteRuleActionSetPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleActionSetPtrInput` via:
//
//          ApplicationGatewayRewriteRuleActionSetArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayRewriteRuleActionSetPtrInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleActionSetPtrOutput() ApplicationGatewayRewriteRuleActionSetPtrOutput
	ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(context.Context) ApplicationGatewayRewriteRuleActionSetPtrOutput
}

type applicationGatewayRewriteRuleActionSetPtrType ApplicationGatewayRewriteRuleActionSetArgs

func ApplicationGatewayRewriteRuleActionSetPtr(v *ApplicationGatewayRewriteRuleActionSetArgs) ApplicationGatewayRewriteRuleActionSetPtrInput {
	return (*applicationGatewayRewriteRuleActionSetPtrType)(v)
}

func (*applicationGatewayRewriteRuleActionSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRewriteRuleActionSet)(nil)).Elem()
}

func (i *applicationGatewayRewriteRuleActionSetPtrType) ToApplicationGatewayRewriteRuleActionSetPtrOutput() ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return i.ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayRewriteRuleActionSetPtrType) ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleActionSetPtrOutput)
}

// Set of actions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleActionSetOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleActionSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleActionSet)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleActionSetOutput) ToApplicationGatewayRewriteRuleActionSetOutput() ApplicationGatewayRewriteRuleActionSetOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetOutput) ToApplicationGatewayRewriteRuleActionSetOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetOutput) ToApplicationGatewayRewriteRuleActionSetPtrOutput() ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return o.ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayRewriteRuleActionSetOutput) ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleActionSet) *ApplicationGatewayRewriteRuleActionSet {
		return &v
	}).(ApplicationGatewayRewriteRuleActionSetPtrOutput)
}

// Request Header Actions in the Action Set
func (o ApplicationGatewayRewriteRuleActionSetOutput) RequestHeaderConfigurations() ApplicationGatewayHeaderConfigurationArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleActionSet) []ApplicationGatewayHeaderConfiguration {
		return v.RequestHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationArrayOutput)
}

// Response Header Actions in the Action Set
func (o ApplicationGatewayRewriteRuleActionSetOutput) ResponseHeaderConfigurations() ApplicationGatewayHeaderConfigurationArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleActionSet) []ApplicationGatewayHeaderConfiguration {
		return v.ResponseHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationArrayOutput)
}

type ApplicationGatewayRewriteRuleActionSetPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleActionSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRewriteRuleActionSet)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleActionSetPtrOutput) ToApplicationGatewayRewriteRuleActionSetPtrOutput() ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetPtrOutput) ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetPtrOutput) Elem() ApplicationGatewayRewriteRuleActionSetOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleActionSet) ApplicationGatewayRewriteRuleActionSet { return *v }).(ApplicationGatewayRewriteRuleActionSetOutput)
}

// Request Header Actions in the Action Set
func (o ApplicationGatewayRewriteRuleActionSetPtrOutput) RequestHeaderConfigurations() ApplicationGatewayHeaderConfigurationArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleActionSet) []ApplicationGatewayHeaderConfiguration {
		if v == nil {
			return nil
		}
		return v.RequestHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationArrayOutput)
}

// Response Header Actions in the Action Set
func (o ApplicationGatewayRewriteRuleActionSetPtrOutput) ResponseHeaderConfigurations() ApplicationGatewayHeaderConfigurationArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleActionSet) []ApplicationGatewayHeaderConfiguration {
		if v == nil {
			return nil
		}
		return v.ResponseHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationArrayOutput)
}

// Set of actions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleActionSetResponse struct {
	// Request Header Actions in the Action Set
	RequestHeaderConfigurations []ApplicationGatewayHeaderConfigurationResponse `pulumi:"requestHeaderConfigurations"`
	// Response Header Actions in the Action Set
	ResponseHeaderConfigurations []ApplicationGatewayHeaderConfigurationResponse `pulumi:"responseHeaderConfigurations"`
}

// ApplicationGatewayRewriteRuleActionSetResponseInput is an input type that accepts ApplicationGatewayRewriteRuleActionSetResponseArgs and ApplicationGatewayRewriteRuleActionSetResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleActionSetResponseInput` via:
//
//          ApplicationGatewayRewriteRuleActionSetResponseArgs{...}
type ApplicationGatewayRewriteRuleActionSetResponseInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleActionSetResponseOutput() ApplicationGatewayRewriteRuleActionSetResponseOutput
	ToApplicationGatewayRewriteRuleActionSetResponseOutputWithContext(context.Context) ApplicationGatewayRewriteRuleActionSetResponseOutput
}

// Set of actions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleActionSetResponseArgs struct {
	// Request Header Actions in the Action Set
	RequestHeaderConfigurations ApplicationGatewayHeaderConfigurationResponseArrayInput `pulumi:"requestHeaderConfigurations"`
	// Response Header Actions in the Action Set
	ResponseHeaderConfigurations ApplicationGatewayHeaderConfigurationResponseArrayInput `pulumi:"responseHeaderConfigurations"`
}

func (ApplicationGatewayRewriteRuleActionSetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleActionSetResponse)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleActionSetResponseArgs) ToApplicationGatewayRewriteRuleActionSetResponseOutput() ApplicationGatewayRewriteRuleActionSetResponseOutput {
	return i.ToApplicationGatewayRewriteRuleActionSetResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleActionSetResponseArgs) ToApplicationGatewayRewriteRuleActionSetResponseOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleActionSetResponseOutput)
}

func (i ApplicationGatewayRewriteRuleActionSetResponseArgs) ToApplicationGatewayRewriteRuleActionSetResponsePtrOutput() ApplicationGatewayRewriteRuleActionSetResponsePtrOutput {
	return i.ToApplicationGatewayRewriteRuleActionSetResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleActionSetResponseArgs) ToApplicationGatewayRewriteRuleActionSetResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleActionSetResponseOutput).ToApplicationGatewayRewriteRuleActionSetResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayRewriteRuleActionSetResponsePtrInput is an input type that accepts ApplicationGatewayRewriteRuleActionSetResponseArgs, ApplicationGatewayRewriteRuleActionSetResponsePtr and ApplicationGatewayRewriteRuleActionSetResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleActionSetResponsePtrInput` via:
//
//          ApplicationGatewayRewriteRuleActionSetResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayRewriteRuleActionSetResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleActionSetResponsePtrOutput() ApplicationGatewayRewriteRuleActionSetResponsePtrOutput
	ToApplicationGatewayRewriteRuleActionSetResponsePtrOutputWithContext(context.Context) ApplicationGatewayRewriteRuleActionSetResponsePtrOutput
}

type applicationGatewayRewriteRuleActionSetResponsePtrType ApplicationGatewayRewriteRuleActionSetResponseArgs

func ApplicationGatewayRewriteRuleActionSetResponsePtr(v *ApplicationGatewayRewriteRuleActionSetResponseArgs) ApplicationGatewayRewriteRuleActionSetResponsePtrInput {
	return (*applicationGatewayRewriteRuleActionSetResponsePtrType)(v)
}

func (*applicationGatewayRewriteRuleActionSetResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRewriteRuleActionSetResponse)(nil)).Elem()
}

func (i *applicationGatewayRewriteRuleActionSetResponsePtrType) ToApplicationGatewayRewriteRuleActionSetResponsePtrOutput() ApplicationGatewayRewriteRuleActionSetResponsePtrOutput {
	return i.ToApplicationGatewayRewriteRuleActionSetResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayRewriteRuleActionSetResponsePtrType) ToApplicationGatewayRewriteRuleActionSetResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleActionSetResponsePtrOutput)
}

// Set of actions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleActionSetResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleActionSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleActionSetResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleActionSetResponseOutput) ToApplicationGatewayRewriteRuleActionSetResponseOutput() ApplicationGatewayRewriteRuleActionSetResponseOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetResponseOutput) ToApplicationGatewayRewriteRuleActionSetResponseOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetResponseOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetResponseOutput) ToApplicationGatewayRewriteRuleActionSetResponsePtrOutput() ApplicationGatewayRewriteRuleActionSetResponsePtrOutput {
	return o.ToApplicationGatewayRewriteRuleActionSetResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayRewriteRuleActionSetResponseOutput) ToApplicationGatewayRewriteRuleActionSetResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleActionSetResponse) *ApplicationGatewayRewriteRuleActionSetResponse {
		return &v
	}).(ApplicationGatewayRewriteRuleActionSetResponsePtrOutput)
}

// Request Header Actions in the Action Set
func (o ApplicationGatewayRewriteRuleActionSetResponseOutput) RequestHeaderConfigurations() ApplicationGatewayHeaderConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleActionSetResponse) []ApplicationGatewayHeaderConfigurationResponse {
		return v.RequestHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationResponseArrayOutput)
}

// Response Header Actions in the Action Set
func (o ApplicationGatewayRewriteRuleActionSetResponseOutput) ResponseHeaderConfigurations() ApplicationGatewayHeaderConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleActionSetResponse) []ApplicationGatewayHeaderConfigurationResponse {
		return v.ResponseHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationResponseArrayOutput)
}

type ApplicationGatewayRewriteRuleActionSetResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleActionSetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRewriteRuleActionSetResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleActionSetResponsePtrOutput) ToApplicationGatewayRewriteRuleActionSetResponsePtrOutput() ApplicationGatewayRewriteRuleActionSetResponsePtrOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetResponsePtrOutput) ToApplicationGatewayRewriteRuleActionSetResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetResponsePtrOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetResponsePtrOutput) Elem() ApplicationGatewayRewriteRuleActionSetResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleActionSetResponse) ApplicationGatewayRewriteRuleActionSetResponse {
		return *v
	}).(ApplicationGatewayRewriteRuleActionSetResponseOutput)
}

// Request Header Actions in the Action Set
func (o ApplicationGatewayRewriteRuleActionSetResponsePtrOutput) RequestHeaderConfigurations() ApplicationGatewayHeaderConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleActionSetResponse) []ApplicationGatewayHeaderConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.RequestHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationResponseArrayOutput)
}

// Response Header Actions in the Action Set
func (o ApplicationGatewayRewriteRuleActionSetResponsePtrOutput) ResponseHeaderConfigurations() ApplicationGatewayHeaderConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleActionSetResponse) []ApplicationGatewayHeaderConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.ResponseHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationResponseArrayOutput)
}

// Rewrite rule of an application gateway.
type ApplicationGatewayRewriteRuleResponse struct {
	// Set of actions to be done as part of the rewrite Rule.
	ActionSet *ApplicationGatewayRewriteRuleActionSetResponse `pulumi:"actionSet"`
	// Name of the rewrite rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
}

// ApplicationGatewayRewriteRuleResponseInput is an input type that accepts ApplicationGatewayRewriteRuleResponseArgs and ApplicationGatewayRewriteRuleResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleResponseInput` via:
//
//          ApplicationGatewayRewriteRuleResponseArgs{...}
type ApplicationGatewayRewriteRuleResponseInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleResponseOutput() ApplicationGatewayRewriteRuleResponseOutput
	ToApplicationGatewayRewriteRuleResponseOutputWithContext(context.Context) ApplicationGatewayRewriteRuleResponseOutput
}

// Rewrite rule of an application gateway.
type ApplicationGatewayRewriteRuleResponseArgs struct {
	// Set of actions to be done as part of the rewrite Rule.
	ActionSet ApplicationGatewayRewriteRuleActionSetResponsePtrInput `pulumi:"actionSet"`
	// Name of the rewrite rule that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ApplicationGatewayRewriteRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleResponse)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleResponseArgs) ToApplicationGatewayRewriteRuleResponseOutput() ApplicationGatewayRewriteRuleResponseOutput {
	return i.ToApplicationGatewayRewriteRuleResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleResponseArgs) ToApplicationGatewayRewriteRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleResponseOutput)
}

// ApplicationGatewayRewriteRuleResponseArrayInput is an input type that accepts ApplicationGatewayRewriteRuleResponseArray and ApplicationGatewayRewriteRuleResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleResponseArrayInput` via:
//
//          ApplicationGatewayRewriteRuleResponseArray{ ApplicationGatewayRewriteRuleResponseArgs{...} }
type ApplicationGatewayRewriteRuleResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleResponseArrayOutput() ApplicationGatewayRewriteRuleResponseArrayOutput
	ToApplicationGatewayRewriteRuleResponseArrayOutputWithContext(context.Context) ApplicationGatewayRewriteRuleResponseArrayOutput
}

type ApplicationGatewayRewriteRuleResponseArray []ApplicationGatewayRewriteRuleResponseInput

func (ApplicationGatewayRewriteRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleResponse)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleResponseArray) ToApplicationGatewayRewriteRuleResponseArrayOutput() ApplicationGatewayRewriteRuleResponseArrayOutput {
	return i.ToApplicationGatewayRewriteRuleResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleResponseArray) ToApplicationGatewayRewriteRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleResponseArrayOutput)
}

// Rewrite rule of an application gateway.
type ApplicationGatewayRewriteRuleResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleResponseOutput) ToApplicationGatewayRewriteRuleResponseOutput() ApplicationGatewayRewriteRuleResponseOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleResponseOutput) ToApplicationGatewayRewriteRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleResponseOutput {
	return o
}

// Set of actions to be done as part of the rewrite Rule.
func (o ApplicationGatewayRewriteRuleResponseOutput) ActionSet() ApplicationGatewayRewriteRuleActionSetResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleResponse) *ApplicationGatewayRewriteRuleActionSetResponse {
		return v.ActionSet
	}).(ApplicationGatewayRewriteRuleActionSetResponsePtrOutput)
}

// Name of the rewrite rule that is unique within an Application Gateway.
func (o ApplicationGatewayRewriteRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayRewriteRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleResponseArrayOutput) ToApplicationGatewayRewriteRuleResponseArrayOutput() ApplicationGatewayRewriteRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleResponseArrayOutput) ToApplicationGatewayRewriteRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRewriteRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRewriteRuleResponse {
		return vs[0].([]ApplicationGatewayRewriteRuleResponse)[vs[1].(int)]
	}).(ApplicationGatewayRewriteRuleResponseOutput)
}

// Rewrite rule set of an application gateway.
type ApplicationGatewayRewriteRuleSet struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the rewrite rule set that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of rewrite rule set of the application gateway.
	Properties *ApplicationGatewayRewriteRuleSetPropertiesFormat `pulumi:"properties"`
}

// ApplicationGatewayRewriteRuleSetInput is an input type that accepts ApplicationGatewayRewriteRuleSetArgs and ApplicationGatewayRewriteRuleSetOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetInput` via:
//
//          ApplicationGatewayRewriteRuleSetArgs{...}
type ApplicationGatewayRewriteRuleSetInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetOutput() ApplicationGatewayRewriteRuleSetOutput
	ToApplicationGatewayRewriteRuleSetOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetOutput
}

// Rewrite rule set of an application gateway.
type ApplicationGatewayRewriteRuleSetArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the rewrite rule set that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of rewrite rule set of the application gateway.
	Properties ApplicationGatewayRewriteRuleSetPropertiesFormatPtrInput `pulumi:"properties"`
}

func (ApplicationGatewayRewriteRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSet)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetArgs) ToApplicationGatewayRewriteRuleSetOutput() ApplicationGatewayRewriteRuleSetOutput {
	return i.ToApplicationGatewayRewriteRuleSetOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetArgs) ToApplicationGatewayRewriteRuleSetOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetOutput)
}

// ApplicationGatewayRewriteRuleSetArrayInput is an input type that accepts ApplicationGatewayRewriteRuleSetArray and ApplicationGatewayRewriteRuleSetArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetArrayInput` via:
//
//          ApplicationGatewayRewriteRuleSetArray{ ApplicationGatewayRewriteRuleSetArgs{...} }
type ApplicationGatewayRewriteRuleSetArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetArrayOutput() ApplicationGatewayRewriteRuleSetArrayOutput
	ToApplicationGatewayRewriteRuleSetArrayOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetArrayOutput
}

type ApplicationGatewayRewriteRuleSetArray []ApplicationGatewayRewriteRuleSetInput

func (ApplicationGatewayRewriteRuleSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleSet)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetArray) ToApplicationGatewayRewriteRuleSetArrayOutput() ApplicationGatewayRewriteRuleSetArrayOutput {
	return i.ToApplicationGatewayRewriteRuleSetArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetArray) ToApplicationGatewayRewriteRuleSetArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetArrayOutput)
}

// Rewrite rule set of an application gateway.
type ApplicationGatewayRewriteRuleSetOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSet)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetOutput) ToApplicationGatewayRewriteRuleSetOutput() ApplicationGatewayRewriteRuleSetOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetOutput) ToApplicationGatewayRewriteRuleSetOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetOutput {
	return o
}

// Resource ID.
func (o ApplicationGatewayRewriteRuleSetOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSet) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the rewrite rule set that is unique within an Application Gateway.
func (o ApplicationGatewayRewriteRuleSetOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSet) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of rewrite rule set of the application gateway.
func (o ApplicationGatewayRewriteRuleSetOutput) Properties() ApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSet) *ApplicationGatewayRewriteRuleSetPropertiesFormat {
		return v.Properties
	}).(ApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput)
}

type ApplicationGatewayRewriteRuleSetArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleSet)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetArrayOutput) ToApplicationGatewayRewriteRuleSetArrayOutput() ApplicationGatewayRewriteRuleSetArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetArrayOutput) ToApplicationGatewayRewriteRuleSetArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRewriteRuleSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRewriteRuleSet {
		return vs[0].([]ApplicationGatewayRewriteRuleSet)[vs[1].(int)]
	}).(ApplicationGatewayRewriteRuleSetOutput)
}

// Properties of rewrite rule set of the application gateway.
type ApplicationGatewayRewriteRuleSetPropertiesFormat struct {
	// Rewrite rules in the rewrite rule set.
	RewriteRules []ApplicationGatewayRewriteRule `pulumi:"rewriteRules"`
}

// ApplicationGatewayRewriteRuleSetPropertiesFormatInput is an input type that accepts ApplicationGatewayRewriteRuleSetPropertiesFormatArgs and ApplicationGatewayRewriteRuleSetPropertiesFormatOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetPropertiesFormatInput` via:
//
//          ApplicationGatewayRewriteRuleSetPropertiesFormatArgs{...}
type ApplicationGatewayRewriteRuleSetPropertiesFormatInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetPropertiesFormatOutput() ApplicationGatewayRewriteRuleSetPropertiesFormatOutput
	ToApplicationGatewayRewriteRuleSetPropertiesFormatOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetPropertiesFormatOutput
}

// Properties of rewrite rule set of the application gateway.
type ApplicationGatewayRewriteRuleSetPropertiesFormatArgs struct {
	// Rewrite rules in the rewrite rule set.
	RewriteRules ApplicationGatewayRewriteRuleArrayInput `pulumi:"rewriteRules"`
}

func (ApplicationGatewayRewriteRuleSetPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSetPropertiesFormat)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetPropertiesFormatArgs) ToApplicationGatewayRewriteRuleSetPropertiesFormatOutput() ApplicationGatewayRewriteRuleSetPropertiesFormatOutput {
	return i.ToApplicationGatewayRewriteRuleSetPropertiesFormatOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetPropertiesFormatArgs) ToApplicationGatewayRewriteRuleSetPropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetPropertiesFormatOutput)
}

func (i ApplicationGatewayRewriteRuleSetPropertiesFormatArgs) ToApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput() ApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput {
	return i.ToApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetPropertiesFormatArgs) ToApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetPropertiesFormatOutput).ToApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutputWithContext(ctx)
}

// ApplicationGatewayRewriteRuleSetPropertiesFormatPtrInput is an input type that accepts ApplicationGatewayRewriteRuleSetPropertiesFormatArgs, ApplicationGatewayRewriteRuleSetPropertiesFormatPtr and ApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetPropertiesFormatPtrInput` via:
//
//          ApplicationGatewayRewriteRuleSetPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayRewriteRuleSetPropertiesFormatPtrInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput() ApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput
	ToApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput
}

type applicationGatewayRewriteRuleSetPropertiesFormatPtrType ApplicationGatewayRewriteRuleSetPropertiesFormatArgs

func ApplicationGatewayRewriteRuleSetPropertiesFormatPtr(v *ApplicationGatewayRewriteRuleSetPropertiesFormatArgs) ApplicationGatewayRewriteRuleSetPropertiesFormatPtrInput {
	return (*applicationGatewayRewriteRuleSetPropertiesFormatPtrType)(v)
}

func (*applicationGatewayRewriteRuleSetPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRewriteRuleSetPropertiesFormat)(nil)).Elem()
}

func (i *applicationGatewayRewriteRuleSetPropertiesFormatPtrType) ToApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput() ApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput {
	return i.ToApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayRewriteRuleSetPropertiesFormatPtrType) ToApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput)
}

// Properties of rewrite rule set of the application gateway.
type ApplicationGatewayRewriteRuleSetPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSetPropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetPropertiesFormatOutput) ToApplicationGatewayRewriteRuleSetPropertiesFormatOutput() ApplicationGatewayRewriteRuleSetPropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetPropertiesFormatOutput) ToApplicationGatewayRewriteRuleSetPropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetPropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetPropertiesFormatOutput) ToApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput() ApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput {
	return o.ToApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayRewriteRuleSetPropertiesFormatOutput) ToApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetPropertiesFormat) *ApplicationGatewayRewriteRuleSetPropertiesFormat {
		return &v
	}).(ApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput)
}

// Rewrite rules in the rewrite rule set.
func (o ApplicationGatewayRewriteRuleSetPropertiesFormatOutput) RewriteRules() ApplicationGatewayRewriteRuleArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetPropertiesFormat) []ApplicationGatewayRewriteRule {
		return v.RewriteRules
	}).(ApplicationGatewayRewriteRuleArrayOutput)
}

type ApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRewriteRuleSetPropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput) ToApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput() ApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput) ToApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput) Elem() ApplicationGatewayRewriteRuleSetPropertiesFormatOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleSetPropertiesFormat) ApplicationGatewayRewriteRuleSetPropertiesFormat {
		return *v
	}).(ApplicationGatewayRewriteRuleSetPropertiesFormatOutput)
}

// Rewrite rules in the rewrite rule set.
func (o ApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput) RewriteRules() ApplicationGatewayRewriteRuleArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleSetPropertiesFormat) []ApplicationGatewayRewriteRule {
		if v == nil {
			return nil
		}
		return v.RewriteRules
	}).(ApplicationGatewayRewriteRuleArrayOutput)
}

// Properties of rewrite rule set of the application gateway.
type ApplicationGatewayRewriteRuleSetPropertiesFormatResponse struct {
	// Provisioning state of the rewrite rule set resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// Rewrite rules in the rewrite rule set.
	RewriteRules []ApplicationGatewayRewriteRuleResponse `pulumi:"rewriteRules"`
}

// ApplicationGatewayRewriteRuleSetPropertiesFormatResponseInput is an input type that accepts ApplicationGatewayRewriteRuleSetPropertiesFormatResponseArgs and ApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetPropertiesFormatResponseInput` via:
//
//          ApplicationGatewayRewriteRuleSetPropertiesFormatResponseArgs{...}
type ApplicationGatewayRewriteRuleSetPropertiesFormatResponseInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput() ApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput
	ToApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput
}

// Properties of rewrite rule set of the application gateway.
type ApplicationGatewayRewriteRuleSetPropertiesFormatResponseArgs struct {
	// Provisioning state of the rewrite rule set resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Rewrite rules in the rewrite rule set.
	RewriteRules ApplicationGatewayRewriteRuleResponseArrayInput `pulumi:"rewriteRules"`
}

func (ApplicationGatewayRewriteRuleSetPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSetPropertiesFormatResponse)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetPropertiesFormatResponseArgs) ToApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput() ApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput {
	return i.ToApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetPropertiesFormatResponseArgs) ToApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput)
}

func (i ApplicationGatewayRewriteRuleSetPropertiesFormatResponseArgs) ToApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput() ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetPropertiesFormatResponseArgs) ToApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput).ToApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrInput is an input type that accepts ApplicationGatewayRewriteRuleSetPropertiesFormatResponseArgs, ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtr and ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrInput` via:
//
//          ApplicationGatewayRewriteRuleSetPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput() ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput
	ToApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput
}

type applicationGatewayRewriteRuleSetPropertiesFormatResponsePtrType ApplicationGatewayRewriteRuleSetPropertiesFormatResponseArgs

func ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtr(v *ApplicationGatewayRewriteRuleSetPropertiesFormatResponseArgs) ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrInput {
	return (*applicationGatewayRewriteRuleSetPropertiesFormatResponsePtrType)(v)
}

func (*applicationGatewayRewriteRuleSetPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRewriteRuleSetPropertiesFormatResponse)(nil)).Elem()
}

func (i *applicationGatewayRewriteRuleSetPropertiesFormatResponsePtrType) ToApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput() ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayRewriteRuleSetPropertiesFormatResponsePtrType) ToApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput)
}

// Properties of rewrite rule set of the application gateway.
type ApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSetPropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput) ToApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput() ApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput) ToApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput) ToApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput() ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput {
	return o.ToApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput) ToApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetPropertiesFormatResponse) *ApplicationGatewayRewriteRuleSetPropertiesFormatResponse {
		return &v
	}).(ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput)
}

// Provisioning state of the rewrite rule set resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Rewrite rules in the rewrite rule set.
func (o ApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput) RewriteRules() ApplicationGatewayRewriteRuleResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetPropertiesFormatResponse) []ApplicationGatewayRewriteRuleResponse {
		return v.RewriteRules
	}).(ApplicationGatewayRewriteRuleResponseArrayOutput)
}

type ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRewriteRuleSetPropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput) ToApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput() ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput) ToApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput) Elem() ApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleSetPropertiesFormatResponse) ApplicationGatewayRewriteRuleSetPropertiesFormatResponse {
		return *v
	}).(ApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput)
}

// Provisioning state of the rewrite rule set resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleSetPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Rewrite rules in the rewrite rule set.
func (o ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput) RewriteRules() ApplicationGatewayRewriteRuleResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleSetPropertiesFormatResponse) []ApplicationGatewayRewriteRuleResponse {
		if v == nil {
			return nil
		}
		return v.RewriteRules
	}).(ApplicationGatewayRewriteRuleResponseArrayOutput)
}

// Rewrite rule set of an application gateway.
type ApplicationGatewayRewriteRuleSetResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the rewrite rule set that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of rewrite rule set of the application gateway.
	Properties *ApplicationGatewayRewriteRuleSetPropertiesFormatResponse `pulumi:"properties"`
}

// ApplicationGatewayRewriteRuleSetResponseInput is an input type that accepts ApplicationGatewayRewriteRuleSetResponseArgs and ApplicationGatewayRewriteRuleSetResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetResponseInput` via:
//
//          ApplicationGatewayRewriteRuleSetResponseArgs{...}
type ApplicationGatewayRewriteRuleSetResponseInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetResponseOutput() ApplicationGatewayRewriteRuleSetResponseOutput
	ToApplicationGatewayRewriteRuleSetResponseOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetResponseOutput
}

// Rewrite rule set of an application gateway.
type ApplicationGatewayRewriteRuleSetResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the rewrite rule set that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of rewrite rule set of the application gateway.
	Properties ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (ApplicationGatewayRewriteRuleSetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSetResponse)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetResponseArgs) ToApplicationGatewayRewriteRuleSetResponseOutput() ApplicationGatewayRewriteRuleSetResponseOutput {
	return i.ToApplicationGatewayRewriteRuleSetResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetResponseArgs) ToApplicationGatewayRewriteRuleSetResponseOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetResponseOutput)
}

// ApplicationGatewayRewriteRuleSetResponseArrayInput is an input type that accepts ApplicationGatewayRewriteRuleSetResponseArray and ApplicationGatewayRewriteRuleSetResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetResponseArrayInput` via:
//
//          ApplicationGatewayRewriteRuleSetResponseArray{ ApplicationGatewayRewriteRuleSetResponseArgs{...} }
type ApplicationGatewayRewriteRuleSetResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetResponseArrayOutput() ApplicationGatewayRewriteRuleSetResponseArrayOutput
	ToApplicationGatewayRewriteRuleSetResponseArrayOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetResponseArrayOutput
}

type ApplicationGatewayRewriteRuleSetResponseArray []ApplicationGatewayRewriteRuleSetResponseInput

func (ApplicationGatewayRewriteRuleSetResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleSetResponse)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetResponseArray) ToApplicationGatewayRewriteRuleSetResponseArrayOutput() ApplicationGatewayRewriteRuleSetResponseArrayOutput {
	return i.ToApplicationGatewayRewriteRuleSetResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetResponseArray) ToApplicationGatewayRewriteRuleSetResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetResponseArrayOutput)
}

// Rewrite rule set of an application gateway.
type ApplicationGatewayRewriteRuleSetResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSetResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetResponseOutput) ToApplicationGatewayRewriteRuleSetResponseOutput() ApplicationGatewayRewriteRuleSetResponseOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetResponseOutput) ToApplicationGatewayRewriteRuleSetResponseOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayRewriteRuleSetResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayRewriteRuleSetResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the rewrite rule set that is unique within an Application Gateway.
func (o ApplicationGatewayRewriteRuleSetResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of rewrite rule set of the application gateway.
func (o ApplicationGatewayRewriteRuleSetResponseOutput) Properties() ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetResponse) *ApplicationGatewayRewriteRuleSetPropertiesFormatResponse {
		return v.Properties
	}).(ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput)
}

type ApplicationGatewayRewriteRuleSetResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleSetResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetResponseArrayOutput) ToApplicationGatewayRewriteRuleSetResponseArrayOutput() ApplicationGatewayRewriteRuleSetResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetResponseArrayOutput) ToApplicationGatewayRewriteRuleSetResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRewriteRuleSetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRewriteRuleSetResponse {
		return vs[0].([]ApplicationGatewayRewriteRuleSetResponse)[vs[1].(int)]
	}).(ApplicationGatewayRewriteRuleSetResponseOutput)
}

// SKU of an application gateway
type ApplicationGatewaySku struct {
	// Capacity (instance count) of an application gateway.
	Capacity *int `pulumi:"capacity"`
	// Name of an application gateway SKU.
	Name *string `pulumi:"name"`
	// Tier of an application gateway.
	Tier *string `pulumi:"tier"`
}

// ApplicationGatewaySkuInput is an input type that accepts ApplicationGatewaySkuArgs and ApplicationGatewaySkuOutput values.
// You can construct a concrete instance of `ApplicationGatewaySkuInput` via:
//
//          ApplicationGatewaySkuArgs{...}
type ApplicationGatewaySkuInput interface {
	pulumi.Input

	ToApplicationGatewaySkuOutput() ApplicationGatewaySkuOutput
	ToApplicationGatewaySkuOutputWithContext(context.Context) ApplicationGatewaySkuOutput
}

// SKU of an application gateway
type ApplicationGatewaySkuArgs struct {
	// Capacity (instance count) of an application gateway.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Name of an application gateway SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of an application gateway.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ApplicationGatewaySkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySku)(nil)).Elem()
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuOutput() ApplicationGatewaySkuOutput {
	return i.ToApplicationGatewaySkuOutputWithContext(context.Background())
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuOutputWithContext(ctx context.Context) ApplicationGatewaySkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuOutput)
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return i.ToApplicationGatewaySkuPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuOutput).ToApplicationGatewaySkuPtrOutputWithContext(ctx)
}

// ApplicationGatewaySkuPtrInput is an input type that accepts ApplicationGatewaySkuArgs, ApplicationGatewaySkuPtr and ApplicationGatewaySkuPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewaySkuPtrInput` via:
//
//          ApplicationGatewaySkuArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewaySkuPtrInput interface {
	pulumi.Input

	ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput
	ToApplicationGatewaySkuPtrOutputWithContext(context.Context) ApplicationGatewaySkuPtrOutput
}

type applicationGatewaySkuPtrType ApplicationGatewaySkuArgs

func ApplicationGatewaySkuPtr(v *ApplicationGatewaySkuArgs) ApplicationGatewaySkuPtrInput {
	return (*applicationGatewaySkuPtrType)(v)
}

func (*applicationGatewaySkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySku)(nil)).Elem()
}

func (i *applicationGatewaySkuPtrType) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return i.ToApplicationGatewaySkuPtrOutputWithContext(context.Background())
}

func (i *applicationGatewaySkuPtrType) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuPtrOutput)
}

// SKU of an application gateway
type ApplicationGatewaySkuOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySku)(nil)).Elem()
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuOutput() ApplicationGatewaySkuOutput {
	return o
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuOutputWithContext(ctx context.Context) ApplicationGatewaySkuOutput {
	return o
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return o.ToApplicationGatewaySkuPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySku) *ApplicationGatewaySku {
		return &v
	}).(ApplicationGatewaySkuPtrOutput)
}

// Capacity (instance count) of an application gateway.
func (o ApplicationGatewaySkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Name of an application gateway SKU.
func (o ApplicationGatewaySkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of an application gateway.
func (o ApplicationGatewaySkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySkuPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySku)(nil)).Elem()
}

func (o ApplicationGatewaySkuPtrOutput) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return o
}

func (o ApplicationGatewaySkuPtrOutput) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return o
}

func (o ApplicationGatewaySkuPtrOutput) Elem() ApplicationGatewaySkuOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) ApplicationGatewaySku { return *v }).(ApplicationGatewaySkuOutput)
}

// Capacity (instance count) of an application gateway.
func (o ApplicationGatewaySkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Name of an application gateway SKU.
func (o ApplicationGatewaySkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of an application gateway.
func (o ApplicationGatewaySkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SKU of an application gateway
type ApplicationGatewaySkuResponse struct {
	// Capacity (instance count) of an application gateway.
	Capacity *int `pulumi:"capacity"`
	// Name of an application gateway SKU.
	Name *string `pulumi:"name"`
	// Tier of an application gateway.
	Tier *string `pulumi:"tier"`
}

// ApplicationGatewaySkuResponseInput is an input type that accepts ApplicationGatewaySkuResponseArgs and ApplicationGatewaySkuResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewaySkuResponseInput` via:
//
//          ApplicationGatewaySkuResponseArgs{...}
type ApplicationGatewaySkuResponseInput interface {
	pulumi.Input

	ToApplicationGatewaySkuResponseOutput() ApplicationGatewaySkuResponseOutput
	ToApplicationGatewaySkuResponseOutputWithContext(context.Context) ApplicationGatewaySkuResponseOutput
}

// SKU of an application gateway
type ApplicationGatewaySkuResponseArgs struct {
	// Capacity (instance count) of an application gateway.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Name of an application gateway SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of an application gateway.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ApplicationGatewaySkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySkuResponse)(nil)).Elem()
}

func (i ApplicationGatewaySkuResponseArgs) ToApplicationGatewaySkuResponseOutput() ApplicationGatewaySkuResponseOutput {
	return i.ToApplicationGatewaySkuResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewaySkuResponseArgs) ToApplicationGatewaySkuResponseOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuResponseOutput)
}

func (i ApplicationGatewaySkuResponseArgs) ToApplicationGatewaySkuResponsePtrOutput() ApplicationGatewaySkuResponsePtrOutput {
	return i.ToApplicationGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewaySkuResponseArgs) ToApplicationGatewaySkuResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuResponseOutput).ToApplicationGatewaySkuResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewaySkuResponsePtrInput is an input type that accepts ApplicationGatewaySkuResponseArgs, ApplicationGatewaySkuResponsePtr and ApplicationGatewaySkuResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewaySkuResponsePtrInput` via:
//
//          ApplicationGatewaySkuResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewaySkuResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewaySkuResponsePtrOutput() ApplicationGatewaySkuResponsePtrOutput
	ToApplicationGatewaySkuResponsePtrOutputWithContext(context.Context) ApplicationGatewaySkuResponsePtrOutput
}

type applicationGatewaySkuResponsePtrType ApplicationGatewaySkuResponseArgs

func ApplicationGatewaySkuResponsePtr(v *ApplicationGatewaySkuResponseArgs) ApplicationGatewaySkuResponsePtrInput {
	return (*applicationGatewaySkuResponsePtrType)(v)
}

func (*applicationGatewaySkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySkuResponse)(nil)).Elem()
}

func (i *applicationGatewaySkuResponsePtrType) ToApplicationGatewaySkuResponsePtrOutput() ApplicationGatewaySkuResponsePtrOutput {
	return i.ToApplicationGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewaySkuResponsePtrType) ToApplicationGatewaySkuResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuResponsePtrOutput)
}

// SKU of an application gateway
type ApplicationGatewaySkuResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySkuResponse)(nil)).Elem()
}

func (o ApplicationGatewaySkuResponseOutput) ToApplicationGatewaySkuResponseOutput() ApplicationGatewaySkuResponseOutput {
	return o
}

func (o ApplicationGatewaySkuResponseOutput) ToApplicationGatewaySkuResponseOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponseOutput {
	return o
}

func (o ApplicationGatewaySkuResponseOutput) ToApplicationGatewaySkuResponsePtrOutput() ApplicationGatewaySkuResponsePtrOutput {
	return o.ToApplicationGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewaySkuResponseOutput) ToApplicationGatewaySkuResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySkuResponse) *ApplicationGatewaySkuResponse {
		return &v
	}).(ApplicationGatewaySkuResponsePtrOutput)
}

// Capacity (instance count) of an application gateway.
func (o ApplicationGatewaySkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Name of an application gateway SKU.
func (o ApplicationGatewaySkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of an application gateway.
func (o ApplicationGatewaySkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySkuResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySkuResponse)(nil)).Elem()
}

func (o ApplicationGatewaySkuResponsePtrOutput) ToApplicationGatewaySkuResponsePtrOutput() ApplicationGatewaySkuResponsePtrOutput {
	return o
}

func (o ApplicationGatewaySkuResponsePtrOutput) ToApplicationGatewaySkuResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponsePtrOutput {
	return o
}

func (o ApplicationGatewaySkuResponsePtrOutput) Elem() ApplicationGatewaySkuResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewaySkuResponse) ApplicationGatewaySkuResponse { return *v }).(ApplicationGatewaySkuResponseOutput)
}

// Capacity (instance count) of an application gateway.
func (o ApplicationGatewaySkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Name of an application gateway SKU.
func (o ApplicationGatewaySkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of an application gateway.
func (o ApplicationGatewaySkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificate struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the SSL certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of SSL certificates of an application gateway.
	Properties *ApplicationGatewaySslCertificatePropertiesFormat `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewaySslCertificateInput is an input type that accepts ApplicationGatewaySslCertificateArgs and ApplicationGatewaySslCertificateOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificateInput` via:
//
//          ApplicationGatewaySslCertificateArgs{...}
type ApplicationGatewaySslCertificateInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificateOutput() ApplicationGatewaySslCertificateOutput
	ToApplicationGatewaySslCertificateOutputWithContext(context.Context) ApplicationGatewaySslCertificateOutput
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the SSL certificate that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of SSL certificates of an application gateway.
	Properties ApplicationGatewaySslCertificatePropertiesFormatPtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewaySslCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificateArgs) ToApplicationGatewaySslCertificateOutput() ApplicationGatewaySslCertificateOutput {
	return i.ToApplicationGatewaySslCertificateOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificateArgs) ToApplicationGatewaySslCertificateOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificateOutput)
}

// ApplicationGatewaySslCertificateArrayInput is an input type that accepts ApplicationGatewaySslCertificateArray and ApplicationGatewaySslCertificateArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificateArrayInput` via:
//
//          ApplicationGatewaySslCertificateArray{ ApplicationGatewaySslCertificateArgs{...} }
type ApplicationGatewaySslCertificateArrayInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificateArrayOutput() ApplicationGatewaySslCertificateArrayOutput
	ToApplicationGatewaySslCertificateArrayOutputWithContext(context.Context) ApplicationGatewaySslCertificateArrayOutput
}

type ApplicationGatewaySslCertificateArray []ApplicationGatewaySslCertificateInput

func (ApplicationGatewaySslCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificateArray) ToApplicationGatewaySslCertificateArrayOutput() ApplicationGatewaySslCertificateArrayOutput {
	return i.ToApplicationGatewaySslCertificateArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificateArray) ToApplicationGatewaySslCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificateArrayOutput)
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateOutput) ToApplicationGatewaySslCertificateOutput() ApplicationGatewaySslCertificateOutput {
	return o
}

func (o ApplicationGatewaySslCertificateOutput) ToApplicationGatewaySslCertificateOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewaySslCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewaySslCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the SSL certificate that is unique within an Application Gateway.
func (o ApplicationGatewaySslCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of SSL certificates of an application gateway.
func (o ApplicationGatewaySslCertificateOutput) Properties() ApplicationGatewaySslCertificatePropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *ApplicationGatewaySslCertificatePropertiesFormat {
		return v.Properties
	}).(ApplicationGatewaySslCertificatePropertiesFormatPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewaySslCertificateOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslCertificateArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateArrayOutput) ToApplicationGatewaySslCertificateArrayOutput() ApplicationGatewaySslCertificateArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateArrayOutput) ToApplicationGatewaySslCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateArrayOutput) Index(i pulumi.IntInput) ApplicationGatewaySslCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewaySslCertificate {
		return vs[0].([]ApplicationGatewaySslCertificate)[vs[1].(int)]
	}).(ApplicationGatewaySslCertificateOutput)
}

// Properties of SSL certificates of an application gateway.
type ApplicationGatewaySslCertificatePropertiesFormat struct {
	// Base-64 encoded pfx certificate. Only applicable in PUT Request.
	Data *string `pulumi:"data"`
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId *string `pulumi:"keyVaultSecretId"`
	// Password for the pfx file specified in data. Only applicable in PUT request.
	Password *string `pulumi:"password"`
	// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
	PublicCertData *string `pulumi:"publicCertData"`
}

// ApplicationGatewaySslCertificatePropertiesFormatInput is an input type that accepts ApplicationGatewaySslCertificatePropertiesFormatArgs and ApplicationGatewaySslCertificatePropertiesFormatOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificatePropertiesFormatInput` via:
//
//          ApplicationGatewaySslCertificatePropertiesFormatArgs{...}
type ApplicationGatewaySslCertificatePropertiesFormatInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificatePropertiesFormatOutput() ApplicationGatewaySslCertificatePropertiesFormatOutput
	ToApplicationGatewaySslCertificatePropertiesFormatOutputWithContext(context.Context) ApplicationGatewaySslCertificatePropertiesFormatOutput
}

// Properties of SSL certificates of an application gateway.
type ApplicationGatewaySslCertificatePropertiesFormatArgs struct {
	// Base-64 encoded pfx certificate. Only applicable in PUT Request.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId pulumi.StringPtrInput `pulumi:"keyVaultSecretId"`
	// Password for the pfx file specified in data. Only applicable in PUT request.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
	PublicCertData pulumi.StringPtrInput `pulumi:"publicCertData"`
}

func (ApplicationGatewaySslCertificatePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificatePropertiesFormat)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificatePropertiesFormatArgs) ToApplicationGatewaySslCertificatePropertiesFormatOutput() ApplicationGatewaySslCertificatePropertiesFormatOutput {
	return i.ToApplicationGatewaySslCertificatePropertiesFormatOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificatePropertiesFormatArgs) ToApplicationGatewaySslCertificatePropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificatePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificatePropertiesFormatOutput)
}

func (i ApplicationGatewaySslCertificatePropertiesFormatArgs) ToApplicationGatewaySslCertificatePropertiesFormatPtrOutput() ApplicationGatewaySslCertificatePropertiesFormatPtrOutput {
	return i.ToApplicationGatewaySslCertificatePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificatePropertiesFormatArgs) ToApplicationGatewaySslCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificatePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificatePropertiesFormatOutput).ToApplicationGatewaySslCertificatePropertiesFormatPtrOutputWithContext(ctx)
}

// ApplicationGatewaySslCertificatePropertiesFormatPtrInput is an input type that accepts ApplicationGatewaySslCertificatePropertiesFormatArgs, ApplicationGatewaySslCertificatePropertiesFormatPtr and ApplicationGatewaySslCertificatePropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificatePropertiesFormatPtrInput` via:
//
//          ApplicationGatewaySslCertificatePropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewaySslCertificatePropertiesFormatPtrInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificatePropertiesFormatPtrOutput() ApplicationGatewaySslCertificatePropertiesFormatPtrOutput
	ToApplicationGatewaySslCertificatePropertiesFormatPtrOutputWithContext(context.Context) ApplicationGatewaySslCertificatePropertiesFormatPtrOutput
}

type applicationGatewaySslCertificatePropertiesFormatPtrType ApplicationGatewaySslCertificatePropertiesFormatArgs

func ApplicationGatewaySslCertificatePropertiesFormatPtr(v *ApplicationGatewaySslCertificatePropertiesFormatArgs) ApplicationGatewaySslCertificatePropertiesFormatPtrInput {
	return (*applicationGatewaySslCertificatePropertiesFormatPtrType)(v)
}

func (*applicationGatewaySslCertificatePropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslCertificatePropertiesFormat)(nil)).Elem()
}

func (i *applicationGatewaySslCertificatePropertiesFormatPtrType) ToApplicationGatewaySslCertificatePropertiesFormatPtrOutput() ApplicationGatewaySslCertificatePropertiesFormatPtrOutput {
	return i.ToApplicationGatewaySslCertificatePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *applicationGatewaySslCertificatePropertiesFormatPtrType) ToApplicationGatewaySslCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificatePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificatePropertiesFormatPtrOutput)
}

// Properties of SSL certificates of an application gateway.
type ApplicationGatewaySslCertificatePropertiesFormatOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificatePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificatePropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificatePropertiesFormatOutput) ToApplicationGatewaySslCertificatePropertiesFormatOutput() ApplicationGatewaySslCertificatePropertiesFormatOutput {
	return o
}

func (o ApplicationGatewaySslCertificatePropertiesFormatOutput) ToApplicationGatewaySslCertificatePropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificatePropertiesFormatOutput {
	return o
}

func (o ApplicationGatewaySslCertificatePropertiesFormatOutput) ToApplicationGatewaySslCertificatePropertiesFormatPtrOutput() ApplicationGatewaySslCertificatePropertiesFormatPtrOutput {
	return o.ToApplicationGatewaySslCertificatePropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewaySslCertificatePropertiesFormatOutput) ToApplicationGatewaySslCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificatePropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificatePropertiesFormat) *ApplicationGatewaySslCertificatePropertiesFormat {
		return &v
	}).(ApplicationGatewaySslCertificatePropertiesFormatPtrOutput)
}

// Base-64 encoded pfx certificate. Only applicable in PUT Request.
func (o ApplicationGatewaySslCertificatePropertiesFormatOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificatePropertiesFormat) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o ApplicationGatewaySslCertificatePropertiesFormatOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificatePropertiesFormat) *string { return v.KeyVaultSecretId }).(pulumi.StringPtrOutput)
}

// Password for the pfx file specified in data. Only applicable in PUT request.
func (o ApplicationGatewaySslCertificatePropertiesFormatOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificatePropertiesFormat) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewaySslCertificatePropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificatePropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
func (o ApplicationGatewaySslCertificatePropertiesFormatOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificatePropertiesFormat) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslCertificatePropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificatePropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslCertificatePropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificatePropertiesFormatPtrOutput) ToApplicationGatewaySslCertificatePropertiesFormatPtrOutput() ApplicationGatewaySslCertificatePropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewaySslCertificatePropertiesFormatPtrOutput) ToApplicationGatewaySslCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificatePropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewaySslCertificatePropertiesFormatPtrOutput) Elem() ApplicationGatewaySslCertificatePropertiesFormatOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslCertificatePropertiesFormat) ApplicationGatewaySslCertificatePropertiesFormat {
		return *v
	}).(ApplicationGatewaySslCertificatePropertiesFormatOutput)
}

// Base-64 encoded pfx certificate. Only applicable in PUT Request.
func (o ApplicationGatewaySslCertificatePropertiesFormatPtrOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslCertificatePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.Data
	}).(pulumi.StringPtrOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o ApplicationGatewaySslCertificatePropertiesFormatPtrOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslCertificatePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultSecretId
	}).(pulumi.StringPtrOutput)
}

// Password for the pfx file specified in data. Only applicable in PUT request.
func (o ApplicationGatewaySslCertificatePropertiesFormatPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslCertificatePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewaySslCertificatePropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslCertificatePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
func (o ApplicationGatewaySslCertificatePropertiesFormatPtrOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslCertificatePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.PublicCertData
	}).(pulumi.StringPtrOutput)
}

// Properties of SSL certificates of an application gateway.
type ApplicationGatewaySslCertificatePropertiesFormatResponse struct {
	// Base-64 encoded pfx certificate. Only applicable in PUT Request.
	Data *string `pulumi:"data"`
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId *string `pulumi:"keyVaultSecretId"`
	// Password for the pfx file specified in data. Only applicable in PUT request.
	Password *string `pulumi:"password"`
	// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
	PublicCertData *string `pulumi:"publicCertData"`
}

// ApplicationGatewaySslCertificatePropertiesFormatResponseInput is an input type that accepts ApplicationGatewaySslCertificatePropertiesFormatResponseArgs and ApplicationGatewaySslCertificatePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificatePropertiesFormatResponseInput` via:
//
//          ApplicationGatewaySslCertificatePropertiesFormatResponseArgs{...}
type ApplicationGatewaySslCertificatePropertiesFormatResponseInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificatePropertiesFormatResponseOutput() ApplicationGatewaySslCertificatePropertiesFormatResponseOutput
	ToApplicationGatewaySslCertificatePropertiesFormatResponseOutputWithContext(context.Context) ApplicationGatewaySslCertificatePropertiesFormatResponseOutput
}

// Properties of SSL certificates of an application gateway.
type ApplicationGatewaySslCertificatePropertiesFormatResponseArgs struct {
	// Base-64 encoded pfx certificate. Only applicable in PUT Request.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId pulumi.StringPtrInput `pulumi:"keyVaultSecretId"`
	// Password for the pfx file specified in data. Only applicable in PUT request.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
	PublicCertData pulumi.StringPtrInput `pulumi:"publicCertData"`
}

func (ApplicationGatewaySslCertificatePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificatePropertiesFormatResponseArgs) ToApplicationGatewaySslCertificatePropertiesFormatResponseOutput() ApplicationGatewaySslCertificatePropertiesFormatResponseOutput {
	return i.ToApplicationGatewaySslCertificatePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificatePropertiesFormatResponseArgs) ToApplicationGatewaySslCertificatePropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificatePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificatePropertiesFormatResponseOutput)
}

func (i ApplicationGatewaySslCertificatePropertiesFormatResponseArgs) ToApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput() ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificatePropertiesFormatResponseArgs) ToApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificatePropertiesFormatResponseOutput).ToApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewaySslCertificatePropertiesFormatResponsePtrInput is an input type that accepts ApplicationGatewaySslCertificatePropertiesFormatResponseArgs, ApplicationGatewaySslCertificatePropertiesFormatResponsePtr and ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificatePropertiesFormatResponsePtrInput` via:
//
//          ApplicationGatewaySslCertificatePropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewaySslCertificatePropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput() ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput
	ToApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutputWithContext(context.Context) ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput
}

type applicationGatewaySslCertificatePropertiesFormatResponsePtrType ApplicationGatewaySslCertificatePropertiesFormatResponseArgs

func ApplicationGatewaySslCertificatePropertiesFormatResponsePtr(v *ApplicationGatewaySslCertificatePropertiesFormatResponseArgs) ApplicationGatewaySslCertificatePropertiesFormatResponsePtrInput {
	return (*applicationGatewaySslCertificatePropertiesFormatResponsePtrType)(v)
}

func (*applicationGatewaySslCertificatePropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (i *applicationGatewaySslCertificatePropertiesFormatResponsePtrType) ToApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput() ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewaySslCertificatePropertiesFormatResponsePtrType) ToApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput)
}

// Properties of SSL certificates of an application gateway.
type ApplicationGatewaySslCertificatePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificatePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificatePropertiesFormatResponseOutput) ToApplicationGatewaySslCertificatePropertiesFormatResponseOutput() ApplicationGatewaySslCertificatePropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewaySslCertificatePropertiesFormatResponseOutput) ToApplicationGatewaySslCertificatePropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificatePropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewaySslCertificatePropertiesFormatResponseOutput) ToApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput() ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput {
	return o.ToApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewaySslCertificatePropertiesFormatResponseOutput) ToApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificatePropertiesFormatResponse) *ApplicationGatewaySslCertificatePropertiesFormatResponse {
		return &v
	}).(ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput)
}

// Base-64 encoded pfx certificate. Only applicable in PUT Request.
func (o ApplicationGatewaySslCertificatePropertiesFormatResponseOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificatePropertiesFormatResponse) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o ApplicationGatewaySslCertificatePropertiesFormatResponseOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificatePropertiesFormatResponse) *string { return v.KeyVaultSecretId }).(pulumi.StringPtrOutput)
}

// Password for the pfx file specified in data. Only applicable in PUT request.
func (o ApplicationGatewaySslCertificatePropertiesFormatResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificatePropertiesFormatResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewaySslCertificatePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificatePropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
func (o ApplicationGatewaySslCertificatePropertiesFormatResponseOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificatePropertiesFormatResponse) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput) ToApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput() ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput) ToApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput) Elem() ApplicationGatewaySslCertificatePropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslCertificatePropertiesFormatResponse) ApplicationGatewaySslCertificatePropertiesFormatResponse {
		return *v
	}).(ApplicationGatewaySslCertificatePropertiesFormatResponseOutput)
}

// Base-64 encoded pfx certificate. Only applicable in PUT Request.
func (o ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslCertificatePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.Data
	}).(pulumi.StringPtrOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslCertificatePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultSecretId
	}).(pulumi.StringPtrOutput)
}

// Password for the pfx file specified in data. Only applicable in PUT request.
func (o ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslCertificatePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslCertificatePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
func (o ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslCertificatePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicCertData
	}).(pulumi.StringPtrOutput)
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the SSL certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of SSL certificates of an application gateway.
	Properties *ApplicationGatewaySslCertificatePropertiesFormatResponse `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewaySslCertificateResponseInput is an input type that accepts ApplicationGatewaySslCertificateResponseArgs and ApplicationGatewaySslCertificateResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificateResponseInput` via:
//
//          ApplicationGatewaySslCertificateResponseArgs{...}
type ApplicationGatewaySslCertificateResponseInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificateResponseOutput() ApplicationGatewaySslCertificateResponseOutput
	ToApplicationGatewaySslCertificateResponseOutputWithContext(context.Context) ApplicationGatewaySslCertificateResponseOutput
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the SSL certificate that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of SSL certificates of an application gateway.
	Properties ApplicationGatewaySslCertificatePropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewaySslCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificateResponse)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificateResponseArgs) ToApplicationGatewaySslCertificateResponseOutput() ApplicationGatewaySslCertificateResponseOutput {
	return i.ToApplicationGatewaySslCertificateResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificateResponseArgs) ToApplicationGatewaySslCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificateResponseOutput)
}

// ApplicationGatewaySslCertificateResponseArrayInput is an input type that accepts ApplicationGatewaySslCertificateResponseArray and ApplicationGatewaySslCertificateResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificateResponseArrayInput` via:
//
//          ApplicationGatewaySslCertificateResponseArray{ ApplicationGatewaySslCertificateResponseArgs{...} }
type ApplicationGatewaySslCertificateResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificateResponseArrayOutput() ApplicationGatewaySslCertificateResponseArrayOutput
	ToApplicationGatewaySslCertificateResponseArrayOutputWithContext(context.Context) ApplicationGatewaySslCertificateResponseArrayOutput
}

type ApplicationGatewaySslCertificateResponseArray []ApplicationGatewaySslCertificateResponseInput

func (ApplicationGatewaySslCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificateResponse)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificateResponseArray) ToApplicationGatewaySslCertificateResponseArrayOutput() ApplicationGatewaySslCertificateResponseArrayOutput {
	return i.ToApplicationGatewaySslCertificateResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificateResponseArray) ToApplicationGatewaySslCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificateResponseArrayOutput)
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateResponseOutput) ToApplicationGatewaySslCertificateResponseOutput() ApplicationGatewaySslCertificateResponseOutput {
	return o
}

func (o ApplicationGatewaySslCertificateResponseOutput) ToApplicationGatewaySslCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewaySslCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewaySslCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the SSL certificate that is unique within an Application Gateway.
func (o ApplicationGatewaySslCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of SSL certificates of an application gateway.
func (o ApplicationGatewaySslCertificateResponseOutput) Properties() ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *ApplicationGatewaySslCertificatePropertiesFormatResponse {
		return v.Properties
	}).(ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewaySslCertificateResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateResponseArrayOutput) ToApplicationGatewaySslCertificateResponseArrayOutput() ApplicationGatewaySslCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateResponseArrayOutput) ToApplicationGatewaySslCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewaySslCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewaySslCertificateResponse {
		return vs[0].([]ApplicationGatewaySslCertificateResponse)[vs[1].(int)]
	}).(ApplicationGatewaySslCertificateResponseOutput)
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicy struct {
	// Ssl cipher suites to be enabled in the specified order to application gateway.
	CipherSuites []string `pulumi:"cipherSuites"`
	// Ssl protocols to be disabled on application gateway.
	DisabledSslProtocols []string `pulumi:"disabledSslProtocols"`
	// Minimum version of Ssl protocol to be supported on application gateway.
	MinProtocolVersion *string `pulumi:"minProtocolVersion"`
	// Name of Ssl predefined policy
	PolicyName *string `pulumi:"policyName"`
	// Type of Ssl Policy
	PolicyType *string `pulumi:"policyType"`
}

// ApplicationGatewaySslPolicyInput is an input type that accepts ApplicationGatewaySslPolicyArgs and ApplicationGatewaySslPolicyOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslPolicyInput` via:
//
//          ApplicationGatewaySslPolicyArgs{...}
type ApplicationGatewaySslPolicyInput interface {
	pulumi.Input

	ToApplicationGatewaySslPolicyOutput() ApplicationGatewaySslPolicyOutput
	ToApplicationGatewaySslPolicyOutputWithContext(context.Context) ApplicationGatewaySslPolicyOutput
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicyArgs struct {
	// Ssl cipher suites to be enabled in the specified order to application gateway.
	CipherSuites pulumi.StringArrayInput `pulumi:"cipherSuites"`
	// Ssl protocols to be disabled on application gateway.
	DisabledSslProtocols pulumi.StringArrayInput `pulumi:"disabledSslProtocols"`
	// Minimum version of Ssl protocol to be supported on application gateway.
	MinProtocolVersion pulumi.StringPtrInput `pulumi:"minProtocolVersion"`
	// Name of Ssl predefined policy
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// Type of Ssl Policy
	PolicyType pulumi.StringPtrInput `pulumi:"policyType"`
}

func (ApplicationGatewaySslPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslPolicy)(nil)).Elem()
}

func (i ApplicationGatewaySslPolicyArgs) ToApplicationGatewaySslPolicyOutput() ApplicationGatewaySslPolicyOutput {
	return i.ToApplicationGatewaySslPolicyOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslPolicyArgs) ToApplicationGatewaySslPolicyOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyOutput)
}

func (i ApplicationGatewaySslPolicyArgs) ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput {
	return i.ToApplicationGatewaySslPolicyPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslPolicyArgs) ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyOutput).ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx)
}

// ApplicationGatewaySslPolicyPtrInput is an input type that accepts ApplicationGatewaySslPolicyArgs, ApplicationGatewaySslPolicyPtr and ApplicationGatewaySslPolicyPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslPolicyPtrInput` via:
//
//          ApplicationGatewaySslPolicyArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewaySslPolicyPtrInput interface {
	pulumi.Input

	ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput
	ToApplicationGatewaySslPolicyPtrOutputWithContext(context.Context) ApplicationGatewaySslPolicyPtrOutput
}

type applicationGatewaySslPolicyPtrType ApplicationGatewaySslPolicyArgs

func ApplicationGatewaySslPolicyPtr(v *ApplicationGatewaySslPolicyArgs) ApplicationGatewaySslPolicyPtrInput {
	return (*applicationGatewaySslPolicyPtrType)(v)
}

func (*applicationGatewaySslPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslPolicy)(nil)).Elem()
}

func (i *applicationGatewaySslPolicyPtrType) ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput {
	return i.ToApplicationGatewaySslPolicyPtrOutputWithContext(context.Background())
}

func (i *applicationGatewaySslPolicyPtrType) ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyPtrOutput)
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicyOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslPolicy)(nil)).Elem()
}

func (o ApplicationGatewaySslPolicyOutput) ToApplicationGatewaySslPolicyOutput() ApplicationGatewaySslPolicyOutput {
	return o
}

func (o ApplicationGatewaySslPolicyOutput) ToApplicationGatewaySslPolicyOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyOutput {
	return o
}

func (o ApplicationGatewaySslPolicyOutput) ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput {
	return o.ToApplicationGatewaySslPolicyPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewaySslPolicyOutput) ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) *ApplicationGatewaySslPolicy {
		return &v
	}).(ApplicationGatewaySslPolicyPtrOutput)
}

// Ssl cipher suites to be enabled in the specified order to application gateway.
func (o ApplicationGatewaySslPolicyOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) []string { return v.CipherSuites }).(pulumi.StringArrayOutput)
}

// Ssl protocols to be disabled on application gateway.
func (o ApplicationGatewaySslPolicyOutput) DisabledSslProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) []string { return v.DisabledSslProtocols }).(pulumi.StringArrayOutput)
}

// Minimum version of Ssl protocol to be supported on application gateway.
func (o ApplicationGatewaySslPolicyOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) *string { return v.MinProtocolVersion }).(pulumi.StringPtrOutput)
}

// Name of Ssl predefined policy
func (o ApplicationGatewaySslPolicyOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Type of Ssl Policy
func (o ApplicationGatewaySslPolicyOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslPolicyPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslPolicy)(nil)).Elem()
}

func (o ApplicationGatewaySslPolicyPtrOutput) ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput {
	return o
}

func (o ApplicationGatewaySslPolicyPtrOutput) ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyPtrOutput {
	return o
}

func (o ApplicationGatewaySslPolicyPtrOutput) Elem() ApplicationGatewaySslPolicyOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) ApplicationGatewaySslPolicy { return *v }).(ApplicationGatewaySslPolicyOutput)
}

// Ssl cipher suites to be enabled in the specified order to application gateway.
func (o ApplicationGatewaySslPolicyPtrOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) []string {
		if v == nil {
			return nil
		}
		return v.CipherSuites
	}).(pulumi.StringArrayOutput)
}

// Ssl protocols to be disabled on application gateway.
func (o ApplicationGatewaySslPolicyPtrOutput) DisabledSslProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) []string {
		if v == nil {
			return nil
		}
		return v.DisabledSslProtocols
	}).(pulumi.StringArrayOutput)
}

// Minimum version of Ssl protocol to be supported on application gateway.
func (o ApplicationGatewaySslPolicyPtrOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) *string {
		if v == nil {
			return nil
		}
		return v.MinProtocolVersion
	}).(pulumi.StringPtrOutput)
}

// Name of Ssl predefined policy
func (o ApplicationGatewaySslPolicyPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Type of Ssl Policy
func (o ApplicationGatewaySslPolicyPtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PolicyType
	}).(pulumi.StringPtrOutput)
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicyResponse struct {
	// Ssl cipher suites to be enabled in the specified order to application gateway.
	CipherSuites []string `pulumi:"cipherSuites"`
	// Ssl protocols to be disabled on application gateway.
	DisabledSslProtocols []string `pulumi:"disabledSslProtocols"`
	// Minimum version of Ssl protocol to be supported on application gateway.
	MinProtocolVersion *string `pulumi:"minProtocolVersion"`
	// Name of Ssl predefined policy
	PolicyName *string `pulumi:"policyName"`
	// Type of Ssl Policy
	PolicyType *string `pulumi:"policyType"`
}

// ApplicationGatewaySslPolicyResponseInput is an input type that accepts ApplicationGatewaySslPolicyResponseArgs and ApplicationGatewaySslPolicyResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslPolicyResponseInput` via:
//
//          ApplicationGatewaySslPolicyResponseArgs{...}
type ApplicationGatewaySslPolicyResponseInput interface {
	pulumi.Input

	ToApplicationGatewaySslPolicyResponseOutput() ApplicationGatewaySslPolicyResponseOutput
	ToApplicationGatewaySslPolicyResponseOutputWithContext(context.Context) ApplicationGatewaySslPolicyResponseOutput
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicyResponseArgs struct {
	// Ssl cipher suites to be enabled in the specified order to application gateway.
	CipherSuites pulumi.StringArrayInput `pulumi:"cipherSuites"`
	// Ssl protocols to be disabled on application gateway.
	DisabledSslProtocols pulumi.StringArrayInput `pulumi:"disabledSslProtocols"`
	// Minimum version of Ssl protocol to be supported on application gateway.
	MinProtocolVersion pulumi.StringPtrInput `pulumi:"minProtocolVersion"`
	// Name of Ssl predefined policy
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// Type of Ssl Policy
	PolicyType pulumi.StringPtrInput `pulumi:"policyType"`
}

func (ApplicationGatewaySslPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslPolicyResponse)(nil)).Elem()
}

func (i ApplicationGatewaySslPolicyResponseArgs) ToApplicationGatewaySslPolicyResponseOutput() ApplicationGatewaySslPolicyResponseOutput {
	return i.ToApplicationGatewaySslPolicyResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslPolicyResponseArgs) ToApplicationGatewaySslPolicyResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyResponseOutput)
}

func (i ApplicationGatewaySslPolicyResponseArgs) ToApplicationGatewaySslPolicyResponsePtrOutput() ApplicationGatewaySslPolicyResponsePtrOutput {
	return i.ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslPolicyResponseArgs) ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyResponseOutput).ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewaySslPolicyResponsePtrInput is an input type that accepts ApplicationGatewaySslPolicyResponseArgs, ApplicationGatewaySslPolicyResponsePtr and ApplicationGatewaySslPolicyResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslPolicyResponsePtrInput` via:
//
//          ApplicationGatewaySslPolicyResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewaySslPolicyResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewaySslPolicyResponsePtrOutput() ApplicationGatewaySslPolicyResponsePtrOutput
	ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(context.Context) ApplicationGatewaySslPolicyResponsePtrOutput
}

type applicationGatewaySslPolicyResponsePtrType ApplicationGatewaySslPolicyResponseArgs

func ApplicationGatewaySslPolicyResponsePtr(v *ApplicationGatewaySslPolicyResponseArgs) ApplicationGatewaySslPolicyResponsePtrInput {
	return (*applicationGatewaySslPolicyResponsePtrType)(v)
}

func (*applicationGatewaySslPolicyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslPolicyResponse)(nil)).Elem()
}

func (i *applicationGatewaySslPolicyResponsePtrType) ToApplicationGatewaySslPolicyResponsePtrOutput() ApplicationGatewaySslPolicyResponsePtrOutput {
	return i.ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewaySslPolicyResponsePtrType) ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyResponsePtrOutput)
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicyResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslPolicyResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslPolicyResponseOutput) ToApplicationGatewaySslPolicyResponseOutput() ApplicationGatewaySslPolicyResponseOutput {
	return o
}

func (o ApplicationGatewaySslPolicyResponseOutput) ToApplicationGatewaySslPolicyResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyResponseOutput {
	return o
}

func (o ApplicationGatewaySslPolicyResponseOutput) ToApplicationGatewaySslPolicyResponsePtrOutput() ApplicationGatewaySslPolicyResponsePtrOutput {
	return o.ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewaySslPolicyResponseOutput) ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) *ApplicationGatewaySslPolicyResponse {
		return &v
	}).(ApplicationGatewaySslPolicyResponsePtrOutput)
}

// Ssl cipher suites to be enabled in the specified order to application gateway.
func (o ApplicationGatewaySslPolicyResponseOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) []string { return v.CipherSuites }).(pulumi.StringArrayOutput)
}

// Ssl protocols to be disabled on application gateway.
func (o ApplicationGatewaySslPolicyResponseOutput) DisabledSslProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) []string { return v.DisabledSslProtocols }).(pulumi.StringArrayOutput)
}

// Minimum version of Ssl protocol to be supported on application gateway.
func (o ApplicationGatewaySslPolicyResponseOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) *string { return v.MinProtocolVersion }).(pulumi.StringPtrOutput)
}

// Name of Ssl predefined policy
func (o ApplicationGatewaySslPolicyResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Type of Ssl Policy
func (o ApplicationGatewaySslPolicyResponseOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslPolicyResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslPolicyResponsePtrOutput) ToApplicationGatewaySslPolicyResponsePtrOutput() ApplicationGatewaySslPolicyResponsePtrOutput {
	return o
}

func (o ApplicationGatewaySslPolicyResponsePtrOutput) ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyResponsePtrOutput {
	return o
}

func (o ApplicationGatewaySslPolicyResponsePtrOutput) Elem() ApplicationGatewaySslPolicyResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) ApplicationGatewaySslPolicyResponse { return *v }).(ApplicationGatewaySslPolicyResponseOutput)
}

// Ssl cipher suites to be enabled in the specified order to application gateway.
func (o ApplicationGatewaySslPolicyResponsePtrOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) []string {
		if v == nil {
			return nil
		}
		return v.CipherSuites
	}).(pulumi.StringArrayOutput)
}

// Ssl protocols to be disabled on application gateway.
func (o ApplicationGatewaySslPolicyResponsePtrOutput) DisabledSslProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) []string {
		if v == nil {
			return nil
		}
		return v.DisabledSslProtocols
	}).(pulumi.StringArrayOutput)
}

// Minimum version of Ssl protocol to be supported on application gateway.
func (o ApplicationGatewaySslPolicyResponsePtrOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.MinProtocolVersion
	}).(pulumi.StringPtrOutput)
}

// Name of Ssl predefined policy
func (o ApplicationGatewaySslPolicyResponsePtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Type of Ssl Policy
func (o ApplicationGatewaySslPolicyResponsePtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyType
	}).(pulumi.StringPtrOutput)
}

// Trusted Root certificates of an application gateway.
type ApplicationGatewayTrustedRootCertificate struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the trusted root certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Trusted Root certificates properties of an application gateway.
	Properties *ApplicationGatewayTrustedRootCertificatePropertiesFormat `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayTrustedRootCertificateInput is an input type that accepts ApplicationGatewayTrustedRootCertificateArgs and ApplicationGatewayTrustedRootCertificateOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedRootCertificateInput` via:
//
//          ApplicationGatewayTrustedRootCertificateArgs{...}
type ApplicationGatewayTrustedRootCertificateInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedRootCertificateOutput() ApplicationGatewayTrustedRootCertificateOutput
	ToApplicationGatewayTrustedRootCertificateOutputWithContext(context.Context) ApplicationGatewayTrustedRootCertificateOutput
}

// Trusted Root certificates of an application gateway.
type ApplicationGatewayTrustedRootCertificateArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the trusted root certificate that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Trusted Root certificates properties of an application gateway.
	Properties ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayTrustedRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedRootCertificate)(nil)).Elem()
}

func (i ApplicationGatewayTrustedRootCertificateArgs) ToApplicationGatewayTrustedRootCertificateOutput() ApplicationGatewayTrustedRootCertificateOutput {
	return i.ToApplicationGatewayTrustedRootCertificateOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedRootCertificateArgs) ToApplicationGatewayTrustedRootCertificateOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedRootCertificateOutput)
}

// ApplicationGatewayTrustedRootCertificateArrayInput is an input type that accepts ApplicationGatewayTrustedRootCertificateArray and ApplicationGatewayTrustedRootCertificateArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedRootCertificateArrayInput` via:
//
//          ApplicationGatewayTrustedRootCertificateArray{ ApplicationGatewayTrustedRootCertificateArgs{...} }
type ApplicationGatewayTrustedRootCertificateArrayInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedRootCertificateArrayOutput() ApplicationGatewayTrustedRootCertificateArrayOutput
	ToApplicationGatewayTrustedRootCertificateArrayOutputWithContext(context.Context) ApplicationGatewayTrustedRootCertificateArrayOutput
}

type ApplicationGatewayTrustedRootCertificateArray []ApplicationGatewayTrustedRootCertificateInput

func (ApplicationGatewayTrustedRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayTrustedRootCertificate)(nil)).Elem()
}

func (i ApplicationGatewayTrustedRootCertificateArray) ToApplicationGatewayTrustedRootCertificateArrayOutput() ApplicationGatewayTrustedRootCertificateArrayOutput {
	return i.ToApplicationGatewayTrustedRootCertificateArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedRootCertificateArray) ToApplicationGatewayTrustedRootCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedRootCertificateArrayOutput)
}

// Trusted Root certificates of an application gateway.
type ApplicationGatewayTrustedRootCertificateOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedRootCertificate)(nil)).Elem()
}

func (o ApplicationGatewayTrustedRootCertificateOutput) ToApplicationGatewayTrustedRootCertificateOutput() ApplicationGatewayTrustedRootCertificateOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificateOutput) ToApplicationGatewayTrustedRootCertificateOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayTrustedRootCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayTrustedRootCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the trusted root certificate that is unique within an Application Gateway.
func (o ApplicationGatewayTrustedRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Trusted Root certificates properties of an application gateway.
func (o ApplicationGatewayTrustedRootCertificateOutput) Properties() ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificate) *ApplicationGatewayTrustedRootCertificatePropertiesFormat {
		return v.Properties
	}).(ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayTrustedRootCertificateOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificate) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayTrustedRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayTrustedRootCertificate)(nil)).Elem()
}

func (o ApplicationGatewayTrustedRootCertificateArrayOutput) ToApplicationGatewayTrustedRootCertificateArrayOutput() ApplicationGatewayTrustedRootCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificateArrayOutput) ToApplicationGatewayTrustedRootCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificateArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayTrustedRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayTrustedRootCertificate {
		return vs[0].([]ApplicationGatewayTrustedRootCertificate)[vs[1].(int)]
	}).(ApplicationGatewayTrustedRootCertificateOutput)
}

// Trusted Root certificates properties of an application gateway.
type ApplicationGatewayTrustedRootCertificatePropertiesFormat struct {
	// Certificate public data.
	Data *string `pulumi:"data"`
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId *string `pulumi:"keyVaultSecretId"`
	// Provisioning state of the trusted root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ApplicationGatewayTrustedRootCertificatePropertiesFormatInput is an input type that accepts ApplicationGatewayTrustedRootCertificatePropertiesFormatArgs and ApplicationGatewayTrustedRootCertificatePropertiesFormatOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedRootCertificatePropertiesFormatInput` via:
//
//          ApplicationGatewayTrustedRootCertificatePropertiesFormatArgs{...}
type ApplicationGatewayTrustedRootCertificatePropertiesFormatInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedRootCertificatePropertiesFormatOutput() ApplicationGatewayTrustedRootCertificatePropertiesFormatOutput
	ToApplicationGatewayTrustedRootCertificatePropertiesFormatOutputWithContext(context.Context) ApplicationGatewayTrustedRootCertificatePropertiesFormatOutput
}

// Trusted Root certificates properties of an application gateway.
type ApplicationGatewayTrustedRootCertificatePropertiesFormatArgs struct {
	// Certificate public data.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId pulumi.StringPtrInput `pulumi:"keyVaultSecretId"`
	// Provisioning state of the trusted root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ApplicationGatewayTrustedRootCertificatePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedRootCertificatePropertiesFormat)(nil)).Elem()
}

func (i ApplicationGatewayTrustedRootCertificatePropertiesFormatArgs) ToApplicationGatewayTrustedRootCertificatePropertiesFormatOutput() ApplicationGatewayTrustedRootCertificatePropertiesFormatOutput {
	return i.ToApplicationGatewayTrustedRootCertificatePropertiesFormatOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedRootCertificatePropertiesFormatArgs) ToApplicationGatewayTrustedRootCertificatePropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificatePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedRootCertificatePropertiesFormatOutput)
}

func (i ApplicationGatewayTrustedRootCertificatePropertiesFormatArgs) ToApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput() ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput {
	return i.ToApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedRootCertificatePropertiesFormatArgs) ToApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedRootCertificatePropertiesFormatOutput).ToApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutputWithContext(ctx)
}

// ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrInput is an input type that accepts ApplicationGatewayTrustedRootCertificatePropertiesFormatArgs, ApplicationGatewayTrustedRootCertificatePropertiesFormatPtr and ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrInput` via:
//
//          ApplicationGatewayTrustedRootCertificatePropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput() ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput
	ToApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutputWithContext(context.Context) ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput
}

type applicationGatewayTrustedRootCertificatePropertiesFormatPtrType ApplicationGatewayTrustedRootCertificatePropertiesFormatArgs

func ApplicationGatewayTrustedRootCertificatePropertiesFormatPtr(v *ApplicationGatewayTrustedRootCertificatePropertiesFormatArgs) ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrInput {
	return (*applicationGatewayTrustedRootCertificatePropertiesFormatPtrType)(v)
}

func (*applicationGatewayTrustedRootCertificatePropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayTrustedRootCertificatePropertiesFormat)(nil)).Elem()
}

func (i *applicationGatewayTrustedRootCertificatePropertiesFormatPtrType) ToApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput() ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput {
	return i.ToApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayTrustedRootCertificatePropertiesFormatPtrType) ToApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput)
}

// Trusted Root certificates properties of an application gateway.
type ApplicationGatewayTrustedRootCertificatePropertiesFormatOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedRootCertificatePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedRootCertificatePropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatOutput) ToApplicationGatewayTrustedRootCertificatePropertiesFormatOutput() ApplicationGatewayTrustedRootCertificatePropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatOutput) ToApplicationGatewayTrustedRootCertificatePropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificatePropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatOutput) ToApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput() ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput {
	return o.ToApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatOutput) ToApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificatePropertiesFormat) *ApplicationGatewayTrustedRootCertificatePropertiesFormat {
		return &v
	}).(ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput)
}

// Certificate public data.
func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificatePropertiesFormat) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificatePropertiesFormat) *string { return v.KeyVaultSecretId }).(pulumi.StringPtrOutput)
}

// Provisioning state of the trusted root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificatePropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayTrustedRootCertificatePropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput) ToApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput() ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput) ToApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput) Elem() ApplicationGatewayTrustedRootCertificatePropertiesFormatOutput {
	return o.ApplyT(func(v *ApplicationGatewayTrustedRootCertificatePropertiesFormat) ApplicationGatewayTrustedRootCertificatePropertiesFormat {
		return *v
	}).(ApplicationGatewayTrustedRootCertificatePropertiesFormatOutput)
}

// Certificate public data.
func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayTrustedRootCertificatePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.Data
	}).(pulumi.StringPtrOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayTrustedRootCertificatePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultSecretId
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the trusted root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayTrustedRootCertificatePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Trusted Root certificates properties of an application gateway.
type ApplicationGatewayTrustedRootCertificatePropertiesFormatResponse struct {
	// Certificate public data.
	Data *string `pulumi:"data"`
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId *string `pulumi:"keyVaultSecretId"`
	// Provisioning state of the trusted root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseInput is an input type that accepts ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseArgs and ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseInput` via:
//
//          ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseArgs{...}
type ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput() ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput
	ToApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutputWithContext(context.Context) ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput
}

// Trusted Root certificates properties of an application gateway.
type ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseArgs struct {
	// Certificate public data.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId pulumi.StringPtrInput `pulumi:"keyVaultSecretId"`
	// Provisioning state of the trusted root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedRootCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (i ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseArgs) ToApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput() ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput {
	return i.ToApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseArgs) ToApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput)
}

func (i ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseArgs) ToApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput() ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseArgs) ToApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput).ToApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrInput is an input type that accepts ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseArgs, ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtr and ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrInput` via:
//
//          ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput() ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput
	ToApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutputWithContext(context.Context) ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput
}

type applicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrType ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseArgs

func ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtr(v *ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseArgs) ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrInput {
	return (*applicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrType)(v)
}

func (*applicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayTrustedRootCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (i *applicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrType) ToApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput() ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrType) ToApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput)
}

// Trusted Root certificates properties of an application gateway.
type ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedRootCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput) ToApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput() ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput) ToApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput) ToApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput() ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput {
	return o.ToApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput) ToApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificatePropertiesFormatResponse) *ApplicationGatewayTrustedRootCertificatePropertiesFormatResponse {
		return &v
	}).(ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput)
}

// Certificate public data.
func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificatePropertiesFormatResponse) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificatePropertiesFormatResponse) *string {
		return v.KeyVaultSecretId
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the trusted root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificatePropertiesFormatResponse) *string {
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

type ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayTrustedRootCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput) ToApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput() ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput) ToApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput) Elem() ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayTrustedRootCertificatePropertiesFormatResponse) ApplicationGatewayTrustedRootCertificatePropertiesFormatResponse {
		return *v
	}).(ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput)
}

// Certificate public data.
func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayTrustedRootCertificatePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.Data
	}).(pulumi.StringPtrOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayTrustedRootCertificatePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultSecretId
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the trusted root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayTrustedRootCertificatePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Trusted Root certificates of an application gateway.
type ApplicationGatewayTrustedRootCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the trusted root certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Trusted Root certificates properties of an application gateway.
	Properties *ApplicationGatewayTrustedRootCertificatePropertiesFormatResponse `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayTrustedRootCertificateResponseInput is an input type that accepts ApplicationGatewayTrustedRootCertificateResponseArgs and ApplicationGatewayTrustedRootCertificateResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedRootCertificateResponseInput` via:
//
//          ApplicationGatewayTrustedRootCertificateResponseArgs{...}
type ApplicationGatewayTrustedRootCertificateResponseInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedRootCertificateResponseOutput() ApplicationGatewayTrustedRootCertificateResponseOutput
	ToApplicationGatewayTrustedRootCertificateResponseOutputWithContext(context.Context) ApplicationGatewayTrustedRootCertificateResponseOutput
}

// Trusted Root certificates of an application gateway.
type ApplicationGatewayTrustedRootCertificateResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the trusted root certificate that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Trusted Root certificates properties of an application gateway.
	Properties ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayTrustedRootCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedRootCertificateResponse)(nil)).Elem()
}

func (i ApplicationGatewayTrustedRootCertificateResponseArgs) ToApplicationGatewayTrustedRootCertificateResponseOutput() ApplicationGatewayTrustedRootCertificateResponseOutput {
	return i.ToApplicationGatewayTrustedRootCertificateResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedRootCertificateResponseArgs) ToApplicationGatewayTrustedRootCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedRootCertificateResponseOutput)
}

// ApplicationGatewayTrustedRootCertificateResponseArrayInput is an input type that accepts ApplicationGatewayTrustedRootCertificateResponseArray and ApplicationGatewayTrustedRootCertificateResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedRootCertificateResponseArrayInput` via:
//
//          ApplicationGatewayTrustedRootCertificateResponseArray{ ApplicationGatewayTrustedRootCertificateResponseArgs{...} }
type ApplicationGatewayTrustedRootCertificateResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedRootCertificateResponseArrayOutput() ApplicationGatewayTrustedRootCertificateResponseArrayOutput
	ToApplicationGatewayTrustedRootCertificateResponseArrayOutputWithContext(context.Context) ApplicationGatewayTrustedRootCertificateResponseArrayOutput
}

type ApplicationGatewayTrustedRootCertificateResponseArray []ApplicationGatewayTrustedRootCertificateResponseInput

func (ApplicationGatewayTrustedRootCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayTrustedRootCertificateResponse)(nil)).Elem()
}

func (i ApplicationGatewayTrustedRootCertificateResponseArray) ToApplicationGatewayTrustedRootCertificateResponseArrayOutput() ApplicationGatewayTrustedRootCertificateResponseArrayOutput {
	return i.ToApplicationGatewayTrustedRootCertificateResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedRootCertificateResponseArray) ToApplicationGatewayTrustedRootCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedRootCertificateResponseArrayOutput)
}

// Trusted Root certificates of an application gateway.
type ApplicationGatewayTrustedRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedRootCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewayTrustedRootCertificateResponseOutput) ToApplicationGatewayTrustedRootCertificateResponseOutput() ApplicationGatewayTrustedRootCertificateResponseOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificateResponseOutput) ToApplicationGatewayTrustedRootCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayTrustedRootCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayTrustedRootCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the trusted root certificate that is unique within an Application Gateway.
func (o ApplicationGatewayTrustedRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Trusted Root certificates properties of an application gateway.
func (o ApplicationGatewayTrustedRootCertificateResponseOutput) Properties() ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificateResponse) *ApplicationGatewayTrustedRootCertificatePropertiesFormatResponse {
		return v.Properties
	}).(ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayTrustedRootCertificateResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificateResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayTrustedRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayTrustedRootCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewayTrustedRootCertificateResponseArrayOutput) ToApplicationGatewayTrustedRootCertificateResponseArrayOutput() ApplicationGatewayTrustedRootCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificateResponseArrayOutput) ToApplicationGatewayTrustedRootCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayTrustedRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayTrustedRootCertificateResponse {
		return vs[0].([]ApplicationGatewayTrustedRootCertificateResponse)[vs[1].(int)]
	}).(ApplicationGatewayTrustedRootCertificateResponseOutput)
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMap struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the URL path map that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of UrlPathMap of the application gateway.
	Properties *ApplicationGatewayUrlPathMapPropertiesFormat `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayUrlPathMapInput is an input type that accepts ApplicationGatewayUrlPathMap and ApplicationGatewayUrlPathMapOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapInput` via:
//
//          ApplicationGatewayUrlPathMap{ "key": ApplicationGatewayUrlPathArgs{...} }
type ApplicationGatewayUrlPathMapInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapOutput() ApplicationGatewayUrlPathMapOutput
	ToApplicationGatewayUrlPathMapOutputWithContext(context.Context) ApplicationGatewayUrlPathMapOutput
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the URL path map that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of UrlPathMap of the application gateway.
	Properties ApplicationGatewayUrlPathMapPropertiesFormatPtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayUrlPathMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapArgs) ToApplicationGatewayUrlPathMapOutput() ApplicationGatewayUrlPathMapOutput {
	return i.ToApplicationGatewayUrlPathMapOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapArgs) ToApplicationGatewayUrlPathMapOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapOutput)
}

// ApplicationGatewayUrlPathMapArrayInput is an input type that accepts ApplicationGatewayUrlPathMapArray and ApplicationGatewayUrlPathMapArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapArrayInput` via:
//
//          ApplicationGatewayUrlPathMapArray{ ApplicationGatewayUrlPathMapArgs{...} }
type ApplicationGatewayUrlPathMapArrayInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapArrayOutput() ApplicationGatewayUrlPathMapArrayOutput
	ToApplicationGatewayUrlPathMapArrayOutputWithContext(context.Context) ApplicationGatewayUrlPathMapArrayOutput
}

type ApplicationGatewayUrlPathMapArray []ApplicationGatewayUrlPathMapInput

func (ApplicationGatewayUrlPathMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapArray) ToApplicationGatewayUrlPathMapArrayOutput() ApplicationGatewayUrlPathMapArrayOutput {
	return i.ToApplicationGatewayUrlPathMapArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapArray) ToApplicationGatewayUrlPathMapArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapArrayOutput)
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapOutput) ToApplicationGatewayUrlPathMapOutput() ApplicationGatewayUrlPathMapOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapOutput) ToApplicationGatewayUrlPathMapOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayUrlPathMapOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayUrlPathMapOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the URL path map that is unique within an Application Gateway.
func (o ApplicationGatewayUrlPathMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of UrlPathMap of the application gateway.
func (o ApplicationGatewayUrlPathMapOutput) Properties() ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *ApplicationGatewayUrlPathMapPropertiesFormat {
		return v.Properties
	}).(ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayUrlPathMapOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayUrlPathMapArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapArrayOutput) ToApplicationGatewayUrlPathMapArrayOutput() ApplicationGatewayUrlPathMapArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapArrayOutput) ToApplicationGatewayUrlPathMapArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayUrlPathMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayUrlPathMap {
		return vs[0].([]ApplicationGatewayUrlPathMap)[vs[1].(int)]
	}).(ApplicationGatewayUrlPathMapOutput)
}

// Properties of UrlPathMap of the application gateway.
type ApplicationGatewayUrlPathMapPropertiesFormat struct {
	// Default backend address pool resource of URL path map.
	DefaultBackendAddressPool *SubResource `pulumi:"defaultBackendAddressPool"`
	// Default backend http settings resource of URL path map.
	DefaultBackendHttpSettings *SubResource `pulumi:"defaultBackendHttpSettings"`
	// Default redirect configuration resource of URL path map.
	DefaultRedirectConfiguration *SubResource `pulumi:"defaultRedirectConfiguration"`
	// Default Rewrite rule set resource of URL path map.
	DefaultRewriteRuleSet *SubResource `pulumi:"defaultRewriteRuleSet"`
	// Path rule of URL path map resource.
	PathRules []ApplicationGatewayPathRule `pulumi:"pathRules"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ApplicationGatewayUrlPathMapPropertiesFormatInput is an input type that accepts ApplicationGatewayUrlPathMapPropertiesFormatArgs and ApplicationGatewayUrlPathMapPropertiesFormatOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapPropertiesFormatInput` via:
//
//          ApplicationGatewayUrlPathMapPropertiesFormatArgs{...}
type ApplicationGatewayUrlPathMapPropertiesFormatInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapPropertiesFormatOutput() ApplicationGatewayUrlPathMapPropertiesFormatOutput
	ToApplicationGatewayUrlPathMapPropertiesFormatOutputWithContext(context.Context) ApplicationGatewayUrlPathMapPropertiesFormatOutput
}

// Properties of UrlPathMap of the application gateway.
type ApplicationGatewayUrlPathMapPropertiesFormatArgs struct {
	// Default backend address pool resource of URL path map.
	DefaultBackendAddressPool SubResourcePtrInput `pulumi:"defaultBackendAddressPool"`
	// Default backend http settings resource of URL path map.
	DefaultBackendHttpSettings SubResourcePtrInput `pulumi:"defaultBackendHttpSettings"`
	// Default redirect configuration resource of URL path map.
	DefaultRedirectConfiguration SubResourcePtrInput `pulumi:"defaultRedirectConfiguration"`
	// Default Rewrite rule set resource of URL path map.
	DefaultRewriteRuleSet SubResourcePtrInput `pulumi:"defaultRewriteRuleSet"`
	// Path rule of URL path map resource.
	PathRules ApplicationGatewayPathRuleArrayInput `pulumi:"pathRules"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ApplicationGatewayUrlPathMapPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMapPropertiesFormat)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapPropertiesFormatArgs) ToApplicationGatewayUrlPathMapPropertiesFormatOutput() ApplicationGatewayUrlPathMapPropertiesFormatOutput {
	return i.ToApplicationGatewayUrlPathMapPropertiesFormatOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapPropertiesFormatArgs) ToApplicationGatewayUrlPathMapPropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapPropertiesFormatOutput)
}

func (i ApplicationGatewayUrlPathMapPropertiesFormatArgs) ToApplicationGatewayUrlPathMapPropertiesFormatPtrOutput() ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput {
	return i.ToApplicationGatewayUrlPathMapPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapPropertiesFormatArgs) ToApplicationGatewayUrlPathMapPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapPropertiesFormatOutput).ToApplicationGatewayUrlPathMapPropertiesFormatPtrOutputWithContext(ctx)
}

// ApplicationGatewayUrlPathMapPropertiesFormatPtrInput is an input type that accepts ApplicationGatewayUrlPathMapPropertiesFormatArgs, ApplicationGatewayUrlPathMapPropertiesFormatPtr and ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapPropertiesFormatPtrInput` via:
//
//          ApplicationGatewayUrlPathMapPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayUrlPathMapPropertiesFormatPtrInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapPropertiesFormatPtrOutput() ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput
	ToApplicationGatewayUrlPathMapPropertiesFormatPtrOutputWithContext(context.Context) ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput
}

type applicationGatewayUrlPathMapPropertiesFormatPtrType ApplicationGatewayUrlPathMapPropertiesFormatArgs

func ApplicationGatewayUrlPathMapPropertiesFormatPtr(v *ApplicationGatewayUrlPathMapPropertiesFormatArgs) ApplicationGatewayUrlPathMapPropertiesFormatPtrInput {
	return (*applicationGatewayUrlPathMapPropertiesFormatPtrType)(v)
}

func (*applicationGatewayUrlPathMapPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayUrlPathMapPropertiesFormat)(nil)).Elem()
}

func (i *applicationGatewayUrlPathMapPropertiesFormatPtrType) ToApplicationGatewayUrlPathMapPropertiesFormatPtrOutput() ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput {
	return i.ToApplicationGatewayUrlPathMapPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayUrlPathMapPropertiesFormatPtrType) ToApplicationGatewayUrlPathMapPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput)
}

// Properties of UrlPathMap of the application gateway.
type ApplicationGatewayUrlPathMapPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMapPropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapPropertiesFormatOutput) ToApplicationGatewayUrlPathMapPropertiesFormatOutput() ApplicationGatewayUrlPathMapPropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapPropertiesFormatOutput) ToApplicationGatewayUrlPathMapPropertiesFormatOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapPropertiesFormatOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapPropertiesFormatOutput) ToApplicationGatewayUrlPathMapPropertiesFormatPtrOutput() ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput {
	return o.ToApplicationGatewayUrlPathMapPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayUrlPathMapPropertiesFormatOutput) ToApplicationGatewayUrlPathMapPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPropertiesFormat) *ApplicationGatewayUrlPathMapPropertiesFormat {
		return &v
	}).(ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput)
}

// Default backend address pool resource of URL path map.
func (o ApplicationGatewayUrlPathMapPropertiesFormatOutput) DefaultBackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPropertiesFormat) *SubResource { return v.DefaultBackendAddressPool }).(SubResourcePtrOutput)
}

// Default backend http settings resource of URL path map.
func (o ApplicationGatewayUrlPathMapPropertiesFormatOutput) DefaultBackendHttpSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPropertiesFormat) *SubResource { return v.DefaultBackendHttpSettings }).(SubResourcePtrOutput)
}

// Default redirect configuration resource of URL path map.
func (o ApplicationGatewayUrlPathMapPropertiesFormatOutput) DefaultRedirectConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPropertiesFormat) *SubResource {
		return v.DefaultRedirectConfiguration
	}).(SubResourcePtrOutput)
}

// Default Rewrite rule set resource of URL path map.
func (o ApplicationGatewayUrlPathMapPropertiesFormatOutput) DefaultRewriteRuleSet() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPropertiesFormat) *SubResource { return v.DefaultRewriteRuleSet }).(SubResourcePtrOutput)
}

// Path rule of URL path map resource.
func (o ApplicationGatewayUrlPathMapPropertiesFormatOutput) PathRules() ApplicationGatewayPathRuleArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPropertiesFormat) []ApplicationGatewayPathRule { return v.PathRules }).(ApplicationGatewayPathRuleArrayOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayUrlPathMapPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayUrlPathMapPropertiesFormat)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput) ToApplicationGatewayUrlPathMapPropertiesFormatPtrOutput() ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput) ToApplicationGatewayUrlPathMapPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput) Elem() ApplicationGatewayUrlPathMapPropertiesFormatOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlPathMapPropertiesFormat) ApplicationGatewayUrlPathMapPropertiesFormat {
		return *v
	}).(ApplicationGatewayUrlPathMapPropertiesFormatOutput)
}

// Default backend address pool resource of URL path map.
func (o ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput) DefaultBackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlPathMapPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.DefaultBackendAddressPool
	}).(SubResourcePtrOutput)
}

// Default backend http settings resource of URL path map.
func (o ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput) DefaultBackendHttpSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlPathMapPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.DefaultBackendHttpSettings
	}).(SubResourcePtrOutput)
}

// Default redirect configuration resource of URL path map.
func (o ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput) DefaultRedirectConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlPathMapPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.DefaultRedirectConfiguration
	}).(SubResourcePtrOutput)
}

// Default Rewrite rule set resource of URL path map.
func (o ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput) DefaultRewriteRuleSet() SubResourcePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlPathMapPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.DefaultRewriteRuleSet
	}).(SubResourcePtrOutput)
}

// Path rule of URL path map resource.
func (o ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput) PathRules() ApplicationGatewayPathRuleArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlPathMapPropertiesFormat) []ApplicationGatewayPathRule {
		if v == nil {
			return nil
		}
		return v.PathRules
	}).(ApplicationGatewayPathRuleArrayOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlPathMapPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Properties of UrlPathMap of the application gateway.
type ApplicationGatewayUrlPathMapPropertiesFormatResponse struct {
	// Default backend address pool resource of URL path map.
	DefaultBackendAddressPool *SubResourceResponse `pulumi:"defaultBackendAddressPool"`
	// Default backend http settings resource of URL path map.
	DefaultBackendHttpSettings *SubResourceResponse `pulumi:"defaultBackendHttpSettings"`
	// Default redirect configuration resource of URL path map.
	DefaultRedirectConfiguration *SubResourceResponse `pulumi:"defaultRedirectConfiguration"`
	// Default Rewrite rule set resource of URL path map.
	DefaultRewriteRuleSet *SubResourceResponse `pulumi:"defaultRewriteRuleSet"`
	// Path rule of URL path map resource.
	PathRules []ApplicationGatewayPathRuleResponse `pulumi:"pathRules"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ApplicationGatewayUrlPathMapPropertiesFormatResponseInput is an input type that accepts ApplicationGatewayUrlPathMapPropertiesFormatResponseArgs and ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapPropertiesFormatResponseInput` via:
//
//          ApplicationGatewayUrlPathMapPropertiesFormatResponseArgs{...}
type ApplicationGatewayUrlPathMapPropertiesFormatResponseInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapPropertiesFormatResponseOutput() ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput
	ToApplicationGatewayUrlPathMapPropertiesFormatResponseOutputWithContext(context.Context) ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput
}

// Properties of UrlPathMap of the application gateway.
type ApplicationGatewayUrlPathMapPropertiesFormatResponseArgs struct {
	// Default backend address pool resource of URL path map.
	DefaultBackendAddressPool SubResourceResponsePtrInput `pulumi:"defaultBackendAddressPool"`
	// Default backend http settings resource of URL path map.
	DefaultBackendHttpSettings SubResourceResponsePtrInput `pulumi:"defaultBackendHttpSettings"`
	// Default redirect configuration resource of URL path map.
	DefaultRedirectConfiguration SubResourceResponsePtrInput `pulumi:"defaultRedirectConfiguration"`
	// Default Rewrite rule set resource of URL path map.
	DefaultRewriteRuleSet SubResourceResponsePtrInput `pulumi:"defaultRewriteRuleSet"`
	// Path rule of URL path map resource.
	PathRules ApplicationGatewayPathRuleResponseArrayInput `pulumi:"pathRules"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ApplicationGatewayUrlPathMapPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMapPropertiesFormatResponse)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapPropertiesFormatResponseArgs) ToApplicationGatewayUrlPathMapPropertiesFormatResponseOutput() ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput {
	return i.ToApplicationGatewayUrlPathMapPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapPropertiesFormatResponseArgs) ToApplicationGatewayUrlPathMapPropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput)
}

func (i ApplicationGatewayUrlPathMapPropertiesFormatResponseArgs) ToApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput() ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapPropertiesFormatResponseArgs) ToApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput).ToApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrInput is an input type that accepts ApplicationGatewayUrlPathMapPropertiesFormatResponseArgs, ApplicationGatewayUrlPathMapPropertiesFormatResponsePtr and ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrInput` via:
//
//          ApplicationGatewayUrlPathMapPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput() ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput
	ToApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutputWithContext(context.Context) ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput
}

type applicationGatewayUrlPathMapPropertiesFormatResponsePtrType ApplicationGatewayUrlPathMapPropertiesFormatResponseArgs

func ApplicationGatewayUrlPathMapPropertiesFormatResponsePtr(v *ApplicationGatewayUrlPathMapPropertiesFormatResponseArgs) ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrInput {
	return (*applicationGatewayUrlPathMapPropertiesFormatResponsePtrType)(v)
}

func (*applicationGatewayUrlPathMapPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayUrlPathMapPropertiesFormatResponse)(nil)).Elem()
}

func (i *applicationGatewayUrlPathMapPropertiesFormatResponsePtrType) ToApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput() ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput {
	return i.ToApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayUrlPathMapPropertiesFormatResponsePtrType) ToApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput)
}

// Properties of UrlPathMap of the application gateway.
type ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMapPropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput) ToApplicationGatewayUrlPathMapPropertiesFormatResponseOutput() ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput) ToApplicationGatewayUrlPathMapPropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput) ToApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput() ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput {
	return o.ToApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput) ToApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPropertiesFormatResponse) *ApplicationGatewayUrlPathMapPropertiesFormatResponse {
		return &v
	}).(ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput)
}

// Default backend address pool resource of URL path map.
func (o ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput) DefaultBackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPropertiesFormatResponse) *SubResourceResponse {
		return v.DefaultBackendAddressPool
	}).(SubResourceResponsePtrOutput)
}

// Default backend http settings resource of URL path map.
func (o ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput) DefaultBackendHttpSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPropertiesFormatResponse) *SubResourceResponse {
		return v.DefaultBackendHttpSettings
	}).(SubResourceResponsePtrOutput)
}

// Default redirect configuration resource of URL path map.
func (o ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput) DefaultRedirectConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPropertiesFormatResponse) *SubResourceResponse {
		return v.DefaultRedirectConfiguration
	}).(SubResourceResponsePtrOutput)
}

// Default Rewrite rule set resource of URL path map.
func (o ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput) DefaultRewriteRuleSet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPropertiesFormatResponse) *SubResourceResponse {
		return v.DefaultRewriteRuleSet
	}).(SubResourceResponsePtrOutput)
}

// Path rule of URL path map resource.
func (o ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput) PathRules() ApplicationGatewayPathRuleResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPropertiesFormatResponse) []ApplicationGatewayPathRuleResponse {
		return v.PathRules
	}).(ApplicationGatewayPathRuleResponseArrayOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayUrlPathMapPropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput) ToApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput() ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput) ToApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput) Elem() ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlPathMapPropertiesFormatResponse) ApplicationGatewayUrlPathMapPropertiesFormatResponse {
		return *v
	}).(ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput)
}

// Default backend address pool resource of URL path map.
func (o ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput) DefaultBackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlPathMapPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.DefaultBackendAddressPool
	}).(SubResourceResponsePtrOutput)
}

// Default backend http settings resource of URL path map.
func (o ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput) DefaultBackendHttpSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlPathMapPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.DefaultBackendHttpSettings
	}).(SubResourceResponsePtrOutput)
}

// Default redirect configuration resource of URL path map.
func (o ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput) DefaultRedirectConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlPathMapPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.DefaultRedirectConfiguration
	}).(SubResourceResponsePtrOutput)
}

// Default Rewrite rule set resource of URL path map.
func (o ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput) DefaultRewriteRuleSet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlPathMapPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.DefaultRewriteRuleSet
	}).(SubResourceResponsePtrOutput)
}

// Path rule of URL path map resource.
func (o ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput) PathRules() ApplicationGatewayPathRuleResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlPathMapPropertiesFormatResponse) []ApplicationGatewayPathRuleResponse {
		if v == nil {
			return nil
		}
		return v.PathRules
	}).(ApplicationGatewayPathRuleResponseArrayOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlPathMapPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the URL path map that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Properties of UrlPathMap of the application gateway.
	Properties *ApplicationGatewayUrlPathMapPropertiesFormatResponse `pulumi:"properties"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayUrlPathMapResponseInput is an input type that accepts ApplicationGatewayUrlPathMapResponseArgs and ApplicationGatewayUrlPathMapResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapResponseInput` via:
//
//          ApplicationGatewayUrlPathMapResponseArgs{...}
type ApplicationGatewayUrlPathMapResponseInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapResponseOutput() ApplicationGatewayUrlPathMapResponseOutput
	ToApplicationGatewayUrlPathMapResponseOutputWithContext(context.Context) ApplicationGatewayUrlPathMapResponseOutput
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the URL path map that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of UrlPathMap of the application gateway.
	Properties ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayUrlPathMapResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMapResponse)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapResponseArgs) ToApplicationGatewayUrlPathMapResponseOutput() ApplicationGatewayUrlPathMapResponseOutput {
	return i.ToApplicationGatewayUrlPathMapResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapResponseArgs) ToApplicationGatewayUrlPathMapResponseOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapResponseOutput)
}

// ApplicationGatewayUrlPathMapResponseArrayInput is an input type that accepts ApplicationGatewayUrlPathMapResponseArray and ApplicationGatewayUrlPathMapResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapResponseArrayInput` via:
//
//          ApplicationGatewayUrlPathMapResponseArray{ ApplicationGatewayUrlPathMapResponseArgs{...} }
type ApplicationGatewayUrlPathMapResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapResponseArrayOutput() ApplicationGatewayUrlPathMapResponseArrayOutput
	ToApplicationGatewayUrlPathMapResponseArrayOutputWithContext(context.Context) ApplicationGatewayUrlPathMapResponseArrayOutput
}

type ApplicationGatewayUrlPathMapResponseArray []ApplicationGatewayUrlPathMapResponseInput

func (ApplicationGatewayUrlPathMapResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMapResponse)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapResponseArray) ToApplicationGatewayUrlPathMapResponseArrayOutput() ApplicationGatewayUrlPathMapResponseArrayOutput {
	return i.ToApplicationGatewayUrlPathMapResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapResponseArray) ToApplicationGatewayUrlPathMapResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapResponseArrayOutput)
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMapResponse)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapResponseOutput) ToApplicationGatewayUrlPathMapResponseOutput() ApplicationGatewayUrlPathMapResponseOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapResponseOutput) ToApplicationGatewayUrlPathMapResponseOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayUrlPathMapResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayUrlPathMapResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the URL path map that is unique within an Application Gateway.
func (o ApplicationGatewayUrlPathMapResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of UrlPathMap of the application gateway.
func (o ApplicationGatewayUrlPathMapResponseOutput) Properties() ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *ApplicationGatewayUrlPathMapPropertiesFormatResponse {
		return v.Properties
	}).(ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayUrlPathMapResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayUrlPathMapResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMapResponse)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapResponseArrayOutput) ToApplicationGatewayUrlPathMapResponseArrayOutput() ApplicationGatewayUrlPathMapResponseArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapResponseArrayOutput) ToApplicationGatewayUrlPathMapResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapResponseArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayUrlPathMapResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayUrlPathMapResponse {
		return vs[0].([]ApplicationGatewayUrlPathMapResponse)[vs[1].(int)]
	}).(ApplicationGatewayUrlPathMapResponseOutput)
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfiguration struct {
	// The disabled rule groups.
	DisabledRuleGroups []ApplicationGatewayFirewallDisabledRuleGroup `pulumi:"disabledRuleGroups"`
	// Whether the web application firewall is enabled or not.
	Enabled bool `pulumi:"enabled"`
	// The exclusion list.
	Exclusions []ApplicationGatewayFirewallExclusion `pulumi:"exclusions"`
	// Maximum file upload size in Mb for WAF.
	FileUploadLimitInMb *int `pulumi:"fileUploadLimitInMb"`
	// Web application firewall mode.
	FirewallMode string `pulumi:"firewallMode"`
	// Maximum request body size for WAF.
	MaxRequestBodySize *int `pulumi:"maxRequestBodySize"`
	// Maximum request body size in Kb for WAF.
	MaxRequestBodySizeInKb *int `pulumi:"maxRequestBodySizeInKb"`
	// Whether allow WAF to check request Body.
	RequestBodyCheck *bool `pulumi:"requestBodyCheck"`
	// The type of the web application firewall rule set. Possible values are: 'OWASP'.
	RuleSetType string `pulumi:"ruleSetType"`
	// The version of the rule set type.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// ApplicationGatewayWebApplicationFirewallConfigurationInput is an input type that accepts ApplicationGatewayWebApplicationFirewallConfigurationArgs and ApplicationGatewayWebApplicationFirewallConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayWebApplicationFirewallConfigurationInput` via:
//
//          ApplicationGatewayWebApplicationFirewallConfigurationArgs{...}
type ApplicationGatewayWebApplicationFirewallConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayWebApplicationFirewallConfigurationOutput() ApplicationGatewayWebApplicationFirewallConfigurationOutput
	ToApplicationGatewayWebApplicationFirewallConfigurationOutputWithContext(context.Context) ApplicationGatewayWebApplicationFirewallConfigurationOutput
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfigurationArgs struct {
	// The disabled rule groups.
	DisabledRuleGroups ApplicationGatewayFirewallDisabledRuleGroupArrayInput `pulumi:"disabledRuleGroups"`
	// Whether the web application firewall is enabled or not.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The exclusion list.
	Exclusions ApplicationGatewayFirewallExclusionArrayInput `pulumi:"exclusions"`
	// Maximum file upload size in Mb for WAF.
	FileUploadLimitInMb pulumi.IntPtrInput `pulumi:"fileUploadLimitInMb"`
	// Web application firewall mode.
	FirewallMode pulumi.StringInput `pulumi:"firewallMode"`
	// Maximum request body size for WAF.
	MaxRequestBodySize pulumi.IntPtrInput `pulumi:"maxRequestBodySize"`
	// Maximum request body size in Kb for WAF.
	MaxRequestBodySizeInKb pulumi.IntPtrInput `pulumi:"maxRequestBodySizeInKb"`
	// Whether allow WAF to check request Body.
	RequestBodyCheck pulumi.BoolPtrInput `pulumi:"requestBodyCheck"`
	// The type of the web application firewall rule set. Possible values are: 'OWASP'.
	RuleSetType pulumi.StringInput `pulumi:"ruleSetType"`
	// The version of the rule set type.
	RuleSetVersion pulumi.StringInput `pulumi:"ruleSetVersion"`
}

func (ApplicationGatewayWebApplicationFirewallConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayWebApplicationFirewallConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationArgs) ToApplicationGatewayWebApplicationFirewallConfigurationOutput() ApplicationGatewayWebApplicationFirewallConfigurationOutput {
	return i.ToApplicationGatewayWebApplicationFirewallConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationArgs) ToApplicationGatewayWebApplicationFirewallConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWebApplicationFirewallConfigurationOutput)
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationArgs) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return i.ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationArgs) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWebApplicationFirewallConfigurationOutput).ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(ctx)
}

// ApplicationGatewayWebApplicationFirewallConfigurationPtrInput is an input type that accepts ApplicationGatewayWebApplicationFirewallConfigurationArgs, ApplicationGatewayWebApplicationFirewallConfigurationPtr and ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayWebApplicationFirewallConfigurationPtrInput` via:
//
//          ApplicationGatewayWebApplicationFirewallConfigurationArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayWebApplicationFirewallConfigurationPtrInput interface {
	pulumi.Input

	ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput
	ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(context.Context) ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput
}

type applicationGatewayWebApplicationFirewallConfigurationPtrType ApplicationGatewayWebApplicationFirewallConfigurationArgs

func ApplicationGatewayWebApplicationFirewallConfigurationPtr(v *ApplicationGatewayWebApplicationFirewallConfigurationArgs) ApplicationGatewayWebApplicationFirewallConfigurationPtrInput {
	return (*applicationGatewayWebApplicationFirewallConfigurationPtrType)(v)
}

func (*applicationGatewayWebApplicationFirewallConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayWebApplicationFirewallConfiguration)(nil)).Elem()
}

func (i *applicationGatewayWebApplicationFirewallConfigurationPtrType) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return i.ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayWebApplicationFirewallConfigurationPtrType) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput)
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayWebApplicationFirewallConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayWebApplicationFirewallConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) ToApplicationGatewayWebApplicationFirewallConfigurationOutput() ApplicationGatewayWebApplicationFirewallConfigurationOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) ToApplicationGatewayWebApplicationFirewallConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return o.ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) *ApplicationGatewayWebApplicationFirewallConfiguration {
		return &v
	}).(ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput)
}

// The disabled rule groups.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) DisabledRuleGroups() ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) []ApplicationGatewayFirewallDisabledRuleGroup {
		return v.DisabledRuleGroups
	}).(ApplicationGatewayFirewallDisabledRuleGroupArrayOutput)
}

// Whether the web application firewall is enabled or not.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The exclusion list.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) Exclusions() ApplicationGatewayFirewallExclusionArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) []ApplicationGatewayFirewallExclusion {
		return v.Exclusions
	}).(ApplicationGatewayFirewallExclusionArrayOutput)
}

// Maximum file upload size in Mb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) FileUploadLimitInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) *int { return v.FileUploadLimitInMb }).(pulumi.IntPtrOutput)
}

// Web application firewall mode.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) FirewallMode() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) string { return v.FirewallMode }).(pulumi.StringOutput)
}

// Maximum request body size for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) MaxRequestBodySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) *int { return v.MaxRequestBodySize }).(pulumi.IntPtrOutput)
}

// Maximum request body size in Kb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) MaxRequestBodySizeInKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) *int { return v.MaxRequestBodySizeInKb }).(pulumi.IntPtrOutput)
}

// Whether allow WAF to check request Body.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) *bool { return v.RequestBodyCheck }).(pulumi.BoolPtrOutput)
}

// The type of the web application firewall rule set. Possible values are: 'OWASP'.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// The version of the rule set type.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayWebApplicationFirewallConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) Elem() ApplicationGatewayWebApplicationFirewallConfigurationOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) ApplicationGatewayWebApplicationFirewallConfiguration {
		return *v
	}).(ApplicationGatewayWebApplicationFirewallConfigurationOutput)
}

// The disabled rule groups.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) DisabledRuleGroups() ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) []ApplicationGatewayFirewallDisabledRuleGroup {
		if v == nil {
			return nil
		}
		return v.DisabledRuleGroups
	}).(ApplicationGatewayFirewallDisabledRuleGroupArrayOutput)
}

// Whether the web application firewall is enabled or not.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The exclusion list.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) Exclusions() ApplicationGatewayFirewallExclusionArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) []ApplicationGatewayFirewallExclusion {
		if v == nil {
			return nil
		}
		return v.Exclusions
	}).(ApplicationGatewayFirewallExclusionArrayOutput)
}

// Maximum file upload size in Mb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) FileUploadLimitInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.FileUploadLimitInMb
	}).(pulumi.IntPtrOutput)
}

// Web application firewall mode.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) FirewallMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.FirewallMode
	}).(pulumi.StringPtrOutput)
}

// Maximum request body size for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) MaxRequestBodySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestBodySize
	}).(pulumi.IntPtrOutput)
}

// Maximum request body size in Kb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) MaxRequestBodySizeInKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestBodySizeInKb
	}).(pulumi.IntPtrOutput)
}

// Whether allow WAF to check request Body.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.RequestBodyCheck
	}).(pulumi.BoolPtrOutput)
}

// The type of the web application firewall rule set. Possible values are: 'OWASP'.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) RuleSetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RuleSetType
	}).(pulumi.StringPtrOutput)
}

// The version of the rule set type.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) RuleSetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RuleSetVersion
	}).(pulumi.StringPtrOutput)
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfigurationResponse struct {
	// The disabled rule groups.
	DisabledRuleGroups []ApplicationGatewayFirewallDisabledRuleGroupResponse `pulumi:"disabledRuleGroups"`
	// Whether the web application firewall is enabled or not.
	Enabled bool `pulumi:"enabled"`
	// The exclusion list.
	Exclusions []ApplicationGatewayFirewallExclusionResponse `pulumi:"exclusions"`
	// Maximum file upload size in Mb for WAF.
	FileUploadLimitInMb *int `pulumi:"fileUploadLimitInMb"`
	// Web application firewall mode.
	FirewallMode string `pulumi:"firewallMode"`
	// Maximum request body size for WAF.
	MaxRequestBodySize *int `pulumi:"maxRequestBodySize"`
	// Maximum request body size in Kb for WAF.
	MaxRequestBodySizeInKb *int `pulumi:"maxRequestBodySizeInKb"`
	// Whether allow WAF to check request Body.
	RequestBodyCheck *bool `pulumi:"requestBodyCheck"`
	// The type of the web application firewall rule set. Possible values are: 'OWASP'.
	RuleSetType string `pulumi:"ruleSetType"`
	// The version of the rule set type.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// ApplicationGatewayWebApplicationFirewallConfigurationResponseInput is an input type that accepts ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs and ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayWebApplicationFirewallConfigurationResponseInput` via:
//
//          ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs{...}
type ApplicationGatewayWebApplicationFirewallConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput
	ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs struct {
	// The disabled rule groups.
	DisabledRuleGroups ApplicationGatewayFirewallDisabledRuleGroupResponseArrayInput `pulumi:"disabledRuleGroups"`
	// Whether the web application firewall is enabled or not.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The exclusion list.
	Exclusions ApplicationGatewayFirewallExclusionResponseArrayInput `pulumi:"exclusions"`
	// Maximum file upload size in Mb for WAF.
	FileUploadLimitInMb pulumi.IntPtrInput `pulumi:"fileUploadLimitInMb"`
	// Web application firewall mode.
	FirewallMode pulumi.StringInput `pulumi:"firewallMode"`
	// Maximum request body size for WAF.
	MaxRequestBodySize pulumi.IntPtrInput `pulumi:"maxRequestBodySize"`
	// Maximum request body size in Kb for WAF.
	MaxRequestBodySizeInKb pulumi.IntPtrInput `pulumi:"maxRequestBodySizeInKb"`
	// Whether allow WAF to check request Body.
	RequestBodyCheck pulumi.BoolPtrInput `pulumi:"requestBodyCheck"`
	// The type of the web application firewall rule set. Possible values are: 'OWASP'.
	RuleSetType pulumi.StringInput `pulumi:"ruleSetType"`
	// The version of the rule set type.
	RuleSetVersion pulumi.StringInput `pulumi:"ruleSetVersion"`
}

func (ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayWebApplicationFirewallConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs) ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput {
	return i.ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs) ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput)
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return i.ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput).ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrInput is an input type that accepts ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs, ApplicationGatewayWebApplicationFirewallConfigurationResponsePtr and ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrInput` via:
//
//          ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput
	ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput
}

type applicationGatewayWebApplicationFirewallConfigurationResponsePtrType ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs

func ApplicationGatewayWebApplicationFirewallConfigurationResponsePtr(v *ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs) ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrInput {
	return (*applicationGatewayWebApplicationFirewallConfigurationResponsePtrType)(v)
}

func (*applicationGatewayWebApplicationFirewallConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayWebApplicationFirewallConfigurationResponse)(nil)).Elem()
}

func (i *applicationGatewayWebApplicationFirewallConfigurationResponsePtrType) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return i.ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayWebApplicationFirewallConfigurationResponsePtrType) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput)
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayWebApplicationFirewallConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return o.ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) *ApplicationGatewayWebApplicationFirewallConfigurationResponse {
		return &v
	}).(ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput)
}

// The disabled rule groups.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) DisabledRuleGroups() ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) []ApplicationGatewayFirewallDisabledRuleGroupResponse {
		return v.DisabledRuleGroups
	}).(ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput)
}

// Whether the web application firewall is enabled or not.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The exclusion list.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) Exclusions() ApplicationGatewayFirewallExclusionResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) []ApplicationGatewayFirewallExclusionResponse {
		return v.Exclusions
	}).(ApplicationGatewayFirewallExclusionResponseArrayOutput)
}

// Maximum file upload size in Mb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) FileUploadLimitInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) *int {
		return v.FileUploadLimitInMb
	}).(pulumi.IntPtrOutput)
}

// Web application firewall mode.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) FirewallMode() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) string { return v.FirewallMode }).(pulumi.StringOutput)
}

// Maximum request body size for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) MaxRequestBodySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) *int {
		return v.MaxRequestBodySize
	}).(pulumi.IntPtrOutput)
}

// Maximum request body size in Kb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) MaxRequestBodySizeInKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) *int {
		return v.MaxRequestBodySizeInKb
	}).(pulumi.IntPtrOutput)
}

// Whether allow WAF to check request Body.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) *bool { return v.RequestBodyCheck }).(pulumi.BoolPtrOutput)
}

// The type of the web application firewall rule set. Possible values are: 'OWASP'.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// The version of the rule set type.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayWebApplicationFirewallConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) Elem() ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) ApplicationGatewayWebApplicationFirewallConfigurationResponse {
		return *v
	}).(ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput)
}

// The disabled rule groups.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) DisabledRuleGroups() ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) []ApplicationGatewayFirewallDisabledRuleGroupResponse {
		if v == nil {
			return nil
		}
		return v.DisabledRuleGroups
	}).(ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput)
}

// Whether the web application firewall is enabled or not.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The exclusion list.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) Exclusions() ApplicationGatewayFirewallExclusionResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) []ApplicationGatewayFirewallExclusionResponse {
		if v == nil {
			return nil
		}
		return v.Exclusions
	}).(ApplicationGatewayFirewallExclusionResponseArrayOutput)
}

// Maximum file upload size in Mb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) FileUploadLimitInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.FileUploadLimitInMb
	}).(pulumi.IntPtrOutput)
}

// Web application firewall mode.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) FirewallMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.FirewallMode
	}).(pulumi.StringPtrOutput)
}

// Maximum request body size for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) MaxRequestBodySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestBodySize
	}).(pulumi.IntPtrOutput)
}

// Maximum request body size in Kb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) MaxRequestBodySizeInKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestBodySizeInKb
	}).(pulumi.IntPtrOutput)
}

// Whether allow WAF to check request Body.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RequestBodyCheck
	}).(pulumi.BoolPtrOutput)
}

// The type of the web application firewall rule set. Possible values are: 'OWASP'.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) RuleSetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RuleSetType
	}).(pulumi.StringPtrOutput)
}

// The version of the rule set type.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) RuleSetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RuleSetVersion
	}).(pulumi.StringPtrOutput)
}

// An application security group in a resource group.
type ApplicationSecurityGroupType struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Properties of the application security group.
	Properties *ApplicationSecurityGroupPropertiesFormat `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// ApplicationSecurityGroupTypeInput is an input type that accepts ApplicationSecurityGroupTypeArgs and ApplicationSecurityGroupTypeOutput values.
// You can construct a concrete instance of `ApplicationSecurityGroupTypeInput` via:
//
//          ApplicationSecurityGroupTypeArgs{...}
type ApplicationSecurityGroupTypeInput interface {
	pulumi.Input

	ToApplicationSecurityGroupTypeOutput() ApplicationSecurityGroupTypeOutput
	ToApplicationSecurityGroupTypeOutputWithContext(context.Context) ApplicationSecurityGroupTypeOutput
}

// An application security group in a resource group.
type ApplicationSecurityGroupTypeArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Properties of the application security group.
	Properties ApplicationSecurityGroupPropertiesFormatPtrInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (ApplicationSecurityGroupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroupType)(nil)).Elem()
}

func (i ApplicationSecurityGroupTypeArgs) ToApplicationSecurityGroupTypeOutput() ApplicationSecurityGroupTypeOutput {
	return i.ToApplicationSecurityGroupTypeOutputWithContext(context.Background())
}

func (i ApplicationSecurityGroupTypeArgs) ToApplicationSecurityGroupTypeOutputWithContext(ctx context.Context) ApplicationSecurityGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupTypeOutput)
}

// ApplicationSecurityGroupTypeArrayInput is an input type that accepts ApplicationSecurityGroupTypeArray and ApplicationSecurityGroupTypeArrayOutput values.
// You can construct a concrete instance of `ApplicationSecurityGroupTypeArrayInput` via:
//
//          ApplicationSecurityGroupTypeArray{ ApplicationSecurityGroupTypeArgs{...} }
type ApplicationSecurityGroupTypeArrayInput interface {
	pulumi.Input

	ToApplicationSecurityGroupTypeArrayOutput() ApplicationSecurityGroupTypeArrayOutput
	ToApplicationSecurityGroupTypeArrayOutputWithContext(context.Context) ApplicationSecurityGroupTypeArrayOutput
}

type ApplicationSecurityGroupTypeArray []ApplicationSecurityGroupTypeInput

func (ApplicationSecurityGroupTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecurityGroupType)(nil)).Elem()
}

func (i ApplicationSecurityGroupTypeArray) ToApplicationSecurityGroupTypeArrayOutput() ApplicationSecurityGroupTypeArrayOutput {
	return i.ToApplicationSecurityGroupTypeArrayOutputWithContext(context.Background())
}

func (i ApplicationSecurityGroupTypeArray) ToApplicationSecurityGroupTypeArrayOutputWithContext(ctx context.Context) ApplicationSecurityGroupTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupTypeArrayOutput)
}

// An application security group in a resource group.
type ApplicationSecurityGroupTypeOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroupType)(nil)).Elem()
}

func (o ApplicationSecurityGroupTypeOutput) ToApplicationSecurityGroupTypeOutput() ApplicationSecurityGroupTypeOutput {
	return o
}

func (o ApplicationSecurityGroupTypeOutput) ToApplicationSecurityGroupTypeOutputWithContext(ctx context.Context) ApplicationSecurityGroupTypeOutput {
	return o
}

// Resource ID.
func (o ApplicationSecurityGroupTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o ApplicationSecurityGroupTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Properties of the application security group.
func (o ApplicationSecurityGroupTypeOutput) Properties() ApplicationSecurityGroupPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupType) *ApplicationSecurityGroupPropertiesFormat { return v.Properties }).(ApplicationSecurityGroupPropertiesFormatPtrOutput)
}

// Resource tags.
func (o ApplicationSecurityGroupTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type ApplicationSecurityGroupTypeArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecurityGroupType)(nil)).Elem()
}

func (o ApplicationSecurityGroupTypeArrayOutput) ToApplicationSecurityGroupTypeArrayOutput() ApplicationSecurityGroupTypeArrayOutput {
	return o
}

func (o ApplicationSecurityGroupTypeArrayOutput) ToApplicationSecurityGroupTypeArrayOutputWithContext(ctx context.Context) ApplicationSecurityGroupTypeArrayOutput {
	return o
}

func (o ApplicationSecurityGroupTypeArrayOutput) Index(i pulumi.IntInput) ApplicationSecurityGroupTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSecurityGroupType {
		return vs[0].([]ApplicationSecurityGroupType)[vs[1].(int)]
	}).(ApplicationSecurityGroupTypeOutput)
}

// Application security group properties.
type ApplicationSecurityGroupPropertiesFormat struct {
}

// ApplicationSecurityGroupPropertiesFormatInput is an input type that accepts ApplicationSecurityGroupPropertiesFormatArgs and ApplicationSecurityGroupPropertiesFormatOutput values.
// You can construct a concrete instance of `ApplicationSecurityGroupPropertiesFormatInput` via:
//
//          ApplicationSecurityGroupPropertiesFormatArgs{...}
type ApplicationSecurityGroupPropertiesFormatInput interface {
	pulumi.Input

	ToApplicationSecurityGroupPropertiesFormatOutput() ApplicationSecurityGroupPropertiesFormatOutput
	ToApplicationSecurityGroupPropertiesFormatOutputWithContext(context.Context) ApplicationSecurityGroupPropertiesFormatOutput
}

// Application security group properties.
type ApplicationSecurityGroupPropertiesFormatArgs struct {
}

func (ApplicationSecurityGroupPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroupPropertiesFormat)(nil)).Elem()
}

func (i ApplicationSecurityGroupPropertiesFormatArgs) ToApplicationSecurityGroupPropertiesFormatOutput() ApplicationSecurityGroupPropertiesFormatOutput {
	return i.ToApplicationSecurityGroupPropertiesFormatOutputWithContext(context.Background())
}

func (i ApplicationSecurityGroupPropertiesFormatArgs) ToApplicationSecurityGroupPropertiesFormatOutputWithContext(ctx context.Context) ApplicationSecurityGroupPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupPropertiesFormatOutput)
}

func (i ApplicationSecurityGroupPropertiesFormatArgs) ToApplicationSecurityGroupPropertiesFormatPtrOutput() ApplicationSecurityGroupPropertiesFormatPtrOutput {
	return i.ToApplicationSecurityGroupPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ApplicationSecurityGroupPropertiesFormatArgs) ToApplicationSecurityGroupPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationSecurityGroupPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupPropertiesFormatOutput).ToApplicationSecurityGroupPropertiesFormatPtrOutputWithContext(ctx)
}

// ApplicationSecurityGroupPropertiesFormatPtrInput is an input type that accepts ApplicationSecurityGroupPropertiesFormatArgs, ApplicationSecurityGroupPropertiesFormatPtr and ApplicationSecurityGroupPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ApplicationSecurityGroupPropertiesFormatPtrInput` via:
//
//          ApplicationSecurityGroupPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ApplicationSecurityGroupPropertiesFormatPtrInput interface {
	pulumi.Input

	ToApplicationSecurityGroupPropertiesFormatPtrOutput() ApplicationSecurityGroupPropertiesFormatPtrOutput
	ToApplicationSecurityGroupPropertiesFormatPtrOutputWithContext(context.Context) ApplicationSecurityGroupPropertiesFormatPtrOutput
}

type applicationSecurityGroupPropertiesFormatPtrType ApplicationSecurityGroupPropertiesFormatArgs

func ApplicationSecurityGroupPropertiesFormatPtr(v *ApplicationSecurityGroupPropertiesFormatArgs) ApplicationSecurityGroupPropertiesFormatPtrInput {
	return (*applicationSecurityGroupPropertiesFormatPtrType)(v)
}

func (*applicationSecurityGroupPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSecurityGroupPropertiesFormat)(nil)).Elem()
}

func (i *applicationSecurityGroupPropertiesFormatPtrType) ToApplicationSecurityGroupPropertiesFormatPtrOutput() ApplicationSecurityGroupPropertiesFormatPtrOutput {
	return i.ToApplicationSecurityGroupPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *applicationSecurityGroupPropertiesFormatPtrType) ToApplicationSecurityGroupPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationSecurityGroupPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupPropertiesFormatPtrOutput)
}

// Application security group properties.
type ApplicationSecurityGroupPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroupPropertiesFormat)(nil)).Elem()
}

func (o ApplicationSecurityGroupPropertiesFormatOutput) ToApplicationSecurityGroupPropertiesFormatOutput() ApplicationSecurityGroupPropertiesFormatOutput {
	return o
}

func (o ApplicationSecurityGroupPropertiesFormatOutput) ToApplicationSecurityGroupPropertiesFormatOutputWithContext(ctx context.Context) ApplicationSecurityGroupPropertiesFormatOutput {
	return o
}

func (o ApplicationSecurityGroupPropertiesFormatOutput) ToApplicationSecurityGroupPropertiesFormatPtrOutput() ApplicationSecurityGroupPropertiesFormatPtrOutput {
	return o.ToApplicationSecurityGroupPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ApplicationSecurityGroupPropertiesFormatOutput) ToApplicationSecurityGroupPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationSecurityGroupPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupPropertiesFormat) *ApplicationSecurityGroupPropertiesFormat {
		return &v
	}).(ApplicationSecurityGroupPropertiesFormatPtrOutput)
}

type ApplicationSecurityGroupPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSecurityGroupPropertiesFormat)(nil)).Elem()
}

func (o ApplicationSecurityGroupPropertiesFormatPtrOutput) ToApplicationSecurityGroupPropertiesFormatPtrOutput() ApplicationSecurityGroupPropertiesFormatPtrOutput {
	return o
}

func (o ApplicationSecurityGroupPropertiesFormatPtrOutput) ToApplicationSecurityGroupPropertiesFormatPtrOutputWithContext(ctx context.Context) ApplicationSecurityGroupPropertiesFormatPtrOutput {
	return o
}

func (o ApplicationSecurityGroupPropertiesFormatPtrOutput) Elem() ApplicationSecurityGroupPropertiesFormatOutput {
	return o.ApplyT(func(v *ApplicationSecurityGroupPropertiesFormat) ApplicationSecurityGroupPropertiesFormat { return *v }).(ApplicationSecurityGroupPropertiesFormatOutput)
}

// Application security group properties.
type ApplicationSecurityGroupPropertiesFormatResponse struct {
	// The provisioning state of the application security group resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
	ResourceGuid string `pulumi:"resourceGuid"`
}

// ApplicationSecurityGroupPropertiesFormatResponseInput is an input type that accepts ApplicationSecurityGroupPropertiesFormatResponseArgs and ApplicationSecurityGroupPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ApplicationSecurityGroupPropertiesFormatResponseInput` via:
//
//          ApplicationSecurityGroupPropertiesFormatResponseArgs{...}
type ApplicationSecurityGroupPropertiesFormatResponseInput interface {
	pulumi.Input

	ToApplicationSecurityGroupPropertiesFormatResponseOutput() ApplicationSecurityGroupPropertiesFormatResponseOutput
	ToApplicationSecurityGroupPropertiesFormatResponseOutputWithContext(context.Context) ApplicationSecurityGroupPropertiesFormatResponseOutput
}

// Application security group properties.
type ApplicationSecurityGroupPropertiesFormatResponseArgs struct {
	// The provisioning state of the application security group resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
	ResourceGuid pulumi.StringInput `pulumi:"resourceGuid"`
}

func (ApplicationSecurityGroupPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroupPropertiesFormatResponse)(nil)).Elem()
}

func (i ApplicationSecurityGroupPropertiesFormatResponseArgs) ToApplicationSecurityGroupPropertiesFormatResponseOutput() ApplicationSecurityGroupPropertiesFormatResponseOutput {
	return i.ToApplicationSecurityGroupPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ApplicationSecurityGroupPropertiesFormatResponseArgs) ToApplicationSecurityGroupPropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationSecurityGroupPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupPropertiesFormatResponseOutput)
}

func (i ApplicationSecurityGroupPropertiesFormatResponseArgs) ToApplicationSecurityGroupPropertiesFormatResponsePtrOutput() ApplicationSecurityGroupPropertiesFormatResponsePtrOutput {
	return i.ToApplicationSecurityGroupPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationSecurityGroupPropertiesFormatResponseArgs) ToApplicationSecurityGroupPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationSecurityGroupPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupPropertiesFormatResponseOutput).ToApplicationSecurityGroupPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ApplicationSecurityGroupPropertiesFormatResponsePtrInput is an input type that accepts ApplicationSecurityGroupPropertiesFormatResponseArgs, ApplicationSecurityGroupPropertiesFormatResponsePtr and ApplicationSecurityGroupPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationSecurityGroupPropertiesFormatResponsePtrInput` via:
//
//          ApplicationSecurityGroupPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationSecurityGroupPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToApplicationSecurityGroupPropertiesFormatResponsePtrOutput() ApplicationSecurityGroupPropertiesFormatResponsePtrOutput
	ToApplicationSecurityGroupPropertiesFormatResponsePtrOutputWithContext(context.Context) ApplicationSecurityGroupPropertiesFormatResponsePtrOutput
}

type applicationSecurityGroupPropertiesFormatResponsePtrType ApplicationSecurityGroupPropertiesFormatResponseArgs

func ApplicationSecurityGroupPropertiesFormatResponsePtr(v *ApplicationSecurityGroupPropertiesFormatResponseArgs) ApplicationSecurityGroupPropertiesFormatResponsePtrInput {
	return (*applicationSecurityGroupPropertiesFormatResponsePtrType)(v)
}

func (*applicationSecurityGroupPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSecurityGroupPropertiesFormatResponse)(nil)).Elem()
}

func (i *applicationSecurityGroupPropertiesFormatResponsePtrType) ToApplicationSecurityGroupPropertiesFormatResponsePtrOutput() ApplicationSecurityGroupPropertiesFormatResponsePtrOutput {
	return i.ToApplicationSecurityGroupPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *applicationSecurityGroupPropertiesFormatResponsePtrType) ToApplicationSecurityGroupPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationSecurityGroupPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupPropertiesFormatResponsePtrOutput)
}

// Application security group properties.
type ApplicationSecurityGroupPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroupPropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationSecurityGroupPropertiesFormatResponseOutput) ToApplicationSecurityGroupPropertiesFormatResponseOutput() ApplicationSecurityGroupPropertiesFormatResponseOutput {
	return o
}

func (o ApplicationSecurityGroupPropertiesFormatResponseOutput) ToApplicationSecurityGroupPropertiesFormatResponseOutputWithContext(ctx context.Context) ApplicationSecurityGroupPropertiesFormatResponseOutput {
	return o
}

func (o ApplicationSecurityGroupPropertiesFormatResponseOutput) ToApplicationSecurityGroupPropertiesFormatResponsePtrOutput() ApplicationSecurityGroupPropertiesFormatResponsePtrOutput {
	return o.ToApplicationSecurityGroupPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationSecurityGroupPropertiesFormatResponseOutput) ToApplicationSecurityGroupPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationSecurityGroupPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupPropertiesFormatResponse) *ApplicationSecurityGroupPropertiesFormatResponse {
		return &v
	}).(ApplicationSecurityGroupPropertiesFormatResponsePtrOutput)
}

// The provisioning state of the application security group resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationSecurityGroupPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
func (o ApplicationSecurityGroupPropertiesFormatResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupPropertiesFormatResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

type ApplicationSecurityGroupPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSecurityGroupPropertiesFormatResponse)(nil)).Elem()
}

func (o ApplicationSecurityGroupPropertiesFormatResponsePtrOutput) ToApplicationSecurityGroupPropertiesFormatResponsePtrOutput() ApplicationSecurityGroupPropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationSecurityGroupPropertiesFormatResponsePtrOutput) ToApplicationSecurityGroupPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ApplicationSecurityGroupPropertiesFormatResponsePtrOutput {
	return o
}

func (o ApplicationSecurityGroupPropertiesFormatResponsePtrOutput) Elem() ApplicationSecurityGroupPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ApplicationSecurityGroupPropertiesFormatResponse) ApplicationSecurityGroupPropertiesFormatResponse {
		return *v
	}).(ApplicationSecurityGroupPropertiesFormatResponseOutput)
}

// The provisioning state of the application security group resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationSecurityGroupPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSecurityGroupPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
func (o ApplicationSecurityGroupPropertiesFormatResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSecurityGroupPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// An application security group in a resource group.
type ApplicationSecurityGroupResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the application security group.
	Properties *ApplicationSecurityGroupPropertiesFormatResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// ApplicationSecurityGroupResponseInput is an input type that accepts ApplicationSecurityGroupResponseArgs and ApplicationSecurityGroupResponseOutput values.
// You can construct a concrete instance of `ApplicationSecurityGroupResponseInput` via:
//
//          ApplicationSecurityGroupResponseArgs{...}
type ApplicationSecurityGroupResponseInput interface {
	pulumi.Input

	ToApplicationSecurityGroupResponseOutput() ApplicationSecurityGroupResponseOutput
	ToApplicationSecurityGroupResponseOutputWithContext(context.Context) ApplicationSecurityGroupResponseOutput
}

// An application security group in a resource group.
type ApplicationSecurityGroupResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the application security group.
	Properties ApplicationSecurityGroupPropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationSecurityGroupResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroupResponse)(nil)).Elem()
}

func (i ApplicationSecurityGroupResponseArgs) ToApplicationSecurityGroupResponseOutput() ApplicationSecurityGroupResponseOutput {
	return i.ToApplicationSecurityGroupResponseOutputWithContext(context.Background())
}

func (i ApplicationSecurityGroupResponseArgs) ToApplicationSecurityGroupResponseOutputWithContext(ctx context.Context) ApplicationSecurityGroupResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupResponseOutput)
}

// ApplicationSecurityGroupResponseArrayInput is an input type that accepts ApplicationSecurityGroupResponseArray and ApplicationSecurityGroupResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationSecurityGroupResponseArrayInput` via:
//
//          ApplicationSecurityGroupResponseArray{ ApplicationSecurityGroupResponseArgs{...} }
type ApplicationSecurityGroupResponseArrayInput interface {
	pulumi.Input

	ToApplicationSecurityGroupResponseArrayOutput() ApplicationSecurityGroupResponseArrayOutput
	ToApplicationSecurityGroupResponseArrayOutputWithContext(context.Context) ApplicationSecurityGroupResponseArrayOutput
}

type ApplicationSecurityGroupResponseArray []ApplicationSecurityGroupResponseInput

func (ApplicationSecurityGroupResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecurityGroupResponse)(nil)).Elem()
}

func (i ApplicationSecurityGroupResponseArray) ToApplicationSecurityGroupResponseArrayOutput() ApplicationSecurityGroupResponseArrayOutput {
	return i.ToApplicationSecurityGroupResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationSecurityGroupResponseArray) ToApplicationSecurityGroupResponseArrayOutputWithContext(ctx context.Context) ApplicationSecurityGroupResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupResponseArrayOutput)
}

// An application security group in a resource group.
type ApplicationSecurityGroupResponseOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroupResponse)(nil)).Elem()
}

func (o ApplicationSecurityGroupResponseOutput) ToApplicationSecurityGroupResponseOutput() ApplicationSecurityGroupResponseOutput {
	return o
}

func (o ApplicationSecurityGroupResponseOutput) ToApplicationSecurityGroupResponseOutputWithContext(ctx context.Context) ApplicationSecurityGroupResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationSecurityGroupResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationSecurityGroupResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o ApplicationSecurityGroupResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o ApplicationSecurityGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the application security group.
func (o ApplicationSecurityGroupResponseOutput) Properties() ApplicationSecurityGroupPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) *ApplicationSecurityGroupPropertiesFormatResponse {
		return v.Properties
	}).(ApplicationSecurityGroupPropertiesFormatResponsePtrOutput)
}

// Resource tags.
func (o ApplicationSecurityGroupResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o ApplicationSecurityGroupResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationSecurityGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecurityGroupResponse)(nil)).Elem()
}

func (o ApplicationSecurityGroupResponseArrayOutput) ToApplicationSecurityGroupResponseArrayOutput() ApplicationSecurityGroupResponseArrayOutput {
	return o
}

func (o ApplicationSecurityGroupResponseArrayOutput) ToApplicationSecurityGroupResponseArrayOutputWithContext(ctx context.Context) ApplicationSecurityGroupResponseArrayOutput {
	return o
}

func (o ApplicationSecurityGroupResponseArrayOutput) Index(i pulumi.IntInput) ApplicationSecurityGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSecurityGroupResponse {
		return vs[0].([]ApplicationSecurityGroupResponse)[vs[1].(int)]
	}).(ApplicationSecurityGroupResponseOutput)
}

type AuthorizationPropertiesFormat struct {
	// The authorization key.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
	AuthorizationUseStatus *string `pulumi:"authorizationUseStatus"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// AuthorizationPropertiesFormatInput is an input type that accepts AuthorizationPropertiesFormatArgs and AuthorizationPropertiesFormatOutput values.
// You can construct a concrete instance of `AuthorizationPropertiesFormatInput` via:
//
//          AuthorizationPropertiesFormatArgs{...}
type AuthorizationPropertiesFormatInput interface {
	pulumi.Input

	ToAuthorizationPropertiesFormatOutput() AuthorizationPropertiesFormatOutput
	ToAuthorizationPropertiesFormatOutputWithContext(context.Context) AuthorizationPropertiesFormatOutput
}

type AuthorizationPropertiesFormatArgs struct {
	// The authorization key.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
	AuthorizationUseStatus pulumi.StringPtrInput `pulumi:"authorizationUseStatus"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (AuthorizationPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPropertiesFormat)(nil)).Elem()
}

func (i AuthorizationPropertiesFormatArgs) ToAuthorizationPropertiesFormatOutput() AuthorizationPropertiesFormatOutput {
	return i.ToAuthorizationPropertiesFormatOutputWithContext(context.Background())
}

func (i AuthorizationPropertiesFormatArgs) ToAuthorizationPropertiesFormatOutputWithContext(ctx context.Context) AuthorizationPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPropertiesFormatOutput)
}

func (i AuthorizationPropertiesFormatArgs) ToAuthorizationPropertiesFormatPtrOutput() AuthorizationPropertiesFormatPtrOutput {
	return i.ToAuthorizationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i AuthorizationPropertiesFormatArgs) ToAuthorizationPropertiesFormatPtrOutputWithContext(ctx context.Context) AuthorizationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPropertiesFormatOutput).ToAuthorizationPropertiesFormatPtrOutputWithContext(ctx)
}

// AuthorizationPropertiesFormatPtrInput is an input type that accepts AuthorizationPropertiesFormatArgs, AuthorizationPropertiesFormatPtr and AuthorizationPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `AuthorizationPropertiesFormatPtrInput` via:
//
//          AuthorizationPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type AuthorizationPropertiesFormatPtrInput interface {
	pulumi.Input

	ToAuthorizationPropertiesFormatPtrOutput() AuthorizationPropertiesFormatPtrOutput
	ToAuthorizationPropertiesFormatPtrOutputWithContext(context.Context) AuthorizationPropertiesFormatPtrOutput
}

type authorizationPropertiesFormatPtrType AuthorizationPropertiesFormatArgs

func AuthorizationPropertiesFormatPtr(v *AuthorizationPropertiesFormatArgs) AuthorizationPropertiesFormatPtrInput {
	return (*authorizationPropertiesFormatPtrType)(v)
}

func (*authorizationPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPropertiesFormat)(nil)).Elem()
}

func (i *authorizationPropertiesFormatPtrType) ToAuthorizationPropertiesFormatPtrOutput() AuthorizationPropertiesFormatPtrOutput {
	return i.ToAuthorizationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *authorizationPropertiesFormatPtrType) ToAuthorizationPropertiesFormatPtrOutputWithContext(ctx context.Context) AuthorizationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPropertiesFormatPtrOutput)
}

type AuthorizationPropertiesFormatOutput struct{ *pulumi.OutputState }

func (AuthorizationPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPropertiesFormat)(nil)).Elem()
}

func (o AuthorizationPropertiesFormatOutput) ToAuthorizationPropertiesFormatOutput() AuthorizationPropertiesFormatOutput {
	return o
}

func (o AuthorizationPropertiesFormatOutput) ToAuthorizationPropertiesFormatOutputWithContext(ctx context.Context) AuthorizationPropertiesFormatOutput {
	return o
}

func (o AuthorizationPropertiesFormatOutput) ToAuthorizationPropertiesFormatPtrOutput() AuthorizationPropertiesFormatPtrOutput {
	return o.ToAuthorizationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o AuthorizationPropertiesFormatOutput) ToAuthorizationPropertiesFormatPtrOutputWithContext(ctx context.Context) AuthorizationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v AuthorizationPropertiesFormat) *AuthorizationPropertiesFormat {
		return &v
	}).(AuthorizationPropertiesFormatPtrOutput)
}

// The authorization key.
func (o AuthorizationPropertiesFormatOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPropertiesFormat) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
func (o AuthorizationPropertiesFormatOutput) AuthorizationUseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPropertiesFormat) *string { return v.AuthorizationUseStatus }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o AuthorizationPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type AuthorizationPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (AuthorizationPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPropertiesFormat)(nil)).Elem()
}

func (o AuthorizationPropertiesFormatPtrOutput) ToAuthorizationPropertiesFormatPtrOutput() AuthorizationPropertiesFormatPtrOutput {
	return o
}

func (o AuthorizationPropertiesFormatPtrOutput) ToAuthorizationPropertiesFormatPtrOutputWithContext(ctx context.Context) AuthorizationPropertiesFormatPtrOutput {
	return o
}

func (o AuthorizationPropertiesFormatPtrOutput) Elem() AuthorizationPropertiesFormatOutput {
	return o.ApplyT(func(v *AuthorizationPropertiesFormat) AuthorizationPropertiesFormat { return *v }).(AuthorizationPropertiesFormatOutput)
}

// The authorization key.
func (o AuthorizationPropertiesFormatPtrOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationKey
	}).(pulumi.StringPtrOutput)
}

// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
func (o AuthorizationPropertiesFormatPtrOutput) AuthorizationUseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationUseStatus
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o AuthorizationPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

type AuthorizationPropertiesFormatResponse struct {
	// The authorization key.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
	AuthorizationUseStatus *string `pulumi:"authorizationUseStatus"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// AuthorizationPropertiesFormatResponseInput is an input type that accepts AuthorizationPropertiesFormatResponseArgs and AuthorizationPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `AuthorizationPropertiesFormatResponseInput` via:
//
//          AuthorizationPropertiesFormatResponseArgs{...}
type AuthorizationPropertiesFormatResponseInput interface {
	pulumi.Input

	ToAuthorizationPropertiesFormatResponseOutput() AuthorizationPropertiesFormatResponseOutput
	ToAuthorizationPropertiesFormatResponseOutputWithContext(context.Context) AuthorizationPropertiesFormatResponseOutput
}

type AuthorizationPropertiesFormatResponseArgs struct {
	// The authorization key.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
	AuthorizationUseStatus pulumi.StringPtrInput `pulumi:"authorizationUseStatus"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (AuthorizationPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPropertiesFormatResponse)(nil)).Elem()
}

func (i AuthorizationPropertiesFormatResponseArgs) ToAuthorizationPropertiesFormatResponseOutput() AuthorizationPropertiesFormatResponseOutput {
	return i.ToAuthorizationPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i AuthorizationPropertiesFormatResponseArgs) ToAuthorizationPropertiesFormatResponseOutputWithContext(ctx context.Context) AuthorizationPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPropertiesFormatResponseOutput)
}

func (i AuthorizationPropertiesFormatResponseArgs) ToAuthorizationPropertiesFormatResponsePtrOutput() AuthorizationPropertiesFormatResponsePtrOutput {
	return i.ToAuthorizationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i AuthorizationPropertiesFormatResponseArgs) ToAuthorizationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) AuthorizationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPropertiesFormatResponseOutput).ToAuthorizationPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// AuthorizationPropertiesFormatResponsePtrInput is an input type that accepts AuthorizationPropertiesFormatResponseArgs, AuthorizationPropertiesFormatResponsePtr and AuthorizationPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `AuthorizationPropertiesFormatResponsePtrInput` via:
//
//          AuthorizationPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type AuthorizationPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToAuthorizationPropertiesFormatResponsePtrOutput() AuthorizationPropertiesFormatResponsePtrOutput
	ToAuthorizationPropertiesFormatResponsePtrOutputWithContext(context.Context) AuthorizationPropertiesFormatResponsePtrOutput
}

type authorizationPropertiesFormatResponsePtrType AuthorizationPropertiesFormatResponseArgs

func AuthorizationPropertiesFormatResponsePtr(v *AuthorizationPropertiesFormatResponseArgs) AuthorizationPropertiesFormatResponsePtrInput {
	return (*authorizationPropertiesFormatResponsePtrType)(v)
}

func (*authorizationPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPropertiesFormatResponse)(nil)).Elem()
}

func (i *authorizationPropertiesFormatResponsePtrType) ToAuthorizationPropertiesFormatResponsePtrOutput() AuthorizationPropertiesFormatResponsePtrOutput {
	return i.ToAuthorizationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *authorizationPropertiesFormatResponsePtrType) ToAuthorizationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) AuthorizationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationPropertiesFormatResponsePtrOutput)
}

type AuthorizationPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (AuthorizationPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationPropertiesFormatResponse)(nil)).Elem()
}

func (o AuthorizationPropertiesFormatResponseOutput) ToAuthorizationPropertiesFormatResponseOutput() AuthorizationPropertiesFormatResponseOutput {
	return o
}

func (o AuthorizationPropertiesFormatResponseOutput) ToAuthorizationPropertiesFormatResponseOutputWithContext(ctx context.Context) AuthorizationPropertiesFormatResponseOutput {
	return o
}

func (o AuthorizationPropertiesFormatResponseOutput) ToAuthorizationPropertiesFormatResponsePtrOutput() AuthorizationPropertiesFormatResponsePtrOutput {
	return o.ToAuthorizationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o AuthorizationPropertiesFormatResponseOutput) ToAuthorizationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) AuthorizationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v AuthorizationPropertiesFormatResponse) *AuthorizationPropertiesFormatResponse {
		return &v
	}).(AuthorizationPropertiesFormatResponsePtrOutput)
}

// The authorization key.
func (o AuthorizationPropertiesFormatResponseOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPropertiesFormatResponse) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
func (o AuthorizationPropertiesFormatResponseOutput) AuthorizationUseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPropertiesFormatResponse) *string { return v.AuthorizationUseStatus }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o AuthorizationPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type AuthorizationPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (AuthorizationPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationPropertiesFormatResponse)(nil)).Elem()
}

func (o AuthorizationPropertiesFormatResponsePtrOutput) ToAuthorizationPropertiesFormatResponsePtrOutput() AuthorizationPropertiesFormatResponsePtrOutput {
	return o
}

func (o AuthorizationPropertiesFormatResponsePtrOutput) ToAuthorizationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) AuthorizationPropertiesFormatResponsePtrOutput {
	return o
}

func (o AuthorizationPropertiesFormatResponsePtrOutput) Elem() AuthorizationPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *AuthorizationPropertiesFormatResponse) AuthorizationPropertiesFormatResponse { return *v }).(AuthorizationPropertiesFormatResponseOutput)
}

// The authorization key.
func (o AuthorizationPropertiesFormatResponsePtrOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationKey
	}).(pulumi.StringPtrOutput)
}

// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
func (o AuthorizationPropertiesFormatResponsePtrOutput) AuthorizationUseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationUseStatus
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o AuthorizationPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Azure Firewall resource
type AzureFirewallType struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the Azure Firewall.
	Properties AzureFirewallPropertiesFormatResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// AzureFirewallTypeInput is an input type that accepts AzureFirewallTypeArgs and AzureFirewallTypeOutput values.
// You can construct a concrete instance of `AzureFirewallTypeInput` via:
//
//          AzureFirewallTypeArgs{...}
type AzureFirewallTypeInput interface {
	pulumi.Input

	ToAzureFirewallTypeOutput() AzureFirewallTypeOutput
	ToAzureFirewallTypeOutputWithContext(context.Context) AzureFirewallTypeOutput
}

// Azure Firewall resource
type AzureFirewallTypeArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the Azure Firewall.
	Properties AzureFirewallPropertiesFormatResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureFirewallTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallType)(nil)).Elem()
}

func (i AzureFirewallTypeArgs) ToAzureFirewallTypeOutput() AzureFirewallTypeOutput {
	return i.ToAzureFirewallTypeOutputWithContext(context.Background())
}

func (i AzureFirewallTypeArgs) ToAzureFirewallTypeOutputWithContext(ctx context.Context) AzureFirewallTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallTypeOutput)
}

// Azure Firewall resource
type AzureFirewallTypeOutput struct{ *pulumi.OutputState }

func (AzureFirewallTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallType)(nil)).Elem()
}

func (o AzureFirewallTypeOutput) ToAzureFirewallTypeOutput() AzureFirewallTypeOutput {
	return o
}

func (o AzureFirewallTypeOutput) ToAzureFirewallTypeOutputWithContext(ctx context.Context) AzureFirewallTypeOutput {
	return o
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o AzureFirewallTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallType) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource location.
func (o AzureFirewallTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o AzureFirewallTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the Azure Firewall.
func (o AzureFirewallTypeOutput) Properties() AzureFirewallPropertiesFormatResponseOutput {
	return o.ApplyT(func(v AzureFirewallType) AzureFirewallPropertiesFormatResponse { return v.Properties }).(AzureFirewallPropertiesFormatResponseOutput)
}

// Resource tags.
func (o AzureFirewallTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AzureFirewallType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o AzureFirewallTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallType) string { return v.Type }).(pulumi.StringOutput)
}

// Properties of an application rule.
type AzureFirewallApplicationRule struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of FQDN Tags for this rule.
	FqdnTags []string `pulumi:"fqdnTags"`
	// Name of the application rule.
	Name *string `pulumi:"name"`
	// Array of ApplicationRuleProtocols.
	Protocols []AzureFirewallApplicationRuleProtocol `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of FQDNs for this rule.
	TargetFqdns []string `pulumi:"targetFqdns"`
}

// AzureFirewallApplicationRuleInput is an input type that accepts AzureFirewallApplicationRuleArgs and AzureFirewallApplicationRuleOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleInput` via:
//
//          AzureFirewallApplicationRuleArgs{...}
type AzureFirewallApplicationRuleInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleOutput() AzureFirewallApplicationRuleOutput
	ToAzureFirewallApplicationRuleOutputWithContext(context.Context) AzureFirewallApplicationRuleOutput
}

// Properties of an application rule.
type AzureFirewallApplicationRuleArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of FQDN Tags for this rule.
	FqdnTags pulumi.StringArrayInput `pulumi:"fqdnTags"`
	// Name of the application rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of ApplicationRuleProtocols.
	Protocols AzureFirewallApplicationRuleProtocolArrayInput `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of FQDNs for this rule.
	TargetFqdns pulumi.StringArrayInput `pulumi:"targetFqdns"`
}

func (AzureFirewallApplicationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRule)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleArgs) ToAzureFirewallApplicationRuleOutput() AzureFirewallApplicationRuleOutput {
	return i.ToAzureFirewallApplicationRuleOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleArgs) ToAzureFirewallApplicationRuleOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleOutput)
}

// AzureFirewallApplicationRuleArrayInput is an input type that accepts AzureFirewallApplicationRuleArray and AzureFirewallApplicationRuleArrayOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleArrayInput` via:
//
//          AzureFirewallApplicationRuleArray{ AzureFirewallApplicationRuleArgs{...} }
type AzureFirewallApplicationRuleArrayInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleArrayOutput() AzureFirewallApplicationRuleArrayOutput
	ToAzureFirewallApplicationRuleArrayOutputWithContext(context.Context) AzureFirewallApplicationRuleArrayOutput
}

type AzureFirewallApplicationRuleArray []AzureFirewallApplicationRuleInput

func (AzureFirewallApplicationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRule)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleArray) ToAzureFirewallApplicationRuleArrayOutput() AzureFirewallApplicationRuleArrayOutput {
	return i.ToAzureFirewallApplicationRuleArrayOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleArray) ToAzureFirewallApplicationRuleArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleArrayOutput)
}

// Properties of an application rule.
type AzureFirewallApplicationRuleOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRule)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleOutput) ToAzureFirewallApplicationRuleOutput() AzureFirewallApplicationRuleOutput {
	return o
}

func (o AzureFirewallApplicationRuleOutput) ToAzureFirewallApplicationRuleOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleOutput {
	return o
}

// Description of the rule.
func (o AzureFirewallApplicationRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of FQDN Tags for this rule.
func (o AzureFirewallApplicationRuleOutput) FqdnTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) []string { return v.FqdnTags }).(pulumi.StringArrayOutput)
}

// Name of the application rule.
func (o AzureFirewallApplicationRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of ApplicationRuleProtocols.
func (o AzureFirewallApplicationRuleOutput) Protocols() AzureFirewallApplicationRuleProtocolArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) []AzureFirewallApplicationRuleProtocol { return v.Protocols }).(AzureFirewallApplicationRuleProtocolArrayOutput)
}

// List of source IP addresses for this rule.
func (o AzureFirewallApplicationRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of FQDNs for this rule.
func (o AzureFirewallApplicationRuleOutput) TargetFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) []string { return v.TargetFqdns }).(pulumi.StringArrayOutput)
}

type AzureFirewallApplicationRuleArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRule)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleArrayOutput) ToAzureFirewallApplicationRuleArrayOutput() AzureFirewallApplicationRuleArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleArrayOutput) ToAzureFirewallApplicationRuleArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRule {
		return vs[0].([]AzureFirewallApplicationRule)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleOutput)
}

// Application rule collection resource
type AzureFirewallApplicationRuleCollection struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the application rule collection.
	Properties *AzureFirewallApplicationRuleCollectionPropertiesFormat `pulumi:"properties"`
}

// AzureFirewallApplicationRuleCollectionInput is an input type that accepts AzureFirewallApplicationRuleCollectionArgs and AzureFirewallApplicationRuleCollectionOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleCollectionInput` via:
//
//          AzureFirewallApplicationRuleCollectionArgs{...}
type AzureFirewallApplicationRuleCollectionInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleCollectionOutput() AzureFirewallApplicationRuleCollectionOutput
	ToAzureFirewallApplicationRuleCollectionOutputWithContext(context.Context) AzureFirewallApplicationRuleCollectionOutput
}

// Application rule collection resource
type AzureFirewallApplicationRuleCollectionArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the application rule collection.
	Properties AzureFirewallApplicationRuleCollectionPropertiesFormatPtrInput `pulumi:"properties"`
}

func (AzureFirewallApplicationRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleCollection)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleCollectionArgs) ToAzureFirewallApplicationRuleCollectionOutput() AzureFirewallApplicationRuleCollectionOutput {
	return i.ToAzureFirewallApplicationRuleCollectionOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleCollectionArgs) ToAzureFirewallApplicationRuleCollectionOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleCollectionOutput)
}

// AzureFirewallApplicationRuleCollectionArrayInput is an input type that accepts AzureFirewallApplicationRuleCollectionArray and AzureFirewallApplicationRuleCollectionArrayOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleCollectionArrayInput` via:
//
//          AzureFirewallApplicationRuleCollectionArray{ AzureFirewallApplicationRuleCollectionArgs{...} }
type AzureFirewallApplicationRuleCollectionArrayInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleCollectionArrayOutput() AzureFirewallApplicationRuleCollectionArrayOutput
	ToAzureFirewallApplicationRuleCollectionArrayOutputWithContext(context.Context) AzureFirewallApplicationRuleCollectionArrayOutput
}

type AzureFirewallApplicationRuleCollectionArray []AzureFirewallApplicationRuleCollectionInput

func (AzureFirewallApplicationRuleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleCollection)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleCollectionArray) ToAzureFirewallApplicationRuleCollectionArrayOutput() AzureFirewallApplicationRuleCollectionArrayOutput {
	return i.ToAzureFirewallApplicationRuleCollectionArrayOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleCollectionArray) ToAzureFirewallApplicationRuleCollectionArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleCollectionArrayOutput)
}

// Application rule collection resource
type AzureFirewallApplicationRuleCollectionOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleCollection)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleCollectionOutput) ToAzureFirewallApplicationRuleCollectionOutput() AzureFirewallApplicationRuleCollectionOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionOutput) ToAzureFirewallApplicationRuleCollectionOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionOutput {
	return o
}

// Resource ID.
func (o AzureFirewallApplicationRuleCollectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AzureFirewallApplicationRuleCollectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the application rule collection.
func (o AzureFirewallApplicationRuleCollectionOutput) Properties() AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollection) *AzureFirewallApplicationRuleCollectionPropertiesFormat {
		return v.Properties
	}).(AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput)
}

type AzureFirewallApplicationRuleCollectionArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleCollection)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleCollectionArrayOutput) ToAzureFirewallApplicationRuleCollectionArrayOutput() AzureFirewallApplicationRuleCollectionArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionArrayOutput) ToAzureFirewallApplicationRuleCollectionArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRuleCollection {
		return vs[0].([]AzureFirewallApplicationRuleCollection)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleCollectionOutput)
}

// Properties of the application rule collection.
type AzureFirewallApplicationRuleCollectionPropertiesFormat struct {
	// The action type of a rule collection
	Action *AzureFirewallRCAction `pulumi:"action"`
	// Priority of the application rule collection resource.
	Priority *int `pulumi:"priority"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Collection of rules used by a application rule collection.
	Rules []AzureFirewallApplicationRule `pulumi:"rules"`
}

// AzureFirewallApplicationRuleCollectionPropertiesFormatInput is an input type that accepts AzureFirewallApplicationRuleCollectionPropertiesFormatArgs and AzureFirewallApplicationRuleCollectionPropertiesFormatOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleCollectionPropertiesFormatInput` via:
//
//          AzureFirewallApplicationRuleCollectionPropertiesFormatArgs{...}
type AzureFirewallApplicationRuleCollectionPropertiesFormatInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleCollectionPropertiesFormatOutput() AzureFirewallApplicationRuleCollectionPropertiesFormatOutput
	ToAzureFirewallApplicationRuleCollectionPropertiesFormatOutputWithContext(context.Context) AzureFirewallApplicationRuleCollectionPropertiesFormatOutput
}

// Properties of the application rule collection.
type AzureFirewallApplicationRuleCollectionPropertiesFormatArgs struct {
	// The action type of a rule collection
	Action AzureFirewallRCActionPtrInput `pulumi:"action"`
	// Priority of the application rule collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Collection of rules used by a application rule collection.
	Rules AzureFirewallApplicationRuleArrayInput `pulumi:"rules"`
}

func (AzureFirewallApplicationRuleCollectionPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleCollectionPropertiesFormat)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleCollectionPropertiesFormatArgs) ToAzureFirewallApplicationRuleCollectionPropertiesFormatOutput() AzureFirewallApplicationRuleCollectionPropertiesFormatOutput {
	return i.ToAzureFirewallApplicationRuleCollectionPropertiesFormatOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleCollectionPropertiesFormatArgs) ToAzureFirewallApplicationRuleCollectionPropertiesFormatOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleCollectionPropertiesFormatOutput)
}

func (i AzureFirewallApplicationRuleCollectionPropertiesFormatArgs) ToAzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput() AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput {
	return i.ToAzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleCollectionPropertiesFormatArgs) ToAzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleCollectionPropertiesFormatOutput).ToAzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutputWithContext(ctx)
}

// AzureFirewallApplicationRuleCollectionPropertiesFormatPtrInput is an input type that accepts AzureFirewallApplicationRuleCollectionPropertiesFormatArgs, AzureFirewallApplicationRuleCollectionPropertiesFormatPtr and AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleCollectionPropertiesFormatPtrInput` via:
//
//          AzureFirewallApplicationRuleCollectionPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type AzureFirewallApplicationRuleCollectionPropertiesFormatPtrInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput() AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput
	ToAzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutputWithContext(context.Context) AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput
}

type azureFirewallApplicationRuleCollectionPropertiesFormatPtrType AzureFirewallApplicationRuleCollectionPropertiesFormatArgs

func AzureFirewallApplicationRuleCollectionPropertiesFormatPtr(v *AzureFirewallApplicationRuleCollectionPropertiesFormatArgs) AzureFirewallApplicationRuleCollectionPropertiesFormatPtrInput {
	return (*azureFirewallApplicationRuleCollectionPropertiesFormatPtrType)(v)
}

func (*azureFirewallApplicationRuleCollectionPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallApplicationRuleCollectionPropertiesFormat)(nil)).Elem()
}

func (i *azureFirewallApplicationRuleCollectionPropertiesFormatPtrType) ToAzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput() AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput {
	return i.ToAzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *azureFirewallApplicationRuleCollectionPropertiesFormatPtrType) ToAzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput)
}

// Properties of the application rule collection.
type AzureFirewallApplicationRuleCollectionPropertiesFormatOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleCollectionPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleCollectionPropertiesFormat)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleCollectionPropertiesFormatOutput) ToAzureFirewallApplicationRuleCollectionPropertiesFormatOutput() AzureFirewallApplicationRuleCollectionPropertiesFormatOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionPropertiesFormatOutput) ToAzureFirewallApplicationRuleCollectionPropertiesFormatOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionPropertiesFormatOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionPropertiesFormatOutput) ToAzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput() AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput {
	return o.ToAzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o AzureFirewallApplicationRuleCollectionPropertiesFormatOutput) ToAzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionPropertiesFormat) *AzureFirewallApplicationRuleCollectionPropertiesFormat {
		return &v
	}).(AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput)
}

// The action type of a rule collection
func (o AzureFirewallApplicationRuleCollectionPropertiesFormatOutput) Action() AzureFirewallRCActionPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionPropertiesFormat) *AzureFirewallRCAction { return v.Action }).(AzureFirewallRCActionPtrOutput)
}

// Priority of the application rule collection resource.
func (o AzureFirewallApplicationRuleCollectionPropertiesFormatOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionPropertiesFormat) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallApplicationRuleCollectionPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Collection of rules used by a application rule collection.
func (o AzureFirewallApplicationRuleCollectionPropertiesFormatOutput) Rules() AzureFirewallApplicationRuleArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionPropertiesFormat) []AzureFirewallApplicationRule {
		return v.Rules
	}).(AzureFirewallApplicationRuleArrayOutput)
}

type AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallApplicationRuleCollectionPropertiesFormat)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput) ToAzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput() AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput) ToAzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput) Elem() AzureFirewallApplicationRuleCollectionPropertiesFormatOutput {
	return o.ApplyT(func(v *AzureFirewallApplicationRuleCollectionPropertiesFormat) AzureFirewallApplicationRuleCollectionPropertiesFormat {
		return *v
	}).(AzureFirewallApplicationRuleCollectionPropertiesFormatOutput)
}

// The action type of a rule collection
func (o AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput) Action() AzureFirewallRCActionPtrOutput {
	return o.ApplyT(func(v *AzureFirewallApplicationRuleCollectionPropertiesFormat) *AzureFirewallRCAction {
		if v == nil {
			return nil
		}
		return v.Action
	}).(AzureFirewallRCActionPtrOutput)
}

// Priority of the application rule collection resource.
func (o AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureFirewallApplicationRuleCollectionPropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallApplicationRuleCollectionPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Collection of rules used by a application rule collection.
func (o AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput) Rules() AzureFirewallApplicationRuleArrayOutput {
	return o.ApplyT(func(v *AzureFirewallApplicationRuleCollectionPropertiesFormat) []AzureFirewallApplicationRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(AzureFirewallApplicationRuleArrayOutput)
}

// Properties of the application rule collection.
type AzureFirewallApplicationRuleCollectionPropertiesFormatResponse struct {
	// The action type of a rule collection
	Action *AzureFirewallRCActionResponse `pulumi:"action"`
	// Priority of the application rule collection resource.
	Priority *int `pulumi:"priority"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Collection of rules used by a application rule collection.
	Rules []AzureFirewallApplicationRuleResponse `pulumi:"rules"`
}

// AzureFirewallApplicationRuleCollectionPropertiesFormatResponseInput is an input type that accepts AzureFirewallApplicationRuleCollectionPropertiesFormatResponseArgs and AzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleCollectionPropertiesFormatResponseInput` via:
//
//          AzureFirewallApplicationRuleCollectionPropertiesFormatResponseArgs{...}
type AzureFirewallApplicationRuleCollectionPropertiesFormatResponseInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput() AzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput
	ToAzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutputWithContext(context.Context) AzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput
}

// Properties of the application rule collection.
type AzureFirewallApplicationRuleCollectionPropertiesFormatResponseArgs struct {
	// The action type of a rule collection
	Action AzureFirewallRCActionResponsePtrInput `pulumi:"action"`
	// Priority of the application rule collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Collection of rules used by a application rule collection.
	Rules AzureFirewallApplicationRuleResponseArrayInput `pulumi:"rules"`
}

func (AzureFirewallApplicationRuleCollectionPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleCollectionPropertiesFormatResponse)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleCollectionPropertiesFormatResponseArgs) ToAzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput() AzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput {
	return i.ToAzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleCollectionPropertiesFormatResponseArgs) ToAzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput)
}

func (i AzureFirewallApplicationRuleCollectionPropertiesFormatResponseArgs) ToAzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput() AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput {
	return i.ToAzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleCollectionPropertiesFormatResponseArgs) ToAzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput).ToAzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrInput is an input type that accepts AzureFirewallApplicationRuleCollectionPropertiesFormatResponseArgs, AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtr and AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrInput` via:
//
//          AzureFirewallApplicationRuleCollectionPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput() AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput
	ToAzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutputWithContext(context.Context) AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput
}

type azureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrType AzureFirewallApplicationRuleCollectionPropertiesFormatResponseArgs

func AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtr(v *AzureFirewallApplicationRuleCollectionPropertiesFormatResponseArgs) AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrInput {
	return (*azureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrType)(v)
}

func (*azureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallApplicationRuleCollectionPropertiesFormatResponse)(nil)).Elem()
}

func (i *azureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrType) ToAzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput() AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput {
	return i.ToAzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *azureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrType) ToAzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput)
}

// Properties of the application rule collection.
type AzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleCollectionPropertiesFormatResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput) ToAzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput() AzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput) ToAzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput) ToAzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput() AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput {
	return o.ToAzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o AzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput) ToAzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionPropertiesFormatResponse) *AzureFirewallApplicationRuleCollectionPropertiesFormatResponse {
		return &v
	}).(AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput)
}

// The action type of a rule collection
func (o AzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput) Action() AzureFirewallRCActionResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionPropertiesFormatResponse) *AzureFirewallRCActionResponse {
		return v.Action
	}).(AzureFirewallRCActionResponsePtrOutput)
}

// Priority of the application rule collection resource.
func (o AzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionPropertiesFormatResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionPropertiesFormatResponse) *string {
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Collection of rules used by a application rule collection.
func (o AzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput) Rules() AzureFirewallApplicationRuleResponseArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionPropertiesFormatResponse) []AzureFirewallApplicationRuleResponse {
		return v.Rules
	}).(AzureFirewallApplicationRuleResponseArrayOutput)
}

type AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallApplicationRuleCollectionPropertiesFormatResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput) ToAzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput() AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput) ToAzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput) Elem() AzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *AzureFirewallApplicationRuleCollectionPropertiesFormatResponse) AzureFirewallApplicationRuleCollectionPropertiesFormatResponse {
		return *v
	}).(AzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput)
}

// The action type of a rule collection
func (o AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput) Action() AzureFirewallRCActionResponsePtrOutput {
	return o.ApplyT(func(v *AzureFirewallApplicationRuleCollectionPropertiesFormatResponse) *AzureFirewallRCActionResponse {
		if v == nil {
			return nil
		}
		return v.Action
	}).(AzureFirewallRCActionResponsePtrOutput)
}

// Priority of the application rule collection resource.
func (o AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureFirewallApplicationRuleCollectionPropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallApplicationRuleCollectionPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Collection of rules used by a application rule collection.
func (o AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput) Rules() AzureFirewallApplicationRuleResponseArrayOutput {
	return o.ApplyT(func(v *AzureFirewallApplicationRuleCollectionPropertiesFormatResponse) []AzureFirewallApplicationRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(AzureFirewallApplicationRuleResponseArrayOutput)
}

// Application rule collection resource
type AzureFirewallApplicationRuleCollectionResponse struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the application rule collection.
	Properties *AzureFirewallApplicationRuleCollectionPropertiesFormatResponse `pulumi:"properties"`
}

// AzureFirewallApplicationRuleCollectionResponseInput is an input type that accepts AzureFirewallApplicationRuleCollectionResponseArgs and AzureFirewallApplicationRuleCollectionResponseOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleCollectionResponseInput` via:
//
//          AzureFirewallApplicationRuleCollectionResponseArgs{...}
type AzureFirewallApplicationRuleCollectionResponseInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleCollectionResponseOutput() AzureFirewallApplicationRuleCollectionResponseOutput
	ToAzureFirewallApplicationRuleCollectionResponseOutputWithContext(context.Context) AzureFirewallApplicationRuleCollectionResponseOutput
}

// Application rule collection resource
type AzureFirewallApplicationRuleCollectionResponseArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the application rule collection.
	Properties AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (AzureFirewallApplicationRuleCollectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleCollectionResponse)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleCollectionResponseArgs) ToAzureFirewallApplicationRuleCollectionResponseOutput() AzureFirewallApplicationRuleCollectionResponseOutput {
	return i.ToAzureFirewallApplicationRuleCollectionResponseOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleCollectionResponseArgs) ToAzureFirewallApplicationRuleCollectionResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleCollectionResponseOutput)
}

// AzureFirewallApplicationRuleCollectionResponseArrayInput is an input type that accepts AzureFirewallApplicationRuleCollectionResponseArray and AzureFirewallApplicationRuleCollectionResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleCollectionResponseArrayInput` via:
//
//          AzureFirewallApplicationRuleCollectionResponseArray{ AzureFirewallApplicationRuleCollectionResponseArgs{...} }
type AzureFirewallApplicationRuleCollectionResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleCollectionResponseArrayOutput() AzureFirewallApplicationRuleCollectionResponseArrayOutput
	ToAzureFirewallApplicationRuleCollectionResponseArrayOutputWithContext(context.Context) AzureFirewallApplicationRuleCollectionResponseArrayOutput
}

type AzureFirewallApplicationRuleCollectionResponseArray []AzureFirewallApplicationRuleCollectionResponseInput

func (AzureFirewallApplicationRuleCollectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleCollectionResponse)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleCollectionResponseArray) ToAzureFirewallApplicationRuleCollectionResponseArrayOutput() AzureFirewallApplicationRuleCollectionResponseArrayOutput {
	return i.ToAzureFirewallApplicationRuleCollectionResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleCollectionResponseArray) ToAzureFirewallApplicationRuleCollectionResponseArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleCollectionResponseArrayOutput)
}

// Application rule collection resource
type AzureFirewallApplicationRuleCollectionResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleCollectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleCollectionResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleCollectionResponseOutput) ToAzureFirewallApplicationRuleCollectionResponseOutput() AzureFirewallApplicationRuleCollectionResponseOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionResponseOutput) ToAzureFirewallApplicationRuleCollectionResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionResponseOutput {
	return o
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the application rule collection.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) Properties() AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) *AzureFirewallApplicationRuleCollectionPropertiesFormatResponse {
		return v.Properties
	}).(AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput)
}

type AzureFirewallApplicationRuleCollectionResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleCollectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleCollectionResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleCollectionResponseArrayOutput) ToAzureFirewallApplicationRuleCollectionResponseArrayOutput() AzureFirewallApplicationRuleCollectionResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionResponseArrayOutput) ToAzureFirewallApplicationRuleCollectionResponseArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleCollectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRuleCollectionResponse {
		return vs[0].([]AzureFirewallApplicationRuleCollectionResponse)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleCollectionResponseOutput)
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocol struct {
	// Port number for the protocol, cannot be greater than 64000. This field is optional.
	Port *int `pulumi:"port"`
	// Protocol type
	ProtocolType *string `pulumi:"protocolType"`
}

// AzureFirewallApplicationRuleProtocolInput is an input type that accepts AzureFirewallApplicationRuleProtocolArgs and AzureFirewallApplicationRuleProtocolOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleProtocolInput` via:
//
//          AzureFirewallApplicationRuleProtocolArgs{...}
type AzureFirewallApplicationRuleProtocolInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleProtocolOutput() AzureFirewallApplicationRuleProtocolOutput
	ToAzureFirewallApplicationRuleProtocolOutputWithContext(context.Context) AzureFirewallApplicationRuleProtocolOutput
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocolArgs struct {
	// Port number for the protocol, cannot be greater than 64000. This field is optional.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Protocol type
	ProtocolType pulumi.StringPtrInput `pulumi:"protocolType"`
}

func (AzureFirewallApplicationRuleProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleProtocol)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleProtocolArgs) ToAzureFirewallApplicationRuleProtocolOutput() AzureFirewallApplicationRuleProtocolOutput {
	return i.ToAzureFirewallApplicationRuleProtocolOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleProtocolArgs) ToAzureFirewallApplicationRuleProtocolOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleProtocolOutput)
}

// AzureFirewallApplicationRuleProtocolArrayInput is an input type that accepts AzureFirewallApplicationRuleProtocolArray and AzureFirewallApplicationRuleProtocolArrayOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleProtocolArrayInput` via:
//
//          AzureFirewallApplicationRuleProtocolArray{ AzureFirewallApplicationRuleProtocolArgs{...} }
type AzureFirewallApplicationRuleProtocolArrayInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleProtocolArrayOutput() AzureFirewallApplicationRuleProtocolArrayOutput
	ToAzureFirewallApplicationRuleProtocolArrayOutputWithContext(context.Context) AzureFirewallApplicationRuleProtocolArrayOutput
}

type AzureFirewallApplicationRuleProtocolArray []AzureFirewallApplicationRuleProtocolInput

func (AzureFirewallApplicationRuleProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleProtocol)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleProtocolArray) ToAzureFirewallApplicationRuleProtocolArrayOutput() AzureFirewallApplicationRuleProtocolArrayOutput {
	return i.ToAzureFirewallApplicationRuleProtocolArrayOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleProtocolArray) ToAzureFirewallApplicationRuleProtocolArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleProtocolArrayOutput)
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocolOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleProtocol)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleProtocolOutput) ToAzureFirewallApplicationRuleProtocolOutput() AzureFirewallApplicationRuleProtocolOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolOutput) ToAzureFirewallApplicationRuleProtocolOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolOutput {
	return o
}

// Port number for the protocol, cannot be greater than 64000. This field is optional.
func (o AzureFirewallApplicationRuleProtocolOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleProtocol) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol type
func (o AzureFirewallApplicationRuleProtocolOutput) ProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleProtocol) *string { return v.ProtocolType }).(pulumi.StringPtrOutput)
}

type AzureFirewallApplicationRuleProtocolArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleProtocol)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleProtocolArrayOutput) ToAzureFirewallApplicationRuleProtocolArrayOutput() AzureFirewallApplicationRuleProtocolArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolArrayOutput) ToAzureFirewallApplicationRuleProtocolArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRuleProtocol {
		return vs[0].([]AzureFirewallApplicationRuleProtocol)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleProtocolOutput)
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocolResponse struct {
	// Port number for the protocol, cannot be greater than 64000. This field is optional.
	Port *int `pulumi:"port"`
	// Protocol type
	ProtocolType *string `pulumi:"protocolType"`
}

// AzureFirewallApplicationRuleProtocolResponseInput is an input type that accepts AzureFirewallApplicationRuleProtocolResponseArgs and AzureFirewallApplicationRuleProtocolResponseOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleProtocolResponseInput` via:
//
//          AzureFirewallApplicationRuleProtocolResponseArgs{...}
type AzureFirewallApplicationRuleProtocolResponseInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleProtocolResponseOutput() AzureFirewallApplicationRuleProtocolResponseOutput
	ToAzureFirewallApplicationRuleProtocolResponseOutputWithContext(context.Context) AzureFirewallApplicationRuleProtocolResponseOutput
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocolResponseArgs struct {
	// Port number for the protocol, cannot be greater than 64000. This field is optional.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Protocol type
	ProtocolType pulumi.StringPtrInput `pulumi:"protocolType"`
}

func (AzureFirewallApplicationRuleProtocolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleProtocolResponse)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleProtocolResponseArgs) ToAzureFirewallApplicationRuleProtocolResponseOutput() AzureFirewallApplicationRuleProtocolResponseOutput {
	return i.ToAzureFirewallApplicationRuleProtocolResponseOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleProtocolResponseArgs) ToAzureFirewallApplicationRuleProtocolResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleProtocolResponseOutput)
}

// AzureFirewallApplicationRuleProtocolResponseArrayInput is an input type that accepts AzureFirewallApplicationRuleProtocolResponseArray and AzureFirewallApplicationRuleProtocolResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleProtocolResponseArrayInput` via:
//
//          AzureFirewallApplicationRuleProtocolResponseArray{ AzureFirewallApplicationRuleProtocolResponseArgs{...} }
type AzureFirewallApplicationRuleProtocolResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleProtocolResponseArrayOutput() AzureFirewallApplicationRuleProtocolResponseArrayOutput
	ToAzureFirewallApplicationRuleProtocolResponseArrayOutputWithContext(context.Context) AzureFirewallApplicationRuleProtocolResponseArrayOutput
}

type AzureFirewallApplicationRuleProtocolResponseArray []AzureFirewallApplicationRuleProtocolResponseInput

func (AzureFirewallApplicationRuleProtocolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleProtocolResponse)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleProtocolResponseArray) ToAzureFirewallApplicationRuleProtocolResponseArrayOutput() AzureFirewallApplicationRuleProtocolResponseArrayOutput {
	return i.ToAzureFirewallApplicationRuleProtocolResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleProtocolResponseArray) ToAzureFirewallApplicationRuleProtocolResponseArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleProtocolResponseArrayOutput)
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocolResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleProtocolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleProtocolResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleProtocolResponseOutput) ToAzureFirewallApplicationRuleProtocolResponseOutput() AzureFirewallApplicationRuleProtocolResponseOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolResponseOutput) ToAzureFirewallApplicationRuleProtocolResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolResponseOutput {
	return o
}

// Port number for the protocol, cannot be greater than 64000. This field is optional.
func (o AzureFirewallApplicationRuleProtocolResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleProtocolResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol type
func (o AzureFirewallApplicationRuleProtocolResponseOutput) ProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleProtocolResponse) *string { return v.ProtocolType }).(pulumi.StringPtrOutput)
}

type AzureFirewallApplicationRuleProtocolResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleProtocolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleProtocolResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleProtocolResponseArrayOutput) ToAzureFirewallApplicationRuleProtocolResponseArrayOutput() AzureFirewallApplicationRuleProtocolResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolResponseArrayOutput) ToAzureFirewallApplicationRuleProtocolResponseArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleProtocolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRuleProtocolResponse {
		return vs[0].([]AzureFirewallApplicationRuleProtocolResponse)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleProtocolResponseOutput)
}

// Properties of an application rule.
type AzureFirewallApplicationRuleResponse struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of FQDN Tags for this rule.
	FqdnTags []string `pulumi:"fqdnTags"`
	// Name of the application rule.
	Name *string `pulumi:"name"`
	// Array of ApplicationRuleProtocols.
	Protocols []AzureFirewallApplicationRuleProtocolResponse `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of FQDNs for this rule.
	TargetFqdns []string `pulumi:"targetFqdns"`
}

// AzureFirewallApplicationRuleResponseInput is an input type that accepts AzureFirewallApplicationRuleResponseArgs and AzureFirewallApplicationRuleResponseOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleResponseInput` via:
//
//          AzureFirewallApplicationRuleResponseArgs{...}
type AzureFirewallApplicationRuleResponseInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleResponseOutput() AzureFirewallApplicationRuleResponseOutput
	ToAzureFirewallApplicationRuleResponseOutputWithContext(context.Context) AzureFirewallApplicationRuleResponseOutput
}

// Properties of an application rule.
type AzureFirewallApplicationRuleResponseArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of FQDN Tags for this rule.
	FqdnTags pulumi.StringArrayInput `pulumi:"fqdnTags"`
	// Name of the application rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of ApplicationRuleProtocols.
	Protocols AzureFirewallApplicationRuleProtocolResponseArrayInput `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of FQDNs for this rule.
	TargetFqdns pulumi.StringArrayInput `pulumi:"targetFqdns"`
}

func (AzureFirewallApplicationRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleResponse)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleResponseArgs) ToAzureFirewallApplicationRuleResponseOutput() AzureFirewallApplicationRuleResponseOutput {
	return i.ToAzureFirewallApplicationRuleResponseOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleResponseArgs) ToAzureFirewallApplicationRuleResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleResponseOutput)
}

// AzureFirewallApplicationRuleResponseArrayInput is an input type that accepts AzureFirewallApplicationRuleResponseArray and AzureFirewallApplicationRuleResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleResponseArrayInput` via:
//
//          AzureFirewallApplicationRuleResponseArray{ AzureFirewallApplicationRuleResponseArgs{...} }
type AzureFirewallApplicationRuleResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleResponseArrayOutput() AzureFirewallApplicationRuleResponseArrayOutput
	ToAzureFirewallApplicationRuleResponseArrayOutputWithContext(context.Context) AzureFirewallApplicationRuleResponseArrayOutput
}

type AzureFirewallApplicationRuleResponseArray []AzureFirewallApplicationRuleResponseInput

func (AzureFirewallApplicationRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleResponse)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleResponseArray) ToAzureFirewallApplicationRuleResponseArrayOutput() AzureFirewallApplicationRuleResponseArrayOutput {
	return i.ToAzureFirewallApplicationRuleResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleResponseArray) ToAzureFirewallApplicationRuleResponseArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleResponseArrayOutput)
}

// Properties of an application rule.
type AzureFirewallApplicationRuleResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleResponseOutput) ToAzureFirewallApplicationRuleResponseOutput() AzureFirewallApplicationRuleResponseOutput {
	return o
}

func (o AzureFirewallApplicationRuleResponseOutput) ToAzureFirewallApplicationRuleResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleResponseOutput {
	return o
}

// Description of the rule.
func (o AzureFirewallApplicationRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of FQDN Tags for this rule.
func (o AzureFirewallApplicationRuleResponseOutput) FqdnTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) []string { return v.FqdnTags }).(pulumi.StringArrayOutput)
}

// Name of the application rule.
func (o AzureFirewallApplicationRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of ApplicationRuleProtocols.
func (o AzureFirewallApplicationRuleResponseOutput) Protocols() AzureFirewallApplicationRuleProtocolResponseArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) []AzureFirewallApplicationRuleProtocolResponse {
		return v.Protocols
	}).(AzureFirewallApplicationRuleProtocolResponseArrayOutput)
}

// List of source IP addresses for this rule.
func (o AzureFirewallApplicationRuleResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of FQDNs for this rule.
func (o AzureFirewallApplicationRuleResponseOutput) TargetFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) []string { return v.TargetFqdns }).(pulumi.StringArrayOutput)
}

type AzureFirewallApplicationRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleResponseArrayOutput) ToAzureFirewallApplicationRuleResponseArrayOutput() AzureFirewallApplicationRuleResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleResponseArrayOutput) ToAzureFirewallApplicationRuleResponseArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRuleResponse {
		return vs[0].([]AzureFirewallApplicationRuleResponse)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleResponseOutput)
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of IP configuration of an Azure Firewall.
	Properties *AzureFirewallIPConfigurationPropertiesFormat `pulumi:"properties"`
}

// AzureFirewallIPConfigurationInput is an input type that accepts AzureFirewallIPConfigurationArgs and AzureFirewallIPConfigurationOutput values.
// You can construct a concrete instance of `AzureFirewallIPConfigurationInput` via:
//
//          AzureFirewallIPConfigurationArgs{...}
type AzureFirewallIPConfigurationInput interface {
	pulumi.Input

	ToAzureFirewallIPConfigurationOutput() AzureFirewallIPConfigurationOutput
	ToAzureFirewallIPConfigurationOutputWithContext(context.Context) AzureFirewallIPConfigurationOutput
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of IP configuration of an Azure Firewall.
	Properties AzureFirewallIPConfigurationPropertiesFormatPtrInput `pulumi:"properties"`
}

func (AzureFirewallIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallIPConfiguration)(nil)).Elem()
}

func (i AzureFirewallIPConfigurationArgs) ToAzureFirewallIPConfigurationOutput() AzureFirewallIPConfigurationOutput {
	return i.ToAzureFirewallIPConfigurationOutputWithContext(context.Background())
}

func (i AzureFirewallIPConfigurationArgs) ToAzureFirewallIPConfigurationOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationOutput)
}

// AzureFirewallIPConfigurationArrayInput is an input type that accepts AzureFirewallIPConfigurationArray and AzureFirewallIPConfigurationArrayOutput values.
// You can construct a concrete instance of `AzureFirewallIPConfigurationArrayInput` via:
//
//          AzureFirewallIPConfigurationArray{ AzureFirewallIPConfigurationArgs{...} }
type AzureFirewallIPConfigurationArrayInput interface {
	pulumi.Input

	ToAzureFirewallIPConfigurationArrayOutput() AzureFirewallIPConfigurationArrayOutput
	ToAzureFirewallIPConfigurationArrayOutputWithContext(context.Context) AzureFirewallIPConfigurationArrayOutput
}

type AzureFirewallIPConfigurationArray []AzureFirewallIPConfigurationInput

func (AzureFirewallIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallIPConfiguration)(nil)).Elem()
}

func (i AzureFirewallIPConfigurationArray) ToAzureFirewallIPConfigurationArrayOutput() AzureFirewallIPConfigurationArrayOutput {
	return i.ToAzureFirewallIPConfigurationArrayOutputWithContext(context.Background())
}

func (i AzureFirewallIPConfigurationArray) ToAzureFirewallIPConfigurationArrayOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationArrayOutput)
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallIPConfiguration)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationOutput) ToAzureFirewallIPConfigurationOutput() AzureFirewallIPConfigurationOutput {
	return o
}

func (o AzureFirewallIPConfigurationOutput) ToAzureFirewallIPConfigurationOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationOutput {
	return o
}

// Resource ID.
func (o AzureFirewallIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AzureFirewallIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of IP configuration of an Azure Firewall.
func (o AzureFirewallIPConfigurationOutput) Properties() AzureFirewallIPConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfiguration) *AzureFirewallIPConfigurationPropertiesFormat {
		return v.Properties
	}).(AzureFirewallIPConfigurationPropertiesFormatPtrOutput)
}

type AzureFirewallIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallIPConfiguration)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationArrayOutput) ToAzureFirewallIPConfigurationArrayOutput() AzureFirewallIPConfigurationArrayOutput {
	return o
}

func (o AzureFirewallIPConfigurationArrayOutput) ToAzureFirewallIPConfigurationArrayOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationArrayOutput {
	return o
}

func (o AzureFirewallIPConfigurationArrayOutput) Index(i pulumi.IntInput) AzureFirewallIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallIPConfiguration {
		return vs[0].([]AzureFirewallIPConfiguration)[vs[1].(int)]
	}).(AzureFirewallIPConfigurationOutput)
}

// Properties of IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationPropertiesFormat struct {
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Reference of the PublicIP resource. This field is a mandatory input if subnet is not null.
	PublicIPAddress *SubResource `pulumi:"publicIPAddress"`
	// Reference of the subnet resource. This resource must be named 'AzureFirewallSubnet'.
	Subnet *SubResource `pulumi:"subnet"`
}

// AzureFirewallIPConfigurationPropertiesFormatInput is an input type that accepts AzureFirewallIPConfigurationPropertiesFormatArgs and AzureFirewallIPConfigurationPropertiesFormatOutput values.
// You can construct a concrete instance of `AzureFirewallIPConfigurationPropertiesFormatInput` via:
//
//          AzureFirewallIPConfigurationPropertiesFormatArgs{...}
type AzureFirewallIPConfigurationPropertiesFormatInput interface {
	pulumi.Input

	ToAzureFirewallIPConfigurationPropertiesFormatOutput() AzureFirewallIPConfigurationPropertiesFormatOutput
	ToAzureFirewallIPConfigurationPropertiesFormatOutputWithContext(context.Context) AzureFirewallIPConfigurationPropertiesFormatOutput
}

// Properties of IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationPropertiesFormatArgs struct {
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Reference of the PublicIP resource. This field is a mandatory input if subnet is not null.
	PublicIPAddress SubResourcePtrInput `pulumi:"publicIPAddress"`
	// Reference of the subnet resource. This resource must be named 'AzureFirewallSubnet'.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
}

func (AzureFirewallIPConfigurationPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (i AzureFirewallIPConfigurationPropertiesFormatArgs) ToAzureFirewallIPConfigurationPropertiesFormatOutput() AzureFirewallIPConfigurationPropertiesFormatOutput {
	return i.ToAzureFirewallIPConfigurationPropertiesFormatOutputWithContext(context.Background())
}

func (i AzureFirewallIPConfigurationPropertiesFormatArgs) ToAzureFirewallIPConfigurationPropertiesFormatOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationPropertiesFormatOutput)
}

func (i AzureFirewallIPConfigurationPropertiesFormatArgs) ToAzureFirewallIPConfigurationPropertiesFormatPtrOutput() AzureFirewallIPConfigurationPropertiesFormatPtrOutput {
	return i.ToAzureFirewallIPConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i AzureFirewallIPConfigurationPropertiesFormatArgs) ToAzureFirewallIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationPropertiesFormatOutput).ToAzureFirewallIPConfigurationPropertiesFormatPtrOutputWithContext(ctx)
}

// AzureFirewallIPConfigurationPropertiesFormatPtrInput is an input type that accepts AzureFirewallIPConfigurationPropertiesFormatArgs, AzureFirewallIPConfigurationPropertiesFormatPtr and AzureFirewallIPConfigurationPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `AzureFirewallIPConfigurationPropertiesFormatPtrInput` via:
//
//          AzureFirewallIPConfigurationPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type AzureFirewallIPConfigurationPropertiesFormatPtrInput interface {
	pulumi.Input

	ToAzureFirewallIPConfigurationPropertiesFormatPtrOutput() AzureFirewallIPConfigurationPropertiesFormatPtrOutput
	ToAzureFirewallIPConfigurationPropertiesFormatPtrOutputWithContext(context.Context) AzureFirewallIPConfigurationPropertiesFormatPtrOutput
}

type azureFirewallIPConfigurationPropertiesFormatPtrType AzureFirewallIPConfigurationPropertiesFormatArgs

func AzureFirewallIPConfigurationPropertiesFormatPtr(v *AzureFirewallIPConfigurationPropertiesFormatArgs) AzureFirewallIPConfigurationPropertiesFormatPtrInput {
	return (*azureFirewallIPConfigurationPropertiesFormatPtrType)(v)
}

func (*azureFirewallIPConfigurationPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (i *azureFirewallIPConfigurationPropertiesFormatPtrType) ToAzureFirewallIPConfigurationPropertiesFormatPtrOutput() AzureFirewallIPConfigurationPropertiesFormatPtrOutput {
	return i.ToAzureFirewallIPConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *azureFirewallIPConfigurationPropertiesFormatPtrType) ToAzureFirewallIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationPropertiesFormatPtrOutput)
}

// Properties of IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationPropertiesFormatOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationPropertiesFormatOutput) ToAzureFirewallIPConfigurationPropertiesFormatOutput() AzureFirewallIPConfigurationPropertiesFormatOutput {
	return o
}

func (o AzureFirewallIPConfigurationPropertiesFormatOutput) ToAzureFirewallIPConfigurationPropertiesFormatOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationPropertiesFormatOutput {
	return o
}

func (o AzureFirewallIPConfigurationPropertiesFormatOutput) ToAzureFirewallIPConfigurationPropertiesFormatPtrOutput() AzureFirewallIPConfigurationPropertiesFormatPtrOutput {
	return o.ToAzureFirewallIPConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o AzureFirewallIPConfigurationPropertiesFormatOutput) ToAzureFirewallIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationPropertiesFormat) *AzureFirewallIPConfigurationPropertiesFormat {
		return &v
	}).(AzureFirewallIPConfigurationPropertiesFormatPtrOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallIPConfigurationPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Reference of the PublicIP resource. This field is a mandatory input if subnet is not null.
func (o AzureFirewallIPConfigurationPropertiesFormatOutput) PublicIPAddress() SubResourcePtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationPropertiesFormat) *SubResource { return v.PublicIPAddress }).(SubResourcePtrOutput)
}

// Reference of the subnet resource. This resource must be named 'AzureFirewallSubnet'.
func (o AzureFirewallIPConfigurationPropertiesFormatOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationPropertiesFormat) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

type AzureFirewallIPConfigurationPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationPropertiesFormatPtrOutput) ToAzureFirewallIPConfigurationPropertiesFormatPtrOutput() AzureFirewallIPConfigurationPropertiesFormatPtrOutput {
	return o
}

func (o AzureFirewallIPConfigurationPropertiesFormatPtrOutput) ToAzureFirewallIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationPropertiesFormatPtrOutput {
	return o
}

func (o AzureFirewallIPConfigurationPropertiesFormatPtrOutput) Elem() AzureFirewallIPConfigurationPropertiesFormatOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationPropertiesFormat) AzureFirewallIPConfigurationPropertiesFormat {
		return *v
	}).(AzureFirewallIPConfigurationPropertiesFormatOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallIPConfigurationPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Reference of the PublicIP resource. This field is a mandatory input if subnet is not null.
func (o AzureFirewallIPConfigurationPropertiesFormatPtrOutput) PublicIPAddress() SubResourcePtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(SubResourcePtrOutput)
}

// Reference of the subnet resource. This resource must be named 'AzureFirewallSubnet'.
func (o AzureFirewallIPConfigurationPropertiesFormatPtrOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubResourcePtrOutput)
}

// Properties of IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationPropertiesFormatResponse struct {
	// The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.
	PrivateIPAddress string `pulumi:"privateIPAddress"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Reference of the PublicIP resource. This field is a mandatory input if subnet is not null.
	PublicIPAddress *SubResourceResponse `pulumi:"publicIPAddress"`
	// Reference of the subnet resource. This resource must be named 'AzureFirewallSubnet'.
	Subnet *SubResourceResponse `pulumi:"subnet"`
}

// AzureFirewallIPConfigurationPropertiesFormatResponseInput is an input type that accepts AzureFirewallIPConfigurationPropertiesFormatResponseArgs and AzureFirewallIPConfigurationPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `AzureFirewallIPConfigurationPropertiesFormatResponseInput` via:
//
//          AzureFirewallIPConfigurationPropertiesFormatResponseArgs{...}
type AzureFirewallIPConfigurationPropertiesFormatResponseInput interface {
	pulumi.Input

	ToAzureFirewallIPConfigurationPropertiesFormatResponseOutput() AzureFirewallIPConfigurationPropertiesFormatResponseOutput
	ToAzureFirewallIPConfigurationPropertiesFormatResponseOutputWithContext(context.Context) AzureFirewallIPConfigurationPropertiesFormatResponseOutput
}

// Properties of IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationPropertiesFormatResponseArgs struct {
	// The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.
	PrivateIPAddress pulumi.StringInput `pulumi:"privateIPAddress"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Reference of the PublicIP resource. This field is a mandatory input if subnet is not null.
	PublicIPAddress SubResourceResponsePtrInput `pulumi:"publicIPAddress"`
	// Reference of the subnet resource. This resource must be named 'AzureFirewallSubnet'.
	Subnet SubResourceResponsePtrInput `pulumi:"subnet"`
}

func (AzureFirewallIPConfigurationPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (i AzureFirewallIPConfigurationPropertiesFormatResponseArgs) ToAzureFirewallIPConfigurationPropertiesFormatResponseOutput() AzureFirewallIPConfigurationPropertiesFormatResponseOutput {
	return i.ToAzureFirewallIPConfigurationPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i AzureFirewallIPConfigurationPropertiesFormatResponseArgs) ToAzureFirewallIPConfigurationPropertiesFormatResponseOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationPropertiesFormatResponseOutput)
}

func (i AzureFirewallIPConfigurationPropertiesFormatResponseArgs) ToAzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput() AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput {
	return i.ToAzureFirewallIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i AzureFirewallIPConfigurationPropertiesFormatResponseArgs) ToAzureFirewallIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationPropertiesFormatResponseOutput).ToAzureFirewallIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// AzureFirewallIPConfigurationPropertiesFormatResponsePtrInput is an input type that accepts AzureFirewallIPConfigurationPropertiesFormatResponseArgs, AzureFirewallIPConfigurationPropertiesFormatResponsePtr and AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `AzureFirewallIPConfigurationPropertiesFormatResponsePtrInput` via:
//
//          AzureFirewallIPConfigurationPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type AzureFirewallIPConfigurationPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToAzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput() AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput
	ToAzureFirewallIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Context) AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput
}

type azureFirewallIPConfigurationPropertiesFormatResponsePtrType AzureFirewallIPConfigurationPropertiesFormatResponseArgs

func AzureFirewallIPConfigurationPropertiesFormatResponsePtr(v *AzureFirewallIPConfigurationPropertiesFormatResponseArgs) AzureFirewallIPConfigurationPropertiesFormatResponsePtrInput {
	return (*azureFirewallIPConfigurationPropertiesFormatResponsePtrType)(v)
}

func (*azureFirewallIPConfigurationPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (i *azureFirewallIPConfigurationPropertiesFormatResponsePtrType) ToAzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput() AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput {
	return i.ToAzureFirewallIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *azureFirewallIPConfigurationPropertiesFormatResponsePtrType) ToAzureFirewallIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput)
}

// Properties of IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationPropertiesFormatResponseOutput) ToAzureFirewallIPConfigurationPropertiesFormatResponseOutput() AzureFirewallIPConfigurationPropertiesFormatResponseOutput {
	return o
}

func (o AzureFirewallIPConfigurationPropertiesFormatResponseOutput) ToAzureFirewallIPConfigurationPropertiesFormatResponseOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationPropertiesFormatResponseOutput {
	return o
}

func (o AzureFirewallIPConfigurationPropertiesFormatResponseOutput) ToAzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput() AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ToAzureFirewallIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o AzureFirewallIPConfigurationPropertiesFormatResponseOutput) ToAzureFirewallIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationPropertiesFormatResponse) *AzureFirewallIPConfigurationPropertiesFormatResponse {
		return &v
	}).(AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput)
}

// The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.
func (o AzureFirewallIPConfigurationPropertiesFormatResponseOutput) PrivateIPAddress() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationPropertiesFormatResponse) string { return v.PrivateIPAddress }).(pulumi.StringOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallIPConfigurationPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Reference of the PublicIP resource. This field is a mandatory input if subnet is not null.
func (o AzureFirewallIPConfigurationPropertiesFormatResponseOutput) PublicIPAddress() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationPropertiesFormatResponse) *SubResourceResponse {
		return v.PublicIPAddress
	}).(SubResourceResponsePtrOutput)
}

// Reference of the subnet resource. This resource must be named 'AzureFirewallSubnet'.
func (o AzureFirewallIPConfigurationPropertiesFormatResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationPropertiesFormatResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

type AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput) ToAzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput() AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput {
	return o
}

func (o AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput) ToAzureFirewallIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput {
	return o
}

func (o AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput) Elem() AzureFirewallIPConfigurationPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationPropertiesFormatResponse) AzureFirewallIPConfigurationPropertiesFormatResponse {
		return *v
	}).(AzureFirewallIPConfigurationPropertiesFormatResponseOutput)
}

// The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.
func (o AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Reference of the PublicIP resource. This field is a mandatory input if subnet is not null.
func (o AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput) PublicIPAddress() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(SubResourceResponsePtrOutput)
}

// Reference of the subnet resource. This resource must be named 'AzureFirewallSubnet'.
func (o AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubResourceResponsePtrOutput)
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of IP configuration of an Azure Firewall.
	Properties *AzureFirewallIPConfigurationPropertiesFormatResponse `pulumi:"properties"`
}

// AzureFirewallIPConfigurationResponseInput is an input type that accepts AzureFirewallIPConfigurationResponseArgs and AzureFirewallIPConfigurationResponseOutput values.
// You can construct a concrete instance of `AzureFirewallIPConfigurationResponseInput` via:
//
//          AzureFirewallIPConfigurationResponseArgs{...}
type AzureFirewallIPConfigurationResponseInput interface {
	pulumi.Input

	ToAzureFirewallIPConfigurationResponseOutput() AzureFirewallIPConfigurationResponseOutput
	ToAzureFirewallIPConfigurationResponseOutputWithContext(context.Context) AzureFirewallIPConfigurationResponseOutput
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of IP configuration of an Azure Firewall.
	Properties AzureFirewallIPConfigurationPropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (AzureFirewallIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallIPConfigurationResponse)(nil)).Elem()
}

func (i AzureFirewallIPConfigurationResponseArgs) ToAzureFirewallIPConfigurationResponseOutput() AzureFirewallIPConfigurationResponseOutput {
	return i.ToAzureFirewallIPConfigurationResponseOutputWithContext(context.Background())
}

func (i AzureFirewallIPConfigurationResponseArgs) ToAzureFirewallIPConfigurationResponseOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationResponseOutput)
}

// AzureFirewallIPConfigurationResponseArrayInput is an input type that accepts AzureFirewallIPConfigurationResponseArray and AzureFirewallIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallIPConfigurationResponseArrayInput` via:
//
//          AzureFirewallIPConfigurationResponseArray{ AzureFirewallIPConfigurationResponseArgs{...} }
type AzureFirewallIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallIPConfigurationResponseArrayOutput() AzureFirewallIPConfigurationResponseArrayOutput
	ToAzureFirewallIPConfigurationResponseArrayOutputWithContext(context.Context) AzureFirewallIPConfigurationResponseArrayOutput
}

type AzureFirewallIPConfigurationResponseArray []AzureFirewallIPConfigurationResponseInput

func (AzureFirewallIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallIPConfigurationResponse)(nil)).Elem()
}

func (i AzureFirewallIPConfigurationResponseArray) ToAzureFirewallIPConfigurationResponseArrayOutput() AzureFirewallIPConfigurationResponseArrayOutput {
	return i.ToAzureFirewallIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallIPConfigurationResponseArray) ToAzureFirewallIPConfigurationResponseArrayOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationResponseArrayOutput)
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallIPConfigurationResponse)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationResponseOutput) ToAzureFirewallIPConfigurationResponseOutput() AzureFirewallIPConfigurationResponseOutput {
	return o
}

func (o AzureFirewallIPConfigurationResponseOutput) ToAzureFirewallIPConfigurationResponseOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o AzureFirewallIPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o AzureFirewallIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AzureFirewallIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of IP configuration of an Azure Firewall.
func (o AzureFirewallIPConfigurationResponseOutput) Properties() AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) *AzureFirewallIPConfigurationPropertiesFormatResponse {
		return v.Properties
	}).(AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput)
}

type AzureFirewallIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallIPConfigurationResponse)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationResponseArrayOutput) ToAzureFirewallIPConfigurationResponseArrayOutput() AzureFirewallIPConfigurationResponseArrayOutput {
	return o
}

func (o AzureFirewallIPConfigurationResponseArrayOutput) ToAzureFirewallIPConfigurationResponseArrayOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationResponseArrayOutput {
	return o
}

func (o AzureFirewallIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallIPConfigurationResponse {
		return vs[0].([]AzureFirewallIPConfigurationResponse)[vs[1].(int)]
	}).(AzureFirewallIPConfigurationResponseOutput)
}

// AzureFirewall NAT Rule Collection Action.
type AzureFirewallNatRCAction struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// AzureFirewallNatRCActionInput is an input type that accepts AzureFirewallNatRCActionArgs and AzureFirewallNatRCActionOutput values.
// You can construct a concrete instance of `AzureFirewallNatRCActionInput` via:
//
//          AzureFirewallNatRCActionArgs{...}
type AzureFirewallNatRCActionInput interface {
	pulumi.Input

	ToAzureFirewallNatRCActionOutput() AzureFirewallNatRCActionOutput
	ToAzureFirewallNatRCActionOutputWithContext(context.Context) AzureFirewallNatRCActionOutput
}

// AzureFirewall NAT Rule Collection Action.
type AzureFirewallNatRCActionArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AzureFirewallNatRCActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRCAction)(nil)).Elem()
}

func (i AzureFirewallNatRCActionArgs) ToAzureFirewallNatRCActionOutput() AzureFirewallNatRCActionOutput {
	return i.ToAzureFirewallNatRCActionOutputWithContext(context.Background())
}

func (i AzureFirewallNatRCActionArgs) ToAzureFirewallNatRCActionOutputWithContext(ctx context.Context) AzureFirewallNatRCActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRCActionOutput)
}

func (i AzureFirewallNatRCActionArgs) ToAzureFirewallNatRCActionPtrOutput() AzureFirewallNatRCActionPtrOutput {
	return i.ToAzureFirewallNatRCActionPtrOutputWithContext(context.Background())
}

func (i AzureFirewallNatRCActionArgs) ToAzureFirewallNatRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallNatRCActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRCActionOutput).ToAzureFirewallNatRCActionPtrOutputWithContext(ctx)
}

// AzureFirewallNatRCActionPtrInput is an input type that accepts AzureFirewallNatRCActionArgs, AzureFirewallNatRCActionPtr and AzureFirewallNatRCActionPtrOutput values.
// You can construct a concrete instance of `AzureFirewallNatRCActionPtrInput` via:
//
//          AzureFirewallNatRCActionArgs{...}
//
//  or:
//
//          nil
type AzureFirewallNatRCActionPtrInput interface {
	pulumi.Input

	ToAzureFirewallNatRCActionPtrOutput() AzureFirewallNatRCActionPtrOutput
	ToAzureFirewallNatRCActionPtrOutputWithContext(context.Context) AzureFirewallNatRCActionPtrOutput
}

type azureFirewallNatRCActionPtrType AzureFirewallNatRCActionArgs

func AzureFirewallNatRCActionPtr(v *AzureFirewallNatRCActionArgs) AzureFirewallNatRCActionPtrInput {
	return (*azureFirewallNatRCActionPtrType)(v)
}

func (*azureFirewallNatRCActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallNatRCAction)(nil)).Elem()
}

func (i *azureFirewallNatRCActionPtrType) ToAzureFirewallNatRCActionPtrOutput() AzureFirewallNatRCActionPtrOutput {
	return i.ToAzureFirewallNatRCActionPtrOutputWithContext(context.Background())
}

func (i *azureFirewallNatRCActionPtrType) ToAzureFirewallNatRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallNatRCActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRCActionPtrOutput)
}

// AzureFirewall NAT Rule Collection Action.
type AzureFirewallNatRCActionOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRCActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRCAction)(nil)).Elem()
}

func (o AzureFirewallNatRCActionOutput) ToAzureFirewallNatRCActionOutput() AzureFirewallNatRCActionOutput {
	return o
}

func (o AzureFirewallNatRCActionOutput) ToAzureFirewallNatRCActionOutputWithContext(ctx context.Context) AzureFirewallNatRCActionOutput {
	return o
}

func (o AzureFirewallNatRCActionOutput) ToAzureFirewallNatRCActionPtrOutput() AzureFirewallNatRCActionPtrOutput {
	return o.ToAzureFirewallNatRCActionPtrOutputWithContext(context.Background())
}

func (o AzureFirewallNatRCActionOutput) ToAzureFirewallNatRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallNatRCActionPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRCAction) *AzureFirewallNatRCAction {
		return &v
	}).(AzureFirewallNatRCActionPtrOutput)
}

// The type of action.
func (o AzureFirewallNatRCActionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRCAction) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AzureFirewallNatRCActionPtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRCActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallNatRCAction)(nil)).Elem()
}

func (o AzureFirewallNatRCActionPtrOutput) ToAzureFirewallNatRCActionPtrOutput() AzureFirewallNatRCActionPtrOutput {
	return o
}

func (o AzureFirewallNatRCActionPtrOutput) ToAzureFirewallNatRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallNatRCActionPtrOutput {
	return o
}

func (o AzureFirewallNatRCActionPtrOutput) Elem() AzureFirewallNatRCActionOutput {
	return o.ApplyT(func(v *AzureFirewallNatRCAction) AzureFirewallNatRCAction { return *v }).(AzureFirewallNatRCActionOutput)
}

// The type of action.
func (o AzureFirewallNatRCActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallNatRCAction) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// AzureFirewall NAT Rule Collection Action.
type AzureFirewallNatRCActionResponse struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// AzureFirewallNatRCActionResponseInput is an input type that accepts AzureFirewallNatRCActionResponseArgs and AzureFirewallNatRCActionResponseOutput values.
// You can construct a concrete instance of `AzureFirewallNatRCActionResponseInput` via:
//
//          AzureFirewallNatRCActionResponseArgs{...}
type AzureFirewallNatRCActionResponseInput interface {
	pulumi.Input

	ToAzureFirewallNatRCActionResponseOutput() AzureFirewallNatRCActionResponseOutput
	ToAzureFirewallNatRCActionResponseOutputWithContext(context.Context) AzureFirewallNatRCActionResponseOutput
}

// AzureFirewall NAT Rule Collection Action.
type AzureFirewallNatRCActionResponseArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AzureFirewallNatRCActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRCActionResponse)(nil)).Elem()
}

func (i AzureFirewallNatRCActionResponseArgs) ToAzureFirewallNatRCActionResponseOutput() AzureFirewallNatRCActionResponseOutput {
	return i.ToAzureFirewallNatRCActionResponseOutputWithContext(context.Background())
}

func (i AzureFirewallNatRCActionResponseArgs) ToAzureFirewallNatRCActionResponseOutputWithContext(ctx context.Context) AzureFirewallNatRCActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRCActionResponseOutput)
}

func (i AzureFirewallNatRCActionResponseArgs) ToAzureFirewallNatRCActionResponsePtrOutput() AzureFirewallNatRCActionResponsePtrOutput {
	return i.ToAzureFirewallNatRCActionResponsePtrOutputWithContext(context.Background())
}

func (i AzureFirewallNatRCActionResponseArgs) ToAzureFirewallNatRCActionResponsePtrOutputWithContext(ctx context.Context) AzureFirewallNatRCActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRCActionResponseOutput).ToAzureFirewallNatRCActionResponsePtrOutputWithContext(ctx)
}

// AzureFirewallNatRCActionResponsePtrInput is an input type that accepts AzureFirewallNatRCActionResponseArgs, AzureFirewallNatRCActionResponsePtr and AzureFirewallNatRCActionResponsePtrOutput values.
// You can construct a concrete instance of `AzureFirewallNatRCActionResponsePtrInput` via:
//
//          AzureFirewallNatRCActionResponseArgs{...}
//
//  or:
//
//          nil
type AzureFirewallNatRCActionResponsePtrInput interface {
	pulumi.Input

	ToAzureFirewallNatRCActionResponsePtrOutput() AzureFirewallNatRCActionResponsePtrOutput
	ToAzureFirewallNatRCActionResponsePtrOutputWithContext(context.Context) AzureFirewallNatRCActionResponsePtrOutput
}

type azureFirewallNatRCActionResponsePtrType AzureFirewallNatRCActionResponseArgs

func AzureFirewallNatRCActionResponsePtr(v *AzureFirewallNatRCActionResponseArgs) AzureFirewallNatRCActionResponsePtrInput {
	return (*azureFirewallNatRCActionResponsePtrType)(v)
}

func (*azureFirewallNatRCActionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallNatRCActionResponse)(nil)).Elem()
}

func (i *azureFirewallNatRCActionResponsePtrType) ToAzureFirewallNatRCActionResponsePtrOutput() AzureFirewallNatRCActionResponsePtrOutput {
	return i.ToAzureFirewallNatRCActionResponsePtrOutputWithContext(context.Background())
}

func (i *azureFirewallNatRCActionResponsePtrType) ToAzureFirewallNatRCActionResponsePtrOutputWithContext(ctx context.Context) AzureFirewallNatRCActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRCActionResponsePtrOutput)
}

// AzureFirewall NAT Rule Collection Action.
type AzureFirewallNatRCActionResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRCActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRCActionResponse)(nil)).Elem()
}

func (o AzureFirewallNatRCActionResponseOutput) ToAzureFirewallNatRCActionResponseOutput() AzureFirewallNatRCActionResponseOutput {
	return o
}

func (o AzureFirewallNatRCActionResponseOutput) ToAzureFirewallNatRCActionResponseOutputWithContext(ctx context.Context) AzureFirewallNatRCActionResponseOutput {
	return o
}

func (o AzureFirewallNatRCActionResponseOutput) ToAzureFirewallNatRCActionResponsePtrOutput() AzureFirewallNatRCActionResponsePtrOutput {
	return o.ToAzureFirewallNatRCActionResponsePtrOutputWithContext(context.Background())
}

func (o AzureFirewallNatRCActionResponseOutput) ToAzureFirewallNatRCActionResponsePtrOutputWithContext(ctx context.Context) AzureFirewallNatRCActionResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRCActionResponse) *AzureFirewallNatRCActionResponse {
		return &v
	}).(AzureFirewallNatRCActionResponsePtrOutput)
}

// The type of action.
func (o AzureFirewallNatRCActionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRCActionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AzureFirewallNatRCActionResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRCActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallNatRCActionResponse)(nil)).Elem()
}

func (o AzureFirewallNatRCActionResponsePtrOutput) ToAzureFirewallNatRCActionResponsePtrOutput() AzureFirewallNatRCActionResponsePtrOutput {
	return o
}

func (o AzureFirewallNatRCActionResponsePtrOutput) ToAzureFirewallNatRCActionResponsePtrOutputWithContext(ctx context.Context) AzureFirewallNatRCActionResponsePtrOutput {
	return o
}

func (o AzureFirewallNatRCActionResponsePtrOutput) Elem() AzureFirewallNatRCActionResponseOutput {
	return o.ApplyT(func(v *AzureFirewallNatRCActionResponse) AzureFirewallNatRCActionResponse { return *v }).(AzureFirewallNatRCActionResponseOutput)
}

// The type of action.
func (o AzureFirewallNatRCActionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallNatRCActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of a NAT rule.
type AzureFirewallNatRule struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses for this rule.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Name of the NAT rule.
	Name *string `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
	Protocols []string `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// The translated address for this NAT rule.
	TranslatedAddress *string `pulumi:"translatedAddress"`
	// The translated port for this NAT rule.
	TranslatedPort *string `pulumi:"translatedPort"`
}

// AzureFirewallNatRuleInput is an input type that accepts AzureFirewallNatRuleArgs and AzureFirewallNatRuleOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleInput` via:
//
//          AzureFirewallNatRuleArgs{...}
type AzureFirewallNatRuleInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleOutput() AzureFirewallNatRuleOutput
	ToAzureFirewallNatRuleOutputWithContext(context.Context) AzureFirewallNatRuleOutput
}

// Properties of a NAT rule.
type AzureFirewallNatRuleArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses for this rule.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Name of the NAT rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// The translated address for this NAT rule.
	TranslatedAddress pulumi.StringPtrInput `pulumi:"translatedAddress"`
	// The translated port for this NAT rule.
	TranslatedPort pulumi.StringPtrInput `pulumi:"translatedPort"`
}

func (AzureFirewallNatRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRule)(nil)).Elem()
}

func (i AzureFirewallNatRuleArgs) ToAzureFirewallNatRuleOutput() AzureFirewallNatRuleOutput {
	return i.ToAzureFirewallNatRuleOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleArgs) ToAzureFirewallNatRuleOutputWithContext(ctx context.Context) AzureFirewallNatRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleOutput)
}

// AzureFirewallNatRuleArrayInput is an input type that accepts AzureFirewallNatRuleArray and AzureFirewallNatRuleArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleArrayInput` via:
//
//          AzureFirewallNatRuleArray{ AzureFirewallNatRuleArgs{...} }
type AzureFirewallNatRuleArrayInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleArrayOutput() AzureFirewallNatRuleArrayOutput
	ToAzureFirewallNatRuleArrayOutputWithContext(context.Context) AzureFirewallNatRuleArrayOutput
}

type AzureFirewallNatRuleArray []AzureFirewallNatRuleInput

func (AzureFirewallNatRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNatRule)(nil)).Elem()
}

func (i AzureFirewallNatRuleArray) ToAzureFirewallNatRuleArrayOutput() AzureFirewallNatRuleArrayOutput {
	return i.ToAzureFirewallNatRuleArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleArray) ToAzureFirewallNatRuleArrayOutputWithContext(ctx context.Context) AzureFirewallNatRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleArrayOutput)
}

// Properties of a NAT rule.
type AzureFirewallNatRuleOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRule)(nil)).Elem()
}

func (o AzureFirewallNatRuleOutput) ToAzureFirewallNatRuleOutput() AzureFirewallNatRuleOutput {
	return o
}

func (o AzureFirewallNatRuleOutput) ToAzureFirewallNatRuleOutputWithContext(ctx context.Context) AzureFirewallNatRuleOutput {
	return o
}

// Description of the rule.
func (o AzureFirewallNatRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses for this rule.
func (o AzureFirewallNatRuleOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o AzureFirewallNatRuleOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Name of the NAT rule.
func (o AzureFirewallNatRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
func (o AzureFirewallNatRuleOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// List of source IP addresses for this rule.
func (o AzureFirewallNatRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// The translated address for this NAT rule.
func (o AzureFirewallNatRuleOutput) TranslatedAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) *string { return v.TranslatedAddress }).(pulumi.StringPtrOutput)
}

// The translated port for this NAT rule.
func (o AzureFirewallNatRuleOutput) TranslatedPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) *string { return v.TranslatedPort }).(pulumi.StringPtrOutput)
}

type AzureFirewallNatRuleArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNatRule)(nil)).Elem()
}

func (o AzureFirewallNatRuleArrayOutput) ToAzureFirewallNatRuleArrayOutput() AzureFirewallNatRuleArrayOutput {
	return o
}

func (o AzureFirewallNatRuleArrayOutput) ToAzureFirewallNatRuleArrayOutputWithContext(ctx context.Context) AzureFirewallNatRuleArrayOutput {
	return o
}

func (o AzureFirewallNatRuleArrayOutput) Index(i pulumi.IntInput) AzureFirewallNatRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNatRule {
		return vs[0].([]AzureFirewallNatRule)[vs[1].(int)]
	}).(AzureFirewallNatRuleOutput)
}

// NAT rule collection resource
type AzureFirewallNatRuleCollection struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the NAT rule collection.
	Properties *AzureFirewallNatRuleCollectionProperties `pulumi:"properties"`
}

// AzureFirewallNatRuleCollectionInput is an input type that accepts AzureFirewallNatRuleCollectionArgs and AzureFirewallNatRuleCollectionOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleCollectionInput` via:
//
//          AzureFirewallNatRuleCollectionArgs{...}
type AzureFirewallNatRuleCollectionInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleCollectionOutput() AzureFirewallNatRuleCollectionOutput
	ToAzureFirewallNatRuleCollectionOutputWithContext(context.Context) AzureFirewallNatRuleCollectionOutput
}

// NAT rule collection resource
type AzureFirewallNatRuleCollectionArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the NAT rule collection.
	Properties AzureFirewallNatRuleCollectionPropertiesPtrInput `pulumi:"properties"`
}

func (AzureFirewallNatRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRuleCollection)(nil)).Elem()
}

func (i AzureFirewallNatRuleCollectionArgs) ToAzureFirewallNatRuleCollectionOutput() AzureFirewallNatRuleCollectionOutput {
	return i.ToAzureFirewallNatRuleCollectionOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleCollectionArgs) ToAzureFirewallNatRuleCollectionOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleCollectionOutput)
}

// AzureFirewallNatRuleCollectionArrayInput is an input type that accepts AzureFirewallNatRuleCollectionArray and AzureFirewallNatRuleCollectionArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleCollectionArrayInput` via:
//
//          AzureFirewallNatRuleCollectionArray{ AzureFirewallNatRuleCollectionArgs{...} }
type AzureFirewallNatRuleCollectionArrayInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleCollectionArrayOutput() AzureFirewallNatRuleCollectionArrayOutput
	ToAzureFirewallNatRuleCollectionArrayOutputWithContext(context.Context) AzureFirewallNatRuleCollectionArrayOutput
}

type AzureFirewallNatRuleCollectionArray []AzureFirewallNatRuleCollectionInput

func (AzureFirewallNatRuleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNatRuleCollection)(nil)).Elem()
}

func (i AzureFirewallNatRuleCollectionArray) ToAzureFirewallNatRuleCollectionArrayOutput() AzureFirewallNatRuleCollectionArrayOutput {
	return i.ToAzureFirewallNatRuleCollectionArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleCollectionArray) ToAzureFirewallNatRuleCollectionArrayOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleCollectionArrayOutput)
}

// NAT rule collection resource
type AzureFirewallNatRuleCollectionOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRuleCollection)(nil)).Elem()
}

func (o AzureFirewallNatRuleCollectionOutput) ToAzureFirewallNatRuleCollectionOutput() AzureFirewallNatRuleCollectionOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionOutput) ToAzureFirewallNatRuleCollectionOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionOutput {
	return o
}

// Resource ID.
func (o AzureFirewallNatRuleCollectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AzureFirewallNatRuleCollectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the NAT rule collection.
func (o AzureFirewallNatRuleCollectionOutput) Properties() AzureFirewallNatRuleCollectionPropertiesPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollection) *AzureFirewallNatRuleCollectionProperties { return v.Properties }).(AzureFirewallNatRuleCollectionPropertiesPtrOutput)
}

type AzureFirewallNatRuleCollectionArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNatRuleCollection)(nil)).Elem()
}

func (o AzureFirewallNatRuleCollectionArrayOutput) ToAzureFirewallNatRuleCollectionArrayOutput() AzureFirewallNatRuleCollectionArrayOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionArrayOutput) ToAzureFirewallNatRuleCollectionArrayOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionArrayOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionArrayOutput) Index(i pulumi.IntInput) AzureFirewallNatRuleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNatRuleCollection {
		return vs[0].([]AzureFirewallNatRuleCollection)[vs[1].(int)]
	}).(AzureFirewallNatRuleCollectionOutput)
}

// Properties of the NAT rule collection.
type AzureFirewallNatRuleCollectionProperties struct {
	// The action type of a NAT rule collection
	Action *AzureFirewallNatRCAction `pulumi:"action"`
	// Priority of the NAT rule collection resource.
	Priority *int `pulumi:"priority"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Collection of rules used by a NAT rule collection.
	Rules []AzureFirewallNatRule `pulumi:"rules"`
}

// AzureFirewallNatRuleCollectionPropertiesInput is an input type that accepts AzureFirewallNatRuleCollectionPropertiesArgs and AzureFirewallNatRuleCollectionPropertiesOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleCollectionPropertiesInput` via:
//
//          AzureFirewallNatRuleCollectionPropertiesArgs{...}
type AzureFirewallNatRuleCollectionPropertiesInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleCollectionPropertiesOutput() AzureFirewallNatRuleCollectionPropertiesOutput
	ToAzureFirewallNatRuleCollectionPropertiesOutputWithContext(context.Context) AzureFirewallNatRuleCollectionPropertiesOutput
}

// Properties of the NAT rule collection.
type AzureFirewallNatRuleCollectionPropertiesArgs struct {
	// The action type of a NAT rule collection
	Action AzureFirewallNatRCActionPtrInput `pulumi:"action"`
	// Priority of the NAT rule collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Collection of rules used by a NAT rule collection.
	Rules AzureFirewallNatRuleArrayInput `pulumi:"rules"`
}

func (AzureFirewallNatRuleCollectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRuleCollectionProperties)(nil)).Elem()
}

func (i AzureFirewallNatRuleCollectionPropertiesArgs) ToAzureFirewallNatRuleCollectionPropertiesOutput() AzureFirewallNatRuleCollectionPropertiesOutput {
	return i.ToAzureFirewallNatRuleCollectionPropertiesOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleCollectionPropertiesArgs) ToAzureFirewallNatRuleCollectionPropertiesOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleCollectionPropertiesOutput)
}

func (i AzureFirewallNatRuleCollectionPropertiesArgs) ToAzureFirewallNatRuleCollectionPropertiesPtrOutput() AzureFirewallNatRuleCollectionPropertiesPtrOutput {
	return i.ToAzureFirewallNatRuleCollectionPropertiesPtrOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleCollectionPropertiesArgs) ToAzureFirewallNatRuleCollectionPropertiesPtrOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleCollectionPropertiesOutput).ToAzureFirewallNatRuleCollectionPropertiesPtrOutputWithContext(ctx)
}

// AzureFirewallNatRuleCollectionPropertiesPtrInput is an input type that accepts AzureFirewallNatRuleCollectionPropertiesArgs, AzureFirewallNatRuleCollectionPropertiesPtr and AzureFirewallNatRuleCollectionPropertiesPtrOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleCollectionPropertiesPtrInput` via:
//
//          AzureFirewallNatRuleCollectionPropertiesArgs{...}
//
//  or:
//
//          nil
type AzureFirewallNatRuleCollectionPropertiesPtrInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleCollectionPropertiesPtrOutput() AzureFirewallNatRuleCollectionPropertiesPtrOutput
	ToAzureFirewallNatRuleCollectionPropertiesPtrOutputWithContext(context.Context) AzureFirewallNatRuleCollectionPropertiesPtrOutput
}

type azureFirewallNatRuleCollectionPropertiesPtrType AzureFirewallNatRuleCollectionPropertiesArgs

func AzureFirewallNatRuleCollectionPropertiesPtr(v *AzureFirewallNatRuleCollectionPropertiesArgs) AzureFirewallNatRuleCollectionPropertiesPtrInput {
	return (*azureFirewallNatRuleCollectionPropertiesPtrType)(v)
}

func (*azureFirewallNatRuleCollectionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallNatRuleCollectionProperties)(nil)).Elem()
}

func (i *azureFirewallNatRuleCollectionPropertiesPtrType) ToAzureFirewallNatRuleCollectionPropertiesPtrOutput() AzureFirewallNatRuleCollectionPropertiesPtrOutput {
	return i.ToAzureFirewallNatRuleCollectionPropertiesPtrOutputWithContext(context.Background())
}

func (i *azureFirewallNatRuleCollectionPropertiesPtrType) ToAzureFirewallNatRuleCollectionPropertiesPtrOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleCollectionPropertiesPtrOutput)
}

// Properties of the NAT rule collection.
type AzureFirewallNatRuleCollectionPropertiesOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleCollectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRuleCollectionProperties)(nil)).Elem()
}

func (o AzureFirewallNatRuleCollectionPropertiesOutput) ToAzureFirewallNatRuleCollectionPropertiesOutput() AzureFirewallNatRuleCollectionPropertiesOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionPropertiesOutput) ToAzureFirewallNatRuleCollectionPropertiesOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionPropertiesOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionPropertiesOutput) ToAzureFirewallNatRuleCollectionPropertiesPtrOutput() AzureFirewallNatRuleCollectionPropertiesPtrOutput {
	return o.ToAzureFirewallNatRuleCollectionPropertiesPtrOutputWithContext(context.Background())
}

func (o AzureFirewallNatRuleCollectionPropertiesOutput) ToAzureFirewallNatRuleCollectionPropertiesPtrOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionPropertiesPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionProperties) *AzureFirewallNatRuleCollectionProperties {
		return &v
	}).(AzureFirewallNatRuleCollectionPropertiesPtrOutput)
}

// The action type of a NAT rule collection
func (o AzureFirewallNatRuleCollectionPropertiesOutput) Action() AzureFirewallNatRCActionPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionProperties) *AzureFirewallNatRCAction { return v.Action }).(AzureFirewallNatRCActionPtrOutput)
}

// Priority of the NAT rule collection resource.
func (o AzureFirewallNatRuleCollectionPropertiesOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionProperties) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallNatRuleCollectionPropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Collection of rules used by a NAT rule collection.
func (o AzureFirewallNatRuleCollectionPropertiesOutput) Rules() AzureFirewallNatRuleArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionProperties) []AzureFirewallNatRule { return v.Rules }).(AzureFirewallNatRuleArrayOutput)
}

type AzureFirewallNatRuleCollectionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleCollectionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallNatRuleCollectionProperties)(nil)).Elem()
}

func (o AzureFirewallNatRuleCollectionPropertiesPtrOutput) ToAzureFirewallNatRuleCollectionPropertiesPtrOutput() AzureFirewallNatRuleCollectionPropertiesPtrOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionPropertiesPtrOutput) ToAzureFirewallNatRuleCollectionPropertiesPtrOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionPropertiesPtrOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionPropertiesPtrOutput) Elem() AzureFirewallNatRuleCollectionPropertiesOutput {
	return o.ApplyT(func(v *AzureFirewallNatRuleCollectionProperties) AzureFirewallNatRuleCollectionProperties { return *v }).(AzureFirewallNatRuleCollectionPropertiesOutput)
}

// The action type of a NAT rule collection
func (o AzureFirewallNatRuleCollectionPropertiesPtrOutput) Action() AzureFirewallNatRCActionPtrOutput {
	return o.ApplyT(func(v *AzureFirewallNatRuleCollectionProperties) *AzureFirewallNatRCAction {
		if v == nil {
			return nil
		}
		return v.Action
	}).(AzureFirewallNatRCActionPtrOutput)
}

// Priority of the NAT rule collection resource.
func (o AzureFirewallNatRuleCollectionPropertiesPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureFirewallNatRuleCollectionProperties) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallNatRuleCollectionPropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallNatRuleCollectionProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Collection of rules used by a NAT rule collection.
func (o AzureFirewallNatRuleCollectionPropertiesPtrOutput) Rules() AzureFirewallNatRuleArrayOutput {
	return o.ApplyT(func(v *AzureFirewallNatRuleCollectionProperties) []AzureFirewallNatRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(AzureFirewallNatRuleArrayOutput)
}

// Properties of the NAT rule collection.
type AzureFirewallNatRuleCollectionPropertiesResponse struct {
	// The action type of a NAT rule collection
	Action *AzureFirewallNatRCActionResponse `pulumi:"action"`
	// Priority of the NAT rule collection resource.
	Priority *int `pulumi:"priority"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Collection of rules used by a NAT rule collection.
	Rules []AzureFirewallNatRuleResponse `pulumi:"rules"`
}

// AzureFirewallNatRuleCollectionPropertiesResponseInput is an input type that accepts AzureFirewallNatRuleCollectionPropertiesResponseArgs and AzureFirewallNatRuleCollectionPropertiesResponseOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleCollectionPropertiesResponseInput` via:
//
//          AzureFirewallNatRuleCollectionPropertiesResponseArgs{...}
type AzureFirewallNatRuleCollectionPropertiesResponseInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleCollectionPropertiesResponseOutput() AzureFirewallNatRuleCollectionPropertiesResponseOutput
	ToAzureFirewallNatRuleCollectionPropertiesResponseOutputWithContext(context.Context) AzureFirewallNatRuleCollectionPropertiesResponseOutput
}

// Properties of the NAT rule collection.
type AzureFirewallNatRuleCollectionPropertiesResponseArgs struct {
	// The action type of a NAT rule collection
	Action AzureFirewallNatRCActionResponsePtrInput `pulumi:"action"`
	// Priority of the NAT rule collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Collection of rules used by a NAT rule collection.
	Rules AzureFirewallNatRuleResponseArrayInput `pulumi:"rules"`
}

func (AzureFirewallNatRuleCollectionPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRuleCollectionPropertiesResponse)(nil)).Elem()
}

func (i AzureFirewallNatRuleCollectionPropertiesResponseArgs) ToAzureFirewallNatRuleCollectionPropertiesResponseOutput() AzureFirewallNatRuleCollectionPropertiesResponseOutput {
	return i.ToAzureFirewallNatRuleCollectionPropertiesResponseOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleCollectionPropertiesResponseArgs) ToAzureFirewallNatRuleCollectionPropertiesResponseOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleCollectionPropertiesResponseOutput)
}

func (i AzureFirewallNatRuleCollectionPropertiesResponseArgs) ToAzureFirewallNatRuleCollectionPropertiesResponsePtrOutput() AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput {
	return i.ToAzureFirewallNatRuleCollectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleCollectionPropertiesResponseArgs) ToAzureFirewallNatRuleCollectionPropertiesResponsePtrOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleCollectionPropertiesResponseOutput).ToAzureFirewallNatRuleCollectionPropertiesResponsePtrOutputWithContext(ctx)
}

// AzureFirewallNatRuleCollectionPropertiesResponsePtrInput is an input type that accepts AzureFirewallNatRuleCollectionPropertiesResponseArgs, AzureFirewallNatRuleCollectionPropertiesResponsePtr and AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleCollectionPropertiesResponsePtrInput` via:
//
//          AzureFirewallNatRuleCollectionPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type AzureFirewallNatRuleCollectionPropertiesResponsePtrInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleCollectionPropertiesResponsePtrOutput() AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput
	ToAzureFirewallNatRuleCollectionPropertiesResponsePtrOutputWithContext(context.Context) AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput
}

type azureFirewallNatRuleCollectionPropertiesResponsePtrType AzureFirewallNatRuleCollectionPropertiesResponseArgs

func AzureFirewallNatRuleCollectionPropertiesResponsePtr(v *AzureFirewallNatRuleCollectionPropertiesResponseArgs) AzureFirewallNatRuleCollectionPropertiesResponsePtrInput {
	return (*azureFirewallNatRuleCollectionPropertiesResponsePtrType)(v)
}

func (*azureFirewallNatRuleCollectionPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallNatRuleCollectionPropertiesResponse)(nil)).Elem()
}

func (i *azureFirewallNatRuleCollectionPropertiesResponsePtrType) ToAzureFirewallNatRuleCollectionPropertiesResponsePtrOutput() AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput {
	return i.ToAzureFirewallNatRuleCollectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *azureFirewallNatRuleCollectionPropertiesResponsePtrType) ToAzureFirewallNatRuleCollectionPropertiesResponsePtrOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput)
}

// Properties of the NAT rule collection.
type AzureFirewallNatRuleCollectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleCollectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRuleCollectionPropertiesResponse)(nil)).Elem()
}

func (o AzureFirewallNatRuleCollectionPropertiesResponseOutput) ToAzureFirewallNatRuleCollectionPropertiesResponseOutput() AzureFirewallNatRuleCollectionPropertiesResponseOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionPropertiesResponseOutput) ToAzureFirewallNatRuleCollectionPropertiesResponseOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionPropertiesResponseOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionPropertiesResponseOutput) ToAzureFirewallNatRuleCollectionPropertiesResponsePtrOutput() AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput {
	return o.ToAzureFirewallNatRuleCollectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AzureFirewallNatRuleCollectionPropertiesResponseOutput) ToAzureFirewallNatRuleCollectionPropertiesResponsePtrOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionPropertiesResponse) *AzureFirewallNatRuleCollectionPropertiesResponse {
		return &v
	}).(AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput)
}

// The action type of a NAT rule collection
func (o AzureFirewallNatRuleCollectionPropertiesResponseOutput) Action() AzureFirewallNatRCActionResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionPropertiesResponse) *AzureFirewallNatRCActionResponse {
		return v.Action
	}).(AzureFirewallNatRCActionResponsePtrOutput)
}

// Priority of the NAT rule collection resource.
func (o AzureFirewallNatRuleCollectionPropertiesResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionPropertiesResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallNatRuleCollectionPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Collection of rules used by a NAT rule collection.
func (o AzureFirewallNatRuleCollectionPropertiesResponseOutput) Rules() AzureFirewallNatRuleResponseArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionPropertiesResponse) []AzureFirewallNatRuleResponse {
		return v.Rules
	}).(AzureFirewallNatRuleResponseArrayOutput)
}

type AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallNatRuleCollectionPropertiesResponse)(nil)).Elem()
}

func (o AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput) ToAzureFirewallNatRuleCollectionPropertiesResponsePtrOutput() AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput) ToAzureFirewallNatRuleCollectionPropertiesResponsePtrOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput) Elem() AzureFirewallNatRuleCollectionPropertiesResponseOutput {
	return o.ApplyT(func(v *AzureFirewallNatRuleCollectionPropertiesResponse) AzureFirewallNatRuleCollectionPropertiesResponse {
		return *v
	}).(AzureFirewallNatRuleCollectionPropertiesResponseOutput)
}

// The action type of a NAT rule collection
func (o AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput) Action() AzureFirewallNatRCActionResponsePtrOutput {
	return o.ApplyT(func(v *AzureFirewallNatRuleCollectionPropertiesResponse) *AzureFirewallNatRCActionResponse {
		if v == nil {
			return nil
		}
		return v.Action
	}).(AzureFirewallNatRCActionResponsePtrOutput)
}

// Priority of the NAT rule collection resource.
func (o AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureFirewallNatRuleCollectionPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallNatRuleCollectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Collection of rules used by a NAT rule collection.
func (o AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput) Rules() AzureFirewallNatRuleResponseArrayOutput {
	return o.ApplyT(func(v *AzureFirewallNatRuleCollectionPropertiesResponse) []AzureFirewallNatRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(AzureFirewallNatRuleResponseArrayOutput)
}

// NAT rule collection resource
type AzureFirewallNatRuleCollectionResponse struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the NAT rule collection.
	Properties *AzureFirewallNatRuleCollectionPropertiesResponse `pulumi:"properties"`
}

// AzureFirewallNatRuleCollectionResponseInput is an input type that accepts AzureFirewallNatRuleCollectionResponseArgs and AzureFirewallNatRuleCollectionResponseOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleCollectionResponseInput` via:
//
//          AzureFirewallNatRuleCollectionResponseArgs{...}
type AzureFirewallNatRuleCollectionResponseInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleCollectionResponseOutput() AzureFirewallNatRuleCollectionResponseOutput
	ToAzureFirewallNatRuleCollectionResponseOutputWithContext(context.Context) AzureFirewallNatRuleCollectionResponseOutput
}

// NAT rule collection resource
type AzureFirewallNatRuleCollectionResponseArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the NAT rule collection.
	Properties AzureFirewallNatRuleCollectionPropertiesResponsePtrInput `pulumi:"properties"`
}

func (AzureFirewallNatRuleCollectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRuleCollectionResponse)(nil)).Elem()
}

func (i AzureFirewallNatRuleCollectionResponseArgs) ToAzureFirewallNatRuleCollectionResponseOutput() AzureFirewallNatRuleCollectionResponseOutput {
	return i.ToAzureFirewallNatRuleCollectionResponseOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleCollectionResponseArgs) ToAzureFirewallNatRuleCollectionResponseOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleCollectionResponseOutput)
}

// AzureFirewallNatRuleCollectionResponseArrayInput is an input type that accepts AzureFirewallNatRuleCollectionResponseArray and AzureFirewallNatRuleCollectionResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleCollectionResponseArrayInput` via:
//
//          AzureFirewallNatRuleCollectionResponseArray{ AzureFirewallNatRuleCollectionResponseArgs{...} }
type AzureFirewallNatRuleCollectionResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleCollectionResponseArrayOutput() AzureFirewallNatRuleCollectionResponseArrayOutput
	ToAzureFirewallNatRuleCollectionResponseArrayOutputWithContext(context.Context) AzureFirewallNatRuleCollectionResponseArrayOutput
}

type AzureFirewallNatRuleCollectionResponseArray []AzureFirewallNatRuleCollectionResponseInput

func (AzureFirewallNatRuleCollectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNatRuleCollectionResponse)(nil)).Elem()
}

func (i AzureFirewallNatRuleCollectionResponseArray) ToAzureFirewallNatRuleCollectionResponseArrayOutput() AzureFirewallNatRuleCollectionResponseArrayOutput {
	return i.ToAzureFirewallNatRuleCollectionResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleCollectionResponseArray) ToAzureFirewallNatRuleCollectionResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleCollectionResponseArrayOutput)
}

// NAT rule collection resource
type AzureFirewallNatRuleCollectionResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleCollectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRuleCollectionResponse)(nil)).Elem()
}

func (o AzureFirewallNatRuleCollectionResponseOutput) ToAzureFirewallNatRuleCollectionResponseOutput() AzureFirewallNatRuleCollectionResponseOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionResponseOutput) ToAzureFirewallNatRuleCollectionResponseOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionResponseOutput {
	return o
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o AzureFirewallNatRuleCollectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o AzureFirewallNatRuleCollectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AzureFirewallNatRuleCollectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the NAT rule collection.
func (o AzureFirewallNatRuleCollectionResponseOutput) Properties() AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionResponse) *AzureFirewallNatRuleCollectionPropertiesResponse {
		return v.Properties
	}).(AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput)
}

type AzureFirewallNatRuleCollectionResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleCollectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNatRuleCollectionResponse)(nil)).Elem()
}

func (o AzureFirewallNatRuleCollectionResponseArrayOutput) ToAzureFirewallNatRuleCollectionResponseArrayOutput() AzureFirewallNatRuleCollectionResponseArrayOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionResponseArrayOutput) ToAzureFirewallNatRuleCollectionResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionResponseArrayOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallNatRuleCollectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNatRuleCollectionResponse {
		return vs[0].([]AzureFirewallNatRuleCollectionResponse)[vs[1].(int)]
	}).(AzureFirewallNatRuleCollectionResponseOutput)
}

// Properties of a NAT rule.
type AzureFirewallNatRuleResponse struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses for this rule.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Name of the NAT rule.
	Name *string `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
	Protocols []string `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// The translated address for this NAT rule.
	TranslatedAddress *string `pulumi:"translatedAddress"`
	// The translated port for this NAT rule.
	TranslatedPort *string `pulumi:"translatedPort"`
}

// AzureFirewallNatRuleResponseInput is an input type that accepts AzureFirewallNatRuleResponseArgs and AzureFirewallNatRuleResponseOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleResponseInput` via:
//
//          AzureFirewallNatRuleResponseArgs{...}
type AzureFirewallNatRuleResponseInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleResponseOutput() AzureFirewallNatRuleResponseOutput
	ToAzureFirewallNatRuleResponseOutputWithContext(context.Context) AzureFirewallNatRuleResponseOutput
}

// Properties of a NAT rule.
type AzureFirewallNatRuleResponseArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses for this rule.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Name of the NAT rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// The translated address for this NAT rule.
	TranslatedAddress pulumi.StringPtrInput `pulumi:"translatedAddress"`
	// The translated port for this NAT rule.
	TranslatedPort pulumi.StringPtrInput `pulumi:"translatedPort"`
}

func (AzureFirewallNatRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRuleResponse)(nil)).Elem()
}

func (i AzureFirewallNatRuleResponseArgs) ToAzureFirewallNatRuleResponseOutput() AzureFirewallNatRuleResponseOutput {
	return i.ToAzureFirewallNatRuleResponseOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleResponseArgs) ToAzureFirewallNatRuleResponseOutputWithContext(ctx context.Context) AzureFirewallNatRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleResponseOutput)
}

// AzureFirewallNatRuleResponseArrayInput is an input type that accepts AzureFirewallNatRuleResponseArray and AzureFirewallNatRuleResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleResponseArrayInput` via:
//
//          AzureFirewallNatRuleResponseArray{ AzureFirewallNatRuleResponseArgs{...} }
type AzureFirewallNatRuleResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleResponseArrayOutput() AzureFirewallNatRuleResponseArrayOutput
	ToAzureFirewallNatRuleResponseArrayOutputWithContext(context.Context) AzureFirewallNatRuleResponseArrayOutput
}

type AzureFirewallNatRuleResponseArray []AzureFirewallNatRuleResponseInput

func (AzureFirewallNatRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNatRuleResponse)(nil)).Elem()
}

func (i AzureFirewallNatRuleResponseArray) ToAzureFirewallNatRuleResponseArrayOutput() AzureFirewallNatRuleResponseArrayOutput {
	return i.ToAzureFirewallNatRuleResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleResponseArray) ToAzureFirewallNatRuleResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNatRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleResponseArrayOutput)
}

// Properties of a NAT rule.
type AzureFirewallNatRuleResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRuleResponse)(nil)).Elem()
}

func (o AzureFirewallNatRuleResponseOutput) ToAzureFirewallNatRuleResponseOutput() AzureFirewallNatRuleResponseOutput {
	return o
}

func (o AzureFirewallNatRuleResponseOutput) ToAzureFirewallNatRuleResponseOutputWithContext(ctx context.Context) AzureFirewallNatRuleResponseOutput {
	return o
}

// Description of the rule.
func (o AzureFirewallNatRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses for this rule.
func (o AzureFirewallNatRuleResponseOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o AzureFirewallNatRuleResponseOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Name of the NAT rule.
func (o AzureFirewallNatRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
func (o AzureFirewallNatRuleResponseOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// List of source IP addresses for this rule.
func (o AzureFirewallNatRuleResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// The translated address for this NAT rule.
func (o AzureFirewallNatRuleResponseOutput) TranslatedAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) *string { return v.TranslatedAddress }).(pulumi.StringPtrOutput)
}

// The translated port for this NAT rule.
func (o AzureFirewallNatRuleResponseOutput) TranslatedPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) *string { return v.TranslatedPort }).(pulumi.StringPtrOutput)
}

type AzureFirewallNatRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNatRuleResponse)(nil)).Elem()
}

func (o AzureFirewallNatRuleResponseArrayOutput) ToAzureFirewallNatRuleResponseArrayOutput() AzureFirewallNatRuleResponseArrayOutput {
	return o
}

func (o AzureFirewallNatRuleResponseArrayOutput) ToAzureFirewallNatRuleResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNatRuleResponseArrayOutput {
	return o
}

func (o AzureFirewallNatRuleResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallNatRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNatRuleResponse {
		return vs[0].([]AzureFirewallNatRuleResponse)[vs[1].(int)]
	}).(AzureFirewallNatRuleResponseOutput)
}

// Properties of the network rule.
type AzureFirewallNetworkRule struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Name of the network rule.
	Name *string `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols.
	Protocols []string `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
}

// AzureFirewallNetworkRuleInput is an input type that accepts AzureFirewallNetworkRuleArgs and AzureFirewallNetworkRuleOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleInput` via:
//
//          AzureFirewallNetworkRuleArgs{...}
type AzureFirewallNetworkRuleInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleOutput() AzureFirewallNetworkRuleOutput
	ToAzureFirewallNetworkRuleOutputWithContext(context.Context) AzureFirewallNetworkRuleOutput
}

// Properties of the network rule.
type AzureFirewallNetworkRuleArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Name of the network rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
}

func (AzureFirewallNetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRule)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleArgs) ToAzureFirewallNetworkRuleOutput() AzureFirewallNetworkRuleOutput {
	return i.ToAzureFirewallNetworkRuleOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleArgs) ToAzureFirewallNetworkRuleOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleOutput)
}

// AzureFirewallNetworkRuleArrayInput is an input type that accepts AzureFirewallNetworkRuleArray and AzureFirewallNetworkRuleArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleArrayInput` via:
//
//          AzureFirewallNetworkRuleArray{ AzureFirewallNetworkRuleArgs{...} }
type AzureFirewallNetworkRuleArrayInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleArrayOutput() AzureFirewallNetworkRuleArrayOutput
	ToAzureFirewallNetworkRuleArrayOutputWithContext(context.Context) AzureFirewallNetworkRuleArrayOutput
}

type AzureFirewallNetworkRuleArray []AzureFirewallNetworkRuleInput

func (AzureFirewallNetworkRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRule)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleArray) ToAzureFirewallNetworkRuleArrayOutput() AzureFirewallNetworkRuleArrayOutput {
	return i.ToAzureFirewallNetworkRuleArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleArray) ToAzureFirewallNetworkRuleArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleArrayOutput)
}

// Properties of the network rule.
type AzureFirewallNetworkRuleOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRule)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleOutput) ToAzureFirewallNetworkRuleOutput() AzureFirewallNetworkRuleOutput {
	return o
}

func (o AzureFirewallNetworkRuleOutput) ToAzureFirewallNetworkRuleOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleOutput {
	return o
}

// Description of the rule.
func (o AzureFirewallNetworkRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses.
func (o AzureFirewallNetworkRuleOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o AzureFirewallNetworkRuleOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Name of the network rule.
func (o AzureFirewallNetworkRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of AzureFirewallNetworkRuleProtocols.
func (o AzureFirewallNetworkRuleOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// List of source IP addresses for this rule.
func (o AzureFirewallNetworkRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

type AzureFirewallNetworkRuleArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRule)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleArrayOutput) ToAzureFirewallNetworkRuleArrayOutput() AzureFirewallNetworkRuleArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleArrayOutput) ToAzureFirewallNetworkRuleArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleArrayOutput) Index(i pulumi.IntInput) AzureFirewallNetworkRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNetworkRule {
		return vs[0].([]AzureFirewallNetworkRule)[vs[1].(int)]
	}).(AzureFirewallNetworkRuleOutput)
}

// Network rule collection resource
type AzureFirewallNetworkRuleCollection struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the network rule collection.
	Properties *AzureFirewallNetworkRuleCollectionPropertiesFormat `pulumi:"properties"`
}

// AzureFirewallNetworkRuleCollectionInput is an input type that accepts AzureFirewallNetworkRuleCollectionArgs and AzureFirewallNetworkRuleCollectionOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleCollectionInput` via:
//
//          AzureFirewallNetworkRuleCollectionArgs{...}
type AzureFirewallNetworkRuleCollectionInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleCollectionOutput() AzureFirewallNetworkRuleCollectionOutput
	ToAzureFirewallNetworkRuleCollectionOutputWithContext(context.Context) AzureFirewallNetworkRuleCollectionOutput
}

// Network rule collection resource
type AzureFirewallNetworkRuleCollectionArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the network rule collection.
	Properties AzureFirewallNetworkRuleCollectionPropertiesFormatPtrInput `pulumi:"properties"`
}

func (AzureFirewallNetworkRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleCollection)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleCollectionArgs) ToAzureFirewallNetworkRuleCollectionOutput() AzureFirewallNetworkRuleCollectionOutput {
	return i.ToAzureFirewallNetworkRuleCollectionOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleCollectionArgs) ToAzureFirewallNetworkRuleCollectionOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleCollectionOutput)
}

// AzureFirewallNetworkRuleCollectionArrayInput is an input type that accepts AzureFirewallNetworkRuleCollectionArray and AzureFirewallNetworkRuleCollectionArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleCollectionArrayInput` via:
//
//          AzureFirewallNetworkRuleCollectionArray{ AzureFirewallNetworkRuleCollectionArgs{...} }
type AzureFirewallNetworkRuleCollectionArrayInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleCollectionArrayOutput() AzureFirewallNetworkRuleCollectionArrayOutput
	ToAzureFirewallNetworkRuleCollectionArrayOutputWithContext(context.Context) AzureFirewallNetworkRuleCollectionArrayOutput
}

type AzureFirewallNetworkRuleCollectionArray []AzureFirewallNetworkRuleCollectionInput

func (AzureFirewallNetworkRuleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRuleCollection)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleCollectionArray) ToAzureFirewallNetworkRuleCollectionArrayOutput() AzureFirewallNetworkRuleCollectionArrayOutput {
	return i.ToAzureFirewallNetworkRuleCollectionArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleCollectionArray) ToAzureFirewallNetworkRuleCollectionArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleCollectionArrayOutput)
}

// Network rule collection resource
type AzureFirewallNetworkRuleCollectionOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleCollection)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleCollectionOutput) ToAzureFirewallNetworkRuleCollectionOutput() AzureFirewallNetworkRuleCollectionOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionOutput) ToAzureFirewallNetworkRuleCollectionOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionOutput {
	return o
}

// Resource ID.
func (o AzureFirewallNetworkRuleCollectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AzureFirewallNetworkRuleCollectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the network rule collection.
func (o AzureFirewallNetworkRuleCollectionOutput) Properties() AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollection) *AzureFirewallNetworkRuleCollectionPropertiesFormat {
		return v.Properties
	}).(AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput)
}

type AzureFirewallNetworkRuleCollectionArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRuleCollection)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleCollectionArrayOutput) ToAzureFirewallNetworkRuleCollectionArrayOutput() AzureFirewallNetworkRuleCollectionArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionArrayOutput) ToAzureFirewallNetworkRuleCollectionArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionArrayOutput) Index(i pulumi.IntInput) AzureFirewallNetworkRuleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNetworkRuleCollection {
		return vs[0].([]AzureFirewallNetworkRuleCollection)[vs[1].(int)]
	}).(AzureFirewallNetworkRuleCollectionOutput)
}

// Properties of the network rule collection.
type AzureFirewallNetworkRuleCollectionPropertiesFormat struct {
	// The action type of a rule collection
	Action *AzureFirewallRCAction `pulumi:"action"`
	// Priority of the network rule collection resource.
	Priority *int `pulumi:"priority"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Collection of rules used by a network rule collection.
	Rules []AzureFirewallNetworkRule `pulumi:"rules"`
}

// AzureFirewallNetworkRuleCollectionPropertiesFormatInput is an input type that accepts AzureFirewallNetworkRuleCollectionPropertiesFormatArgs and AzureFirewallNetworkRuleCollectionPropertiesFormatOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleCollectionPropertiesFormatInput` via:
//
//          AzureFirewallNetworkRuleCollectionPropertiesFormatArgs{...}
type AzureFirewallNetworkRuleCollectionPropertiesFormatInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleCollectionPropertiesFormatOutput() AzureFirewallNetworkRuleCollectionPropertiesFormatOutput
	ToAzureFirewallNetworkRuleCollectionPropertiesFormatOutputWithContext(context.Context) AzureFirewallNetworkRuleCollectionPropertiesFormatOutput
}

// Properties of the network rule collection.
type AzureFirewallNetworkRuleCollectionPropertiesFormatArgs struct {
	// The action type of a rule collection
	Action AzureFirewallRCActionPtrInput `pulumi:"action"`
	// Priority of the network rule collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Collection of rules used by a network rule collection.
	Rules AzureFirewallNetworkRuleArrayInput `pulumi:"rules"`
}

func (AzureFirewallNetworkRuleCollectionPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleCollectionPropertiesFormat)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleCollectionPropertiesFormatArgs) ToAzureFirewallNetworkRuleCollectionPropertiesFormatOutput() AzureFirewallNetworkRuleCollectionPropertiesFormatOutput {
	return i.ToAzureFirewallNetworkRuleCollectionPropertiesFormatOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleCollectionPropertiesFormatArgs) ToAzureFirewallNetworkRuleCollectionPropertiesFormatOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleCollectionPropertiesFormatOutput)
}

func (i AzureFirewallNetworkRuleCollectionPropertiesFormatArgs) ToAzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput() AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput {
	return i.ToAzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleCollectionPropertiesFormatArgs) ToAzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleCollectionPropertiesFormatOutput).ToAzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutputWithContext(ctx)
}

// AzureFirewallNetworkRuleCollectionPropertiesFormatPtrInput is an input type that accepts AzureFirewallNetworkRuleCollectionPropertiesFormatArgs, AzureFirewallNetworkRuleCollectionPropertiesFormatPtr and AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleCollectionPropertiesFormatPtrInput` via:
//
//          AzureFirewallNetworkRuleCollectionPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type AzureFirewallNetworkRuleCollectionPropertiesFormatPtrInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput() AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput
	ToAzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutputWithContext(context.Context) AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput
}

type azureFirewallNetworkRuleCollectionPropertiesFormatPtrType AzureFirewallNetworkRuleCollectionPropertiesFormatArgs

func AzureFirewallNetworkRuleCollectionPropertiesFormatPtr(v *AzureFirewallNetworkRuleCollectionPropertiesFormatArgs) AzureFirewallNetworkRuleCollectionPropertiesFormatPtrInput {
	return (*azureFirewallNetworkRuleCollectionPropertiesFormatPtrType)(v)
}

func (*azureFirewallNetworkRuleCollectionPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallNetworkRuleCollectionPropertiesFormat)(nil)).Elem()
}

func (i *azureFirewallNetworkRuleCollectionPropertiesFormatPtrType) ToAzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput() AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput {
	return i.ToAzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *azureFirewallNetworkRuleCollectionPropertiesFormatPtrType) ToAzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput)
}

// Properties of the network rule collection.
type AzureFirewallNetworkRuleCollectionPropertiesFormatOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleCollectionPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleCollectionPropertiesFormat)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleCollectionPropertiesFormatOutput) ToAzureFirewallNetworkRuleCollectionPropertiesFormatOutput() AzureFirewallNetworkRuleCollectionPropertiesFormatOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionPropertiesFormatOutput) ToAzureFirewallNetworkRuleCollectionPropertiesFormatOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionPropertiesFormatOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionPropertiesFormatOutput) ToAzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput() AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput {
	return o.ToAzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o AzureFirewallNetworkRuleCollectionPropertiesFormatOutput) ToAzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionPropertiesFormat) *AzureFirewallNetworkRuleCollectionPropertiesFormat {
		return &v
	}).(AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput)
}

// The action type of a rule collection
func (o AzureFirewallNetworkRuleCollectionPropertiesFormatOutput) Action() AzureFirewallRCActionPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionPropertiesFormat) *AzureFirewallRCAction { return v.Action }).(AzureFirewallRCActionPtrOutput)
}

// Priority of the network rule collection resource.
func (o AzureFirewallNetworkRuleCollectionPropertiesFormatOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionPropertiesFormat) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallNetworkRuleCollectionPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Collection of rules used by a network rule collection.
func (o AzureFirewallNetworkRuleCollectionPropertiesFormatOutput) Rules() AzureFirewallNetworkRuleArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionPropertiesFormat) []AzureFirewallNetworkRule { return v.Rules }).(AzureFirewallNetworkRuleArrayOutput)
}

type AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallNetworkRuleCollectionPropertiesFormat)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput) ToAzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput() AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput) ToAzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput) Elem() AzureFirewallNetworkRuleCollectionPropertiesFormatOutput {
	return o.ApplyT(func(v *AzureFirewallNetworkRuleCollectionPropertiesFormat) AzureFirewallNetworkRuleCollectionPropertiesFormat {
		return *v
	}).(AzureFirewallNetworkRuleCollectionPropertiesFormatOutput)
}

// The action type of a rule collection
func (o AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput) Action() AzureFirewallRCActionPtrOutput {
	return o.ApplyT(func(v *AzureFirewallNetworkRuleCollectionPropertiesFormat) *AzureFirewallRCAction {
		if v == nil {
			return nil
		}
		return v.Action
	}).(AzureFirewallRCActionPtrOutput)
}

// Priority of the network rule collection resource.
func (o AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureFirewallNetworkRuleCollectionPropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallNetworkRuleCollectionPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Collection of rules used by a network rule collection.
func (o AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput) Rules() AzureFirewallNetworkRuleArrayOutput {
	return o.ApplyT(func(v *AzureFirewallNetworkRuleCollectionPropertiesFormat) []AzureFirewallNetworkRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(AzureFirewallNetworkRuleArrayOutput)
}

// Properties of the network rule collection.
type AzureFirewallNetworkRuleCollectionPropertiesFormatResponse struct {
	// The action type of a rule collection
	Action *AzureFirewallRCActionResponse `pulumi:"action"`
	// Priority of the network rule collection resource.
	Priority *int `pulumi:"priority"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Collection of rules used by a network rule collection.
	Rules []AzureFirewallNetworkRuleResponse `pulumi:"rules"`
}

// AzureFirewallNetworkRuleCollectionPropertiesFormatResponseInput is an input type that accepts AzureFirewallNetworkRuleCollectionPropertiesFormatResponseArgs and AzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleCollectionPropertiesFormatResponseInput` via:
//
//          AzureFirewallNetworkRuleCollectionPropertiesFormatResponseArgs{...}
type AzureFirewallNetworkRuleCollectionPropertiesFormatResponseInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput() AzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput
	ToAzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutputWithContext(context.Context) AzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput
}

// Properties of the network rule collection.
type AzureFirewallNetworkRuleCollectionPropertiesFormatResponseArgs struct {
	// The action type of a rule collection
	Action AzureFirewallRCActionResponsePtrInput `pulumi:"action"`
	// Priority of the network rule collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Collection of rules used by a network rule collection.
	Rules AzureFirewallNetworkRuleResponseArrayInput `pulumi:"rules"`
}

func (AzureFirewallNetworkRuleCollectionPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleCollectionPropertiesFormatResponse)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleCollectionPropertiesFormatResponseArgs) ToAzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput() AzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput {
	return i.ToAzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleCollectionPropertiesFormatResponseArgs) ToAzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput)
}

func (i AzureFirewallNetworkRuleCollectionPropertiesFormatResponseArgs) ToAzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput() AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput {
	return i.ToAzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleCollectionPropertiesFormatResponseArgs) ToAzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput).ToAzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrInput is an input type that accepts AzureFirewallNetworkRuleCollectionPropertiesFormatResponseArgs, AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtr and AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrInput` via:
//
//          AzureFirewallNetworkRuleCollectionPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput() AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput
	ToAzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutputWithContext(context.Context) AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput
}

type azureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrType AzureFirewallNetworkRuleCollectionPropertiesFormatResponseArgs

func AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtr(v *AzureFirewallNetworkRuleCollectionPropertiesFormatResponseArgs) AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrInput {
	return (*azureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrType)(v)
}

func (*azureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallNetworkRuleCollectionPropertiesFormatResponse)(nil)).Elem()
}

func (i *azureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrType) ToAzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput() AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput {
	return i.ToAzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *azureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrType) ToAzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput)
}

// Properties of the network rule collection.
type AzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleCollectionPropertiesFormatResponse)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput) ToAzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput() AzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput) ToAzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput) ToAzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput() AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput {
	return o.ToAzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o AzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput) ToAzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionPropertiesFormatResponse) *AzureFirewallNetworkRuleCollectionPropertiesFormatResponse {
		return &v
	}).(AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput)
}

// The action type of a rule collection
func (o AzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput) Action() AzureFirewallRCActionResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionPropertiesFormatResponse) *AzureFirewallRCActionResponse {
		return v.Action
	}).(AzureFirewallRCActionResponsePtrOutput)
}

// Priority of the network rule collection resource.
func (o AzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionPropertiesFormatResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Collection of rules used by a network rule collection.
func (o AzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput) Rules() AzureFirewallNetworkRuleResponseArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionPropertiesFormatResponse) []AzureFirewallNetworkRuleResponse {
		return v.Rules
	}).(AzureFirewallNetworkRuleResponseArrayOutput)
}

type AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallNetworkRuleCollectionPropertiesFormatResponse)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput) ToAzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput() AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput) ToAzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput) Elem() AzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *AzureFirewallNetworkRuleCollectionPropertiesFormatResponse) AzureFirewallNetworkRuleCollectionPropertiesFormatResponse {
		return *v
	}).(AzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput)
}

// The action type of a rule collection
func (o AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput) Action() AzureFirewallRCActionResponsePtrOutput {
	return o.ApplyT(func(v *AzureFirewallNetworkRuleCollectionPropertiesFormatResponse) *AzureFirewallRCActionResponse {
		if v == nil {
			return nil
		}
		return v.Action
	}).(AzureFirewallRCActionResponsePtrOutput)
}

// Priority of the network rule collection resource.
func (o AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureFirewallNetworkRuleCollectionPropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallNetworkRuleCollectionPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Collection of rules used by a network rule collection.
func (o AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput) Rules() AzureFirewallNetworkRuleResponseArrayOutput {
	return o.ApplyT(func(v *AzureFirewallNetworkRuleCollectionPropertiesFormatResponse) []AzureFirewallNetworkRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(AzureFirewallNetworkRuleResponseArrayOutput)
}

// Network rule collection resource
type AzureFirewallNetworkRuleCollectionResponse struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the network rule collection.
	Properties *AzureFirewallNetworkRuleCollectionPropertiesFormatResponse `pulumi:"properties"`
}

// AzureFirewallNetworkRuleCollectionResponseInput is an input type that accepts AzureFirewallNetworkRuleCollectionResponseArgs and AzureFirewallNetworkRuleCollectionResponseOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleCollectionResponseInput` via:
//
//          AzureFirewallNetworkRuleCollectionResponseArgs{...}
type AzureFirewallNetworkRuleCollectionResponseInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleCollectionResponseOutput() AzureFirewallNetworkRuleCollectionResponseOutput
	ToAzureFirewallNetworkRuleCollectionResponseOutputWithContext(context.Context) AzureFirewallNetworkRuleCollectionResponseOutput
}

// Network rule collection resource
type AzureFirewallNetworkRuleCollectionResponseArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the network rule collection.
	Properties AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (AzureFirewallNetworkRuleCollectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleCollectionResponse)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleCollectionResponseArgs) ToAzureFirewallNetworkRuleCollectionResponseOutput() AzureFirewallNetworkRuleCollectionResponseOutput {
	return i.ToAzureFirewallNetworkRuleCollectionResponseOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleCollectionResponseArgs) ToAzureFirewallNetworkRuleCollectionResponseOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleCollectionResponseOutput)
}

// AzureFirewallNetworkRuleCollectionResponseArrayInput is an input type that accepts AzureFirewallNetworkRuleCollectionResponseArray and AzureFirewallNetworkRuleCollectionResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleCollectionResponseArrayInput` via:
//
//          AzureFirewallNetworkRuleCollectionResponseArray{ AzureFirewallNetworkRuleCollectionResponseArgs{...} }
type AzureFirewallNetworkRuleCollectionResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleCollectionResponseArrayOutput() AzureFirewallNetworkRuleCollectionResponseArrayOutput
	ToAzureFirewallNetworkRuleCollectionResponseArrayOutputWithContext(context.Context) AzureFirewallNetworkRuleCollectionResponseArrayOutput
}

type AzureFirewallNetworkRuleCollectionResponseArray []AzureFirewallNetworkRuleCollectionResponseInput

func (AzureFirewallNetworkRuleCollectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRuleCollectionResponse)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleCollectionResponseArray) ToAzureFirewallNetworkRuleCollectionResponseArrayOutput() AzureFirewallNetworkRuleCollectionResponseArrayOutput {
	return i.ToAzureFirewallNetworkRuleCollectionResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleCollectionResponseArray) ToAzureFirewallNetworkRuleCollectionResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleCollectionResponseArrayOutput)
}

// Network rule collection resource
type AzureFirewallNetworkRuleCollectionResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleCollectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleCollectionResponse)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleCollectionResponseOutput) ToAzureFirewallNetworkRuleCollectionResponseOutput() AzureFirewallNetworkRuleCollectionResponseOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionResponseOutput) ToAzureFirewallNetworkRuleCollectionResponseOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionResponseOutput {
	return o
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the network rule collection.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) Properties() AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) *AzureFirewallNetworkRuleCollectionPropertiesFormatResponse {
		return v.Properties
	}).(AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput)
}

type AzureFirewallNetworkRuleCollectionResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleCollectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRuleCollectionResponse)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleCollectionResponseArrayOutput) ToAzureFirewallNetworkRuleCollectionResponseArrayOutput() AzureFirewallNetworkRuleCollectionResponseArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionResponseArrayOutput) ToAzureFirewallNetworkRuleCollectionResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionResponseArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallNetworkRuleCollectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNetworkRuleCollectionResponse {
		return vs[0].([]AzureFirewallNetworkRuleCollectionResponse)[vs[1].(int)]
	}).(AzureFirewallNetworkRuleCollectionResponseOutput)
}

// Properties of the network rule.
type AzureFirewallNetworkRuleResponse struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Name of the network rule.
	Name *string `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols.
	Protocols []string `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
}

// AzureFirewallNetworkRuleResponseInput is an input type that accepts AzureFirewallNetworkRuleResponseArgs and AzureFirewallNetworkRuleResponseOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleResponseInput` via:
//
//          AzureFirewallNetworkRuleResponseArgs{...}
type AzureFirewallNetworkRuleResponseInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleResponseOutput() AzureFirewallNetworkRuleResponseOutput
	ToAzureFirewallNetworkRuleResponseOutputWithContext(context.Context) AzureFirewallNetworkRuleResponseOutput
}

// Properties of the network rule.
type AzureFirewallNetworkRuleResponseArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Name of the network rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
}

func (AzureFirewallNetworkRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleResponse)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleResponseArgs) ToAzureFirewallNetworkRuleResponseOutput() AzureFirewallNetworkRuleResponseOutput {
	return i.ToAzureFirewallNetworkRuleResponseOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleResponseArgs) ToAzureFirewallNetworkRuleResponseOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleResponseOutput)
}

// AzureFirewallNetworkRuleResponseArrayInput is an input type that accepts AzureFirewallNetworkRuleResponseArray and AzureFirewallNetworkRuleResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleResponseArrayInput` via:
//
//          AzureFirewallNetworkRuleResponseArray{ AzureFirewallNetworkRuleResponseArgs{...} }
type AzureFirewallNetworkRuleResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleResponseArrayOutput() AzureFirewallNetworkRuleResponseArrayOutput
	ToAzureFirewallNetworkRuleResponseArrayOutputWithContext(context.Context) AzureFirewallNetworkRuleResponseArrayOutput
}

type AzureFirewallNetworkRuleResponseArray []AzureFirewallNetworkRuleResponseInput

func (AzureFirewallNetworkRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRuleResponse)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleResponseArray) ToAzureFirewallNetworkRuleResponseArrayOutput() AzureFirewallNetworkRuleResponseArrayOutput {
	return i.ToAzureFirewallNetworkRuleResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleResponseArray) ToAzureFirewallNetworkRuleResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleResponseArrayOutput)
}

// Properties of the network rule.
type AzureFirewallNetworkRuleResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleResponse)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleResponseOutput) ToAzureFirewallNetworkRuleResponseOutput() AzureFirewallNetworkRuleResponseOutput {
	return o
}

func (o AzureFirewallNetworkRuleResponseOutput) ToAzureFirewallNetworkRuleResponseOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleResponseOutput {
	return o
}

// Description of the rule.
func (o AzureFirewallNetworkRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses.
func (o AzureFirewallNetworkRuleResponseOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o AzureFirewallNetworkRuleResponseOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Name of the network rule.
func (o AzureFirewallNetworkRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of AzureFirewallNetworkRuleProtocols.
func (o AzureFirewallNetworkRuleResponseOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// List of source IP addresses for this rule.
func (o AzureFirewallNetworkRuleResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

type AzureFirewallNetworkRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRuleResponse)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleResponseArrayOutput) ToAzureFirewallNetworkRuleResponseArrayOutput() AzureFirewallNetworkRuleResponseArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleResponseArrayOutput) ToAzureFirewallNetworkRuleResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleResponseArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallNetworkRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNetworkRuleResponse {
		return vs[0].([]AzureFirewallNetworkRuleResponse)[vs[1].(int)]
	}).(AzureFirewallNetworkRuleResponseOutput)
}

// Properties of the Azure Firewall.
type AzureFirewallPropertiesFormat struct {
	// Collection of application rule collections used by Azure Firewall.
	ApplicationRuleCollections []AzureFirewallApplicationRuleCollection `pulumi:"applicationRuleCollections"`
	// IP configuration of the Azure Firewall resource.
	IpConfigurations []AzureFirewallIPConfiguration `pulumi:"ipConfigurations"`
	// Collection of NAT rule collections used by Azure Firewall.
	NatRuleCollections []AzureFirewallNatRuleCollection `pulumi:"natRuleCollections"`
	// Collection of network rule collections used by Azure Firewall.
	NetworkRuleCollections []AzureFirewallNetworkRuleCollection `pulumi:"networkRuleCollections"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// AzureFirewallPropertiesFormatInput is an input type that accepts AzureFirewallPropertiesFormatArgs and AzureFirewallPropertiesFormatOutput values.
// You can construct a concrete instance of `AzureFirewallPropertiesFormatInput` via:
//
//          AzureFirewallPropertiesFormatArgs{...}
type AzureFirewallPropertiesFormatInput interface {
	pulumi.Input

	ToAzureFirewallPropertiesFormatOutput() AzureFirewallPropertiesFormatOutput
	ToAzureFirewallPropertiesFormatOutputWithContext(context.Context) AzureFirewallPropertiesFormatOutput
}

// Properties of the Azure Firewall.
type AzureFirewallPropertiesFormatArgs struct {
	// Collection of application rule collections used by Azure Firewall.
	ApplicationRuleCollections AzureFirewallApplicationRuleCollectionArrayInput `pulumi:"applicationRuleCollections"`
	// IP configuration of the Azure Firewall resource.
	IpConfigurations AzureFirewallIPConfigurationArrayInput `pulumi:"ipConfigurations"`
	// Collection of NAT rule collections used by Azure Firewall.
	NatRuleCollections AzureFirewallNatRuleCollectionArrayInput `pulumi:"natRuleCollections"`
	// Collection of network rule collections used by Azure Firewall.
	NetworkRuleCollections AzureFirewallNetworkRuleCollectionArrayInput `pulumi:"networkRuleCollections"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (AzureFirewallPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallPropertiesFormat)(nil)).Elem()
}

func (i AzureFirewallPropertiesFormatArgs) ToAzureFirewallPropertiesFormatOutput() AzureFirewallPropertiesFormatOutput {
	return i.ToAzureFirewallPropertiesFormatOutputWithContext(context.Background())
}

func (i AzureFirewallPropertiesFormatArgs) ToAzureFirewallPropertiesFormatOutputWithContext(ctx context.Context) AzureFirewallPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallPropertiesFormatOutput)
}

func (i AzureFirewallPropertiesFormatArgs) ToAzureFirewallPropertiesFormatPtrOutput() AzureFirewallPropertiesFormatPtrOutput {
	return i.ToAzureFirewallPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i AzureFirewallPropertiesFormatArgs) ToAzureFirewallPropertiesFormatPtrOutputWithContext(ctx context.Context) AzureFirewallPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallPropertiesFormatOutput).ToAzureFirewallPropertiesFormatPtrOutputWithContext(ctx)
}

// AzureFirewallPropertiesFormatPtrInput is an input type that accepts AzureFirewallPropertiesFormatArgs, AzureFirewallPropertiesFormatPtr and AzureFirewallPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `AzureFirewallPropertiesFormatPtrInput` via:
//
//          AzureFirewallPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type AzureFirewallPropertiesFormatPtrInput interface {
	pulumi.Input

	ToAzureFirewallPropertiesFormatPtrOutput() AzureFirewallPropertiesFormatPtrOutput
	ToAzureFirewallPropertiesFormatPtrOutputWithContext(context.Context) AzureFirewallPropertiesFormatPtrOutput
}

type azureFirewallPropertiesFormatPtrType AzureFirewallPropertiesFormatArgs

func AzureFirewallPropertiesFormatPtr(v *AzureFirewallPropertiesFormatArgs) AzureFirewallPropertiesFormatPtrInput {
	return (*azureFirewallPropertiesFormatPtrType)(v)
}

func (*azureFirewallPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallPropertiesFormat)(nil)).Elem()
}

func (i *azureFirewallPropertiesFormatPtrType) ToAzureFirewallPropertiesFormatPtrOutput() AzureFirewallPropertiesFormatPtrOutput {
	return i.ToAzureFirewallPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *azureFirewallPropertiesFormatPtrType) ToAzureFirewallPropertiesFormatPtrOutputWithContext(ctx context.Context) AzureFirewallPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallPropertiesFormatPtrOutput)
}

// Properties of the Azure Firewall.
type AzureFirewallPropertiesFormatOutput struct{ *pulumi.OutputState }

func (AzureFirewallPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallPropertiesFormat)(nil)).Elem()
}

func (o AzureFirewallPropertiesFormatOutput) ToAzureFirewallPropertiesFormatOutput() AzureFirewallPropertiesFormatOutput {
	return o
}

func (o AzureFirewallPropertiesFormatOutput) ToAzureFirewallPropertiesFormatOutputWithContext(ctx context.Context) AzureFirewallPropertiesFormatOutput {
	return o
}

func (o AzureFirewallPropertiesFormatOutput) ToAzureFirewallPropertiesFormatPtrOutput() AzureFirewallPropertiesFormatPtrOutput {
	return o.ToAzureFirewallPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o AzureFirewallPropertiesFormatOutput) ToAzureFirewallPropertiesFormatPtrOutputWithContext(ctx context.Context) AzureFirewallPropertiesFormatPtrOutput {
	return o.ApplyT(func(v AzureFirewallPropertiesFormat) *AzureFirewallPropertiesFormat {
		return &v
	}).(AzureFirewallPropertiesFormatPtrOutput)
}

// Collection of application rule collections used by Azure Firewall.
func (o AzureFirewallPropertiesFormatOutput) ApplicationRuleCollections() AzureFirewallApplicationRuleCollectionArrayOutput {
	return o.ApplyT(func(v AzureFirewallPropertiesFormat) []AzureFirewallApplicationRuleCollection {
		return v.ApplicationRuleCollections
	}).(AzureFirewallApplicationRuleCollectionArrayOutput)
}

// IP configuration of the Azure Firewall resource.
func (o AzureFirewallPropertiesFormatOutput) IpConfigurations() AzureFirewallIPConfigurationArrayOutput {
	return o.ApplyT(func(v AzureFirewallPropertiesFormat) []AzureFirewallIPConfiguration { return v.IpConfigurations }).(AzureFirewallIPConfigurationArrayOutput)
}

// Collection of NAT rule collections used by Azure Firewall.
func (o AzureFirewallPropertiesFormatOutput) NatRuleCollections() AzureFirewallNatRuleCollectionArrayOutput {
	return o.ApplyT(func(v AzureFirewallPropertiesFormat) []AzureFirewallNatRuleCollection { return v.NatRuleCollections }).(AzureFirewallNatRuleCollectionArrayOutput)
}

// Collection of network rule collections used by Azure Firewall.
func (o AzureFirewallPropertiesFormatOutput) NetworkRuleCollections() AzureFirewallNetworkRuleCollectionArrayOutput {
	return o.ApplyT(func(v AzureFirewallPropertiesFormat) []AzureFirewallNetworkRuleCollection {
		return v.NetworkRuleCollections
	}).(AzureFirewallNetworkRuleCollectionArrayOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type AzureFirewallPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallPropertiesFormat)(nil)).Elem()
}

func (o AzureFirewallPropertiesFormatPtrOutput) ToAzureFirewallPropertiesFormatPtrOutput() AzureFirewallPropertiesFormatPtrOutput {
	return o
}

func (o AzureFirewallPropertiesFormatPtrOutput) ToAzureFirewallPropertiesFormatPtrOutputWithContext(ctx context.Context) AzureFirewallPropertiesFormatPtrOutput {
	return o
}

func (o AzureFirewallPropertiesFormatPtrOutput) Elem() AzureFirewallPropertiesFormatOutput {
	return o.ApplyT(func(v *AzureFirewallPropertiesFormat) AzureFirewallPropertiesFormat { return *v }).(AzureFirewallPropertiesFormatOutput)
}

// Collection of application rule collections used by Azure Firewall.
func (o AzureFirewallPropertiesFormatPtrOutput) ApplicationRuleCollections() AzureFirewallApplicationRuleCollectionArrayOutput {
	return o.ApplyT(func(v *AzureFirewallPropertiesFormat) []AzureFirewallApplicationRuleCollection {
		if v == nil {
			return nil
		}
		return v.ApplicationRuleCollections
	}).(AzureFirewallApplicationRuleCollectionArrayOutput)
}

// IP configuration of the Azure Firewall resource.
func (o AzureFirewallPropertiesFormatPtrOutput) IpConfigurations() AzureFirewallIPConfigurationArrayOutput {
	return o.ApplyT(func(v *AzureFirewallPropertiesFormat) []AzureFirewallIPConfiguration {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(AzureFirewallIPConfigurationArrayOutput)
}

// Collection of NAT rule collections used by Azure Firewall.
func (o AzureFirewallPropertiesFormatPtrOutput) NatRuleCollections() AzureFirewallNatRuleCollectionArrayOutput {
	return o.ApplyT(func(v *AzureFirewallPropertiesFormat) []AzureFirewallNatRuleCollection {
		if v == nil {
			return nil
		}
		return v.NatRuleCollections
	}).(AzureFirewallNatRuleCollectionArrayOutput)
}

// Collection of network rule collections used by Azure Firewall.
func (o AzureFirewallPropertiesFormatPtrOutput) NetworkRuleCollections() AzureFirewallNetworkRuleCollectionArrayOutput {
	return o.ApplyT(func(v *AzureFirewallPropertiesFormat) []AzureFirewallNetworkRuleCollection {
		if v == nil {
			return nil
		}
		return v.NetworkRuleCollections
	}).(AzureFirewallNetworkRuleCollectionArrayOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Properties of the Azure Firewall.
type AzureFirewallPropertiesFormatResponse struct {
	// Collection of application rule collections used by Azure Firewall.
	ApplicationRuleCollections []AzureFirewallApplicationRuleCollectionResponse `pulumi:"applicationRuleCollections"`
	// IP configuration of the Azure Firewall resource.
	IpConfigurations []AzureFirewallIPConfigurationResponse `pulumi:"ipConfigurations"`
	// Collection of NAT rule collections used by Azure Firewall.
	NatRuleCollections []AzureFirewallNatRuleCollectionResponse `pulumi:"natRuleCollections"`
	// Collection of network rule collections used by Azure Firewall.
	NetworkRuleCollections []AzureFirewallNetworkRuleCollectionResponse `pulumi:"networkRuleCollections"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// AzureFirewallPropertiesFormatResponseInput is an input type that accepts AzureFirewallPropertiesFormatResponseArgs and AzureFirewallPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `AzureFirewallPropertiesFormatResponseInput` via:
//
//          AzureFirewallPropertiesFormatResponseArgs{...}
type AzureFirewallPropertiesFormatResponseInput interface {
	pulumi.Input

	ToAzureFirewallPropertiesFormatResponseOutput() AzureFirewallPropertiesFormatResponseOutput
	ToAzureFirewallPropertiesFormatResponseOutputWithContext(context.Context) AzureFirewallPropertiesFormatResponseOutput
}

// Properties of the Azure Firewall.
type AzureFirewallPropertiesFormatResponseArgs struct {
	// Collection of application rule collections used by Azure Firewall.
	ApplicationRuleCollections AzureFirewallApplicationRuleCollectionResponseArrayInput `pulumi:"applicationRuleCollections"`
	// IP configuration of the Azure Firewall resource.
	IpConfigurations AzureFirewallIPConfigurationResponseArrayInput `pulumi:"ipConfigurations"`
	// Collection of NAT rule collections used by Azure Firewall.
	NatRuleCollections AzureFirewallNatRuleCollectionResponseArrayInput `pulumi:"natRuleCollections"`
	// Collection of network rule collections used by Azure Firewall.
	NetworkRuleCollections AzureFirewallNetworkRuleCollectionResponseArrayInput `pulumi:"networkRuleCollections"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (AzureFirewallPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallPropertiesFormatResponse)(nil)).Elem()
}

func (i AzureFirewallPropertiesFormatResponseArgs) ToAzureFirewallPropertiesFormatResponseOutput() AzureFirewallPropertiesFormatResponseOutput {
	return i.ToAzureFirewallPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i AzureFirewallPropertiesFormatResponseArgs) ToAzureFirewallPropertiesFormatResponseOutputWithContext(ctx context.Context) AzureFirewallPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallPropertiesFormatResponseOutput)
}

func (i AzureFirewallPropertiesFormatResponseArgs) ToAzureFirewallPropertiesFormatResponsePtrOutput() AzureFirewallPropertiesFormatResponsePtrOutput {
	return i.ToAzureFirewallPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i AzureFirewallPropertiesFormatResponseArgs) ToAzureFirewallPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) AzureFirewallPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallPropertiesFormatResponseOutput).ToAzureFirewallPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// AzureFirewallPropertiesFormatResponsePtrInput is an input type that accepts AzureFirewallPropertiesFormatResponseArgs, AzureFirewallPropertiesFormatResponsePtr and AzureFirewallPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `AzureFirewallPropertiesFormatResponsePtrInput` via:
//
//          AzureFirewallPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type AzureFirewallPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToAzureFirewallPropertiesFormatResponsePtrOutput() AzureFirewallPropertiesFormatResponsePtrOutput
	ToAzureFirewallPropertiesFormatResponsePtrOutputWithContext(context.Context) AzureFirewallPropertiesFormatResponsePtrOutput
}

type azureFirewallPropertiesFormatResponsePtrType AzureFirewallPropertiesFormatResponseArgs

func AzureFirewallPropertiesFormatResponsePtr(v *AzureFirewallPropertiesFormatResponseArgs) AzureFirewallPropertiesFormatResponsePtrInput {
	return (*azureFirewallPropertiesFormatResponsePtrType)(v)
}

func (*azureFirewallPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallPropertiesFormatResponse)(nil)).Elem()
}

func (i *azureFirewallPropertiesFormatResponsePtrType) ToAzureFirewallPropertiesFormatResponsePtrOutput() AzureFirewallPropertiesFormatResponsePtrOutput {
	return i.ToAzureFirewallPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *azureFirewallPropertiesFormatResponsePtrType) ToAzureFirewallPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) AzureFirewallPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallPropertiesFormatResponsePtrOutput)
}

// Properties of the Azure Firewall.
type AzureFirewallPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallPropertiesFormatResponse)(nil)).Elem()
}

func (o AzureFirewallPropertiesFormatResponseOutput) ToAzureFirewallPropertiesFormatResponseOutput() AzureFirewallPropertiesFormatResponseOutput {
	return o
}

func (o AzureFirewallPropertiesFormatResponseOutput) ToAzureFirewallPropertiesFormatResponseOutputWithContext(ctx context.Context) AzureFirewallPropertiesFormatResponseOutput {
	return o
}

func (o AzureFirewallPropertiesFormatResponseOutput) ToAzureFirewallPropertiesFormatResponsePtrOutput() AzureFirewallPropertiesFormatResponsePtrOutput {
	return o.ToAzureFirewallPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o AzureFirewallPropertiesFormatResponseOutput) ToAzureFirewallPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) AzureFirewallPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallPropertiesFormatResponse) *AzureFirewallPropertiesFormatResponse {
		return &v
	}).(AzureFirewallPropertiesFormatResponsePtrOutput)
}

// Collection of application rule collections used by Azure Firewall.
func (o AzureFirewallPropertiesFormatResponseOutput) ApplicationRuleCollections() AzureFirewallApplicationRuleCollectionResponseArrayOutput {
	return o.ApplyT(func(v AzureFirewallPropertiesFormatResponse) []AzureFirewallApplicationRuleCollectionResponse {
		return v.ApplicationRuleCollections
	}).(AzureFirewallApplicationRuleCollectionResponseArrayOutput)
}

// IP configuration of the Azure Firewall resource.
func (o AzureFirewallPropertiesFormatResponseOutput) IpConfigurations() AzureFirewallIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v AzureFirewallPropertiesFormatResponse) []AzureFirewallIPConfigurationResponse {
		return v.IpConfigurations
	}).(AzureFirewallIPConfigurationResponseArrayOutput)
}

// Collection of NAT rule collections used by Azure Firewall.
func (o AzureFirewallPropertiesFormatResponseOutput) NatRuleCollections() AzureFirewallNatRuleCollectionResponseArrayOutput {
	return o.ApplyT(func(v AzureFirewallPropertiesFormatResponse) []AzureFirewallNatRuleCollectionResponse {
		return v.NatRuleCollections
	}).(AzureFirewallNatRuleCollectionResponseArrayOutput)
}

// Collection of network rule collections used by Azure Firewall.
func (o AzureFirewallPropertiesFormatResponseOutput) NetworkRuleCollections() AzureFirewallNetworkRuleCollectionResponseArrayOutput {
	return o.ApplyT(func(v AzureFirewallPropertiesFormatResponse) []AzureFirewallNetworkRuleCollectionResponse {
		return v.NetworkRuleCollections
	}).(AzureFirewallNetworkRuleCollectionResponseArrayOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type AzureFirewallPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallPropertiesFormatResponse)(nil)).Elem()
}

func (o AzureFirewallPropertiesFormatResponsePtrOutput) ToAzureFirewallPropertiesFormatResponsePtrOutput() AzureFirewallPropertiesFormatResponsePtrOutput {
	return o
}

func (o AzureFirewallPropertiesFormatResponsePtrOutput) ToAzureFirewallPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) AzureFirewallPropertiesFormatResponsePtrOutput {
	return o
}

func (o AzureFirewallPropertiesFormatResponsePtrOutput) Elem() AzureFirewallPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *AzureFirewallPropertiesFormatResponse) AzureFirewallPropertiesFormatResponse { return *v }).(AzureFirewallPropertiesFormatResponseOutput)
}

// Collection of application rule collections used by Azure Firewall.
func (o AzureFirewallPropertiesFormatResponsePtrOutput) ApplicationRuleCollections() AzureFirewallApplicationRuleCollectionResponseArrayOutput {
	return o.ApplyT(func(v *AzureFirewallPropertiesFormatResponse) []AzureFirewallApplicationRuleCollectionResponse {
		if v == nil {
			return nil
		}
		return v.ApplicationRuleCollections
	}).(AzureFirewallApplicationRuleCollectionResponseArrayOutput)
}

// IP configuration of the Azure Firewall resource.
func (o AzureFirewallPropertiesFormatResponsePtrOutput) IpConfigurations() AzureFirewallIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *AzureFirewallPropertiesFormatResponse) []AzureFirewallIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(AzureFirewallIPConfigurationResponseArrayOutput)
}

// Collection of NAT rule collections used by Azure Firewall.
func (o AzureFirewallPropertiesFormatResponsePtrOutput) NatRuleCollections() AzureFirewallNatRuleCollectionResponseArrayOutput {
	return o.ApplyT(func(v *AzureFirewallPropertiesFormatResponse) []AzureFirewallNatRuleCollectionResponse {
		if v == nil {
			return nil
		}
		return v.NatRuleCollections
	}).(AzureFirewallNatRuleCollectionResponseArrayOutput)
}

// Collection of network rule collections used by Azure Firewall.
func (o AzureFirewallPropertiesFormatResponsePtrOutput) NetworkRuleCollections() AzureFirewallNetworkRuleCollectionResponseArrayOutput {
	return o.ApplyT(func(v *AzureFirewallPropertiesFormatResponse) []AzureFirewallNetworkRuleCollectionResponse {
		if v == nil {
			return nil
		}
		return v.NetworkRuleCollections
	}).(AzureFirewallNetworkRuleCollectionResponseArrayOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCAction struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// AzureFirewallRCActionInput is an input type that accepts AzureFirewallRCActionArgs and AzureFirewallRCActionOutput values.
// You can construct a concrete instance of `AzureFirewallRCActionInput` via:
//
//          AzureFirewallRCActionArgs{...}
type AzureFirewallRCActionInput interface {
	pulumi.Input

	ToAzureFirewallRCActionOutput() AzureFirewallRCActionOutput
	ToAzureFirewallRCActionOutputWithContext(context.Context) AzureFirewallRCActionOutput
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCActionArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AzureFirewallRCActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallRCAction)(nil)).Elem()
}

func (i AzureFirewallRCActionArgs) ToAzureFirewallRCActionOutput() AzureFirewallRCActionOutput {
	return i.ToAzureFirewallRCActionOutputWithContext(context.Background())
}

func (i AzureFirewallRCActionArgs) ToAzureFirewallRCActionOutputWithContext(ctx context.Context) AzureFirewallRCActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallRCActionOutput)
}

func (i AzureFirewallRCActionArgs) ToAzureFirewallRCActionPtrOutput() AzureFirewallRCActionPtrOutput {
	return i.ToAzureFirewallRCActionPtrOutputWithContext(context.Background())
}

func (i AzureFirewallRCActionArgs) ToAzureFirewallRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallRCActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallRCActionOutput).ToAzureFirewallRCActionPtrOutputWithContext(ctx)
}

// AzureFirewallRCActionPtrInput is an input type that accepts AzureFirewallRCActionArgs, AzureFirewallRCActionPtr and AzureFirewallRCActionPtrOutput values.
// You can construct a concrete instance of `AzureFirewallRCActionPtrInput` via:
//
//          AzureFirewallRCActionArgs{...}
//
//  or:
//
//          nil
type AzureFirewallRCActionPtrInput interface {
	pulumi.Input

	ToAzureFirewallRCActionPtrOutput() AzureFirewallRCActionPtrOutput
	ToAzureFirewallRCActionPtrOutputWithContext(context.Context) AzureFirewallRCActionPtrOutput
}

type azureFirewallRCActionPtrType AzureFirewallRCActionArgs

func AzureFirewallRCActionPtr(v *AzureFirewallRCActionArgs) AzureFirewallRCActionPtrInput {
	return (*azureFirewallRCActionPtrType)(v)
}

func (*azureFirewallRCActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallRCAction)(nil)).Elem()
}

func (i *azureFirewallRCActionPtrType) ToAzureFirewallRCActionPtrOutput() AzureFirewallRCActionPtrOutput {
	return i.ToAzureFirewallRCActionPtrOutputWithContext(context.Background())
}

func (i *azureFirewallRCActionPtrType) ToAzureFirewallRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallRCActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallRCActionPtrOutput)
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCActionOutput struct{ *pulumi.OutputState }

func (AzureFirewallRCActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallRCAction)(nil)).Elem()
}

func (o AzureFirewallRCActionOutput) ToAzureFirewallRCActionOutput() AzureFirewallRCActionOutput {
	return o
}

func (o AzureFirewallRCActionOutput) ToAzureFirewallRCActionOutputWithContext(ctx context.Context) AzureFirewallRCActionOutput {
	return o
}

func (o AzureFirewallRCActionOutput) ToAzureFirewallRCActionPtrOutput() AzureFirewallRCActionPtrOutput {
	return o.ToAzureFirewallRCActionPtrOutputWithContext(context.Background())
}

func (o AzureFirewallRCActionOutput) ToAzureFirewallRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallRCActionPtrOutput {
	return o.ApplyT(func(v AzureFirewallRCAction) *AzureFirewallRCAction {
		return &v
	}).(AzureFirewallRCActionPtrOutput)
}

// The type of action.
func (o AzureFirewallRCActionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallRCAction) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AzureFirewallRCActionPtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallRCActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallRCAction)(nil)).Elem()
}

func (o AzureFirewallRCActionPtrOutput) ToAzureFirewallRCActionPtrOutput() AzureFirewallRCActionPtrOutput {
	return o
}

func (o AzureFirewallRCActionPtrOutput) ToAzureFirewallRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallRCActionPtrOutput {
	return o
}

func (o AzureFirewallRCActionPtrOutput) Elem() AzureFirewallRCActionOutput {
	return o.ApplyT(func(v *AzureFirewallRCAction) AzureFirewallRCAction { return *v }).(AzureFirewallRCActionOutput)
}

// The type of action.
func (o AzureFirewallRCActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallRCAction) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCActionResponse struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// AzureFirewallRCActionResponseInput is an input type that accepts AzureFirewallRCActionResponseArgs and AzureFirewallRCActionResponseOutput values.
// You can construct a concrete instance of `AzureFirewallRCActionResponseInput` via:
//
//          AzureFirewallRCActionResponseArgs{...}
type AzureFirewallRCActionResponseInput interface {
	pulumi.Input

	ToAzureFirewallRCActionResponseOutput() AzureFirewallRCActionResponseOutput
	ToAzureFirewallRCActionResponseOutputWithContext(context.Context) AzureFirewallRCActionResponseOutput
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCActionResponseArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AzureFirewallRCActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallRCActionResponse)(nil)).Elem()
}

func (i AzureFirewallRCActionResponseArgs) ToAzureFirewallRCActionResponseOutput() AzureFirewallRCActionResponseOutput {
	return i.ToAzureFirewallRCActionResponseOutputWithContext(context.Background())
}

func (i AzureFirewallRCActionResponseArgs) ToAzureFirewallRCActionResponseOutputWithContext(ctx context.Context) AzureFirewallRCActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallRCActionResponseOutput)
}

func (i AzureFirewallRCActionResponseArgs) ToAzureFirewallRCActionResponsePtrOutput() AzureFirewallRCActionResponsePtrOutput {
	return i.ToAzureFirewallRCActionResponsePtrOutputWithContext(context.Background())
}

func (i AzureFirewallRCActionResponseArgs) ToAzureFirewallRCActionResponsePtrOutputWithContext(ctx context.Context) AzureFirewallRCActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallRCActionResponseOutput).ToAzureFirewallRCActionResponsePtrOutputWithContext(ctx)
}

// AzureFirewallRCActionResponsePtrInput is an input type that accepts AzureFirewallRCActionResponseArgs, AzureFirewallRCActionResponsePtr and AzureFirewallRCActionResponsePtrOutput values.
// You can construct a concrete instance of `AzureFirewallRCActionResponsePtrInput` via:
//
//          AzureFirewallRCActionResponseArgs{...}
//
//  or:
//
//          nil
type AzureFirewallRCActionResponsePtrInput interface {
	pulumi.Input

	ToAzureFirewallRCActionResponsePtrOutput() AzureFirewallRCActionResponsePtrOutput
	ToAzureFirewallRCActionResponsePtrOutputWithContext(context.Context) AzureFirewallRCActionResponsePtrOutput
}

type azureFirewallRCActionResponsePtrType AzureFirewallRCActionResponseArgs

func AzureFirewallRCActionResponsePtr(v *AzureFirewallRCActionResponseArgs) AzureFirewallRCActionResponsePtrInput {
	return (*azureFirewallRCActionResponsePtrType)(v)
}

func (*azureFirewallRCActionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallRCActionResponse)(nil)).Elem()
}

func (i *azureFirewallRCActionResponsePtrType) ToAzureFirewallRCActionResponsePtrOutput() AzureFirewallRCActionResponsePtrOutput {
	return i.ToAzureFirewallRCActionResponsePtrOutputWithContext(context.Background())
}

func (i *azureFirewallRCActionResponsePtrType) ToAzureFirewallRCActionResponsePtrOutputWithContext(ctx context.Context) AzureFirewallRCActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallRCActionResponsePtrOutput)
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCActionResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallRCActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallRCActionResponse)(nil)).Elem()
}

func (o AzureFirewallRCActionResponseOutput) ToAzureFirewallRCActionResponseOutput() AzureFirewallRCActionResponseOutput {
	return o
}

func (o AzureFirewallRCActionResponseOutput) ToAzureFirewallRCActionResponseOutputWithContext(ctx context.Context) AzureFirewallRCActionResponseOutput {
	return o
}

func (o AzureFirewallRCActionResponseOutput) ToAzureFirewallRCActionResponsePtrOutput() AzureFirewallRCActionResponsePtrOutput {
	return o.ToAzureFirewallRCActionResponsePtrOutputWithContext(context.Background())
}

func (o AzureFirewallRCActionResponseOutput) ToAzureFirewallRCActionResponsePtrOutputWithContext(ctx context.Context) AzureFirewallRCActionResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallRCActionResponse) *AzureFirewallRCActionResponse {
		return &v
	}).(AzureFirewallRCActionResponsePtrOutput)
}

// The type of action.
func (o AzureFirewallRCActionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallRCActionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AzureFirewallRCActionResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallRCActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallRCActionResponse)(nil)).Elem()
}

func (o AzureFirewallRCActionResponsePtrOutput) ToAzureFirewallRCActionResponsePtrOutput() AzureFirewallRCActionResponsePtrOutput {
	return o
}

func (o AzureFirewallRCActionResponsePtrOutput) ToAzureFirewallRCActionResponsePtrOutputWithContext(ctx context.Context) AzureFirewallRCActionResponsePtrOutput {
	return o
}

func (o AzureFirewallRCActionResponsePtrOutput) Elem() AzureFirewallRCActionResponseOutput {
	return o.ApplyT(func(v *AzureFirewallRCActionResponse) AzureFirewallRCActionResponse { return *v }).(AzureFirewallRCActionResponseOutput)
}

// The type of action.
func (o AzureFirewallRCActionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallRCActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Pool of backend IP addresses.
type BackendAddressPool struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of load balancer backend address pool.
	Properties *BackendAddressPoolPropertiesFormat `pulumi:"properties"`
}

// BackendAddressPoolInput is an input type that accepts BackendAddressPoolArgs and BackendAddressPoolOutput values.
// You can construct a concrete instance of `BackendAddressPoolInput` via:
//
//          BackendAddressPoolArgs{...}
type BackendAddressPoolInput interface {
	pulumi.Input

	ToBackendAddressPoolOutput() BackendAddressPoolOutput
	ToBackendAddressPoolOutputWithContext(context.Context) BackendAddressPoolOutput
}

// Pool of backend IP addresses.
type BackendAddressPoolArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of load balancer backend address pool.
	Properties BackendAddressPoolPropertiesFormatPtrInput `pulumi:"properties"`
}

func (BackendAddressPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPool)(nil)).Elem()
}

func (i BackendAddressPoolArgs) ToBackendAddressPoolOutput() BackendAddressPoolOutput {
	return i.ToBackendAddressPoolOutputWithContext(context.Background())
}

func (i BackendAddressPoolArgs) ToBackendAddressPoolOutputWithContext(ctx context.Context) BackendAddressPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolOutput)
}

// BackendAddressPoolArrayInput is an input type that accepts BackendAddressPoolArray and BackendAddressPoolArrayOutput values.
// You can construct a concrete instance of `BackendAddressPoolArrayInput` via:
//
//          BackendAddressPoolArray{ BackendAddressPoolArgs{...} }
type BackendAddressPoolArrayInput interface {
	pulumi.Input

	ToBackendAddressPoolArrayOutput() BackendAddressPoolArrayOutput
	ToBackendAddressPoolArrayOutputWithContext(context.Context) BackendAddressPoolArrayOutput
}

type BackendAddressPoolArray []BackendAddressPoolInput

func (BackendAddressPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPool)(nil)).Elem()
}

func (i BackendAddressPoolArray) ToBackendAddressPoolArrayOutput() BackendAddressPoolArrayOutput {
	return i.ToBackendAddressPoolArrayOutputWithContext(context.Background())
}

func (i BackendAddressPoolArray) ToBackendAddressPoolArrayOutputWithContext(ctx context.Context) BackendAddressPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolArrayOutput)
}

// Pool of backend IP addresses.
type BackendAddressPoolOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPool)(nil)).Elem()
}

func (o BackendAddressPoolOutput) ToBackendAddressPoolOutput() BackendAddressPoolOutput {
	return o
}

func (o BackendAddressPoolOutput) ToBackendAddressPoolOutputWithContext(ctx context.Context) BackendAddressPoolOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o BackendAddressPoolOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPool) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o BackendAddressPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o BackendAddressPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of load balancer backend address pool.
func (o BackendAddressPoolOutput) Properties() BackendAddressPoolPropertiesFormatPtrOutput {
	return o.ApplyT(func(v BackendAddressPool) *BackendAddressPoolPropertiesFormat { return v.Properties }).(BackendAddressPoolPropertiesFormatPtrOutput)
}

type BackendAddressPoolArrayOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPool)(nil)).Elem()
}

func (o BackendAddressPoolArrayOutput) ToBackendAddressPoolArrayOutput() BackendAddressPoolArrayOutput {
	return o
}

func (o BackendAddressPoolArrayOutput) ToBackendAddressPoolArrayOutputWithContext(ctx context.Context) BackendAddressPoolArrayOutput {
	return o
}

func (o BackendAddressPoolArrayOutput) Index(i pulumi.IntInput) BackendAddressPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendAddressPool {
		return vs[0].([]BackendAddressPool)[vs[1].(int)]
	}).(BackendAddressPoolOutput)
}

// Properties of the backend address pool.
type BackendAddressPoolPropertiesFormat struct {
	// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// BackendAddressPoolPropertiesFormatInput is an input type that accepts BackendAddressPoolPropertiesFormatArgs and BackendAddressPoolPropertiesFormatOutput values.
// You can construct a concrete instance of `BackendAddressPoolPropertiesFormatInput` via:
//
//          BackendAddressPoolPropertiesFormatArgs{...}
type BackendAddressPoolPropertiesFormatInput interface {
	pulumi.Input

	ToBackendAddressPoolPropertiesFormatOutput() BackendAddressPoolPropertiesFormatOutput
	ToBackendAddressPoolPropertiesFormatOutputWithContext(context.Context) BackendAddressPoolPropertiesFormatOutput
}

// Properties of the backend address pool.
type BackendAddressPoolPropertiesFormatArgs struct {
	// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (BackendAddressPoolPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPoolPropertiesFormat)(nil)).Elem()
}

func (i BackendAddressPoolPropertiesFormatArgs) ToBackendAddressPoolPropertiesFormatOutput() BackendAddressPoolPropertiesFormatOutput {
	return i.ToBackendAddressPoolPropertiesFormatOutputWithContext(context.Background())
}

func (i BackendAddressPoolPropertiesFormatArgs) ToBackendAddressPoolPropertiesFormatOutputWithContext(ctx context.Context) BackendAddressPoolPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolPropertiesFormatOutput)
}

func (i BackendAddressPoolPropertiesFormatArgs) ToBackendAddressPoolPropertiesFormatPtrOutput() BackendAddressPoolPropertiesFormatPtrOutput {
	return i.ToBackendAddressPoolPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i BackendAddressPoolPropertiesFormatArgs) ToBackendAddressPoolPropertiesFormatPtrOutputWithContext(ctx context.Context) BackendAddressPoolPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolPropertiesFormatOutput).ToBackendAddressPoolPropertiesFormatPtrOutputWithContext(ctx)
}

// BackendAddressPoolPropertiesFormatPtrInput is an input type that accepts BackendAddressPoolPropertiesFormatArgs, BackendAddressPoolPropertiesFormatPtr and BackendAddressPoolPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `BackendAddressPoolPropertiesFormatPtrInput` via:
//
//          BackendAddressPoolPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type BackendAddressPoolPropertiesFormatPtrInput interface {
	pulumi.Input

	ToBackendAddressPoolPropertiesFormatPtrOutput() BackendAddressPoolPropertiesFormatPtrOutput
	ToBackendAddressPoolPropertiesFormatPtrOutputWithContext(context.Context) BackendAddressPoolPropertiesFormatPtrOutput
}

type backendAddressPoolPropertiesFormatPtrType BackendAddressPoolPropertiesFormatArgs

func BackendAddressPoolPropertiesFormatPtr(v *BackendAddressPoolPropertiesFormatArgs) BackendAddressPoolPropertiesFormatPtrInput {
	return (*backendAddressPoolPropertiesFormatPtrType)(v)
}

func (*backendAddressPoolPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendAddressPoolPropertiesFormat)(nil)).Elem()
}

func (i *backendAddressPoolPropertiesFormatPtrType) ToBackendAddressPoolPropertiesFormatPtrOutput() BackendAddressPoolPropertiesFormatPtrOutput {
	return i.ToBackendAddressPoolPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *backendAddressPoolPropertiesFormatPtrType) ToBackendAddressPoolPropertiesFormatPtrOutputWithContext(ctx context.Context) BackendAddressPoolPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolPropertiesFormatPtrOutput)
}

// Properties of the backend address pool.
type BackendAddressPoolPropertiesFormatOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPoolPropertiesFormat)(nil)).Elem()
}

func (o BackendAddressPoolPropertiesFormatOutput) ToBackendAddressPoolPropertiesFormatOutput() BackendAddressPoolPropertiesFormatOutput {
	return o
}

func (o BackendAddressPoolPropertiesFormatOutput) ToBackendAddressPoolPropertiesFormatOutputWithContext(ctx context.Context) BackendAddressPoolPropertiesFormatOutput {
	return o
}

func (o BackendAddressPoolPropertiesFormatOutput) ToBackendAddressPoolPropertiesFormatPtrOutput() BackendAddressPoolPropertiesFormatPtrOutput {
	return o.ToBackendAddressPoolPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o BackendAddressPoolPropertiesFormatOutput) ToBackendAddressPoolPropertiesFormatPtrOutputWithContext(ctx context.Context) BackendAddressPoolPropertiesFormatPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolPropertiesFormat) *BackendAddressPoolPropertiesFormat {
		return &v
	}).(BackendAddressPoolPropertiesFormatPtrOutput)
}

// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o BackendAddressPoolPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type BackendAddressPoolPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendAddressPoolPropertiesFormat)(nil)).Elem()
}

func (o BackendAddressPoolPropertiesFormatPtrOutput) ToBackendAddressPoolPropertiesFormatPtrOutput() BackendAddressPoolPropertiesFormatPtrOutput {
	return o
}

func (o BackendAddressPoolPropertiesFormatPtrOutput) ToBackendAddressPoolPropertiesFormatPtrOutputWithContext(ctx context.Context) BackendAddressPoolPropertiesFormatPtrOutput {
	return o
}

func (o BackendAddressPoolPropertiesFormatPtrOutput) Elem() BackendAddressPoolPropertiesFormatOutput {
	return o.ApplyT(func(v *BackendAddressPoolPropertiesFormat) BackendAddressPoolPropertiesFormat { return *v }).(BackendAddressPoolPropertiesFormatOutput)
}

// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o BackendAddressPoolPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendAddressPoolPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Properties of the backend address pool.
type BackendAddressPoolPropertiesFormatResponse struct {
	// Gets collection of references to IP addresses defined in network interfaces.
	BackendIPConfigurations []NetworkInterfaceIPConfigurationResponse `pulumi:"backendIPConfigurations"`
	// Gets load balancing rules that use this backend address pool.
	LoadBalancingRules []SubResourceResponse `pulumi:"loadBalancingRules"`
	// Gets outbound rules that use this backend address pool.
	OutboundRule SubResourceResponse `pulumi:"outboundRule"`
	// Gets outbound rules that use this backend address pool.
	OutboundRules []SubResourceResponse `pulumi:"outboundRules"`
	// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// BackendAddressPoolPropertiesFormatResponseInput is an input type that accepts BackendAddressPoolPropertiesFormatResponseArgs and BackendAddressPoolPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `BackendAddressPoolPropertiesFormatResponseInput` via:
//
//          BackendAddressPoolPropertiesFormatResponseArgs{...}
type BackendAddressPoolPropertiesFormatResponseInput interface {
	pulumi.Input

	ToBackendAddressPoolPropertiesFormatResponseOutput() BackendAddressPoolPropertiesFormatResponseOutput
	ToBackendAddressPoolPropertiesFormatResponseOutputWithContext(context.Context) BackendAddressPoolPropertiesFormatResponseOutput
}

// Properties of the backend address pool.
type BackendAddressPoolPropertiesFormatResponseArgs struct {
	// Gets collection of references to IP addresses defined in network interfaces.
	BackendIPConfigurations NetworkInterfaceIPConfigurationResponseArrayInput `pulumi:"backendIPConfigurations"`
	// Gets load balancing rules that use this backend address pool.
	LoadBalancingRules SubResourceResponseArrayInput `pulumi:"loadBalancingRules"`
	// Gets outbound rules that use this backend address pool.
	OutboundRule SubResourceResponseInput `pulumi:"outboundRule"`
	// Gets outbound rules that use this backend address pool.
	OutboundRules SubResourceResponseArrayInput `pulumi:"outboundRules"`
	// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (BackendAddressPoolPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPoolPropertiesFormatResponse)(nil)).Elem()
}

func (i BackendAddressPoolPropertiesFormatResponseArgs) ToBackendAddressPoolPropertiesFormatResponseOutput() BackendAddressPoolPropertiesFormatResponseOutput {
	return i.ToBackendAddressPoolPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i BackendAddressPoolPropertiesFormatResponseArgs) ToBackendAddressPoolPropertiesFormatResponseOutputWithContext(ctx context.Context) BackendAddressPoolPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolPropertiesFormatResponseOutput)
}

func (i BackendAddressPoolPropertiesFormatResponseArgs) ToBackendAddressPoolPropertiesFormatResponsePtrOutput() BackendAddressPoolPropertiesFormatResponsePtrOutput {
	return i.ToBackendAddressPoolPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i BackendAddressPoolPropertiesFormatResponseArgs) ToBackendAddressPoolPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) BackendAddressPoolPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolPropertiesFormatResponseOutput).ToBackendAddressPoolPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// BackendAddressPoolPropertiesFormatResponsePtrInput is an input type that accepts BackendAddressPoolPropertiesFormatResponseArgs, BackendAddressPoolPropertiesFormatResponsePtr and BackendAddressPoolPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `BackendAddressPoolPropertiesFormatResponsePtrInput` via:
//
//          BackendAddressPoolPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type BackendAddressPoolPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToBackendAddressPoolPropertiesFormatResponsePtrOutput() BackendAddressPoolPropertiesFormatResponsePtrOutput
	ToBackendAddressPoolPropertiesFormatResponsePtrOutputWithContext(context.Context) BackendAddressPoolPropertiesFormatResponsePtrOutput
}

type backendAddressPoolPropertiesFormatResponsePtrType BackendAddressPoolPropertiesFormatResponseArgs

func BackendAddressPoolPropertiesFormatResponsePtr(v *BackendAddressPoolPropertiesFormatResponseArgs) BackendAddressPoolPropertiesFormatResponsePtrInput {
	return (*backendAddressPoolPropertiesFormatResponsePtrType)(v)
}

func (*backendAddressPoolPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendAddressPoolPropertiesFormatResponse)(nil)).Elem()
}

func (i *backendAddressPoolPropertiesFormatResponsePtrType) ToBackendAddressPoolPropertiesFormatResponsePtrOutput() BackendAddressPoolPropertiesFormatResponsePtrOutput {
	return i.ToBackendAddressPoolPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *backendAddressPoolPropertiesFormatResponsePtrType) ToBackendAddressPoolPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) BackendAddressPoolPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolPropertiesFormatResponsePtrOutput)
}

// Properties of the backend address pool.
type BackendAddressPoolPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPoolPropertiesFormatResponse)(nil)).Elem()
}

func (o BackendAddressPoolPropertiesFormatResponseOutput) ToBackendAddressPoolPropertiesFormatResponseOutput() BackendAddressPoolPropertiesFormatResponseOutput {
	return o
}

func (o BackendAddressPoolPropertiesFormatResponseOutput) ToBackendAddressPoolPropertiesFormatResponseOutputWithContext(ctx context.Context) BackendAddressPoolPropertiesFormatResponseOutput {
	return o
}

func (o BackendAddressPoolPropertiesFormatResponseOutput) ToBackendAddressPoolPropertiesFormatResponsePtrOutput() BackendAddressPoolPropertiesFormatResponsePtrOutput {
	return o.ToBackendAddressPoolPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o BackendAddressPoolPropertiesFormatResponseOutput) ToBackendAddressPoolPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) BackendAddressPoolPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v BackendAddressPoolPropertiesFormatResponse) *BackendAddressPoolPropertiesFormatResponse {
		return &v
	}).(BackendAddressPoolPropertiesFormatResponsePtrOutput)
}

// Gets collection of references to IP addresses defined in network interfaces.
func (o BackendAddressPoolPropertiesFormatResponseOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolPropertiesFormatResponse) []NetworkInterfaceIPConfigurationResponse {
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// Gets load balancing rules that use this backend address pool.
func (o BackendAddressPoolPropertiesFormatResponseOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolPropertiesFormatResponse) []SubResourceResponse { return v.LoadBalancingRules }).(SubResourceResponseArrayOutput)
}

// Gets outbound rules that use this backend address pool.
func (o BackendAddressPoolPropertiesFormatResponseOutput) OutboundRule() SubResourceResponseOutput {
	return o.ApplyT(func(v BackendAddressPoolPropertiesFormatResponse) SubResourceResponse { return v.OutboundRule }).(SubResourceResponseOutput)
}

// Gets outbound rules that use this backend address pool.
func (o BackendAddressPoolPropertiesFormatResponseOutput) OutboundRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolPropertiesFormatResponse) []SubResourceResponse { return v.OutboundRules }).(SubResourceResponseArrayOutput)
}

// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o BackendAddressPoolPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type BackendAddressPoolPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendAddressPoolPropertiesFormatResponse)(nil)).Elem()
}

func (o BackendAddressPoolPropertiesFormatResponsePtrOutput) ToBackendAddressPoolPropertiesFormatResponsePtrOutput() BackendAddressPoolPropertiesFormatResponsePtrOutput {
	return o
}

func (o BackendAddressPoolPropertiesFormatResponsePtrOutput) ToBackendAddressPoolPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) BackendAddressPoolPropertiesFormatResponsePtrOutput {
	return o
}

func (o BackendAddressPoolPropertiesFormatResponsePtrOutput) Elem() BackendAddressPoolPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *BackendAddressPoolPropertiesFormatResponse) BackendAddressPoolPropertiesFormatResponse {
		return *v
	}).(BackendAddressPoolPropertiesFormatResponseOutput)
}

// Gets collection of references to IP addresses defined in network interfaces.
func (o BackendAddressPoolPropertiesFormatResponsePtrOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *BackendAddressPoolPropertiesFormatResponse) []NetworkInterfaceIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// Gets load balancing rules that use this backend address pool.
func (o BackendAddressPoolPropertiesFormatResponsePtrOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *BackendAddressPoolPropertiesFormatResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancingRules
	}).(SubResourceResponseArrayOutput)
}

// Gets outbound rules that use this backend address pool.
func (o BackendAddressPoolPropertiesFormatResponsePtrOutput) OutboundRule() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *BackendAddressPoolPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return &v.OutboundRule
	}).(SubResourceResponsePtrOutput)
}

// Gets outbound rules that use this backend address pool.
func (o BackendAddressPoolPropertiesFormatResponsePtrOutput) OutboundRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *BackendAddressPoolPropertiesFormatResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.OutboundRules
	}).(SubResourceResponseArrayOutput)
}

// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o BackendAddressPoolPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendAddressPoolPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Pool of backend IP addresses.
type BackendAddressPoolResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of load balancer backend address pool.
	Properties *BackendAddressPoolPropertiesFormatResponse `pulumi:"properties"`
}

// BackendAddressPoolResponseInput is an input type that accepts BackendAddressPoolResponseArgs and BackendAddressPoolResponseOutput values.
// You can construct a concrete instance of `BackendAddressPoolResponseInput` via:
//
//          BackendAddressPoolResponseArgs{...}
type BackendAddressPoolResponseInput interface {
	pulumi.Input

	ToBackendAddressPoolResponseOutput() BackendAddressPoolResponseOutput
	ToBackendAddressPoolResponseOutputWithContext(context.Context) BackendAddressPoolResponseOutput
}

// Pool of backend IP addresses.
type BackendAddressPoolResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of load balancer backend address pool.
	Properties BackendAddressPoolPropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (BackendAddressPoolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPoolResponse)(nil)).Elem()
}

func (i BackendAddressPoolResponseArgs) ToBackendAddressPoolResponseOutput() BackendAddressPoolResponseOutput {
	return i.ToBackendAddressPoolResponseOutputWithContext(context.Background())
}

func (i BackendAddressPoolResponseArgs) ToBackendAddressPoolResponseOutputWithContext(ctx context.Context) BackendAddressPoolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolResponseOutput)
}

// BackendAddressPoolResponseArrayInput is an input type that accepts BackendAddressPoolResponseArray and BackendAddressPoolResponseArrayOutput values.
// You can construct a concrete instance of `BackendAddressPoolResponseArrayInput` via:
//
//          BackendAddressPoolResponseArray{ BackendAddressPoolResponseArgs{...} }
type BackendAddressPoolResponseArrayInput interface {
	pulumi.Input

	ToBackendAddressPoolResponseArrayOutput() BackendAddressPoolResponseArrayOutput
	ToBackendAddressPoolResponseArrayOutputWithContext(context.Context) BackendAddressPoolResponseArrayOutput
}

type BackendAddressPoolResponseArray []BackendAddressPoolResponseInput

func (BackendAddressPoolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPoolResponse)(nil)).Elem()
}

func (i BackendAddressPoolResponseArray) ToBackendAddressPoolResponseArrayOutput() BackendAddressPoolResponseArrayOutput {
	return i.ToBackendAddressPoolResponseArrayOutputWithContext(context.Background())
}

func (i BackendAddressPoolResponseArray) ToBackendAddressPoolResponseArrayOutputWithContext(ctx context.Context) BackendAddressPoolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolResponseArrayOutput)
}

// Pool of backend IP addresses.
type BackendAddressPoolResponseOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPoolResponse)(nil)).Elem()
}

func (o BackendAddressPoolResponseOutput) ToBackendAddressPoolResponseOutput() BackendAddressPoolResponseOutput {
	return o
}

func (o BackendAddressPoolResponseOutput) ToBackendAddressPoolResponseOutputWithContext(ctx context.Context) BackendAddressPoolResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o BackendAddressPoolResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o BackendAddressPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o BackendAddressPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of load balancer backend address pool.
func (o BackendAddressPoolResponseOutput) Properties() BackendAddressPoolPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *BackendAddressPoolPropertiesFormatResponse { return v.Properties }).(BackendAddressPoolPropertiesFormatResponsePtrOutput)
}

type BackendAddressPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPoolResponse)(nil)).Elem()
}

func (o BackendAddressPoolResponseArrayOutput) ToBackendAddressPoolResponseArrayOutput() BackendAddressPoolResponseArrayOutput {
	return o
}

func (o BackendAddressPoolResponseArrayOutput) ToBackendAddressPoolResponseArrayOutputWithContext(ctx context.Context) BackendAddressPoolResponseArrayOutput {
	return o
}

func (o BackendAddressPoolResponseArrayOutput) Index(i pulumi.IntInput) BackendAddressPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendAddressPoolResponse {
		return vs[0].([]BackendAddressPoolResponse)[vs[1].(int)]
	}).(BackendAddressPoolResponseOutput)
}

// BGP settings details
type BgpSettings struct {
	// The BGP speaker's ASN.
	Asn *int `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress *string `pulumi:"bgpPeeringAddress"`
	// The weight added to routes learned from this BGP speaker.
	PeerWeight *int `pulumi:"peerWeight"`
}

// BgpSettingsInput is an input type that accepts BgpSettingsArgs and BgpSettingsOutput values.
// You can construct a concrete instance of `BgpSettingsInput` via:
//
//          BgpSettingsArgs{...}
type BgpSettingsInput interface {
	pulumi.Input

	ToBgpSettingsOutput() BgpSettingsOutput
	ToBgpSettingsOutputWithContext(context.Context) BgpSettingsOutput
}

// BGP settings details
type BgpSettingsArgs struct {
	// The BGP speaker's ASN.
	Asn pulumi.IntPtrInput `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress pulumi.StringPtrInput `pulumi:"bgpPeeringAddress"`
	// The weight added to routes learned from this BGP speaker.
	PeerWeight pulumi.IntPtrInput `pulumi:"peerWeight"`
}

func (BgpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpSettings)(nil)).Elem()
}

func (i BgpSettingsArgs) ToBgpSettingsOutput() BgpSettingsOutput {
	return i.ToBgpSettingsOutputWithContext(context.Background())
}

func (i BgpSettingsArgs) ToBgpSettingsOutputWithContext(ctx context.Context) BgpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsOutput)
}

func (i BgpSettingsArgs) ToBgpSettingsPtrOutput() BgpSettingsPtrOutput {
	return i.ToBgpSettingsPtrOutputWithContext(context.Background())
}

func (i BgpSettingsArgs) ToBgpSettingsPtrOutputWithContext(ctx context.Context) BgpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsOutput).ToBgpSettingsPtrOutputWithContext(ctx)
}

// BgpSettingsPtrInput is an input type that accepts BgpSettingsArgs, BgpSettingsPtr and BgpSettingsPtrOutput values.
// You can construct a concrete instance of `BgpSettingsPtrInput` via:
//
//          BgpSettingsArgs{...}
//
//  or:
//
//          nil
type BgpSettingsPtrInput interface {
	pulumi.Input

	ToBgpSettingsPtrOutput() BgpSettingsPtrOutput
	ToBgpSettingsPtrOutputWithContext(context.Context) BgpSettingsPtrOutput
}

type bgpSettingsPtrType BgpSettingsArgs

func BgpSettingsPtr(v *BgpSettingsArgs) BgpSettingsPtrInput {
	return (*bgpSettingsPtrType)(v)
}

func (*bgpSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpSettings)(nil)).Elem()
}

func (i *bgpSettingsPtrType) ToBgpSettingsPtrOutput() BgpSettingsPtrOutput {
	return i.ToBgpSettingsPtrOutputWithContext(context.Background())
}

func (i *bgpSettingsPtrType) ToBgpSettingsPtrOutputWithContext(ctx context.Context) BgpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsPtrOutput)
}

// BGP settings details
type BgpSettingsOutput struct{ *pulumi.OutputState }

func (BgpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpSettings)(nil)).Elem()
}

func (o BgpSettingsOutput) ToBgpSettingsOutput() BgpSettingsOutput {
	return o
}

func (o BgpSettingsOutput) ToBgpSettingsOutputWithContext(ctx context.Context) BgpSettingsOutput {
	return o
}

func (o BgpSettingsOutput) ToBgpSettingsPtrOutput() BgpSettingsPtrOutput {
	return o.ToBgpSettingsPtrOutputWithContext(context.Background())
}

func (o BgpSettingsOutput) ToBgpSettingsPtrOutputWithContext(ctx context.Context) BgpSettingsPtrOutput {
	return o.ApplyT(func(v BgpSettings) *BgpSettings {
		return &v
	}).(BgpSettingsPtrOutput)
}

// The BGP speaker's ASN.
func (o BgpSettingsOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpSettings) *int { return v.Asn }).(pulumi.IntPtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o BgpSettingsOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpSettings) *string { return v.BgpPeeringAddress }).(pulumi.StringPtrOutput)
}

// The weight added to routes learned from this BGP speaker.
func (o BgpSettingsOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpSettings) *int { return v.PeerWeight }).(pulumi.IntPtrOutput)
}

type BgpSettingsPtrOutput struct{ *pulumi.OutputState }

func (BgpSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpSettings)(nil)).Elem()
}

func (o BgpSettingsPtrOutput) ToBgpSettingsPtrOutput() BgpSettingsPtrOutput {
	return o
}

func (o BgpSettingsPtrOutput) ToBgpSettingsPtrOutputWithContext(ctx context.Context) BgpSettingsPtrOutput {
	return o
}

func (o BgpSettingsPtrOutput) Elem() BgpSettingsOutput {
	return o.ApplyT(func(v *BgpSettings) BgpSettings { return *v }).(BgpSettingsOutput)
}

// The BGP speaker's ASN.
func (o BgpSettingsPtrOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpSettings) *int {
		if v == nil {
			return nil
		}
		return v.Asn
	}).(pulumi.IntPtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o BgpSettingsPtrOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpSettings) *string {
		if v == nil {
			return nil
		}
		return v.BgpPeeringAddress
	}).(pulumi.StringPtrOutput)
}

// The weight added to routes learned from this BGP speaker.
func (o BgpSettingsPtrOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpSettings) *int {
		if v == nil {
			return nil
		}
		return v.PeerWeight
	}).(pulumi.IntPtrOutput)
}

// BGP settings details
type BgpSettingsResponse struct {
	// The BGP speaker's ASN.
	Asn *int `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress *string `pulumi:"bgpPeeringAddress"`
	// The weight added to routes learned from this BGP speaker.
	PeerWeight *int `pulumi:"peerWeight"`
}

// BgpSettingsResponseInput is an input type that accepts BgpSettingsResponseArgs and BgpSettingsResponseOutput values.
// You can construct a concrete instance of `BgpSettingsResponseInput` via:
//
//          BgpSettingsResponseArgs{...}
type BgpSettingsResponseInput interface {
	pulumi.Input

	ToBgpSettingsResponseOutput() BgpSettingsResponseOutput
	ToBgpSettingsResponseOutputWithContext(context.Context) BgpSettingsResponseOutput
}

// BGP settings details
type BgpSettingsResponseArgs struct {
	// The BGP speaker's ASN.
	Asn pulumi.IntPtrInput `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress pulumi.StringPtrInput `pulumi:"bgpPeeringAddress"`
	// The weight added to routes learned from this BGP speaker.
	PeerWeight pulumi.IntPtrInput `pulumi:"peerWeight"`
}

func (BgpSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpSettingsResponse)(nil)).Elem()
}

func (i BgpSettingsResponseArgs) ToBgpSettingsResponseOutput() BgpSettingsResponseOutput {
	return i.ToBgpSettingsResponseOutputWithContext(context.Background())
}

func (i BgpSettingsResponseArgs) ToBgpSettingsResponseOutputWithContext(ctx context.Context) BgpSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsResponseOutput)
}

func (i BgpSettingsResponseArgs) ToBgpSettingsResponsePtrOutput() BgpSettingsResponsePtrOutput {
	return i.ToBgpSettingsResponsePtrOutputWithContext(context.Background())
}

func (i BgpSettingsResponseArgs) ToBgpSettingsResponsePtrOutputWithContext(ctx context.Context) BgpSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsResponseOutput).ToBgpSettingsResponsePtrOutputWithContext(ctx)
}

// BgpSettingsResponsePtrInput is an input type that accepts BgpSettingsResponseArgs, BgpSettingsResponsePtr and BgpSettingsResponsePtrOutput values.
// You can construct a concrete instance of `BgpSettingsResponsePtrInput` via:
//
//          BgpSettingsResponseArgs{...}
//
//  or:
//
//          nil
type BgpSettingsResponsePtrInput interface {
	pulumi.Input

	ToBgpSettingsResponsePtrOutput() BgpSettingsResponsePtrOutput
	ToBgpSettingsResponsePtrOutputWithContext(context.Context) BgpSettingsResponsePtrOutput
}

type bgpSettingsResponsePtrType BgpSettingsResponseArgs

func BgpSettingsResponsePtr(v *BgpSettingsResponseArgs) BgpSettingsResponsePtrInput {
	return (*bgpSettingsResponsePtrType)(v)
}

func (*bgpSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpSettingsResponse)(nil)).Elem()
}

func (i *bgpSettingsResponsePtrType) ToBgpSettingsResponsePtrOutput() BgpSettingsResponsePtrOutput {
	return i.ToBgpSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *bgpSettingsResponsePtrType) ToBgpSettingsResponsePtrOutputWithContext(ctx context.Context) BgpSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsResponsePtrOutput)
}

// BGP settings details
type BgpSettingsResponseOutput struct{ *pulumi.OutputState }

func (BgpSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpSettingsResponse)(nil)).Elem()
}

func (o BgpSettingsResponseOutput) ToBgpSettingsResponseOutput() BgpSettingsResponseOutput {
	return o
}

func (o BgpSettingsResponseOutput) ToBgpSettingsResponseOutputWithContext(ctx context.Context) BgpSettingsResponseOutput {
	return o
}

func (o BgpSettingsResponseOutput) ToBgpSettingsResponsePtrOutput() BgpSettingsResponsePtrOutput {
	return o.ToBgpSettingsResponsePtrOutputWithContext(context.Background())
}

func (o BgpSettingsResponseOutput) ToBgpSettingsResponsePtrOutputWithContext(ctx context.Context) BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v BgpSettingsResponse) *BgpSettingsResponse {
		return &v
	}).(BgpSettingsResponsePtrOutput)
}

// The BGP speaker's ASN.
func (o BgpSettingsResponseOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpSettingsResponse) *int { return v.Asn }).(pulumi.IntPtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o BgpSettingsResponseOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpSettingsResponse) *string { return v.BgpPeeringAddress }).(pulumi.StringPtrOutput)
}

// The weight added to routes learned from this BGP speaker.
func (o BgpSettingsResponseOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpSettingsResponse) *int { return v.PeerWeight }).(pulumi.IntPtrOutput)
}

type BgpSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (BgpSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpSettingsResponse)(nil)).Elem()
}

func (o BgpSettingsResponsePtrOutput) ToBgpSettingsResponsePtrOutput() BgpSettingsResponsePtrOutput {
	return o
}

func (o BgpSettingsResponsePtrOutput) ToBgpSettingsResponsePtrOutputWithContext(ctx context.Context) BgpSettingsResponsePtrOutput {
	return o
}

func (o BgpSettingsResponsePtrOutput) Elem() BgpSettingsResponseOutput {
	return o.ApplyT(func(v *BgpSettingsResponse) BgpSettingsResponse { return *v }).(BgpSettingsResponseOutput)
}

// The BGP speaker's ASN.
func (o BgpSettingsResponsePtrOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Asn
	}).(pulumi.IntPtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o BgpSettingsResponsePtrOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.BgpPeeringAddress
	}).(pulumi.StringPtrOutput)
}

// The weight added to routes learned from this BGP speaker.
func (o BgpSettingsResponsePtrOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.PeerWeight
	}).(pulumi.IntPtrOutput)
}

// Information about the connection monitor.
type ConnectionMonitorType struct {
	Etag *string `pulumi:"etag"`
	// Connection monitor location.
	Location *string `pulumi:"location"`
	// Name of the connection monitor.
	Name string `pulumi:"name"`
	// Describes the properties of a connection monitor.
	Properties ConnectionMonitorResultPropertiesResponse `pulumi:"properties"`
	// Connection monitor tags.
	Tags map[string]string `pulumi:"tags"`
	// Connection monitor type.
	Type string `pulumi:"type"`
}

// ConnectionMonitorTypeInput is an input type that accepts ConnectionMonitorTypeArgs and ConnectionMonitorTypeOutput values.
// You can construct a concrete instance of `ConnectionMonitorTypeInput` via:
//
//          ConnectionMonitorTypeArgs{...}
type ConnectionMonitorTypeInput interface {
	pulumi.Input

	ToConnectionMonitorTypeOutput() ConnectionMonitorTypeOutput
	ToConnectionMonitorTypeOutputWithContext(context.Context) ConnectionMonitorTypeOutput
}

// Information about the connection monitor.
type ConnectionMonitorTypeArgs struct {
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Connection monitor location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Name of the connection monitor.
	Name pulumi.StringInput `pulumi:"name"`
	// Describes the properties of a connection monitor.
	Properties ConnectionMonitorResultPropertiesResponseInput `pulumi:"properties"`
	// Connection monitor tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Connection monitor type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ConnectionMonitorTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorType)(nil)).Elem()
}

func (i ConnectionMonitorTypeArgs) ToConnectionMonitorTypeOutput() ConnectionMonitorTypeOutput {
	return i.ToConnectionMonitorTypeOutputWithContext(context.Background())
}

func (i ConnectionMonitorTypeArgs) ToConnectionMonitorTypeOutputWithContext(ctx context.Context) ConnectionMonitorTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorTypeOutput)
}

// Information about the connection monitor.
type ConnectionMonitorTypeOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorType)(nil)).Elem()
}

func (o ConnectionMonitorTypeOutput) ToConnectionMonitorTypeOutput() ConnectionMonitorTypeOutput {
	return o
}

func (o ConnectionMonitorTypeOutput) ToConnectionMonitorTypeOutputWithContext(ctx context.Context) ConnectionMonitorTypeOutput {
	return o
}

func (o ConnectionMonitorTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Connection monitor location.
func (o ConnectionMonitorTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Name of the connection monitor.
func (o ConnectionMonitorTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorType) string { return v.Name }).(pulumi.StringOutput)
}

// Describes the properties of a connection monitor.
func (o ConnectionMonitorTypeOutput) Properties() ConnectionMonitorResultPropertiesResponseOutput {
	return o.ApplyT(func(v ConnectionMonitorType) ConnectionMonitorResultPropertiesResponse { return v.Properties }).(ConnectionMonitorResultPropertiesResponseOutput)
}

// Connection monitor tags.
func (o ConnectionMonitorTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionMonitorType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Connection monitor type.
func (o ConnectionMonitorTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorType) string { return v.Type }).(pulumi.StringOutput)
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestination struct {
	// Address of the connection monitor destination (IP or domain name).
	Address *string `pulumi:"address"`
	// The destination port used by connection monitor.
	Port *int `pulumi:"port"`
	// The ID of the resource used as the destination by connection monitor.
	ResourceId *string `pulumi:"resourceId"`
}

// ConnectionMonitorDestinationInput is an input type that accepts ConnectionMonitorDestinationArgs and ConnectionMonitorDestinationOutput values.
// You can construct a concrete instance of `ConnectionMonitorDestinationInput` via:
//
//          ConnectionMonitorDestinationArgs{...}
type ConnectionMonitorDestinationInput interface {
	pulumi.Input

	ToConnectionMonitorDestinationOutput() ConnectionMonitorDestinationOutput
	ToConnectionMonitorDestinationOutputWithContext(context.Context) ConnectionMonitorDestinationOutput
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestinationArgs struct {
	// Address of the connection monitor destination (IP or domain name).
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The destination port used by connection monitor.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The ID of the resource used as the destination by connection monitor.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (ConnectionMonitorDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorDestination)(nil)).Elem()
}

func (i ConnectionMonitorDestinationArgs) ToConnectionMonitorDestinationOutput() ConnectionMonitorDestinationOutput {
	return i.ToConnectionMonitorDestinationOutputWithContext(context.Background())
}

func (i ConnectionMonitorDestinationArgs) ToConnectionMonitorDestinationOutputWithContext(ctx context.Context) ConnectionMonitorDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorDestinationOutput)
}

func (i ConnectionMonitorDestinationArgs) ToConnectionMonitorDestinationPtrOutput() ConnectionMonitorDestinationPtrOutput {
	return i.ToConnectionMonitorDestinationPtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorDestinationArgs) ToConnectionMonitorDestinationPtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorDestinationOutput).ToConnectionMonitorDestinationPtrOutputWithContext(ctx)
}

// ConnectionMonitorDestinationPtrInput is an input type that accepts ConnectionMonitorDestinationArgs, ConnectionMonitorDestinationPtr and ConnectionMonitorDestinationPtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorDestinationPtrInput` via:
//
//          ConnectionMonitorDestinationArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorDestinationPtrInput interface {
	pulumi.Input

	ToConnectionMonitorDestinationPtrOutput() ConnectionMonitorDestinationPtrOutput
	ToConnectionMonitorDestinationPtrOutputWithContext(context.Context) ConnectionMonitorDestinationPtrOutput
}

type connectionMonitorDestinationPtrType ConnectionMonitorDestinationArgs

func ConnectionMonitorDestinationPtr(v *ConnectionMonitorDestinationArgs) ConnectionMonitorDestinationPtrInput {
	return (*connectionMonitorDestinationPtrType)(v)
}

func (*connectionMonitorDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorDestination)(nil)).Elem()
}

func (i *connectionMonitorDestinationPtrType) ToConnectionMonitorDestinationPtrOutput() ConnectionMonitorDestinationPtrOutput {
	return i.ToConnectionMonitorDestinationPtrOutputWithContext(context.Background())
}

func (i *connectionMonitorDestinationPtrType) ToConnectionMonitorDestinationPtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorDestinationPtrOutput)
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestinationOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorDestination)(nil)).Elem()
}

func (o ConnectionMonitorDestinationOutput) ToConnectionMonitorDestinationOutput() ConnectionMonitorDestinationOutput {
	return o
}

func (o ConnectionMonitorDestinationOutput) ToConnectionMonitorDestinationOutputWithContext(ctx context.Context) ConnectionMonitorDestinationOutput {
	return o
}

func (o ConnectionMonitorDestinationOutput) ToConnectionMonitorDestinationPtrOutput() ConnectionMonitorDestinationPtrOutput {
	return o.ToConnectionMonitorDestinationPtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorDestinationOutput) ToConnectionMonitorDestinationPtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestination) *ConnectionMonitorDestination {
		return &v
	}).(ConnectionMonitorDestinationPtrOutput)
}

// Address of the connection monitor destination (IP or domain name).
func (o ConnectionMonitorDestinationOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestination) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The destination port used by connection monitor.
func (o ConnectionMonitorDestinationOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestination) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the destination by connection monitor.
func (o ConnectionMonitorDestinationOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestination) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorDestinationPtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorDestination)(nil)).Elem()
}

func (o ConnectionMonitorDestinationPtrOutput) ToConnectionMonitorDestinationPtrOutput() ConnectionMonitorDestinationPtrOutput {
	return o
}

func (o ConnectionMonitorDestinationPtrOutput) ToConnectionMonitorDestinationPtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationPtrOutput {
	return o
}

func (o ConnectionMonitorDestinationPtrOutput) Elem() ConnectionMonitorDestinationOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestination) ConnectionMonitorDestination { return *v }).(ConnectionMonitorDestinationOutput)
}

// Address of the connection monitor destination (IP or domain name).
func (o ConnectionMonitorDestinationPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestination) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The destination port used by connection monitor.
func (o ConnectionMonitorDestinationPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestination) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the destination by connection monitor.
func (o ConnectionMonitorDestinationPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestination) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestinationResponse struct {
	// Address of the connection monitor destination (IP or domain name).
	Address *string `pulumi:"address"`
	// The destination port used by connection monitor.
	Port *int `pulumi:"port"`
	// The ID of the resource used as the destination by connection monitor.
	ResourceId *string `pulumi:"resourceId"`
}

// ConnectionMonitorDestinationResponseInput is an input type that accepts ConnectionMonitorDestinationResponseArgs and ConnectionMonitorDestinationResponseOutput values.
// You can construct a concrete instance of `ConnectionMonitorDestinationResponseInput` via:
//
//          ConnectionMonitorDestinationResponseArgs{...}
type ConnectionMonitorDestinationResponseInput interface {
	pulumi.Input

	ToConnectionMonitorDestinationResponseOutput() ConnectionMonitorDestinationResponseOutput
	ToConnectionMonitorDestinationResponseOutputWithContext(context.Context) ConnectionMonitorDestinationResponseOutput
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestinationResponseArgs struct {
	// Address of the connection monitor destination (IP or domain name).
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The destination port used by connection monitor.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The ID of the resource used as the destination by connection monitor.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (ConnectionMonitorDestinationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorDestinationResponse)(nil)).Elem()
}

func (i ConnectionMonitorDestinationResponseArgs) ToConnectionMonitorDestinationResponseOutput() ConnectionMonitorDestinationResponseOutput {
	return i.ToConnectionMonitorDestinationResponseOutputWithContext(context.Background())
}

func (i ConnectionMonitorDestinationResponseArgs) ToConnectionMonitorDestinationResponseOutputWithContext(ctx context.Context) ConnectionMonitorDestinationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorDestinationResponseOutput)
}

func (i ConnectionMonitorDestinationResponseArgs) ToConnectionMonitorDestinationResponsePtrOutput() ConnectionMonitorDestinationResponsePtrOutput {
	return i.ToConnectionMonitorDestinationResponsePtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorDestinationResponseArgs) ToConnectionMonitorDestinationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorDestinationResponseOutput).ToConnectionMonitorDestinationResponsePtrOutputWithContext(ctx)
}

// ConnectionMonitorDestinationResponsePtrInput is an input type that accepts ConnectionMonitorDestinationResponseArgs, ConnectionMonitorDestinationResponsePtr and ConnectionMonitorDestinationResponsePtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorDestinationResponsePtrInput` via:
//
//          ConnectionMonitorDestinationResponseArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorDestinationResponsePtrInput interface {
	pulumi.Input

	ToConnectionMonitorDestinationResponsePtrOutput() ConnectionMonitorDestinationResponsePtrOutput
	ToConnectionMonitorDestinationResponsePtrOutputWithContext(context.Context) ConnectionMonitorDestinationResponsePtrOutput
}

type connectionMonitorDestinationResponsePtrType ConnectionMonitorDestinationResponseArgs

func ConnectionMonitorDestinationResponsePtr(v *ConnectionMonitorDestinationResponseArgs) ConnectionMonitorDestinationResponsePtrInput {
	return (*connectionMonitorDestinationResponsePtrType)(v)
}

func (*connectionMonitorDestinationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorDestinationResponse)(nil)).Elem()
}

func (i *connectionMonitorDestinationResponsePtrType) ToConnectionMonitorDestinationResponsePtrOutput() ConnectionMonitorDestinationResponsePtrOutput {
	return i.ToConnectionMonitorDestinationResponsePtrOutputWithContext(context.Background())
}

func (i *connectionMonitorDestinationResponsePtrType) ToConnectionMonitorDestinationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorDestinationResponsePtrOutput)
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestinationResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorDestinationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorDestinationResponse)(nil)).Elem()
}

func (o ConnectionMonitorDestinationResponseOutput) ToConnectionMonitorDestinationResponseOutput() ConnectionMonitorDestinationResponseOutput {
	return o
}

func (o ConnectionMonitorDestinationResponseOutput) ToConnectionMonitorDestinationResponseOutputWithContext(ctx context.Context) ConnectionMonitorDestinationResponseOutput {
	return o
}

func (o ConnectionMonitorDestinationResponseOutput) ToConnectionMonitorDestinationResponsePtrOutput() ConnectionMonitorDestinationResponsePtrOutput {
	return o.ToConnectionMonitorDestinationResponsePtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorDestinationResponseOutput) ToConnectionMonitorDestinationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestinationResponse) *ConnectionMonitorDestinationResponse {
		return &v
	}).(ConnectionMonitorDestinationResponsePtrOutput)
}

// Address of the connection monitor destination (IP or domain name).
func (o ConnectionMonitorDestinationResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestinationResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The destination port used by connection monitor.
func (o ConnectionMonitorDestinationResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestinationResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the destination by connection monitor.
func (o ConnectionMonitorDestinationResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestinationResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorDestinationResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorDestinationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorDestinationResponse)(nil)).Elem()
}

func (o ConnectionMonitorDestinationResponsePtrOutput) ToConnectionMonitorDestinationResponsePtrOutput() ConnectionMonitorDestinationResponsePtrOutput {
	return o
}

func (o ConnectionMonitorDestinationResponsePtrOutput) ToConnectionMonitorDestinationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationResponsePtrOutput {
	return o
}

func (o ConnectionMonitorDestinationResponsePtrOutput) Elem() ConnectionMonitorDestinationResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestinationResponse) ConnectionMonitorDestinationResponse { return *v }).(ConnectionMonitorDestinationResponseOutput)
}

// Address of the connection monitor destination (IP or domain name).
func (o ConnectionMonitorDestinationResponsePtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestinationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The destination port used by connection monitor.
func (o ConnectionMonitorDestinationResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestinationResponse) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the destination by connection monitor.
func (o ConnectionMonitorDestinationResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestinationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Parameters that define the operation to create a connection monitor.
type ConnectionMonitorParameters struct {
	// Determines if the connection monitor will start automatically once created.
	AutoStart *bool `pulumi:"autoStart"`
	// Describes the destination of connection monitor.
	Destination ConnectionMonitorDestination `pulumi:"destination"`
	// Monitoring interval in seconds.
	MonitoringIntervalInSeconds *int `pulumi:"monitoringIntervalInSeconds"`
	// Describes the source of connection monitor.
	Source ConnectionMonitorSource `pulumi:"source"`
}

// ConnectionMonitorParametersInput is an input type that accepts ConnectionMonitorParametersArgs and ConnectionMonitorParametersOutput values.
// You can construct a concrete instance of `ConnectionMonitorParametersInput` via:
//
//          ConnectionMonitorParametersArgs{...}
type ConnectionMonitorParametersInput interface {
	pulumi.Input

	ToConnectionMonitorParametersOutput() ConnectionMonitorParametersOutput
	ToConnectionMonitorParametersOutputWithContext(context.Context) ConnectionMonitorParametersOutput
}

// Parameters that define the operation to create a connection monitor.
type ConnectionMonitorParametersArgs struct {
	// Determines if the connection monitor will start automatically once created.
	AutoStart pulumi.BoolPtrInput `pulumi:"autoStart"`
	// Describes the destination of connection monitor.
	Destination ConnectionMonitorDestinationInput `pulumi:"destination"`
	// Monitoring interval in seconds.
	MonitoringIntervalInSeconds pulumi.IntPtrInput `pulumi:"monitoringIntervalInSeconds"`
	// Describes the source of connection monitor.
	Source ConnectionMonitorSourceInput `pulumi:"source"`
}

func (ConnectionMonitorParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorParameters)(nil)).Elem()
}

func (i ConnectionMonitorParametersArgs) ToConnectionMonitorParametersOutput() ConnectionMonitorParametersOutput {
	return i.ToConnectionMonitorParametersOutputWithContext(context.Background())
}

func (i ConnectionMonitorParametersArgs) ToConnectionMonitorParametersOutputWithContext(ctx context.Context) ConnectionMonitorParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorParametersOutput)
}

func (i ConnectionMonitorParametersArgs) ToConnectionMonitorParametersPtrOutput() ConnectionMonitorParametersPtrOutput {
	return i.ToConnectionMonitorParametersPtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorParametersArgs) ToConnectionMonitorParametersPtrOutputWithContext(ctx context.Context) ConnectionMonitorParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorParametersOutput).ToConnectionMonitorParametersPtrOutputWithContext(ctx)
}

// ConnectionMonitorParametersPtrInput is an input type that accepts ConnectionMonitorParametersArgs, ConnectionMonitorParametersPtr and ConnectionMonitorParametersPtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorParametersPtrInput` via:
//
//          ConnectionMonitorParametersArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorParametersPtrInput interface {
	pulumi.Input

	ToConnectionMonitorParametersPtrOutput() ConnectionMonitorParametersPtrOutput
	ToConnectionMonitorParametersPtrOutputWithContext(context.Context) ConnectionMonitorParametersPtrOutput
}

type connectionMonitorParametersPtrType ConnectionMonitorParametersArgs

func ConnectionMonitorParametersPtr(v *ConnectionMonitorParametersArgs) ConnectionMonitorParametersPtrInput {
	return (*connectionMonitorParametersPtrType)(v)
}

func (*connectionMonitorParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorParameters)(nil)).Elem()
}

func (i *connectionMonitorParametersPtrType) ToConnectionMonitorParametersPtrOutput() ConnectionMonitorParametersPtrOutput {
	return i.ToConnectionMonitorParametersPtrOutputWithContext(context.Background())
}

func (i *connectionMonitorParametersPtrType) ToConnectionMonitorParametersPtrOutputWithContext(ctx context.Context) ConnectionMonitorParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorParametersPtrOutput)
}

// Parameters that define the operation to create a connection monitor.
type ConnectionMonitorParametersOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorParameters)(nil)).Elem()
}

func (o ConnectionMonitorParametersOutput) ToConnectionMonitorParametersOutput() ConnectionMonitorParametersOutput {
	return o
}

func (o ConnectionMonitorParametersOutput) ToConnectionMonitorParametersOutputWithContext(ctx context.Context) ConnectionMonitorParametersOutput {
	return o
}

func (o ConnectionMonitorParametersOutput) ToConnectionMonitorParametersPtrOutput() ConnectionMonitorParametersPtrOutput {
	return o.ToConnectionMonitorParametersPtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorParametersOutput) ToConnectionMonitorParametersPtrOutputWithContext(ctx context.Context) ConnectionMonitorParametersPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorParameters) *ConnectionMonitorParameters {
		return &v
	}).(ConnectionMonitorParametersPtrOutput)
}

// Determines if the connection monitor will start automatically once created.
func (o ConnectionMonitorParametersOutput) AutoStart() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorParameters) *bool { return v.AutoStart }).(pulumi.BoolPtrOutput)
}

// Describes the destination of connection monitor.
func (o ConnectionMonitorParametersOutput) Destination() ConnectionMonitorDestinationOutput {
	return o.ApplyT(func(v ConnectionMonitorParameters) ConnectionMonitorDestination { return v.Destination }).(ConnectionMonitorDestinationOutput)
}

// Monitoring interval in seconds.
func (o ConnectionMonitorParametersOutput) MonitoringIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorParameters) *int { return v.MonitoringIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// Describes the source of connection monitor.
func (o ConnectionMonitorParametersOutput) Source() ConnectionMonitorSourceOutput {
	return o.ApplyT(func(v ConnectionMonitorParameters) ConnectionMonitorSource { return v.Source }).(ConnectionMonitorSourceOutput)
}

type ConnectionMonitorParametersPtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorParameters)(nil)).Elem()
}

func (o ConnectionMonitorParametersPtrOutput) ToConnectionMonitorParametersPtrOutput() ConnectionMonitorParametersPtrOutput {
	return o
}

func (o ConnectionMonitorParametersPtrOutput) ToConnectionMonitorParametersPtrOutputWithContext(ctx context.Context) ConnectionMonitorParametersPtrOutput {
	return o
}

func (o ConnectionMonitorParametersPtrOutput) Elem() ConnectionMonitorParametersOutput {
	return o.ApplyT(func(v *ConnectionMonitorParameters) ConnectionMonitorParameters { return *v }).(ConnectionMonitorParametersOutput)
}

// Determines if the connection monitor will start automatically once created.
func (o ConnectionMonitorParametersPtrOutput) AutoStart() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorParameters) *bool {
		if v == nil {
			return nil
		}
		return v.AutoStart
	}).(pulumi.BoolPtrOutput)
}

// Describes the destination of connection monitor.
func (o ConnectionMonitorParametersPtrOutput) Destination() ConnectionMonitorDestinationPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorParameters) *ConnectionMonitorDestination {
		if v == nil {
			return nil
		}
		return &v.Destination
	}).(ConnectionMonitorDestinationPtrOutput)
}

// Monitoring interval in seconds.
func (o ConnectionMonitorParametersPtrOutput) MonitoringIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorParameters) *int {
		if v == nil {
			return nil
		}
		return v.MonitoringIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// Describes the source of connection monitor.
func (o ConnectionMonitorParametersPtrOutput) Source() ConnectionMonitorSourcePtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorParameters) *ConnectionMonitorSource {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(ConnectionMonitorSourcePtrOutput)
}

// Describes the properties of a connection monitor.
type ConnectionMonitorResultPropertiesResponse struct {
	// Determines if the connection monitor will start automatically once created.
	AutoStart *bool `pulumi:"autoStart"`
	// Describes the destination of connection monitor.
	Destination ConnectionMonitorDestinationResponse `pulumi:"destination"`
	// Monitoring interval in seconds.
	MonitoringIntervalInSeconds *int `pulumi:"monitoringIntervalInSeconds"`
	// The monitoring status of the connection monitor.
	MonitoringStatus *string `pulumi:"monitoringStatus"`
	// The provisioning state of the connection monitor.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Describes the source of connection monitor.
	Source ConnectionMonitorSourceResponse `pulumi:"source"`
	// The date and time when the connection monitor was started.
	StartTime *string `pulumi:"startTime"`
}

// ConnectionMonitorResultPropertiesResponseInput is an input type that accepts ConnectionMonitorResultPropertiesResponseArgs and ConnectionMonitorResultPropertiesResponseOutput values.
// You can construct a concrete instance of `ConnectionMonitorResultPropertiesResponseInput` via:
//
//          ConnectionMonitorResultPropertiesResponseArgs{...}
type ConnectionMonitorResultPropertiesResponseInput interface {
	pulumi.Input

	ToConnectionMonitorResultPropertiesResponseOutput() ConnectionMonitorResultPropertiesResponseOutput
	ToConnectionMonitorResultPropertiesResponseOutputWithContext(context.Context) ConnectionMonitorResultPropertiesResponseOutput
}

// Describes the properties of a connection monitor.
type ConnectionMonitorResultPropertiesResponseArgs struct {
	// Determines if the connection monitor will start automatically once created.
	AutoStart pulumi.BoolPtrInput `pulumi:"autoStart"`
	// Describes the destination of connection monitor.
	Destination ConnectionMonitorDestinationResponseInput `pulumi:"destination"`
	// Monitoring interval in seconds.
	MonitoringIntervalInSeconds pulumi.IntPtrInput `pulumi:"monitoringIntervalInSeconds"`
	// The monitoring status of the connection monitor.
	MonitoringStatus pulumi.StringPtrInput `pulumi:"monitoringStatus"`
	// The provisioning state of the connection monitor.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Describes the source of connection monitor.
	Source ConnectionMonitorSourceResponseInput `pulumi:"source"`
	// The date and time when the connection monitor was started.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (ConnectionMonitorResultPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorResultPropertiesResponse)(nil)).Elem()
}

func (i ConnectionMonitorResultPropertiesResponseArgs) ToConnectionMonitorResultPropertiesResponseOutput() ConnectionMonitorResultPropertiesResponseOutput {
	return i.ToConnectionMonitorResultPropertiesResponseOutputWithContext(context.Background())
}

func (i ConnectionMonitorResultPropertiesResponseArgs) ToConnectionMonitorResultPropertiesResponseOutputWithContext(ctx context.Context) ConnectionMonitorResultPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorResultPropertiesResponseOutput)
}

func (i ConnectionMonitorResultPropertiesResponseArgs) ToConnectionMonitorResultPropertiesResponsePtrOutput() ConnectionMonitorResultPropertiesResponsePtrOutput {
	return i.ToConnectionMonitorResultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorResultPropertiesResponseArgs) ToConnectionMonitorResultPropertiesResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorResultPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorResultPropertiesResponseOutput).ToConnectionMonitorResultPropertiesResponsePtrOutputWithContext(ctx)
}

// ConnectionMonitorResultPropertiesResponsePtrInput is an input type that accepts ConnectionMonitorResultPropertiesResponseArgs, ConnectionMonitorResultPropertiesResponsePtr and ConnectionMonitorResultPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorResultPropertiesResponsePtrInput` via:
//
//          ConnectionMonitorResultPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorResultPropertiesResponsePtrInput interface {
	pulumi.Input

	ToConnectionMonitorResultPropertiesResponsePtrOutput() ConnectionMonitorResultPropertiesResponsePtrOutput
	ToConnectionMonitorResultPropertiesResponsePtrOutputWithContext(context.Context) ConnectionMonitorResultPropertiesResponsePtrOutput
}

type connectionMonitorResultPropertiesResponsePtrType ConnectionMonitorResultPropertiesResponseArgs

func ConnectionMonitorResultPropertiesResponsePtr(v *ConnectionMonitorResultPropertiesResponseArgs) ConnectionMonitorResultPropertiesResponsePtrInput {
	return (*connectionMonitorResultPropertiesResponsePtrType)(v)
}

func (*connectionMonitorResultPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorResultPropertiesResponse)(nil)).Elem()
}

func (i *connectionMonitorResultPropertiesResponsePtrType) ToConnectionMonitorResultPropertiesResponsePtrOutput() ConnectionMonitorResultPropertiesResponsePtrOutput {
	return i.ToConnectionMonitorResultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *connectionMonitorResultPropertiesResponsePtrType) ToConnectionMonitorResultPropertiesResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorResultPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorResultPropertiesResponsePtrOutput)
}

// Describes the properties of a connection monitor.
type ConnectionMonitorResultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorResultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorResultPropertiesResponse)(nil)).Elem()
}

func (o ConnectionMonitorResultPropertiesResponseOutput) ToConnectionMonitorResultPropertiesResponseOutput() ConnectionMonitorResultPropertiesResponseOutput {
	return o
}

func (o ConnectionMonitorResultPropertiesResponseOutput) ToConnectionMonitorResultPropertiesResponseOutputWithContext(ctx context.Context) ConnectionMonitorResultPropertiesResponseOutput {
	return o
}

func (o ConnectionMonitorResultPropertiesResponseOutput) ToConnectionMonitorResultPropertiesResponsePtrOutput() ConnectionMonitorResultPropertiesResponsePtrOutput {
	return o.ToConnectionMonitorResultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorResultPropertiesResponseOutput) ToConnectionMonitorResultPropertiesResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorResultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorResultPropertiesResponse) *ConnectionMonitorResultPropertiesResponse {
		return &v
	}).(ConnectionMonitorResultPropertiesResponsePtrOutput)
}

// Determines if the connection monitor will start automatically once created.
func (o ConnectionMonitorResultPropertiesResponseOutput) AutoStart() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorResultPropertiesResponse) *bool { return v.AutoStart }).(pulumi.BoolPtrOutput)
}

// Describes the destination of connection monitor.
func (o ConnectionMonitorResultPropertiesResponseOutput) Destination() ConnectionMonitorDestinationResponseOutput {
	return o.ApplyT(func(v ConnectionMonitorResultPropertiesResponse) ConnectionMonitorDestinationResponse {
		return v.Destination
	}).(ConnectionMonitorDestinationResponseOutput)
}

// Monitoring interval in seconds.
func (o ConnectionMonitorResultPropertiesResponseOutput) MonitoringIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorResultPropertiesResponse) *int { return v.MonitoringIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The monitoring status of the connection monitor.
func (o ConnectionMonitorResultPropertiesResponseOutput) MonitoringStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorResultPropertiesResponse) *string { return v.MonitoringStatus }).(pulumi.StringPtrOutput)
}

// The provisioning state of the connection monitor.
func (o ConnectionMonitorResultPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorResultPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Describes the source of connection monitor.
func (o ConnectionMonitorResultPropertiesResponseOutput) Source() ConnectionMonitorSourceResponseOutput {
	return o.ApplyT(func(v ConnectionMonitorResultPropertiesResponse) ConnectionMonitorSourceResponse { return v.Source }).(ConnectionMonitorSourceResponseOutput)
}

// The date and time when the connection monitor was started.
func (o ConnectionMonitorResultPropertiesResponseOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorResultPropertiesResponse) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorResultPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorResultPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorResultPropertiesResponse)(nil)).Elem()
}

func (o ConnectionMonitorResultPropertiesResponsePtrOutput) ToConnectionMonitorResultPropertiesResponsePtrOutput() ConnectionMonitorResultPropertiesResponsePtrOutput {
	return o
}

func (o ConnectionMonitorResultPropertiesResponsePtrOutput) ToConnectionMonitorResultPropertiesResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorResultPropertiesResponsePtrOutput {
	return o
}

func (o ConnectionMonitorResultPropertiesResponsePtrOutput) Elem() ConnectionMonitorResultPropertiesResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorResultPropertiesResponse) ConnectionMonitorResultPropertiesResponse {
		return *v
	}).(ConnectionMonitorResultPropertiesResponseOutput)
}

// Determines if the connection monitor will start automatically once created.
func (o ConnectionMonitorResultPropertiesResponsePtrOutput) AutoStart() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorResultPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AutoStart
	}).(pulumi.BoolPtrOutput)
}

// Describes the destination of connection monitor.
func (o ConnectionMonitorResultPropertiesResponsePtrOutput) Destination() ConnectionMonitorDestinationResponsePtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorResultPropertiesResponse) *ConnectionMonitorDestinationResponse {
		if v == nil {
			return nil
		}
		return &v.Destination
	}).(ConnectionMonitorDestinationResponsePtrOutput)
}

// Monitoring interval in seconds.
func (o ConnectionMonitorResultPropertiesResponsePtrOutput) MonitoringIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorResultPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.MonitoringIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The monitoring status of the connection monitor.
func (o ConnectionMonitorResultPropertiesResponsePtrOutput) MonitoringStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorResultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.MonitoringStatus
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the connection monitor.
func (o ConnectionMonitorResultPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorResultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Describes the source of connection monitor.
func (o ConnectionMonitorResultPropertiesResponsePtrOutput) Source() ConnectionMonitorSourceResponsePtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorResultPropertiesResponse) *ConnectionMonitorSourceResponse {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(ConnectionMonitorSourceResponsePtrOutput)
}

// The date and time when the connection monitor was started.
func (o ConnectionMonitorResultPropertiesResponsePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorResultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Describes the source of connection monitor.
type ConnectionMonitorSource struct {
	// The source port used by connection monitor.
	Port *int `pulumi:"port"`
	// The ID of the resource used as the source by connection monitor.
	ResourceId string `pulumi:"resourceId"`
}

// ConnectionMonitorSourceInput is an input type that accepts ConnectionMonitorSourceArgs and ConnectionMonitorSourceOutput values.
// You can construct a concrete instance of `ConnectionMonitorSourceInput` via:
//
//          ConnectionMonitorSourceArgs{...}
type ConnectionMonitorSourceInput interface {
	pulumi.Input

	ToConnectionMonitorSourceOutput() ConnectionMonitorSourceOutput
	ToConnectionMonitorSourceOutputWithContext(context.Context) ConnectionMonitorSourceOutput
}

// Describes the source of connection monitor.
type ConnectionMonitorSourceArgs struct {
	// The source port used by connection monitor.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The ID of the resource used as the source by connection monitor.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

func (ConnectionMonitorSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorSource)(nil)).Elem()
}

func (i ConnectionMonitorSourceArgs) ToConnectionMonitorSourceOutput() ConnectionMonitorSourceOutput {
	return i.ToConnectionMonitorSourceOutputWithContext(context.Background())
}

func (i ConnectionMonitorSourceArgs) ToConnectionMonitorSourceOutputWithContext(ctx context.Context) ConnectionMonitorSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSourceOutput)
}

func (i ConnectionMonitorSourceArgs) ToConnectionMonitorSourcePtrOutput() ConnectionMonitorSourcePtrOutput {
	return i.ToConnectionMonitorSourcePtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorSourceArgs) ToConnectionMonitorSourcePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSourceOutput).ToConnectionMonitorSourcePtrOutputWithContext(ctx)
}

// ConnectionMonitorSourcePtrInput is an input type that accepts ConnectionMonitorSourceArgs, ConnectionMonitorSourcePtr and ConnectionMonitorSourcePtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorSourcePtrInput` via:
//
//          ConnectionMonitorSourceArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorSourcePtrInput interface {
	pulumi.Input

	ToConnectionMonitorSourcePtrOutput() ConnectionMonitorSourcePtrOutput
	ToConnectionMonitorSourcePtrOutputWithContext(context.Context) ConnectionMonitorSourcePtrOutput
}

type connectionMonitorSourcePtrType ConnectionMonitorSourceArgs

func ConnectionMonitorSourcePtr(v *ConnectionMonitorSourceArgs) ConnectionMonitorSourcePtrInput {
	return (*connectionMonitorSourcePtrType)(v)
}

func (*connectionMonitorSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorSource)(nil)).Elem()
}

func (i *connectionMonitorSourcePtrType) ToConnectionMonitorSourcePtrOutput() ConnectionMonitorSourcePtrOutput {
	return i.ToConnectionMonitorSourcePtrOutputWithContext(context.Background())
}

func (i *connectionMonitorSourcePtrType) ToConnectionMonitorSourcePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSourcePtrOutput)
}

// Describes the source of connection monitor.
type ConnectionMonitorSourceOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorSource)(nil)).Elem()
}

func (o ConnectionMonitorSourceOutput) ToConnectionMonitorSourceOutput() ConnectionMonitorSourceOutput {
	return o
}

func (o ConnectionMonitorSourceOutput) ToConnectionMonitorSourceOutputWithContext(ctx context.Context) ConnectionMonitorSourceOutput {
	return o
}

func (o ConnectionMonitorSourceOutput) ToConnectionMonitorSourcePtrOutput() ConnectionMonitorSourcePtrOutput {
	return o.ToConnectionMonitorSourcePtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorSourceOutput) ToConnectionMonitorSourcePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourcePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSource) *ConnectionMonitorSource {
		return &v
	}).(ConnectionMonitorSourcePtrOutput)
}

// The source port used by connection monitor.
func (o ConnectionMonitorSourceOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSource) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the source by connection monitor.
func (o ConnectionMonitorSourceOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorSource) string { return v.ResourceId }).(pulumi.StringOutput)
}

type ConnectionMonitorSourcePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorSource)(nil)).Elem()
}

func (o ConnectionMonitorSourcePtrOutput) ToConnectionMonitorSourcePtrOutput() ConnectionMonitorSourcePtrOutput {
	return o
}

func (o ConnectionMonitorSourcePtrOutput) ToConnectionMonitorSourcePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourcePtrOutput {
	return o
}

func (o ConnectionMonitorSourcePtrOutput) Elem() ConnectionMonitorSourceOutput {
	return o.ApplyT(func(v *ConnectionMonitorSource) ConnectionMonitorSource { return *v }).(ConnectionMonitorSourceOutput)
}

// The source port used by connection monitor.
func (o ConnectionMonitorSourcePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSource) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the source by connection monitor.
func (o ConnectionMonitorSourcePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSource) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Describes the source of connection monitor.
type ConnectionMonitorSourceResponse struct {
	// The source port used by connection monitor.
	Port *int `pulumi:"port"`
	// The ID of the resource used as the source by connection monitor.
	ResourceId string `pulumi:"resourceId"`
}

// ConnectionMonitorSourceResponseInput is an input type that accepts ConnectionMonitorSourceResponseArgs and ConnectionMonitorSourceResponseOutput values.
// You can construct a concrete instance of `ConnectionMonitorSourceResponseInput` via:
//
//          ConnectionMonitorSourceResponseArgs{...}
type ConnectionMonitorSourceResponseInput interface {
	pulumi.Input

	ToConnectionMonitorSourceResponseOutput() ConnectionMonitorSourceResponseOutput
	ToConnectionMonitorSourceResponseOutputWithContext(context.Context) ConnectionMonitorSourceResponseOutput
}

// Describes the source of connection monitor.
type ConnectionMonitorSourceResponseArgs struct {
	// The source port used by connection monitor.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The ID of the resource used as the source by connection monitor.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

func (ConnectionMonitorSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorSourceResponse)(nil)).Elem()
}

func (i ConnectionMonitorSourceResponseArgs) ToConnectionMonitorSourceResponseOutput() ConnectionMonitorSourceResponseOutput {
	return i.ToConnectionMonitorSourceResponseOutputWithContext(context.Background())
}

func (i ConnectionMonitorSourceResponseArgs) ToConnectionMonitorSourceResponseOutputWithContext(ctx context.Context) ConnectionMonitorSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSourceResponseOutput)
}

func (i ConnectionMonitorSourceResponseArgs) ToConnectionMonitorSourceResponsePtrOutput() ConnectionMonitorSourceResponsePtrOutput {
	return i.ToConnectionMonitorSourceResponsePtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorSourceResponseArgs) ToConnectionMonitorSourceResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSourceResponseOutput).ToConnectionMonitorSourceResponsePtrOutputWithContext(ctx)
}

// ConnectionMonitorSourceResponsePtrInput is an input type that accepts ConnectionMonitorSourceResponseArgs, ConnectionMonitorSourceResponsePtr and ConnectionMonitorSourceResponsePtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorSourceResponsePtrInput` via:
//
//          ConnectionMonitorSourceResponseArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorSourceResponsePtrInput interface {
	pulumi.Input

	ToConnectionMonitorSourceResponsePtrOutput() ConnectionMonitorSourceResponsePtrOutput
	ToConnectionMonitorSourceResponsePtrOutputWithContext(context.Context) ConnectionMonitorSourceResponsePtrOutput
}

type connectionMonitorSourceResponsePtrType ConnectionMonitorSourceResponseArgs

func ConnectionMonitorSourceResponsePtr(v *ConnectionMonitorSourceResponseArgs) ConnectionMonitorSourceResponsePtrInput {
	return (*connectionMonitorSourceResponsePtrType)(v)
}

func (*connectionMonitorSourceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorSourceResponse)(nil)).Elem()
}

func (i *connectionMonitorSourceResponsePtrType) ToConnectionMonitorSourceResponsePtrOutput() ConnectionMonitorSourceResponsePtrOutput {
	return i.ToConnectionMonitorSourceResponsePtrOutputWithContext(context.Background())
}

func (i *connectionMonitorSourceResponsePtrType) ToConnectionMonitorSourceResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSourceResponsePtrOutput)
}

// Describes the source of connection monitor.
type ConnectionMonitorSourceResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorSourceResponse)(nil)).Elem()
}

func (o ConnectionMonitorSourceResponseOutput) ToConnectionMonitorSourceResponseOutput() ConnectionMonitorSourceResponseOutput {
	return o
}

func (o ConnectionMonitorSourceResponseOutput) ToConnectionMonitorSourceResponseOutputWithContext(ctx context.Context) ConnectionMonitorSourceResponseOutput {
	return o
}

func (o ConnectionMonitorSourceResponseOutput) ToConnectionMonitorSourceResponsePtrOutput() ConnectionMonitorSourceResponsePtrOutput {
	return o.ToConnectionMonitorSourceResponsePtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorSourceResponseOutput) ToConnectionMonitorSourceResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourceResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSourceResponse) *ConnectionMonitorSourceResponse {
		return &v
	}).(ConnectionMonitorSourceResponsePtrOutput)
}

// The source port used by connection monitor.
func (o ConnectionMonitorSourceResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSourceResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the source by connection monitor.
func (o ConnectionMonitorSourceResponseOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorSourceResponse) string { return v.ResourceId }).(pulumi.StringOutput)
}

type ConnectionMonitorSourceResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorSourceResponse)(nil)).Elem()
}

func (o ConnectionMonitorSourceResponsePtrOutput) ToConnectionMonitorSourceResponsePtrOutput() ConnectionMonitorSourceResponsePtrOutput {
	return o
}

func (o ConnectionMonitorSourceResponsePtrOutput) ToConnectionMonitorSourceResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourceResponsePtrOutput {
	return o
}

func (o ConnectionMonitorSourceResponsePtrOutput) Elem() ConnectionMonitorSourceResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorSourceResponse) ConnectionMonitorSourceResponse { return *v }).(ConnectionMonitorSourceResponseOutput)
}

// The source port used by connection monitor.
func (o ConnectionMonitorSourceResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSourceResponse) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the source by connection monitor.
func (o ConnectionMonitorSourceResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSourceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Reference to container resource in remote resource provider.
type Container struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// ContainerInput is an input type that accepts ContainerArgs and ContainerOutput values.
// You can construct a concrete instance of `ContainerInput` via:
//
//          ContainerArgs{...}
type ContainerInput interface {
	pulumi.Input

	ToContainerOutput() ContainerOutput
	ToContainerOutputWithContext(context.Context) ContainerOutput
}

// Reference to container resource in remote resource provider.
type ContainerArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Container)(nil)).Elem()
}

func (i ContainerArgs) ToContainerOutput() ContainerOutput {
	return i.ToContainerOutputWithContext(context.Background())
}

func (i ContainerArgs) ToContainerOutputWithContext(ctx context.Context) ContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerOutput)
}

func (i ContainerArgs) ToContainerPtrOutput() ContainerPtrOutput {
	return i.ToContainerPtrOutputWithContext(context.Background())
}

func (i ContainerArgs) ToContainerPtrOutputWithContext(ctx context.Context) ContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerOutput).ToContainerPtrOutputWithContext(ctx)
}

// ContainerPtrInput is an input type that accepts ContainerArgs, ContainerPtr and ContainerPtrOutput values.
// You can construct a concrete instance of `ContainerPtrInput` via:
//
//          ContainerArgs{...}
//
//  or:
//
//          nil
type ContainerPtrInput interface {
	pulumi.Input

	ToContainerPtrOutput() ContainerPtrOutput
	ToContainerPtrOutputWithContext(context.Context) ContainerPtrOutput
}

type containerPtrType ContainerArgs

func ContainerPtr(v *ContainerArgs) ContainerPtrInput {
	return (*containerPtrType)(v)
}

func (*containerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Container)(nil)).Elem()
}

func (i *containerPtrType) ToContainerPtrOutput() ContainerPtrOutput {
	return i.ToContainerPtrOutputWithContext(context.Background())
}

func (i *containerPtrType) ToContainerPtrOutputWithContext(ctx context.Context) ContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPtrOutput)
}

// Reference to container resource in remote resource provider.
type ContainerOutput struct{ *pulumi.OutputState }

func (ContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Container)(nil)).Elem()
}

func (o ContainerOutput) ToContainerOutput() ContainerOutput {
	return o
}

func (o ContainerOutput) ToContainerOutputWithContext(ctx context.Context) ContainerOutput {
	return o
}

func (o ContainerOutput) ToContainerPtrOutput() ContainerPtrOutput {
	return o.ToContainerPtrOutputWithContext(context.Background())
}

func (o ContainerOutput) ToContainerPtrOutputWithContext(ctx context.Context) ContainerPtrOutput {
	return o.ApplyT(func(v Container) *Container {
		return &v
	}).(ContainerPtrOutput)
}

// Resource ID.
func (o ContainerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Container) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ContainerPtrOutput struct{ *pulumi.OutputState }

func (ContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Container)(nil)).Elem()
}

func (o ContainerPtrOutput) ToContainerPtrOutput() ContainerPtrOutput {
	return o
}

func (o ContainerPtrOutput) ToContainerPtrOutputWithContext(ctx context.Context) ContainerPtrOutput {
	return o
}

func (o ContainerPtrOutput) Elem() ContainerOutput {
	return o.ApplyT(func(v *Container) Container { return *v }).(ContainerOutput)
}

// Resource ID.
func (o ContainerPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Container) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Container network interface child resource.
type ContainerNetworkInterface struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Container network interface properties.
	Properties *ContainerNetworkInterfacePropertiesFormat `pulumi:"properties"`
}

// ContainerNetworkInterfaceInput is an input type that accepts ContainerNetworkInterfaceArgs and ContainerNetworkInterfaceOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceInput` via:
//
//          ContainerNetworkInterfaceArgs{...}
type ContainerNetworkInterfaceInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceOutput() ContainerNetworkInterfaceOutput
	ToContainerNetworkInterfaceOutputWithContext(context.Context) ContainerNetworkInterfaceOutput
}

// Container network interface child resource.
type ContainerNetworkInterfaceArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Container network interface properties.
	Properties ContainerNetworkInterfacePropertiesFormatPtrInput `pulumi:"properties"`
}

func (ContainerNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterface)(nil)).Elem()
}

func (i ContainerNetworkInterfaceArgs) ToContainerNetworkInterfaceOutput() ContainerNetworkInterfaceOutput {
	return i.ToContainerNetworkInterfaceOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceArgs) ToContainerNetworkInterfaceOutputWithContext(ctx context.Context) ContainerNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceOutput)
}

// ContainerNetworkInterfaceArrayInput is an input type that accepts ContainerNetworkInterfaceArray and ContainerNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceArrayInput` via:
//
//          ContainerNetworkInterfaceArray{ ContainerNetworkInterfaceArgs{...} }
type ContainerNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceArrayOutput() ContainerNetworkInterfaceArrayOutput
	ToContainerNetworkInterfaceArrayOutputWithContext(context.Context) ContainerNetworkInterfaceArrayOutput
}

type ContainerNetworkInterfaceArray []ContainerNetworkInterfaceInput

func (ContainerNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterface)(nil)).Elem()
}

func (i ContainerNetworkInterfaceArray) ToContainerNetworkInterfaceArrayOutput() ContainerNetworkInterfaceArrayOutput {
	return i.ToContainerNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceArray) ToContainerNetworkInterfaceArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceArrayOutput)
}

// Container network interface child resource.
type ContainerNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterface)(nil)).Elem()
}

func (o ContainerNetworkInterfaceOutput) ToContainerNetworkInterfaceOutput() ContainerNetworkInterfaceOutput {
	return o
}

func (o ContainerNetworkInterfaceOutput) ToContainerNetworkInterfaceOutputWithContext(ctx context.Context) ContainerNetworkInterfaceOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ContainerNetworkInterfaceOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterface) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ContainerNetworkInterfaceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterface) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o ContainerNetworkInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Container network interface properties.
func (o ContainerNetworkInterfaceOutput) Properties() ContainerNetworkInterfacePropertiesFormatPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterface) *ContainerNetworkInterfacePropertiesFormat { return v.Properties }).(ContainerNetworkInterfacePropertiesFormatPtrOutput)
}

type ContainerNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterface)(nil)).Elem()
}

func (o ContainerNetworkInterfaceArrayOutput) ToContainerNetworkInterfaceArrayOutput() ContainerNetworkInterfaceArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceArrayOutput) ToContainerNetworkInterfaceArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) ContainerNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerNetworkInterface {
		return vs[0].([]ContainerNetworkInterface)[vs[1].(int)]
	}).(ContainerNetworkInterfaceOutput)
}

// Container network interface configuration child resource.
type ContainerNetworkInterfaceConfiguration struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Container network interface configuration properties.
	Properties *ContainerNetworkInterfaceConfigurationPropertiesFormat `pulumi:"properties"`
}

// ContainerNetworkInterfaceConfigurationInput is an input type that accepts ContainerNetworkInterfaceConfigurationArgs and ContainerNetworkInterfaceConfigurationOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceConfigurationInput` via:
//
//          ContainerNetworkInterfaceConfigurationArgs{...}
type ContainerNetworkInterfaceConfigurationInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceConfigurationOutput() ContainerNetworkInterfaceConfigurationOutput
	ToContainerNetworkInterfaceConfigurationOutputWithContext(context.Context) ContainerNetworkInterfaceConfigurationOutput
}

// Container network interface configuration child resource.
type ContainerNetworkInterfaceConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Container network interface configuration properties.
	Properties ContainerNetworkInterfaceConfigurationPropertiesFormatPtrInput `pulumi:"properties"`
}

func (ContainerNetworkInterfaceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceConfiguration)(nil)).Elem()
}

func (i ContainerNetworkInterfaceConfigurationArgs) ToContainerNetworkInterfaceConfigurationOutput() ContainerNetworkInterfaceConfigurationOutput {
	return i.ToContainerNetworkInterfaceConfigurationOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceConfigurationArgs) ToContainerNetworkInterfaceConfigurationOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceConfigurationOutput)
}

func (i ContainerNetworkInterfaceConfigurationArgs) ToContainerNetworkInterfaceConfigurationPtrOutput() ContainerNetworkInterfaceConfigurationPtrOutput {
	return i.ToContainerNetworkInterfaceConfigurationPtrOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceConfigurationArgs) ToContainerNetworkInterfaceConfigurationPtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceConfigurationOutput).ToContainerNetworkInterfaceConfigurationPtrOutputWithContext(ctx)
}

// ContainerNetworkInterfaceConfigurationPtrInput is an input type that accepts ContainerNetworkInterfaceConfigurationArgs, ContainerNetworkInterfaceConfigurationPtr and ContainerNetworkInterfaceConfigurationPtrOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceConfigurationPtrInput` via:
//
//          ContainerNetworkInterfaceConfigurationArgs{...}
//
//  or:
//
//          nil
type ContainerNetworkInterfaceConfigurationPtrInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceConfigurationPtrOutput() ContainerNetworkInterfaceConfigurationPtrOutput
	ToContainerNetworkInterfaceConfigurationPtrOutputWithContext(context.Context) ContainerNetworkInterfaceConfigurationPtrOutput
}

type containerNetworkInterfaceConfigurationPtrType ContainerNetworkInterfaceConfigurationArgs

func ContainerNetworkInterfaceConfigurationPtr(v *ContainerNetworkInterfaceConfigurationArgs) ContainerNetworkInterfaceConfigurationPtrInput {
	return (*containerNetworkInterfaceConfigurationPtrType)(v)
}

func (*containerNetworkInterfaceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerNetworkInterfaceConfiguration)(nil)).Elem()
}

func (i *containerNetworkInterfaceConfigurationPtrType) ToContainerNetworkInterfaceConfigurationPtrOutput() ContainerNetworkInterfaceConfigurationPtrOutput {
	return i.ToContainerNetworkInterfaceConfigurationPtrOutputWithContext(context.Background())
}

func (i *containerNetworkInterfaceConfigurationPtrType) ToContainerNetworkInterfaceConfigurationPtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceConfigurationPtrOutput)
}

// ContainerNetworkInterfaceConfigurationArrayInput is an input type that accepts ContainerNetworkInterfaceConfigurationArray and ContainerNetworkInterfaceConfigurationArrayOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceConfigurationArrayInput` via:
//
//          ContainerNetworkInterfaceConfigurationArray{ ContainerNetworkInterfaceConfigurationArgs{...} }
type ContainerNetworkInterfaceConfigurationArrayInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceConfigurationArrayOutput() ContainerNetworkInterfaceConfigurationArrayOutput
	ToContainerNetworkInterfaceConfigurationArrayOutputWithContext(context.Context) ContainerNetworkInterfaceConfigurationArrayOutput
}

type ContainerNetworkInterfaceConfigurationArray []ContainerNetworkInterfaceConfigurationInput

func (ContainerNetworkInterfaceConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceConfiguration)(nil)).Elem()
}

func (i ContainerNetworkInterfaceConfigurationArray) ToContainerNetworkInterfaceConfigurationArrayOutput() ContainerNetworkInterfaceConfigurationArrayOutput {
	return i.ToContainerNetworkInterfaceConfigurationArrayOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceConfigurationArray) ToContainerNetworkInterfaceConfigurationArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceConfigurationArrayOutput)
}

// Container network interface configuration child resource.
type ContainerNetworkInterfaceConfigurationOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceConfiguration)(nil)).Elem()
}

func (o ContainerNetworkInterfaceConfigurationOutput) ToContainerNetworkInterfaceConfigurationOutput() ContainerNetworkInterfaceConfigurationOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationOutput) ToContainerNetworkInterfaceConfigurationOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationOutput) ToContainerNetworkInterfaceConfigurationPtrOutput() ContainerNetworkInterfaceConfigurationPtrOutput {
	return o.ToContainerNetworkInterfaceConfigurationPtrOutputWithContext(context.Background())
}

func (o ContainerNetworkInterfaceConfigurationOutput) ToContainerNetworkInterfaceConfigurationPtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfiguration) *ContainerNetworkInterfaceConfiguration {
		return &v
	}).(ContainerNetworkInterfaceConfigurationPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ContainerNetworkInterfaceConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ContainerNetworkInterfaceConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o ContainerNetworkInterfaceConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Container network interface configuration properties.
func (o ContainerNetworkInterfaceConfigurationOutput) Properties() ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfiguration) *ContainerNetworkInterfaceConfigurationPropertiesFormat {
		return v.Properties
	}).(ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput)
}

type ContainerNetworkInterfaceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerNetworkInterfaceConfiguration)(nil)).Elem()
}

func (o ContainerNetworkInterfaceConfigurationPtrOutput) ToContainerNetworkInterfaceConfigurationPtrOutput() ContainerNetworkInterfaceConfigurationPtrOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationPtrOutput) ToContainerNetworkInterfaceConfigurationPtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationPtrOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationPtrOutput) Elem() ContainerNetworkInterfaceConfigurationOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfaceConfiguration) ContainerNetworkInterfaceConfiguration { return *v }).(ContainerNetworkInterfaceConfigurationOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ContainerNetworkInterfaceConfigurationPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfaceConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ContainerNetworkInterfaceConfigurationPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfaceConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o ContainerNetworkInterfaceConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfaceConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Container network interface configuration properties.
func (o ContainerNetworkInterfaceConfigurationPtrOutput) Properties() ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfaceConfiguration) *ContainerNetworkInterfaceConfigurationPropertiesFormat {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput)
}

type ContainerNetworkInterfaceConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceConfiguration)(nil)).Elem()
}

func (o ContainerNetworkInterfaceConfigurationArrayOutput) ToContainerNetworkInterfaceConfigurationArrayOutput() ContainerNetworkInterfaceConfigurationArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationArrayOutput) ToContainerNetworkInterfaceConfigurationArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationArrayOutput) Index(i pulumi.IntInput) ContainerNetworkInterfaceConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerNetworkInterfaceConfiguration {
		return vs[0].([]ContainerNetworkInterfaceConfiguration)[vs[1].(int)]
	}).(ContainerNetworkInterfaceConfigurationOutput)
}

// Container network interface configuration properties.
type ContainerNetworkInterfaceConfigurationPropertiesFormat struct {
	// A list of container network interfaces created from this container network interface configuration.
	ContainerNetworkInterfaces []SubResource `pulumi:"containerNetworkInterfaces"`
	// A list of ip configurations of the container network interface configuration.
	IpConfigurations []IPConfigurationProfile `pulumi:"ipConfigurations"`
}

// ContainerNetworkInterfaceConfigurationPropertiesFormatInput is an input type that accepts ContainerNetworkInterfaceConfigurationPropertiesFormatArgs and ContainerNetworkInterfaceConfigurationPropertiesFormatOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceConfigurationPropertiesFormatInput` via:
//
//          ContainerNetworkInterfaceConfigurationPropertiesFormatArgs{...}
type ContainerNetworkInterfaceConfigurationPropertiesFormatInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceConfigurationPropertiesFormatOutput() ContainerNetworkInterfaceConfigurationPropertiesFormatOutput
	ToContainerNetworkInterfaceConfigurationPropertiesFormatOutputWithContext(context.Context) ContainerNetworkInterfaceConfigurationPropertiesFormatOutput
}

// Container network interface configuration properties.
type ContainerNetworkInterfaceConfigurationPropertiesFormatArgs struct {
	// A list of container network interfaces created from this container network interface configuration.
	ContainerNetworkInterfaces SubResourceArrayInput `pulumi:"containerNetworkInterfaces"`
	// A list of ip configurations of the container network interface configuration.
	IpConfigurations IPConfigurationProfileArrayInput `pulumi:"ipConfigurations"`
}

func (ContainerNetworkInterfaceConfigurationPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceConfigurationPropertiesFormat)(nil)).Elem()
}

func (i ContainerNetworkInterfaceConfigurationPropertiesFormatArgs) ToContainerNetworkInterfaceConfigurationPropertiesFormatOutput() ContainerNetworkInterfaceConfigurationPropertiesFormatOutput {
	return i.ToContainerNetworkInterfaceConfigurationPropertiesFormatOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceConfigurationPropertiesFormatArgs) ToContainerNetworkInterfaceConfigurationPropertiesFormatOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceConfigurationPropertiesFormatOutput)
}

func (i ContainerNetworkInterfaceConfigurationPropertiesFormatArgs) ToContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput() ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput {
	return i.ToContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceConfigurationPropertiesFormatArgs) ToContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceConfigurationPropertiesFormatOutput).ToContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutputWithContext(ctx)
}

// ContainerNetworkInterfaceConfigurationPropertiesFormatPtrInput is an input type that accepts ContainerNetworkInterfaceConfigurationPropertiesFormatArgs, ContainerNetworkInterfaceConfigurationPropertiesFormatPtr and ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceConfigurationPropertiesFormatPtrInput` via:
//
//          ContainerNetworkInterfaceConfigurationPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ContainerNetworkInterfaceConfigurationPropertiesFormatPtrInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput() ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput
	ToContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutputWithContext(context.Context) ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput
}

type containerNetworkInterfaceConfigurationPropertiesFormatPtrType ContainerNetworkInterfaceConfigurationPropertiesFormatArgs

func ContainerNetworkInterfaceConfigurationPropertiesFormatPtr(v *ContainerNetworkInterfaceConfigurationPropertiesFormatArgs) ContainerNetworkInterfaceConfigurationPropertiesFormatPtrInput {
	return (*containerNetworkInterfaceConfigurationPropertiesFormatPtrType)(v)
}

func (*containerNetworkInterfaceConfigurationPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerNetworkInterfaceConfigurationPropertiesFormat)(nil)).Elem()
}

func (i *containerNetworkInterfaceConfigurationPropertiesFormatPtrType) ToContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput() ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput {
	return i.ToContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *containerNetworkInterfaceConfigurationPropertiesFormatPtrType) ToContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput)
}

// Container network interface configuration properties.
type ContainerNetworkInterfaceConfigurationPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceConfigurationPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceConfigurationPropertiesFormat)(nil)).Elem()
}

func (o ContainerNetworkInterfaceConfigurationPropertiesFormatOutput) ToContainerNetworkInterfaceConfigurationPropertiesFormatOutput() ContainerNetworkInterfaceConfigurationPropertiesFormatOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationPropertiesFormatOutput) ToContainerNetworkInterfaceConfigurationPropertiesFormatOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationPropertiesFormatOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationPropertiesFormatOutput) ToContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput() ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput {
	return o.ToContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ContainerNetworkInterfaceConfigurationPropertiesFormatOutput) ToContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationPropertiesFormat) *ContainerNetworkInterfaceConfigurationPropertiesFormat {
		return &v
	}).(ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput)
}

// A list of container network interfaces created from this container network interface configuration.
func (o ContainerNetworkInterfaceConfigurationPropertiesFormatOutput) ContainerNetworkInterfaces() SubResourceArrayOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationPropertiesFormat) []SubResource {
		return v.ContainerNetworkInterfaces
	}).(SubResourceArrayOutput)
}

// A list of ip configurations of the container network interface configuration.
func (o ContainerNetworkInterfaceConfigurationPropertiesFormatOutput) IpConfigurations() IPConfigurationProfileArrayOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationPropertiesFormat) []IPConfigurationProfile {
		return v.IpConfigurations
	}).(IPConfigurationProfileArrayOutput)
}

type ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerNetworkInterfaceConfigurationPropertiesFormat)(nil)).Elem()
}

func (o ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput) ToContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput() ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput) ToContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput) Elem() ContainerNetworkInterfaceConfigurationPropertiesFormatOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfaceConfigurationPropertiesFormat) ContainerNetworkInterfaceConfigurationPropertiesFormat {
		return *v
	}).(ContainerNetworkInterfaceConfigurationPropertiesFormatOutput)
}

// A list of container network interfaces created from this container network interface configuration.
func (o ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput) ContainerNetworkInterfaces() SubResourceArrayOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfaceConfigurationPropertiesFormat) []SubResource {
		if v == nil {
			return nil
		}
		return v.ContainerNetworkInterfaces
	}).(SubResourceArrayOutput)
}

// A list of ip configurations of the container network interface configuration.
func (o ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput) IpConfigurations() IPConfigurationProfileArrayOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfaceConfigurationPropertiesFormat) []IPConfigurationProfile {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(IPConfigurationProfileArrayOutput)
}

// Container network interface configuration properties.
type ContainerNetworkInterfaceConfigurationPropertiesFormatResponse struct {
	// A list of container network interfaces created from this container network interface configuration.
	ContainerNetworkInterfaces []SubResourceResponse `pulumi:"containerNetworkInterfaces"`
	// A list of ip configurations of the container network interface configuration.
	IpConfigurations []IPConfigurationProfileResponse `pulumi:"ipConfigurations"`
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
}

// ContainerNetworkInterfaceConfigurationPropertiesFormatResponseInput is an input type that accepts ContainerNetworkInterfaceConfigurationPropertiesFormatResponseArgs and ContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceConfigurationPropertiesFormatResponseInput` via:
//
//          ContainerNetworkInterfaceConfigurationPropertiesFormatResponseArgs{...}
type ContainerNetworkInterfaceConfigurationPropertiesFormatResponseInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput() ContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput
	ToContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutputWithContext(context.Context) ContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput
}

// Container network interface configuration properties.
type ContainerNetworkInterfaceConfigurationPropertiesFormatResponseArgs struct {
	// A list of container network interfaces created from this container network interface configuration.
	ContainerNetworkInterfaces SubResourceResponseArrayInput `pulumi:"containerNetworkInterfaces"`
	// A list of ip configurations of the container network interface configuration.
	IpConfigurations IPConfigurationProfileResponseArrayInput `pulumi:"ipConfigurations"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (ContainerNetworkInterfaceConfigurationPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (i ContainerNetworkInterfaceConfigurationPropertiesFormatResponseArgs) ToContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput() ContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput {
	return i.ToContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceConfigurationPropertiesFormatResponseArgs) ToContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput)
}

func (i ContainerNetworkInterfaceConfigurationPropertiesFormatResponseArgs) ToContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput() ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput {
	return i.ToContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceConfigurationPropertiesFormatResponseArgs) ToContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput).ToContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrInput is an input type that accepts ContainerNetworkInterfaceConfigurationPropertiesFormatResponseArgs, ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtr and ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrInput` via:
//
//          ContainerNetworkInterfaceConfigurationPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput() ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput
	ToContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Context) ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput
}

type containerNetworkInterfaceConfigurationPropertiesFormatResponsePtrType ContainerNetworkInterfaceConfigurationPropertiesFormatResponseArgs

func ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtr(v *ContainerNetworkInterfaceConfigurationPropertiesFormatResponseArgs) ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrInput {
	return (*containerNetworkInterfaceConfigurationPropertiesFormatResponsePtrType)(v)
}

func (*containerNetworkInterfaceConfigurationPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerNetworkInterfaceConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (i *containerNetworkInterfaceConfigurationPropertiesFormatResponsePtrType) ToContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput() ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput {
	return i.ToContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *containerNetworkInterfaceConfigurationPropertiesFormatResponsePtrType) ToContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput)
}

// Container network interface configuration properties.
type ContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput) ToContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput() ContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput) ToContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput) ToContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput() ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput {
	return o.ToContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput) ToContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationPropertiesFormatResponse) *ContainerNetworkInterfaceConfigurationPropertiesFormatResponse {
		return &v
	}).(ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput)
}

// A list of container network interfaces created from this container network interface configuration.
func (o ContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput) ContainerNetworkInterfaces() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationPropertiesFormatResponse) []SubResourceResponse {
		return v.ContainerNetworkInterfaces
	}).(SubResourceResponseArrayOutput)
}

// A list of ip configurations of the container network interface configuration.
func (o ContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput) IpConfigurations() IPConfigurationProfileResponseArrayOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationPropertiesFormatResponse) []IPConfigurationProfileResponse {
		return v.IpConfigurations
	}).(IPConfigurationProfileResponseArrayOutput)
}

// The provisioning state of the resource.
func (o ContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationPropertiesFormatResponse) string {
		return v.ProvisioningState
	}).(pulumi.StringOutput)
}

type ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerNetworkInterfaceConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput) ToContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput() ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput) ToContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput) Elem() ContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfaceConfigurationPropertiesFormatResponse) ContainerNetworkInterfaceConfigurationPropertiesFormatResponse {
		return *v
	}).(ContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput)
}

// A list of container network interfaces created from this container network interface configuration.
func (o ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput) ContainerNetworkInterfaces() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfaceConfigurationPropertiesFormatResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.ContainerNetworkInterfaces
	}).(SubResourceResponseArrayOutput)
}

// A list of ip configurations of the container network interface configuration.
func (o ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput) IpConfigurations() IPConfigurationProfileResponseArrayOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfaceConfigurationPropertiesFormatResponse) []IPConfigurationProfileResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(IPConfigurationProfileResponseArrayOutput)
}

// The provisioning state of the resource.
func (o ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfaceConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Container network interface configuration child resource.
type ContainerNetworkInterfaceConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Container network interface configuration properties.
	Properties *ContainerNetworkInterfaceConfigurationPropertiesFormatResponse `pulumi:"properties"`
	// Sub Resource type.
	Type string `pulumi:"type"`
}

// ContainerNetworkInterfaceConfigurationResponseInput is an input type that accepts ContainerNetworkInterfaceConfigurationResponseArgs and ContainerNetworkInterfaceConfigurationResponseOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceConfigurationResponseInput` via:
//
//          ContainerNetworkInterfaceConfigurationResponseArgs{...}
type ContainerNetworkInterfaceConfigurationResponseInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceConfigurationResponseOutput() ContainerNetworkInterfaceConfigurationResponseOutput
	ToContainerNetworkInterfaceConfigurationResponseOutputWithContext(context.Context) ContainerNetworkInterfaceConfigurationResponseOutput
}

// Container network interface configuration child resource.
type ContainerNetworkInterfaceConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Container network interface configuration properties.
	Properties ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Sub Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ContainerNetworkInterfaceConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceConfigurationResponse)(nil)).Elem()
}

func (i ContainerNetworkInterfaceConfigurationResponseArgs) ToContainerNetworkInterfaceConfigurationResponseOutput() ContainerNetworkInterfaceConfigurationResponseOutput {
	return i.ToContainerNetworkInterfaceConfigurationResponseOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceConfigurationResponseArgs) ToContainerNetworkInterfaceConfigurationResponseOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceConfigurationResponseOutput)
}

func (i ContainerNetworkInterfaceConfigurationResponseArgs) ToContainerNetworkInterfaceConfigurationResponsePtrOutput() ContainerNetworkInterfaceConfigurationResponsePtrOutput {
	return i.ToContainerNetworkInterfaceConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceConfigurationResponseArgs) ToContainerNetworkInterfaceConfigurationResponsePtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceConfigurationResponseOutput).ToContainerNetworkInterfaceConfigurationResponsePtrOutputWithContext(ctx)
}

// ContainerNetworkInterfaceConfigurationResponsePtrInput is an input type that accepts ContainerNetworkInterfaceConfigurationResponseArgs, ContainerNetworkInterfaceConfigurationResponsePtr and ContainerNetworkInterfaceConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceConfigurationResponsePtrInput` via:
//
//          ContainerNetworkInterfaceConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type ContainerNetworkInterfaceConfigurationResponsePtrInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceConfigurationResponsePtrOutput() ContainerNetworkInterfaceConfigurationResponsePtrOutput
	ToContainerNetworkInterfaceConfigurationResponsePtrOutputWithContext(context.Context) ContainerNetworkInterfaceConfigurationResponsePtrOutput
}

type containerNetworkInterfaceConfigurationResponsePtrType ContainerNetworkInterfaceConfigurationResponseArgs

func ContainerNetworkInterfaceConfigurationResponsePtr(v *ContainerNetworkInterfaceConfigurationResponseArgs) ContainerNetworkInterfaceConfigurationResponsePtrInput {
	return (*containerNetworkInterfaceConfigurationResponsePtrType)(v)
}

func (*containerNetworkInterfaceConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerNetworkInterfaceConfigurationResponse)(nil)).Elem()
}

func (i *containerNetworkInterfaceConfigurationResponsePtrType) ToContainerNetworkInterfaceConfigurationResponsePtrOutput() ContainerNetworkInterfaceConfigurationResponsePtrOutput {
	return i.ToContainerNetworkInterfaceConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *containerNetworkInterfaceConfigurationResponsePtrType) ToContainerNetworkInterfaceConfigurationResponsePtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceConfigurationResponsePtrOutput)
}

// ContainerNetworkInterfaceConfigurationResponseArrayInput is an input type that accepts ContainerNetworkInterfaceConfigurationResponseArray and ContainerNetworkInterfaceConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceConfigurationResponseArrayInput` via:
//
//          ContainerNetworkInterfaceConfigurationResponseArray{ ContainerNetworkInterfaceConfigurationResponseArgs{...} }
type ContainerNetworkInterfaceConfigurationResponseArrayInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceConfigurationResponseArrayOutput() ContainerNetworkInterfaceConfigurationResponseArrayOutput
	ToContainerNetworkInterfaceConfigurationResponseArrayOutputWithContext(context.Context) ContainerNetworkInterfaceConfigurationResponseArrayOutput
}

type ContainerNetworkInterfaceConfigurationResponseArray []ContainerNetworkInterfaceConfigurationResponseInput

func (ContainerNetworkInterfaceConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceConfigurationResponse)(nil)).Elem()
}

func (i ContainerNetworkInterfaceConfigurationResponseArray) ToContainerNetworkInterfaceConfigurationResponseArrayOutput() ContainerNetworkInterfaceConfigurationResponseArrayOutput {
	return i.ToContainerNetworkInterfaceConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceConfigurationResponseArray) ToContainerNetworkInterfaceConfigurationResponseArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceConfigurationResponseArrayOutput)
}

// Container network interface configuration child resource.
type ContainerNetworkInterfaceConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceConfigurationResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceConfigurationResponseOutput) ToContainerNetworkInterfaceConfigurationResponseOutput() ContainerNetworkInterfaceConfigurationResponseOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationResponseOutput) ToContainerNetworkInterfaceConfigurationResponseOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationResponseOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationResponseOutput) ToContainerNetworkInterfaceConfigurationResponsePtrOutput() ContainerNetworkInterfaceConfigurationResponsePtrOutput {
	return o.ToContainerNetworkInterfaceConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o ContainerNetworkInterfaceConfigurationResponseOutput) ToContainerNetworkInterfaceConfigurationResponsePtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationResponse) *ContainerNetworkInterfaceConfigurationResponse {
		return &v
	}).(ContainerNetworkInterfaceConfigurationResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ContainerNetworkInterfaceConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ContainerNetworkInterfaceConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o ContainerNetworkInterfaceConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Container network interface configuration properties.
func (o ContainerNetworkInterfaceConfigurationResponseOutput) Properties() ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationResponse) *ContainerNetworkInterfaceConfigurationPropertiesFormatResponse {
		return v.Properties
	}).(ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput)
}

// Sub Resource type.
func (o ContainerNetworkInterfaceConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ContainerNetworkInterfaceConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerNetworkInterfaceConfigurationResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceConfigurationResponsePtrOutput) ToContainerNetworkInterfaceConfigurationResponsePtrOutput() ContainerNetworkInterfaceConfigurationResponsePtrOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationResponsePtrOutput) ToContainerNetworkInterfaceConfigurationResponsePtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationResponsePtrOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationResponsePtrOutput) Elem() ContainerNetworkInterfaceConfigurationResponseOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfaceConfigurationResponse) ContainerNetworkInterfaceConfigurationResponse {
		return *v
	}).(ContainerNetworkInterfaceConfigurationResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ContainerNetworkInterfaceConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfaceConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ContainerNetworkInterfaceConfigurationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfaceConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o ContainerNetworkInterfaceConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfaceConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Container network interface configuration properties.
func (o ContainerNetworkInterfaceConfigurationResponsePtrOutput) Properties() ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfaceConfigurationResponse) *ContainerNetworkInterfaceConfigurationPropertiesFormatResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput)
}

// Sub Resource type.
func (o ContainerNetworkInterfaceConfigurationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfaceConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ContainerNetworkInterfaceConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceConfigurationResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceConfigurationResponseArrayOutput) ToContainerNetworkInterfaceConfigurationResponseArrayOutput() ContainerNetworkInterfaceConfigurationResponseArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationResponseArrayOutput) ToContainerNetworkInterfaceConfigurationResponseArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationResponseArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ContainerNetworkInterfaceConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerNetworkInterfaceConfigurationResponse {
		return vs[0].([]ContainerNetworkInterfaceConfigurationResponse)[vs[1].(int)]
	}).(ContainerNetworkInterfaceConfigurationResponseOutput)
}

// The ip configuration for a container network interface.
type ContainerNetworkInterfaceIpConfiguration struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// The name of the resource. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the container network interface IP configuration.
	Properties *ContainerNetworkInterfaceIpConfigurationPropertiesFormat `pulumi:"properties"`
}

// ContainerNetworkInterfaceIpConfigurationInput is an input type that accepts ContainerNetworkInterfaceIpConfigurationArgs and ContainerNetworkInterfaceIpConfigurationOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceIpConfigurationInput` via:
//
//          ContainerNetworkInterfaceIpConfigurationArgs{...}
type ContainerNetworkInterfaceIpConfigurationInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceIpConfigurationOutput() ContainerNetworkInterfaceIpConfigurationOutput
	ToContainerNetworkInterfaceIpConfigurationOutputWithContext(context.Context) ContainerNetworkInterfaceIpConfigurationOutput
}

// The ip configuration for a container network interface.
type ContainerNetworkInterfaceIpConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// The name of the resource. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the container network interface IP configuration.
	Properties ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrInput `pulumi:"properties"`
}

func (ContainerNetworkInterfaceIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (i ContainerNetworkInterfaceIpConfigurationArgs) ToContainerNetworkInterfaceIpConfigurationOutput() ContainerNetworkInterfaceIpConfigurationOutput {
	return i.ToContainerNetworkInterfaceIpConfigurationOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceIpConfigurationArgs) ToContainerNetworkInterfaceIpConfigurationOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceIpConfigurationOutput)
}

// ContainerNetworkInterfaceIpConfigurationArrayInput is an input type that accepts ContainerNetworkInterfaceIpConfigurationArray and ContainerNetworkInterfaceIpConfigurationArrayOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceIpConfigurationArrayInput` via:
//
//          ContainerNetworkInterfaceIpConfigurationArray{ ContainerNetworkInterfaceIpConfigurationArgs{...} }
type ContainerNetworkInterfaceIpConfigurationArrayInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceIpConfigurationArrayOutput() ContainerNetworkInterfaceIpConfigurationArrayOutput
	ToContainerNetworkInterfaceIpConfigurationArrayOutputWithContext(context.Context) ContainerNetworkInterfaceIpConfigurationArrayOutput
}

type ContainerNetworkInterfaceIpConfigurationArray []ContainerNetworkInterfaceIpConfigurationInput

func (ContainerNetworkInterfaceIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (i ContainerNetworkInterfaceIpConfigurationArray) ToContainerNetworkInterfaceIpConfigurationArrayOutput() ContainerNetworkInterfaceIpConfigurationArrayOutput {
	return i.ToContainerNetworkInterfaceIpConfigurationArrayOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceIpConfigurationArray) ToContainerNetworkInterfaceIpConfigurationArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceIpConfigurationArrayOutput)
}

// The ip configuration for a container network interface.
type ContainerNetworkInterfaceIpConfigurationOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (o ContainerNetworkInterfaceIpConfigurationOutput) ToContainerNetworkInterfaceIpConfigurationOutput() ContainerNetworkInterfaceIpConfigurationOutput {
	return o
}

func (o ContainerNetworkInterfaceIpConfigurationOutput) ToContainerNetworkInterfaceIpConfigurationOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ContainerNetworkInterfaceIpConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceIpConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o ContainerNetworkInterfaceIpConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceIpConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the container network interface IP configuration.
func (o ContainerNetworkInterfaceIpConfigurationOutput) Properties() ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceIpConfiguration) *ContainerNetworkInterfaceIpConfigurationPropertiesFormat {
		return v.Properties
	}).(ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput)
}

type ContainerNetworkInterfaceIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (o ContainerNetworkInterfaceIpConfigurationArrayOutput) ToContainerNetworkInterfaceIpConfigurationArrayOutput() ContainerNetworkInterfaceIpConfigurationArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceIpConfigurationArrayOutput) ToContainerNetworkInterfaceIpConfigurationArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceIpConfigurationArrayOutput) Index(i pulumi.IntInput) ContainerNetworkInterfaceIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerNetworkInterfaceIpConfiguration {
		return vs[0].([]ContainerNetworkInterfaceIpConfiguration)[vs[1].(int)]
	}).(ContainerNetworkInterfaceIpConfigurationOutput)
}

// Properties of the container network interface IP configuration.
type ContainerNetworkInterfaceIpConfigurationPropertiesFormat struct {
}

// ContainerNetworkInterfaceIpConfigurationPropertiesFormatInput is an input type that accepts ContainerNetworkInterfaceIpConfigurationPropertiesFormatArgs and ContainerNetworkInterfaceIpConfigurationPropertiesFormatOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceIpConfigurationPropertiesFormatInput` via:
//
//          ContainerNetworkInterfaceIpConfigurationPropertiesFormatArgs{...}
type ContainerNetworkInterfaceIpConfigurationPropertiesFormatInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceIpConfigurationPropertiesFormatOutput() ContainerNetworkInterfaceIpConfigurationPropertiesFormatOutput
	ToContainerNetworkInterfaceIpConfigurationPropertiesFormatOutputWithContext(context.Context) ContainerNetworkInterfaceIpConfigurationPropertiesFormatOutput
}

// Properties of the container network interface IP configuration.
type ContainerNetworkInterfaceIpConfigurationPropertiesFormatArgs struct {
}

func (ContainerNetworkInterfaceIpConfigurationPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceIpConfigurationPropertiesFormat)(nil)).Elem()
}

func (i ContainerNetworkInterfaceIpConfigurationPropertiesFormatArgs) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatOutput() ContainerNetworkInterfaceIpConfigurationPropertiesFormatOutput {
	return i.ToContainerNetworkInterfaceIpConfigurationPropertiesFormatOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceIpConfigurationPropertiesFormatArgs) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceIpConfigurationPropertiesFormatOutput)
}

func (i ContainerNetworkInterfaceIpConfigurationPropertiesFormatArgs) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput() ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput {
	return i.ToContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceIpConfigurationPropertiesFormatArgs) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceIpConfigurationPropertiesFormatOutput).ToContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutputWithContext(ctx)
}

// ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrInput is an input type that accepts ContainerNetworkInterfaceIpConfigurationPropertiesFormatArgs, ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtr and ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrInput` via:
//
//          ContainerNetworkInterfaceIpConfigurationPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput() ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput
	ToContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutputWithContext(context.Context) ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput
}

type containerNetworkInterfaceIpConfigurationPropertiesFormatPtrType ContainerNetworkInterfaceIpConfigurationPropertiesFormatArgs

func ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtr(v *ContainerNetworkInterfaceIpConfigurationPropertiesFormatArgs) ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrInput {
	return (*containerNetworkInterfaceIpConfigurationPropertiesFormatPtrType)(v)
}

func (*containerNetworkInterfaceIpConfigurationPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerNetworkInterfaceIpConfigurationPropertiesFormat)(nil)).Elem()
}

func (i *containerNetworkInterfaceIpConfigurationPropertiesFormatPtrType) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput() ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput {
	return i.ToContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *containerNetworkInterfaceIpConfigurationPropertiesFormatPtrType) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput)
}

// Properties of the container network interface IP configuration.
type ContainerNetworkInterfaceIpConfigurationPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceIpConfigurationPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceIpConfigurationPropertiesFormat)(nil)).Elem()
}

func (o ContainerNetworkInterfaceIpConfigurationPropertiesFormatOutput) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatOutput() ContainerNetworkInterfaceIpConfigurationPropertiesFormatOutput {
	return o
}

func (o ContainerNetworkInterfaceIpConfigurationPropertiesFormatOutput) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationPropertiesFormatOutput {
	return o
}

func (o ContainerNetworkInterfaceIpConfigurationPropertiesFormatOutput) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput() ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput {
	return o.ToContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ContainerNetworkInterfaceIpConfigurationPropertiesFormatOutput) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceIpConfigurationPropertiesFormat) *ContainerNetworkInterfaceIpConfigurationPropertiesFormat {
		return &v
	}).(ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput)
}

type ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerNetworkInterfaceIpConfigurationPropertiesFormat)(nil)).Elem()
}

func (o ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput() ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput {
	return o
}

func (o ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput {
	return o
}

func (o ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput) Elem() ContainerNetworkInterfaceIpConfigurationPropertiesFormatOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfaceIpConfigurationPropertiesFormat) ContainerNetworkInterfaceIpConfigurationPropertiesFormat {
		return *v
	}).(ContainerNetworkInterfaceIpConfigurationPropertiesFormatOutput)
}

// Properties of the container network interface IP configuration.
type ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponse struct {
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
}

// ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseInput is an input type that accepts ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseArgs and ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseInput` via:
//
//          ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseArgs{...}
type ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutput() ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutput
	ToContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutputWithContext(context.Context) ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutput
}

// Properties of the container network interface IP configuration.
type ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseArgs struct {
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (i ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseArgs) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutput() ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutput {
	return i.ToContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseArgs) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutput)
}

func (i ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseArgs) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput() ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput {
	return i.ToContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseArgs) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutput).ToContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrInput is an input type that accepts ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseArgs, ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtr and ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrInput` via:
//
//          ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput() ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput
	ToContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Context) ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput
}

type containerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrType ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseArgs

func ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtr(v *ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseArgs) ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrInput {
	return (*containerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrType)(v)
}

func (*containerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (i *containerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrType) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput() ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput {
	return i.ToContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *containerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrType) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput)
}

// Properties of the container network interface IP configuration.
type ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutput) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutput() ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutput {
	return o
}

func (o ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutput) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutput {
	return o
}

func (o ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutput) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput() ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput {
	return o.ToContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutput) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponse) *ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponse {
		return &v
	}).(ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput)
}

// The provisioning state of the resource.
func (o ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponse) string {
		return v.ProvisioningState
	}).(pulumi.StringOutput)
}

type ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput() ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput {
	return o
}

func (o ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput) ToContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput {
	return o
}

func (o ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput) Elem() ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponse) ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponse {
		return *v
	}).(ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutput)
}

// The provisioning state of the resource.
func (o ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The ip configuration for a container network interface.
type ContainerNetworkInterfaceIpConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// The name of the resource. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the container network interface IP configuration.
	Properties *ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponse `pulumi:"properties"`
	// Sub Resource type.
	Type string `pulumi:"type"`
}

// ContainerNetworkInterfaceIpConfigurationResponseInput is an input type that accepts ContainerNetworkInterfaceIpConfigurationResponseArgs and ContainerNetworkInterfaceIpConfigurationResponseOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceIpConfigurationResponseInput` via:
//
//          ContainerNetworkInterfaceIpConfigurationResponseArgs{...}
type ContainerNetworkInterfaceIpConfigurationResponseInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceIpConfigurationResponseOutput() ContainerNetworkInterfaceIpConfigurationResponseOutput
	ToContainerNetworkInterfaceIpConfigurationResponseOutputWithContext(context.Context) ContainerNetworkInterfaceIpConfigurationResponseOutput
}

// The ip configuration for a container network interface.
type ContainerNetworkInterfaceIpConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// The name of the resource. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the container network interface IP configuration.
	Properties ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Sub Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ContainerNetworkInterfaceIpConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceIpConfigurationResponse)(nil)).Elem()
}

func (i ContainerNetworkInterfaceIpConfigurationResponseArgs) ToContainerNetworkInterfaceIpConfigurationResponseOutput() ContainerNetworkInterfaceIpConfigurationResponseOutput {
	return i.ToContainerNetworkInterfaceIpConfigurationResponseOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceIpConfigurationResponseArgs) ToContainerNetworkInterfaceIpConfigurationResponseOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceIpConfigurationResponseOutput)
}

// ContainerNetworkInterfaceIpConfigurationResponseArrayInput is an input type that accepts ContainerNetworkInterfaceIpConfigurationResponseArray and ContainerNetworkInterfaceIpConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceIpConfigurationResponseArrayInput` via:
//
//          ContainerNetworkInterfaceIpConfigurationResponseArray{ ContainerNetworkInterfaceIpConfigurationResponseArgs{...} }
type ContainerNetworkInterfaceIpConfigurationResponseArrayInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceIpConfigurationResponseArrayOutput() ContainerNetworkInterfaceIpConfigurationResponseArrayOutput
	ToContainerNetworkInterfaceIpConfigurationResponseArrayOutputWithContext(context.Context) ContainerNetworkInterfaceIpConfigurationResponseArrayOutput
}

type ContainerNetworkInterfaceIpConfigurationResponseArray []ContainerNetworkInterfaceIpConfigurationResponseInput

func (ContainerNetworkInterfaceIpConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceIpConfigurationResponse)(nil)).Elem()
}

func (i ContainerNetworkInterfaceIpConfigurationResponseArray) ToContainerNetworkInterfaceIpConfigurationResponseArrayOutput() ContainerNetworkInterfaceIpConfigurationResponseArrayOutput {
	return i.ToContainerNetworkInterfaceIpConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceIpConfigurationResponseArray) ToContainerNetworkInterfaceIpConfigurationResponseArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceIpConfigurationResponseArrayOutput)
}

// The ip configuration for a container network interface.
type ContainerNetworkInterfaceIpConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceIpConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceIpConfigurationResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceIpConfigurationResponseOutput) ToContainerNetworkInterfaceIpConfigurationResponseOutput() ContainerNetworkInterfaceIpConfigurationResponseOutput {
	return o
}

func (o ContainerNetworkInterfaceIpConfigurationResponseOutput) ToContainerNetworkInterfaceIpConfigurationResponseOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ContainerNetworkInterfaceIpConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceIpConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o ContainerNetworkInterfaceIpConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceIpConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the container network interface IP configuration.
func (o ContainerNetworkInterfaceIpConfigurationResponseOutput) Properties() ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceIpConfigurationResponse) *ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponse {
		return v.Properties
	}).(ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput)
}

// Sub Resource type.
func (o ContainerNetworkInterfaceIpConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceIpConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ContainerNetworkInterfaceIpConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceIpConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceIpConfigurationResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceIpConfigurationResponseArrayOutput) ToContainerNetworkInterfaceIpConfigurationResponseArrayOutput() ContainerNetworkInterfaceIpConfigurationResponseArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceIpConfigurationResponseArrayOutput) ToContainerNetworkInterfaceIpConfigurationResponseArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationResponseArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceIpConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ContainerNetworkInterfaceIpConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerNetworkInterfaceIpConfigurationResponse {
		return vs[0].([]ContainerNetworkInterfaceIpConfigurationResponse)[vs[1].(int)]
	}).(ContainerNetworkInterfaceIpConfigurationResponseOutput)
}

type ContainerNetworkInterfacePropertiesFormat struct {
	// Reference to the container to which this container network interface is attached.
	Container *Container `pulumi:"container"`
	// Container network interface configuration from which this container network interface is created.
	ContainerNetworkInterfaceConfiguration *ContainerNetworkInterfaceConfiguration `pulumi:"containerNetworkInterfaceConfiguration"`
	// Reference to the ip configuration on this container nic.
	IpConfigurations []ContainerNetworkInterfaceIpConfiguration `pulumi:"ipConfigurations"`
}

// ContainerNetworkInterfacePropertiesFormatInput is an input type that accepts ContainerNetworkInterfacePropertiesFormatArgs and ContainerNetworkInterfacePropertiesFormatOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfacePropertiesFormatInput` via:
//
//          ContainerNetworkInterfacePropertiesFormatArgs{...}
type ContainerNetworkInterfacePropertiesFormatInput interface {
	pulumi.Input

	ToContainerNetworkInterfacePropertiesFormatOutput() ContainerNetworkInterfacePropertiesFormatOutput
	ToContainerNetworkInterfacePropertiesFormatOutputWithContext(context.Context) ContainerNetworkInterfacePropertiesFormatOutput
}

type ContainerNetworkInterfacePropertiesFormatArgs struct {
	// Reference to the container to which this container network interface is attached.
	Container ContainerPtrInput `pulumi:"container"`
	// Container network interface configuration from which this container network interface is created.
	ContainerNetworkInterfaceConfiguration ContainerNetworkInterfaceConfigurationPtrInput `pulumi:"containerNetworkInterfaceConfiguration"`
	// Reference to the ip configuration on this container nic.
	IpConfigurations ContainerNetworkInterfaceIpConfigurationArrayInput `pulumi:"ipConfigurations"`
}

func (ContainerNetworkInterfacePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfacePropertiesFormat)(nil)).Elem()
}

func (i ContainerNetworkInterfacePropertiesFormatArgs) ToContainerNetworkInterfacePropertiesFormatOutput() ContainerNetworkInterfacePropertiesFormatOutput {
	return i.ToContainerNetworkInterfacePropertiesFormatOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfacePropertiesFormatArgs) ToContainerNetworkInterfacePropertiesFormatOutputWithContext(ctx context.Context) ContainerNetworkInterfacePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfacePropertiesFormatOutput)
}

func (i ContainerNetworkInterfacePropertiesFormatArgs) ToContainerNetworkInterfacePropertiesFormatPtrOutput() ContainerNetworkInterfacePropertiesFormatPtrOutput {
	return i.ToContainerNetworkInterfacePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfacePropertiesFormatArgs) ToContainerNetworkInterfacePropertiesFormatPtrOutputWithContext(ctx context.Context) ContainerNetworkInterfacePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfacePropertiesFormatOutput).ToContainerNetworkInterfacePropertiesFormatPtrOutputWithContext(ctx)
}

// ContainerNetworkInterfacePropertiesFormatPtrInput is an input type that accepts ContainerNetworkInterfacePropertiesFormatArgs, ContainerNetworkInterfacePropertiesFormatPtr and ContainerNetworkInterfacePropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfacePropertiesFormatPtrInput` via:
//
//          ContainerNetworkInterfacePropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ContainerNetworkInterfacePropertiesFormatPtrInput interface {
	pulumi.Input

	ToContainerNetworkInterfacePropertiesFormatPtrOutput() ContainerNetworkInterfacePropertiesFormatPtrOutput
	ToContainerNetworkInterfacePropertiesFormatPtrOutputWithContext(context.Context) ContainerNetworkInterfacePropertiesFormatPtrOutput
}

type containerNetworkInterfacePropertiesFormatPtrType ContainerNetworkInterfacePropertiesFormatArgs

func ContainerNetworkInterfacePropertiesFormatPtr(v *ContainerNetworkInterfacePropertiesFormatArgs) ContainerNetworkInterfacePropertiesFormatPtrInput {
	return (*containerNetworkInterfacePropertiesFormatPtrType)(v)
}

func (*containerNetworkInterfacePropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerNetworkInterfacePropertiesFormat)(nil)).Elem()
}

func (i *containerNetworkInterfacePropertiesFormatPtrType) ToContainerNetworkInterfacePropertiesFormatPtrOutput() ContainerNetworkInterfacePropertiesFormatPtrOutput {
	return i.ToContainerNetworkInterfacePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *containerNetworkInterfacePropertiesFormatPtrType) ToContainerNetworkInterfacePropertiesFormatPtrOutputWithContext(ctx context.Context) ContainerNetworkInterfacePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfacePropertiesFormatPtrOutput)
}

type ContainerNetworkInterfacePropertiesFormatOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfacePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfacePropertiesFormat)(nil)).Elem()
}

func (o ContainerNetworkInterfacePropertiesFormatOutput) ToContainerNetworkInterfacePropertiesFormatOutput() ContainerNetworkInterfacePropertiesFormatOutput {
	return o
}

func (o ContainerNetworkInterfacePropertiesFormatOutput) ToContainerNetworkInterfacePropertiesFormatOutputWithContext(ctx context.Context) ContainerNetworkInterfacePropertiesFormatOutput {
	return o
}

func (o ContainerNetworkInterfacePropertiesFormatOutput) ToContainerNetworkInterfacePropertiesFormatPtrOutput() ContainerNetworkInterfacePropertiesFormatPtrOutput {
	return o.ToContainerNetworkInterfacePropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ContainerNetworkInterfacePropertiesFormatOutput) ToContainerNetworkInterfacePropertiesFormatPtrOutputWithContext(ctx context.Context) ContainerNetworkInterfacePropertiesFormatPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfacePropertiesFormat) *ContainerNetworkInterfacePropertiesFormat {
		return &v
	}).(ContainerNetworkInterfacePropertiesFormatPtrOutput)
}

// Reference to the container to which this container network interface is attached.
func (o ContainerNetworkInterfacePropertiesFormatOutput) Container() ContainerPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfacePropertiesFormat) *Container { return v.Container }).(ContainerPtrOutput)
}

// Container network interface configuration from which this container network interface is created.
func (o ContainerNetworkInterfacePropertiesFormatOutput) ContainerNetworkInterfaceConfiguration() ContainerNetworkInterfaceConfigurationPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfacePropertiesFormat) *ContainerNetworkInterfaceConfiguration {
		return v.ContainerNetworkInterfaceConfiguration
	}).(ContainerNetworkInterfaceConfigurationPtrOutput)
}

// Reference to the ip configuration on this container nic.
func (o ContainerNetworkInterfacePropertiesFormatOutput) IpConfigurations() ContainerNetworkInterfaceIpConfigurationArrayOutput {
	return o.ApplyT(func(v ContainerNetworkInterfacePropertiesFormat) []ContainerNetworkInterfaceIpConfiguration {
		return v.IpConfigurations
	}).(ContainerNetworkInterfaceIpConfigurationArrayOutput)
}

type ContainerNetworkInterfacePropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfacePropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerNetworkInterfacePropertiesFormat)(nil)).Elem()
}

func (o ContainerNetworkInterfacePropertiesFormatPtrOutput) ToContainerNetworkInterfacePropertiesFormatPtrOutput() ContainerNetworkInterfacePropertiesFormatPtrOutput {
	return o
}

func (o ContainerNetworkInterfacePropertiesFormatPtrOutput) ToContainerNetworkInterfacePropertiesFormatPtrOutputWithContext(ctx context.Context) ContainerNetworkInterfacePropertiesFormatPtrOutput {
	return o
}

func (o ContainerNetworkInterfacePropertiesFormatPtrOutput) Elem() ContainerNetworkInterfacePropertiesFormatOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfacePropertiesFormat) ContainerNetworkInterfacePropertiesFormat {
		return *v
	}).(ContainerNetworkInterfacePropertiesFormatOutput)
}

// Reference to the container to which this container network interface is attached.
func (o ContainerNetworkInterfacePropertiesFormatPtrOutput) Container() ContainerPtrOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfacePropertiesFormat) *Container {
		if v == nil {
			return nil
		}
		return v.Container
	}).(ContainerPtrOutput)
}

// Container network interface configuration from which this container network interface is created.
func (o ContainerNetworkInterfacePropertiesFormatPtrOutput) ContainerNetworkInterfaceConfiguration() ContainerNetworkInterfaceConfigurationPtrOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfacePropertiesFormat) *ContainerNetworkInterfaceConfiguration {
		if v == nil {
			return nil
		}
		return v.ContainerNetworkInterfaceConfiguration
	}).(ContainerNetworkInterfaceConfigurationPtrOutput)
}

// Reference to the ip configuration on this container nic.
func (o ContainerNetworkInterfacePropertiesFormatPtrOutput) IpConfigurations() ContainerNetworkInterfaceIpConfigurationArrayOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfacePropertiesFormat) []ContainerNetworkInterfaceIpConfiguration {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(ContainerNetworkInterfaceIpConfigurationArrayOutput)
}

type ContainerNetworkInterfacePropertiesFormatResponse struct {
	// Reference to the container to which this container network interface is attached.
	Container *ContainerResponse `pulumi:"container"`
	// Container network interface configuration from which this container network interface is created.
	ContainerNetworkInterfaceConfiguration *ContainerNetworkInterfaceConfigurationResponse `pulumi:"containerNetworkInterfaceConfiguration"`
	// Reference to the ip configuration on this container nic.
	IpConfigurations []ContainerNetworkInterfaceIpConfigurationResponse `pulumi:"ipConfigurations"`
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
}

// ContainerNetworkInterfacePropertiesFormatResponseInput is an input type that accepts ContainerNetworkInterfacePropertiesFormatResponseArgs and ContainerNetworkInterfacePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfacePropertiesFormatResponseInput` via:
//
//          ContainerNetworkInterfacePropertiesFormatResponseArgs{...}
type ContainerNetworkInterfacePropertiesFormatResponseInput interface {
	pulumi.Input

	ToContainerNetworkInterfacePropertiesFormatResponseOutput() ContainerNetworkInterfacePropertiesFormatResponseOutput
	ToContainerNetworkInterfacePropertiesFormatResponseOutputWithContext(context.Context) ContainerNetworkInterfacePropertiesFormatResponseOutput
}

type ContainerNetworkInterfacePropertiesFormatResponseArgs struct {
	// Reference to the container to which this container network interface is attached.
	Container ContainerResponsePtrInput `pulumi:"container"`
	// Container network interface configuration from which this container network interface is created.
	ContainerNetworkInterfaceConfiguration ContainerNetworkInterfaceConfigurationResponsePtrInput `pulumi:"containerNetworkInterfaceConfiguration"`
	// Reference to the ip configuration on this container nic.
	IpConfigurations ContainerNetworkInterfaceIpConfigurationResponseArrayInput `pulumi:"ipConfigurations"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (ContainerNetworkInterfacePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfacePropertiesFormatResponse)(nil)).Elem()
}

func (i ContainerNetworkInterfacePropertiesFormatResponseArgs) ToContainerNetworkInterfacePropertiesFormatResponseOutput() ContainerNetworkInterfacePropertiesFormatResponseOutput {
	return i.ToContainerNetworkInterfacePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfacePropertiesFormatResponseArgs) ToContainerNetworkInterfacePropertiesFormatResponseOutputWithContext(ctx context.Context) ContainerNetworkInterfacePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfacePropertiesFormatResponseOutput)
}

func (i ContainerNetworkInterfacePropertiesFormatResponseArgs) ToContainerNetworkInterfacePropertiesFormatResponsePtrOutput() ContainerNetworkInterfacePropertiesFormatResponsePtrOutput {
	return i.ToContainerNetworkInterfacePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfacePropertiesFormatResponseArgs) ToContainerNetworkInterfacePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ContainerNetworkInterfacePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfacePropertiesFormatResponseOutput).ToContainerNetworkInterfacePropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ContainerNetworkInterfacePropertiesFormatResponsePtrInput is an input type that accepts ContainerNetworkInterfacePropertiesFormatResponseArgs, ContainerNetworkInterfacePropertiesFormatResponsePtr and ContainerNetworkInterfacePropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfacePropertiesFormatResponsePtrInput` via:
//
//          ContainerNetworkInterfacePropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ContainerNetworkInterfacePropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToContainerNetworkInterfacePropertiesFormatResponsePtrOutput() ContainerNetworkInterfacePropertiesFormatResponsePtrOutput
	ToContainerNetworkInterfacePropertiesFormatResponsePtrOutputWithContext(context.Context) ContainerNetworkInterfacePropertiesFormatResponsePtrOutput
}

type containerNetworkInterfacePropertiesFormatResponsePtrType ContainerNetworkInterfacePropertiesFormatResponseArgs

func ContainerNetworkInterfacePropertiesFormatResponsePtr(v *ContainerNetworkInterfacePropertiesFormatResponseArgs) ContainerNetworkInterfacePropertiesFormatResponsePtrInput {
	return (*containerNetworkInterfacePropertiesFormatResponsePtrType)(v)
}

func (*containerNetworkInterfacePropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerNetworkInterfacePropertiesFormatResponse)(nil)).Elem()
}

func (i *containerNetworkInterfacePropertiesFormatResponsePtrType) ToContainerNetworkInterfacePropertiesFormatResponsePtrOutput() ContainerNetworkInterfacePropertiesFormatResponsePtrOutput {
	return i.ToContainerNetworkInterfacePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *containerNetworkInterfacePropertiesFormatResponsePtrType) ToContainerNetworkInterfacePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ContainerNetworkInterfacePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfacePropertiesFormatResponsePtrOutput)
}

type ContainerNetworkInterfacePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfacePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfacePropertiesFormatResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfacePropertiesFormatResponseOutput) ToContainerNetworkInterfacePropertiesFormatResponseOutput() ContainerNetworkInterfacePropertiesFormatResponseOutput {
	return o
}

func (o ContainerNetworkInterfacePropertiesFormatResponseOutput) ToContainerNetworkInterfacePropertiesFormatResponseOutputWithContext(ctx context.Context) ContainerNetworkInterfacePropertiesFormatResponseOutput {
	return o
}

func (o ContainerNetworkInterfacePropertiesFormatResponseOutput) ToContainerNetworkInterfacePropertiesFormatResponsePtrOutput() ContainerNetworkInterfacePropertiesFormatResponsePtrOutput {
	return o.ToContainerNetworkInterfacePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ContainerNetworkInterfacePropertiesFormatResponseOutput) ToContainerNetworkInterfacePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ContainerNetworkInterfacePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfacePropertiesFormatResponse) *ContainerNetworkInterfacePropertiesFormatResponse {
		return &v
	}).(ContainerNetworkInterfacePropertiesFormatResponsePtrOutput)
}

// Reference to the container to which this container network interface is attached.
func (o ContainerNetworkInterfacePropertiesFormatResponseOutput) Container() ContainerResponsePtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfacePropertiesFormatResponse) *ContainerResponse { return v.Container }).(ContainerResponsePtrOutput)
}

// Container network interface configuration from which this container network interface is created.
func (o ContainerNetworkInterfacePropertiesFormatResponseOutput) ContainerNetworkInterfaceConfiguration() ContainerNetworkInterfaceConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfacePropertiesFormatResponse) *ContainerNetworkInterfaceConfigurationResponse {
		return v.ContainerNetworkInterfaceConfiguration
	}).(ContainerNetworkInterfaceConfigurationResponsePtrOutput)
}

// Reference to the ip configuration on this container nic.
func (o ContainerNetworkInterfacePropertiesFormatResponseOutput) IpConfigurations() ContainerNetworkInterfaceIpConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ContainerNetworkInterfacePropertiesFormatResponse) []ContainerNetworkInterfaceIpConfigurationResponse {
		return v.IpConfigurations
	}).(ContainerNetworkInterfaceIpConfigurationResponseArrayOutput)
}

// The provisioning state of the resource.
func (o ContainerNetworkInterfacePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfacePropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type ContainerNetworkInterfacePropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfacePropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerNetworkInterfacePropertiesFormatResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfacePropertiesFormatResponsePtrOutput) ToContainerNetworkInterfacePropertiesFormatResponsePtrOutput() ContainerNetworkInterfacePropertiesFormatResponsePtrOutput {
	return o
}

func (o ContainerNetworkInterfacePropertiesFormatResponsePtrOutput) ToContainerNetworkInterfacePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ContainerNetworkInterfacePropertiesFormatResponsePtrOutput {
	return o
}

func (o ContainerNetworkInterfacePropertiesFormatResponsePtrOutput) Elem() ContainerNetworkInterfacePropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfacePropertiesFormatResponse) ContainerNetworkInterfacePropertiesFormatResponse {
		return *v
	}).(ContainerNetworkInterfacePropertiesFormatResponseOutput)
}

// Reference to the container to which this container network interface is attached.
func (o ContainerNetworkInterfacePropertiesFormatResponsePtrOutput) Container() ContainerResponsePtrOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfacePropertiesFormatResponse) *ContainerResponse {
		if v == nil {
			return nil
		}
		return v.Container
	}).(ContainerResponsePtrOutput)
}

// Container network interface configuration from which this container network interface is created.
func (o ContainerNetworkInterfacePropertiesFormatResponsePtrOutput) ContainerNetworkInterfaceConfiguration() ContainerNetworkInterfaceConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfacePropertiesFormatResponse) *ContainerNetworkInterfaceConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.ContainerNetworkInterfaceConfiguration
	}).(ContainerNetworkInterfaceConfigurationResponsePtrOutput)
}

// Reference to the ip configuration on this container nic.
func (o ContainerNetworkInterfacePropertiesFormatResponsePtrOutput) IpConfigurations() ContainerNetworkInterfaceIpConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfacePropertiesFormatResponse) []ContainerNetworkInterfaceIpConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(ContainerNetworkInterfaceIpConfigurationResponseArrayOutput)
}

// The provisioning state of the resource.
func (o ContainerNetworkInterfacePropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerNetworkInterfacePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Container network interface child resource.
type ContainerNetworkInterfaceResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Container network interface properties.
	Properties *ContainerNetworkInterfacePropertiesFormatResponse `pulumi:"properties"`
	// Sub Resource type.
	Type string `pulumi:"type"`
}

// ContainerNetworkInterfaceResponseInput is an input type that accepts ContainerNetworkInterfaceResponseArgs and ContainerNetworkInterfaceResponseOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceResponseInput` via:
//
//          ContainerNetworkInterfaceResponseArgs{...}
type ContainerNetworkInterfaceResponseInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceResponseOutput() ContainerNetworkInterfaceResponseOutput
	ToContainerNetworkInterfaceResponseOutputWithContext(context.Context) ContainerNetworkInterfaceResponseOutput
}

// Container network interface child resource.
type ContainerNetworkInterfaceResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Container network interface properties.
	Properties ContainerNetworkInterfacePropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Sub Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ContainerNetworkInterfaceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceResponse)(nil)).Elem()
}

func (i ContainerNetworkInterfaceResponseArgs) ToContainerNetworkInterfaceResponseOutput() ContainerNetworkInterfaceResponseOutput {
	return i.ToContainerNetworkInterfaceResponseOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceResponseArgs) ToContainerNetworkInterfaceResponseOutputWithContext(ctx context.Context) ContainerNetworkInterfaceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceResponseOutput)
}

// ContainerNetworkInterfaceResponseArrayInput is an input type that accepts ContainerNetworkInterfaceResponseArray and ContainerNetworkInterfaceResponseArrayOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceResponseArrayInput` via:
//
//          ContainerNetworkInterfaceResponseArray{ ContainerNetworkInterfaceResponseArgs{...} }
type ContainerNetworkInterfaceResponseArrayInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceResponseArrayOutput() ContainerNetworkInterfaceResponseArrayOutput
	ToContainerNetworkInterfaceResponseArrayOutputWithContext(context.Context) ContainerNetworkInterfaceResponseArrayOutput
}

type ContainerNetworkInterfaceResponseArray []ContainerNetworkInterfaceResponseInput

func (ContainerNetworkInterfaceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceResponse)(nil)).Elem()
}

func (i ContainerNetworkInterfaceResponseArray) ToContainerNetworkInterfaceResponseArrayOutput() ContainerNetworkInterfaceResponseArrayOutput {
	return i.ToContainerNetworkInterfaceResponseArrayOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceResponseArray) ToContainerNetworkInterfaceResponseArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceResponseArrayOutput)
}

// Container network interface child resource.
type ContainerNetworkInterfaceResponseOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceResponseOutput) ToContainerNetworkInterfaceResponseOutput() ContainerNetworkInterfaceResponseOutput {
	return o
}

func (o ContainerNetworkInterfaceResponseOutput) ToContainerNetworkInterfaceResponseOutputWithContext(ctx context.Context) ContainerNetworkInterfaceResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ContainerNetworkInterfaceResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ContainerNetworkInterfaceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o ContainerNetworkInterfaceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Container network interface properties.
func (o ContainerNetworkInterfaceResponseOutput) Properties() ContainerNetworkInterfacePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceResponse) *ContainerNetworkInterfacePropertiesFormatResponse {
		return v.Properties
	}).(ContainerNetworkInterfacePropertiesFormatResponsePtrOutput)
}

// Sub Resource type.
func (o ContainerNetworkInterfaceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ContainerNetworkInterfaceResponseArrayOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceResponseArrayOutput) ToContainerNetworkInterfaceResponseArrayOutput() ContainerNetworkInterfaceResponseArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceResponseArrayOutput) ToContainerNetworkInterfaceResponseArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceResponseArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceResponseArrayOutput) Index(i pulumi.IntInput) ContainerNetworkInterfaceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerNetworkInterfaceResponse {
		return vs[0].([]ContainerNetworkInterfaceResponse)[vs[1].(int)]
	}).(ContainerNetworkInterfaceResponseOutput)
}

// Reference to container resource in remote resource provider.
type ContainerResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// ContainerResponseInput is an input type that accepts ContainerResponseArgs and ContainerResponseOutput values.
// You can construct a concrete instance of `ContainerResponseInput` via:
//
//          ContainerResponseArgs{...}
type ContainerResponseInput interface {
	pulumi.Input

	ToContainerResponseOutput() ContainerResponseOutput
	ToContainerResponseOutputWithContext(context.Context) ContainerResponseOutput
}

// Reference to container resource in remote resource provider.
type ContainerResponseArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ContainerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerResponse)(nil)).Elem()
}

func (i ContainerResponseArgs) ToContainerResponseOutput() ContainerResponseOutput {
	return i.ToContainerResponseOutputWithContext(context.Background())
}

func (i ContainerResponseArgs) ToContainerResponseOutputWithContext(ctx context.Context) ContainerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResponseOutput)
}

func (i ContainerResponseArgs) ToContainerResponsePtrOutput() ContainerResponsePtrOutput {
	return i.ToContainerResponsePtrOutputWithContext(context.Background())
}

func (i ContainerResponseArgs) ToContainerResponsePtrOutputWithContext(ctx context.Context) ContainerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResponseOutput).ToContainerResponsePtrOutputWithContext(ctx)
}

// ContainerResponsePtrInput is an input type that accepts ContainerResponseArgs, ContainerResponsePtr and ContainerResponsePtrOutput values.
// You can construct a concrete instance of `ContainerResponsePtrInput` via:
//
//          ContainerResponseArgs{...}
//
//  or:
//
//          nil
type ContainerResponsePtrInput interface {
	pulumi.Input

	ToContainerResponsePtrOutput() ContainerResponsePtrOutput
	ToContainerResponsePtrOutputWithContext(context.Context) ContainerResponsePtrOutput
}

type containerResponsePtrType ContainerResponseArgs

func ContainerResponsePtr(v *ContainerResponseArgs) ContainerResponsePtrInput {
	return (*containerResponsePtrType)(v)
}

func (*containerResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerResponse)(nil)).Elem()
}

func (i *containerResponsePtrType) ToContainerResponsePtrOutput() ContainerResponsePtrOutput {
	return i.ToContainerResponsePtrOutputWithContext(context.Background())
}

func (i *containerResponsePtrType) ToContainerResponsePtrOutputWithContext(ctx context.Context) ContainerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResponsePtrOutput)
}

// Reference to container resource in remote resource provider.
type ContainerResponseOutput struct{ *pulumi.OutputState }

func (ContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerResponse)(nil)).Elem()
}

func (o ContainerResponseOutput) ToContainerResponseOutput() ContainerResponseOutput {
	return o
}

func (o ContainerResponseOutput) ToContainerResponseOutputWithContext(ctx context.Context) ContainerResponseOutput {
	return o
}

func (o ContainerResponseOutput) ToContainerResponsePtrOutput() ContainerResponsePtrOutput {
	return o.ToContainerResponsePtrOutputWithContext(context.Background())
}

func (o ContainerResponseOutput) ToContainerResponsePtrOutputWithContext(ctx context.Context) ContainerResponsePtrOutput {
	return o.ApplyT(func(v ContainerResponse) *ContainerResponse {
		return &v
	}).(ContainerResponsePtrOutput)
}

// Resource ID.
func (o ContainerResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ContainerResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerResponse)(nil)).Elem()
}

func (o ContainerResponsePtrOutput) ToContainerResponsePtrOutput() ContainerResponsePtrOutput {
	return o
}

func (o ContainerResponsePtrOutput) ToContainerResponsePtrOutputWithContext(ctx context.Context) ContainerResponsePtrOutput {
	return o
}

func (o ContainerResponsePtrOutput) Elem() ContainerResponseOutput {
	return o.ApplyT(func(v *ContainerResponse) ContainerResponse { return *v }).(ContainerResponseOutput)
}

// Resource ID.
func (o ContainerResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// A DDoS custom policy in a resource group.
type DdosCustomPolicyType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the DDoS custom policy.
	Properties DdosCustomPolicyPropertiesFormatResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// DdosCustomPolicyTypeInput is an input type that accepts DdosCustomPolicyTypeArgs and DdosCustomPolicyTypeOutput values.
// You can construct a concrete instance of `DdosCustomPolicyTypeInput` via:
//
//          DdosCustomPolicyTypeArgs{...}
type DdosCustomPolicyTypeInput interface {
	pulumi.Input

	ToDdosCustomPolicyTypeOutput() DdosCustomPolicyTypeOutput
	ToDdosCustomPolicyTypeOutputWithContext(context.Context) DdosCustomPolicyTypeOutput
}

// A DDoS custom policy in a resource group.
type DdosCustomPolicyTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the DDoS custom policy.
	Properties DdosCustomPolicyPropertiesFormatResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DdosCustomPolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosCustomPolicyType)(nil)).Elem()
}

func (i DdosCustomPolicyTypeArgs) ToDdosCustomPolicyTypeOutput() DdosCustomPolicyTypeOutput {
	return i.ToDdosCustomPolicyTypeOutputWithContext(context.Background())
}

func (i DdosCustomPolicyTypeArgs) ToDdosCustomPolicyTypeOutputWithContext(ctx context.Context) DdosCustomPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosCustomPolicyTypeOutput)
}

// A DDoS custom policy in a resource group.
type DdosCustomPolicyTypeOutput struct{ *pulumi.OutputState }

func (DdosCustomPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosCustomPolicyType)(nil)).Elem()
}

func (o DdosCustomPolicyTypeOutput) ToDdosCustomPolicyTypeOutput() DdosCustomPolicyTypeOutput {
	return o
}

func (o DdosCustomPolicyTypeOutput) ToDdosCustomPolicyTypeOutputWithContext(ctx context.Context) DdosCustomPolicyTypeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o DdosCustomPolicyTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v DdosCustomPolicyType) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource location.
func (o DdosCustomPolicyTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosCustomPolicyType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o DdosCustomPolicyTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DdosCustomPolicyType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the DDoS custom policy.
func (o DdosCustomPolicyTypeOutput) Properties() DdosCustomPolicyPropertiesFormatResponseOutput {
	return o.ApplyT(func(v DdosCustomPolicyType) DdosCustomPolicyPropertiesFormatResponse { return v.Properties }).(DdosCustomPolicyPropertiesFormatResponseOutput)
}

// Resource tags.
func (o DdosCustomPolicyTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v DdosCustomPolicyType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o DdosCustomPolicyTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DdosCustomPolicyType) string { return v.Type }).(pulumi.StringOutput)
}

// DDoS custom policy properties.
type DdosCustomPolicyPropertiesFormat struct {
	// The protocol-specific DDoS policy customization parameters.
	ProtocolCustomSettings []ProtocolCustomSettingsFormat `pulumi:"protocolCustomSettings"`
}

// DdosCustomPolicyPropertiesFormatInput is an input type that accepts DdosCustomPolicyPropertiesFormatArgs and DdosCustomPolicyPropertiesFormatOutput values.
// You can construct a concrete instance of `DdosCustomPolicyPropertiesFormatInput` via:
//
//          DdosCustomPolicyPropertiesFormatArgs{...}
type DdosCustomPolicyPropertiesFormatInput interface {
	pulumi.Input

	ToDdosCustomPolicyPropertiesFormatOutput() DdosCustomPolicyPropertiesFormatOutput
	ToDdosCustomPolicyPropertiesFormatOutputWithContext(context.Context) DdosCustomPolicyPropertiesFormatOutput
}

// DDoS custom policy properties.
type DdosCustomPolicyPropertiesFormatArgs struct {
	// The protocol-specific DDoS policy customization parameters.
	ProtocolCustomSettings ProtocolCustomSettingsFormatArrayInput `pulumi:"protocolCustomSettings"`
}

func (DdosCustomPolicyPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosCustomPolicyPropertiesFormat)(nil)).Elem()
}

func (i DdosCustomPolicyPropertiesFormatArgs) ToDdosCustomPolicyPropertiesFormatOutput() DdosCustomPolicyPropertiesFormatOutput {
	return i.ToDdosCustomPolicyPropertiesFormatOutputWithContext(context.Background())
}

func (i DdosCustomPolicyPropertiesFormatArgs) ToDdosCustomPolicyPropertiesFormatOutputWithContext(ctx context.Context) DdosCustomPolicyPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosCustomPolicyPropertiesFormatOutput)
}

func (i DdosCustomPolicyPropertiesFormatArgs) ToDdosCustomPolicyPropertiesFormatPtrOutput() DdosCustomPolicyPropertiesFormatPtrOutput {
	return i.ToDdosCustomPolicyPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i DdosCustomPolicyPropertiesFormatArgs) ToDdosCustomPolicyPropertiesFormatPtrOutputWithContext(ctx context.Context) DdosCustomPolicyPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosCustomPolicyPropertiesFormatOutput).ToDdosCustomPolicyPropertiesFormatPtrOutputWithContext(ctx)
}

// DdosCustomPolicyPropertiesFormatPtrInput is an input type that accepts DdosCustomPolicyPropertiesFormatArgs, DdosCustomPolicyPropertiesFormatPtr and DdosCustomPolicyPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `DdosCustomPolicyPropertiesFormatPtrInput` via:
//
//          DdosCustomPolicyPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type DdosCustomPolicyPropertiesFormatPtrInput interface {
	pulumi.Input

	ToDdosCustomPolicyPropertiesFormatPtrOutput() DdosCustomPolicyPropertiesFormatPtrOutput
	ToDdosCustomPolicyPropertiesFormatPtrOutputWithContext(context.Context) DdosCustomPolicyPropertiesFormatPtrOutput
}

type ddosCustomPolicyPropertiesFormatPtrType DdosCustomPolicyPropertiesFormatArgs

func DdosCustomPolicyPropertiesFormatPtr(v *DdosCustomPolicyPropertiesFormatArgs) DdosCustomPolicyPropertiesFormatPtrInput {
	return (*ddosCustomPolicyPropertiesFormatPtrType)(v)
}

func (*ddosCustomPolicyPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosCustomPolicyPropertiesFormat)(nil)).Elem()
}

func (i *ddosCustomPolicyPropertiesFormatPtrType) ToDdosCustomPolicyPropertiesFormatPtrOutput() DdosCustomPolicyPropertiesFormatPtrOutput {
	return i.ToDdosCustomPolicyPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *ddosCustomPolicyPropertiesFormatPtrType) ToDdosCustomPolicyPropertiesFormatPtrOutputWithContext(ctx context.Context) DdosCustomPolicyPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosCustomPolicyPropertiesFormatPtrOutput)
}

// DDoS custom policy properties.
type DdosCustomPolicyPropertiesFormatOutput struct{ *pulumi.OutputState }

func (DdosCustomPolicyPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosCustomPolicyPropertiesFormat)(nil)).Elem()
}

func (o DdosCustomPolicyPropertiesFormatOutput) ToDdosCustomPolicyPropertiesFormatOutput() DdosCustomPolicyPropertiesFormatOutput {
	return o
}

func (o DdosCustomPolicyPropertiesFormatOutput) ToDdosCustomPolicyPropertiesFormatOutputWithContext(ctx context.Context) DdosCustomPolicyPropertiesFormatOutput {
	return o
}

func (o DdosCustomPolicyPropertiesFormatOutput) ToDdosCustomPolicyPropertiesFormatPtrOutput() DdosCustomPolicyPropertiesFormatPtrOutput {
	return o.ToDdosCustomPolicyPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o DdosCustomPolicyPropertiesFormatOutput) ToDdosCustomPolicyPropertiesFormatPtrOutputWithContext(ctx context.Context) DdosCustomPolicyPropertiesFormatPtrOutput {
	return o.ApplyT(func(v DdosCustomPolicyPropertiesFormat) *DdosCustomPolicyPropertiesFormat {
		return &v
	}).(DdosCustomPolicyPropertiesFormatPtrOutput)
}

// The protocol-specific DDoS policy customization parameters.
func (o DdosCustomPolicyPropertiesFormatOutput) ProtocolCustomSettings() ProtocolCustomSettingsFormatArrayOutput {
	return o.ApplyT(func(v DdosCustomPolicyPropertiesFormat) []ProtocolCustomSettingsFormat {
		return v.ProtocolCustomSettings
	}).(ProtocolCustomSettingsFormatArrayOutput)
}

type DdosCustomPolicyPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (DdosCustomPolicyPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosCustomPolicyPropertiesFormat)(nil)).Elem()
}

func (o DdosCustomPolicyPropertiesFormatPtrOutput) ToDdosCustomPolicyPropertiesFormatPtrOutput() DdosCustomPolicyPropertiesFormatPtrOutput {
	return o
}

func (o DdosCustomPolicyPropertiesFormatPtrOutput) ToDdosCustomPolicyPropertiesFormatPtrOutputWithContext(ctx context.Context) DdosCustomPolicyPropertiesFormatPtrOutput {
	return o
}

func (o DdosCustomPolicyPropertiesFormatPtrOutput) Elem() DdosCustomPolicyPropertiesFormatOutput {
	return o.ApplyT(func(v *DdosCustomPolicyPropertiesFormat) DdosCustomPolicyPropertiesFormat { return *v }).(DdosCustomPolicyPropertiesFormatOutput)
}

// The protocol-specific DDoS policy customization parameters.
func (o DdosCustomPolicyPropertiesFormatPtrOutput) ProtocolCustomSettings() ProtocolCustomSettingsFormatArrayOutput {
	return o.ApplyT(func(v *DdosCustomPolicyPropertiesFormat) []ProtocolCustomSettingsFormat {
		if v == nil {
			return nil
		}
		return v.ProtocolCustomSettings
	}).(ProtocolCustomSettingsFormatArrayOutput)
}

// DDoS custom policy properties.
type DdosCustomPolicyPropertiesFormatResponse struct {
	// The protocol-specific DDoS policy customization parameters.
	ProtocolCustomSettings []ProtocolCustomSettingsFormatResponse `pulumi:"protocolCustomSettings"`
	// The provisioning state of the DDoS custom policy resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The list of public IPs associated with the DDoS custom policy resource. This list is read-only.
	PublicIPAddresses []SubResourceResponse `pulumi:"publicIPAddresses"`
	// The resource GUID property of the DDoS custom policy resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
	ResourceGuid string `pulumi:"resourceGuid"`
}

// DdosCustomPolicyPropertiesFormatResponseInput is an input type that accepts DdosCustomPolicyPropertiesFormatResponseArgs and DdosCustomPolicyPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `DdosCustomPolicyPropertiesFormatResponseInput` via:
//
//          DdosCustomPolicyPropertiesFormatResponseArgs{...}
type DdosCustomPolicyPropertiesFormatResponseInput interface {
	pulumi.Input

	ToDdosCustomPolicyPropertiesFormatResponseOutput() DdosCustomPolicyPropertiesFormatResponseOutput
	ToDdosCustomPolicyPropertiesFormatResponseOutputWithContext(context.Context) DdosCustomPolicyPropertiesFormatResponseOutput
}

// DDoS custom policy properties.
type DdosCustomPolicyPropertiesFormatResponseArgs struct {
	// The protocol-specific DDoS policy customization parameters.
	ProtocolCustomSettings ProtocolCustomSettingsFormatResponseArrayInput `pulumi:"protocolCustomSettings"`
	// The provisioning state of the DDoS custom policy resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The list of public IPs associated with the DDoS custom policy resource. This list is read-only.
	PublicIPAddresses SubResourceResponseArrayInput `pulumi:"publicIPAddresses"`
	// The resource GUID property of the DDoS custom policy resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
	ResourceGuid pulumi.StringInput `pulumi:"resourceGuid"`
}

func (DdosCustomPolicyPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosCustomPolicyPropertiesFormatResponse)(nil)).Elem()
}

func (i DdosCustomPolicyPropertiesFormatResponseArgs) ToDdosCustomPolicyPropertiesFormatResponseOutput() DdosCustomPolicyPropertiesFormatResponseOutput {
	return i.ToDdosCustomPolicyPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i DdosCustomPolicyPropertiesFormatResponseArgs) ToDdosCustomPolicyPropertiesFormatResponseOutputWithContext(ctx context.Context) DdosCustomPolicyPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosCustomPolicyPropertiesFormatResponseOutput)
}

func (i DdosCustomPolicyPropertiesFormatResponseArgs) ToDdosCustomPolicyPropertiesFormatResponsePtrOutput() DdosCustomPolicyPropertiesFormatResponsePtrOutput {
	return i.ToDdosCustomPolicyPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i DdosCustomPolicyPropertiesFormatResponseArgs) ToDdosCustomPolicyPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) DdosCustomPolicyPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosCustomPolicyPropertiesFormatResponseOutput).ToDdosCustomPolicyPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// DdosCustomPolicyPropertiesFormatResponsePtrInput is an input type that accepts DdosCustomPolicyPropertiesFormatResponseArgs, DdosCustomPolicyPropertiesFormatResponsePtr and DdosCustomPolicyPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `DdosCustomPolicyPropertiesFormatResponsePtrInput` via:
//
//          DdosCustomPolicyPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type DdosCustomPolicyPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToDdosCustomPolicyPropertiesFormatResponsePtrOutput() DdosCustomPolicyPropertiesFormatResponsePtrOutput
	ToDdosCustomPolicyPropertiesFormatResponsePtrOutputWithContext(context.Context) DdosCustomPolicyPropertiesFormatResponsePtrOutput
}

type ddosCustomPolicyPropertiesFormatResponsePtrType DdosCustomPolicyPropertiesFormatResponseArgs

func DdosCustomPolicyPropertiesFormatResponsePtr(v *DdosCustomPolicyPropertiesFormatResponseArgs) DdosCustomPolicyPropertiesFormatResponsePtrInput {
	return (*ddosCustomPolicyPropertiesFormatResponsePtrType)(v)
}

func (*ddosCustomPolicyPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosCustomPolicyPropertiesFormatResponse)(nil)).Elem()
}

func (i *ddosCustomPolicyPropertiesFormatResponsePtrType) ToDdosCustomPolicyPropertiesFormatResponsePtrOutput() DdosCustomPolicyPropertiesFormatResponsePtrOutput {
	return i.ToDdosCustomPolicyPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *ddosCustomPolicyPropertiesFormatResponsePtrType) ToDdosCustomPolicyPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) DdosCustomPolicyPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosCustomPolicyPropertiesFormatResponsePtrOutput)
}

// DDoS custom policy properties.
type DdosCustomPolicyPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (DdosCustomPolicyPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosCustomPolicyPropertiesFormatResponse)(nil)).Elem()
}

func (o DdosCustomPolicyPropertiesFormatResponseOutput) ToDdosCustomPolicyPropertiesFormatResponseOutput() DdosCustomPolicyPropertiesFormatResponseOutput {
	return o
}

func (o DdosCustomPolicyPropertiesFormatResponseOutput) ToDdosCustomPolicyPropertiesFormatResponseOutputWithContext(ctx context.Context) DdosCustomPolicyPropertiesFormatResponseOutput {
	return o
}

func (o DdosCustomPolicyPropertiesFormatResponseOutput) ToDdosCustomPolicyPropertiesFormatResponsePtrOutput() DdosCustomPolicyPropertiesFormatResponsePtrOutput {
	return o.ToDdosCustomPolicyPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o DdosCustomPolicyPropertiesFormatResponseOutput) ToDdosCustomPolicyPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) DdosCustomPolicyPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v DdosCustomPolicyPropertiesFormatResponse) *DdosCustomPolicyPropertiesFormatResponse {
		return &v
	}).(DdosCustomPolicyPropertiesFormatResponsePtrOutput)
}

// The protocol-specific DDoS policy customization parameters.
func (o DdosCustomPolicyPropertiesFormatResponseOutput) ProtocolCustomSettings() ProtocolCustomSettingsFormatResponseArrayOutput {
	return o.ApplyT(func(v DdosCustomPolicyPropertiesFormatResponse) []ProtocolCustomSettingsFormatResponse {
		return v.ProtocolCustomSettings
	}).(ProtocolCustomSettingsFormatResponseArrayOutput)
}

// The provisioning state of the DDoS custom policy resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
func (o DdosCustomPolicyPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DdosCustomPolicyPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The list of public IPs associated with the DDoS custom policy resource. This list is read-only.
func (o DdosCustomPolicyPropertiesFormatResponseOutput) PublicIPAddresses() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v DdosCustomPolicyPropertiesFormatResponse) []SubResourceResponse { return v.PublicIPAddresses }).(SubResourceResponseArrayOutput)
}

// The resource GUID property of the DDoS custom policy resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
func (o DdosCustomPolicyPropertiesFormatResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v DdosCustomPolicyPropertiesFormatResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

type DdosCustomPolicyPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (DdosCustomPolicyPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosCustomPolicyPropertiesFormatResponse)(nil)).Elem()
}

func (o DdosCustomPolicyPropertiesFormatResponsePtrOutput) ToDdosCustomPolicyPropertiesFormatResponsePtrOutput() DdosCustomPolicyPropertiesFormatResponsePtrOutput {
	return o
}

func (o DdosCustomPolicyPropertiesFormatResponsePtrOutput) ToDdosCustomPolicyPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) DdosCustomPolicyPropertiesFormatResponsePtrOutput {
	return o
}

func (o DdosCustomPolicyPropertiesFormatResponsePtrOutput) Elem() DdosCustomPolicyPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *DdosCustomPolicyPropertiesFormatResponse) DdosCustomPolicyPropertiesFormatResponse { return *v }).(DdosCustomPolicyPropertiesFormatResponseOutput)
}

// The protocol-specific DDoS policy customization parameters.
func (o DdosCustomPolicyPropertiesFormatResponsePtrOutput) ProtocolCustomSettings() ProtocolCustomSettingsFormatResponseArrayOutput {
	return o.ApplyT(func(v *DdosCustomPolicyPropertiesFormatResponse) []ProtocolCustomSettingsFormatResponse {
		if v == nil {
			return nil
		}
		return v.ProtocolCustomSettings
	}).(ProtocolCustomSettingsFormatResponseArrayOutput)
}

// The provisioning state of the DDoS custom policy resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
func (o DdosCustomPolicyPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdosCustomPolicyPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The list of public IPs associated with the DDoS custom policy resource. This list is read-only.
func (o DdosCustomPolicyPropertiesFormatResponsePtrOutput) PublicIPAddresses() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *DdosCustomPolicyPropertiesFormatResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddresses
	}).(SubResourceResponseArrayOutput)
}

// The resource GUID property of the DDoS custom policy resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
func (o DdosCustomPolicyPropertiesFormatResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdosCustomPolicyPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// A DDoS protection plan in a resource group.
type DdosProtectionPlanType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the DDoS protection plan.
	Properties DdosProtectionPlanPropertiesFormatResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// DdosProtectionPlanTypeInput is an input type that accepts DdosProtectionPlanTypeArgs and DdosProtectionPlanTypeOutput values.
// You can construct a concrete instance of `DdosProtectionPlanTypeInput` via:
//
//          DdosProtectionPlanTypeArgs{...}
type DdosProtectionPlanTypeInput interface {
	pulumi.Input

	ToDdosProtectionPlanTypeOutput() DdosProtectionPlanTypeOutput
	ToDdosProtectionPlanTypeOutputWithContext(context.Context) DdosProtectionPlanTypeOutput
}

// A DDoS protection plan in a resource group.
type DdosProtectionPlanTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the DDoS protection plan.
	Properties DdosProtectionPlanPropertiesFormatResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DdosProtectionPlanTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosProtectionPlanType)(nil)).Elem()
}

func (i DdosProtectionPlanTypeArgs) ToDdosProtectionPlanTypeOutput() DdosProtectionPlanTypeOutput {
	return i.ToDdosProtectionPlanTypeOutputWithContext(context.Background())
}

func (i DdosProtectionPlanTypeArgs) ToDdosProtectionPlanTypeOutputWithContext(ctx context.Context) DdosProtectionPlanTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosProtectionPlanTypeOutput)
}

// A DDoS protection plan in a resource group.
type DdosProtectionPlanTypeOutput struct{ *pulumi.OutputState }

func (DdosProtectionPlanTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosProtectionPlanType)(nil)).Elem()
}

func (o DdosProtectionPlanTypeOutput) ToDdosProtectionPlanTypeOutput() DdosProtectionPlanTypeOutput {
	return o
}

func (o DdosProtectionPlanTypeOutput) ToDdosProtectionPlanTypeOutputWithContext(ctx context.Context) DdosProtectionPlanTypeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o DdosProtectionPlanTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v DdosProtectionPlanType) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource location.
func (o DdosProtectionPlanTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosProtectionPlanType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o DdosProtectionPlanTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DdosProtectionPlanType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the DDoS protection plan.
func (o DdosProtectionPlanTypeOutput) Properties() DdosProtectionPlanPropertiesFormatResponseOutput {
	return o.ApplyT(func(v DdosProtectionPlanType) DdosProtectionPlanPropertiesFormatResponse { return v.Properties }).(DdosProtectionPlanPropertiesFormatResponseOutput)
}

// Resource tags.
func (o DdosProtectionPlanTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v DdosProtectionPlanType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o DdosProtectionPlanTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DdosProtectionPlanType) string { return v.Type }).(pulumi.StringOutput)
}

// DDoS protection plan properties.
type DdosProtectionPlanPropertiesFormat struct {
}

// DdosProtectionPlanPropertiesFormatInput is an input type that accepts DdosProtectionPlanPropertiesFormatArgs and DdosProtectionPlanPropertiesFormatOutput values.
// You can construct a concrete instance of `DdosProtectionPlanPropertiesFormatInput` via:
//
//          DdosProtectionPlanPropertiesFormatArgs{...}
type DdosProtectionPlanPropertiesFormatInput interface {
	pulumi.Input

	ToDdosProtectionPlanPropertiesFormatOutput() DdosProtectionPlanPropertiesFormatOutput
	ToDdosProtectionPlanPropertiesFormatOutputWithContext(context.Context) DdosProtectionPlanPropertiesFormatOutput
}

// DDoS protection plan properties.
type DdosProtectionPlanPropertiesFormatArgs struct {
}

func (DdosProtectionPlanPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosProtectionPlanPropertiesFormat)(nil)).Elem()
}

func (i DdosProtectionPlanPropertiesFormatArgs) ToDdosProtectionPlanPropertiesFormatOutput() DdosProtectionPlanPropertiesFormatOutput {
	return i.ToDdosProtectionPlanPropertiesFormatOutputWithContext(context.Background())
}

func (i DdosProtectionPlanPropertiesFormatArgs) ToDdosProtectionPlanPropertiesFormatOutputWithContext(ctx context.Context) DdosProtectionPlanPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosProtectionPlanPropertiesFormatOutput)
}

func (i DdosProtectionPlanPropertiesFormatArgs) ToDdosProtectionPlanPropertiesFormatPtrOutput() DdosProtectionPlanPropertiesFormatPtrOutput {
	return i.ToDdosProtectionPlanPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i DdosProtectionPlanPropertiesFormatArgs) ToDdosProtectionPlanPropertiesFormatPtrOutputWithContext(ctx context.Context) DdosProtectionPlanPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosProtectionPlanPropertiesFormatOutput).ToDdosProtectionPlanPropertiesFormatPtrOutputWithContext(ctx)
}

// DdosProtectionPlanPropertiesFormatPtrInput is an input type that accepts DdosProtectionPlanPropertiesFormatArgs, DdosProtectionPlanPropertiesFormatPtr and DdosProtectionPlanPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `DdosProtectionPlanPropertiesFormatPtrInput` via:
//
//          DdosProtectionPlanPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type DdosProtectionPlanPropertiesFormatPtrInput interface {
	pulumi.Input

	ToDdosProtectionPlanPropertiesFormatPtrOutput() DdosProtectionPlanPropertiesFormatPtrOutput
	ToDdosProtectionPlanPropertiesFormatPtrOutputWithContext(context.Context) DdosProtectionPlanPropertiesFormatPtrOutput
}

type ddosProtectionPlanPropertiesFormatPtrType DdosProtectionPlanPropertiesFormatArgs

func DdosProtectionPlanPropertiesFormatPtr(v *DdosProtectionPlanPropertiesFormatArgs) DdosProtectionPlanPropertiesFormatPtrInput {
	return (*ddosProtectionPlanPropertiesFormatPtrType)(v)
}

func (*ddosProtectionPlanPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosProtectionPlanPropertiesFormat)(nil)).Elem()
}

func (i *ddosProtectionPlanPropertiesFormatPtrType) ToDdosProtectionPlanPropertiesFormatPtrOutput() DdosProtectionPlanPropertiesFormatPtrOutput {
	return i.ToDdosProtectionPlanPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *ddosProtectionPlanPropertiesFormatPtrType) ToDdosProtectionPlanPropertiesFormatPtrOutputWithContext(ctx context.Context) DdosProtectionPlanPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosProtectionPlanPropertiesFormatPtrOutput)
}

// DDoS protection plan properties.
type DdosProtectionPlanPropertiesFormatOutput struct{ *pulumi.OutputState }

func (DdosProtectionPlanPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosProtectionPlanPropertiesFormat)(nil)).Elem()
}

func (o DdosProtectionPlanPropertiesFormatOutput) ToDdosProtectionPlanPropertiesFormatOutput() DdosProtectionPlanPropertiesFormatOutput {
	return o
}

func (o DdosProtectionPlanPropertiesFormatOutput) ToDdosProtectionPlanPropertiesFormatOutputWithContext(ctx context.Context) DdosProtectionPlanPropertiesFormatOutput {
	return o
}

func (o DdosProtectionPlanPropertiesFormatOutput) ToDdosProtectionPlanPropertiesFormatPtrOutput() DdosProtectionPlanPropertiesFormatPtrOutput {
	return o.ToDdosProtectionPlanPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o DdosProtectionPlanPropertiesFormatOutput) ToDdosProtectionPlanPropertiesFormatPtrOutputWithContext(ctx context.Context) DdosProtectionPlanPropertiesFormatPtrOutput {
	return o.ApplyT(func(v DdosProtectionPlanPropertiesFormat) *DdosProtectionPlanPropertiesFormat {
		return &v
	}).(DdosProtectionPlanPropertiesFormatPtrOutput)
}

type DdosProtectionPlanPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (DdosProtectionPlanPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosProtectionPlanPropertiesFormat)(nil)).Elem()
}

func (o DdosProtectionPlanPropertiesFormatPtrOutput) ToDdosProtectionPlanPropertiesFormatPtrOutput() DdosProtectionPlanPropertiesFormatPtrOutput {
	return o
}

func (o DdosProtectionPlanPropertiesFormatPtrOutput) ToDdosProtectionPlanPropertiesFormatPtrOutputWithContext(ctx context.Context) DdosProtectionPlanPropertiesFormatPtrOutput {
	return o
}

func (o DdosProtectionPlanPropertiesFormatPtrOutput) Elem() DdosProtectionPlanPropertiesFormatOutput {
	return o.ApplyT(func(v *DdosProtectionPlanPropertiesFormat) DdosProtectionPlanPropertiesFormat { return *v }).(DdosProtectionPlanPropertiesFormatOutput)
}

// DDoS protection plan properties.
type DdosProtectionPlanPropertiesFormatResponse struct {
	// The provisioning state of the DDoS protection plan resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the DDoS protection plan resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
	ResourceGuid string `pulumi:"resourceGuid"`
	// The list of virtual networks associated with the DDoS protection plan resource. This list is read-only.
	VirtualNetworks []SubResourceResponse `pulumi:"virtualNetworks"`
}

// DdosProtectionPlanPropertiesFormatResponseInput is an input type that accepts DdosProtectionPlanPropertiesFormatResponseArgs and DdosProtectionPlanPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `DdosProtectionPlanPropertiesFormatResponseInput` via:
//
//          DdosProtectionPlanPropertiesFormatResponseArgs{...}
type DdosProtectionPlanPropertiesFormatResponseInput interface {
	pulumi.Input

	ToDdosProtectionPlanPropertiesFormatResponseOutput() DdosProtectionPlanPropertiesFormatResponseOutput
	ToDdosProtectionPlanPropertiesFormatResponseOutputWithContext(context.Context) DdosProtectionPlanPropertiesFormatResponseOutput
}

// DDoS protection plan properties.
type DdosProtectionPlanPropertiesFormatResponseArgs struct {
	// The provisioning state of the DDoS protection plan resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The resource GUID property of the DDoS protection plan resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
	ResourceGuid pulumi.StringInput `pulumi:"resourceGuid"`
	// The list of virtual networks associated with the DDoS protection plan resource. This list is read-only.
	VirtualNetworks SubResourceResponseArrayInput `pulumi:"virtualNetworks"`
}

func (DdosProtectionPlanPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosProtectionPlanPropertiesFormatResponse)(nil)).Elem()
}

func (i DdosProtectionPlanPropertiesFormatResponseArgs) ToDdosProtectionPlanPropertiesFormatResponseOutput() DdosProtectionPlanPropertiesFormatResponseOutput {
	return i.ToDdosProtectionPlanPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i DdosProtectionPlanPropertiesFormatResponseArgs) ToDdosProtectionPlanPropertiesFormatResponseOutputWithContext(ctx context.Context) DdosProtectionPlanPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosProtectionPlanPropertiesFormatResponseOutput)
}

func (i DdosProtectionPlanPropertiesFormatResponseArgs) ToDdosProtectionPlanPropertiesFormatResponsePtrOutput() DdosProtectionPlanPropertiesFormatResponsePtrOutput {
	return i.ToDdosProtectionPlanPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i DdosProtectionPlanPropertiesFormatResponseArgs) ToDdosProtectionPlanPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) DdosProtectionPlanPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosProtectionPlanPropertiesFormatResponseOutput).ToDdosProtectionPlanPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// DdosProtectionPlanPropertiesFormatResponsePtrInput is an input type that accepts DdosProtectionPlanPropertiesFormatResponseArgs, DdosProtectionPlanPropertiesFormatResponsePtr and DdosProtectionPlanPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `DdosProtectionPlanPropertiesFormatResponsePtrInput` via:
//
//          DdosProtectionPlanPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type DdosProtectionPlanPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToDdosProtectionPlanPropertiesFormatResponsePtrOutput() DdosProtectionPlanPropertiesFormatResponsePtrOutput
	ToDdosProtectionPlanPropertiesFormatResponsePtrOutputWithContext(context.Context) DdosProtectionPlanPropertiesFormatResponsePtrOutput
}

type ddosProtectionPlanPropertiesFormatResponsePtrType DdosProtectionPlanPropertiesFormatResponseArgs

func DdosProtectionPlanPropertiesFormatResponsePtr(v *DdosProtectionPlanPropertiesFormatResponseArgs) DdosProtectionPlanPropertiesFormatResponsePtrInput {
	return (*ddosProtectionPlanPropertiesFormatResponsePtrType)(v)
}

func (*ddosProtectionPlanPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosProtectionPlanPropertiesFormatResponse)(nil)).Elem()
}

func (i *ddosProtectionPlanPropertiesFormatResponsePtrType) ToDdosProtectionPlanPropertiesFormatResponsePtrOutput() DdosProtectionPlanPropertiesFormatResponsePtrOutput {
	return i.ToDdosProtectionPlanPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *ddosProtectionPlanPropertiesFormatResponsePtrType) ToDdosProtectionPlanPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) DdosProtectionPlanPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosProtectionPlanPropertiesFormatResponsePtrOutput)
}

// DDoS protection plan properties.
type DdosProtectionPlanPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (DdosProtectionPlanPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosProtectionPlanPropertiesFormatResponse)(nil)).Elem()
}

func (o DdosProtectionPlanPropertiesFormatResponseOutput) ToDdosProtectionPlanPropertiesFormatResponseOutput() DdosProtectionPlanPropertiesFormatResponseOutput {
	return o
}

func (o DdosProtectionPlanPropertiesFormatResponseOutput) ToDdosProtectionPlanPropertiesFormatResponseOutputWithContext(ctx context.Context) DdosProtectionPlanPropertiesFormatResponseOutput {
	return o
}

func (o DdosProtectionPlanPropertiesFormatResponseOutput) ToDdosProtectionPlanPropertiesFormatResponsePtrOutput() DdosProtectionPlanPropertiesFormatResponsePtrOutput {
	return o.ToDdosProtectionPlanPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o DdosProtectionPlanPropertiesFormatResponseOutput) ToDdosProtectionPlanPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) DdosProtectionPlanPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v DdosProtectionPlanPropertiesFormatResponse) *DdosProtectionPlanPropertiesFormatResponse {
		return &v
	}).(DdosProtectionPlanPropertiesFormatResponsePtrOutput)
}

// The provisioning state of the DDoS protection plan resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
func (o DdosProtectionPlanPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DdosProtectionPlanPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the DDoS protection plan resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
func (o DdosProtectionPlanPropertiesFormatResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v DdosProtectionPlanPropertiesFormatResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// The list of virtual networks associated with the DDoS protection plan resource. This list is read-only.
func (o DdosProtectionPlanPropertiesFormatResponseOutput) VirtualNetworks() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v DdosProtectionPlanPropertiesFormatResponse) []SubResourceResponse { return v.VirtualNetworks }).(SubResourceResponseArrayOutput)
}

type DdosProtectionPlanPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (DdosProtectionPlanPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosProtectionPlanPropertiesFormatResponse)(nil)).Elem()
}

func (o DdosProtectionPlanPropertiesFormatResponsePtrOutput) ToDdosProtectionPlanPropertiesFormatResponsePtrOutput() DdosProtectionPlanPropertiesFormatResponsePtrOutput {
	return o
}

func (o DdosProtectionPlanPropertiesFormatResponsePtrOutput) ToDdosProtectionPlanPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) DdosProtectionPlanPropertiesFormatResponsePtrOutput {
	return o
}

func (o DdosProtectionPlanPropertiesFormatResponsePtrOutput) Elem() DdosProtectionPlanPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *DdosProtectionPlanPropertiesFormatResponse) DdosProtectionPlanPropertiesFormatResponse {
		return *v
	}).(DdosProtectionPlanPropertiesFormatResponseOutput)
}

// The provisioning state of the DDoS protection plan resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
func (o DdosProtectionPlanPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdosProtectionPlanPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the DDoS protection plan resource. It uniquely identifies the resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
func (o DdosProtectionPlanPropertiesFormatResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdosProtectionPlanPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// The list of virtual networks associated with the DDoS protection plan resource. This list is read-only.
func (o DdosProtectionPlanPropertiesFormatResponsePtrOutput) VirtualNetworks() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *DdosProtectionPlanPropertiesFormatResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.VirtualNetworks
	}).(SubResourceResponseArrayOutput)
}

// Contains the DDoS protection settings of the public IP.
type DdosSettings struct {
	// The DDoS custom policy associated with the public IP.
	DdosCustomPolicy *SubResource `pulumi:"ddosCustomPolicy"`
	// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
	ProtectionCoverage *string `pulumi:"protectionCoverage"`
}

// DdosSettingsInput is an input type that accepts DdosSettingsArgs and DdosSettingsOutput values.
// You can construct a concrete instance of `DdosSettingsInput` via:
//
//          DdosSettingsArgs{...}
type DdosSettingsInput interface {
	pulumi.Input

	ToDdosSettingsOutput() DdosSettingsOutput
	ToDdosSettingsOutputWithContext(context.Context) DdosSettingsOutput
}

// Contains the DDoS protection settings of the public IP.
type DdosSettingsArgs struct {
	// The DDoS custom policy associated with the public IP.
	DdosCustomPolicy SubResourcePtrInput `pulumi:"ddosCustomPolicy"`
	// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
	ProtectionCoverage pulumi.StringPtrInput `pulumi:"protectionCoverage"`
}

func (DdosSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosSettings)(nil)).Elem()
}

func (i DdosSettingsArgs) ToDdosSettingsOutput() DdosSettingsOutput {
	return i.ToDdosSettingsOutputWithContext(context.Background())
}

func (i DdosSettingsArgs) ToDdosSettingsOutputWithContext(ctx context.Context) DdosSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosSettingsOutput)
}

func (i DdosSettingsArgs) ToDdosSettingsPtrOutput() DdosSettingsPtrOutput {
	return i.ToDdosSettingsPtrOutputWithContext(context.Background())
}

func (i DdosSettingsArgs) ToDdosSettingsPtrOutputWithContext(ctx context.Context) DdosSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosSettingsOutput).ToDdosSettingsPtrOutputWithContext(ctx)
}

// DdosSettingsPtrInput is an input type that accepts DdosSettingsArgs, DdosSettingsPtr and DdosSettingsPtrOutput values.
// You can construct a concrete instance of `DdosSettingsPtrInput` via:
//
//          DdosSettingsArgs{...}
//
//  or:
//
//          nil
type DdosSettingsPtrInput interface {
	pulumi.Input

	ToDdosSettingsPtrOutput() DdosSettingsPtrOutput
	ToDdosSettingsPtrOutputWithContext(context.Context) DdosSettingsPtrOutput
}

type ddosSettingsPtrType DdosSettingsArgs

func DdosSettingsPtr(v *DdosSettingsArgs) DdosSettingsPtrInput {
	return (*ddosSettingsPtrType)(v)
}

func (*ddosSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosSettings)(nil)).Elem()
}

func (i *ddosSettingsPtrType) ToDdosSettingsPtrOutput() DdosSettingsPtrOutput {
	return i.ToDdosSettingsPtrOutputWithContext(context.Background())
}

func (i *ddosSettingsPtrType) ToDdosSettingsPtrOutputWithContext(ctx context.Context) DdosSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosSettingsPtrOutput)
}

// Contains the DDoS protection settings of the public IP.
type DdosSettingsOutput struct{ *pulumi.OutputState }

func (DdosSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosSettings)(nil)).Elem()
}

func (o DdosSettingsOutput) ToDdosSettingsOutput() DdosSettingsOutput {
	return o
}

func (o DdosSettingsOutput) ToDdosSettingsOutputWithContext(ctx context.Context) DdosSettingsOutput {
	return o
}

func (o DdosSettingsOutput) ToDdosSettingsPtrOutput() DdosSettingsPtrOutput {
	return o.ToDdosSettingsPtrOutputWithContext(context.Background())
}

func (o DdosSettingsOutput) ToDdosSettingsPtrOutputWithContext(ctx context.Context) DdosSettingsPtrOutput {
	return o.ApplyT(func(v DdosSettings) *DdosSettings {
		return &v
	}).(DdosSettingsPtrOutput)
}

// The DDoS custom policy associated with the public IP.
func (o DdosSettingsOutput) DdosCustomPolicy() SubResourcePtrOutput {
	return o.ApplyT(func(v DdosSettings) *SubResource { return v.DdosCustomPolicy }).(SubResourcePtrOutput)
}

// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
func (o DdosSettingsOutput) ProtectionCoverage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosSettings) *string { return v.ProtectionCoverage }).(pulumi.StringPtrOutput)
}

type DdosSettingsPtrOutput struct{ *pulumi.OutputState }

func (DdosSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosSettings)(nil)).Elem()
}

func (o DdosSettingsPtrOutput) ToDdosSettingsPtrOutput() DdosSettingsPtrOutput {
	return o
}

func (o DdosSettingsPtrOutput) ToDdosSettingsPtrOutputWithContext(ctx context.Context) DdosSettingsPtrOutput {
	return o
}

func (o DdosSettingsPtrOutput) Elem() DdosSettingsOutput {
	return o.ApplyT(func(v *DdosSettings) DdosSettings { return *v }).(DdosSettingsOutput)
}

// The DDoS custom policy associated with the public IP.
func (o DdosSettingsPtrOutput) DdosCustomPolicy() SubResourcePtrOutput {
	return o.ApplyT(func(v *DdosSettings) *SubResource {
		if v == nil {
			return nil
		}
		return v.DdosCustomPolicy
	}).(SubResourcePtrOutput)
}

// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
func (o DdosSettingsPtrOutput) ProtectionCoverage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdosSettings) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionCoverage
	}).(pulumi.StringPtrOutput)
}

// Contains the DDoS protection settings of the public IP.
type DdosSettingsResponse struct {
	// The DDoS custom policy associated with the public IP.
	DdosCustomPolicy *SubResourceResponse `pulumi:"ddosCustomPolicy"`
	// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
	ProtectionCoverage *string `pulumi:"protectionCoverage"`
}

// DdosSettingsResponseInput is an input type that accepts DdosSettingsResponseArgs and DdosSettingsResponseOutput values.
// You can construct a concrete instance of `DdosSettingsResponseInput` via:
//
//          DdosSettingsResponseArgs{...}
type DdosSettingsResponseInput interface {
	pulumi.Input

	ToDdosSettingsResponseOutput() DdosSettingsResponseOutput
	ToDdosSettingsResponseOutputWithContext(context.Context) DdosSettingsResponseOutput
}

// Contains the DDoS protection settings of the public IP.
type DdosSettingsResponseArgs struct {
	// The DDoS custom policy associated with the public IP.
	DdosCustomPolicy SubResourceResponsePtrInput `pulumi:"ddosCustomPolicy"`
	// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
	ProtectionCoverage pulumi.StringPtrInput `pulumi:"protectionCoverage"`
}

func (DdosSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosSettingsResponse)(nil)).Elem()
}

func (i DdosSettingsResponseArgs) ToDdosSettingsResponseOutput() DdosSettingsResponseOutput {
	return i.ToDdosSettingsResponseOutputWithContext(context.Background())
}

func (i DdosSettingsResponseArgs) ToDdosSettingsResponseOutputWithContext(ctx context.Context) DdosSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosSettingsResponseOutput)
}

func (i DdosSettingsResponseArgs) ToDdosSettingsResponsePtrOutput() DdosSettingsResponsePtrOutput {
	return i.ToDdosSettingsResponsePtrOutputWithContext(context.Background())
}

func (i DdosSettingsResponseArgs) ToDdosSettingsResponsePtrOutputWithContext(ctx context.Context) DdosSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosSettingsResponseOutput).ToDdosSettingsResponsePtrOutputWithContext(ctx)
}

// DdosSettingsResponsePtrInput is an input type that accepts DdosSettingsResponseArgs, DdosSettingsResponsePtr and DdosSettingsResponsePtrOutput values.
// You can construct a concrete instance of `DdosSettingsResponsePtrInput` via:
//
//          DdosSettingsResponseArgs{...}
//
//  or:
//
//          nil
type DdosSettingsResponsePtrInput interface {
	pulumi.Input

	ToDdosSettingsResponsePtrOutput() DdosSettingsResponsePtrOutput
	ToDdosSettingsResponsePtrOutputWithContext(context.Context) DdosSettingsResponsePtrOutput
}

type ddosSettingsResponsePtrType DdosSettingsResponseArgs

func DdosSettingsResponsePtr(v *DdosSettingsResponseArgs) DdosSettingsResponsePtrInput {
	return (*ddosSettingsResponsePtrType)(v)
}

func (*ddosSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosSettingsResponse)(nil)).Elem()
}

func (i *ddosSettingsResponsePtrType) ToDdosSettingsResponsePtrOutput() DdosSettingsResponsePtrOutput {
	return i.ToDdosSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *ddosSettingsResponsePtrType) ToDdosSettingsResponsePtrOutputWithContext(ctx context.Context) DdosSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosSettingsResponsePtrOutput)
}

// Contains the DDoS protection settings of the public IP.
type DdosSettingsResponseOutput struct{ *pulumi.OutputState }

func (DdosSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosSettingsResponse)(nil)).Elem()
}

func (o DdosSettingsResponseOutput) ToDdosSettingsResponseOutput() DdosSettingsResponseOutput {
	return o
}

func (o DdosSettingsResponseOutput) ToDdosSettingsResponseOutputWithContext(ctx context.Context) DdosSettingsResponseOutput {
	return o
}

func (o DdosSettingsResponseOutput) ToDdosSettingsResponsePtrOutput() DdosSettingsResponsePtrOutput {
	return o.ToDdosSettingsResponsePtrOutputWithContext(context.Background())
}

func (o DdosSettingsResponseOutput) ToDdosSettingsResponsePtrOutputWithContext(ctx context.Context) DdosSettingsResponsePtrOutput {
	return o.ApplyT(func(v DdosSettingsResponse) *DdosSettingsResponse {
		return &v
	}).(DdosSettingsResponsePtrOutput)
}

// The DDoS custom policy associated with the public IP.
func (o DdosSettingsResponseOutput) DdosCustomPolicy() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v DdosSettingsResponse) *SubResourceResponse { return v.DdosCustomPolicy }).(SubResourceResponsePtrOutput)
}

// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
func (o DdosSettingsResponseOutput) ProtectionCoverage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosSettingsResponse) *string { return v.ProtectionCoverage }).(pulumi.StringPtrOutput)
}

type DdosSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DdosSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosSettingsResponse)(nil)).Elem()
}

func (o DdosSettingsResponsePtrOutput) ToDdosSettingsResponsePtrOutput() DdosSettingsResponsePtrOutput {
	return o
}

func (o DdosSettingsResponsePtrOutput) ToDdosSettingsResponsePtrOutputWithContext(ctx context.Context) DdosSettingsResponsePtrOutput {
	return o
}

func (o DdosSettingsResponsePtrOutput) Elem() DdosSettingsResponseOutput {
	return o.ApplyT(func(v *DdosSettingsResponse) DdosSettingsResponse { return *v }).(DdosSettingsResponseOutput)
}

// The DDoS custom policy associated with the public IP.
func (o DdosSettingsResponsePtrOutput) DdosCustomPolicy() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *DdosSettingsResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.DdosCustomPolicy
	}).(SubResourceResponsePtrOutput)
}

// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
func (o DdosSettingsResponsePtrOutput) ProtectionCoverage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdosSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionCoverage
	}).(pulumi.StringPtrOutput)
}

// Details the service to which the subnet is delegated.
type Delegation struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a subnet. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the subnet.
	Properties *ServiceDelegationPropertiesFormat `pulumi:"properties"`
}

// DelegationInput is an input type that accepts DelegationArgs and DelegationOutput values.
// You can construct a concrete instance of `DelegationInput` via:
//
//          DelegationArgs{...}
type DelegationInput interface {
	pulumi.Input

	ToDelegationOutput() DelegationOutput
	ToDelegationOutputWithContext(context.Context) DelegationOutput
}

// Details the service to which the subnet is delegated.
type DelegationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a subnet. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the subnet.
	Properties ServiceDelegationPropertiesFormatPtrInput `pulumi:"properties"`
}

func (DelegationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Delegation)(nil)).Elem()
}

func (i DelegationArgs) ToDelegationOutput() DelegationOutput {
	return i.ToDelegationOutputWithContext(context.Background())
}

func (i DelegationArgs) ToDelegationOutputWithContext(ctx context.Context) DelegationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegationOutput)
}

// DelegationArrayInput is an input type that accepts DelegationArray and DelegationArrayOutput values.
// You can construct a concrete instance of `DelegationArrayInput` via:
//
//          DelegationArray{ DelegationArgs{...} }
type DelegationArrayInput interface {
	pulumi.Input

	ToDelegationArrayOutput() DelegationArrayOutput
	ToDelegationArrayOutputWithContext(context.Context) DelegationArrayOutput
}

type DelegationArray []DelegationInput

func (DelegationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Delegation)(nil)).Elem()
}

func (i DelegationArray) ToDelegationArrayOutput() DelegationArrayOutput {
	return i.ToDelegationArrayOutputWithContext(context.Background())
}

func (i DelegationArray) ToDelegationArrayOutputWithContext(ctx context.Context) DelegationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegationArrayOutput)
}

// Details the service to which the subnet is delegated.
type DelegationOutput struct{ *pulumi.OutputState }

func (DelegationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Delegation)(nil)).Elem()
}

func (o DelegationOutput) ToDelegationOutput() DelegationOutput {
	return o
}

func (o DelegationOutput) ToDelegationOutputWithContext(ctx context.Context) DelegationOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o DelegationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Delegation) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o DelegationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Delegation) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a subnet. This name can be used to access the resource.
func (o DelegationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Delegation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the subnet.
func (o DelegationOutput) Properties() ServiceDelegationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v Delegation) *ServiceDelegationPropertiesFormat { return v.Properties }).(ServiceDelegationPropertiesFormatPtrOutput)
}

type DelegationArrayOutput struct{ *pulumi.OutputState }

func (DelegationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Delegation)(nil)).Elem()
}

func (o DelegationArrayOutput) ToDelegationArrayOutput() DelegationArrayOutput {
	return o
}

func (o DelegationArrayOutput) ToDelegationArrayOutputWithContext(ctx context.Context) DelegationArrayOutput {
	return o
}

func (o DelegationArrayOutput) Index(i pulumi.IntInput) DelegationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Delegation {
		return vs[0].([]Delegation)[vs[1].(int)]
	}).(DelegationOutput)
}

// Details the service to which the subnet is delegated.
type DelegationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a subnet. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the subnet.
	Properties *ServiceDelegationPropertiesFormatResponse `pulumi:"properties"`
}

// DelegationResponseInput is an input type that accepts DelegationResponseArgs and DelegationResponseOutput values.
// You can construct a concrete instance of `DelegationResponseInput` via:
//
//          DelegationResponseArgs{...}
type DelegationResponseInput interface {
	pulumi.Input

	ToDelegationResponseOutput() DelegationResponseOutput
	ToDelegationResponseOutputWithContext(context.Context) DelegationResponseOutput
}

// Details the service to which the subnet is delegated.
type DelegationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a subnet. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the subnet.
	Properties ServiceDelegationPropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (DelegationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DelegationResponse)(nil)).Elem()
}

func (i DelegationResponseArgs) ToDelegationResponseOutput() DelegationResponseOutput {
	return i.ToDelegationResponseOutputWithContext(context.Background())
}

func (i DelegationResponseArgs) ToDelegationResponseOutputWithContext(ctx context.Context) DelegationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegationResponseOutput)
}

// DelegationResponseArrayInput is an input type that accepts DelegationResponseArray and DelegationResponseArrayOutput values.
// You can construct a concrete instance of `DelegationResponseArrayInput` via:
//
//          DelegationResponseArray{ DelegationResponseArgs{...} }
type DelegationResponseArrayInput interface {
	pulumi.Input

	ToDelegationResponseArrayOutput() DelegationResponseArrayOutput
	ToDelegationResponseArrayOutputWithContext(context.Context) DelegationResponseArrayOutput
}

type DelegationResponseArray []DelegationResponseInput

func (DelegationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DelegationResponse)(nil)).Elem()
}

func (i DelegationResponseArray) ToDelegationResponseArrayOutput() DelegationResponseArrayOutput {
	return i.ToDelegationResponseArrayOutputWithContext(context.Background())
}

func (i DelegationResponseArray) ToDelegationResponseArrayOutputWithContext(ctx context.Context) DelegationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegationResponseArrayOutput)
}

// Details the service to which the subnet is delegated.
type DelegationResponseOutput struct{ *pulumi.OutputState }

func (DelegationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DelegationResponse)(nil)).Elem()
}

func (o DelegationResponseOutput) ToDelegationResponseOutput() DelegationResponseOutput {
	return o
}

func (o DelegationResponseOutput) ToDelegationResponseOutputWithContext(ctx context.Context) DelegationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o DelegationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DelegationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o DelegationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DelegationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a subnet. This name can be used to access the resource.
func (o DelegationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DelegationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the subnet.
func (o DelegationResponseOutput) Properties() ServiceDelegationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v DelegationResponse) *ServiceDelegationPropertiesFormatResponse { return v.Properties }).(ServiceDelegationPropertiesFormatResponsePtrOutput)
}

type DelegationResponseArrayOutput struct{ *pulumi.OutputState }

func (DelegationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DelegationResponse)(nil)).Elem()
}

func (o DelegationResponseArrayOutput) ToDelegationResponseArrayOutput() DelegationResponseArrayOutput {
	return o
}

func (o DelegationResponseArrayOutput) ToDelegationResponseArrayOutputWithContext(ctx context.Context) DelegationResponseArrayOutput {
	return o
}

func (o DelegationResponseArrayOutput) Index(i pulumi.IntInput) DelegationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DelegationResponse {
		return vs[0].([]DelegationResponse)[vs[1].(int)]
	}).(DelegationResponseOutput)
}

// List of properties of the device.
type DeviceProperties struct {
	// Model of the device.
	DeviceModel *string `pulumi:"deviceModel"`
	// Name of the device Vendor.
	DeviceVendor *string `pulumi:"deviceVendor"`
	// Link speed.
	LinkSpeedInMbps *int `pulumi:"linkSpeedInMbps"`
}

// DevicePropertiesInput is an input type that accepts DevicePropertiesArgs and DevicePropertiesOutput values.
// You can construct a concrete instance of `DevicePropertiesInput` via:
//
//          DevicePropertiesArgs{...}
type DevicePropertiesInput interface {
	pulumi.Input

	ToDevicePropertiesOutput() DevicePropertiesOutput
	ToDevicePropertiesOutputWithContext(context.Context) DevicePropertiesOutput
}

// List of properties of the device.
type DevicePropertiesArgs struct {
	// Model of the device.
	DeviceModel pulumi.StringPtrInput `pulumi:"deviceModel"`
	// Name of the device Vendor.
	DeviceVendor pulumi.StringPtrInput `pulumi:"deviceVendor"`
	// Link speed.
	LinkSpeedInMbps pulumi.IntPtrInput `pulumi:"linkSpeedInMbps"`
}

func (DevicePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceProperties)(nil)).Elem()
}

func (i DevicePropertiesArgs) ToDevicePropertiesOutput() DevicePropertiesOutput {
	return i.ToDevicePropertiesOutputWithContext(context.Background())
}

func (i DevicePropertiesArgs) ToDevicePropertiesOutputWithContext(ctx context.Context) DevicePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePropertiesOutput)
}

func (i DevicePropertiesArgs) ToDevicePropertiesPtrOutput() DevicePropertiesPtrOutput {
	return i.ToDevicePropertiesPtrOutputWithContext(context.Background())
}

func (i DevicePropertiesArgs) ToDevicePropertiesPtrOutputWithContext(ctx context.Context) DevicePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePropertiesOutput).ToDevicePropertiesPtrOutputWithContext(ctx)
}

// DevicePropertiesPtrInput is an input type that accepts DevicePropertiesArgs, DevicePropertiesPtr and DevicePropertiesPtrOutput values.
// You can construct a concrete instance of `DevicePropertiesPtrInput` via:
//
//          DevicePropertiesArgs{...}
//
//  or:
//
//          nil
type DevicePropertiesPtrInput interface {
	pulumi.Input

	ToDevicePropertiesPtrOutput() DevicePropertiesPtrOutput
	ToDevicePropertiesPtrOutputWithContext(context.Context) DevicePropertiesPtrOutput
}

type devicePropertiesPtrType DevicePropertiesArgs

func DevicePropertiesPtr(v *DevicePropertiesArgs) DevicePropertiesPtrInput {
	return (*devicePropertiesPtrType)(v)
}

func (*devicePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceProperties)(nil)).Elem()
}

func (i *devicePropertiesPtrType) ToDevicePropertiesPtrOutput() DevicePropertiesPtrOutput {
	return i.ToDevicePropertiesPtrOutputWithContext(context.Background())
}

func (i *devicePropertiesPtrType) ToDevicePropertiesPtrOutputWithContext(ctx context.Context) DevicePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePropertiesPtrOutput)
}

// List of properties of the device.
type DevicePropertiesOutput struct{ *pulumi.OutputState }

func (DevicePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceProperties)(nil)).Elem()
}

func (o DevicePropertiesOutput) ToDevicePropertiesOutput() DevicePropertiesOutput {
	return o
}

func (o DevicePropertiesOutput) ToDevicePropertiesOutputWithContext(ctx context.Context) DevicePropertiesOutput {
	return o
}

func (o DevicePropertiesOutput) ToDevicePropertiesPtrOutput() DevicePropertiesPtrOutput {
	return o.ToDevicePropertiesPtrOutputWithContext(context.Background())
}

func (o DevicePropertiesOutput) ToDevicePropertiesPtrOutputWithContext(ctx context.Context) DevicePropertiesPtrOutput {
	return o.ApplyT(func(v DeviceProperties) *DeviceProperties {
		return &v
	}).(DevicePropertiesPtrOutput)
}

// Model of the device.
func (o DevicePropertiesOutput) DeviceModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceProperties) *string { return v.DeviceModel }).(pulumi.StringPtrOutput)
}

// Name of the device Vendor.
func (o DevicePropertiesOutput) DeviceVendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceProperties) *string { return v.DeviceVendor }).(pulumi.StringPtrOutput)
}

// Link speed.
func (o DevicePropertiesOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeviceProperties) *int { return v.LinkSpeedInMbps }).(pulumi.IntPtrOutput)
}

type DevicePropertiesPtrOutput struct{ *pulumi.OutputState }

func (DevicePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceProperties)(nil)).Elem()
}

func (o DevicePropertiesPtrOutput) ToDevicePropertiesPtrOutput() DevicePropertiesPtrOutput {
	return o
}

func (o DevicePropertiesPtrOutput) ToDevicePropertiesPtrOutputWithContext(ctx context.Context) DevicePropertiesPtrOutput {
	return o
}

func (o DevicePropertiesPtrOutput) Elem() DevicePropertiesOutput {
	return o.ApplyT(func(v *DeviceProperties) DeviceProperties { return *v }).(DevicePropertiesOutput)
}

// Model of the device.
func (o DevicePropertiesPtrOutput) DeviceModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeviceModel
	}).(pulumi.StringPtrOutput)
}

// Name of the device Vendor.
func (o DevicePropertiesPtrOutput) DeviceVendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeviceVendor
	}).(pulumi.StringPtrOutput)
}

// Link speed.
func (o DevicePropertiesPtrOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeviceProperties) *int {
		if v == nil {
			return nil
		}
		return v.LinkSpeedInMbps
	}).(pulumi.IntPtrOutput)
}

// List of properties of the device.
type DevicePropertiesResponse struct {
	// Model of the device.
	DeviceModel *string `pulumi:"deviceModel"`
	// Name of the device Vendor.
	DeviceVendor *string `pulumi:"deviceVendor"`
	// Link speed.
	LinkSpeedInMbps *int `pulumi:"linkSpeedInMbps"`
}

// DevicePropertiesResponseInput is an input type that accepts DevicePropertiesResponseArgs and DevicePropertiesResponseOutput values.
// You can construct a concrete instance of `DevicePropertiesResponseInput` via:
//
//          DevicePropertiesResponseArgs{...}
type DevicePropertiesResponseInput interface {
	pulumi.Input

	ToDevicePropertiesResponseOutput() DevicePropertiesResponseOutput
	ToDevicePropertiesResponseOutputWithContext(context.Context) DevicePropertiesResponseOutput
}

// List of properties of the device.
type DevicePropertiesResponseArgs struct {
	// Model of the device.
	DeviceModel pulumi.StringPtrInput `pulumi:"deviceModel"`
	// Name of the device Vendor.
	DeviceVendor pulumi.StringPtrInput `pulumi:"deviceVendor"`
	// Link speed.
	LinkSpeedInMbps pulumi.IntPtrInput `pulumi:"linkSpeedInMbps"`
}

func (DevicePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevicePropertiesResponse)(nil)).Elem()
}

func (i DevicePropertiesResponseArgs) ToDevicePropertiesResponseOutput() DevicePropertiesResponseOutput {
	return i.ToDevicePropertiesResponseOutputWithContext(context.Background())
}

func (i DevicePropertiesResponseArgs) ToDevicePropertiesResponseOutputWithContext(ctx context.Context) DevicePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePropertiesResponseOutput)
}

func (i DevicePropertiesResponseArgs) ToDevicePropertiesResponsePtrOutput() DevicePropertiesResponsePtrOutput {
	return i.ToDevicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i DevicePropertiesResponseArgs) ToDevicePropertiesResponsePtrOutputWithContext(ctx context.Context) DevicePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePropertiesResponseOutput).ToDevicePropertiesResponsePtrOutputWithContext(ctx)
}

// DevicePropertiesResponsePtrInput is an input type that accepts DevicePropertiesResponseArgs, DevicePropertiesResponsePtr and DevicePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `DevicePropertiesResponsePtrInput` via:
//
//          DevicePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type DevicePropertiesResponsePtrInput interface {
	pulumi.Input

	ToDevicePropertiesResponsePtrOutput() DevicePropertiesResponsePtrOutput
	ToDevicePropertiesResponsePtrOutputWithContext(context.Context) DevicePropertiesResponsePtrOutput
}

type devicePropertiesResponsePtrType DevicePropertiesResponseArgs

func DevicePropertiesResponsePtr(v *DevicePropertiesResponseArgs) DevicePropertiesResponsePtrInput {
	return (*devicePropertiesResponsePtrType)(v)
}

func (*devicePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DevicePropertiesResponse)(nil)).Elem()
}

func (i *devicePropertiesResponsePtrType) ToDevicePropertiesResponsePtrOutput() DevicePropertiesResponsePtrOutput {
	return i.ToDevicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *devicePropertiesResponsePtrType) ToDevicePropertiesResponsePtrOutputWithContext(ctx context.Context) DevicePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePropertiesResponsePtrOutput)
}

// List of properties of the device.
type DevicePropertiesResponseOutput struct{ *pulumi.OutputState }

func (DevicePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevicePropertiesResponse)(nil)).Elem()
}

func (o DevicePropertiesResponseOutput) ToDevicePropertiesResponseOutput() DevicePropertiesResponseOutput {
	return o
}

func (o DevicePropertiesResponseOutput) ToDevicePropertiesResponseOutputWithContext(ctx context.Context) DevicePropertiesResponseOutput {
	return o
}

func (o DevicePropertiesResponseOutput) ToDevicePropertiesResponsePtrOutput() DevicePropertiesResponsePtrOutput {
	return o.ToDevicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o DevicePropertiesResponseOutput) ToDevicePropertiesResponsePtrOutputWithContext(ctx context.Context) DevicePropertiesResponsePtrOutput {
	return o.ApplyT(func(v DevicePropertiesResponse) *DevicePropertiesResponse {
		return &v
	}).(DevicePropertiesResponsePtrOutput)
}

// Model of the device.
func (o DevicePropertiesResponseOutput) DeviceModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePropertiesResponse) *string { return v.DeviceModel }).(pulumi.StringPtrOutput)
}

// Name of the device Vendor.
func (o DevicePropertiesResponseOutput) DeviceVendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePropertiesResponse) *string { return v.DeviceVendor }).(pulumi.StringPtrOutput)
}

// Link speed.
func (o DevicePropertiesResponseOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DevicePropertiesResponse) *int { return v.LinkSpeedInMbps }).(pulumi.IntPtrOutput)
}

type DevicePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DevicePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevicePropertiesResponse)(nil)).Elem()
}

func (o DevicePropertiesResponsePtrOutput) ToDevicePropertiesResponsePtrOutput() DevicePropertiesResponsePtrOutput {
	return o
}

func (o DevicePropertiesResponsePtrOutput) ToDevicePropertiesResponsePtrOutputWithContext(ctx context.Context) DevicePropertiesResponsePtrOutput {
	return o
}

func (o DevicePropertiesResponsePtrOutput) Elem() DevicePropertiesResponseOutput {
	return o.ApplyT(func(v *DevicePropertiesResponse) DevicePropertiesResponse { return *v }).(DevicePropertiesResponseOutput)
}

// Model of the device.
func (o DevicePropertiesResponsePtrOutput) DeviceModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeviceModel
	}).(pulumi.StringPtrOutput)
}

// Name of the device Vendor.
func (o DevicePropertiesResponsePtrOutput) DeviceVendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeviceVendor
	}).(pulumi.StringPtrOutput)
}

// Link speed.
func (o DevicePropertiesResponsePtrOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DevicePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.LinkSpeedInMbps
	}).(pulumi.IntPtrOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptions struct {
	// The list of DNS servers IP addresses.
	DnsServers []string `pulumi:"dnsServers"`
}

// DhcpOptionsInput is an input type that accepts DhcpOptionsArgs and DhcpOptionsOutput values.
// You can construct a concrete instance of `DhcpOptionsInput` via:
//
//          DhcpOptionsArgs{...}
type DhcpOptionsInput interface {
	pulumi.Input

	ToDhcpOptionsOutput() DhcpOptionsOutput
	ToDhcpOptionsOutputWithContext(context.Context) DhcpOptionsOutput
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsArgs struct {
	// The list of DNS servers IP addresses.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
}

func (DhcpOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptions)(nil)).Elem()
}

func (i DhcpOptionsArgs) ToDhcpOptionsOutput() DhcpOptionsOutput {
	return i.ToDhcpOptionsOutputWithContext(context.Background())
}

func (i DhcpOptionsArgs) ToDhcpOptionsOutputWithContext(ctx context.Context) DhcpOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsOutput)
}

func (i DhcpOptionsArgs) ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput {
	return i.ToDhcpOptionsPtrOutputWithContext(context.Background())
}

func (i DhcpOptionsArgs) ToDhcpOptionsPtrOutputWithContext(ctx context.Context) DhcpOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsOutput).ToDhcpOptionsPtrOutputWithContext(ctx)
}

// DhcpOptionsPtrInput is an input type that accepts DhcpOptionsArgs, DhcpOptionsPtr and DhcpOptionsPtrOutput values.
// You can construct a concrete instance of `DhcpOptionsPtrInput` via:
//
//          DhcpOptionsArgs{...}
//
//  or:
//
//          nil
type DhcpOptionsPtrInput interface {
	pulumi.Input

	ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput
	ToDhcpOptionsPtrOutputWithContext(context.Context) DhcpOptionsPtrOutput
}

type dhcpOptionsPtrType DhcpOptionsArgs

func DhcpOptionsPtr(v *DhcpOptionsArgs) DhcpOptionsPtrInput {
	return (*dhcpOptionsPtrType)(v)
}

func (*dhcpOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpOptions)(nil)).Elem()
}

func (i *dhcpOptionsPtrType) ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput {
	return i.ToDhcpOptionsPtrOutputWithContext(context.Background())
}

func (i *dhcpOptionsPtrType) ToDhcpOptionsPtrOutputWithContext(ctx context.Context) DhcpOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsPtrOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsOutput struct{ *pulumi.OutputState }

func (DhcpOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptions)(nil)).Elem()
}

func (o DhcpOptionsOutput) ToDhcpOptionsOutput() DhcpOptionsOutput {
	return o
}

func (o DhcpOptionsOutput) ToDhcpOptionsOutputWithContext(ctx context.Context) DhcpOptionsOutput {
	return o
}

func (o DhcpOptionsOutput) ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput {
	return o.ToDhcpOptionsPtrOutputWithContext(context.Background())
}

func (o DhcpOptionsOutput) ToDhcpOptionsPtrOutputWithContext(ctx context.Context) DhcpOptionsPtrOutput {
	return o.ApplyT(func(v DhcpOptions) *DhcpOptions {
		return &v
	}).(DhcpOptionsPtrOutput)
}

// The list of DNS servers IP addresses.
func (o DhcpOptionsOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DhcpOptions) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

type DhcpOptionsPtrOutput struct{ *pulumi.OutputState }

func (DhcpOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpOptions)(nil)).Elem()
}

func (o DhcpOptionsPtrOutput) ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput {
	return o
}

func (o DhcpOptionsPtrOutput) ToDhcpOptionsPtrOutputWithContext(ctx context.Context) DhcpOptionsPtrOutput {
	return o
}

func (o DhcpOptionsPtrOutput) Elem() DhcpOptionsOutput {
	return o.ApplyT(func(v *DhcpOptions) DhcpOptions { return *v }).(DhcpOptionsOutput)
}

// The list of DNS servers IP addresses.
func (o DhcpOptionsPtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DhcpOptions) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsResponse struct {
	// The list of DNS servers IP addresses.
	DnsServers []string `pulumi:"dnsServers"`
}

// DhcpOptionsResponseInput is an input type that accepts DhcpOptionsResponseArgs and DhcpOptionsResponseOutput values.
// You can construct a concrete instance of `DhcpOptionsResponseInput` via:
//
//          DhcpOptionsResponseArgs{...}
type DhcpOptionsResponseInput interface {
	pulumi.Input

	ToDhcpOptionsResponseOutput() DhcpOptionsResponseOutput
	ToDhcpOptionsResponseOutputWithContext(context.Context) DhcpOptionsResponseOutput
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsResponseArgs struct {
	// The list of DNS servers IP addresses.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
}

func (DhcpOptionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptionsResponse)(nil)).Elem()
}

func (i DhcpOptionsResponseArgs) ToDhcpOptionsResponseOutput() DhcpOptionsResponseOutput {
	return i.ToDhcpOptionsResponseOutputWithContext(context.Background())
}

func (i DhcpOptionsResponseArgs) ToDhcpOptionsResponseOutputWithContext(ctx context.Context) DhcpOptionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsResponseOutput)
}

func (i DhcpOptionsResponseArgs) ToDhcpOptionsResponsePtrOutput() DhcpOptionsResponsePtrOutput {
	return i.ToDhcpOptionsResponsePtrOutputWithContext(context.Background())
}

func (i DhcpOptionsResponseArgs) ToDhcpOptionsResponsePtrOutputWithContext(ctx context.Context) DhcpOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsResponseOutput).ToDhcpOptionsResponsePtrOutputWithContext(ctx)
}

// DhcpOptionsResponsePtrInput is an input type that accepts DhcpOptionsResponseArgs, DhcpOptionsResponsePtr and DhcpOptionsResponsePtrOutput values.
// You can construct a concrete instance of `DhcpOptionsResponsePtrInput` via:
//
//          DhcpOptionsResponseArgs{...}
//
//  or:
//
//          nil
type DhcpOptionsResponsePtrInput interface {
	pulumi.Input

	ToDhcpOptionsResponsePtrOutput() DhcpOptionsResponsePtrOutput
	ToDhcpOptionsResponsePtrOutputWithContext(context.Context) DhcpOptionsResponsePtrOutput
}

type dhcpOptionsResponsePtrType DhcpOptionsResponseArgs

func DhcpOptionsResponsePtr(v *DhcpOptionsResponseArgs) DhcpOptionsResponsePtrInput {
	return (*dhcpOptionsResponsePtrType)(v)
}

func (*dhcpOptionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpOptionsResponse)(nil)).Elem()
}

func (i *dhcpOptionsResponsePtrType) ToDhcpOptionsResponsePtrOutput() DhcpOptionsResponsePtrOutput {
	return i.ToDhcpOptionsResponsePtrOutputWithContext(context.Background())
}

func (i *dhcpOptionsResponsePtrType) ToDhcpOptionsResponsePtrOutputWithContext(ctx context.Context) DhcpOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsResponsePtrOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsResponseOutput struct{ *pulumi.OutputState }

func (DhcpOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptionsResponse)(nil)).Elem()
}

func (o DhcpOptionsResponseOutput) ToDhcpOptionsResponseOutput() DhcpOptionsResponseOutput {
	return o
}

func (o DhcpOptionsResponseOutput) ToDhcpOptionsResponseOutputWithContext(ctx context.Context) DhcpOptionsResponseOutput {
	return o
}

func (o DhcpOptionsResponseOutput) ToDhcpOptionsResponsePtrOutput() DhcpOptionsResponsePtrOutput {
	return o.ToDhcpOptionsResponsePtrOutputWithContext(context.Background())
}

func (o DhcpOptionsResponseOutput) ToDhcpOptionsResponsePtrOutputWithContext(ctx context.Context) DhcpOptionsResponsePtrOutput {
	return o.ApplyT(func(v DhcpOptionsResponse) *DhcpOptionsResponse {
		return &v
	}).(DhcpOptionsResponsePtrOutput)
}

// The list of DNS servers IP addresses.
func (o DhcpOptionsResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DhcpOptionsResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

type DhcpOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (DhcpOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpOptionsResponse)(nil)).Elem()
}

func (o DhcpOptionsResponsePtrOutput) ToDhcpOptionsResponsePtrOutput() DhcpOptionsResponsePtrOutput {
	return o
}

func (o DhcpOptionsResponsePtrOutput) ToDhcpOptionsResponsePtrOutputWithContext(ctx context.Context) DhcpOptionsResponsePtrOutput {
	return o
}

func (o DhcpOptionsResponsePtrOutput) Elem() DhcpOptionsResponseOutput {
	return o.ApplyT(func(v *DhcpOptionsResponse) DhcpOptionsResponse { return *v }).(DhcpOptionsResponseOutput)
}

// The list of DNS servers IP addresses.
func (o DhcpOptionsResponsePtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DhcpOptionsResponse) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// Identifies the service being brought into the virtual network.
type EndpointService struct {
	// A unique identifier of the service being referenced by the interface endpoint.
	Id *string `pulumi:"id"`
}

// EndpointServiceInput is an input type that accepts EndpointServiceArgs and EndpointServiceOutput values.
// You can construct a concrete instance of `EndpointServiceInput` via:
//
//          EndpointServiceArgs{...}
type EndpointServiceInput interface {
	pulumi.Input

	ToEndpointServiceOutput() EndpointServiceOutput
	ToEndpointServiceOutputWithContext(context.Context) EndpointServiceOutput
}

// Identifies the service being brought into the virtual network.
type EndpointServiceArgs struct {
	// A unique identifier of the service being referenced by the interface endpoint.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (EndpointServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointService)(nil)).Elem()
}

func (i EndpointServiceArgs) ToEndpointServiceOutput() EndpointServiceOutput {
	return i.ToEndpointServiceOutputWithContext(context.Background())
}

func (i EndpointServiceArgs) ToEndpointServiceOutputWithContext(ctx context.Context) EndpointServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointServiceOutput)
}

func (i EndpointServiceArgs) ToEndpointServicePtrOutput() EndpointServicePtrOutput {
	return i.ToEndpointServicePtrOutputWithContext(context.Background())
}

func (i EndpointServiceArgs) ToEndpointServicePtrOutputWithContext(ctx context.Context) EndpointServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointServiceOutput).ToEndpointServicePtrOutputWithContext(ctx)
}

// EndpointServicePtrInput is an input type that accepts EndpointServiceArgs, EndpointServicePtr and EndpointServicePtrOutput values.
// You can construct a concrete instance of `EndpointServicePtrInput` via:
//
//          EndpointServiceArgs{...}
//
//  or:
//
//          nil
type EndpointServicePtrInput interface {
	pulumi.Input

	ToEndpointServicePtrOutput() EndpointServicePtrOutput
	ToEndpointServicePtrOutputWithContext(context.Context) EndpointServicePtrOutput
}

type endpointServicePtrType EndpointServiceArgs

func EndpointServicePtr(v *EndpointServiceArgs) EndpointServicePtrInput {
	return (*endpointServicePtrType)(v)
}

func (*endpointServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointService)(nil)).Elem()
}

func (i *endpointServicePtrType) ToEndpointServicePtrOutput() EndpointServicePtrOutput {
	return i.ToEndpointServicePtrOutputWithContext(context.Background())
}

func (i *endpointServicePtrType) ToEndpointServicePtrOutputWithContext(ctx context.Context) EndpointServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointServicePtrOutput)
}

// Identifies the service being brought into the virtual network.
type EndpointServiceOutput struct{ *pulumi.OutputState }

func (EndpointServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointService)(nil)).Elem()
}

func (o EndpointServiceOutput) ToEndpointServiceOutput() EndpointServiceOutput {
	return o
}

func (o EndpointServiceOutput) ToEndpointServiceOutputWithContext(ctx context.Context) EndpointServiceOutput {
	return o
}

func (o EndpointServiceOutput) ToEndpointServicePtrOutput() EndpointServicePtrOutput {
	return o.ToEndpointServicePtrOutputWithContext(context.Background())
}

func (o EndpointServiceOutput) ToEndpointServicePtrOutputWithContext(ctx context.Context) EndpointServicePtrOutput {
	return o.ApplyT(func(v EndpointService) *EndpointService {
		return &v
	}).(EndpointServicePtrOutput)
}

// A unique identifier of the service being referenced by the interface endpoint.
func (o EndpointServiceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointService) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type EndpointServicePtrOutput struct{ *pulumi.OutputState }

func (EndpointServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointService)(nil)).Elem()
}

func (o EndpointServicePtrOutput) ToEndpointServicePtrOutput() EndpointServicePtrOutput {
	return o
}

func (o EndpointServicePtrOutput) ToEndpointServicePtrOutputWithContext(ctx context.Context) EndpointServicePtrOutput {
	return o
}

func (o EndpointServicePtrOutput) Elem() EndpointServiceOutput {
	return o.ApplyT(func(v *EndpointService) EndpointService { return *v }).(EndpointServiceOutput)
}

// A unique identifier of the service being referenced by the interface endpoint.
func (o EndpointServicePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointService) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Identifies the service being brought into the virtual network.
type EndpointServiceResponse struct {
	// A unique identifier of the service being referenced by the interface endpoint.
	Id *string `pulumi:"id"`
}

// EndpointServiceResponseInput is an input type that accepts EndpointServiceResponseArgs and EndpointServiceResponseOutput values.
// You can construct a concrete instance of `EndpointServiceResponseInput` via:
//
//          EndpointServiceResponseArgs{...}
type EndpointServiceResponseInput interface {
	pulumi.Input

	ToEndpointServiceResponseOutput() EndpointServiceResponseOutput
	ToEndpointServiceResponseOutputWithContext(context.Context) EndpointServiceResponseOutput
}

// Identifies the service being brought into the virtual network.
type EndpointServiceResponseArgs struct {
	// A unique identifier of the service being referenced by the interface endpoint.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (EndpointServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointServiceResponse)(nil)).Elem()
}

func (i EndpointServiceResponseArgs) ToEndpointServiceResponseOutput() EndpointServiceResponseOutput {
	return i.ToEndpointServiceResponseOutputWithContext(context.Background())
}

func (i EndpointServiceResponseArgs) ToEndpointServiceResponseOutputWithContext(ctx context.Context) EndpointServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointServiceResponseOutput)
}

func (i EndpointServiceResponseArgs) ToEndpointServiceResponsePtrOutput() EndpointServiceResponsePtrOutput {
	return i.ToEndpointServiceResponsePtrOutputWithContext(context.Background())
}

func (i EndpointServiceResponseArgs) ToEndpointServiceResponsePtrOutputWithContext(ctx context.Context) EndpointServiceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointServiceResponseOutput).ToEndpointServiceResponsePtrOutputWithContext(ctx)
}

// EndpointServiceResponsePtrInput is an input type that accepts EndpointServiceResponseArgs, EndpointServiceResponsePtr and EndpointServiceResponsePtrOutput values.
// You can construct a concrete instance of `EndpointServiceResponsePtrInput` via:
//
//          EndpointServiceResponseArgs{...}
//
//  or:
//
//          nil
type EndpointServiceResponsePtrInput interface {
	pulumi.Input

	ToEndpointServiceResponsePtrOutput() EndpointServiceResponsePtrOutput
	ToEndpointServiceResponsePtrOutputWithContext(context.Context) EndpointServiceResponsePtrOutput
}

type endpointServiceResponsePtrType EndpointServiceResponseArgs

func EndpointServiceResponsePtr(v *EndpointServiceResponseArgs) EndpointServiceResponsePtrInput {
	return (*endpointServiceResponsePtrType)(v)
}

func (*endpointServiceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointServiceResponse)(nil)).Elem()
}

func (i *endpointServiceResponsePtrType) ToEndpointServiceResponsePtrOutput() EndpointServiceResponsePtrOutput {
	return i.ToEndpointServiceResponsePtrOutputWithContext(context.Background())
}

func (i *endpointServiceResponsePtrType) ToEndpointServiceResponsePtrOutputWithContext(ctx context.Context) EndpointServiceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointServiceResponsePtrOutput)
}

// Identifies the service being brought into the virtual network.
type EndpointServiceResponseOutput struct{ *pulumi.OutputState }

func (EndpointServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointServiceResponse)(nil)).Elem()
}

func (o EndpointServiceResponseOutput) ToEndpointServiceResponseOutput() EndpointServiceResponseOutput {
	return o
}

func (o EndpointServiceResponseOutput) ToEndpointServiceResponseOutputWithContext(ctx context.Context) EndpointServiceResponseOutput {
	return o
}

func (o EndpointServiceResponseOutput) ToEndpointServiceResponsePtrOutput() EndpointServiceResponsePtrOutput {
	return o.ToEndpointServiceResponsePtrOutputWithContext(context.Background())
}

func (o EndpointServiceResponseOutput) ToEndpointServiceResponsePtrOutputWithContext(ctx context.Context) EndpointServiceResponsePtrOutput {
	return o.ApplyT(func(v EndpointServiceResponse) *EndpointServiceResponse {
		return &v
	}).(EndpointServiceResponsePtrOutput)
}

// A unique identifier of the service being referenced by the interface endpoint.
func (o EndpointServiceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointServiceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type EndpointServiceResponsePtrOutput struct{ *pulumi.OutputState }

func (EndpointServiceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointServiceResponse)(nil)).Elem()
}

func (o EndpointServiceResponsePtrOutput) ToEndpointServiceResponsePtrOutput() EndpointServiceResponsePtrOutput {
	return o
}

func (o EndpointServiceResponsePtrOutput) ToEndpointServiceResponsePtrOutputWithContext(ctx context.Context) EndpointServiceResponsePtrOutput {
	return o
}

func (o EndpointServiceResponsePtrOutput) Elem() EndpointServiceResponseOutput {
	return o.ApplyT(func(v *EndpointServiceResponse) EndpointServiceResponse { return *v }).(EndpointServiceResponseOutput)
}

// A unique identifier of the service being referenced by the interface endpoint.
func (o EndpointServiceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointServiceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// ExpressRouteCircuit resource
type ExpressRouteCircuitType struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of ExpressRouteCircuit.
	Properties ExpressRouteCircuitPropertiesFormatResponse `pulumi:"properties"`
	// The SKU.
	Sku *ExpressRouteCircuitSkuResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// ExpressRouteCircuitTypeInput is an input type that accepts ExpressRouteCircuitTypeArgs and ExpressRouteCircuitTypeOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitTypeInput` via:
//
//          ExpressRouteCircuitTypeArgs{...}
type ExpressRouteCircuitTypeInput interface {
	pulumi.Input

	ToExpressRouteCircuitTypeOutput() ExpressRouteCircuitTypeOutput
	ToExpressRouteCircuitTypeOutputWithContext(context.Context) ExpressRouteCircuitTypeOutput
}

// ExpressRouteCircuit resource
type ExpressRouteCircuitTypeArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of ExpressRouteCircuit.
	Properties ExpressRouteCircuitPropertiesFormatResponseInput `pulumi:"properties"`
	// The SKU.
	Sku ExpressRouteCircuitSkuResponsePtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ExpressRouteCircuitTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitType)(nil)).Elem()
}

func (i ExpressRouteCircuitTypeArgs) ToExpressRouteCircuitTypeOutput() ExpressRouteCircuitTypeOutput {
	return i.ToExpressRouteCircuitTypeOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitTypeArgs) ToExpressRouteCircuitTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitTypeOutput)
}

// ExpressRouteCircuit resource
type ExpressRouteCircuitTypeOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitType)(nil)).Elem()
}

func (o ExpressRouteCircuitTypeOutput) ToExpressRouteCircuitTypeOutput() ExpressRouteCircuitTypeOutput {
	return o
}

func (o ExpressRouteCircuitTypeOutput) ToExpressRouteCircuitTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitTypeOutput {
	return o
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteCircuitTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitType) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource location.
func (o ExpressRouteCircuitTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o ExpressRouteCircuitTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of ExpressRouteCircuit.
func (o ExpressRouteCircuitTypeOutput) Properties() ExpressRouteCircuitPropertiesFormatResponseOutput {
	return o.ApplyT(func(v ExpressRouteCircuitType) ExpressRouteCircuitPropertiesFormatResponse { return v.Properties }).(ExpressRouteCircuitPropertiesFormatResponseOutput)
}

// The SKU.
func (o ExpressRouteCircuitTypeOutput) Sku() ExpressRouteCircuitSkuResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitType) *ExpressRouteCircuitSkuResponse { return v.Sku }).(ExpressRouteCircuitSkuResponsePtrOutput)
}

// Resource tags.
func (o ExpressRouteCircuitTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ExpressRouteCircuitType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o ExpressRouteCircuitTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitType) string { return v.Type }).(pulumi.StringOutput)
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name       *string                               `pulumi:"name"`
	Properties AuthorizationPropertiesFormatResponse `pulumi:"properties"`
}

// ExpressRouteCircuitAuthorizationTypeInput is an input type that accepts ExpressRouteCircuitAuthorizationTypeArgs and ExpressRouteCircuitAuthorizationTypeOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitAuthorizationTypeInput` via:
//
//          ExpressRouteCircuitAuthorizationTypeArgs{...}
type ExpressRouteCircuitAuthorizationTypeInput interface {
	pulumi.Input

	ToExpressRouteCircuitAuthorizationTypeOutput() ExpressRouteCircuitAuthorizationTypeOutput
	ToExpressRouteCircuitAuthorizationTypeOutputWithContext(context.Context) ExpressRouteCircuitAuthorizationTypeOutput
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name       pulumi.StringPtrInput                      `pulumi:"name"`
	Properties AuthorizationPropertiesFormatResponseInput `pulumi:"properties"`
}

func (ExpressRouteCircuitAuthorizationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitAuthorizationType)(nil)).Elem()
}

func (i ExpressRouteCircuitAuthorizationTypeArgs) ToExpressRouteCircuitAuthorizationTypeOutput() ExpressRouteCircuitAuthorizationTypeOutput {
	return i.ToExpressRouteCircuitAuthorizationTypeOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitAuthorizationTypeArgs) ToExpressRouteCircuitAuthorizationTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitAuthorizationTypeOutput)
}

// ExpressRouteCircuitAuthorizationTypeArrayInput is an input type that accepts ExpressRouteCircuitAuthorizationTypeArray and ExpressRouteCircuitAuthorizationTypeArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitAuthorizationTypeArrayInput` via:
//
//          ExpressRouteCircuitAuthorizationTypeArray{ ExpressRouteCircuitAuthorizationTypeArgs{...} }
type ExpressRouteCircuitAuthorizationTypeArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitAuthorizationTypeArrayOutput() ExpressRouteCircuitAuthorizationTypeArrayOutput
	ToExpressRouteCircuitAuthorizationTypeArrayOutputWithContext(context.Context) ExpressRouteCircuitAuthorizationTypeArrayOutput
}

type ExpressRouteCircuitAuthorizationTypeArray []ExpressRouteCircuitAuthorizationTypeInput

func (ExpressRouteCircuitAuthorizationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitAuthorizationType)(nil)).Elem()
}

func (i ExpressRouteCircuitAuthorizationTypeArray) ToExpressRouteCircuitAuthorizationTypeArrayOutput() ExpressRouteCircuitAuthorizationTypeArrayOutput {
	return i.ToExpressRouteCircuitAuthorizationTypeArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitAuthorizationTypeArray) ToExpressRouteCircuitAuthorizationTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitAuthorizationTypeArrayOutput)
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationTypeOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitAuthorizationType)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationTypeOutput) ToExpressRouteCircuitAuthorizationTypeOutput() ExpressRouteCircuitAuthorizationTypeOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationTypeOutput) ToExpressRouteCircuitAuthorizationTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationTypeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteCircuitAuthorizationTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationType) string { return v.Etag }).(pulumi.StringOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitAuthorizationTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ExpressRouteCircuitAuthorizationTypeOutput) Properties() AuthorizationPropertiesFormatResponseOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationType) AuthorizationPropertiesFormatResponse {
		return v.Properties
	}).(AuthorizationPropertiesFormatResponseOutput)
}

type ExpressRouteCircuitAuthorizationTypeArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitAuthorizationType)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationTypeArrayOutput) ToExpressRouteCircuitAuthorizationTypeArrayOutput() ExpressRouteCircuitAuthorizationTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationTypeArrayOutput) ToExpressRouteCircuitAuthorizationTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationTypeArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitAuthorizationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitAuthorizationType {
		return vs[0].([]ExpressRouteCircuitAuthorizationType)[vs[1].(int)]
	}).(ExpressRouteCircuitAuthorizationTypeOutput)
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name       *string                                `pulumi:"name"`
	Properties *AuthorizationPropertiesFormatResponse `pulumi:"properties"`
}

// ExpressRouteCircuitAuthorizationResponseInput is an input type that accepts ExpressRouteCircuitAuthorizationResponseArgs and ExpressRouteCircuitAuthorizationResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitAuthorizationResponseInput` via:
//
//          ExpressRouteCircuitAuthorizationResponseArgs{...}
type ExpressRouteCircuitAuthorizationResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitAuthorizationResponseOutput() ExpressRouteCircuitAuthorizationResponseOutput
	ToExpressRouteCircuitAuthorizationResponseOutputWithContext(context.Context) ExpressRouteCircuitAuthorizationResponseOutput
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name       pulumi.StringPtrInput                         `pulumi:"name"`
	Properties AuthorizationPropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (ExpressRouteCircuitAuthorizationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitAuthorizationResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitAuthorizationResponseArgs) ToExpressRouteCircuitAuthorizationResponseOutput() ExpressRouteCircuitAuthorizationResponseOutput {
	return i.ToExpressRouteCircuitAuthorizationResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitAuthorizationResponseArgs) ToExpressRouteCircuitAuthorizationResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitAuthorizationResponseOutput)
}

// ExpressRouteCircuitAuthorizationResponseArrayInput is an input type that accepts ExpressRouteCircuitAuthorizationResponseArray and ExpressRouteCircuitAuthorizationResponseArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitAuthorizationResponseArrayInput` via:
//
//          ExpressRouteCircuitAuthorizationResponseArray{ ExpressRouteCircuitAuthorizationResponseArgs{...} }
type ExpressRouteCircuitAuthorizationResponseArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitAuthorizationResponseArrayOutput() ExpressRouteCircuitAuthorizationResponseArrayOutput
	ToExpressRouteCircuitAuthorizationResponseArrayOutputWithContext(context.Context) ExpressRouteCircuitAuthorizationResponseArrayOutput
}

type ExpressRouteCircuitAuthorizationResponseArray []ExpressRouteCircuitAuthorizationResponseInput

func (ExpressRouteCircuitAuthorizationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitAuthorizationResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitAuthorizationResponseArray) ToExpressRouteCircuitAuthorizationResponseArrayOutput() ExpressRouteCircuitAuthorizationResponseArrayOutput {
	return i.ToExpressRouteCircuitAuthorizationResponseArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitAuthorizationResponseArray) ToExpressRouteCircuitAuthorizationResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitAuthorizationResponseArrayOutput)
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitAuthorizationResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationResponseOutput) ToExpressRouteCircuitAuthorizationResponseOutput() ExpressRouteCircuitAuthorizationResponseOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationResponseOutput) ToExpressRouteCircuitAuthorizationResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteCircuitAuthorizationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ExpressRouteCircuitAuthorizationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitAuthorizationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ExpressRouteCircuitAuthorizationResponseOutput) Properties() AuthorizationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) *AuthorizationPropertiesFormatResponse {
		return v.Properties
	}).(AuthorizationPropertiesFormatResponsePtrOutput)
}

type ExpressRouteCircuitAuthorizationResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitAuthorizationResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationResponseArrayOutput) ToExpressRouteCircuitAuthorizationResponseArrayOutput() ExpressRouteCircuitAuthorizationResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationResponseArrayOutput) ToExpressRouteCircuitAuthorizationResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitAuthorizationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitAuthorizationResponse {
		return vs[0].([]ExpressRouteCircuitAuthorizationResponse)[vs[1].(int)]
	}).(ExpressRouteCircuitAuthorizationResponseOutput)
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionType struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name       *string                                        `pulumi:"name"`
	Properties *ExpressRouteCircuitConnectionPropertiesFormat `pulumi:"properties"`
}

// ExpressRouteCircuitConnectionTypeInput is an input type that accepts ExpressRouteCircuitConnectionTypeArgs and ExpressRouteCircuitConnectionTypeOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitConnectionTypeInput` via:
//
//          ExpressRouteCircuitConnectionTypeArgs{...}
type ExpressRouteCircuitConnectionTypeInput interface {
	pulumi.Input

	ToExpressRouteCircuitConnectionTypeOutput() ExpressRouteCircuitConnectionTypeOutput
	ToExpressRouteCircuitConnectionTypeOutputWithContext(context.Context) ExpressRouteCircuitConnectionTypeOutput
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionTypeArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name       pulumi.StringPtrInput                                 `pulumi:"name"`
	Properties ExpressRouteCircuitConnectionPropertiesFormatPtrInput `pulumi:"properties"`
}

func (ExpressRouteCircuitConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitConnectionType)(nil)).Elem()
}

func (i ExpressRouteCircuitConnectionTypeArgs) ToExpressRouteCircuitConnectionTypeOutput() ExpressRouteCircuitConnectionTypeOutput {
	return i.ToExpressRouteCircuitConnectionTypeOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitConnectionTypeArgs) ToExpressRouteCircuitConnectionTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitConnectionTypeOutput)
}

// ExpressRouteCircuitConnectionTypeArrayInput is an input type that accepts ExpressRouteCircuitConnectionTypeArray and ExpressRouteCircuitConnectionTypeArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitConnectionTypeArrayInput` via:
//
//          ExpressRouteCircuitConnectionTypeArray{ ExpressRouteCircuitConnectionTypeArgs{...} }
type ExpressRouteCircuitConnectionTypeArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitConnectionTypeArrayOutput() ExpressRouteCircuitConnectionTypeArrayOutput
	ToExpressRouteCircuitConnectionTypeArrayOutputWithContext(context.Context) ExpressRouteCircuitConnectionTypeArrayOutput
}

type ExpressRouteCircuitConnectionTypeArray []ExpressRouteCircuitConnectionTypeInput

func (ExpressRouteCircuitConnectionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitConnectionType)(nil)).Elem()
}

func (i ExpressRouteCircuitConnectionTypeArray) ToExpressRouteCircuitConnectionTypeArrayOutput() ExpressRouteCircuitConnectionTypeArrayOutput {
	return i.ToExpressRouteCircuitConnectionTypeArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitConnectionTypeArray) ToExpressRouteCircuitConnectionTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitConnectionTypeArrayOutput)
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionTypeOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitConnectionType)(nil)).Elem()
}

func (o ExpressRouteCircuitConnectionTypeOutput) ToExpressRouteCircuitConnectionTypeOutput() ExpressRouteCircuitConnectionTypeOutput {
	return o
}

func (o ExpressRouteCircuitConnectionTypeOutput) ToExpressRouteCircuitConnectionTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionTypeOutput {
	return o
}

// Resource ID.
func (o ExpressRouteCircuitConnectionTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitConnectionTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ExpressRouteCircuitConnectionTypeOutput) Properties() ExpressRouteCircuitConnectionPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *ExpressRouteCircuitConnectionPropertiesFormat {
		return v.Properties
	}).(ExpressRouteCircuitConnectionPropertiesFormatPtrOutput)
}

type ExpressRouteCircuitConnectionTypeArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitConnectionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitConnectionType)(nil)).Elem()
}

func (o ExpressRouteCircuitConnectionTypeArrayOutput) ToExpressRouteCircuitConnectionTypeArrayOutput() ExpressRouteCircuitConnectionTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitConnectionTypeArrayOutput) ToExpressRouteCircuitConnectionTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitConnectionTypeArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitConnectionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitConnectionType {
		return vs[0].([]ExpressRouteCircuitConnectionType)[vs[1].(int)]
	}).(ExpressRouteCircuitConnectionTypeOutput)
}

type ExpressRouteCircuitConnectionPropertiesFormat struct {
	// /29 IP address space to carve out Customer addresses for tunnels.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// The authorization key.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
	ExpressRouteCircuitPeering *SubResource `pulumi:"expressRouteCircuitPeering"`
	// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
	PeerExpressRouteCircuitPeering *SubResource `pulumi:"peerExpressRouteCircuitPeering"`
}

// ExpressRouteCircuitConnectionPropertiesFormatInput is an input type that accepts ExpressRouteCircuitConnectionPropertiesFormatArgs and ExpressRouteCircuitConnectionPropertiesFormatOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitConnectionPropertiesFormatInput` via:
//
//          ExpressRouteCircuitConnectionPropertiesFormatArgs{...}
type ExpressRouteCircuitConnectionPropertiesFormatInput interface {
	pulumi.Input

	ToExpressRouteCircuitConnectionPropertiesFormatOutput() ExpressRouteCircuitConnectionPropertiesFormatOutput
	ToExpressRouteCircuitConnectionPropertiesFormatOutputWithContext(context.Context) ExpressRouteCircuitConnectionPropertiesFormatOutput
}

type ExpressRouteCircuitConnectionPropertiesFormatArgs struct {
	// /29 IP address space to carve out Customer addresses for tunnels.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// The authorization key.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
	ExpressRouteCircuitPeering SubResourcePtrInput `pulumi:"expressRouteCircuitPeering"`
	// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
	PeerExpressRouteCircuitPeering SubResourcePtrInput `pulumi:"peerExpressRouteCircuitPeering"`
}

func (ExpressRouteCircuitConnectionPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitConnectionPropertiesFormat)(nil)).Elem()
}

func (i ExpressRouteCircuitConnectionPropertiesFormatArgs) ToExpressRouteCircuitConnectionPropertiesFormatOutput() ExpressRouteCircuitConnectionPropertiesFormatOutput {
	return i.ToExpressRouteCircuitConnectionPropertiesFormatOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitConnectionPropertiesFormatArgs) ToExpressRouteCircuitConnectionPropertiesFormatOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitConnectionPropertiesFormatOutput)
}

func (i ExpressRouteCircuitConnectionPropertiesFormatArgs) ToExpressRouteCircuitConnectionPropertiesFormatPtrOutput() ExpressRouteCircuitConnectionPropertiesFormatPtrOutput {
	return i.ToExpressRouteCircuitConnectionPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitConnectionPropertiesFormatArgs) ToExpressRouteCircuitConnectionPropertiesFormatPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitConnectionPropertiesFormatOutput).ToExpressRouteCircuitConnectionPropertiesFormatPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitConnectionPropertiesFormatPtrInput is an input type that accepts ExpressRouteCircuitConnectionPropertiesFormatArgs, ExpressRouteCircuitConnectionPropertiesFormatPtr and ExpressRouteCircuitConnectionPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitConnectionPropertiesFormatPtrInput` via:
//
//          ExpressRouteCircuitConnectionPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitConnectionPropertiesFormatPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitConnectionPropertiesFormatPtrOutput() ExpressRouteCircuitConnectionPropertiesFormatPtrOutput
	ToExpressRouteCircuitConnectionPropertiesFormatPtrOutputWithContext(context.Context) ExpressRouteCircuitConnectionPropertiesFormatPtrOutput
}

type expressRouteCircuitConnectionPropertiesFormatPtrType ExpressRouteCircuitConnectionPropertiesFormatArgs

func ExpressRouteCircuitConnectionPropertiesFormatPtr(v *ExpressRouteCircuitConnectionPropertiesFormatArgs) ExpressRouteCircuitConnectionPropertiesFormatPtrInput {
	return (*expressRouteCircuitConnectionPropertiesFormatPtrType)(v)
}

func (*expressRouteCircuitConnectionPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitConnectionPropertiesFormat)(nil)).Elem()
}

func (i *expressRouteCircuitConnectionPropertiesFormatPtrType) ToExpressRouteCircuitConnectionPropertiesFormatPtrOutput() ExpressRouteCircuitConnectionPropertiesFormatPtrOutput {
	return i.ToExpressRouteCircuitConnectionPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitConnectionPropertiesFormatPtrType) ToExpressRouteCircuitConnectionPropertiesFormatPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitConnectionPropertiesFormatPtrOutput)
}

type ExpressRouteCircuitConnectionPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitConnectionPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitConnectionPropertiesFormat)(nil)).Elem()
}

func (o ExpressRouteCircuitConnectionPropertiesFormatOutput) ToExpressRouteCircuitConnectionPropertiesFormatOutput() ExpressRouteCircuitConnectionPropertiesFormatOutput {
	return o
}

func (o ExpressRouteCircuitConnectionPropertiesFormatOutput) ToExpressRouteCircuitConnectionPropertiesFormatOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionPropertiesFormatOutput {
	return o
}

func (o ExpressRouteCircuitConnectionPropertiesFormatOutput) ToExpressRouteCircuitConnectionPropertiesFormatPtrOutput() ExpressRouteCircuitConnectionPropertiesFormatPtrOutput {
	return o.ToExpressRouteCircuitConnectionPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitConnectionPropertiesFormatOutput) ToExpressRouteCircuitConnectionPropertiesFormatPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionPropertiesFormat) *ExpressRouteCircuitConnectionPropertiesFormat {
		return &v
	}).(ExpressRouteCircuitConnectionPropertiesFormatPtrOutput)
}

// /29 IP address space to carve out Customer addresses for tunnels.
func (o ExpressRouteCircuitConnectionPropertiesFormatOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionPropertiesFormat) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// The authorization key.
func (o ExpressRouteCircuitConnectionPropertiesFormatOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionPropertiesFormat) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
func (o ExpressRouteCircuitConnectionPropertiesFormatOutput) ExpressRouteCircuitPeering() SubResourcePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionPropertiesFormat) *SubResource {
		return v.ExpressRouteCircuitPeering
	}).(SubResourcePtrOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
func (o ExpressRouteCircuitConnectionPropertiesFormatOutput) PeerExpressRouteCircuitPeering() SubResourcePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionPropertiesFormat) *SubResource {
		return v.PeerExpressRouteCircuitPeering
	}).(SubResourcePtrOutput)
}

type ExpressRouteCircuitConnectionPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitConnectionPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitConnectionPropertiesFormat)(nil)).Elem()
}

func (o ExpressRouteCircuitConnectionPropertiesFormatPtrOutput) ToExpressRouteCircuitConnectionPropertiesFormatPtrOutput() ExpressRouteCircuitConnectionPropertiesFormatPtrOutput {
	return o
}

func (o ExpressRouteCircuitConnectionPropertiesFormatPtrOutput) ToExpressRouteCircuitConnectionPropertiesFormatPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionPropertiesFormatPtrOutput {
	return o
}

func (o ExpressRouteCircuitConnectionPropertiesFormatPtrOutput) Elem() ExpressRouteCircuitConnectionPropertiesFormatOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitConnectionPropertiesFormat) ExpressRouteCircuitConnectionPropertiesFormat {
		return *v
	}).(ExpressRouteCircuitConnectionPropertiesFormatOutput)
}

// /29 IP address space to carve out Customer addresses for tunnels.
func (o ExpressRouteCircuitConnectionPropertiesFormatPtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitConnectionPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The authorization key.
func (o ExpressRouteCircuitConnectionPropertiesFormatPtrOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitConnectionPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationKey
	}).(pulumi.StringPtrOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
func (o ExpressRouteCircuitConnectionPropertiesFormatPtrOutput) ExpressRouteCircuitPeering() SubResourcePtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitConnectionPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.ExpressRouteCircuitPeering
	}).(SubResourcePtrOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
func (o ExpressRouteCircuitConnectionPropertiesFormatPtrOutput) PeerExpressRouteCircuitPeering() SubResourcePtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitConnectionPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.PeerExpressRouteCircuitPeering
	}).(SubResourcePtrOutput)
}

type ExpressRouteCircuitConnectionPropertiesFormatResponse struct {
	// /29 IP address space to carve out Customer addresses for tunnels.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// The authorization key.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// Express Route Circuit Connection State. Possible values are: 'Connected' and 'Disconnected'.
	CircuitConnectionStatus string `pulumi:"circuitConnectionStatus"`
	// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
	ExpressRouteCircuitPeering *SubResourceResponse `pulumi:"expressRouteCircuitPeering"`
	// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
	PeerExpressRouteCircuitPeering *SubResourceResponse `pulumi:"peerExpressRouteCircuitPeering"`
	// Provisioning state of the circuit connection resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
}

// ExpressRouteCircuitConnectionPropertiesFormatResponseInput is an input type that accepts ExpressRouteCircuitConnectionPropertiesFormatResponseArgs and ExpressRouteCircuitConnectionPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitConnectionPropertiesFormatResponseInput` via:
//
//          ExpressRouteCircuitConnectionPropertiesFormatResponseArgs{...}
type ExpressRouteCircuitConnectionPropertiesFormatResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitConnectionPropertiesFormatResponseOutput() ExpressRouteCircuitConnectionPropertiesFormatResponseOutput
	ToExpressRouteCircuitConnectionPropertiesFormatResponseOutputWithContext(context.Context) ExpressRouteCircuitConnectionPropertiesFormatResponseOutput
}

type ExpressRouteCircuitConnectionPropertiesFormatResponseArgs struct {
	// /29 IP address space to carve out Customer addresses for tunnels.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// The authorization key.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// Express Route Circuit Connection State. Possible values are: 'Connected' and 'Disconnected'.
	CircuitConnectionStatus pulumi.StringInput `pulumi:"circuitConnectionStatus"`
	// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
	ExpressRouteCircuitPeering SubResourceResponsePtrInput `pulumi:"expressRouteCircuitPeering"`
	// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
	PeerExpressRouteCircuitPeering SubResourceResponsePtrInput `pulumi:"peerExpressRouteCircuitPeering"`
	// Provisioning state of the circuit connection resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (ExpressRouteCircuitConnectionPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitConnectionPropertiesFormatResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitConnectionPropertiesFormatResponseArgs) ToExpressRouteCircuitConnectionPropertiesFormatResponseOutput() ExpressRouteCircuitConnectionPropertiesFormatResponseOutput {
	return i.ToExpressRouteCircuitConnectionPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitConnectionPropertiesFormatResponseArgs) ToExpressRouteCircuitConnectionPropertiesFormatResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitConnectionPropertiesFormatResponseOutput)
}

func (i ExpressRouteCircuitConnectionPropertiesFormatResponseArgs) ToExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput() ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput {
	return i.ToExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitConnectionPropertiesFormatResponseArgs) ToExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitConnectionPropertiesFormatResponseOutput).ToExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitConnectionPropertiesFormatResponsePtrInput is an input type that accepts ExpressRouteCircuitConnectionPropertiesFormatResponseArgs, ExpressRouteCircuitConnectionPropertiesFormatResponsePtr and ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitConnectionPropertiesFormatResponsePtrInput` via:
//
//          ExpressRouteCircuitConnectionPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitConnectionPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput() ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput
	ToExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput
}

type expressRouteCircuitConnectionPropertiesFormatResponsePtrType ExpressRouteCircuitConnectionPropertiesFormatResponseArgs

func ExpressRouteCircuitConnectionPropertiesFormatResponsePtr(v *ExpressRouteCircuitConnectionPropertiesFormatResponseArgs) ExpressRouteCircuitConnectionPropertiesFormatResponsePtrInput {
	return (*expressRouteCircuitConnectionPropertiesFormatResponsePtrType)(v)
}

func (*expressRouteCircuitConnectionPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitConnectionPropertiesFormatResponse)(nil)).Elem()
}

func (i *expressRouteCircuitConnectionPropertiesFormatResponsePtrType) ToExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput() ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput {
	return i.ToExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitConnectionPropertiesFormatResponsePtrType) ToExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput)
}

type ExpressRouteCircuitConnectionPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitConnectionPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitConnectionPropertiesFormatResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitConnectionPropertiesFormatResponseOutput) ToExpressRouteCircuitConnectionPropertiesFormatResponseOutput() ExpressRouteCircuitConnectionPropertiesFormatResponseOutput {
	return o
}

func (o ExpressRouteCircuitConnectionPropertiesFormatResponseOutput) ToExpressRouteCircuitConnectionPropertiesFormatResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionPropertiesFormatResponseOutput {
	return o
}

func (o ExpressRouteCircuitConnectionPropertiesFormatResponseOutput) ToExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput() ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput {
	return o.ToExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitConnectionPropertiesFormatResponseOutput) ToExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionPropertiesFormatResponse) *ExpressRouteCircuitConnectionPropertiesFormatResponse {
		return &v
	}).(ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput)
}

// /29 IP address space to carve out Customer addresses for tunnels.
func (o ExpressRouteCircuitConnectionPropertiesFormatResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionPropertiesFormatResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// The authorization key.
func (o ExpressRouteCircuitConnectionPropertiesFormatResponseOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionPropertiesFormatResponse) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// Express Route Circuit Connection State. Possible values are: 'Connected' and 'Disconnected'.
func (o ExpressRouteCircuitConnectionPropertiesFormatResponseOutput) CircuitConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionPropertiesFormatResponse) string { return v.CircuitConnectionStatus }).(pulumi.StringOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
func (o ExpressRouteCircuitConnectionPropertiesFormatResponseOutput) ExpressRouteCircuitPeering() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionPropertiesFormatResponse) *SubResourceResponse {
		return v.ExpressRouteCircuitPeering
	}).(SubResourceResponsePtrOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
func (o ExpressRouteCircuitConnectionPropertiesFormatResponseOutput) PeerExpressRouteCircuitPeering() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionPropertiesFormatResponse) *SubResourceResponse {
		return v.PeerExpressRouteCircuitPeering
	}).(SubResourceResponsePtrOutput)
}

// Provisioning state of the circuit connection resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCircuitConnectionPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitConnectionPropertiesFormatResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput) ToExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput() ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput) ToExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput) Elem() ExpressRouteCircuitConnectionPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitConnectionPropertiesFormatResponse) ExpressRouteCircuitConnectionPropertiesFormatResponse {
		return *v
	}).(ExpressRouteCircuitConnectionPropertiesFormatResponseOutput)
}

// /29 IP address space to carve out Customer addresses for tunnels.
func (o ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitConnectionPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The authorization key.
func (o ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitConnectionPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationKey
	}).(pulumi.StringPtrOutput)
}

// Express Route Circuit Connection State. Possible values are: 'Connected' and 'Disconnected'.
func (o ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput) CircuitConnectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitConnectionPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CircuitConnectionStatus
	}).(pulumi.StringPtrOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
func (o ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput) ExpressRouteCircuitPeering() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitConnectionPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.ExpressRouteCircuitPeering
	}).(SubResourceResponsePtrOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
func (o ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput) PeerExpressRouteCircuitPeering() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitConnectionPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PeerExpressRouteCircuitPeering
	}).(SubResourceResponsePtrOutput)
}

// Provisioning state of the circuit connection resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitConnectionPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name       *string                                                `pulumi:"name"`
	Properties *ExpressRouteCircuitConnectionPropertiesFormatResponse `pulumi:"properties"`
}

// ExpressRouteCircuitConnectionResponseInput is an input type that accepts ExpressRouteCircuitConnectionResponseArgs and ExpressRouteCircuitConnectionResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitConnectionResponseInput` via:
//
//          ExpressRouteCircuitConnectionResponseArgs{...}
type ExpressRouteCircuitConnectionResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitConnectionResponseOutput() ExpressRouteCircuitConnectionResponseOutput
	ToExpressRouteCircuitConnectionResponseOutputWithContext(context.Context) ExpressRouteCircuitConnectionResponseOutput
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name       pulumi.StringPtrInput                                         `pulumi:"name"`
	Properties ExpressRouteCircuitConnectionPropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (ExpressRouteCircuitConnectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitConnectionResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitConnectionResponseArgs) ToExpressRouteCircuitConnectionResponseOutput() ExpressRouteCircuitConnectionResponseOutput {
	return i.ToExpressRouteCircuitConnectionResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitConnectionResponseArgs) ToExpressRouteCircuitConnectionResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitConnectionResponseOutput)
}

// ExpressRouteCircuitConnectionResponseArrayInput is an input type that accepts ExpressRouteCircuitConnectionResponseArray and ExpressRouteCircuitConnectionResponseArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitConnectionResponseArrayInput` via:
//
//          ExpressRouteCircuitConnectionResponseArray{ ExpressRouteCircuitConnectionResponseArgs{...} }
type ExpressRouteCircuitConnectionResponseArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitConnectionResponseArrayOutput() ExpressRouteCircuitConnectionResponseArrayOutput
	ToExpressRouteCircuitConnectionResponseArrayOutputWithContext(context.Context) ExpressRouteCircuitConnectionResponseArrayOutput
}

type ExpressRouteCircuitConnectionResponseArray []ExpressRouteCircuitConnectionResponseInput

func (ExpressRouteCircuitConnectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitConnectionResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitConnectionResponseArray) ToExpressRouteCircuitConnectionResponseArrayOutput() ExpressRouteCircuitConnectionResponseArrayOutput {
	return i.ToExpressRouteCircuitConnectionResponseArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitConnectionResponseArray) ToExpressRouteCircuitConnectionResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitConnectionResponseArrayOutput)
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitConnectionResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitConnectionResponseOutput) ToExpressRouteCircuitConnectionResponseOutput() ExpressRouteCircuitConnectionResponseOutput {
	return o
}

func (o ExpressRouteCircuitConnectionResponseOutput) ToExpressRouteCircuitConnectionResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteCircuitConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ExpressRouteCircuitConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ExpressRouteCircuitConnectionResponseOutput) Properties() ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *ExpressRouteCircuitConnectionPropertiesFormatResponse {
		return v.Properties
	}).(ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput)
}

type ExpressRouteCircuitConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitConnectionResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitConnectionResponseArrayOutput) ToExpressRouteCircuitConnectionResponseArrayOutput() ExpressRouteCircuitConnectionResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitConnectionResponseArrayOutput) ToExpressRouteCircuitConnectionResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitConnectionResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitConnectionResponse {
		return vs[0].([]ExpressRouteCircuitConnectionResponse)[vs[1].(int)]
	}).(ExpressRouteCircuitConnectionResponseOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringType struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name       *string                                     `pulumi:"name"`
	Properties *ExpressRouteCircuitPeeringPropertiesFormat `pulumi:"properties"`
}

// ExpressRouteCircuitPeeringTypeInput is an input type that accepts ExpressRouteCircuitPeeringTypeArgs and ExpressRouteCircuitPeeringTypeOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringTypeInput` via:
//
//          ExpressRouteCircuitPeeringTypeArgs{...}
type ExpressRouteCircuitPeeringTypeInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringTypeOutput() ExpressRouteCircuitPeeringTypeOutput
	ToExpressRouteCircuitPeeringTypeOutputWithContext(context.Context) ExpressRouteCircuitPeeringTypeOutput
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringTypeArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name       pulumi.StringPtrInput                              `pulumi:"name"`
	Properties ExpressRouteCircuitPeeringPropertiesFormatPtrInput `pulumi:"properties"`
}

func (ExpressRouteCircuitPeeringTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringTypeArgs) ToExpressRouteCircuitPeeringTypeOutput() ExpressRouteCircuitPeeringTypeOutput {
	return i.ToExpressRouteCircuitPeeringTypeOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringTypeArgs) ToExpressRouteCircuitPeeringTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringTypeOutput)
}

// ExpressRouteCircuitPeeringTypeArrayInput is an input type that accepts ExpressRouteCircuitPeeringTypeArray and ExpressRouteCircuitPeeringTypeArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringTypeArrayInput` via:
//
//          ExpressRouteCircuitPeeringTypeArray{ ExpressRouteCircuitPeeringTypeArgs{...} }
type ExpressRouteCircuitPeeringTypeArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringTypeArrayOutput() ExpressRouteCircuitPeeringTypeArrayOutput
	ToExpressRouteCircuitPeeringTypeArrayOutputWithContext(context.Context) ExpressRouteCircuitPeeringTypeArrayOutput
}

type ExpressRouteCircuitPeeringTypeArray []ExpressRouteCircuitPeeringTypeInput

func (ExpressRouteCircuitPeeringTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringTypeArray) ToExpressRouteCircuitPeeringTypeArrayOutput() ExpressRouteCircuitPeeringTypeArrayOutput {
	return i.ToExpressRouteCircuitPeeringTypeArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringTypeArray) ToExpressRouteCircuitPeeringTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringTypeArrayOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringTypeOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringTypeOutput) ToExpressRouteCircuitPeeringTypeOutput() ExpressRouteCircuitPeeringTypeOutput {
	return o
}

func (o ExpressRouteCircuitPeeringTypeOutput) ToExpressRouteCircuitPeeringTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringTypeOutput {
	return o
}

// Resource ID.
func (o ExpressRouteCircuitPeeringTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitPeeringTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ExpressRouteCircuitPeeringTypeOutput) Properties() ExpressRouteCircuitPeeringPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *ExpressRouteCircuitPeeringPropertiesFormat {
		return v.Properties
	}).(ExpressRouteCircuitPeeringPropertiesFormatPtrOutput)
}

type ExpressRouteCircuitPeeringTypeArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringTypeArrayOutput) ToExpressRouteCircuitPeeringTypeArrayOutput() ExpressRouteCircuitPeeringTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitPeeringTypeArrayOutput) ToExpressRouteCircuitPeeringTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitPeeringTypeArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitPeeringTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitPeeringType {
		return vs[0].([]ExpressRouteCircuitPeeringType)[vs[1].(int)]
	}).(ExpressRouteCircuitPeeringTypeOutput)
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfig struct {
	// The communities of bgp peering. Specified for microsoft peering
	AdvertisedCommunities []string `pulumi:"advertisedCommunities"`
	// The reference of AdvertisedPublicPrefixes.
	AdvertisedPublicPrefixes []string `pulumi:"advertisedPublicPrefixes"`
	// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
	AdvertisedPublicPrefixesState *string `pulumi:"advertisedPublicPrefixesState"`
	// The CustomerASN of the peering.
	CustomerASN *int `pulumi:"customerASN"`
	// The legacy mode of the peering.
	LegacyMode *int `pulumi:"legacyMode"`
	// The RoutingRegistryName of the configuration.
	RoutingRegistryName *string `pulumi:"routingRegistryName"`
}

// ExpressRouteCircuitPeeringConfigInput is an input type that accepts ExpressRouteCircuitPeeringConfigArgs and ExpressRouteCircuitPeeringConfigOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringConfigInput` via:
//
//          ExpressRouteCircuitPeeringConfigArgs{...}
type ExpressRouteCircuitPeeringConfigInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringConfigOutput() ExpressRouteCircuitPeeringConfigOutput
	ToExpressRouteCircuitPeeringConfigOutputWithContext(context.Context) ExpressRouteCircuitPeeringConfigOutput
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigArgs struct {
	// The communities of bgp peering. Specified for microsoft peering
	AdvertisedCommunities pulumi.StringArrayInput `pulumi:"advertisedCommunities"`
	// The reference of AdvertisedPublicPrefixes.
	AdvertisedPublicPrefixes pulumi.StringArrayInput `pulumi:"advertisedPublicPrefixes"`
	// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
	AdvertisedPublicPrefixesState pulumi.StringPtrInput `pulumi:"advertisedPublicPrefixesState"`
	// The CustomerASN of the peering.
	CustomerASN pulumi.IntPtrInput `pulumi:"customerASN"`
	// The legacy mode of the peering.
	LegacyMode pulumi.IntPtrInput `pulumi:"legacyMode"`
	// The RoutingRegistryName of the configuration.
	RoutingRegistryName pulumi.StringPtrInput `pulumi:"routingRegistryName"`
}

func (ExpressRouteCircuitPeeringConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringConfigArgs) ToExpressRouteCircuitPeeringConfigOutput() ExpressRouteCircuitPeeringConfigOutput {
	return i.ToExpressRouteCircuitPeeringConfigOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringConfigArgs) ToExpressRouteCircuitPeeringConfigOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigOutput)
}

func (i ExpressRouteCircuitPeeringConfigArgs) ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput {
	return i.ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringConfigArgs) ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigOutput).ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitPeeringConfigPtrInput is an input type that accepts ExpressRouteCircuitPeeringConfigArgs, ExpressRouteCircuitPeeringConfigPtr and ExpressRouteCircuitPeeringConfigPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringConfigPtrInput` via:
//
//          ExpressRouteCircuitPeeringConfigArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitPeeringConfigPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput
	ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Context) ExpressRouteCircuitPeeringConfigPtrOutput
}

type expressRouteCircuitPeeringConfigPtrType ExpressRouteCircuitPeeringConfigArgs

func ExpressRouteCircuitPeeringConfigPtr(v *ExpressRouteCircuitPeeringConfigArgs) ExpressRouteCircuitPeeringConfigPtrInput {
	return (*expressRouteCircuitPeeringConfigPtrType)(v)
}

func (*expressRouteCircuitPeeringConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (i *expressRouteCircuitPeeringConfigPtrType) ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput {
	return i.ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitPeeringConfigPtrType) ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringConfigOutput) ToExpressRouteCircuitPeeringConfigOutput() ExpressRouteCircuitPeeringConfigOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigOutput) ToExpressRouteCircuitPeeringConfigOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigOutput) ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringConfigOutput) ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) *ExpressRouteCircuitPeeringConfig {
		return &v
	}).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The communities of bgp peering. Specified for microsoft peering
func (o ExpressRouteCircuitPeeringConfigOutput) AdvertisedCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) []string { return v.AdvertisedCommunities }).(pulumi.StringArrayOutput)
}

// The reference of AdvertisedPublicPrefixes.
func (o ExpressRouteCircuitPeeringConfigOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) []string { return v.AdvertisedPublicPrefixes }).(pulumi.StringArrayOutput)
}

// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
func (o ExpressRouteCircuitPeeringConfigOutput) AdvertisedPublicPrefixesState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) *string { return v.AdvertisedPublicPrefixesState }).(pulumi.StringPtrOutput)
}

// The CustomerASN of the peering.
func (o ExpressRouteCircuitPeeringConfigOutput) CustomerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) *int { return v.CustomerASN }).(pulumi.IntPtrOutput)
}

// The legacy mode of the peering.
func (o ExpressRouteCircuitPeeringConfigOutput) LegacyMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) *int { return v.LegacyMode }).(pulumi.IntPtrOutput)
}

// The RoutingRegistryName of the configuration.
func (o ExpressRouteCircuitPeeringConfigOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) *string { return v.RoutingRegistryName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPeeringConfigPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringConfigPtrOutput) ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigPtrOutput) ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigPtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigPtrOutput) Elem() ExpressRouteCircuitPeeringConfigOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) ExpressRouteCircuitPeeringConfig { return *v }).(ExpressRouteCircuitPeeringConfigOutput)
}

// The communities of bgp peering. Specified for microsoft peering
func (o ExpressRouteCircuitPeeringConfigPtrOutput) AdvertisedCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedCommunities
	}).(pulumi.StringArrayOutput)
}

// The reference of AdvertisedPublicPrefixes.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedPublicPrefixes
	}).(pulumi.StringArrayOutput)
}

// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) AdvertisedPublicPrefixesState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) *string {
		if v == nil {
			return nil
		}
		return v.AdvertisedPublicPrefixesState
	}).(pulumi.StringPtrOutput)
}

// The CustomerASN of the peering.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) CustomerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) *int {
		if v == nil {
			return nil
		}
		return v.CustomerASN
	}).(pulumi.IntPtrOutput)
}

// The legacy mode of the peering.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) LegacyMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) *int {
		if v == nil {
			return nil
		}
		return v.LegacyMode
	}).(pulumi.IntPtrOutput)
}

// The RoutingRegistryName of the configuration.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) *string {
		if v == nil {
			return nil
		}
		return v.RoutingRegistryName
	}).(pulumi.StringPtrOutput)
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigResponse struct {
	// The communities of bgp peering. Specified for microsoft peering
	AdvertisedCommunities []string `pulumi:"advertisedCommunities"`
	// The reference of AdvertisedPublicPrefixes.
	AdvertisedPublicPrefixes []string `pulumi:"advertisedPublicPrefixes"`
	// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
	AdvertisedPublicPrefixesState *string `pulumi:"advertisedPublicPrefixesState"`
	// The CustomerASN of the peering.
	CustomerASN *int `pulumi:"customerASN"`
	// The legacy mode of the peering.
	LegacyMode *int `pulumi:"legacyMode"`
	// The RoutingRegistryName of the configuration.
	RoutingRegistryName *string `pulumi:"routingRegistryName"`
}

// ExpressRouteCircuitPeeringConfigResponseInput is an input type that accepts ExpressRouteCircuitPeeringConfigResponseArgs and ExpressRouteCircuitPeeringConfigResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringConfigResponseInput` via:
//
//          ExpressRouteCircuitPeeringConfigResponseArgs{...}
type ExpressRouteCircuitPeeringConfigResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringConfigResponseOutput() ExpressRouteCircuitPeeringConfigResponseOutput
	ToExpressRouteCircuitPeeringConfigResponseOutputWithContext(context.Context) ExpressRouteCircuitPeeringConfigResponseOutput
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigResponseArgs struct {
	// The communities of bgp peering. Specified for microsoft peering
	AdvertisedCommunities pulumi.StringArrayInput `pulumi:"advertisedCommunities"`
	// The reference of AdvertisedPublicPrefixes.
	AdvertisedPublicPrefixes pulumi.StringArrayInput `pulumi:"advertisedPublicPrefixes"`
	// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
	AdvertisedPublicPrefixesState pulumi.StringPtrInput `pulumi:"advertisedPublicPrefixesState"`
	// The CustomerASN of the peering.
	CustomerASN pulumi.IntPtrInput `pulumi:"customerASN"`
	// The legacy mode of the peering.
	LegacyMode pulumi.IntPtrInput `pulumi:"legacyMode"`
	// The RoutingRegistryName of the configuration.
	RoutingRegistryName pulumi.StringPtrInput `pulumi:"routingRegistryName"`
}

func (ExpressRouteCircuitPeeringConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringConfigResponseArgs) ToExpressRouteCircuitPeeringConfigResponseOutput() ExpressRouteCircuitPeeringConfigResponseOutput {
	return i.ToExpressRouteCircuitPeeringConfigResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringConfigResponseArgs) ToExpressRouteCircuitPeeringConfigResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigResponseOutput)
}

func (i ExpressRouteCircuitPeeringConfigResponseArgs) ToExpressRouteCircuitPeeringConfigResponsePtrOutput() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return i.ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringConfigResponseArgs) ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigResponseOutput).ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitPeeringConfigResponsePtrInput is an input type that accepts ExpressRouteCircuitPeeringConfigResponseArgs, ExpressRouteCircuitPeeringConfigResponsePtr and ExpressRouteCircuitPeeringConfigResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringConfigResponsePtrInput` via:
//
//          ExpressRouteCircuitPeeringConfigResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitPeeringConfigResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringConfigResponsePtrOutput() ExpressRouteCircuitPeeringConfigResponsePtrOutput
	ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitPeeringConfigResponsePtrOutput
}

type expressRouteCircuitPeeringConfigResponsePtrType ExpressRouteCircuitPeeringConfigResponseArgs

func ExpressRouteCircuitPeeringConfigResponsePtr(v *ExpressRouteCircuitPeeringConfigResponseArgs) ExpressRouteCircuitPeeringConfigResponsePtrInput {
	return (*expressRouteCircuitPeeringConfigResponsePtrType)(v)
}

func (*expressRouteCircuitPeeringConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (i *expressRouteCircuitPeeringConfigResponsePtrType) ToExpressRouteCircuitPeeringConfigResponsePtrOutput() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return i.ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitPeeringConfigResponsePtrType) ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringConfigResponseOutput) ToExpressRouteCircuitPeeringConfigResponseOutput() ExpressRouteCircuitPeeringConfigResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigResponseOutput) ToExpressRouteCircuitPeeringConfigResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigResponseOutput) ToExpressRouteCircuitPeeringConfigResponsePtrOutput() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringConfigResponseOutput) ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) *ExpressRouteCircuitPeeringConfigResponse {
		return &v
	}).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// The communities of bgp peering. Specified for microsoft peering
func (o ExpressRouteCircuitPeeringConfigResponseOutput) AdvertisedCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) []string { return v.AdvertisedCommunities }).(pulumi.StringArrayOutput)
}

// The reference of AdvertisedPublicPrefixes.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) []string { return v.AdvertisedPublicPrefixes }).(pulumi.StringArrayOutput)
}

// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) AdvertisedPublicPrefixesState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) *string { return v.AdvertisedPublicPrefixesState }).(pulumi.StringPtrOutput)
}

// The CustomerASN of the peering.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) CustomerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) *int { return v.CustomerASN }).(pulumi.IntPtrOutput)
}

// The legacy mode of the peering.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) LegacyMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) *int { return v.LegacyMode }).(pulumi.IntPtrOutput)
}

// The RoutingRegistryName of the configuration.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) *string { return v.RoutingRegistryName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPeeringConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) ToExpressRouteCircuitPeeringConfigResponsePtrOutput() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) Elem() ExpressRouteCircuitPeeringConfigResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) ExpressRouteCircuitPeeringConfigResponse { return *v }).(ExpressRouteCircuitPeeringConfigResponseOutput)
}

// The communities of bgp peering. Specified for microsoft peering
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) AdvertisedCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedCommunities
	}).(pulumi.StringArrayOutput)
}

// The reference of AdvertisedPublicPrefixes.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedPublicPrefixes
	}).(pulumi.StringArrayOutput)
}

// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) AdvertisedPublicPrefixesState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdvertisedPublicPrefixesState
	}).(pulumi.StringPtrOutput)
}

// The CustomerASN of the peering.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) CustomerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.CustomerASN
	}).(pulumi.IntPtrOutput)
}

// The legacy mode of the peering.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) LegacyMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.LegacyMode
	}).(pulumi.IntPtrOutput)
}

// The RoutingRegistryName of the configuration.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.RoutingRegistryName
	}).(pulumi.StringPtrOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringDefinition struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name       *string                                     `pulumi:"name"`
	Properties *ExpressRouteCircuitPeeringPropertiesFormat `pulumi:"properties"`
}

// ExpressRouteCircuitPeeringDefinitionInput is an input type that accepts ExpressRouteCircuitPeeringDefinitionArgs and ExpressRouteCircuitPeeringDefinitionOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringDefinitionInput` via:
//
//          ExpressRouteCircuitPeeringDefinitionArgs{...}
type ExpressRouteCircuitPeeringDefinitionInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringDefinitionOutput() ExpressRouteCircuitPeeringDefinitionOutput
	ToExpressRouteCircuitPeeringDefinitionOutputWithContext(context.Context) ExpressRouteCircuitPeeringDefinitionOutput
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringDefinitionArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name       pulumi.StringPtrInput                              `pulumi:"name"`
	Properties ExpressRouteCircuitPeeringPropertiesFormatPtrInput `pulumi:"properties"`
}

func (ExpressRouteCircuitPeeringDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringDefinition)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringDefinitionArgs) ToExpressRouteCircuitPeeringDefinitionOutput() ExpressRouteCircuitPeeringDefinitionOutput {
	return i.ToExpressRouteCircuitPeeringDefinitionOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringDefinitionArgs) ToExpressRouteCircuitPeeringDefinitionOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringDefinitionOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringDefinitionOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringDefinition)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringDefinitionOutput) ToExpressRouteCircuitPeeringDefinitionOutput() ExpressRouteCircuitPeeringDefinitionOutput {
	return o
}

func (o ExpressRouteCircuitPeeringDefinitionOutput) ToExpressRouteCircuitPeeringDefinitionOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringDefinitionOutput {
	return o
}

// Resource ID.
func (o ExpressRouteCircuitPeeringDefinitionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringDefinition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitPeeringDefinitionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringDefinition) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ExpressRouteCircuitPeeringDefinitionOutput) Properties() ExpressRouteCircuitPeeringPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringDefinition) *ExpressRouteCircuitPeeringPropertiesFormat {
		return v.Properties
	}).(ExpressRouteCircuitPeeringPropertiesFormatPtrOutput)
}

// ExpressRoute circuit peering identifier.
type ExpressRouteCircuitPeeringId struct {
	// The ID of the ExpressRoute circuit peering.
	Id *string `pulumi:"id"`
}

// ExpressRouteCircuitPeeringIdInput is an input type that accepts ExpressRouteCircuitPeeringIdArgs and ExpressRouteCircuitPeeringIdOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringIdInput` via:
//
//          ExpressRouteCircuitPeeringIdArgs{...}
type ExpressRouteCircuitPeeringIdInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringIdOutput() ExpressRouteCircuitPeeringIdOutput
	ToExpressRouteCircuitPeeringIdOutputWithContext(context.Context) ExpressRouteCircuitPeeringIdOutput
}

// ExpressRoute circuit peering identifier.
type ExpressRouteCircuitPeeringIdArgs struct {
	// The ID of the ExpressRoute circuit peering.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ExpressRouteCircuitPeeringIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringId)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringIdArgs) ToExpressRouteCircuitPeeringIdOutput() ExpressRouteCircuitPeeringIdOutput {
	return i.ToExpressRouteCircuitPeeringIdOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringIdArgs) ToExpressRouteCircuitPeeringIdOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringIdOutput)
}

func (i ExpressRouteCircuitPeeringIdArgs) ToExpressRouteCircuitPeeringIdPtrOutput() ExpressRouteCircuitPeeringIdPtrOutput {
	return i.ToExpressRouteCircuitPeeringIdPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringIdArgs) ToExpressRouteCircuitPeeringIdPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringIdOutput).ToExpressRouteCircuitPeeringIdPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitPeeringIdPtrInput is an input type that accepts ExpressRouteCircuitPeeringIdArgs, ExpressRouteCircuitPeeringIdPtr and ExpressRouteCircuitPeeringIdPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringIdPtrInput` via:
//
//          ExpressRouteCircuitPeeringIdArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitPeeringIdPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringIdPtrOutput() ExpressRouteCircuitPeeringIdPtrOutput
	ToExpressRouteCircuitPeeringIdPtrOutputWithContext(context.Context) ExpressRouteCircuitPeeringIdPtrOutput
}

type expressRouteCircuitPeeringIdPtrType ExpressRouteCircuitPeeringIdArgs

func ExpressRouteCircuitPeeringIdPtr(v *ExpressRouteCircuitPeeringIdArgs) ExpressRouteCircuitPeeringIdPtrInput {
	return (*expressRouteCircuitPeeringIdPtrType)(v)
}

func (*expressRouteCircuitPeeringIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringId)(nil)).Elem()
}

func (i *expressRouteCircuitPeeringIdPtrType) ToExpressRouteCircuitPeeringIdPtrOutput() ExpressRouteCircuitPeeringIdPtrOutput {
	return i.ToExpressRouteCircuitPeeringIdPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitPeeringIdPtrType) ToExpressRouteCircuitPeeringIdPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringIdPtrOutput)
}

// ExpressRoute circuit peering identifier.
type ExpressRouteCircuitPeeringIdOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringId)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringIdOutput) ToExpressRouteCircuitPeeringIdOutput() ExpressRouteCircuitPeeringIdOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIdOutput) ToExpressRouteCircuitPeeringIdOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIdOutput) ToExpressRouteCircuitPeeringIdPtrOutput() ExpressRouteCircuitPeeringIdPtrOutput {
	return o.ToExpressRouteCircuitPeeringIdPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringIdOutput) ToExpressRouteCircuitPeeringIdPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringId) *ExpressRouteCircuitPeeringId {
		return &v
	}).(ExpressRouteCircuitPeeringIdPtrOutput)
}

// The ID of the ExpressRoute circuit peering.
func (o ExpressRouteCircuitPeeringIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringId) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPeeringIdPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringId)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringIdPtrOutput) ToExpressRouteCircuitPeeringIdPtrOutput() ExpressRouteCircuitPeeringIdPtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIdPtrOutput) ToExpressRouteCircuitPeeringIdPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdPtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIdPtrOutput) Elem() ExpressRouteCircuitPeeringIdOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringId) ExpressRouteCircuitPeeringId { return *v }).(ExpressRouteCircuitPeeringIdOutput)
}

// The ID of the ExpressRoute circuit peering.
func (o ExpressRouteCircuitPeeringIdPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringId) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// ExpressRoute circuit peering identifier.
type ExpressRouteCircuitPeeringIdResponse struct {
	// The ID of the ExpressRoute circuit peering.
	Id *string `pulumi:"id"`
}

// ExpressRouteCircuitPeeringIdResponseInput is an input type that accepts ExpressRouteCircuitPeeringIdResponseArgs and ExpressRouteCircuitPeeringIdResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringIdResponseInput` via:
//
//          ExpressRouteCircuitPeeringIdResponseArgs{...}
type ExpressRouteCircuitPeeringIdResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringIdResponseOutput() ExpressRouteCircuitPeeringIdResponseOutput
	ToExpressRouteCircuitPeeringIdResponseOutputWithContext(context.Context) ExpressRouteCircuitPeeringIdResponseOutput
}

// ExpressRoute circuit peering identifier.
type ExpressRouteCircuitPeeringIdResponseArgs struct {
	// The ID of the ExpressRoute circuit peering.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ExpressRouteCircuitPeeringIdResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringIdResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringIdResponseArgs) ToExpressRouteCircuitPeeringIdResponseOutput() ExpressRouteCircuitPeeringIdResponseOutput {
	return i.ToExpressRouteCircuitPeeringIdResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringIdResponseArgs) ToExpressRouteCircuitPeeringIdResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringIdResponseOutput)
}

func (i ExpressRouteCircuitPeeringIdResponseArgs) ToExpressRouteCircuitPeeringIdResponsePtrOutput() ExpressRouteCircuitPeeringIdResponsePtrOutput {
	return i.ToExpressRouteCircuitPeeringIdResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringIdResponseArgs) ToExpressRouteCircuitPeeringIdResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringIdResponseOutput).ToExpressRouteCircuitPeeringIdResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitPeeringIdResponsePtrInput is an input type that accepts ExpressRouteCircuitPeeringIdResponseArgs, ExpressRouteCircuitPeeringIdResponsePtr and ExpressRouteCircuitPeeringIdResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringIdResponsePtrInput` via:
//
//          ExpressRouteCircuitPeeringIdResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitPeeringIdResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringIdResponsePtrOutput() ExpressRouteCircuitPeeringIdResponsePtrOutput
	ToExpressRouteCircuitPeeringIdResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitPeeringIdResponsePtrOutput
}

type expressRouteCircuitPeeringIdResponsePtrType ExpressRouteCircuitPeeringIdResponseArgs

func ExpressRouteCircuitPeeringIdResponsePtr(v *ExpressRouteCircuitPeeringIdResponseArgs) ExpressRouteCircuitPeeringIdResponsePtrInput {
	return (*expressRouteCircuitPeeringIdResponsePtrType)(v)
}

func (*expressRouteCircuitPeeringIdResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringIdResponse)(nil)).Elem()
}

func (i *expressRouteCircuitPeeringIdResponsePtrType) ToExpressRouteCircuitPeeringIdResponsePtrOutput() ExpressRouteCircuitPeeringIdResponsePtrOutput {
	return i.ToExpressRouteCircuitPeeringIdResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitPeeringIdResponsePtrType) ToExpressRouteCircuitPeeringIdResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringIdResponsePtrOutput)
}

// ExpressRoute circuit peering identifier.
type ExpressRouteCircuitPeeringIdResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringIdResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringIdResponseOutput) ToExpressRouteCircuitPeeringIdResponseOutput() ExpressRouteCircuitPeeringIdResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIdResponseOutput) ToExpressRouteCircuitPeeringIdResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIdResponseOutput) ToExpressRouteCircuitPeeringIdResponsePtrOutput() ExpressRouteCircuitPeeringIdResponsePtrOutput {
	return o.ToExpressRouteCircuitPeeringIdResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringIdResponseOutput) ToExpressRouteCircuitPeeringIdResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringIdResponse) *ExpressRouteCircuitPeeringIdResponse {
		return &v
	}).(ExpressRouteCircuitPeeringIdResponsePtrOutput)
}

// The ID of the ExpressRoute circuit peering.
func (o ExpressRouteCircuitPeeringIdResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringIdResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPeeringIdResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringIdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringIdResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringIdResponsePtrOutput) ToExpressRouteCircuitPeeringIdResponsePtrOutput() ExpressRouteCircuitPeeringIdResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIdResponsePtrOutput) ToExpressRouteCircuitPeeringIdResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIdResponsePtrOutput) Elem() ExpressRouteCircuitPeeringIdResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringIdResponse) ExpressRouteCircuitPeeringIdResponse { return *v }).(ExpressRouteCircuitPeeringIdResponseOutput)
}

// The ID of the ExpressRoute circuit peering.
func (o ExpressRouteCircuitPeeringIdResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringIdResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPeeringPropertiesFormat struct {
	// The Azure ASN.
	AzureASN *int `pulumi:"azureASN"`
	// The list of circuit connections associated with Azure Private Peering for this circuit.
	Connections []ExpressRouteCircuitConnectionType `pulumi:"connections"`
	// The ExpressRoute connection.
	ExpressRouteConnection *ExpressRouteConnectionId `pulumi:"expressRouteConnection"`
	// The GatewayManager Etag.
	GatewayManagerEtag *string `pulumi:"gatewayManagerEtag"`
	// The IPv6 peering configuration.
	Ipv6PeeringConfig *Ipv6ExpressRouteCircuitPeeringConfig `pulumi:"ipv6PeeringConfig"`
	// Gets whether the provider or the customer last modified the peering.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig *ExpressRouteCircuitPeeringConfig `pulumi:"microsoftPeeringConfig"`
	// The peer ASN.
	PeerASN *int `pulumi:"peerASN"`
	// The peering type.
	PeeringType *string `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort *string `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix *string `pulumi:"primaryPeerAddressPrefix"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the RouteFilter resource.
	RouteFilter *RouteFilterDefinition `pulumi:"routeFilter"`
	// The secondary port.
	SecondaryAzurePort *string `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix *string `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey *string `pulumi:"sharedKey"`
	// The peering state.
	State *string `pulumi:"state"`
	// Gets peering stats.
	Stats *ExpressRouteCircuitStats `pulumi:"stats"`
	// The VLAN ID.
	VlanId *int `pulumi:"vlanId"`
}

// ExpressRouteCircuitPeeringPropertiesFormatInput is an input type that accepts ExpressRouteCircuitPeeringPropertiesFormatArgs and ExpressRouteCircuitPeeringPropertiesFormatOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringPropertiesFormatInput` via:
//
//          ExpressRouteCircuitPeeringPropertiesFormatArgs{...}
type ExpressRouteCircuitPeeringPropertiesFormatInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringPropertiesFormatOutput() ExpressRouteCircuitPeeringPropertiesFormatOutput
	ToExpressRouteCircuitPeeringPropertiesFormatOutputWithContext(context.Context) ExpressRouteCircuitPeeringPropertiesFormatOutput
}

type ExpressRouteCircuitPeeringPropertiesFormatArgs struct {
	// The Azure ASN.
	AzureASN pulumi.IntPtrInput `pulumi:"azureASN"`
	// The list of circuit connections associated with Azure Private Peering for this circuit.
	Connections ExpressRouteCircuitConnectionTypeArrayInput `pulumi:"connections"`
	// The ExpressRoute connection.
	ExpressRouteConnection ExpressRouteConnectionIdPtrInput `pulumi:"expressRouteConnection"`
	// The GatewayManager Etag.
	GatewayManagerEtag pulumi.StringPtrInput `pulumi:"gatewayManagerEtag"`
	// The IPv6 peering configuration.
	Ipv6PeeringConfig Ipv6ExpressRouteCircuitPeeringConfigPtrInput `pulumi:"ipv6PeeringConfig"`
	// Gets whether the provider or the customer last modified the peering.
	LastModifiedBy pulumi.StringPtrInput `pulumi:"lastModifiedBy"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig ExpressRouteCircuitPeeringConfigPtrInput `pulumi:"microsoftPeeringConfig"`
	// The peer ASN.
	PeerASN pulumi.IntPtrInput `pulumi:"peerASN"`
	// The peering type.
	PeeringType pulumi.StringPtrInput `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort pulumi.StringPtrInput `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"primaryPeerAddressPrefix"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the RouteFilter resource.
	RouteFilter RouteFilterDefinitionPtrInput `pulumi:"routeFilter"`
	// The secondary port.
	SecondaryAzurePort pulumi.StringPtrInput `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// The peering state.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Gets peering stats.
	Stats ExpressRouteCircuitStatsPtrInput `pulumi:"stats"`
	// The VLAN ID.
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (ExpressRouteCircuitPeeringPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringPropertiesFormat)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringPropertiesFormatArgs) ToExpressRouteCircuitPeeringPropertiesFormatOutput() ExpressRouteCircuitPeeringPropertiesFormatOutput {
	return i.ToExpressRouteCircuitPeeringPropertiesFormatOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringPropertiesFormatArgs) ToExpressRouteCircuitPeeringPropertiesFormatOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringPropertiesFormatOutput)
}

func (i ExpressRouteCircuitPeeringPropertiesFormatArgs) ToExpressRouteCircuitPeeringPropertiesFormatPtrOutput() ExpressRouteCircuitPeeringPropertiesFormatPtrOutput {
	return i.ToExpressRouteCircuitPeeringPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringPropertiesFormatArgs) ToExpressRouteCircuitPeeringPropertiesFormatPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringPropertiesFormatOutput).ToExpressRouteCircuitPeeringPropertiesFormatPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitPeeringPropertiesFormatPtrInput is an input type that accepts ExpressRouteCircuitPeeringPropertiesFormatArgs, ExpressRouteCircuitPeeringPropertiesFormatPtr and ExpressRouteCircuitPeeringPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringPropertiesFormatPtrInput` via:
//
//          ExpressRouteCircuitPeeringPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitPeeringPropertiesFormatPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringPropertiesFormatPtrOutput() ExpressRouteCircuitPeeringPropertiesFormatPtrOutput
	ToExpressRouteCircuitPeeringPropertiesFormatPtrOutputWithContext(context.Context) ExpressRouteCircuitPeeringPropertiesFormatPtrOutput
}

type expressRouteCircuitPeeringPropertiesFormatPtrType ExpressRouteCircuitPeeringPropertiesFormatArgs

func ExpressRouteCircuitPeeringPropertiesFormatPtr(v *ExpressRouteCircuitPeeringPropertiesFormatArgs) ExpressRouteCircuitPeeringPropertiesFormatPtrInput {
	return (*expressRouteCircuitPeeringPropertiesFormatPtrType)(v)
}

func (*expressRouteCircuitPeeringPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringPropertiesFormat)(nil)).Elem()
}

func (i *expressRouteCircuitPeeringPropertiesFormatPtrType) ToExpressRouteCircuitPeeringPropertiesFormatPtrOutput() ExpressRouteCircuitPeeringPropertiesFormatPtrOutput {
	return i.ToExpressRouteCircuitPeeringPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitPeeringPropertiesFormatPtrType) ToExpressRouteCircuitPeeringPropertiesFormatPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringPropertiesFormatPtrOutput)
}

type ExpressRouteCircuitPeeringPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringPropertiesFormat)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) ToExpressRouteCircuitPeeringPropertiesFormatOutput() ExpressRouteCircuitPeeringPropertiesFormatOutput {
	return o
}

func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) ToExpressRouteCircuitPeeringPropertiesFormatOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringPropertiesFormatOutput {
	return o
}

func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) ToExpressRouteCircuitPeeringPropertiesFormatPtrOutput() ExpressRouteCircuitPeeringPropertiesFormatPtrOutput {
	return o.ToExpressRouteCircuitPeeringPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) ToExpressRouteCircuitPeeringPropertiesFormatPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormat) *ExpressRouteCircuitPeeringPropertiesFormat {
		return &v
	}).(ExpressRouteCircuitPeeringPropertiesFormatPtrOutput)
}

// The Azure ASN.
func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) AzureASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormat) *int { return v.AzureASN }).(pulumi.IntPtrOutput)
}

// The list of circuit connections associated with Azure Private Peering for this circuit.
func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) Connections() ExpressRouteCircuitConnectionTypeArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormat) []ExpressRouteCircuitConnectionType {
		return v.Connections
	}).(ExpressRouteCircuitConnectionTypeArrayOutput)
}

// The ExpressRoute connection.
func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) ExpressRouteConnection() ExpressRouteConnectionIdPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormat) *ExpressRouteConnectionId {
		return v.ExpressRouteConnection
	}).(ExpressRouteConnectionIdPtrOutput)
}

// The GatewayManager Etag.
func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) GatewayManagerEtag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormat) *string { return v.GatewayManagerEtag }).(pulumi.StringPtrOutput)
}

// The IPv6 peering configuration.
func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) Ipv6PeeringConfig() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormat) *Ipv6ExpressRouteCircuitPeeringConfig {
		return v.Ipv6PeeringConfig
	}).(Ipv6ExpressRouteCircuitPeeringConfigPtrOutput)
}

// Gets whether the provider or the customer last modified the peering.
func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormat) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The Microsoft peering configuration.
func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormat) *ExpressRouteCircuitPeeringConfig {
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The peer ASN.
func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormat) *int { return v.PeerASN }).(pulumi.IntPtrOutput)
}

// The peering type.
func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) PeeringType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormat) *string { return v.PeeringType }).(pulumi.StringPtrOutput)
}

// The primary port.
func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) PrimaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormat) *string { return v.PrimaryAzurePort }).(pulumi.StringPtrOutput)
}

// The primary address prefix.
func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormat) *string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the RouteFilter resource.
func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) RouteFilter() RouteFilterDefinitionPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormat) *RouteFilterDefinition { return v.RouteFilter }).(RouteFilterDefinitionPtrOutput)
}

// The secondary port.
func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) SecondaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormat) *string { return v.SecondaryAzurePort }).(pulumi.StringPtrOutput)
}

// The secondary address prefix.
func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormat) *string { return v.SecondaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The shared key.
func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormat) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// The peering state.
func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormat) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Gets peering stats.
func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) Stats() ExpressRouteCircuitStatsPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormat) *ExpressRouteCircuitStats { return v.Stats }).(ExpressRouteCircuitStatsPtrOutput)
}

// The VLAN ID.
func (o ExpressRouteCircuitPeeringPropertiesFormatOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormat) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type ExpressRouteCircuitPeeringPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringPropertiesFormat)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) ToExpressRouteCircuitPeeringPropertiesFormatPtrOutput() ExpressRouteCircuitPeeringPropertiesFormatPtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) ToExpressRouteCircuitPeeringPropertiesFormatPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringPropertiesFormatPtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) Elem() ExpressRouteCircuitPeeringPropertiesFormatOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormat) ExpressRouteCircuitPeeringPropertiesFormat {
		return *v
	}).(ExpressRouteCircuitPeeringPropertiesFormatOutput)
}

// The Azure ASN.
func (o ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) AzureASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.AzureASN
	}).(pulumi.IntPtrOutput)
}

// The list of circuit connections associated with Azure Private Peering for this circuit.
func (o ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) Connections() ExpressRouteCircuitConnectionTypeArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormat) []ExpressRouteCircuitConnectionType {
		if v == nil {
			return nil
		}
		return v.Connections
	}).(ExpressRouteCircuitConnectionTypeArrayOutput)
}

// The ExpressRoute connection.
func (o ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) ExpressRouteConnection() ExpressRouteConnectionIdPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormat) *ExpressRouteConnectionId {
		if v == nil {
			return nil
		}
		return v.ExpressRouteConnection
	}).(ExpressRouteConnectionIdPtrOutput)
}

// The GatewayManager Etag.
func (o ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) GatewayManagerEtag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.GatewayManagerEtag
	}).(pulumi.StringPtrOutput)
}

// The IPv6 peering configuration.
func (o ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) Ipv6PeeringConfig() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormat) *Ipv6ExpressRouteCircuitPeeringConfig {
		if v == nil {
			return nil
		}
		return v.Ipv6PeeringConfig
	}).(Ipv6ExpressRouteCircuitPeeringConfigPtrOutput)
}

// Gets whether the provider or the customer last modified the peering.
func (o ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedBy
	}).(pulumi.StringPtrOutput)
}

// The Microsoft peering configuration.
func (o ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormat) *ExpressRouteCircuitPeeringConfig {
		if v == nil {
			return nil
		}
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The peer ASN.
func (o ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.PeerASN
	}).(pulumi.IntPtrOutput)
}

// The peering type.
func (o ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) PeeringType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.PeeringType
	}).(pulumi.StringPtrOutput)
}

// The primary port.
func (o ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) PrimaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryAzurePort
	}).(pulumi.StringPtrOutput)
}

// The primary address prefix.
func (o ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference of the RouteFilter resource.
func (o ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) RouteFilter() RouteFilterDefinitionPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormat) *RouteFilterDefinition {
		if v == nil {
			return nil
		}
		return v.RouteFilter
	}).(RouteFilterDefinitionPtrOutput)
}

// The secondary port.
func (o ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) SecondaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryAzurePort
	}).(pulumi.StringPtrOutput)
}

// The secondary address prefix.
func (o ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The shared key.
func (o ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.SharedKey
	}).(pulumi.StringPtrOutput)
}

// The peering state.
func (o ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Gets peering stats.
func (o ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) Stats() ExpressRouteCircuitStatsPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormat) *ExpressRouteCircuitStats {
		if v == nil {
			return nil
		}
		return v.Stats
	}).(ExpressRouteCircuitStatsPtrOutput)
}

// The VLAN ID.
func (o ExpressRouteCircuitPeeringPropertiesFormatPtrOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.VlanId
	}).(pulumi.IntPtrOutput)
}

type ExpressRouteCircuitPeeringPropertiesFormatResponse struct {
	// The Azure ASN.
	AzureASN *int `pulumi:"azureASN"`
	// The list of circuit connections associated with Azure Private Peering for this circuit.
	Connections []ExpressRouteCircuitConnectionResponse `pulumi:"connections"`
	// The ExpressRoute connection.
	ExpressRouteConnection *ExpressRouteConnectionIdResponse `pulumi:"expressRouteConnection"`
	// The GatewayManager Etag.
	GatewayManagerEtag *string `pulumi:"gatewayManagerEtag"`
	// The IPv6 peering configuration.
	Ipv6PeeringConfig *Ipv6ExpressRouteCircuitPeeringConfigResponse `pulumi:"ipv6PeeringConfig"`
	// Gets whether the provider or the customer last modified the peering.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig *ExpressRouteCircuitPeeringConfigResponse `pulumi:"microsoftPeeringConfig"`
	// The peer ASN.
	PeerASN *int `pulumi:"peerASN"`
	// The peering type.
	PeeringType *string `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort *string `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix *string `pulumi:"primaryPeerAddressPrefix"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the RouteFilter resource.
	RouteFilter *RouteFilterResponse `pulumi:"routeFilter"`
	// The secondary port.
	SecondaryAzurePort *string `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix *string `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey *string `pulumi:"sharedKey"`
	// The peering state.
	State *string `pulumi:"state"`
	// Gets peering stats.
	Stats *ExpressRouteCircuitStatsResponse `pulumi:"stats"`
	// The VLAN ID.
	VlanId *int `pulumi:"vlanId"`
}

// ExpressRouteCircuitPeeringPropertiesFormatResponseInput is an input type that accepts ExpressRouteCircuitPeeringPropertiesFormatResponseArgs and ExpressRouteCircuitPeeringPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringPropertiesFormatResponseInput` via:
//
//          ExpressRouteCircuitPeeringPropertiesFormatResponseArgs{...}
type ExpressRouteCircuitPeeringPropertiesFormatResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringPropertiesFormatResponseOutput() ExpressRouteCircuitPeeringPropertiesFormatResponseOutput
	ToExpressRouteCircuitPeeringPropertiesFormatResponseOutputWithContext(context.Context) ExpressRouteCircuitPeeringPropertiesFormatResponseOutput
}

type ExpressRouteCircuitPeeringPropertiesFormatResponseArgs struct {
	// The Azure ASN.
	AzureASN pulumi.IntPtrInput `pulumi:"azureASN"`
	// The list of circuit connections associated with Azure Private Peering for this circuit.
	Connections ExpressRouteCircuitConnectionResponseArrayInput `pulumi:"connections"`
	// The ExpressRoute connection.
	ExpressRouteConnection ExpressRouteConnectionIdResponsePtrInput `pulumi:"expressRouteConnection"`
	// The GatewayManager Etag.
	GatewayManagerEtag pulumi.StringPtrInput `pulumi:"gatewayManagerEtag"`
	// The IPv6 peering configuration.
	Ipv6PeeringConfig Ipv6ExpressRouteCircuitPeeringConfigResponsePtrInput `pulumi:"ipv6PeeringConfig"`
	// Gets whether the provider or the customer last modified the peering.
	LastModifiedBy pulumi.StringPtrInput `pulumi:"lastModifiedBy"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig ExpressRouteCircuitPeeringConfigResponsePtrInput `pulumi:"microsoftPeeringConfig"`
	// The peer ASN.
	PeerASN pulumi.IntPtrInput `pulumi:"peerASN"`
	// The peering type.
	PeeringType pulumi.StringPtrInput `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort pulumi.StringPtrInput `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"primaryPeerAddressPrefix"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the RouteFilter resource.
	RouteFilter RouteFilterResponsePtrInput `pulumi:"routeFilter"`
	// The secondary port.
	SecondaryAzurePort pulumi.StringPtrInput `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// The peering state.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Gets peering stats.
	Stats ExpressRouteCircuitStatsResponsePtrInput `pulumi:"stats"`
	// The VLAN ID.
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (ExpressRouteCircuitPeeringPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringPropertiesFormatResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringPropertiesFormatResponseArgs) ToExpressRouteCircuitPeeringPropertiesFormatResponseOutput() ExpressRouteCircuitPeeringPropertiesFormatResponseOutput {
	return i.ToExpressRouteCircuitPeeringPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringPropertiesFormatResponseArgs) ToExpressRouteCircuitPeeringPropertiesFormatResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringPropertiesFormatResponseOutput)
}

func (i ExpressRouteCircuitPeeringPropertiesFormatResponseArgs) ToExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput() ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput {
	return i.ToExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringPropertiesFormatResponseArgs) ToExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringPropertiesFormatResponseOutput).ToExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitPeeringPropertiesFormatResponsePtrInput is an input type that accepts ExpressRouteCircuitPeeringPropertiesFormatResponseArgs, ExpressRouteCircuitPeeringPropertiesFormatResponsePtr and ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringPropertiesFormatResponsePtrInput` via:
//
//          ExpressRouteCircuitPeeringPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitPeeringPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput() ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput
	ToExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput
}

type expressRouteCircuitPeeringPropertiesFormatResponsePtrType ExpressRouteCircuitPeeringPropertiesFormatResponseArgs

func ExpressRouteCircuitPeeringPropertiesFormatResponsePtr(v *ExpressRouteCircuitPeeringPropertiesFormatResponseArgs) ExpressRouteCircuitPeeringPropertiesFormatResponsePtrInput {
	return (*expressRouteCircuitPeeringPropertiesFormatResponsePtrType)(v)
}

func (*expressRouteCircuitPeeringPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringPropertiesFormatResponse)(nil)).Elem()
}

func (i *expressRouteCircuitPeeringPropertiesFormatResponsePtrType) ToExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput() ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput {
	return i.ToExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitPeeringPropertiesFormatResponsePtrType) ToExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput)
}

type ExpressRouteCircuitPeeringPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringPropertiesFormatResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) ToExpressRouteCircuitPeeringPropertiesFormatResponseOutput() ExpressRouteCircuitPeeringPropertiesFormatResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) ToExpressRouteCircuitPeeringPropertiesFormatResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringPropertiesFormatResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) ToExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput() ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput {
	return o.ToExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) ToExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormatResponse) *ExpressRouteCircuitPeeringPropertiesFormatResponse {
		return &v
	}).(ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput)
}

// The Azure ASN.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) AzureASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormatResponse) *int { return v.AzureASN }).(pulumi.IntPtrOutput)
}

// The list of circuit connections associated with Azure Private Peering for this circuit.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) Connections() ExpressRouteCircuitConnectionResponseArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormatResponse) []ExpressRouteCircuitConnectionResponse {
		return v.Connections
	}).(ExpressRouteCircuitConnectionResponseArrayOutput)
}

// The ExpressRoute connection.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) ExpressRouteConnection() ExpressRouteConnectionIdResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormatResponse) *ExpressRouteConnectionIdResponse {
		return v.ExpressRouteConnection
	}).(ExpressRouteConnectionIdResponsePtrOutput)
}

// The GatewayManager Etag.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) GatewayManagerEtag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormatResponse) *string { return v.GatewayManagerEtag }).(pulumi.StringPtrOutput)
}

// The IPv6 peering configuration.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) Ipv6PeeringConfig() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormatResponse) *Ipv6ExpressRouteCircuitPeeringConfigResponse {
		return v.Ipv6PeeringConfig
	}).(Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// Gets whether the provider or the customer last modified the peering.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormatResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The Microsoft peering configuration.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormatResponse) *ExpressRouteCircuitPeeringConfigResponse {
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// The peer ASN.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormatResponse) *int { return v.PeerASN }).(pulumi.IntPtrOutput)
}

// The peering type.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) PeeringType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormatResponse) *string { return v.PeeringType }).(pulumi.StringPtrOutput)
}

// The primary port.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) PrimaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormatResponse) *string { return v.PrimaryAzurePort }).(pulumi.StringPtrOutput)
}

// The primary address prefix.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormatResponse) *string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the RouteFilter resource.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) RouteFilter() RouteFilterResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormatResponse) *RouteFilterResponse { return v.RouteFilter }).(RouteFilterResponsePtrOutput)
}

// The secondary port.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) SecondaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormatResponse) *string { return v.SecondaryAzurePort }).(pulumi.StringPtrOutput)
}

// The secondary address prefix.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormatResponse) *string {
		return v.SecondaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The shared key.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormatResponse) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// The peering state.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormatResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Gets peering stats.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) Stats() ExpressRouteCircuitStatsResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormatResponse) *ExpressRouteCircuitStatsResponse {
		return v.Stats
	}).(ExpressRouteCircuitStatsResponsePtrOutput)
}

// The VLAN ID.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponseOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringPropertiesFormatResponse) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringPropertiesFormatResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) ToExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput() ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) ToExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) Elem() ExpressRouteCircuitPeeringPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormatResponse) ExpressRouteCircuitPeeringPropertiesFormatResponse {
		return *v
	}).(ExpressRouteCircuitPeeringPropertiesFormatResponseOutput)
}

// The Azure ASN.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) AzureASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.AzureASN
	}).(pulumi.IntPtrOutput)
}

// The list of circuit connections associated with Azure Private Peering for this circuit.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) Connections() ExpressRouteCircuitConnectionResponseArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormatResponse) []ExpressRouteCircuitConnectionResponse {
		if v == nil {
			return nil
		}
		return v.Connections
	}).(ExpressRouteCircuitConnectionResponseArrayOutput)
}

// The ExpressRoute connection.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) ExpressRouteConnection() ExpressRouteConnectionIdResponsePtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormatResponse) *ExpressRouteConnectionIdResponse {
		if v == nil {
			return nil
		}
		return v.ExpressRouteConnection
	}).(ExpressRouteConnectionIdResponsePtrOutput)
}

// The GatewayManager Etag.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) GatewayManagerEtag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.GatewayManagerEtag
	}).(pulumi.StringPtrOutput)
}

// The IPv6 peering configuration.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) Ipv6PeeringConfig() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormatResponse) *Ipv6ExpressRouteCircuitPeeringConfigResponse {
		if v == nil {
			return nil
		}
		return v.Ipv6PeeringConfig
	}).(Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// Gets whether the provider or the customer last modified the peering.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedBy
	}).(pulumi.StringPtrOutput)
}

// The Microsoft peering configuration.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormatResponse) *ExpressRouteCircuitPeeringConfigResponse {
		if v == nil {
			return nil
		}
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// The peer ASN.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.PeerASN
	}).(pulumi.IntPtrOutput)
}

// The peering type.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) PeeringType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.PeeringType
	}).(pulumi.StringPtrOutput)
}

// The primary port.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) PrimaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryAzurePort
	}).(pulumi.StringPtrOutput)
}

// The primary address prefix.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference of the RouteFilter resource.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) RouteFilter() RouteFilterResponsePtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormatResponse) *RouteFilterResponse {
		if v == nil {
			return nil
		}
		return v.RouteFilter
	}).(RouteFilterResponsePtrOutput)
}

// The secondary port.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) SecondaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryAzurePort
	}).(pulumi.StringPtrOutput)
}

// The secondary address prefix.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The shared key.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.SharedKey
	}).(pulumi.StringPtrOutput)
}

// The peering state.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Gets peering stats.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) Stats() ExpressRouteCircuitStatsResponsePtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormatResponse) *ExpressRouteCircuitStatsResponse {
		if v == nil {
			return nil
		}
		return v.Stats
	}).(ExpressRouteCircuitStatsResponsePtrOutput)
}

// The VLAN ID.
func (o ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringPropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.VlanId
	}).(pulumi.IntPtrOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name       *string                                             `pulumi:"name"`
	Properties *ExpressRouteCircuitPeeringPropertiesFormatResponse `pulumi:"properties"`
}

// ExpressRouteCircuitPeeringResponseInput is an input type that accepts ExpressRouteCircuitPeeringResponseArgs and ExpressRouteCircuitPeeringResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringResponseInput` via:
//
//          ExpressRouteCircuitPeeringResponseArgs{...}
type ExpressRouteCircuitPeeringResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringResponseOutput() ExpressRouteCircuitPeeringResponseOutput
	ToExpressRouteCircuitPeeringResponseOutputWithContext(context.Context) ExpressRouteCircuitPeeringResponseOutput
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name       pulumi.StringPtrInput                                      `pulumi:"name"`
	Properties ExpressRouteCircuitPeeringPropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (ExpressRouteCircuitPeeringResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringResponseArgs) ToExpressRouteCircuitPeeringResponseOutput() ExpressRouteCircuitPeeringResponseOutput {
	return i.ToExpressRouteCircuitPeeringResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringResponseArgs) ToExpressRouteCircuitPeeringResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringResponseOutput)
}

// ExpressRouteCircuitPeeringResponseArrayInput is an input type that accepts ExpressRouteCircuitPeeringResponseArray and ExpressRouteCircuitPeeringResponseArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringResponseArrayInput` via:
//
//          ExpressRouteCircuitPeeringResponseArray{ ExpressRouteCircuitPeeringResponseArgs{...} }
type ExpressRouteCircuitPeeringResponseArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringResponseArrayOutput() ExpressRouteCircuitPeeringResponseArrayOutput
	ToExpressRouteCircuitPeeringResponseArrayOutputWithContext(context.Context) ExpressRouteCircuitPeeringResponseArrayOutput
}

type ExpressRouteCircuitPeeringResponseArray []ExpressRouteCircuitPeeringResponseInput

func (ExpressRouteCircuitPeeringResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitPeeringResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringResponseArray) ToExpressRouteCircuitPeeringResponseArrayOutput() ExpressRouteCircuitPeeringResponseArrayOutput {
	return i.ToExpressRouteCircuitPeeringResponseArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringResponseArray) ToExpressRouteCircuitPeeringResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringResponseArrayOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringResponseOutput) ToExpressRouteCircuitPeeringResponseOutput() ExpressRouteCircuitPeeringResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringResponseOutput) ToExpressRouteCircuitPeeringResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteCircuitPeeringResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ExpressRouteCircuitPeeringResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitPeeringResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ExpressRouteCircuitPeeringResponseOutput) Properties() ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *ExpressRouteCircuitPeeringPropertiesFormatResponse {
		return v.Properties
	}).(ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput)
}

type ExpressRouteCircuitPeeringResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitPeeringResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringResponseArrayOutput) ToExpressRouteCircuitPeeringResponseArrayOutput() ExpressRouteCircuitPeeringResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitPeeringResponseArrayOutput) ToExpressRouteCircuitPeeringResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitPeeringResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitPeeringResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitPeeringResponse {
		return vs[0].([]ExpressRouteCircuitPeeringResponse)[vs[1].(int)]
	}).(ExpressRouteCircuitPeeringResponseOutput)
}

// Properties of ExpressRouteCircuit.
type ExpressRouteCircuitPropertiesFormat struct {
	// Allow classic operations
	AllowClassicOperations *bool `pulumi:"allowClassicOperations"`
	// Flag to enable Global Reach on the circuit.
	AllowGlobalReach *bool `pulumi:"allowGlobalReach"`
	// The list of authorizations.
	Authorizations []ExpressRouteCircuitAuthorizationType `pulumi:"authorizations"`
	// The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.
	BandwidthInGbps *float64 `pulumi:"bandwidthInGbps"`
	// The CircuitProvisioningState state of the resource.
	CircuitProvisioningState *string `pulumi:"circuitProvisioningState"`
	// The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource.
	ExpressRoutePort *SubResource `pulumi:"expressRoutePort"`
	// The GatewayManager Etag.
	GatewayManagerEtag *string `pulumi:"gatewayManagerEtag"`
	// The list of peerings.
	Peerings []ExpressRouteCircuitPeeringType `pulumi:"peerings"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The ServiceKey.
	ServiceKey *string `pulumi:"serviceKey"`
	// The ServiceProviderNotes.
	ServiceProviderNotes *string `pulumi:"serviceProviderNotes"`
	// The ServiceProviderProperties.
	ServiceProviderProperties *ExpressRouteCircuitServiceProviderProperties `pulumi:"serviceProviderProperties"`
	// The ServiceProviderProvisioningState state of the resource. Possible values are 'NotProvisioned', 'Provisioning', 'Provisioned', and 'Deprovisioning'.
	ServiceProviderProvisioningState *string `pulumi:"serviceProviderProvisioningState"`
}

// ExpressRouteCircuitPropertiesFormatInput is an input type that accepts ExpressRouteCircuitPropertiesFormatArgs and ExpressRouteCircuitPropertiesFormatOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPropertiesFormatInput` via:
//
//          ExpressRouteCircuitPropertiesFormatArgs{...}
type ExpressRouteCircuitPropertiesFormatInput interface {
	pulumi.Input

	ToExpressRouteCircuitPropertiesFormatOutput() ExpressRouteCircuitPropertiesFormatOutput
	ToExpressRouteCircuitPropertiesFormatOutputWithContext(context.Context) ExpressRouteCircuitPropertiesFormatOutput
}

// Properties of ExpressRouteCircuit.
type ExpressRouteCircuitPropertiesFormatArgs struct {
	// Allow classic operations
	AllowClassicOperations pulumi.BoolPtrInput `pulumi:"allowClassicOperations"`
	// Flag to enable Global Reach on the circuit.
	AllowGlobalReach pulumi.BoolPtrInput `pulumi:"allowGlobalReach"`
	// The list of authorizations.
	Authorizations ExpressRouteCircuitAuthorizationTypeArrayInput `pulumi:"authorizations"`
	// The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.
	BandwidthInGbps pulumi.Float64PtrInput `pulumi:"bandwidthInGbps"`
	// The CircuitProvisioningState state of the resource.
	CircuitProvisioningState pulumi.StringPtrInput `pulumi:"circuitProvisioningState"`
	// The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource.
	ExpressRoutePort SubResourcePtrInput `pulumi:"expressRoutePort"`
	// The GatewayManager Etag.
	GatewayManagerEtag pulumi.StringPtrInput `pulumi:"gatewayManagerEtag"`
	// The list of peerings.
	Peerings ExpressRouteCircuitPeeringTypeArrayInput `pulumi:"peerings"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The ServiceKey.
	ServiceKey pulumi.StringPtrInput `pulumi:"serviceKey"`
	// The ServiceProviderNotes.
	ServiceProviderNotes pulumi.StringPtrInput `pulumi:"serviceProviderNotes"`
	// The ServiceProviderProperties.
	ServiceProviderProperties ExpressRouteCircuitServiceProviderPropertiesPtrInput `pulumi:"serviceProviderProperties"`
	// The ServiceProviderProvisioningState state of the resource. Possible values are 'NotProvisioned', 'Provisioning', 'Provisioned', and 'Deprovisioning'.
	ServiceProviderProvisioningState pulumi.StringPtrInput `pulumi:"serviceProviderProvisioningState"`
}

func (ExpressRouteCircuitPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPropertiesFormat)(nil)).Elem()
}

func (i ExpressRouteCircuitPropertiesFormatArgs) ToExpressRouteCircuitPropertiesFormatOutput() ExpressRouteCircuitPropertiesFormatOutput {
	return i.ToExpressRouteCircuitPropertiesFormatOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPropertiesFormatArgs) ToExpressRouteCircuitPropertiesFormatOutputWithContext(ctx context.Context) ExpressRouteCircuitPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPropertiesFormatOutput)
}

func (i ExpressRouteCircuitPropertiesFormatArgs) ToExpressRouteCircuitPropertiesFormatPtrOutput() ExpressRouteCircuitPropertiesFormatPtrOutput {
	return i.ToExpressRouteCircuitPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPropertiesFormatArgs) ToExpressRouteCircuitPropertiesFormatPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPropertiesFormatOutput).ToExpressRouteCircuitPropertiesFormatPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitPropertiesFormatPtrInput is an input type that accepts ExpressRouteCircuitPropertiesFormatArgs, ExpressRouteCircuitPropertiesFormatPtr and ExpressRouteCircuitPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPropertiesFormatPtrInput` via:
//
//          ExpressRouteCircuitPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitPropertiesFormatPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPropertiesFormatPtrOutput() ExpressRouteCircuitPropertiesFormatPtrOutput
	ToExpressRouteCircuitPropertiesFormatPtrOutputWithContext(context.Context) ExpressRouteCircuitPropertiesFormatPtrOutput
}

type expressRouteCircuitPropertiesFormatPtrType ExpressRouteCircuitPropertiesFormatArgs

func ExpressRouteCircuitPropertiesFormatPtr(v *ExpressRouteCircuitPropertiesFormatArgs) ExpressRouteCircuitPropertiesFormatPtrInput {
	return (*expressRouteCircuitPropertiesFormatPtrType)(v)
}

func (*expressRouteCircuitPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPropertiesFormat)(nil)).Elem()
}

func (i *expressRouteCircuitPropertiesFormatPtrType) ToExpressRouteCircuitPropertiesFormatPtrOutput() ExpressRouteCircuitPropertiesFormatPtrOutput {
	return i.ToExpressRouteCircuitPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitPropertiesFormatPtrType) ToExpressRouteCircuitPropertiesFormatPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPropertiesFormatPtrOutput)
}

// Properties of ExpressRouteCircuit.
type ExpressRouteCircuitPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPropertiesFormat)(nil)).Elem()
}

func (o ExpressRouteCircuitPropertiesFormatOutput) ToExpressRouteCircuitPropertiesFormatOutput() ExpressRouteCircuitPropertiesFormatOutput {
	return o
}

func (o ExpressRouteCircuitPropertiesFormatOutput) ToExpressRouteCircuitPropertiesFormatOutputWithContext(ctx context.Context) ExpressRouteCircuitPropertiesFormatOutput {
	return o
}

func (o ExpressRouteCircuitPropertiesFormatOutput) ToExpressRouteCircuitPropertiesFormatPtrOutput() ExpressRouteCircuitPropertiesFormatPtrOutput {
	return o.ToExpressRouteCircuitPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPropertiesFormatOutput) ToExpressRouteCircuitPropertiesFormatPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormat) *ExpressRouteCircuitPropertiesFormat {
		return &v
	}).(ExpressRouteCircuitPropertiesFormatPtrOutput)
}

// Allow classic operations
func (o ExpressRouteCircuitPropertiesFormatOutput) AllowClassicOperations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormat) *bool { return v.AllowClassicOperations }).(pulumi.BoolPtrOutput)
}

// Flag to enable Global Reach on the circuit.
func (o ExpressRouteCircuitPropertiesFormatOutput) AllowGlobalReach() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormat) *bool { return v.AllowGlobalReach }).(pulumi.BoolPtrOutput)
}

// The list of authorizations.
func (o ExpressRouteCircuitPropertiesFormatOutput) Authorizations() ExpressRouteCircuitAuthorizationTypeArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormat) []ExpressRouteCircuitAuthorizationType {
		return v.Authorizations
	}).(ExpressRouteCircuitAuthorizationTypeArrayOutput)
}

// The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.
func (o ExpressRouteCircuitPropertiesFormatOutput) BandwidthInGbps() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormat) *float64 { return v.BandwidthInGbps }).(pulumi.Float64PtrOutput)
}

// The CircuitProvisioningState state of the resource.
func (o ExpressRouteCircuitPropertiesFormatOutput) CircuitProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormat) *string { return v.CircuitProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource.
func (o ExpressRouteCircuitPropertiesFormatOutput) ExpressRoutePort() SubResourcePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormat) *SubResource { return v.ExpressRoutePort }).(SubResourcePtrOutput)
}

// The GatewayManager Etag.
func (o ExpressRouteCircuitPropertiesFormatOutput) GatewayManagerEtag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormat) *string { return v.GatewayManagerEtag }).(pulumi.StringPtrOutput)
}

// The list of peerings.
func (o ExpressRouteCircuitPropertiesFormatOutput) Peerings() ExpressRouteCircuitPeeringTypeArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormat) []ExpressRouteCircuitPeeringType { return v.Peerings }).(ExpressRouteCircuitPeeringTypeArrayOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCircuitPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The ServiceKey.
func (o ExpressRouteCircuitPropertiesFormatOutput) ServiceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormat) *string { return v.ServiceKey }).(pulumi.StringPtrOutput)
}

// The ServiceProviderNotes.
func (o ExpressRouteCircuitPropertiesFormatOutput) ServiceProviderNotes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormat) *string { return v.ServiceProviderNotes }).(pulumi.StringPtrOutput)
}

// The ServiceProviderProperties.
func (o ExpressRouteCircuitPropertiesFormatOutput) ServiceProviderProperties() ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormat) *ExpressRouteCircuitServiceProviderProperties {
		return v.ServiceProviderProperties
	}).(ExpressRouteCircuitServiceProviderPropertiesPtrOutput)
}

// The ServiceProviderProvisioningState state of the resource. Possible values are 'NotProvisioned', 'Provisioning', 'Provisioned', and 'Deprovisioning'.
func (o ExpressRouteCircuitPropertiesFormatOutput) ServiceProviderProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormat) *string { return v.ServiceProviderProvisioningState }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPropertiesFormat)(nil)).Elem()
}

func (o ExpressRouteCircuitPropertiesFormatPtrOutput) ToExpressRouteCircuitPropertiesFormatPtrOutput() ExpressRouteCircuitPropertiesFormatPtrOutput {
	return o
}

func (o ExpressRouteCircuitPropertiesFormatPtrOutput) ToExpressRouteCircuitPropertiesFormatPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPropertiesFormatPtrOutput {
	return o
}

func (o ExpressRouteCircuitPropertiesFormatPtrOutput) Elem() ExpressRouteCircuitPropertiesFormatOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormat) ExpressRouteCircuitPropertiesFormat { return *v }).(ExpressRouteCircuitPropertiesFormatOutput)
}

// Allow classic operations
func (o ExpressRouteCircuitPropertiesFormatPtrOutput) AllowClassicOperations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.AllowClassicOperations
	}).(pulumi.BoolPtrOutput)
}

// Flag to enable Global Reach on the circuit.
func (o ExpressRouteCircuitPropertiesFormatPtrOutput) AllowGlobalReach() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.AllowGlobalReach
	}).(pulumi.BoolPtrOutput)
}

// The list of authorizations.
func (o ExpressRouteCircuitPropertiesFormatPtrOutput) Authorizations() ExpressRouteCircuitAuthorizationTypeArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormat) []ExpressRouteCircuitAuthorizationType {
		if v == nil {
			return nil
		}
		return v.Authorizations
	}).(ExpressRouteCircuitAuthorizationTypeArrayOutput)
}

// The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.
func (o ExpressRouteCircuitPropertiesFormatPtrOutput) BandwidthInGbps() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormat) *float64 {
		if v == nil {
			return nil
		}
		return v.BandwidthInGbps
	}).(pulumi.Float64PtrOutput)
}

// The CircuitProvisioningState state of the resource.
func (o ExpressRouteCircuitPropertiesFormatPtrOutput) CircuitProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.CircuitProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource.
func (o ExpressRouteCircuitPropertiesFormatPtrOutput) ExpressRoutePort() SubResourcePtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.ExpressRoutePort
	}).(SubResourcePtrOutput)
}

// The GatewayManager Etag.
func (o ExpressRouteCircuitPropertiesFormatPtrOutput) GatewayManagerEtag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.GatewayManagerEtag
	}).(pulumi.StringPtrOutput)
}

// The list of peerings.
func (o ExpressRouteCircuitPropertiesFormatPtrOutput) Peerings() ExpressRouteCircuitPeeringTypeArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormat) []ExpressRouteCircuitPeeringType {
		if v == nil {
			return nil
		}
		return v.Peerings
	}).(ExpressRouteCircuitPeeringTypeArrayOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCircuitPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The ServiceKey.
func (o ExpressRouteCircuitPropertiesFormatPtrOutput) ServiceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ServiceKey
	}).(pulumi.StringPtrOutput)
}

// The ServiceProviderNotes.
func (o ExpressRouteCircuitPropertiesFormatPtrOutput) ServiceProviderNotes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ServiceProviderNotes
	}).(pulumi.StringPtrOutput)
}

// The ServiceProviderProperties.
func (o ExpressRouteCircuitPropertiesFormatPtrOutput) ServiceProviderProperties() ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormat) *ExpressRouteCircuitServiceProviderProperties {
		if v == nil {
			return nil
		}
		return v.ServiceProviderProperties
	}).(ExpressRouteCircuitServiceProviderPropertiesPtrOutput)
}

// The ServiceProviderProvisioningState state of the resource. Possible values are 'NotProvisioned', 'Provisioning', 'Provisioned', and 'Deprovisioning'.
func (o ExpressRouteCircuitPropertiesFormatPtrOutput) ServiceProviderProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ServiceProviderProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Properties of ExpressRouteCircuit.
type ExpressRouteCircuitPropertiesFormatResponse struct {
	// Allow classic operations
	AllowClassicOperations *bool `pulumi:"allowClassicOperations"`
	// Flag to enable Global Reach on the circuit.
	AllowGlobalReach *bool `pulumi:"allowGlobalReach"`
	// The list of authorizations.
	Authorizations []ExpressRouteCircuitAuthorizationResponse `pulumi:"authorizations"`
	// The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.
	BandwidthInGbps *float64 `pulumi:"bandwidthInGbps"`
	// The CircuitProvisioningState state of the resource.
	CircuitProvisioningState *string `pulumi:"circuitProvisioningState"`
	// The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource.
	ExpressRoutePort *SubResourceResponse `pulumi:"expressRoutePort"`
	// The GatewayManager Etag.
	GatewayManagerEtag *string `pulumi:"gatewayManagerEtag"`
	// The list of peerings.
	Peerings []ExpressRouteCircuitPeeringResponse `pulumi:"peerings"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The ServiceKey.
	ServiceKey *string `pulumi:"serviceKey"`
	// The ServiceProviderNotes.
	ServiceProviderNotes *string `pulumi:"serviceProviderNotes"`
	// The ServiceProviderProperties.
	ServiceProviderProperties *ExpressRouteCircuitServiceProviderPropertiesResponse `pulumi:"serviceProviderProperties"`
	// The ServiceProviderProvisioningState state of the resource. Possible values are 'NotProvisioned', 'Provisioning', 'Provisioned', and 'Deprovisioning'.
	ServiceProviderProvisioningState *string `pulumi:"serviceProviderProvisioningState"`
	// The identifier of the circuit traffic. Outer tag for QinQ encapsulation.
	Stag int `pulumi:"stag"`
}

// ExpressRouteCircuitPropertiesFormatResponseInput is an input type that accepts ExpressRouteCircuitPropertiesFormatResponseArgs and ExpressRouteCircuitPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPropertiesFormatResponseInput` via:
//
//          ExpressRouteCircuitPropertiesFormatResponseArgs{...}
type ExpressRouteCircuitPropertiesFormatResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitPropertiesFormatResponseOutput() ExpressRouteCircuitPropertiesFormatResponseOutput
	ToExpressRouteCircuitPropertiesFormatResponseOutputWithContext(context.Context) ExpressRouteCircuitPropertiesFormatResponseOutput
}

// Properties of ExpressRouteCircuit.
type ExpressRouteCircuitPropertiesFormatResponseArgs struct {
	// Allow classic operations
	AllowClassicOperations pulumi.BoolPtrInput `pulumi:"allowClassicOperations"`
	// Flag to enable Global Reach on the circuit.
	AllowGlobalReach pulumi.BoolPtrInput `pulumi:"allowGlobalReach"`
	// The list of authorizations.
	Authorizations ExpressRouteCircuitAuthorizationResponseArrayInput `pulumi:"authorizations"`
	// The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.
	BandwidthInGbps pulumi.Float64PtrInput `pulumi:"bandwidthInGbps"`
	// The CircuitProvisioningState state of the resource.
	CircuitProvisioningState pulumi.StringPtrInput `pulumi:"circuitProvisioningState"`
	// The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource.
	ExpressRoutePort SubResourceResponsePtrInput `pulumi:"expressRoutePort"`
	// The GatewayManager Etag.
	GatewayManagerEtag pulumi.StringPtrInput `pulumi:"gatewayManagerEtag"`
	// The list of peerings.
	Peerings ExpressRouteCircuitPeeringResponseArrayInput `pulumi:"peerings"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The ServiceKey.
	ServiceKey pulumi.StringPtrInput `pulumi:"serviceKey"`
	// The ServiceProviderNotes.
	ServiceProviderNotes pulumi.StringPtrInput `pulumi:"serviceProviderNotes"`
	// The ServiceProviderProperties.
	ServiceProviderProperties ExpressRouteCircuitServiceProviderPropertiesResponsePtrInput `pulumi:"serviceProviderProperties"`
	// The ServiceProviderProvisioningState state of the resource. Possible values are 'NotProvisioned', 'Provisioning', 'Provisioned', and 'Deprovisioning'.
	ServiceProviderProvisioningState pulumi.StringPtrInput `pulumi:"serviceProviderProvisioningState"`
	// The identifier of the circuit traffic. Outer tag for QinQ encapsulation.
	Stag pulumi.IntInput `pulumi:"stag"`
}

func (ExpressRouteCircuitPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPropertiesFormatResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitPropertiesFormatResponseArgs) ToExpressRouteCircuitPropertiesFormatResponseOutput() ExpressRouteCircuitPropertiesFormatResponseOutput {
	return i.ToExpressRouteCircuitPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPropertiesFormatResponseArgs) ToExpressRouteCircuitPropertiesFormatResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPropertiesFormatResponseOutput)
}

func (i ExpressRouteCircuitPropertiesFormatResponseArgs) ToExpressRouteCircuitPropertiesFormatResponsePtrOutput() ExpressRouteCircuitPropertiesFormatResponsePtrOutput {
	return i.ToExpressRouteCircuitPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPropertiesFormatResponseArgs) ToExpressRouteCircuitPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPropertiesFormatResponseOutput).ToExpressRouteCircuitPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitPropertiesFormatResponsePtrInput is an input type that accepts ExpressRouteCircuitPropertiesFormatResponseArgs, ExpressRouteCircuitPropertiesFormatResponsePtr and ExpressRouteCircuitPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPropertiesFormatResponsePtrInput` via:
//
//          ExpressRouteCircuitPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPropertiesFormatResponsePtrOutput() ExpressRouteCircuitPropertiesFormatResponsePtrOutput
	ToExpressRouteCircuitPropertiesFormatResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitPropertiesFormatResponsePtrOutput
}

type expressRouteCircuitPropertiesFormatResponsePtrType ExpressRouteCircuitPropertiesFormatResponseArgs

func ExpressRouteCircuitPropertiesFormatResponsePtr(v *ExpressRouteCircuitPropertiesFormatResponseArgs) ExpressRouteCircuitPropertiesFormatResponsePtrInput {
	return (*expressRouteCircuitPropertiesFormatResponsePtrType)(v)
}

func (*expressRouteCircuitPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPropertiesFormatResponse)(nil)).Elem()
}

func (i *expressRouteCircuitPropertiesFormatResponsePtrType) ToExpressRouteCircuitPropertiesFormatResponsePtrOutput() ExpressRouteCircuitPropertiesFormatResponsePtrOutput {
	return i.ToExpressRouteCircuitPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitPropertiesFormatResponsePtrType) ToExpressRouteCircuitPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPropertiesFormatResponsePtrOutput)
}

// Properties of ExpressRouteCircuit.
type ExpressRouteCircuitPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPropertiesFormatResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPropertiesFormatResponseOutput) ToExpressRouteCircuitPropertiesFormatResponseOutput() ExpressRouteCircuitPropertiesFormatResponseOutput {
	return o
}

func (o ExpressRouteCircuitPropertiesFormatResponseOutput) ToExpressRouteCircuitPropertiesFormatResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPropertiesFormatResponseOutput {
	return o
}

func (o ExpressRouteCircuitPropertiesFormatResponseOutput) ToExpressRouteCircuitPropertiesFormatResponsePtrOutput() ExpressRouteCircuitPropertiesFormatResponsePtrOutput {
	return o.ToExpressRouteCircuitPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPropertiesFormatResponseOutput) ToExpressRouteCircuitPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormatResponse) *ExpressRouteCircuitPropertiesFormatResponse {
		return &v
	}).(ExpressRouteCircuitPropertiesFormatResponsePtrOutput)
}

// Allow classic operations
func (o ExpressRouteCircuitPropertiesFormatResponseOutput) AllowClassicOperations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormatResponse) *bool { return v.AllowClassicOperations }).(pulumi.BoolPtrOutput)
}

// Flag to enable Global Reach on the circuit.
func (o ExpressRouteCircuitPropertiesFormatResponseOutput) AllowGlobalReach() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormatResponse) *bool { return v.AllowGlobalReach }).(pulumi.BoolPtrOutput)
}

// The list of authorizations.
func (o ExpressRouteCircuitPropertiesFormatResponseOutput) Authorizations() ExpressRouteCircuitAuthorizationResponseArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormatResponse) []ExpressRouteCircuitAuthorizationResponse {
		return v.Authorizations
	}).(ExpressRouteCircuitAuthorizationResponseArrayOutput)
}

// The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.
func (o ExpressRouteCircuitPropertiesFormatResponseOutput) BandwidthInGbps() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormatResponse) *float64 { return v.BandwidthInGbps }).(pulumi.Float64PtrOutput)
}

// The CircuitProvisioningState state of the resource.
func (o ExpressRouteCircuitPropertiesFormatResponseOutput) CircuitProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormatResponse) *string { return v.CircuitProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource.
func (o ExpressRouteCircuitPropertiesFormatResponseOutput) ExpressRoutePort() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormatResponse) *SubResourceResponse { return v.ExpressRoutePort }).(SubResourceResponsePtrOutput)
}

// The GatewayManager Etag.
func (o ExpressRouteCircuitPropertiesFormatResponseOutput) GatewayManagerEtag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormatResponse) *string { return v.GatewayManagerEtag }).(pulumi.StringPtrOutput)
}

// The list of peerings.
func (o ExpressRouteCircuitPropertiesFormatResponseOutput) Peerings() ExpressRouteCircuitPeeringResponseArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormatResponse) []ExpressRouteCircuitPeeringResponse {
		return v.Peerings
	}).(ExpressRouteCircuitPeeringResponseArrayOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCircuitPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The ServiceKey.
func (o ExpressRouteCircuitPropertiesFormatResponseOutput) ServiceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormatResponse) *string { return v.ServiceKey }).(pulumi.StringPtrOutput)
}

// The ServiceProviderNotes.
func (o ExpressRouteCircuitPropertiesFormatResponseOutput) ServiceProviderNotes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormatResponse) *string { return v.ServiceProviderNotes }).(pulumi.StringPtrOutput)
}

// The ServiceProviderProperties.
func (o ExpressRouteCircuitPropertiesFormatResponseOutput) ServiceProviderProperties() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormatResponse) *ExpressRouteCircuitServiceProviderPropertiesResponse {
		return v.ServiceProviderProperties
	}).(ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput)
}

// The ServiceProviderProvisioningState state of the resource. Possible values are 'NotProvisioned', 'Provisioning', 'Provisioned', and 'Deprovisioning'.
func (o ExpressRouteCircuitPropertiesFormatResponseOutput) ServiceProviderProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormatResponse) *string { return v.ServiceProviderProvisioningState }).(pulumi.StringPtrOutput)
}

// The identifier of the circuit traffic. Outer tag for QinQ encapsulation.
func (o ExpressRouteCircuitPropertiesFormatResponseOutput) Stag() pulumi.IntOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPropertiesFormatResponse) int { return v.Stag }).(pulumi.IntOutput)
}

type ExpressRouteCircuitPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPropertiesFormatResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPropertiesFormatResponsePtrOutput) ToExpressRouteCircuitPropertiesFormatResponsePtrOutput() ExpressRouteCircuitPropertiesFormatResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitPropertiesFormatResponsePtrOutput) ToExpressRouteCircuitPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPropertiesFormatResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitPropertiesFormatResponsePtrOutput) Elem() ExpressRouteCircuitPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormatResponse) ExpressRouteCircuitPropertiesFormatResponse {
		return *v
	}).(ExpressRouteCircuitPropertiesFormatResponseOutput)
}

// Allow classic operations
func (o ExpressRouteCircuitPropertiesFormatResponsePtrOutput) AllowClassicOperations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowClassicOperations
	}).(pulumi.BoolPtrOutput)
}

// Flag to enable Global Reach on the circuit.
func (o ExpressRouteCircuitPropertiesFormatResponsePtrOutput) AllowGlobalReach() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowGlobalReach
	}).(pulumi.BoolPtrOutput)
}

// The list of authorizations.
func (o ExpressRouteCircuitPropertiesFormatResponsePtrOutput) Authorizations() ExpressRouteCircuitAuthorizationResponseArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormatResponse) []ExpressRouteCircuitAuthorizationResponse {
		if v == nil {
			return nil
		}
		return v.Authorizations
	}).(ExpressRouteCircuitAuthorizationResponseArrayOutput)
}

// The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.
func (o ExpressRouteCircuitPropertiesFormatResponsePtrOutput) BandwidthInGbps() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormatResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.BandwidthInGbps
	}).(pulumi.Float64PtrOutput)
}

// The CircuitProvisioningState state of the resource.
func (o ExpressRouteCircuitPropertiesFormatResponsePtrOutput) CircuitProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.CircuitProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource.
func (o ExpressRouteCircuitPropertiesFormatResponsePtrOutput) ExpressRoutePort() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.ExpressRoutePort
	}).(SubResourceResponsePtrOutput)
}

// The GatewayManager Etag.
func (o ExpressRouteCircuitPropertiesFormatResponsePtrOutput) GatewayManagerEtag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.GatewayManagerEtag
	}).(pulumi.StringPtrOutput)
}

// The list of peerings.
func (o ExpressRouteCircuitPropertiesFormatResponsePtrOutput) Peerings() ExpressRouteCircuitPeeringResponseArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormatResponse) []ExpressRouteCircuitPeeringResponse {
		if v == nil {
			return nil
		}
		return v.Peerings
	}).(ExpressRouteCircuitPeeringResponseArrayOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCircuitPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The ServiceKey.
func (o ExpressRouteCircuitPropertiesFormatResponsePtrOutput) ServiceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceKey
	}).(pulumi.StringPtrOutput)
}

// The ServiceProviderNotes.
func (o ExpressRouteCircuitPropertiesFormatResponsePtrOutput) ServiceProviderNotes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceProviderNotes
	}).(pulumi.StringPtrOutput)
}

// The ServiceProviderProperties.
func (o ExpressRouteCircuitPropertiesFormatResponsePtrOutput) ServiceProviderProperties() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormatResponse) *ExpressRouteCircuitServiceProviderPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.ServiceProviderProperties
	}).(ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput)
}

// The ServiceProviderProvisioningState state of the resource. Possible values are 'NotProvisioned', 'Provisioning', 'Provisioned', and 'Deprovisioning'.
func (o ExpressRouteCircuitPropertiesFormatResponsePtrOutput) ServiceProviderProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceProviderProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The identifier of the circuit traffic. Outer tag for QinQ encapsulation.
func (o ExpressRouteCircuitPropertiesFormatResponsePtrOutput) Stag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Stag
	}).(pulumi.IntPtrOutput)
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderProperties struct {
	// The BandwidthInMbps.
	BandwidthInMbps *int `pulumi:"bandwidthInMbps"`
	// The peering location.
	PeeringLocation *string `pulumi:"peeringLocation"`
	// The serviceProviderName.
	ServiceProviderName *string `pulumi:"serviceProviderName"`
}

// ExpressRouteCircuitServiceProviderPropertiesInput is an input type that accepts ExpressRouteCircuitServiceProviderPropertiesArgs and ExpressRouteCircuitServiceProviderPropertiesOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitServiceProviderPropertiesInput` via:
//
//          ExpressRouteCircuitServiceProviderPropertiesArgs{...}
type ExpressRouteCircuitServiceProviderPropertiesInput interface {
	pulumi.Input

	ToExpressRouteCircuitServiceProviderPropertiesOutput() ExpressRouteCircuitServiceProviderPropertiesOutput
	ToExpressRouteCircuitServiceProviderPropertiesOutputWithContext(context.Context) ExpressRouteCircuitServiceProviderPropertiesOutput
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesArgs struct {
	// The BandwidthInMbps.
	BandwidthInMbps pulumi.IntPtrInput `pulumi:"bandwidthInMbps"`
	// The peering location.
	PeeringLocation pulumi.StringPtrInput `pulumi:"peeringLocation"`
	// The serviceProviderName.
	ServiceProviderName pulumi.StringPtrInput `pulumi:"serviceProviderName"`
}

func (ExpressRouteCircuitServiceProviderPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitServiceProviderProperties)(nil)).Elem()
}

func (i ExpressRouteCircuitServiceProviderPropertiesArgs) ToExpressRouteCircuitServiceProviderPropertiesOutput() ExpressRouteCircuitServiceProviderPropertiesOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitServiceProviderPropertiesArgs) ToExpressRouteCircuitServiceProviderPropertiesOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesOutput)
}

func (i ExpressRouteCircuitServiceProviderPropertiesArgs) ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitServiceProviderPropertiesArgs) ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesOutput).ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitServiceProviderPropertiesPtrInput is an input type that accepts ExpressRouteCircuitServiceProviderPropertiesArgs, ExpressRouteCircuitServiceProviderPropertiesPtr and ExpressRouteCircuitServiceProviderPropertiesPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitServiceProviderPropertiesPtrInput` via:
//
//          ExpressRouteCircuitServiceProviderPropertiesArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitServiceProviderPropertiesPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput
	ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput
}

type expressRouteCircuitServiceProviderPropertiesPtrType ExpressRouteCircuitServiceProviderPropertiesArgs

func ExpressRouteCircuitServiceProviderPropertiesPtr(v *ExpressRouteCircuitServiceProviderPropertiesArgs) ExpressRouteCircuitServiceProviderPropertiesPtrInput {
	return (*expressRouteCircuitServiceProviderPropertiesPtrType)(v)
}

func (*expressRouteCircuitServiceProviderPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitServiceProviderProperties)(nil)).Elem()
}

func (i *expressRouteCircuitServiceProviderPropertiesPtrType) ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitServiceProviderPropertiesPtrType) ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesPtrOutput)
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitServiceProviderPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitServiceProviderProperties)(nil)).Elem()
}

func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ToExpressRouteCircuitServiceProviderPropertiesOutput() ExpressRouteCircuitServiceProviderPropertiesOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ToExpressRouteCircuitServiceProviderPropertiesOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return o.ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderProperties) *ExpressRouteCircuitServiceProviderProperties {
		return &v
	}).(ExpressRouteCircuitServiceProviderPropertiesPtrOutput)
}

// The BandwidthInMbps.
func (o ExpressRouteCircuitServiceProviderPropertiesOutput) BandwidthInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderProperties) *int { return v.BandwidthInMbps }).(pulumi.IntPtrOutput)
}

// The peering location.
func (o ExpressRouteCircuitServiceProviderPropertiesOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderProperties) *string { return v.PeeringLocation }).(pulumi.StringPtrOutput)
}

// The serviceProviderName.
func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderProperties) *string { return v.ServiceProviderName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitServiceProviderPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitServiceProviderPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitServiceProviderProperties)(nil)).Elem()
}

func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) Elem() ExpressRouteCircuitServiceProviderPropertiesOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderProperties) ExpressRouteCircuitServiceProviderProperties {
		return *v
	}).(ExpressRouteCircuitServiceProviderPropertiesOutput)
}

// The BandwidthInMbps.
func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) BandwidthInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderProperties) *int {
		if v == nil {
			return nil
		}
		return v.BandwidthInMbps
	}).(pulumi.IntPtrOutput)
}

// The peering location.
func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderProperties) *string {
		if v == nil {
			return nil
		}
		return v.PeeringLocation
	}).(pulumi.StringPtrOutput)
}

// The serviceProviderName.
func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServiceProviderName
	}).(pulumi.StringPtrOutput)
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesResponse struct {
	// The BandwidthInMbps.
	BandwidthInMbps *int `pulumi:"bandwidthInMbps"`
	// The peering location.
	PeeringLocation *string `pulumi:"peeringLocation"`
	// The serviceProviderName.
	ServiceProviderName *string `pulumi:"serviceProviderName"`
}

// ExpressRouteCircuitServiceProviderPropertiesResponseInput is an input type that accepts ExpressRouteCircuitServiceProviderPropertiesResponseArgs and ExpressRouteCircuitServiceProviderPropertiesResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitServiceProviderPropertiesResponseInput` via:
//
//          ExpressRouteCircuitServiceProviderPropertiesResponseArgs{...}
type ExpressRouteCircuitServiceProviderPropertiesResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitServiceProviderPropertiesResponseOutput() ExpressRouteCircuitServiceProviderPropertiesResponseOutput
	ToExpressRouteCircuitServiceProviderPropertiesResponseOutputWithContext(context.Context) ExpressRouteCircuitServiceProviderPropertiesResponseOutput
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesResponseArgs struct {
	// The BandwidthInMbps.
	BandwidthInMbps pulumi.IntPtrInput `pulumi:"bandwidthInMbps"`
	// The peering location.
	PeeringLocation pulumi.StringPtrInput `pulumi:"peeringLocation"`
	// The serviceProviderName.
	ServiceProviderName pulumi.StringPtrInput `pulumi:"serviceProviderName"`
}

func (ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitServiceProviderPropertiesResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ToExpressRouteCircuitServiceProviderPropertiesResponseOutput() ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ToExpressRouteCircuitServiceProviderPropertiesResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesResponseOutput)
}

func (i ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesResponseOutput).ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitServiceProviderPropertiesResponsePtrInput is an input type that accepts ExpressRouteCircuitServiceProviderPropertiesResponseArgs, ExpressRouteCircuitServiceProviderPropertiesResponsePtr and ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitServiceProviderPropertiesResponsePtrInput` via:
//
//          ExpressRouteCircuitServiceProviderPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitServiceProviderPropertiesResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput
	ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput
}

type expressRouteCircuitServiceProviderPropertiesResponsePtrType ExpressRouteCircuitServiceProviderPropertiesResponseArgs

func ExpressRouteCircuitServiceProviderPropertiesResponsePtr(v *ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ExpressRouteCircuitServiceProviderPropertiesResponsePtrInput {
	return (*expressRouteCircuitServiceProviderPropertiesResponsePtrType)(v)
}

func (*expressRouteCircuitServiceProviderPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitServiceProviderPropertiesResponse)(nil)).Elem()
}

func (i *expressRouteCircuitServiceProviderPropertiesResponsePtrType) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitServiceProviderPropertiesResponsePtrType) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput)
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitServiceProviderPropertiesResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ToExpressRouteCircuitServiceProviderPropertiesResponseOutput() ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ToExpressRouteCircuitServiceProviderPropertiesResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return o.ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderPropertiesResponse) *ExpressRouteCircuitServiceProviderPropertiesResponse {
		return &v
	}).(ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput)
}

// The BandwidthInMbps.
func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) BandwidthInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderPropertiesResponse) *int { return v.BandwidthInMbps }).(pulumi.IntPtrOutput)
}

// The peering location.
func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderPropertiesResponse) *string { return v.PeeringLocation }).(pulumi.StringPtrOutput)
}

// The serviceProviderName.
func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderPropertiesResponse) *string { return v.ServiceProviderName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitServiceProviderPropertiesResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) Elem() ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderPropertiesResponse) ExpressRouteCircuitServiceProviderPropertiesResponse {
		return *v
	}).(ExpressRouteCircuitServiceProviderPropertiesResponseOutput)
}

// The BandwidthInMbps.
func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) BandwidthInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.BandwidthInMbps
	}).(pulumi.IntPtrOutput)
}

// The peering location.
func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PeeringLocation
	}).(pulumi.StringPtrOutput)
}

// The serviceProviderName.
func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceProviderName
	}).(pulumi.StringPtrOutput)
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSku struct {
	// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
	Family *string `pulumi:"family"`
	// The name of the SKU.
	Name *string `pulumi:"name"`
	// The tier of the SKU. Possible values are 'Standard', 'Premium' or 'Basic'.
	Tier *string `pulumi:"tier"`
}

// ExpressRouteCircuitSkuInput is an input type that accepts ExpressRouteCircuitSkuArgs and ExpressRouteCircuitSkuOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitSkuInput` via:
//
//          ExpressRouteCircuitSkuArgs{...}
type ExpressRouteCircuitSkuInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuOutput() ExpressRouteCircuitSkuOutput
	ToExpressRouteCircuitSkuOutputWithContext(context.Context) ExpressRouteCircuitSkuOutput
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuArgs struct {
	// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The name of the SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The tier of the SKU. Possible values are 'Standard', 'Premium' or 'Basic'.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ExpressRouteCircuitSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSku)(nil)).Elem()
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuOutput() ExpressRouteCircuitSkuOutput {
	return i.ToExpressRouteCircuitSkuOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuOutput)
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return i.ToExpressRouteCircuitSkuPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuOutput).ToExpressRouteCircuitSkuPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitSkuPtrInput is an input type that accepts ExpressRouteCircuitSkuArgs, ExpressRouteCircuitSkuPtr and ExpressRouteCircuitSkuPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitSkuPtrInput` via:
//
//          ExpressRouteCircuitSkuArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitSkuPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput
	ToExpressRouteCircuitSkuPtrOutputWithContext(context.Context) ExpressRouteCircuitSkuPtrOutput
}

type expressRouteCircuitSkuPtrType ExpressRouteCircuitSkuArgs

func ExpressRouteCircuitSkuPtr(v *ExpressRouteCircuitSkuArgs) ExpressRouteCircuitSkuPtrInput {
	return (*expressRouteCircuitSkuPtrType)(v)
}

func (*expressRouteCircuitSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSku)(nil)).Elem()
}

func (i *expressRouteCircuitSkuPtrType) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return i.ToExpressRouteCircuitSkuPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitSkuPtrType) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuPtrOutput)
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSku)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuOutput() ExpressRouteCircuitSkuOutput {
	return o
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuOutput {
	return o
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return o.ToExpressRouteCircuitSkuPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSku) *ExpressRouteCircuitSku {
		return &v
	}).(ExpressRouteCircuitSkuPtrOutput)
}

// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
func (o ExpressRouteCircuitSkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o ExpressRouteCircuitSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The tier of the SKU. Possible values are 'Standard', 'Premium' or 'Basic'.
func (o ExpressRouteCircuitSkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitSkuPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSku)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuPtrOutput) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuPtrOutput) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuPtrOutput) Elem() ExpressRouteCircuitSkuOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) ExpressRouteCircuitSku { return *v }).(ExpressRouteCircuitSkuOutput)
}

// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
func (o ExpressRouteCircuitSkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o ExpressRouteCircuitSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The tier of the SKU. Possible values are 'Standard', 'Premium' or 'Basic'.
func (o ExpressRouteCircuitSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuResponse struct {
	// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
	Family *string `pulumi:"family"`
	// The name of the SKU.
	Name *string `pulumi:"name"`
	// The tier of the SKU. Possible values are 'Standard', 'Premium' or 'Basic'.
	Tier *string `pulumi:"tier"`
}

// ExpressRouteCircuitSkuResponseInput is an input type that accepts ExpressRouteCircuitSkuResponseArgs and ExpressRouteCircuitSkuResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitSkuResponseInput` via:
//
//          ExpressRouteCircuitSkuResponseArgs{...}
type ExpressRouteCircuitSkuResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuResponseOutput() ExpressRouteCircuitSkuResponseOutput
	ToExpressRouteCircuitSkuResponseOutputWithContext(context.Context) ExpressRouteCircuitSkuResponseOutput
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuResponseArgs struct {
	// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The name of the SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The tier of the SKU. Possible values are 'Standard', 'Premium' or 'Basic'.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ExpressRouteCircuitSkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSkuResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitSkuResponseArgs) ToExpressRouteCircuitSkuResponseOutput() ExpressRouteCircuitSkuResponseOutput {
	return i.ToExpressRouteCircuitSkuResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitSkuResponseArgs) ToExpressRouteCircuitSkuResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuResponseOutput)
}

func (i ExpressRouteCircuitSkuResponseArgs) ToExpressRouteCircuitSkuResponsePtrOutput() ExpressRouteCircuitSkuResponsePtrOutput {
	return i.ToExpressRouteCircuitSkuResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitSkuResponseArgs) ToExpressRouteCircuitSkuResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuResponseOutput).ToExpressRouteCircuitSkuResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitSkuResponsePtrInput is an input type that accepts ExpressRouteCircuitSkuResponseArgs, ExpressRouteCircuitSkuResponsePtr and ExpressRouteCircuitSkuResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitSkuResponsePtrInput` via:
//
//          ExpressRouteCircuitSkuResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitSkuResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuResponsePtrOutput() ExpressRouteCircuitSkuResponsePtrOutput
	ToExpressRouteCircuitSkuResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitSkuResponsePtrOutput
}

type expressRouteCircuitSkuResponsePtrType ExpressRouteCircuitSkuResponseArgs

func ExpressRouteCircuitSkuResponsePtr(v *ExpressRouteCircuitSkuResponseArgs) ExpressRouteCircuitSkuResponsePtrInput {
	return (*expressRouteCircuitSkuResponsePtrType)(v)
}

func (*expressRouteCircuitSkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSkuResponse)(nil)).Elem()
}

func (i *expressRouteCircuitSkuResponsePtrType) ToExpressRouteCircuitSkuResponsePtrOutput() ExpressRouteCircuitSkuResponsePtrOutput {
	return i.ToExpressRouteCircuitSkuResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitSkuResponsePtrType) ToExpressRouteCircuitSkuResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuResponsePtrOutput)
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSkuResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuResponseOutput) ToExpressRouteCircuitSkuResponseOutput() ExpressRouteCircuitSkuResponseOutput {
	return o
}

func (o ExpressRouteCircuitSkuResponseOutput) ToExpressRouteCircuitSkuResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponseOutput {
	return o
}

func (o ExpressRouteCircuitSkuResponseOutput) ToExpressRouteCircuitSkuResponsePtrOutput() ExpressRouteCircuitSkuResponsePtrOutput {
	return o.ToExpressRouteCircuitSkuResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitSkuResponseOutput) ToExpressRouteCircuitSkuResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSkuResponse) *ExpressRouteCircuitSkuResponse {
		return &v
	}).(ExpressRouteCircuitSkuResponsePtrOutput)
}

// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
func (o ExpressRouteCircuitSkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o ExpressRouteCircuitSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The tier of the SKU. Possible values are 'Standard', 'Premium' or 'Basic'.
func (o ExpressRouteCircuitSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSkuResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuResponsePtrOutput) ToExpressRouteCircuitSkuResponsePtrOutput() ExpressRouteCircuitSkuResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuResponsePtrOutput) ToExpressRouteCircuitSkuResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuResponsePtrOutput) Elem() ExpressRouteCircuitSkuResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSkuResponse) ExpressRouteCircuitSkuResponse { return *v }).(ExpressRouteCircuitSkuResponseOutput)
}

// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
func (o ExpressRouteCircuitSkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o ExpressRouteCircuitSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The tier of the SKU. Possible values are 'Standard', 'Premium' or 'Basic'.
func (o ExpressRouteCircuitSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStats struct {
	// Gets BytesIn of the peering.
	PrimarybytesIn *int `pulumi:"primarybytesIn"`
	// Gets BytesOut of the peering.
	PrimarybytesOut *int `pulumi:"primarybytesOut"`
	// Gets BytesIn of the peering.
	SecondarybytesIn *int `pulumi:"secondarybytesIn"`
	// Gets BytesOut of the peering.
	SecondarybytesOut *int `pulumi:"secondarybytesOut"`
}

// ExpressRouteCircuitStatsInput is an input type that accepts ExpressRouteCircuitStatsArgs and ExpressRouteCircuitStatsOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitStatsInput` via:
//
//          ExpressRouteCircuitStatsArgs{...}
type ExpressRouteCircuitStatsInput interface {
	pulumi.Input

	ToExpressRouteCircuitStatsOutput() ExpressRouteCircuitStatsOutput
	ToExpressRouteCircuitStatsOutputWithContext(context.Context) ExpressRouteCircuitStatsOutput
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsArgs struct {
	// Gets BytesIn of the peering.
	PrimarybytesIn pulumi.IntPtrInput `pulumi:"primarybytesIn"`
	// Gets BytesOut of the peering.
	PrimarybytesOut pulumi.IntPtrInput `pulumi:"primarybytesOut"`
	// Gets BytesIn of the peering.
	SecondarybytesIn pulumi.IntPtrInput `pulumi:"secondarybytesIn"`
	// Gets BytesOut of the peering.
	SecondarybytesOut pulumi.IntPtrInput `pulumi:"secondarybytesOut"`
}

func (ExpressRouteCircuitStatsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitStats)(nil)).Elem()
}

func (i ExpressRouteCircuitStatsArgs) ToExpressRouteCircuitStatsOutput() ExpressRouteCircuitStatsOutput {
	return i.ToExpressRouteCircuitStatsOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitStatsArgs) ToExpressRouteCircuitStatsOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsOutput)
}

func (i ExpressRouteCircuitStatsArgs) ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput {
	return i.ToExpressRouteCircuitStatsPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitStatsArgs) ToExpressRouteCircuitStatsPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsOutput).ToExpressRouteCircuitStatsPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitStatsPtrInput is an input type that accepts ExpressRouteCircuitStatsArgs, ExpressRouteCircuitStatsPtr and ExpressRouteCircuitStatsPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitStatsPtrInput` via:
//
//          ExpressRouteCircuitStatsArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitStatsPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput
	ToExpressRouteCircuitStatsPtrOutputWithContext(context.Context) ExpressRouteCircuitStatsPtrOutput
}

type expressRouteCircuitStatsPtrType ExpressRouteCircuitStatsArgs

func ExpressRouteCircuitStatsPtr(v *ExpressRouteCircuitStatsArgs) ExpressRouteCircuitStatsPtrInput {
	return (*expressRouteCircuitStatsPtrType)(v)
}

func (*expressRouteCircuitStatsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitStats)(nil)).Elem()
}

func (i *expressRouteCircuitStatsPtrType) ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput {
	return i.ToExpressRouteCircuitStatsPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitStatsPtrType) ToExpressRouteCircuitStatsPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsPtrOutput)
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitStatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitStats)(nil)).Elem()
}

func (o ExpressRouteCircuitStatsOutput) ToExpressRouteCircuitStatsOutput() ExpressRouteCircuitStatsOutput {
	return o
}

func (o ExpressRouteCircuitStatsOutput) ToExpressRouteCircuitStatsOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsOutput {
	return o
}

func (o ExpressRouteCircuitStatsOutput) ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput {
	return o.ToExpressRouteCircuitStatsPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitStatsOutput) ToExpressRouteCircuitStatsPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStats) *ExpressRouteCircuitStats {
		return &v
	}).(ExpressRouteCircuitStatsPtrOutput)
}

// Gets BytesIn of the peering.
func (o ExpressRouteCircuitStatsOutput) PrimarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStats) *int { return v.PrimarybytesIn }).(pulumi.IntPtrOutput)
}

// Gets BytesOut of the peering.
func (o ExpressRouteCircuitStatsOutput) PrimarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStats) *int { return v.PrimarybytesOut }).(pulumi.IntPtrOutput)
}

// Gets BytesIn of the peering.
func (o ExpressRouteCircuitStatsOutput) SecondarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStats) *int { return v.SecondarybytesIn }).(pulumi.IntPtrOutput)
}

// Gets BytesOut of the peering.
func (o ExpressRouteCircuitStatsOutput) SecondarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStats) *int { return v.SecondarybytesOut }).(pulumi.IntPtrOutput)
}

type ExpressRouteCircuitStatsPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitStatsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitStats)(nil)).Elem()
}

func (o ExpressRouteCircuitStatsPtrOutput) ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput {
	return o
}

func (o ExpressRouteCircuitStatsPtrOutput) ToExpressRouteCircuitStatsPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsPtrOutput {
	return o
}

func (o ExpressRouteCircuitStatsPtrOutput) Elem() ExpressRouteCircuitStatsOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) ExpressRouteCircuitStats { return *v }).(ExpressRouteCircuitStatsOutput)
}

// Gets BytesIn of the peering.
func (o ExpressRouteCircuitStatsPtrOutput) PrimarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) *int {
		if v == nil {
			return nil
		}
		return v.PrimarybytesIn
	}).(pulumi.IntPtrOutput)
}

// Gets BytesOut of the peering.
func (o ExpressRouteCircuitStatsPtrOutput) PrimarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) *int {
		if v == nil {
			return nil
		}
		return v.PrimarybytesOut
	}).(pulumi.IntPtrOutput)
}

// Gets BytesIn of the peering.
func (o ExpressRouteCircuitStatsPtrOutput) SecondarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) *int {
		if v == nil {
			return nil
		}
		return v.SecondarybytesIn
	}).(pulumi.IntPtrOutput)
}

// Gets BytesOut of the peering.
func (o ExpressRouteCircuitStatsPtrOutput) SecondarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) *int {
		if v == nil {
			return nil
		}
		return v.SecondarybytesOut
	}).(pulumi.IntPtrOutput)
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsResponse struct {
	// Gets BytesIn of the peering.
	PrimarybytesIn *int `pulumi:"primarybytesIn"`
	// Gets BytesOut of the peering.
	PrimarybytesOut *int `pulumi:"primarybytesOut"`
	// Gets BytesIn of the peering.
	SecondarybytesIn *int `pulumi:"secondarybytesIn"`
	// Gets BytesOut of the peering.
	SecondarybytesOut *int `pulumi:"secondarybytesOut"`
}

// ExpressRouteCircuitStatsResponseInput is an input type that accepts ExpressRouteCircuitStatsResponseArgs and ExpressRouteCircuitStatsResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitStatsResponseInput` via:
//
//          ExpressRouteCircuitStatsResponseArgs{...}
type ExpressRouteCircuitStatsResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitStatsResponseOutput() ExpressRouteCircuitStatsResponseOutput
	ToExpressRouteCircuitStatsResponseOutputWithContext(context.Context) ExpressRouteCircuitStatsResponseOutput
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsResponseArgs struct {
	// Gets BytesIn of the peering.
	PrimarybytesIn pulumi.IntPtrInput `pulumi:"primarybytesIn"`
	// Gets BytesOut of the peering.
	PrimarybytesOut pulumi.IntPtrInput `pulumi:"primarybytesOut"`
	// Gets BytesIn of the peering.
	SecondarybytesIn pulumi.IntPtrInput `pulumi:"secondarybytesIn"`
	// Gets BytesOut of the peering.
	SecondarybytesOut pulumi.IntPtrInput `pulumi:"secondarybytesOut"`
}

func (ExpressRouteCircuitStatsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitStatsResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitStatsResponseArgs) ToExpressRouteCircuitStatsResponseOutput() ExpressRouteCircuitStatsResponseOutput {
	return i.ToExpressRouteCircuitStatsResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitStatsResponseArgs) ToExpressRouteCircuitStatsResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsResponseOutput)
}

func (i ExpressRouteCircuitStatsResponseArgs) ToExpressRouteCircuitStatsResponsePtrOutput() ExpressRouteCircuitStatsResponsePtrOutput {
	return i.ToExpressRouteCircuitStatsResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitStatsResponseArgs) ToExpressRouteCircuitStatsResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsResponseOutput).ToExpressRouteCircuitStatsResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitStatsResponsePtrInput is an input type that accepts ExpressRouteCircuitStatsResponseArgs, ExpressRouteCircuitStatsResponsePtr and ExpressRouteCircuitStatsResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitStatsResponsePtrInput` via:
//
//          ExpressRouteCircuitStatsResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitStatsResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitStatsResponsePtrOutput() ExpressRouteCircuitStatsResponsePtrOutput
	ToExpressRouteCircuitStatsResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitStatsResponsePtrOutput
}

type expressRouteCircuitStatsResponsePtrType ExpressRouteCircuitStatsResponseArgs

func ExpressRouteCircuitStatsResponsePtr(v *ExpressRouteCircuitStatsResponseArgs) ExpressRouteCircuitStatsResponsePtrInput {
	return (*expressRouteCircuitStatsResponsePtrType)(v)
}

func (*expressRouteCircuitStatsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitStatsResponse)(nil)).Elem()
}

func (i *expressRouteCircuitStatsResponsePtrType) ToExpressRouteCircuitStatsResponsePtrOutput() ExpressRouteCircuitStatsResponsePtrOutput {
	return i.ToExpressRouteCircuitStatsResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitStatsResponsePtrType) ToExpressRouteCircuitStatsResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsResponsePtrOutput)
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitStatsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitStatsResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitStatsResponseOutput) ToExpressRouteCircuitStatsResponseOutput() ExpressRouteCircuitStatsResponseOutput {
	return o
}

func (o ExpressRouteCircuitStatsResponseOutput) ToExpressRouteCircuitStatsResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponseOutput {
	return o
}

func (o ExpressRouteCircuitStatsResponseOutput) ToExpressRouteCircuitStatsResponsePtrOutput() ExpressRouteCircuitStatsResponsePtrOutput {
	return o.ToExpressRouteCircuitStatsResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitStatsResponseOutput) ToExpressRouteCircuitStatsResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsResponse) *ExpressRouteCircuitStatsResponse {
		return &v
	}).(ExpressRouteCircuitStatsResponsePtrOutput)
}

// Gets BytesIn of the peering.
func (o ExpressRouteCircuitStatsResponseOutput) PrimarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsResponse) *int { return v.PrimarybytesIn }).(pulumi.IntPtrOutput)
}

// Gets BytesOut of the peering.
func (o ExpressRouteCircuitStatsResponseOutput) PrimarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsResponse) *int { return v.PrimarybytesOut }).(pulumi.IntPtrOutput)
}

// Gets BytesIn of the peering.
func (o ExpressRouteCircuitStatsResponseOutput) SecondarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsResponse) *int { return v.SecondarybytesIn }).(pulumi.IntPtrOutput)
}

// Gets BytesOut of the peering.
func (o ExpressRouteCircuitStatsResponseOutput) SecondarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsResponse) *int { return v.SecondarybytesOut }).(pulumi.IntPtrOutput)
}

type ExpressRouteCircuitStatsResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitStatsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitStatsResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitStatsResponsePtrOutput) ToExpressRouteCircuitStatsResponsePtrOutput() ExpressRouteCircuitStatsResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitStatsResponsePtrOutput) ToExpressRouteCircuitStatsResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitStatsResponsePtrOutput) Elem() ExpressRouteCircuitStatsResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) ExpressRouteCircuitStatsResponse { return *v }).(ExpressRouteCircuitStatsResponseOutput)
}

// Gets BytesIn of the peering.
func (o ExpressRouteCircuitStatsResponsePtrOutput) PrimarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) *int {
		if v == nil {
			return nil
		}
		return v.PrimarybytesIn
	}).(pulumi.IntPtrOutput)
}

// Gets BytesOut of the peering.
func (o ExpressRouteCircuitStatsResponsePtrOutput) PrimarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) *int {
		if v == nil {
			return nil
		}
		return v.PrimarybytesOut
	}).(pulumi.IntPtrOutput)
}

// Gets BytesIn of the peering.
func (o ExpressRouteCircuitStatsResponsePtrOutput) SecondarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) *int {
		if v == nil {
			return nil
		}
		return v.SecondarybytesIn
	}).(pulumi.IntPtrOutput)
}

// Gets BytesOut of the peering.
func (o ExpressRouteCircuitStatsResponsePtrOutput) SecondarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) *int {
		if v == nil {
			return nil
		}
		return v.SecondarybytesOut
	}).(pulumi.IntPtrOutput)
}

// ExpressRouteConnection resource.
type ExpressRouteConnectionType struct {
	// The name of the resource.
	Name string `pulumi:"name"`
	// Properties of the ExpressRouteConnection subresource.
	Properties ExpressRouteConnectionPropertiesResponse `pulumi:"properties"`
}

// ExpressRouteConnectionTypeInput is an input type that accepts ExpressRouteConnectionTypeArgs and ExpressRouteConnectionTypeOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionTypeInput` via:
//
//          ExpressRouteConnectionTypeArgs{...}
type ExpressRouteConnectionTypeInput interface {
	pulumi.Input

	ToExpressRouteConnectionTypeOutput() ExpressRouteConnectionTypeOutput
	ToExpressRouteConnectionTypeOutputWithContext(context.Context) ExpressRouteConnectionTypeOutput
}

// ExpressRouteConnection resource.
type ExpressRouteConnectionTypeArgs struct {
	// The name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the ExpressRouteConnection subresource.
	Properties ExpressRouteConnectionPropertiesResponseInput `pulumi:"properties"`
}

func (ExpressRouteConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionType)(nil)).Elem()
}

func (i ExpressRouteConnectionTypeArgs) ToExpressRouteConnectionTypeOutput() ExpressRouteConnectionTypeOutput {
	return i.ToExpressRouteConnectionTypeOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionTypeArgs) ToExpressRouteConnectionTypeOutputWithContext(ctx context.Context) ExpressRouteConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionTypeOutput)
}

// ExpressRouteConnection resource.
type ExpressRouteConnectionTypeOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionType)(nil)).Elem()
}

func (o ExpressRouteConnectionTypeOutput) ToExpressRouteConnectionTypeOutput() ExpressRouteConnectionTypeOutput {
	return o
}

func (o ExpressRouteConnectionTypeOutput) ToExpressRouteConnectionTypeOutputWithContext(ctx context.Context) ExpressRouteConnectionTypeOutput {
	return o
}

// The name of the resource.
func (o ExpressRouteConnectionTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteConnectionType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the ExpressRouteConnection subresource.
func (o ExpressRouteConnectionTypeOutput) Properties() ExpressRouteConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v ExpressRouteConnectionType) ExpressRouteConnectionPropertiesResponse { return v.Properties }).(ExpressRouteConnectionPropertiesResponseOutput)
}

// The ID of the ExpressRouteConnection.
type ExpressRouteConnectionId struct {
}

// ExpressRouteConnectionIdInput is an input type that accepts ExpressRouteConnectionIdArgs and ExpressRouteConnectionIdOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionIdInput` via:
//
//          ExpressRouteConnectionIdArgs{...}
type ExpressRouteConnectionIdInput interface {
	pulumi.Input

	ToExpressRouteConnectionIdOutput() ExpressRouteConnectionIdOutput
	ToExpressRouteConnectionIdOutputWithContext(context.Context) ExpressRouteConnectionIdOutput
}

// The ID of the ExpressRouteConnection.
type ExpressRouteConnectionIdArgs struct {
}

func (ExpressRouteConnectionIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionId)(nil)).Elem()
}

func (i ExpressRouteConnectionIdArgs) ToExpressRouteConnectionIdOutput() ExpressRouteConnectionIdOutput {
	return i.ToExpressRouteConnectionIdOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionIdArgs) ToExpressRouteConnectionIdOutputWithContext(ctx context.Context) ExpressRouteConnectionIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionIdOutput)
}

func (i ExpressRouteConnectionIdArgs) ToExpressRouteConnectionIdPtrOutput() ExpressRouteConnectionIdPtrOutput {
	return i.ToExpressRouteConnectionIdPtrOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionIdArgs) ToExpressRouteConnectionIdPtrOutputWithContext(ctx context.Context) ExpressRouteConnectionIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionIdOutput).ToExpressRouteConnectionIdPtrOutputWithContext(ctx)
}

// ExpressRouteConnectionIdPtrInput is an input type that accepts ExpressRouteConnectionIdArgs, ExpressRouteConnectionIdPtr and ExpressRouteConnectionIdPtrOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionIdPtrInput` via:
//
//          ExpressRouteConnectionIdArgs{...}
//
//  or:
//
//          nil
type ExpressRouteConnectionIdPtrInput interface {
	pulumi.Input

	ToExpressRouteConnectionIdPtrOutput() ExpressRouteConnectionIdPtrOutput
	ToExpressRouteConnectionIdPtrOutputWithContext(context.Context) ExpressRouteConnectionIdPtrOutput
}

type expressRouteConnectionIdPtrType ExpressRouteConnectionIdArgs

func ExpressRouteConnectionIdPtr(v *ExpressRouteConnectionIdArgs) ExpressRouteConnectionIdPtrInput {
	return (*expressRouteConnectionIdPtrType)(v)
}

func (*expressRouteConnectionIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteConnectionId)(nil)).Elem()
}

func (i *expressRouteConnectionIdPtrType) ToExpressRouteConnectionIdPtrOutput() ExpressRouteConnectionIdPtrOutput {
	return i.ToExpressRouteConnectionIdPtrOutputWithContext(context.Background())
}

func (i *expressRouteConnectionIdPtrType) ToExpressRouteConnectionIdPtrOutputWithContext(ctx context.Context) ExpressRouteConnectionIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionIdPtrOutput)
}

// The ID of the ExpressRouteConnection.
type ExpressRouteConnectionIdOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionId)(nil)).Elem()
}

func (o ExpressRouteConnectionIdOutput) ToExpressRouteConnectionIdOutput() ExpressRouteConnectionIdOutput {
	return o
}

func (o ExpressRouteConnectionIdOutput) ToExpressRouteConnectionIdOutputWithContext(ctx context.Context) ExpressRouteConnectionIdOutput {
	return o
}

func (o ExpressRouteConnectionIdOutput) ToExpressRouteConnectionIdPtrOutput() ExpressRouteConnectionIdPtrOutput {
	return o.ToExpressRouteConnectionIdPtrOutputWithContext(context.Background())
}

func (o ExpressRouteConnectionIdOutput) ToExpressRouteConnectionIdPtrOutputWithContext(ctx context.Context) ExpressRouteConnectionIdPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionId) *ExpressRouteConnectionId {
		return &v
	}).(ExpressRouteConnectionIdPtrOutput)
}

type ExpressRouteConnectionIdPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteConnectionId)(nil)).Elem()
}

func (o ExpressRouteConnectionIdPtrOutput) ToExpressRouteConnectionIdPtrOutput() ExpressRouteConnectionIdPtrOutput {
	return o
}

func (o ExpressRouteConnectionIdPtrOutput) ToExpressRouteConnectionIdPtrOutputWithContext(ctx context.Context) ExpressRouteConnectionIdPtrOutput {
	return o
}

func (o ExpressRouteConnectionIdPtrOutput) Elem() ExpressRouteConnectionIdOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionId) ExpressRouteConnectionId { return *v }).(ExpressRouteConnectionIdOutput)
}

// The ID of the ExpressRouteConnection.
type ExpressRouteConnectionIdResponse struct {
	// The ID of the ExpressRouteConnection.
	Id string `pulumi:"id"`
}

// ExpressRouteConnectionIdResponseInput is an input type that accepts ExpressRouteConnectionIdResponseArgs and ExpressRouteConnectionIdResponseOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionIdResponseInput` via:
//
//          ExpressRouteConnectionIdResponseArgs{...}
type ExpressRouteConnectionIdResponseInput interface {
	pulumi.Input

	ToExpressRouteConnectionIdResponseOutput() ExpressRouteConnectionIdResponseOutput
	ToExpressRouteConnectionIdResponseOutputWithContext(context.Context) ExpressRouteConnectionIdResponseOutput
}

// The ID of the ExpressRouteConnection.
type ExpressRouteConnectionIdResponseArgs struct {
	// The ID of the ExpressRouteConnection.
	Id pulumi.StringInput `pulumi:"id"`
}

func (ExpressRouteConnectionIdResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionIdResponse)(nil)).Elem()
}

func (i ExpressRouteConnectionIdResponseArgs) ToExpressRouteConnectionIdResponseOutput() ExpressRouteConnectionIdResponseOutput {
	return i.ToExpressRouteConnectionIdResponseOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionIdResponseArgs) ToExpressRouteConnectionIdResponseOutputWithContext(ctx context.Context) ExpressRouteConnectionIdResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionIdResponseOutput)
}

func (i ExpressRouteConnectionIdResponseArgs) ToExpressRouteConnectionIdResponsePtrOutput() ExpressRouteConnectionIdResponsePtrOutput {
	return i.ToExpressRouteConnectionIdResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionIdResponseArgs) ToExpressRouteConnectionIdResponsePtrOutputWithContext(ctx context.Context) ExpressRouteConnectionIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionIdResponseOutput).ToExpressRouteConnectionIdResponsePtrOutputWithContext(ctx)
}

// ExpressRouteConnectionIdResponsePtrInput is an input type that accepts ExpressRouteConnectionIdResponseArgs, ExpressRouteConnectionIdResponsePtr and ExpressRouteConnectionIdResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionIdResponsePtrInput` via:
//
//          ExpressRouteConnectionIdResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteConnectionIdResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteConnectionIdResponsePtrOutput() ExpressRouteConnectionIdResponsePtrOutput
	ToExpressRouteConnectionIdResponsePtrOutputWithContext(context.Context) ExpressRouteConnectionIdResponsePtrOutput
}

type expressRouteConnectionIdResponsePtrType ExpressRouteConnectionIdResponseArgs

func ExpressRouteConnectionIdResponsePtr(v *ExpressRouteConnectionIdResponseArgs) ExpressRouteConnectionIdResponsePtrInput {
	return (*expressRouteConnectionIdResponsePtrType)(v)
}

func (*expressRouteConnectionIdResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteConnectionIdResponse)(nil)).Elem()
}

func (i *expressRouteConnectionIdResponsePtrType) ToExpressRouteConnectionIdResponsePtrOutput() ExpressRouteConnectionIdResponsePtrOutput {
	return i.ToExpressRouteConnectionIdResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteConnectionIdResponsePtrType) ToExpressRouteConnectionIdResponsePtrOutputWithContext(ctx context.Context) ExpressRouteConnectionIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionIdResponsePtrOutput)
}

// The ID of the ExpressRouteConnection.
type ExpressRouteConnectionIdResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionIdResponse)(nil)).Elem()
}

func (o ExpressRouteConnectionIdResponseOutput) ToExpressRouteConnectionIdResponseOutput() ExpressRouteConnectionIdResponseOutput {
	return o
}

func (o ExpressRouteConnectionIdResponseOutput) ToExpressRouteConnectionIdResponseOutputWithContext(ctx context.Context) ExpressRouteConnectionIdResponseOutput {
	return o
}

func (o ExpressRouteConnectionIdResponseOutput) ToExpressRouteConnectionIdResponsePtrOutput() ExpressRouteConnectionIdResponsePtrOutput {
	return o.ToExpressRouteConnectionIdResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteConnectionIdResponseOutput) ToExpressRouteConnectionIdResponsePtrOutputWithContext(ctx context.Context) ExpressRouteConnectionIdResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionIdResponse) *ExpressRouteConnectionIdResponse {
		return &v
	}).(ExpressRouteConnectionIdResponsePtrOutput)
}

// The ID of the ExpressRouteConnection.
func (o ExpressRouteConnectionIdResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteConnectionIdResponse) string { return v.Id }).(pulumi.StringOutput)
}

type ExpressRouteConnectionIdResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionIdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteConnectionIdResponse)(nil)).Elem()
}

func (o ExpressRouteConnectionIdResponsePtrOutput) ToExpressRouteConnectionIdResponsePtrOutput() ExpressRouteConnectionIdResponsePtrOutput {
	return o
}

func (o ExpressRouteConnectionIdResponsePtrOutput) ToExpressRouteConnectionIdResponsePtrOutputWithContext(ctx context.Context) ExpressRouteConnectionIdResponsePtrOutput {
	return o
}

func (o ExpressRouteConnectionIdResponsePtrOutput) Elem() ExpressRouteConnectionIdResponseOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionIdResponse) ExpressRouteConnectionIdResponse { return *v }).(ExpressRouteConnectionIdResponseOutput)
}

// The ID of the ExpressRouteConnection.
func (o ExpressRouteConnectionIdResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionIdResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Properties of the ExpressRouteConnection subresource.
type ExpressRouteConnectionProperties struct {
	// Authorization key to establish the connection.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// The ExpressRoute circuit peering.
	ExpressRouteCircuitPeering ExpressRouteCircuitPeeringId `pulumi:"expressRouteCircuitPeering"`
	// The routing weight associated to the connection.
	RoutingWeight *int `pulumi:"routingWeight"`
}

// ExpressRouteConnectionPropertiesInput is an input type that accepts ExpressRouteConnectionPropertiesArgs and ExpressRouteConnectionPropertiesOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionPropertiesInput` via:
//
//          ExpressRouteConnectionPropertiesArgs{...}
type ExpressRouteConnectionPropertiesInput interface {
	pulumi.Input

	ToExpressRouteConnectionPropertiesOutput() ExpressRouteConnectionPropertiesOutput
	ToExpressRouteConnectionPropertiesOutputWithContext(context.Context) ExpressRouteConnectionPropertiesOutput
}

// Properties of the ExpressRouteConnection subresource.
type ExpressRouteConnectionPropertiesArgs struct {
	// Authorization key to establish the connection.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// The ExpressRoute circuit peering.
	ExpressRouteCircuitPeering ExpressRouteCircuitPeeringIdInput `pulumi:"expressRouteCircuitPeering"`
	// The routing weight associated to the connection.
	RoutingWeight pulumi.IntPtrInput `pulumi:"routingWeight"`
}

func (ExpressRouteConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionProperties)(nil)).Elem()
}

func (i ExpressRouteConnectionPropertiesArgs) ToExpressRouteConnectionPropertiesOutput() ExpressRouteConnectionPropertiesOutput {
	return i.ToExpressRouteConnectionPropertiesOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionPropertiesArgs) ToExpressRouteConnectionPropertiesOutputWithContext(ctx context.Context) ExpressRouteConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionPropertiesOutput)
}

func (i ExpressRouteConnectionPropertiesArgs) ToExpressRouteConnectionPropertiesPtrOutput() ExpressRouteConnectionPropertiesPtrOutput {
	return i.ToExpressRouteConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionPropertiesArgs) ToExpressRouteConnectionPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteConnectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionPropertiesOutput).ToExpressRouteConnectionPropertiesPtrOutputWithContext(ctx)
}

// ExpressRouteConnectionPropertiesPtrInput is an input type that accepts ExpressRouteConnectionPropertiesArgs, ExpressRouteConnectionPropertiesPtr and ExpressRouteConnectionPropertiesPtrOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionPropertiesPtrInput` via:
//
//          ExpressRouteConnectionPropertiesArgs{...}
//
//  or:
//
//          nil
type ExpressRouteConnectionPropertiesPtrInput interface {
	pulumi.Input

	ToExpressRouteConnectionPropertiesPtrOutput() ExpressRouteConnectionPropertiesPtrOutput
	ToExpressRouteConnectionPropertiesPtrOutputWithContext(context.Context) ExpressRouteConnectionPropertiesPtrOutput
}

type expressRouteConnectionPropertiesPtrType ExpressRouteConnectionPropertiesArgs

func ExpressRouteConnectionPropertiesPtr(v *ExpressRouteConnectionPropertiesArgs) ExpressRouteConnectionPropertiesPtrInput {
	return (*expressRouteConnectionPropertiesPtrType)(v)
}

func (*expressRouteConnectionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteConnectionProperties)(nil)).Elem()
}

func (i *expressRouteConnectionPropertiesPtrType) ToExpressRouteConnectionPropertiesPtrOutput() ExpressRouteConnectionPropertiesPtrOutput {
	return i.ToExpressRouteConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (i *expressRouteConnectionPropertiesPtrType) ToExpressRouteConnectionPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteConnectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionPropertiesPtrOutput)
}

// Properties of the ExpressRouteConnection subresource.
type ExpressRouteConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionProperties)(nil)).Elem()
}

func (o ExpressRouteConnectionPropertiesOutput) ToExpressRouteConnectionPropertiesOutput() ExpressRouteConnectionPropertiesOutput {
	return o
}

func (o ExpressRouteConnectionPropertiesOutput) ToExpressRouteConnectionPropertiesOutputWithContext(ctx context.Context) ExpressRouteConnectionPropertiesOutput {
	return o
}

func (o ExpressRouteConnectionPropertiesOutput) ToExpressRouteConnectionPropertiesPtrOutput() ExpressRouteConnectionPropertiesPtrOutput {
	return o.ToExpressRouteConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (o ExpressRouteConnectionPropertiesOutput) ToExpressRouteConnectionPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteConnectionPropertiesPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionProperties) *ExpressRouteConnectionProperties {
		return &v
	}).(ExpressRouteConnectionPropertiesPtrOutput)
}

// Authorization key to establish the connection.
func (o ExpressRouteConnectionPropertiesOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionProperties) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// The ExpressRoute circuit peering.
func (o ExpressRouteConnectionPropertiesOutput) ExpressRouteCircuitPeering() ExpressRouteCircuitPeeringIdOutput {
	return o.ApplyT(func(v ExpressRouteConnectionProperties) ExpressRouteCircuitPeeringId {
		return v.ExpressRouteCircuitPeering
	}).(ExpressRouteCircuitPeeringIdOutput)
}

// The routing weight associated to the connection.
func (o ExpressRouteConnectionPropertiesOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionProperties) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

type ExpressRouteConnectionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteConnectionProperties)(nil)).Elem()
}

func (o ExpressRouteConnectionPropertiesPtrOutput) ToExpressRouteConnectionPropertiesPtrOutput() ExpressRouteConnectionPropertiesPtrOutput {
	return o
}

func (o ExpressRouteConnectionPropertiesPtrOutput) ToExpressRouteConnectionPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteConnectionPropertiesPtrOutput {
	return o
}

func (o ExpressRouteConnectionPropertiesPtrOutput) Elem() ExpressRouteConnectionPropertiesOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionProperties) ExpressRouteConnectionProperties { return *v }).(ExpressRouteConnectionPropertiesOutput)
}

// Authorization key to establish the connection.
func (o ExpressRouteConnectionPropertiesPtrOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionProperties) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationKey
	}).(pulumi.StringPtrOutput)
}

// The ExpressRoute circuit peering.
func (o ExpressRouteConnectionPropertiesPtrOutput) ExpressRouteCircuitPeering() ExpressRouteCircuitPeeringIdPtrOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionProperties) *ExpressRouteCircuitPeeringId {
		if v == nil {
			return nil
		}
		return &v.ExpressRouteCircuitPeering
	}).(ExpressRouteCircuitPeeringIdPtrOutput)
}

// The routing weight associated to the connection.
func (o ExpressRouteConnectionPropertiesPtrOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionProperties) *int {
		if v == nil {
			return nil
		}
		return v.RoutingWeight
	}).(pulumi.IntPtrOutput)
}

// Properties of the ExpressRouteConnection subresource.
type ExpressRouteConnectionPropertiesResponse struct {
	// Authorization key to establish the connection.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// The ExpressRoute circuit peering.
	ExpressRouteCircuitPeering ExpressRouteCircuitPeeringIdResponse `pulumi:"expressRouteCircuitPeering"`
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The routing weight associated to the connection.
	RoutingWeight *int `pulumi:"routingWeight"`
}

// ExpressRouteConnectionPropertiesResponseInput is an input type that accepts ExpressRouteConnectionPropertiesResponseArgs and ExpressRouteConnectionPropertiesResponseOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionPropertiesResponseInput` via:
//
//          ExpressRouteConnectionPropertiesResponseArgs{...}
type ExpressRouteConnectionPropertiesResponseInput interface {
	pulumi.Input

	ToExpressRouteConnectionPropertiesResponseOutput() ExpressRouteConnectionPropertiesResponseOutput
	ToExpressRouteConnectionPropertiesResponseOutputWithContext(context.Context) ExpressRouteConnectionPropertiesResponseOutput
}

// Properties of the ExpressRouteConnection subresource.
type ExpressRouteConnectionPropertiesResponseArgs struct {
	// Authorization key to establish the connection.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// The ExpressRoute circuit peering.
	ExpressRouteCircuitPeering ExpressRouteCircuitPeeringIdResponseInput `pulumi:"expressRouteCircuitPeering"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The routing weight associated to the connection.
	RoutingWeight pulumi.IntPtrInput `pulumi:"routingWeight"`
}

func (ExpressRouteConnectionPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionPropertiesResponse)(nil)).Elem()
}

func (i ExpressRouteConnectionPropertiesResponseArgs) ToExpressRouteConnectionPropertiesResponseOutput() ExpressRouteConnectionPropertiesResponseOutput {
	return i.ToExpressRouteConnectionPropertiesResponseOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionPropertiesResponseArgs) ToExpressRouteConnectionPropertiesResponseOutputWithContext(ctx context.Context) ExpressRouteConnectionPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionPropertiesResponseOutput)
}

func (i ExpressRouteConnectionPropertiesResponseArgs) ToExpressRouteConnectionPropertiesResponsePtrOutput() ExpressRouteConnectionPropertiesResponsePtrOutput {
	return i.ToExpressRouteConnectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionPropertiesResponseArgs) ToExpressRouteConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteConnectionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionPropertiesResponseOutput).ToExpressRouteConnectionPropertiesResponsePtrOutputWithContext(ctx)
}

// ExpressRouteConnectionPropertiesResponsePtrInput is an input type that accepts ExpressRouteConnectionPropertiesResponseArgs, ExpressRouteConnectionPropertiesResponsePtr and ExpressRouteConnectionPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionPropertiesResponsePtrInput` via:
//
//          ExpressRouteConnectionPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteConnectionPropertiesResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteConnectionPropertiesResponsePtrOutput() ExpressRouteConnectionPropertiesResponsePtrOutput
	ToExpressRouteConnectionPropertiesResponsePtrOutputWithContext(context.Context) ExpressRouteConnectionPropertiesResponsePtrOutput
}

type expressRouteConnectionPropertiesResponsePtrType ExpressRouteConnectionPropertiesResponseArgs

func ExpressRouteConnectionPropertiesResponsePtr(v *ExpressRouteConnectionPropertiesResponseArgs) ExpressRouteConnectionPropertiesResponsePtrInput {
	return (*expressRouteConnectionPropertiesResponsePtrType)(v)
}

func (*expressRouteConnectionPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteConnectionPropertiesResponse)(nil)).Elem()
}

func (i *expressRouteConnectionPropertiesResponsePtrType) ToExpressRouteConnectionPropertiesResponsePtrOutput() ExpressRouteConnectionPropertiesResponsePtrOutput {
	return i.ToExpressRouteConnectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteConnectionPropertiesResponsePtrType) ToExpressRouteConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteConnectionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionPropertiesResponsePtrOutput)
}

// Properties of the ExpressRouteConnection subresource.
type ExpressRouteConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionPropertiesResponse)(nil)).Elem()
}

func (o ExpressRouteConnectionPropertiesResponseOutput) ToExpressRouteConnectionPropertiesResponseOutput() ExpressRouteConnectionPropertiesResponseOutput {
	return o
}

func (o ExpressRouteConnectionPropertiesResponseOutput) ToExpressRouteConnectionPropertiesResponseOutputWithContext(ctx context.Context) ExpressRouteConnectionPropertiesResponseOutput {
	return o
}

func (o ExpressRouteConnectionPropertiesResponseOutput) ToExpressRouteConnectionPropertiesResponsePtrOutput() ExpressRouteConnectionPropertiesResponsePtrOutput {
	return o.ToExpressRouteConnectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteConnectionPropertiesResponseOutput) ToExpressRouteConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteConnectionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionPropertiesResponse) *ExpressRouteConnectionPropertiesResponse {
		return &v
	}).(ExpressRouteConnectionPropertiesResponsePtrOutput)
}

// Authorization key to establish the connection.
func (o ExpressRouteConnectionPropertiesResponseOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionPropertiesResponse) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// The ExpressRoute circuit peering.
func (o ExpressRouteConnectionPropertiesResponseOutput) ExpressRouteCircuitPeering() ExpressRouteCircuitPeeringIdResponseOutput {
	return o.ApplyT(func(v ExpressRouteConnectionPropertiesResponse) ExpressRouteCircuitPeeringIdResponse {
		return v.ExpressRouteCircuitPeering
	}).(ExpressRouteCircuitPeeringIdResponseOutput)
}

// The provisioning state of the resource.
func (o ExpressRouteConnectionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteConnectionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The routing weight associated to the connection.
func (o ExpressRouteConnectionPropertiesResponseOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionPropertiesResponse) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

type ExpressRouteConnectionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteConnectionPropertiesResponse)(nil)).Elem()
}

func (o ExpressRouteConnectionPropertiesResponsePtrOutput) ToExpressRouteConnectionPropertiesResponsePtrOutput() ExpressRouteConnectionPropertiesResponsePtrOutput {
	return o
}

func (o ExpressRouteConnectionPropertiesResponsePtrOutput) ToExpressRouteConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteConnectionPropertiesResponsePtrOutput {
	return o
}

func (o ExpressRouteConnectionPropertiesResponsePtrOutput) Elem() ExpressRouteConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionPropertiesResponse) ExpressRouteConnectionPropertiesResponse { return *v }).(ExpressRouteConnectionPropertiesResponseOutput)
}

// Authorization key to establish the connection.
func (o ExpressRouteConnectionPropertiesResponsePtrOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationKey
	}).(pulumi.StringPtrOutput)
}

// The ExpressRoute circuit peering.
func (o ExpressRouteConnectionPropertiesResponsePtrOutput) ExpressRouteCircuitPeering() ExpressRouteCircuitPeeringIdResponsePtrOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionPropertiesResponse) *ExpressRouteCircuitPeeringIdResponse {
		if v == nil {
			return nil
		}
		return &v.ExpressRouteCircuitPeering
	}).(ExpressRouteCircuitPeeringIdResponsePtrOutput)
}

// The provisioning state of the resource.
func (o ExpressRouteConnectionPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The routing weight associated to the connection.
func (o ExpressRouteConnectionPropertiesResponsePtrOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.RoutingWeight
	}).(pulumi.IntPtrOutput)
}

// ExpressRouteConnection resource.
type ExpressRouteConnectionResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// Properties of the ExpressRouteConnection subresource.
	Properties *ExpressRouteConnectionPropertiesResponse `pulumi:"properties"`
}

// ExpressRouteConnectionResponseInput is an input type that accepts ExpressRouteConnectionResponseArgs and ExpressRouteConnectionResponseOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionResponseInput` via:
//
//          ExpressRouteConnectionResponseArgs{...}
type ExpressRouteConnectionResponseInput interface {
	pulumi.Input

	ToExpressRouteConnectionResponseOutput() ExpressRouteConnectionResponseOutput
	ToExpressRouteConnectionResponseOutputWithContext(context.Context) ExpressRouteConnectionResponseOutput
}

// ExpressRouteConnection resource.
type ExpressRouteConnectionResponseArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the ExpressRouteConnection subresource.
	Properties ExpressRouteConnectionPropertiesResponsePtrInput `pulumi:"properties"`
}

func (ExpressRouteConnectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionResponse)(nil)).Elem()
}

func (i ExpressRouteConnectionResponseArgs) ToExpressRouteConnectionResponseOutput() ExpressRouteConnectionResponseOutput {
	return i.ToExpressRouteConnectionResponseOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionResponseArgs) ToExpressRouteConnectionResponseOutputWithContext(ctx context.Context) ExpressRouteConnectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionResponseOutput)
}

// ExpressRouteConnectionResponseArrayInput is an input type that accepts ExpressRouteConnectionResponseArray and ExpressRouteConnectionResponseArrayOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionResponseArrayInput` via:
//
//          ExpressRouteConnectionResponseArray{ ExpressRouteConnectionResponseArgs{...} }
type ExpressRouteConnectionResponseArrayInput interface {
	pulumi.Input

	ToExpressRouteConnectionResponseArrayOutput() ExpressRouteConnectionResponseArrayOutput
	ToExpressRouteConnectionResponseArrayOutputWithContext(context.Context) ExpressRouteConnectionResponseArrayOutput
}

type ExpressRouteConnectionResponseArray []ExpressRouteConnectionResponseInput

func (ExpressRouteConnectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteConnectionResponse)(nil)).Elem()
}

func (i ExpressRouteConnectionResponseArray) ToExpressRouteConnectionResponseArrayOutput() ExpressRouteConnectionResponseArrayOutput {
	return i.ToExpressRouteConnectionResponseArrayOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionResponseArray) ToExpressRouteConnectionResponseArrayOutputWithContext(ctx context.Context) ExpressRouteConnectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionResponseArrayOutput)
}

// ExpressRouteConnection resource.
type ExpressRouteConnectionResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionResponse)(nil)).Elem()
}

func (o ExpressRouteConnectionResponseOutput) ToExpressRouteConnectionResponseOutput() ExpressRouteConnectionResponseOutput {
	return o
}

func (o ExpressRouteConnectionResponseOutput) ToExpressRouteConnectionResponseOutputWithContext(ctx context.Context) ExpressRouteConnectionResponseOutput {
	return o
}

// Resource ID.
func (o ExpressRouteConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o ExpressRouteConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the ExpressRouteConnection subresource.
func (o ExpressRouteConnectionResponseOutput) Properties() ExpressRouteConnectionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionResponse) *ExpressRouteConnectionPropertiesResponse { return v.Properties }).(ExpressRouteConnectionPropertiesResponsePtrOutput)
}

type ExpressRouteConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteConnectionResponse)(nil)).Elem()
}

func (o ExpressRouteConnectionResponseArrayOutput) ToExpressRouteConnectionResponseArrayOutput() ExpressRouteConnectionResponseArrayOutput {
	return o
}

func (o ExpressRouteConnectionResponseArrayOutput) ToExpressRouteConnectionResponseArrayOutputWithContext(ctx context.Context) ExpressRouteConnectionResponseArrayOutput {
	return o
}

func (o ExpressRouteConnectionResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteConnectionResponse {
		return vs[0].([]ExpressRouteConnectionResponse)[vs[1].(int)]
	}).(ExpressRouteConnectionResponseOutput)
}

// Peering in an ExpressRoute Cross Connection resource.
type ExpressRouteCrossConnectionPeeringType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name       *string                                              `pulumi:"name"`
	Properties ExpressRouteCrossConnectionPeeringPropertiesResponse `pulumi:"properties"`
}

// ExpressRouteCrossConnectionPeeringTypeInput is an input type that accepts ExpressRouteCrossConnectionPeeringTypeArgs and ExpressRouteCrossConnectionPeeringTypeOutput values.
// You can construct a concrete instance of `ExpressRouteCrossConnectionPeeringTypeInput` via:
//
//          ExpressRouteCrossConnectionPeeringTypeArgs{...}
type ExpressRouteCrossConnectionPeeringTypeInput interface {
	pulumi.Input

	ToExpressRouteCrossConnectionPeeringTypeOutput() ExpressRouteCrossConnectionPeeringTypeOutput
	ToExpressRouteCrossConnectionPeeringTypeOutputWithContext(context.Context) ExpressRouteCrossConnectionPeeringTypeOutput
}

// Peering in an ExpressRoute Cross Connection resource.
type ExpressRouteCrossConnectionPeeringTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name       pulumi.StringPtrInput                                     `pulumi:"name"`
	Properties ExpressRouteCrossConnectionPeeringPropertiesResponseInput `pulumi:"properties"`
}

func (ExpressRouteCrossConnectionPeeringTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCrossConnectionPeeringType)(nil)).Elem()
}

func (i ExpressRouteCrossConnectionPeeringTypeArgs) ToExpressRouteCrossConnectionPeeringTypeOutput() ExpressRouteCrossConnectionPeeringTypeOutput {
	return i.ToExpressRouteCrossConnectionPeeringTypeOutputWithContext(context.Background())
}

func (i ExpressRouteCrossConnectionPeeringTypeArgs) ToExpressRouteCrossConnectionPeeringTypeOutputWithContext(ctx context.Context) ExpressRouteCrossConnectionPeeringTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCrossConnectionPeeringTypeOutput)
}

// Peering in an ExpressRoute Cross Connection resource.
type ExpressRouteCrossConnectionPeeringTypeOutput struct{ *pulumi.OutputState }

func (ExpressRouteCrossConnectionPeeringTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCrossConnectionPeeringType)(nil)).Elem()
}

func (o ExpressRouteCrossConnectionPeeringTypeOutput) ToExpressRouteCrossConnectionPeeringTypeOutput() ExpressRouteCrossConnectionPeeringTypeOutput {
	return o
}

func (o ExpressRouteCrossConnectionPeeringTypeOutput) ToExpressRouteCrossConnectionPeeringTypeOutputWithContext(ctx context.Context) ExpressRouteCrossConnectionPeeringTypeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteCrossConnectionPeeringTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringType) string { return v.Etag }).(pulumi.StringOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCrossConnectionPeeringTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ExpressRouteCrossConnectionPeeringTypeOutput) Properties() ExpressRouteCrossConnectionPeeringPropertiesResponseOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringType) ExpressRouteCrossConnectionPeeringPropertiesResponse {
		return v.Properties
	}).(ExpressRouteCrossConnectionPeeringPropertiesResponseOutput)
}

type ExpressRouteCrossConnectionPeeringProperties struct {
	// The GatewayManager Etag.
	GatewayManagerEtag *string `pulumi:"gatewayManagerEtag"`
	// The IPv6 peering configuration.
	Ipv6PeeringConfig *Ipv6ExpressRouteCircuitPeeringConfig `pulumi:"ipv6PeeringConfig"`
	// Gets whether the provider or the customer last modified the peering.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig *ExpressRouteCircuitPeeringConfig `pulumi:"microsoftPeeringConfig"`
	// The peer ASN.
	PeerASN *int `pulumi:"peerASN"`
	// The peering type.
	PeeringType *string `pulumi:"peeringType"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix *string `pulumi:"primaryPeerAddressPrefix"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix *string `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey *string `pulumi:"sharedKey"`
	// The peering state.
	State *string `pulumi:"state"`
	// The VLAN ID.
	VlanId *int `pulumi:"vlanId"`
}

// ExpressRouteCrossConnectionPeeringPropertiesInput is an input type that accepts ExpressRouteCrossConnectionPeeringPropertiesArgs and ExpressRouteCrossConnectionPeeringPropertiesOutput values.
// You can construct a concrete instance of `ExpressRouteCrossConnectionPeeringPropertiesInput` via:
//
//          ExpressRouteCrossConnectionPeeringPropertiesArgs{...}
type ExpressRouteCrossConnectionPeeringPropertiesInput interface {
	pulumi.Input

	ToExpressRouteCrossConnectionPeeringPropertiesOutput() ExpressRouteCrossConnectionPeeringPropertiesOutput
	ToExpressRouteCrossConnectionPeeringPropertiesOutputWithContext(context.Context) ExpressRouteCrossConnectionPeeringPropertiesOutput
}

type ExpressRouteCrossConnectionPeeringPropertiesArgs struct {
	// The GatewayManager Etag.
	GatewayManagerEtag pulumi.StringPtrInput `pulumi:"gatewayManagerEtag"`
	// The IPv6 peering configuration.
	Ipv6PeeringConfig Ipv6ExpressRouteCircuitPeeringConfigPtrInput `pulumi:"ipv6PeeringConfig"`
	// Gets whether the provider or the customer last modified the peering.
	LastModifiedBy pulumi.StringPtrInput `pulumi:"lastModifiedBy"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig ExpressRouteCircuitPeeringConfigPtrInput `pulumi:"microsoftPeeringConfig"`
	// The peer ASN.
	PeerASN pulumi.IntPtrInput `pulumi:"peerASN"`
	// The peering type.
	PeeringType pulumi.StringPtrInput `pulumi:"peeringType"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"primaryPeerAddressPrefix"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// The peering state.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The VLAN ID.
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (ExpressRouteCrossConnectionPeeringPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCrossConnectionPeeringProperties)(nil)).Elem()
}

func (i ExpressRouteCrossConnectionPeeringPropertiesArgs) ToExpressRouteCrossConnectionPeeringPropertiesOutput() ExpressRouteCrossConnectionPeeringPropertiesOutput {
	return i.ToExpressRouteCrossConnectionPeeringPropertiesOutputWithContext(context.Background())
}

func (i ExpressRouteCrossConnectionPeeringPropertiesArgs) ToExpressRouteCrossConnectionPeeringPropertiesOutputWithContext(ctx context.Context) ExpressRouteCrossConnectionPeeringPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCrossConnectionPeeringPropertiesOutput)
}

func (i ExpressRouteCrossConnectionPeeringPropertiesArgs) ToExpressRouteCrossConnectionPeeringPropertiesPtrOutput() ExpressRouteCrossConnectionPeeringPropertiesPtrOutput {
	return i.ToExpressRouteCrossConnectionPeeringPropertiesPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCrossConnectionPeeringPropertiesArgs) ToExpressRouteCrossConnectionPeeringPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCrossConnectionPeeringPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCrossConnectionPeeringPropertiesOutput).ToExpressRouteCrossConnectionPeeringPropertiesPtrOutputWithContext(ctx)
}

// ExpressRouteCrossConnectionPeeringPropertiesPtrInput is an input type that accepts ExpressRouteCrossConnectionPeeringPropertiesArgs, ExpressRouteCrossConnectionPeeringPropertiesPtr and ExpressRouteCrossConnectionPeeringPropertiesPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCrossConnectionPeeringPropertiesPtrInput` via:
//
//          ExpressRouteCrossConnectionPeeringPropertiesArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCrossConnectionPeeringPropertiesPtrInput interface {
	pulumi.Input

	ToExpressRouteCrossConnectionPeeringPropertiesPtrOutput() ExpressRouteCrossConnectionPeeringPropertiesPtrOutput
	ToExpressRouteCrossConnectionPeeringPropertiesPtrOutputWithContext(context.Context) ExpressRouteCrossConnectionPeeringPropertiesPtrOutput
}

type expressRouteCrossConnectionPeeringPropertiesPtrType ExpressRouteCrossConnectionPeeringPropertiesArgs

func ExpressRouteCrossConnectionPeeringPropertiesPtr(v *ExpressRouteCrossConnectionPeeringPropertiesArgs) ExpressRouteCrossConnectionPeeringPropertiesPtrInput {
	return (*expressRouteCrossConnectionPeeringPropertiesPtrType)(v)
}

func (*expressRouteCrossConnectionPeeringPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCrossConnectionPeeringProperties)(nil)).Elem()
}

func (i *expressRouteCrossConnectionPeeringPropertiesPtrType) ToExpressRouteCrossConnectionPeeringPropertiesPtrOutput() ExpressRouteCrossConnectionPeeringPropertiesPtrOutput {
	return i.ToExpressRouteCrossConnectionPeeringPropertiesPtrOutputWithContext(context.Background())
}

func (i *expressRouteCrossConnectionPeeringPropertiesPtrType) ToExpressRouteCrossConnectionPeeringPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCrossConnectionPeeringPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCrossConnectionPeeringPropertiesPtrOutput)
}

type ExpressRouteCrossConnectionPeeringPropertiesOutput struct{ *pulumi.OutputState }

func (ExpressRouteCrossConnectionPeeringPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCrossConnectionPeeringProperties)(nil)).Elem()
}

func (o ExpressRouteCrossConnectionPeeringPropertiesOutput) ToExpressRouteCrossConnectionPeeringPropertiesOutput() ExpressRouteCrossConnectionPeeringPropertiesOutput {
	return o
}

func (o ExpressRouteCrossConnectionPeeringPropertiesOutput) ToExpressRouteCrossConnectionPeeringPropertiesOutputWithContext(ctx context.Context) ExpressRouteCrossConnectionPeeringPropertiesOutput {
	return o
}

func (o ExpressRouteCrossConnectionPeeringPropertiesOutput) ToExpressRouteCrossConnectionPeeringPropertiesPtrOutput() ExpressRouteCrossConnectionPeeringPropertiesPtrOutput {
	return o.ToExpressRouteCrossConnectionPeeringPropertiesPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCrossConnectionPeeringPropertiesOutput) ToExpressRouteCrossConnectionPeeringPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCrossConnectionPeeringPropertiesPtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringProperties) *ExpressRouteCrossConnectionPeeringProperties {
		return &v
	}).(ExpressRouteCrossConnectionPeeringPropertiesPtrOutput)
}

// The GatewayManager Etag.
func (o ExpressRouteCrossConnectionPeeringPropertiesOutput) GatewayManagerEtag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringProperties) *string { return v.GatewayManagerEtag }).(pulumi.StringPtrOutput)
}

// The IPv6 peering configuration.
func (o ExpressRouteCrossConnectionPeeringPropertiesOutput) Ipv6PeeringConfig() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringProperties) *Ipv6ExpressRouteCircuitPeeringConfig {
		return v.Ipv6PeeringConfig
	}).(Ipv6ExpressRouteCircuitPeeringConfigPtrOutput)
}

// Gets whether the provider or the customer last modified the peering.
func (o ExpressRouteCrossConnectionPeeringPropertiesOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringProperties) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The Microsoft peering configuration.
func (o ExpressRouteCrossConnectionPeeringPropertiesOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringProperties) *ExpressRouteCircuitPeeringConfig {
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The peer ASN.
func (o ExpressRouteCrossConnectionPeeringPropertiesOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringProperties) *int { return v.PeerASN }).(pulumi.IntPtrOutput)
}

// The peering type.
func (o ExpressRouteCrossConnectionPeeringPropertiesOutput) PeeringType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringProperties) *string { return v.PeeringType }).(pulumi.StringPtrOutput)
}

// The primary address prefix.
func (o ExpressRouteCrossConnectionPeeringPropertiesOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringProperties) *string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The secondary address prefix.
func (o ExpressRouteCrossConnectionPeeringPropertiesOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringProperties) *string { return v.SecondaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The shared key.
func (o ExpressRouteCrossConnectionPeeringPropertiesOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringProperties) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// The peering state.
func (o ExpressRouteCrossConnectionPeeringPropertiesOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringProperties) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The VLAN ID.
func (o ExpressRouteCrossConnectionPeeringPropertiesOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringProperties) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type ExpressRouteCrossConnectionPeeringPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCrossConnectionPeeringPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCrossConnectionPeeringProperties)(nil)).Elem()
}

func (o ExpressRouteCrossConnectionPeeringPropertiesPtrOutput) ToExpressRouteCrossConnectionPeeringPropertiesPtrOutput() ExpressRouteCrossConnectionPeeringPropertiesPtrOutput {
	return o
}

func (o ExpressRouteCrossConnectionPeeringPropertiesPtrOutput) ToExpressRouteCrossConnectionPeeringPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCrossConnectionPeeringPropertiesPtrOutput {
	return o
}

func (o ExpressRouteCrossConnectionPeeringPropertiesPtrOutput) Elem() ExpressRouteCrossConnectionPeeringPropertiesOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringProperties) ExpressRouteCrossConnectionPeeringProperties {
		return *v
	}).(ExpressRouteCrossConnectionPeeringPropertiesOutput)
}

// The GatewayManager Etag.
func (o ExpressRouteCrossConnectionPeeringPropertiesPtrOutput) GatewayManagerEtag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringProperties) *string {
		if v == nil {
			return nil
		}
		return v.GatewayManagerEtag
	}).(pulumi.StringPtrOutput)
}

// The IPv6 peering configuration.
func (o ExpressRouteCrossConnectionPeeringPropertiesPtrOutput) Ipv6PeeringConfig() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringProperties) *Ipv6ExpressRouteCircuitPeeringConfig {
		if v == nil {
			return nil
		}
		return v.Ipv6PeeringConfig
	}).(Ipv6ExpressRouteCircuitPeeringConfigPtrOutput)
}

// Gets whether the provider or the customer last modified the peering.
func (o ExpressRouteCrossConnectionPeeringPropertiesPtrOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringProperties) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedBy
	}).(pulumi.StringPtrOutput)
}

// The Microsoft peering configuration.
func (o ExpressRouteCrossConnectionPeeringPropertiesPtrOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringProperties) *ExpressRouteCircuitPeeringConfig {
		if v == nil {
			return nil
		}
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The peer ASN.
func (o ExpressRouteCrossConnectionPeeringPropertiesPtrOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringProperties) *int {
		if v == nil {
			return nil
		}
		return v.PeerASN
	}).(pulumi.IntPtrOutput)
}

// The peering type.
func (o ExpressRouteCrossConnectionPeeringPropertiesPtrOutput) PeeringType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringProperties) *string {
		if v == nil {
			return nil
		}
		return v.PeeringType
	}).(pulumi.StringPtrOutput)
}

// The primary address prefix.
func (o ExpressRouteCrossConnectionPeeringPropertiesPtrOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The secondary address prefix.
func (o ExpressRouteCrossConnectionPeeringPropertiesPtrOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringProperties) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The shared key.
func (o ExpressRouteCrossConnectionPeeringPropertiesPtrOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringProperties) *string {
		if v == nil {
			return nil
		}
		return v.SharedKey
	}).(pulumi.StringPtrOutput)
}

// The peering state.
func (o ExpressRouteCrossConnectionPeeringPropertiesPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringProperties) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// The VLAN ID.
func (o ExpressRouteCrossConnectionPeeringPropertiesPtrOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringProperties) *int {
		if v == nil {
			return nil
		}
		return v.VlanId
	}).(pulumi.IntPtrOutput)
}

type ExpressRouteCrossConnectionPeeringPropertiesResponse struct {
	// The Azure ASN.
	AzureASN int `pulumi:"azureASN"`
	// The GatewayManager Etag.
	GatewayManagerEtag *string `pulumi:"gatewayManagerEtag"`
	// The IPv6 peering configuration.
	Ipv6PeeringConfig *Ipv6ExpressRouteCircuitPeeringConfigResponse `pulumi:"ipv6PeeringConfig"`
	// Gets whether the provider or the customer last modified the peering.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig *ExpressRouteCircuitPeeringConfigResponse `pulumi:"microsoftPeeringConfig"`
	// The peer ASN.
	PeerASN *int `pulumi:"peerASN"`
	// The peering type.
	PeeringType *string `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort string `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix *string `pulumi:"primaryPeerAddressPrefix"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The secondary port.
	SecondaryAzurePort string `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix *string `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey *string `pulumi:"sharedKey"`
	// The peering state.
	State *string `pulumi:"state"`
	// The VLAN ID.
	VlanId *int `pulumi:"vlanId"`
}

// ExpressRouteCrossConnectionPeeringPropertiesResponseInput is an input type that accepts ExpressRouteCrossConnectionPeeringPropertiesResponseArgs and ExpressRouteCrossConnectionPeeringPropertiesResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCrossConnectionPeeringPropertiesResponseInput` via:
//
//          ExpressRouteCrossConnectionPeeringPropertiesResponseArgs{...}
type ExpressRouteCrossConnectionPeeringPropertiesResponseInput interface {
	pulumi.Input

	ToExpressRouteCrossConnectionPeeringPropertiesResponseOutput() ExpressRouteCrossConnectionPeeringPropertiesResponseOutput
	ToExpressRouteCrossConnectionPeeringPropertiesResponseOutputWithContext(context.Context) ExpressRouteCrossConnectionPeeringPropertiesResponseOutput
}

type ExpressRouteCrossConnectionPeeringPropertiesResponseArgs struct {
	// The Azure ASN.
	AzureASN pulumi.IntInput `pulumi:"azureASN"`
	// The GatewayManager Etag.
	GatewayManagerEtag pulumi.StringPtrInput `pulumi:"gatewayManagerEtag"`
	// The IPv6 peering configuration.
	Ipv6PeeringConfig Ipv6ExpressRouteCircuitPeeringConfigResponsePtrInput `pulumi:"ipv6PeeringConfig"`
	// Gets whether the provider or the customer last modified the peering.
	LastModifiedBy pulumi.StringPtrInput `pulumi:"lastModifiedBy"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig ExpressRouteCircuitPeeringConfigResponsePtrInput `pulumi:"microsoftPeeringConfig"`
	// The peer ASN.
	PeerASN pulumi.IntPtrInput `pulumi:"peerASN"`
	// The peering type.
	PeeringType pulumi.StringPtrInput `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort pulumi.StringInput `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"primaryPeerAddressPrefix"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The secondary port.
	SecondaryAzurePort pulumi.StringInput `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// The peering state.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The VLAN ID.
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (ExpressRouteCrossConnectionPeeringPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCrossConnectionPeeringPropertiesResponse)(nil)).Elem()
}

func (i ExpressRouteCrossConnectionPeeringPropertiesResponseArgs) ToExpressRouteCrossConnectionPeeringPropertiesResponseOutput() ExpressRouteCrossConnectionPeeringPropertiesResponseOutput {
	return i.ToExpressRouteCrossConnectionPeeringPropertiesResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCrossConnectionPeeringPropertiesResponseArgs) ToExpressRouteCrossConnectionPeeringPropertiesResponseOutputWithContext(ctx context.Context) ExpressRouteCrossConnectionPeeringPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCrossConnectionPeeringPropertiesResponseOutput)
}

func (i ExpressRouteCrossConnectionPeeringPropertiesResponseArgs) ToExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput() ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput {
	return i.ToExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCrossConnectionPeeringPropertiesResponseArgs) ToExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCrossConnectionPeeringPropertiesResponseOutput).ToExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCrossConnectionPeeringPropertiesResponsePtrInput is an input type that accepts ExpressRouteCrossConnectionPeeringPropertiesResponseArgs, ExpressRouteCrossConnectionPeeringPropertiesResponsePtr and ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCrossConnectionPeeringPropertiesResponsePtrInput` via:
//
//          ExpressRouteCrossConnectionPeeringPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCrossConnectionPeeringPropertiesResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput() ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput
	ToExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutputWithContext(context.Context) ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput
}

type expressRouteCrossConnectionPeeringPropertiesResponsePtrType ExpressRouteCrossConnectionPeeringPropertiesResponseArgs

func ExpressRouteCrossConnectionPeeringPropertiesResponsePtr(v *ExpressRouteCrossConnectionPeeringPropertiesResponseArgs) ExpressRouteCrossConnectionPeeringPropertiesResponsePtrInput {
	return (*expressRouteCrossConnectionPeeringPropertiesResponsePtrType)(v)
}

func (*expressRouteCrossConnectionPeeringPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCrossConnectionPeeringPropertiesResponse)(nil)).Elem()
}

func (i *expressRouteCrossConnectionPeeringPropertiesResponsePtrType) ToExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput() ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput {
	return i.ToExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCrossConnectionPeeringPropertiesResponsePtrType) ToExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput)
}

type ExpressRouteCrossConnectionPeeringPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCrossConnectionPeeringPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCrossConnectionPeeringPropertiesResponse)(nil)).Elem()
}

func (o ExpressRouteCrossConnectionPeeringPropertiesResponseOutput) ToExpressRouteCrossConnectionPeeringPropertiesResponseOutput() ExpressRouteCrossConnectionPeeringPropertiesResponseOutput {
	return o
}

func (o ExpressRouteCrossConnectionPeeringPropertiesResponseOutput) ToExpressRouteCrossConnectionPeeringPropertiesResponseOutputWithContext(ctx context.Context) ExpressRouteCrossConnectionPeeringPropertiesResponseOutput {
	return o
}

func (o ExpressRouteCrossConnectionPeeringPropertiesResponseOutput) ToExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput() ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput {
	return o.ToExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCrossConnectionPeeringPropertiesResponseOutput) ToExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringPropertiesResponse) *ExpressRouteCrossConnectionPeeringPropertiesResponse {
		return &v
	}).(ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput)
}

// The Azure ASN.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponseOutput) AzureASN() pulumi.IntOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringPropertiesResponse) int { return v.AzureASN }).(pulumi.IntOutput)
}

// The GatewayManager Etag.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponseOutput) GatewayManagerEtag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringPropertiesResponse) *string { return v.GatewayManagerEtag }).(pulumi.StringPtrOutput)
}

// The IPv6 peering configuration.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponseOutput) Ipv6PeeringConfig() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringPropertiesResponse) *Ipv6ExpressRouteCircuitPeeringConfigResponse {
		return v.Ipv6PeeringConfig
	}).(Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// Gets whether the provider or the customer last modified the peering.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringPropertiesResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The Microsoft peering configuration.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponseOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringPropertiesResponse) *ExpressRouteCircuitPeeringConfigResponse {
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// The peer ASN.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponseOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringPropertiesResponse) *int { return v.PeerASN }).(pulumi.IntPtrOutput)
}

// The peering type.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponseOutput) PeeringType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringPropertiesResponse) *string { return v.PeeringType }).(pulumi.StringPtrOutput)
}

// The primary port.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponseOutput) PrimaryAzurePort() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringPropertiesResponse) string { return v.PrimaryAzurePort }).(pulumi.StringOutput)
}

// The primary address prefix.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponseOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringPropertiesResponse) *string {
		return v.PrimaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The secondary port.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponseOutput) SecondaryAzurePort() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringPropertiesResponse) string { return v.SecondaryAzurePort }).(pulumi.StringOutput)
}

// The secondary address prefix.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponseOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringPropertiesResponse) *string {
		return v.SecondaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The shared key.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponseOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringPropertiesResponse) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// The peering state.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringPropertiesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The VLAN ID.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponseOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCrossConnectionPeeringPropertiesResponse) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCrossConnectionPeeringPropertiesResponse)(nil)).Elem()
}

func (o ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput) ToExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput() ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput {
	return o
}

func (o ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput) ToExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput {
	return o
}

func (o ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput) Elem() ExpressRouteCrossConnectionPeeringPropertiesResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringPropertiesResponse) ExpressRouteCrossConnectionPeeringPropertiesResponse {
		return *v
	}).(ExpressRouteCrossConnectionPeeringPropertiesResponseOutput)
}

// The Azure ASN.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput) AzureASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.AzureASN
	}).(pulumi.IntPtrOutput)
}

// The GatewayManager Etag.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput) GatewayManagerEtag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.GatewayManagerEtag
	}).(pulumi.StringPtrOutput)
}

// The IPv6 peering configuration.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput) Ipv6PeeringConfig() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringPropertiesResponse) *Ipv6ExpressRouteCircuitPeeringConfigResponse {
		if v == nil {
			return nil
		}
		return v.Ipv6PeeringConfig
	}).(Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// Gets whether the provider or the customer last modified the peering.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedBy
	}).(pulumi.StringPtrOutput)
}

// The Microsoft peering configuration.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringPropertiesResponse) *ExpressRouteCircuitPeeringConfigResponse {
		if v == nil {
			return nil
		}
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// The peer ASN.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.PeerASN
	}).(pulumi.IntPtrOutput)
}

// The peering type.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput) PeeringType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PeeringType
	}).(pulumi.StringPtrOutput)
}

// The primary port.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput) PrimaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrimaryAzurePort
	}).(pulumi.StringPtrOutput)
}

// The primary address prefix.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The secondary port.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput) SecondaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecondaryAzurePort
	}).(pulumi.StringPtrOutput)
}

// The secondary address prefix.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The shared key.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SharedKey
	}).(pulumi.StringPtrOutput)
}

// The peering state.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// The VLAN ID.
func (o ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCrossConnectionPeeringPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.VlanId
	}).(pulumi.IntPtrOutput)
}

// ExpressRoute gateway resource.
type ExpressRouteGatewayType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// ExpressRoute gateway resource properties.
	Properties ExpressRouteGatewayPropertiesResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// ExpressRouteGatewayTypeInput is an input type that accepts ExpressRouteGatewayTypeArgs and ExpressRouteGatewayTypeOutput values.
// You can construct a concrete instance of `ExpressRouteGatewayTypeInput` via:
//
//          ExpressRouteGatewayTypeArgs{...}
type ExpressRouteGatewayTypeInput interface {
	pulumi.Input

	ToExpressRouteGatewayTypeOutput() ExpressRouteGatewayTypeOutput
	ToExpressRouteGatewayTypeOutputWithContext(context.Context) ExpressRouteGatewayTypeOutput
}

// ExpressRoute gateway resource.
type ExpressRouteGatewayTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// ExpressRoute gateway resource properties.
	Properties ExpressRouteGatewayPropertiesResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ExpressRouteGatewayTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayType)(nil)).Elem()
}

func (i ExpressRouteGatewayTypeArgs) ToExpressRouteGatewayTypeOutput() ExpressRouteGatewayTypeOutput {
	return i.ToExpressRouteGatewayTypeOutputWithContext(context.Background())
}

func (i ExpressRouteGatewayTypeArgs) ToExpressRouteGatewayTypeOutputWithContext(ctx context.Context) ExpressRouteGatewayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayTypeOutput)
}

// ExpressRoute gateway resource.
type ExpressRouteGatewayTypeOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayType)(nil)).Elem()
}

func (o ExpressRouteGatewayTypeOutput) ToExpressRouteGatewayTypeOutput() ExpressRouteGatewayTypeOutput {
	return o
}

func (o ExpressRouteGatewayTypeOutput) ToExpressRouteGatewayTypeOutputWithContext(ctx context.Context) ExpressRouteGatewayTypeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteGatewayTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteGatewayType) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource location.
func (o ExpressRouteGatewayTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o ExpressRouteGatewayTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteGatewayType) string { return v.Name }).(pulumi.StringOutput)
}

// ExpressRoute gateway resource properties.
func (o ExpressRouteGatewayTypeOutput) Properties() ExpressRouteGatewayPropertiesResponseOutput {
	return o.ApplyT(func(v ExpressRouteGatewayType) ExpressRouteGatewayPropertiesResponse { return v.Properties }).(ExpressRouteGatewayPropertiesResponseOutput)
}

// Resource tags.
func (o ExpressRouteGatewayTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ExpressRouteGatewayType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o ExpressRouteGatewayTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteGatewayType) string { return v.Type }).(pulumi.StringOutput)
}

// ExpressRoute gateway resource properties.
type ExpressRouteGatewayProperties struct {
	// Configuration for auto scaling.
	AutoScaleConfiguration *ExpressRouteGatewayPropertiesProperties `pulumi:"autoScaleConfiguration"`
	// The Virtual Hub where the ExpressRoute gateway is or will be deployed.
	VirtualHub VirtualHubId `pulumi:"virtualHub"`
}

// ExpressRouteGatewayPropertiesInput is an input type that accepts ExpressRouteGatewayPropertiesArgs and ExpressRouteGatewayPropertiesOutput values.
// You can construct a concrete instance of `ExpressRouteGatewayPropertiesInput` via:
//
//          ExpressRouteGatewayPropertiesArgs{...}
type ExpressRouteGatewayPropertiesInput interface {
	pulumi.Input

	ToExpressRouteGatewayPropertiesOutput() ExpressRouteGatewayPropertiesOutput
	ToExpressRouteGatewayPropertiesOutputWithContext(context.Context) ExpressRouteGatewayPropertiesOutput
}

// ExpressRoute gateway resource properties.
type ExpressRouteGatewayPropertiesArgs struct {
	// Configuration for auto scaling.
	AutoScaleConfiguration ExpressRouteGatewayPropertiesPropertiesPtrInput `pulumi:"autoScaleConfiguration"`
	// The Virtual Hub where the ExpressRoute gateway is or will be deployed.
	VirtualHub VirtualHubIdInput `pulumi:"virtualHub"`
}

func (ExpressRouteGatewayPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayProperties)(nil)).Elem()
}

func (i ExpressRouteGatewayPropertiesArgs) ToExpressRouteGatewayPropertiesOutput() ExpressRouteGatewayPropertiesOutput {
	return i.ToExpressRouteGatewayPropertiesOutputWithContext(context.Background())
}

func (i ExpressRouteGatewayPropertiesArgs) ToExpressRouteGatewayPropertiesOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesOutput)
}

func (i ExpressRouteGatewayPropertiesArgs) ToExpressRouteGatewayPropertiesPtrOutput() ExpressRouteGatewayPropertiesPtrOutput {
	return i.ToExpressRouteGatewayPropertiesPtrOutputWithContext(context.Background())
}

func (i ExpressRouteGatewayPropertiesArgs) ToExpressRouteGatewayPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesOutput).ToExpressRouteGatewayPropertiesPtrOutputWithContext(ctx)
}

// ExpressRouteGatewayPropertiesPtrInput is an input type that accepts ExpressRouteGatewayPropertiesArgs, ExpressRouteGatewayPropertiesPtr and ExpressRouteGatewayPropertiesPtrOutput values.
// You can construct a concrete instance of `ExpressRouteGatewayPropertiesPtrInput` via:
//
//          ExpressRouteGatewayPropertiesArgs{...}
//
//  or:
//
//          nil
type ExpressRouteGatewayPropertiesPtrInput interface {
	pulumi.Input

	ToExpressRouteGatewayPropertiesPtrOutput() ExpressRouteGatewayPropertiesPtrOutput
	ToExpressRouteGatewayPropertiesPtrOutputWithContext(context.Context) ExpressRouteGatewayPropertiesPtrOutput
}

type expressRouteGatewayPropertiesPtrType ExpressRouteGatewayPropertiesArgs

func ExpressRouteGatewayPropertiesPtr(v *ExpressRouteGatewayPropertiesArgs) ExpressRouteGatewayPropertiesPtrInput {
	return (*expressRouteGatewayPropertiesPtrType)(v)
}

func (*expressRouteGatewayPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteGatewayProperties)(nil)).Elem()
}

func (i *expressRouteGatewayPropertiesPtrType) ToExpressRouteGatewayPropertiesPtrOutput() ExpressRouteGatewayPropertiesPtrOutput {
	return i.ToExpressRouteGatewayPropertiesPtrOutputWithContext(context.Background())
}

func (i *expressRouteGatewayPropertiesPtrType) ToExpressRouteGatewayPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesPtrOutput)
}

// ExpressRoute gateway resource properties.
type ExpressRouteGatewayPropertiesOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayProperties)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesOutput) ToExpressRouteGatewayPropertiesOutput() ExpressRouteGatewayPropertiesOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesOutput) ToExpressRouteGatewayPropertiesOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesOutput) ToExpressRouteGatewayPropertiesPtrOutput() ExpressRouteGatewayPropertiesPtrOutput {
	return o.ToExpressRouteGatewayPropertiesPtrOutputWithContext(context.Background())
}

func (o ExpressRouteGatewayPropertiesOutput) ToExpressRouteGatewayPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayProperties) *ExpressRouteGatewayProperties {
		return &v
	}).(ExpressRouteGatewayPropertiesPtrOutput)
}

// Configuration for auto scaling.
func (o ExpressRouteGatewayPropertiesOutput) AutoScaleConfiguration() ExpressRouteGatewayPropertiesPropertiesPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayProperties) *ExpressRouteGatewayPropertiesProperties {
		return v.AutoScaleConfiguration
	}).(ExpressRouteGatewayPropertiesPropertiesPtrOutput)
}

// The Virtual Hub where the ExpressRoute gateway is or will be deployed.
func (o ExpressRouteGatewayPropertiesOutput) VirtualHub() VirtualHubIdOutput {
	return o.ApplyT(func(v ExpressRouteGatewayProperties) VirtualHubId { return v.VirtualHub }).(VirtualHubIdOutput)
}

type ExpressRouteGatewayPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteGatewayProperties)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesPtrOutput) ToExpressRouteGatewayPropertiesPtrOutput() ExpressRouteGatewayPropertiesPtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesPtrOutput) ToExpressRouteGatewayPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesPtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesPtrOutput) Elem() ExpressRouteGatewayPropertiesOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayProperties) ExpressRouteGatewayProperties { return *v }).(ExpressRouteGatewayPropertiesOutput)
}

// Configuration for auto scaling.
func (o ExpressRouteGatewayPropertiesPtrOutput) AutoScaleConfiguration() ExpressRouteGatewayPropertiesPropertiesPtrOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayProperties) *ExpressRouteGatewayPropertiesProperties {
		if v == nil {
			return nil
		}
		return v.AutoScaleConfiguration
	}).(ExpressRouteGatewayPropertiesPropertiesPtrOutput)
}

// The Virtual Hub where the ExpressRoute gateway is or will be deployed.
func (o ExpressRouteGatewayPropertiesPtrOutput) VirtualHub() VirtualHubIdPtrOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayProperties) *VirtualHubId {
		if v == nil {
			return nil
		}
		return &v.VirtualHub
	}).(VirtualHubIdPtrOutput)
}

// Configuration for auto scaling.
type ExpressRouteGatewayPropertiesProperties struct {
	// Minimum and maximum number of scale units to deploy.
	Bounds *ExpressRouteGatewayPropertiesProperties `pulumi:"bounds"`
}

// ExpressRouteGatewayPropertiesPropertiesInput is an input type that accepts ExpressRouteGatewayPropertiesPropertiesArgs and ExpressRouteGatewayPropertiesPropertiesOutput values.
// You can construct a concrete instance of `ExpressRouteGatewayPropertiesPropertiesInput` via:
//
//          ExpressRouteGatewayPropertiesPropertiesArgs{...}
type ExpressRouteGatewayPropertiesPropertiesInput interface {
	pulumi.Input

	ToExpressRouteGatewayPropertiesPropertiesOutput() ExpressRouteGatewayPropertiesPropertiesOutput
	ToExpressRouteGatewayPropertiesPropertiesOutputWithContext(context.Context) ExpressRouteGatewayPropertiesPropertiesOutput
}

// Configuration for auto scaling.
type ExpressRouteGatewayPropertiesPropertiesArgs struct {
	// Minimum and maximum number of scale units to deploy.
	Bounds ExpressRouteGatewayPropertiesPropertiesPtrInput `pulumi:"bounds"`
}

func (ExpressRouteGatewayPropertiesPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayPropertiesProperties)(nil)).Elem()
}

func (i ExpressRouteGatewayPropertiesPropertiesArgs) ToExpressRouteGatewayPropertiesPropertiesOutput() ExpressRouteGatewayPropertiesPropertiesOutput {
	return i.ToExpressRouteGatewayPropertiesPropertiesOutputWithContext(context.Background())
}

func (i ExpressRouteGatewayPropertiesPropertiesArgs) ToExpressRouteGatewayPropertiesPropertiesOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesPropertiesOutput)
}

func (i ExpressRouteGatewayPropertiesPropertiesArgs) ToExpressRouteGatewayPropertiesPropertiesPtrOutput() ExpressRouteGatewayPropertiesPropertiesPtrOutput {
	return i.ToExpressRouteGatewayPropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (i ExpressRouteGatewayPropertiesPropertiesArgs) ToExpressRouteGatewayPropertiesPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesPropertiesOutput).ToExpressRouteGatewayPropertiesPropertiesPtrOutputWithContext(ctx)
}

// ExpressRouteGatewayPropertiesPropertiesPtrInput is an input type that accepts ExpressRouteGatewayPropertiesPropertiesArgs, ExpressRouteGatewayPropertiesPropertiesPtr and ExpressRouteGatewayPropertiesPropertiesPtrOutput values.
// You can construct a concrete instance of `ExpressRouteGatewayPropertiesPropertiesPtrInput` via:
//
//          ExpressRouteGatewayPropertiesPropertiesArgs{...}
//
//  or:
//
//          nil
type ExpressRouteGatewayPropertiesPropertiesPtrInput interface {
	pulumi.Input

	ToExpressRouteGatewayPropertiesPropertiesPtrOutput() ExpressRouteGatewayPropertiesPropertiesPtrOutput
	ToExpressRouteGatewayPropertiesPropertiesPtrOutputWithContext(context.Context) ExpressRouteGatewayPropertiesPropertiesPtrOutput
}

type expressRouteGatewayPropertiesPropertiesPtrType ExpressRouteGatewayPropertiesPropertiesArgs

func ExpressRouteGatewayPropertiesPropertiesPtr(v *ExpressRouteGatewayPropertiesPropertiesArgs) ExpressRouteGatewayPropertiesPropertiesPtrInput {
	return (*expressRouteGatewayPropertiesPropertiesPtrType)(v)
}

func (*expressRouteGatewayPropertiesPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteGatewayPropertiesProperties)(nil)).Elem()
}

func (i *expressRouteGatewayPropertiesPropertiesPtrType) ToExpressRouteGatewayPropertiesPropertiesPtrOutput() ExpressRouteGatewayPropertiesPropertiesPtrOutput {
	return i.ToExpressRouteGatewayPropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (i *expressRouteGatewayPropertiesPropertiesPtrType) ToExpressRouteGatewayPropertiesPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesPropertiesPtrOutput)
}

// Configuration for auto scaling.
type ExpressRouteGatewayPropertiesPropertiesOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayPropertiesProperties)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesPropertiesOutput) ToExpressRouteGatewayPropertiesPropertiesOutput() ExpressRouteGatewayPropertiesPropertiesOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesPropertiesOutput) ToExpressRouteGatewayPropertiesPropertiesOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesPropertiesOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesPropertiesOutput) ToExpressRouteGatewayPropertiesPropertiesPtrOutput() ExpressRouteGatewayPropertiesPropertiesPtrOutput {
	return o.ToExpressRouteGatewayPropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (o ExpressRouteGatewayPropertiesPropertiesOutput) ToExpressRouteGatewayPropertiesPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesPropertiesPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesProperties) *ExpressRouteGatewayPropertiesProperties {
		return &v
	}).(ExpressRouteGatewayPropertiesPropertiesPtrOutput)
}

// Minimum and maximum number of scale units to deploy.
func (o ExpressRouteGatewayPropertiesPropertiesOutput) Bounds() ExpressRouteGatewayPropertiesPropertiesPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesProperties) *ExpressRouteGatewayPropertiesProperties {
		return v.Bounds
	}).(ExpressRouteGatewayPropertiesPropertiesPtrOutput)
}

type ExpressRouteGatewayPropertiesPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteGatewayPropertiesProperties)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesPropertiesPtrOutput) ToExpressRouteGatewayPropertiesPropertiesPtrOutput() ExpressRouteGatewayPropertiesPropertiesPtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesPropertiesPtrOutput) ToExpressRouteGatewayPropertiesPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesPropertiesPtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesPropertiesPtrOutput) Elem() ExpressRouteGatewayPropertiesPropertiesOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesProperties) ExpressRouteGatewayPropertiesProperties { return *v }).(ExpressRouteGatewayPropertiesPropertiesOutput)
}

// Minimum and maximum number of scale units to deploy.
func (o ExpressRouteGatewayPropertiesPropertiesPtrOutput) Bounds() ExpressRouteGatewayPropertiesPropertiesPtrOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesProperties) *ExpressRouteGatewayPropertiesProperties {
		if v == nil {
			return nil
		}
		return v.Bounds
	}).(ExpressRouteGatewayPropertiesPropertiesPtrOutput)
}

// ExpressRoute gateway resource properties.
type ExpressRouteGatewayPropertiesResponse struct {
	// Configuration for auto scaling.
	AutoScaleConfiguration *ExpressRouteGatewayPropertiesResponseProperties `pulumi:"autoScaleConfiguration"`
	// List of ExpressRoute connections to the ExpressRoute gateway.
	ExpressRouteConnections []ExpressRouteConnectionResponse `pulumi:"expressRouteConnections"`
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The Virtual Hub where the ExpressRoute gateway is or will be deployed.
	VirtualHub VirtualHubIdResponse `pulumi:"virtualHub"`
}

// ExpressRouteGatewayPropertiesResponseInput is an input type that accepts ExpressRouteGatewayPropertiesResponseArgs and ExpressRouteGatewayPropertiesResponseOutput values.
// You can construct a concrete instance of `ExpressRouteGatewayPropertiesResponseInput` via:
//
//          ExpressRouteGatewayPropertiesResponseArgs{...}
type ExpressRouteGatewayPropertiesResponseInput interface {
	pulumi.Input

	ToExpressRouteGatewayPropertiesResponseOutput() ExpressRouteGatewayPropertiesResponseOutput
	ToExpressRouteGatewayPropertiesResponseOutputWithContext(context.Context) ExpressRouteGatewayPropertiesResponseOutput
}

// ExpressRoute gateway resource properties.
type ExpressRouteGatewayPropertiesResponseArgs struct {
	// Configuration for auto scaling.
	AutoScaleConfiguration ExpressRouteGatewayPropertiesResponsePropertiesPtrInput `pulumi:"autoScaleConfiguration"`
	// List of ExpressRoute connections to the ExpressRoute gateway.
	ExpressRouteConnections ExpressRouteConnectionResponseArrayInput `pulumi:"expressRouteConnections"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The Virtual Hub where the ExpressRoute gateway is or will be deployed.
	VirtualHub VirtualHubIdResponseInput `pulumi:"virtualHub"`
}

func (ExpressRouteGatewayPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayPropertiesResponse)(nil)).Elem()
}

func (i ExpressRouteGatewayPropertiesResponseArgs) ToExpressRouteGatewayPropertiesResponseOutput() ExpressRouteGatewayPropertiesResponseOutput {
	return i.ToExpressRouteGatewayPropertiesResponseOutputWithContext(context.Background())
}

func (i ExpressRouteGatewayPropertiesResponseArgs) ToExpressRouteGatewayPropertiesResponseOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesResponseOutput)
}

func (i ExpressRouteGatewayPropertiesResponseArgs) ToExpressRouteGatewayPropertiesResponsePtrOutput() ExpressRouteGatewayPropertiesResponsePtrOutput {
	return i.ToExpressRouteGatewayPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteGatewayPropertiesResponseArgs) ToExpressRouteGatewayPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesResponseOutput).ToExpressRouteGatewayPropertiesResponsePtrOutputWithContext(ctx)
}

// ExpressRouteGatewayPropertiesResponsePtrInput is an input type that accepts ExpressRouteGatewayPropertiesResponseArgs, ExpressRouteGatewayPropertiesResponsePtr and ExpressRouteGatewayPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteGatewayPropertiesResponsePtrInput` via:
//
//          ExpressRouteGatewayPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteGatewayPropertiesResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteGatewayPropertiesResponsePtrOutput() ExpressRouteGatewayPropertiesResponsePtrOutput
	ToExpressRouteGatewayPropertiesResponsePtrOutputWithContext(context.Context) ExpressRouteGatewayPropertiesResponsePtrOutput
}

type expressRouteGatewayPropertiesResponsePtrType ExpressRouteGatewayPropertiesResponseArgs

func ExpressRouteGatewayPropertiesResponsePtr(v *ExpressRouteGatewayPropertiesResponseArgs) ExpressRouteGatewayPropertiesResponsePtrInput {
	return (*expressRouteGatewayPropertiesResponsePtrType)(v)
}

func (*expressRouteGatewayPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteGatewayPropertiesResponse)(nil)).Elem()
}

func (i *expressRouteGatewayPropertiesResponsePtrType) ToExpressRouteGatewayPropertiesResponsePtrOutput() ExpressRouteGatewayPropertiesResponsePtrOutput {
	return i.ToExpressRouteGatewayPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteGatewayPropertiesResponsePtrType) ToExpressRouteGatewayPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesResponsePtrOutput)
}

// ExpressRoute gateway resource properties.
type ExpressRouteGatewayPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayPropertiesResponse)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesResponseOutput) ToExpressRouteGatewayPropertiesResponseOutput() ExpressRouteGatewayPropertiesResponseOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesResponseOutput) ToExpressRouteGatewayPropertiesResponseOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponseOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesResponseOutput) ToExpressRouteGatewayPropertiesResponsePtrOutput() ExpressRouteGatewayPropertiesResponsePtrOutput {
	return o.ToExpressRouteGatewayPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteGatewayPropertiesResponseOutput) ToExpressRouteGatewayPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesResponse) *ExpressRouteGatewayPropertiesResponse {
		return &v
	}).(ExpressRouteGatewayPropertiesResponsePtrOutput)
}

// Configuration for auto scaling.
func (o ExpressRouteGatewayPropertiesResponseOutput) AutoScaleConfiguration() ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesResponse) *ExpressRouteGatewayPropertiesResponseProperties {
		return v.AutoScaleConfiguration
	}).(ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput)
}

// List of ExpressRoute connections to the ExpressRoute gateway.
func (o ExpressRouteGatewayPropertiesResponseOutput) ExpressRouteConnections() ExpressRouteConnectionResponseArrayOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesResponse) []ExpressRouteConnectionResponse {
		return v.ExpressRouteConnections
	}).(ExpressRouteConnectionResponseArrayOutput)
}

// The provisioning state of the resource.
func (o ExpressRouteGatewayPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The Virtual Hub where the ExpressRoute gateway is or will be deployed.
func (o ExpressRouteGatewayPropertiesResponseOutput) VirtualHub() VirtualHubIdResponseOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesResponse) VirtualHubIdResponse { return v.VirtualHub }).(VirtualHubIdResponseOutput)
}

type ExpressRouteGatewayPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteGatewayPropertiesResponse)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesResponsePtrOutput) ToExpressRouteGatewayPropertiesResponsePtrOutput() ExpressRouteGatewayPropertiesResponsePtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesResponsePtrOutput) ToExpressRouteGatewayPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponsePtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesResponsePtrOutput) Elem() ExpressRouteGatewayPropertiesResponseOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesResponse) ExpressRouteGatewayPropertiesResponse { return *v }).(ExpressRouteGatewayPropertiesResponseOutput)
}

// Configuration for auto scaling.
func (o ExpressRouteGatewayPropertiesResponsePtrOutput) AutoScaleConfiguration() ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesResponse) *ExpressRouteGatewayPropertiesResponseProperties {
		if v == nil {
			return nil
		}
		return v.AutoScaleConfiguration
	}).(ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput)
}

// List of ExpressRoute connections to the ExpressRoute gateway.
func (o ExpressRouteGatewayPropertiesResponsePtrOutput) ExpressRouteConnections() ExpressRouteConnectionResponseArrayOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesResponse) []ExpressRouteConnectionResponse {
		if v == nil {
			return nil
		}
		return v.ExpressRouteConnections
	}).(ExpressRouteConnectionResponseArrayOutput)
}

// The provisioning state of the resource.
func (o ExpressRouteGatewayPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The Virtual Hub where the ExpressRoute gateway is or will be deployed.
func (o ExpressRouteGatewayPropertiesResponsePtrOutput) VirtualHub() VirtualHubIdResponsePtrOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesResponse) *VirtualHubIdResponse {
		if v == nil {
			return nil
		}
		return &v.VirtualHub
	}).(VirtualHubIdResponsePtrOutput)
}

// Configuration for auto scaling.
type ExpressRouteGatewayPropertiesResponseProperties struct {
	// Minimum and maximum number of scale units to deploy.
	Bounds *ExpressRouteGatewayPropertiesResponseProperties `pulumi:"bounds"`
}

// ExpressRouteGatewayPropertiesResponsePropertiesInput is an input type that accepts ExpressRouteGatewayPropertiesResponsePropertiesArgs and ExpressRouteGatewayPropertiesResponsePropertiesOutput values.
// You can construct a concrete instance of `ExpressRouteGatewayPropertiesResponsePropertiesInput` via:
//
//          ExpressRouteGatewayPropertiesResponsePropertiesArgs{...}
type ExpressRouteGatewayPropertiesResponsePropertiesInput interface {
	pulumi.Input

	ToExpressRouteGatewayPropertiesResponsePropertiesOutput() ExpressRouteGatewayPropertiesResponsePropertiesOutput
	ToExpressRouteGatewayPropertiesResponsePropertiesOutputWithContext(context.Context) ExpressRouteGatewayPropertiesResponsePropertiesOutput
}

// Configuration for auto scaling.
type ExpressRouteGatewayPropertiesResponsePropertiesArgs struct {
	// Minimum and maximum number of scale units to deploy.
	Bounds ExpressRouteGatewayPropertiesResponsePropertiesPtrInput `pulumi:"bounds"`
}

func (ExpressRouteGatewayPropertiesResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayPropertiesResponseProperties)(nil)).Elem()
}

func (i ExpressRouteGatewayPropertiesResponsePropertiesArgs) ToExpressRouteGatewayPropertiesResponsePropertiesOutput() ExpressRouteGatewayPropertiesResponsePropertiesOutput {
	return i.ToExpressRouteGatewayPropertiesResponsePropertiesOutputWithContext(context.Background())
}

func (i ExpressRouteGatewayPropertiesResponsePropertiesArgs) ToExpressRouteGatewayPropertiesResponsePropertiesOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesResponsePropertiesOutput)
}

func (i ExpressRouteGatewayPropertiesResponsePropertiesArgs) ToExpressRouteGatewayPropertiesResponsePropertiesPtrOutput() ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput {
	return i.ToExpressRouteGatewayPropertiesResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i ExpressRouteGatewayPropertiesResponsePropertiesArgs) ToExpressRouteGatewayPropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesResponsePropertiesOutput).ToExpressRouteGatewayPropertiesResponsePropertiesPtrOutputWithContext(ctx)
}

// ExpressRouteGatewayPropertiesResponsePropertiesPtrInput is an input type that accepts ExpressRouteGatewayPropertiesResponsePropertiesArgs, ExpressRouteGatewayPropertiesResponsePropertiesPtr and ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `ExpressRouteGatewayPropertiesResponsePropertiesPtrInput` via:
//
//          ExpressRouteGatewayPropertiesResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type ExpressRouteGatewayPropertiesResponsePropertiesPtrInput interface {
	pulumi.Input

	ToExpressRouteGatewayPropertiesResponsePropertiesPtrOutput() ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput
	ToExpressRouteGatewayPropertiesResponsePropertiesPtrOutputWithContext(context.Context) ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput
}

type expressRouteGatewayPropertiesResponsePropertiesPtrType ExpressRouteGatewayPropertiesResponsePropertiesArgs

func ExpressRouteGatewayPropertiesResponsePropertiesPtr(v *ExpressRouteGatewayPropertiesResponsePropertiesArgs) ExpressRouteGatewayPropertiesResponsePropertiesPtrInput {
	return (*expressRouteGatewayPropertiesResponsePropertiesPtrType)(v)
}

func (*expressRouteGatewayPropertiesResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteGatewayPropertiesResponseProperties)(nil)).Elem()
}

func (i *expressRouteGatewayPropertiesResponsePropertiesPtrType) ToExpressRouteGatewayPropertiesResponsePropertiesPtrOutput() ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput {
	return i.ToExpressRouteGatewayPropertiesResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *expressRouteGatewayPropertiesResponsePropertiesPtrType) ToExpressRouteGatewayPropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput)
}

// Configuration for auto scaling.
type ExpressRouteGatewayPropertiesResponsePropertiesOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayPropertiesResponseProperties)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesResponsePropertiesOutput) ToExpressRouteGatewayPropertiesResponsePropertiesOutput() ExpressRouteGatewayPropertiesResponsePropertiesOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesResponsePropertiesOutput) ToExpressRouteGatewayPropertiesResponsePropertiesOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponsePropertiesOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesResponsePropertiesOutput) ToExpressRouteGatewayPropertiesResponsePropertiesPtrOutput() ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput {
	return o.ToExpressRouteGatewayPropertiesResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o ExpressRouteGatewayPropertiesResponsePropertiesOutput) ToExpressRouteGatewayPropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesResponseProperties) *ExpressRouteGatewayPropertiesResponseProperties {
		return &v
	}).(ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput)
}

// Minimum and maximum number of scale units to deploy.
func (o ExpressRouteGatewayPropertiesResponsePropertiesOutput) Bounds() ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesResponseProperties) *ExpressRouteGatewayPropertiesResponseProperties {
		return v.Bounds
	}).(ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput)
}

type ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteGatewayPropertiesResponseProperties)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput) ToExpressRouteGatewayPropertiesResponsePropertiesPtrOutput() ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput) ToExpressRouteGatewayPropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput) Elem() ExpressRouteGatewayPropertiesResponsePropertiesOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesResponseProperties) ExpressRouteGatewayPropertiesResponseProperties {
		return *v
	}).(ExpressRouteGatewayPropertiesResponsePropertiesOutput)
}

// Minimum and maximum number of scale units to deploy.
func (o ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput) Bounds() ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesResponseProperties) *ExpressRouteGatewayPropertiesResponseProperties {
		if v == nil {
			return nil
		}
		return v.Bounds
	}).(ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput)
}

// ExpressRouteLink child resource definition.
type ExpressRouteLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of child port resource that is unique among child port resources of the parent.
	Name *string `pulumi:"name"`
	// ExpressRouteLink properties
	Properties *ExpressRouteLinkPropertiesFormat `pulumi:"properties"`
}

// ExpressRouteLinkInput is an input type that accepts ExpressRouteLinkArgs and ExpressRouteLinkOutput values.
// You can construct a concrete instance of `ExpressRouteLinkInput` via:
//
//          ExpressRouteLinkArgs{...}
type ExpressRouteLinkInput interface {
	pulumi.Input

	ToExpressRouteLinkOutput() ExpressRouteLinkOutput
	ToExpressRouteLinkOutputWithContext(context.Context) ExpressRouteLinkOutput
}

// ExpressRouteLink child resource definition.
type ExpressRouteLinkArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of child port resource that is unique among child port resources of the parent.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// ExpressRouteLink properties
	Properties ExpressRouteLinkPropertiesFormatPtrInput `pulumi:"properties"`
}

func (ExpressRouteLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteLink)(nil)).Elem()
}

func (i ExpressRouteLinkArgs) ToExpressRouteLinkOutput() ExpressRouteLinkOutput {
	return i.ToExpressRouteLinkOutputWithContext(context.Background())
}

func (i ExpressRouteLinkArgs) ToExpressRouteLinkOutputWithContext(ctx context.Context) ExpressRouteLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkOutput)
}

// ExpressRouteLinkArrayInput is an input type that accepts ExpressRouteLinkArray and ExpressRouteLinkArrayOutput values.
// You can construct a concrete instance of `ExpressRouteLinkArrayInput` via:
//
//          ExpressRouteLinkArray{ ExpressRouteLinkArgs{...} }
type ExpressRouteLinkArrayInput interface {
	pulumi.Input

	ToExpressRouteLinkArrayOutput() ExpressRouteLinkArrayOutput
	ToExpressRouteLinkArrayOutputWithContext(context.Context) ExpressRouteLinkArrayOutput
}

type ExpressRouteLinkArray []ExpressRouteLinkInput

func (ExpressRouteLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteLink)(nil)).Elem()
}

func (i ExpressRouteLinkArray) ToExpressRouteLinkArrayOutput() ExpressRouteLinkArrayOutput {
	return i.ToExpressRouteLinkArrayOutputWithContext(context.Background())
}

func (i ExpressRouteLinkArray) ToExpressRouteLinkArrayOutputWithContext(ctx context.Context) ExpressRouteLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkArrayOutput)
}

// ExpressRouteLink child resource definition.
type ExpressRouteLinkOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteLink)(nil)).Elem()
}

func (o ExpressRouteLinkOutput) ToExpressRouteLinkOutput() ExpressRouteLinkOutput {
	return o
}

func (o ExpressRouteLinkOutput) ToExpressRouteLinkOutputWithContext(ctx context.Context) ExpressRouteLinkOutput {
	return o
}

// Resource ID.
func (o ExpressRouteLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of child port resource that is unique among child port resources of the parent.
func (o ExpressRouteLinkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLink) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// ExpressRouteLink properties
func (o ExpressRouteLinkOutput) Properties() ExpressRouteLinkPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ExpressRouteLink) *ExpressRouteLinkPropertiesFormat { return v.Properties }).(ExpressRouteLinkPropertiesFormatPtrOutput)
}

type ExpressRouteLinkArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteLink)(nil)).Elem()
}

func (o ExpressRouteLinkArrayOutput) ToExpressRouteLinkArrayOutput() ExpressRouteLinkArrayOutput {
	return o
}

func (o ExpressRouteLinkArrayOutput) ToExpressRouteLinkArrayOutputWithContext(ctx context.Context) ExpressRouteLinkArrayOutput {
	return o
}

func (o ExpressRouteLinkArrayOutput) Index(i pulumi.IntInput) ExpressRouteLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteLink {
		return vs[0].([]ExpressRouteLink)[vs[1].(int)]
	}).(ExpressRouteLinkOutput)
}

// Properties specific to ExpressRouteLink resources.
type ExpressRouteLinkPropertiesFormat struct {
	// Administrative state of the physical port
	AdminState *string `pulumi:"adminState"`
}

// ExpressRouteLinkPropertiesFormatInput is an input type that accepts ExpressRouteLinkPropertiesFormatArgs and ExpressRouteLinkPropertiesFormatOutput values.
// You can construct a concrete instance of `ExpressRouteLinkPropertiesFormatInput` via:
//
//          ExpressRouteLinkPropertiesFormatArgs{...}
type ExpressRouteLinkPropertiesFormatInput interface {
	pulumi.Input

	ToExpressRouteLinkPropertiesFormatOutput() ExpressRouteLinkPropertiesFormatOutput
	ToExpressRouteLinkPropertiesFormatOutputWithContext(context.Context) ExpressRouteLinkPropertiesFormatOutput
}

// Properties specific to ExpressRouteLink resources.
type ExpressRouteLinkPropertiesFormatArgs struct {
	// Administrative state of the physical port
	AdminState pulumi.StringPtrInput `pulumi:"adminState"`
}

func (ExpressRouteLinkPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteLinkPropertiesFormat)(nil)).Elem()
}

func (i ExpressRouteLinkPropertiesFormatArgs) ToExpressRouteLinkPropertiesFormatOutput() ExpressRouteLinkPropertiesFormatOutput {
	return i.ToExpressRouteLinkPropertiesFormatOutputWithContext(context.Background())
}

func (i ExpressRouteLinkPropertiesFormatArgs) ToExpressRouteLinkPropertiesFormatOutputWithContext(ctx context.Context) ExpressRouteLinkPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkPropertiesFormatOutput)
}

func (i ExpressRouteLinkPropertiesFormatArgs) ToExpressRouteLinkPropertiesFormatPtrOutput() ExpressRouteLinkPropertiesFormatPtrOutput {
	return i.ToExpressRouteLinkPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ExpressRouteLinkPropertiesFormatArgs) ToExpressRouteLinkPropertiesFormatPtrOutputWithContext(ctx context.Context) ExpressRouteLinkPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkPropertiesFormatOutput).ToExpressRouteLinkPropertiesFormatPtrOutputWithContext(ctx)
}

// ExpressRouteLinkPropertiesFormatPtrInput is an input type that accepts ExpressRouteLinkPropertiesFormatArgs, ExpressRouteLinkPropertiesFormatPtr and ExpressRouteLinkPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ExpressRouteLinkPropertiesFormatPtrInput` via:
//
//          ExpressRouteLinkPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ExpressRouteLinkPropertiesFormatPtrInput interface {
	pulumi.Input

	ToExpressRouteLinkPropertiesFormatPtrOutput() ExpressRouteLinkPropertiesFormatPtrOutput
	ToExpressRouteLinkPropertiesFormatPtrOutputWithContext(context.Context) ExpressRouteLinkPropertiesFormatPtrOutput
}

type expressRouteLinkPropertiesFormatPtrType ExpressRouteLinkPropertiesFormatArgs

func ExpressRouteLinkPropertiesFormatPtr(v *ExpressRouteLinkPropertiesFormatArgs) ExpressRouteLinkPropertiesFormatPtrInput {
	return (*expressRouteLinkPropertiesFormatPtrType)(v)
}

func (*expressRouteLinkPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteLinkPropertiesFormat)(nil)).Elem()
}

func (i *expressRouteLinkPropertiesFormatPtrType) ToExpressRouteLinkPropertiesFormatPtrOutput() ExpressRouteLinkPropertiesFormatPtrOutput {
	return i.ToExpressRouteLinkPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *expressRouteLinkPropertiesFormatPtrType) ToExpressRouteLinkPropertiesFormatPtrOutputWithContext(ctx context.Context) ExpressRouteLinkPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkPropertiesFormatPtrOutput)
}

// Properties specific to ExpressRouteLink resources.
type ExpressRouteLinkPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteLinkPropertiesFormat)(nil)).Elem()
}

func (o ExpressRouteLinkPropertiesFormatOutput) ToExpressRouteLinkPropertiesFormatOutput() ExpressRouteLinkPropertiesFormatOutput {
	return o
}

func (o ExpressRouteLinkPropertiesFormatOutput) ToExpressRouteLinkPropertiesFormatOutputWithContext(ctx context.Context) ExpressRouteLinkPropertiesFormatOutput {
	return o
}

func (o ExpressRouteLinkPropertiesFormatOutput) ToExpressRouteLinkPropertiesFormatPtrOutput() ExpressRouteLinkPropertiesFormatPtrOutput {
	return o.ToExpressRouteLinkPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ExpressRouteLinkPropertiesFormatOutput) ToExpressRouteLinkPropertiesFormatPtrOutputWithContext(ctx context.Context) ExpressRouteLinkPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkPropertiesFormat) *ExpressRouteLinkPropertiesFormat {
		return &v
	}).(ExpressRouteLinkPropertiesFormatPtrOutput)
}

// Administrative state of the physical port
func (o ExpressRouteLinkPropertiesFormatOutput) AdminState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkPropertiesFormat) *string { return v.AdminState }).(pulumi.StringPtrOutput)
}

type ExpressRouteLinkPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteLinkPropertiesFormat)(nil)).Elem()
}

func (o ExpressRouteLinkPropertiesFormatPtrOutput) ToExpressRouteLinkPropertiesFormatPtrOutput() ExpressRouteLinkPropertiesFormatPtrOutput {
	return o
}

func (o ExpressRouteLinkPropertiesFormatPtrOutput) ToExpressRouteLinkPropertiesFormatPtrOutputWithContext(ctx context.Context) ExpressRouteLinkPropertiesFormatPtrOutput {
	return o
}

func (o ExpressRouteLinkPropertiesFormatPtrOutput) Elem() ExpressRouteLinkPropertiesFormatOutput {
	return o.ApplyT(func(v *ExpressRouteLinkPropertiesFormat) ExpressRouteLinkPropertiesFormat { return *v }).(ExpressRouteLinkPropertiesFormatOutput)
}

// Administrative state of the physical port
func (o ExpressRouteLinkPropertiesFormatPtrOutput) AdminState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.AdminState
	}).(pulumi.StringPtrOutput)
}

// Properties specific to ExpressRouteLink resources.
type ExpressRouteLinkPropertiesFormatResponse struct {
	// Administrative state of the physical port
	AdminState *string `pulumi:"adminState"`
	// Physical fiber port type.
	ConnectorType string `pulumi:"connectorType"`
	// Name of Azure router interface.
	InterfaceName string `pulumi:"interfaceName"`
	// Mapping between physical port to patch panel port.
	PatchPanelId string `pulumi:"patchPanelId"`
	// The provisioning state of the ExpressRouteLink resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// Mapping of physical patch panel to rack.
	RackId string `pulumi:"rackId"`
	// Name of Azure router associated with physical port.
	RouterName string `pulumi:"routerName"`
}

// ExpressRouteLinkPropertiesFormatResponseInput is an input type that accepts ExpressRouteLinkPropertiesFormatResponseArgs and ExpressRouteLinkPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ExpressRouteLinkPropertiesFormatResponseInput` via:
//
//          ExpressRouteLinkPropertiesFormatResponseArgs{...}
type ExpressRouteLinkPropertiesFormatResponseInput interface {
	pulumi.Input

	ToExpressRouteLinkPropertiesFormatResponseOutput() ExpressRouteLinkPropertiesFormatResponseOutput
	ToExpressRouteLinkPropertiesFormatResponseOutputWithContext(context.Context) ExpressRouteLinkPropertiesFormatResponseOutput
}

// Properties specific to ExpressRouteLink resources.
type ExpressRouteLinkPropertiesFormatResponseArgs struct {
	// Administrative state of the physical port
	AdminState pulumi.StringPtrInput `pulumi:"adminState"`
	// Physical fiber port type.
	ConnectorType pulumi.StringInput `pulumi:"connectorType"`
	// Name of Azure router interface.
	InterfaceName pulumi.StringInput `pulumi:"interfaceName"`
	// Mapping between physical port to patch panel port.
	PatchPanelId pulumi.StringInput `pulumi:"patchPanelId"`
	// The provisioning state of the ExpressRouteLink resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Mapping of physical patch panel to rack.
	RackId pulumi.StringInput `pulumi:"rackId"`
	// Name of Azure router associated with physical port.
	RouterName pulumi.StringInput `pulumi:"routerName"`
}

func (ExpressRouteLinkPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteLinkPropertiesFormatResponse)(nil)).Elem()
}

func (i ExpressRouteLinkPropertiesFormatResponseArgs) ToExpressRouteLinkPropertiesFormatResponseOutput() ExpressRouteLinkPropertiesFormatResponseOutput {
	return i.ToExpressRouteLinkPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ExpressRouteLinkPropertiesFormatResponseArgs) ToExpressRouteLinkPropertiesFormatResponseOutputWithContext(ctx context.Context) ExpressRouteLinkPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkPropertiesFormatResponseOutput)
}

func (i ExpressRouteLinkPropertiesFormatResponseArgs) ToExpressRouteLinkPropertiesFormatResponsePtrOutput() ExpressRouteLinkPropertiesFormatResponsePtrOutput {
	return i.ToExpressRouteLinkPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteLinkPropertiesFormatResponseArgs) ToExpressRouteLinkPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ExpressRouteLinkPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkPropertiesFormatResponseOutput).ToExpressRouteLinkPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ExpressRouteLinkPropertiesFormatResponsePtrInput is an input type that accepts ExpressRouteLinkPropertiesFormatResponseArgs, ExpressRouteLinkPropertiesFormatResponsePtr and ExpressRouteLinkPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteLinkPropertiesFormatResponsePtrInput` via:
//
//          ExpressRouteLinkPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteLinkPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteLinkPropertiesFormatResponsePtrOutput() ExpressRouteLinkPropertiesFormatResponsePtrOutput
	ToExpressRouteLinkPropertiesFormatResponsePtrOutputWithContext(context.Context) ExpressRouteLinkPropertiesFormatResponsePtrOutput
}

type expressRouteLinkPropertiesFormatResponsePtrType ExpressRouteLinkPropertiesFormatResponseArgs

func ExpressRouteLinkPropertiesFormatResponsePtr(v *ExpressRouteLinkPropertiesFormatResponseArgs) ExpressRouteLinkPropertiesFormatResponsePtrInput {
	return (*expressRouteLinkPropertiesFormatResponsePtrType)(v)
}

func (*expressRouteLinkPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteLinkPropertiesFormatResponse)(nil)).Elem()
}

func (i *expressRouteLinkPropertiesFormatResponsePtrType) ToExpressRouteLinkPropertiesFormatResponsePtrOutput() ExpressRouteLinkPropertiesFormatResponsePtrOutput {
	return i.ToExpressRouteLinkPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteLinkPropertiesFormatResponsePtrType) ToExpressRouteLinkPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ExpressRouteLinkPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkPropertiesFormatResponsePtrOutput)
}

// Properties specific to ExpressRouteLink resources.
type ExpressRouteLinkPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteLinkPropertiesFormatResponse)(nil)).Elem()
}

func (o ExpressRouteLinkPropertiesFormatResponseOutput) ToExpressRouteLinkPropertiesFormatResponseOutput() ExpressRouteLinkPropertiesFormatResponseOutput {
	return o
}

func (o ExpressRouteLinkPropertiesFormatResponseOutput) ToExpressRouteLinkPropertiesFormatResponseOutputWithContext(ctx context.Context) ExpressRouteLinkPropertiesFormatResponseOutput {
	return o
}

func (o ExpressRouteLinkPropertiesFormatResponseOutput) ToExpressRouteLinkPropertiesFormatResponsePtrOutput() ExpressRouteLinkPropertiesFormatResponsePtrOutput {
	return o.ToExpressRouteLinkPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteLinkPropertiesFormatResponseOutput) ToExpressRouteLinkPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ExpressRouteLinkPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkPropertiesFormatResponse) *ExpressRouteLinkPropertiesFormatResponse {
		return &v
	}).(ExpressRouteLinkPropertiesFormatResponsePtrOutput)
}

// Administrative state of the physical port
func (o ExpressRouteLinkPropertiesFormatResponseOutput) AdminState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkPropertiesFormatResponse) *string { return v.AdminState }).(pulumi.StringPtrOutput)
}

// Physical fiber port type.
func (o ExpressRouteLinkPropertiesFormatResponseOutput) ConnectorType() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteLinkPropertiesFormatResponse) string { return v.ConnectorType }).(pulumi.StringOutput)
}

// Name of Azure router interface.
func (o ExpressRouteLinkPropertiesFormatResponseOutput) InterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteLinkPropertiesFormatResponse) string { return v.InterfaceName }).(pulumi.StringOutput)
}

// Mapping between physical port to patch panel port.
func (o ExpressRouteLinkPropertiesFormatResponseOutput) PatchPanelId() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteLinkPropertiesFormatResponse) string { return v.PatchPanelId }).(pulumi.StringOutput)
}

// The provisioning state of the ExpressRouteLink resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteLinkPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteLinkPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Mapping of physical patch panel to rack.
func (o ExpressRouteLinkPropertiesFormatResponseOutput) RackId() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteLinkPropertiesFormatResponse) string { return v.RackId }).(pulumi.StringOutput)
}

// Name of Azure router associated with physical port.
func (o ExpressRouteLinkPropertiesFormatResponseOutput) RouterName() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteLinkPropertiesFormatResponse) string { return v.RouterName }).(pulumi.StringOutput)
}

type ExpressRouteLinkPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteLinkPropertiesFormatResponse)(nil)).Elem()
}

func (o ExpressRouteLinkPropertiesFormatResponsePtrOutput) ToExpressRouteLinkPropertiesFormatResponsePtrOutput() ExpressRouteLinkPropertiesFormatResponsePtrOutput {
	return o
}

func (o ExpressRouteLinkPropertiesFormatResponsePtrOutput) ToExpressRouteLinkPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ExpressRouteLinkPropertiesFormatResponsePtrOutput {
	return o
}

func (o ExpressRouteLinkPropertiesFormatResponsePtrOutput) Elem() ExpressRouteLinkPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ExpressRouteLinkPropertiesFormatResponse) ExpressRouteLinkPropertiesFormatResponse { return *v }).(ExpressRouteLinkPropertiesFormatResponseOutput)
}

// Administrative state of the physical port
func (o ExpressRouteLinkPropertiesFormatResponsePtrOutput) AdminState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminState
	}).(pulumi.StringPtrOutput)
}

// Physical fiber port type.
func (o ExpressRouteLinkPropertiesFormatResponsePtrOutput) ConnectorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectorType
	}).(pulumi.StringPtrOutput)
}

// Name of Azure router interface.
func (o ExpressRouteLinkPropertiesFormatResponsePtrOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InterfaceName
	}).(pulumi.StringPtrOutput)
}

// Mapping between physical port to patch panel port.
func (o ExpressRouteLinkPropertiesFormatResponsePtrOutput) PatchPanelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PatchPanelId
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the ExpressRouteLink resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteLinkPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Mapping of physical patch panel to rack.
func (o ExpressRouteLinkPropertiesFormatResponsePtrOutput) RackId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RackId
	}).(pulumi.StringPtrOutput)
}

// Name of Azure router associated with physical port.
func (o ExpressRouteLinkPropertiesFormatResponsePtrOutput) RouterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RouterName
	}).(pulumi.StringPtrOutput)
}

// ExpressRouteLink child resource definition.
type ExpressRouteLinkResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of child port resource that is unique among child port resources of the parent.
	Name *string `pulumi:"name"`
	// ExpressRouteLink properties
	Properties *ExpressRouteLinkPropertiesFormatResponse `pulumi:"properties"`
}

// ExpressRouteLinkResponseInput is an input type that accepts ExpressRouteLinkResponseArgs and ExpressRouteLinkResponseOutput values.
// You can construct a concrete instance of `ExpressRouteLinkResponseInput` via:
//
//          ExpressRouteLinkResponseArgs{...}
type ExpressRouteLinkResponseInput interface {
	pulumi.Input

	ToExpressRouteLinkResponseOutput() ExpressRouteLinkResponseOutput
	ToExpressRouteLinkResponseOutputWithContext(context.Context) ExpressRouteLinkResponseOutput
}

// ExpressRouteLink child resource definition.
type ExpressRouteLinkResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of child port resource that is unique among child port resources of the parent.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// ExpressRouteLink properties
	Properties ExpressRouteLinkPropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (ExpressRouteLinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteLinkResponse)(nil)).Elem()
}

func (i ExpressRouteLinkResponseArgs) ToExpressRouteLinkResponseOutput() ExpressRouteLinkResponseOutput {
	return i.ToExpressRouteLinkResponseOutputWithContext(context.Background())
}

func (i ExpressRouteLinkResponseArgs) ToExpressRouteLinkResponseOutputWithContext(ctx context.Context) ExpressRouteLinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkResponseOutput)
}

// ExpressRouteLinkResponseArrayInput is an input type that accepts ExpressRouteLinkResponseArray and ExpressRouteLinkResponseArrayOutput values.
// You can construct a concrete instance of `ExpressRouteLinkResponseArrayInput` via:
//
//          ExpressRouteLinkResponseArray{ ExpressRouteLinkResponseArgs{...} }
type ExpressRouteLinkResponseArrayInput interface {
	pulumi.Input

	ToExpressRouteLinkResponseArrayOutput() ExpressRouteLinkResponseArrayOutput
	ToExpressRouteLinkResponseArrayOutputWithContext(context.Context) ExpressRouteLinkResponseArrayOutput
}

type ExpressRouteLinkResponseArray []ExpressRouteLinkResponseInput

func (ExpressRouteLinkResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteLinkResponse)(nil)).Elem()
}

func (i ExpressRouteLinkResponseArray) ToExpressRouteLinkResponseArrayOutput() ExpressRouteLinkResponseArrayOutput {
	return i.ToExpressRouteLinkResponseArrayOutputWithContext(context.Background())
}

func (i ExpressRouteLinkResponseArray) ToExpressRouteLinkResponseArrayOutputWithContext(ctx context.Context) ExpressRouteLinkResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkResponseArrayOutput)
}

// ExpressRouteLink child resource definition.
type ExpressRouteLinkResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteLinkResponse)(nil)).Elem()
}

func (o ExpressRouteLinkResponseOutput) ToExpressRouteLinkResponseOutput() ExpressRouteLinkResponseOutput {
	return o
}

func (o ExpressRouteLinkResponseOutput) ToExpressRouteLinkResponseOutputWithContext(ctx context.Context) ExpressRouteLinkResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteLinkResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ExpressRouteLinkResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of child port resource that is unique among child port resources of the parent.
func (o ExpressRouteLinkResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// ExpressRouteLink properties
func (o ExpressRouteLinkResponseOutput) Properties() ExpressRouteLinkPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) *ExpressRouteLinkPropertiesFormatResponse { return v.Properties }).(ExpressRouteLinkPropertiesFormatResponsePtrOutput)
}

type ExpressRouteLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteLinkResponse)(nil)).Elem()
}

func (o ExpressRouteLinkResponseArrayOutput) ToExpressRouteLinkResponseArrayOutput() ExpressRouteLinkResponseArrayOutput {
	return o
}

func (o ExpressRouteLinkResponseArrayOutput) ToExpressRouteLinkResponseArrayOutputWithContext(ctx context.Context) ExpressRouteLinkResponseArrayOutput {
	return o
}

func (o ExpressRouteLinkResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteLinkResponse {
		return vs[0].([]ExpressRouteLinkResponse)[vs[1].(int)]
	}).(ExpressRouteLinkResponseOutput)
}

// ExpressRoutePort resource definition.
type ExpressRoutePortType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// ExpressRoutePort properties
	Properties ExpressRoutePortPropertiesFormatResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// ExpressRoutePortTypeInput is an input type that accepts ExpressRoutePortTypeArgs and ExpressRoutePortTypeOutput values.
// You can construct a concrete instance of `ExpressRoutePortTypeInput` via:
//
//          ExpressRoutePortTypeArgs{...}
type ExpressRoutePortTypeInput interface {
	pulumi.Input

	ToExpressRoutePortTypeOutput() ExpressRoutePortTypeOutput
	ToExpressRoutePortTypeOutputWithContext(context.Context) ExpressRoutePortTypeOutput
}

// ExpressRoutePort resource definition.
type ExpressRoutePortTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// ExpressRoutePort properties
	Properties ExpressRoutePortPropertiesFormatResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ExpressRoutePortTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRoutePortType)(nil)).Elem()
}

func (i ExpressRoutePortTypeArgs) ToExpressRoutePortTypeOutput() ExpressRoutePortTypeOutput {
	return i.ToExpressRoutePortTypeOutputWithContext(context.Background())
}

func (i ExpressRoutePortTypeArgs) ToExpressRoutePortTypeOutputWithContext(ctx context.Context) ExpressRoutePortTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRoutePortTypeOutput)
}

// ExpressRoutePort resource definition.
type ExpressRoutePortTypeOutput struct{ *pulumi.OutputState }

func (ExpressRoutePortTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRoutePortType)(nil)).Elem()
}

func (o ExpressRoutePortTypeOutput) ToExpressRoutePortTypeOutput() ExpressRoutePortTypeOutput {
	return o
}

func (o ExpressRoutePortTypeOutput) ToExpressRoutePortTypeOutputWithContext(ctx context.Context) ExpressRoutePortTypeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRoutePortTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRoutePortType) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource location.
func (o ExpressRoutePortTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o ExpressRoutePortTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRoutePortType) string { return v.Name }).(pulumi.StringOutput)
}

// ExpressRoutePort properties
func (o ExpressRoutePortTypeOutput) Properties() ExpressRoutePortPropertiesFormatResponseOutput {
	return o.ApplyT(func(v ExpressRoutePortType) ExpressRoutePortPropertiesFormatResponse { return v.Properties }).(ExpressRoutePortPropertiesFormatResponseOutput)
}

// Resource tags.
func (o ExpressRoutePortTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ExpressRoutePortType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o ExpressRoutePortTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRoutePortType) string { return v.Type }).(pulumi.StringOutput)
}

// Properties specific to ExpressRoutePort resources.
type ExpressRoutePortPropertiesFormat struct {
	// Bandwidth of procured ports in Gbps
	BandwidthInGbps *int `pulumi:"bandwidthInGbps"`
	// Encapsulation method on physical ports.
	Encapsulation *string `pulumi:"encapsulation"`
	// The set of physical links of the ExpressRoutePort resource
	Links []ExpressRouteLink `pulumi:"links"`
	// The name of the peering location that the ExpressRoutePort is mapped to physically.
	PeeringLocation *string `pulumi:"peeringLocation"`
	// The resource GUID property of the ExpressRoutePort resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
}

// ExpressRoutePortPropertiesFormatInput is an input type that accepts ExpressRoutePortPropertiesFormatArgs and ExpressRoutePortPropertiesFormatOutput values.
// You can construct a concrete instance of `ExpressRoutePortPropertiesFormatInput` via:
//
//          ExpressRoutePortPropertiesFormatArgs{...}
type ExpressRoutePortPropertiesFormatInput interface {
	pulumi.Input

	ToExpressRoutePortPropertiesFormatOutput() ExpressRoutePortPropertiesFormatOutput
	ToExpressRoutePortPropertiesFormatOutputWithContext(context.Context) ExpressRoutePortPropertiesFormatOutput
}

// Properties specific to ExpressRoutePort resources.
type ExpressRoutePortPropertiesFormatArgs struct {
	// Bandwidth of procured ports in Gbps
	BandwidthInGbps pulumi.IntPtrInput `pulumi:"bandwidthInGbps"`
	// Encapsulation method on physical ports.
	Encapsulation pulumi.StringPtrInput `pulumi:"encapsulation"`
	// The set of physical links of the ExpressRoutePort resource
	Links ExpressRouteLinkArrayInput `pulumi:"links"`
	// The name of the peering location that the ExpressRoutePort is mapped to physically.
	PeeringLocation pulumi.StringPtrInput `pulumi:"peeringLocation"`
	// The resource GUID property of the ExpressRoutePort resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
}

func (ExpressRoutePortPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRoutePortPropertiesFormat)(nil)).Elem()
}

func (i ExpressRoutePortPropertiesFormatArgs) ToExpressRoutePortPropertiesFormatOutput() ExpressRoutePortPropertiesFormatOutput {
	return i.ToExpressRoutePortPropertiesFormatOutputWithContext(context.Background())
}

func (i ExpressRoutePortPropertiesFormatArgs) ToExpressRoutePortPropertiesFormatOutputWithContext(ctx context.Context) ExpressRoutePortPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRoutePortPropertiesFormatOutput)
}

func (i ExpressRoutePortPropertiesFormatArgs) ToExpressRoutePortPropertiesFormatPtrOutput() ExpressRoutePortPropertiesFormatPtrOutput {
	return i.ToExpressRoutePortPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ExpressRoutePortPropertiesFormatArgs) ToExpressRoutePortPropertiesFormatPtrOutputWithContext(ctx context.Context) ExpressRoutePortPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRoutePortPropertiesFormatOutput).ToExpressRoutePortPropertiesFormatPtrOutputWithContext(ctx)
}

// ExpressRoutePortPropertiesFormatPtrInput is an input type that accepts ExpressRoutePortPropertiesFormatArgs, ExpressRoutePortPropertiesFormatPtr and ExpressRoutePortPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ExpressRoutePortPropertiesFormatPtrInput` via:
//
//          ExpressRoutePortPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ExpressRoutePortPropertiesFormatPtrInput interface {
	pulumi.Input

	ToExpressRoutePortPropertiesFormatPtrOutput() ExpressRoutePortPropertiesFormatPtrOutput
	ToExpressRoutePortPropertiesFormatPtrOutputWithContext(context.Context) ExpressRoutePortPropertiesFormatPtrOutput
}

type expressRoutePortPropertiesFormatPtrType ExpressRoutePortPropertiesFormatArgs

func ExpressRoutePortPropertiesFormatPtr(v *ExpressRoutePortPropertiesFormatArgs) ExpressRoutePortPropertiesFormatPtrInput {
	return (*expressRoutePortPropertiesFormatPtrType)(v)
}

func (*expressRoutePortPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRoutePortPropertiesFormat)(nil)).Elem()
}

func (i *expressRoutePortPropertiesFormatPtrType) ToExpressRoutePortPropertiesFormatPtrOutput() ExpressRoutePortPropertiesFormatPtrOutput {
	return i.ToExpressRoutePortPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *expressRoutePortPropertiesFormatPtrType) ToExpressRoutePortPropertiesFormatPtrOutputWithContext(ctx context.Context) ExpressRoutePortPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRoutePortPropertiesFormatPtrOutput)
}

// Properties specific to ExpressRoutePort resources.
type ExpressRoutePortPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ExpressRoutePortPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRoutePortPropertiesFormat)(nil)).Elem()
}

func (o ExpressRoutePortPropertiesFormatOutput) ToExpressRoutePortPropertiesFormatOutput() ExpressRoutePortPropertiesFormatOutput {
	return o
}

func (o ExpressRoutePortPropertiesFormatOutput) ToExpressRoutePortPropertiesFormatOutputWithContext(ctx context.Context) ExpressRoutePortPropertiesFormatOutput {
	return o
}

func (o ExpressRoutePortPropertiesFormatOutput) ToExpressRoutePortPropertiesFormatPtrOutput() ExpressRoutePortPropertiesFormatPtrOutput {
	return o.ToExpressRoutePortPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ExpressRoutePortPropertiesFormatOutput) ToExpressRoutePortPropertiesFormatPtrOutputWithContext(ctx context.Context) ExpressRoutePortPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortPropertiesFormat) *ExpressRoutePortPropertiesFormat {
		return &v
	}).(ExpressRoutePortPropertiesFormatPtrOutput)
}

// Bandwidth of procured ports in Gbps
func (o ExpressRoutePortPropertiesFormatOutput) BandwidthInGbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortPropertiesFormat) *int { return v.BandwidthInGbps }).(pulumi.IntPtrOutput)
}

// Encapsulation method on physical ports.
func (o ExpressRoutePortPropertiesFormatOutput) Encapsulation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortPropertiesFormat) *string { return v.Encapsulation }).(pulumi.StringPtrOutput)
}

// The set of physical links of the ExpressRoutePort resource
func (o ExpressRoutePortPropertiesFormatOutput) Links() ExpressRouteLinkArrayOutput {
	return o.ApplyT(func(v ExpressRoutePortPropertiesFormat) []ExpressRouteLink { return v.Links }).(ExpressRouteLinkArrayOutput)
}

// The name of the peering location that the ExpressRoutePort is mapped to physically.
func (o ExpressRoutePortPropertiesFormatOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortPropertiesFormat) *string { return v.PeeringLocation }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the ExpressRoutePort resource.
func (o ExpressRoutePortPropertiesFormatOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortPropertiesFormat) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

type ExpressRoutePortPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ExpressRoutePortPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRoutePortPropertiesFormat)(nil)).Elem()
}

func (o ExpressRoutePortPropertiesFormatPtrOutput) ToExpressRoutePortPropertiesFormatPtrOutput() ExpressRoutePortPropertiesFormatPtrOutput {
	return o
}

func (o ExpressRoutePortPropertiesFormatPtrOutput) ToExpressRoutePortPropertiesFormatPtrOutputWithContext(ctx context.Context) ExpressRoutePortPropertiesFormatPtrOutput {
	return o
}

func (o ExpressRoutePortPropertiesFormatPtrOutput) Elem() ExpressRoutePortPropertiesFormatOutput {
	return o.ApplyT(func(v *ExpressRoutePortPropertiesFormat) ExpressRoutePortPropertiesFormat { return *v }).(ExpressRoutePortPropertiesFormatOutput)
}

// Bandwidth of procured ports in Gbps
func (o ExpressRoutePortPropertiesFormatPtrOutput) BandwidthInGbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortPropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.BandwidthInGbps
	}).(pulumi.IntPtrOutput)
}

// Encapsulation method on physical ports.
func (o ExpressRoutePortPropertiesFormatPtrOutput) Encapsulation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.Encapsulation
	}).(pulumi.StringPtrOutput)
}

// The set of physical links of the ExpressRoutePort resource
func (o ExpressRoutePortPropertiesFormatPtrOutput) Links() ExpressRouteLinkArrayOutput {
	return o.ApplyT(func(v *ExpressRoutePortPropertiesFormat) []ExpressRouteLink {
		if v == nil {
			return nil
		}
		return v.Links
	}).(ExpressRouteLinkArrayOutput)
}

// The name of the peering location that the ExpressRoutePort is mapped to physically.
func (o ExpressRoutePortPropertiesFormatPtrOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.PeeringLocation
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the ExpressRoutePort resource.
func (o ExpressRoutePortPropertiesFormatPtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Properties specific to ExpressRoutePort resources.
type ExpressRoutePortPropertiesFormatResponse struct {
	// Date of the physical port allocation to be used in Letter of Authorization.
	AllocationDate string `pulumi:"allocationDate"`
	// Bandwidth of procured ports in Gbps
	BandwidthInGbps *int `pulumi:"bandwidthInGbps"`
	// Reference the ExpressRoute circuit(s) that are provisioned on this ExpressRoutePort resource.
	Circuits []SubResourceResponse `pulumi:"circuits"`
	// Encapsulation method on physical ports.
	Encapsulation *string `pulumi:"encapsulation"`
	// Ether type of the physical port.
	EtherType string `pulumi:"etherType"`
	// The set of physical links of the ExpressRoutePort resource
	Links []ExpressRouteLinkResponse `pulumi:"links"`
	// Maximum transmission unit of the physical port pair(s)
	Mtu string `pulumi:"mtu"`
	// The name of the peering location that the ExpressRoutePort is mapped to physically.
	PeeringLocation *string `pulumi:"peeringLocation"`
	// Aggregate Gbps of associated circuit bandwidths.
	ProvisionedBandwidthInGbps float64 `pulumi:"provisionedBandwidthInGbps"`
	// The provisioning state of the ExpressRoutePort resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the ExpressRoutePort resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
}

// ExpressRoutePortPropertiesFormatResponseInput is an input type that accepts ExpressRoutePortPropertiesFormatResponseArgs and ExpressRoutePortPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ExpressRoutePortPropertiesFormatResponseInput` via:
//
//          ExpressRoutePortPropertiesFormatResponseArgs{...}
type ExpressRoutePortPropertiesFormatResponseInput interface {
	pulumi.Input

	ToExpressRoutePortPropertiesFormatResponseOutput() ExpressRoutePortPropertiesFormatResponseOutput
	ToExpressRoutePortPropertiesFormatResponseOutputWithContext(context.Context) ExpressRoutePortPropertiesFormatResponseOutput
}

// Properties specific to ExpressRoutePort resources.
type ExpressRoutePortPropertiesFormatResponseArgs struct {
	// Date of the physical port allocation to be used in Letter of Authorization.
	AllocationDate pulumi.StringInput `pulumi:"allocationDate"`
	// Bandwidth of procured ports in Gbps
	BandwidthInGbps pulumi.IntPtrInput `pulumi:"bandwidthInGbps"`
	// Reference the ExpressRoute circuit(s) that are provisioned on this ExpressRoutePort resource.
	Circuits SubResourceResponseArrayInput `pulumi:"circuits"`
	// Encapsulation method on physical ports.
	Encapsulation pulumi.StringPtrInput `pulumi:"encapsulation"`
	// Ether type of the physical port.
	EtherType pulumi.StringInput `pulumi:"etherType"`
	// The set of physical links of the ExpressRoutePort resource
	Links ExpressRouteLinkResponseArrayInput `pulumi:"links"`
	// Maximum transmission unit of the physical port pair(s)
	Mtu pulumi.StringInput `pulumi:"mtu"`
	// The name of the peering location that the ExpressRoutePort is mapped to physically.
	PeeringLocation pulumi.StringPtrInput `pulumi:"peeringLocation"`
	// Aggregate Gbps of associated circuit bandwidths.
	ProvisionedBandwidthInGbps pulumi.Float64Input `pulumi:"provisionedBandwidthInGbps"`
	// The provisioning state of the ExpressRoutePort resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The resource GUID property of the ExpressRoutePort resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
}

func (ExpressRoutePortPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRoutePortPropertiesFormatResponse)(nil)).Elem()
}

func (i ExpressRoutePortPropertiesFormatResponseArgs) ToExpressRoutePortPropertiesFormatResponseOutput() ExpressRoutePortPropertiesFormatResponseOutput {
	return i.ToExpressRoutePortPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ExpressRoutePortPropertiesFormatResponseArgs) ToExpressRoutePortPropertiesFormatResponseOutputWithContext(ctx context.Context) ExpressRoutePortPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRoutePortPropertiesFormatResponseOutput)
}

func (i ExpressRoutePortPropertiesFormatResponseArgs) ToExpressRoutePortPropertiesFormatResponsePtrOutput() ExpressRoutePortPropertiesFormatResponsePtrOutput {
	return i.ToExpressRoutePortPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRoutePortPropertiesFormatResponseArgs) ToExpressRoutePortPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ExpressRoutePortPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRoutePortPropertiesFormatResponseOutput).ToExpressRoutePortPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ExpressRoutePortPropertiesFormatResponsePtrInput is an input type that accepts ExpressRoutePortPropertiesFormatResponseArgs, ExpressRoutePortPropertiesFormatResponsePtr and ExpressRoutePortPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRoutePortPropertiesFormatResponsePtrInput` via:
//
//          ExpressRoutePortPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRoutePortPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToExpressRoutePortPropertiesFormatResponsePtrOutput() ExpressRoutePortPropertiesFormatResponsePtrOutput
	ToExpressRoutePortPropertiesFormatResponsePtrOutputWithContext(context.Context) ExpressRoutePortPropertiesFormatResponsePtrOutput
}

type expressRoutePortPropertiesFormatResponsePtrType ExpressRoutePortPropertiesFormatResponseArgs

func ExpressRoutePortPropertiesFormatResponsePtr(v *ExpressRoutePortPropertiesFormatResponseArgs) ExpressRoutePortPropertiesFormatResponsePtrInput {
	return (*expressRoutePortPropertiesFormatResponsePtrType)(v)
}

func (*expressRoutePortPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRoutePortPropertiesFormatResponse)(nil)).Elem()
}

func (i *expressRoutePortPropertiesFormatResponsePtrType) ToExpressRoutePortPropertiesFormatResponsePtrOutput() ExpressRoutePortPropertiesFormatResponsePtrOutput {
	return i.ToExpressRoutePortPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *expressRoutePortPropertiesFormatResponsePtrType) ToExpressRoutePortPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ExpressRoutePortPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRoutePortPropertiesFormatResponsePtrOutput)
}

// Properties specific to ExpressRoutePort resources.
type ExpressRoutePortPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ExpressRoutePortPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRoutePortPropertiesFormatResponse)(nil)).Elem()
}

func (o ExpressRoutePortPropertiesFormatResponseOutput) ToExpressRoutePortPropertiesFormatResponseOutput() ExpressRoutePortPropertiesFormatResponseOutput {
	return o
}

func (o ExpressRoutePortPropertiesFormatResponseOutput) ToExpressRoutePortPropertiesFormatResponseOutputWithContext(ctx context.Context) ExpressRoutePortPropertiesFormatResponseOutput {
	return o
}

func (o ExpressRoutePortPropertiesFormatResponseOutput) ToExpressRoutePortPropertiesFormatResponsePtrOutput() ExpressRoutePortPropertiesFormatResponsePtrOutput {
	return o.ToExpressRoutePortPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRoutePortPropertiesFormatResponseOutput) ToExpressRoutePortPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ExpressRoutePortPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ExpressRoutePortPropertiesFormatResponse) *ExpressRoutePortPropertiesFormatResponse {
		return &v
	}).(ExpressRoutePortPropertiesFormatResponsePtrOutput)
}

// Date of the physical port allocation to be used in Letter of Authorization.
func (o ExpressRoutePortPropertiesFormatResponseOutput) AllocationDate() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRoutePortPropertiesFormatResponse) string { return v.AllocationDate }).(pulumi.StringOutput)
}

// Bandwidth of procured ports in Gbps
func (o ExpressRoutePortPropertiesFormatResponseOutput) BandwidthInGbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortPropertiesFormatResponse) *int { return v.BandwidthInGbps }).(pulumi.IntPtrOutput)
}

// Reference the ExpressRoute circuit(s) that are provisioned on this ExpressRoutePort resource.
func (o ExpressRoutePortPropertiesFormatResponseOutput) Circuits() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ExpressRoutePortPropertiesFormatResponse) []SubResourceResponse { return v.Circuits }).(SubResourceResponseArrayOutput)
}

// Encapsulation method on physical ports.
func (o ExpressRoutePortPropertiesFormatResponseOutput) Encapsulation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortPropertiesFormatResponse) *string { return v.Encapsulation }).(pulumi.StringPtrOutput)
}

// Ether type of the physical port.
func (o ExpressRoutePortPropertiesFormatResponseOutput) EtherType() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRoutePortPropertiesFormatResponse) string { return v.EtherType }).(pulumi.StringOutput)
}

// The set of physical links of the ExpressRoutePort resource
func (o ExpressRoutePortPropertiesFormatResponseOutput) Links() ExpressRouteLinkResponseArrayOutput {
	return o.ApplyT(func(v ExpressRoutePortPropertiesFormatResponse) []ExpressRouteLinkResponse { return v.Links }).(ExpressRouteLinkResponseArrayOutput)
}

// Maximum transmission unit of the physical port pair(s)
func (o ExpressRoutePortPropertiesFormatResponseOutput) Mtu() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRoutePortPropertiesFormatResponse) string { return v.Mtu }).(pulumi.StringOutput)
}

// The name of the peering location that the ExpressRoutePort is mapped to physically.
func (o ExpressRoutePortPropertiesFormatResponseOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortPropertiesFormatResponse) *string { return v.PeeringLocation }).(pulumi.StringPtrOutput)
}

// Aggregate Gbps of associated circuit bandwidths.
func (o ExpressRoutePortPropertiesFormatResponseOutput) ProvisionedBandwidthInGbps() pulumi.Float64Output {
	return o.ApplyT(func(v ExpressRoutePortPropertiesFormatResponse) float64 { return v.ProvisionedBandwidthInGbps }).(pulumi.Float64Output)
}

// The provisioning state of the ExpressRoutePort resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRoutePortPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRoutePortPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the ExpressRoutePort resource.
func (o ExpressRoutePortPropertiesFormatResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortPropertiesFormatResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

type ExpressRoutePortPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRoutePortPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRoutePortPropertiesFormatResponse)(nil)).Elem()
}

func (o ExpressRoutePortPropertiesFormatResponsePtrOutput) ToExpressRoutePortPropertiesFormatResponsePtrOutput() ExpressRoutePortPropertiesFormatResponsePtrOutput {
	return o
}

func (o ExpressRoutePortPropertiesFormatResponsePtrOutput) ToExpressRoutePortPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ExpressRoutePortPropertiesFormatResponsePtrOutput {
	return o
}

func (o ExpressRoutePortPropertiesFormatResponsePtrOutput) Elem() ExpressRoutePortPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ExpressRoutePortPropertiesFormatResponse) ExpressRoutePortPropertiesFormatResponse { return *v }).(ExpressRoutePortPropertiesFormatResponseOutput)
}

// Date of the physical port allocation to be used in Letter of Authorization.
func (o ExpressRoutePortPropertiesFormatResponsePtrOutput) AllocationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AllocationDate
	}).(pulumi.StringPtrOutput)
}

// Bandwidth of procured ports in Gbps
func (o ExpressRoutePortPropertiesFormatResponsePtrOutput) BandwidthInGbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortPropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.BandwidthInGbps
	}).(pulumi.IntPtrOutput)
}

// Reference the ExpressRoute circuit(s) that are provisioned on this ExpressRoutePort resource.
func (o ExpressRoutePortPropertiesFormatResponsePtrOutput) Circuits() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *ExpressRoutePortPropertiesFormatResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.Circuits
	}).(SubResourceResponseArrayOutput)
}

// Encapsulation method on physical ports.
func (o ExpressRoutePortPropertiesFormatResponsePtrOutput) Encapsulation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.Encapsulation
	}).(pulumi.StringPtrOutput)
}

// Ether type of the physical port.
func (o ExpressRoutePortPropertiesFormatResponsePtrOutput) EtherType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EtherType
	}).(pulumi.StringPtrOutput)
}

// The set of physical links of the ExpressRoutePort resource
func (o ExpressRoutePortPropertiesFormatResponsePtrOutput) Links() ExpressRouteLinkResponseArrayOutput {
	return o.ApplyT(func(v *ExpressRoutePortPropertiesFormatResponse) []ExpressRouteLinkResponse {
		if v == nil {
			return nil
		}
		return v.Links
	}).(ExpressRouteLinkResponseArrayOutput)
}

// Maximum transmission unit of the physical port pair(s)
func (o ExpressRoutePortPropertiesFormatResponsePtrOutput) Mtu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Mtu
	}).(pulumi.StringPtrOutput)
}

// The name of the peering location that the ExpressRoutePort is mapped to physically.
func (o ExpressRoutePortPropertiesFormatResponsePtrOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.PeeringLocation
	}).(pulumi.StringPtrOutput)
}

// Aggregate Gbps of associated circuit bandwidths.
func (o ExpressRoutePortPropertiesFormatResponsePtrOutput) ProvisionedBandwidthInGbps() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortPropertiesFormatResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.ProvisionedBandwidthInGbps
	}).(pulumi.Float64PtrOutput)
}

// The provisioning state of the ExpressRoutePort resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRoutePortPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the ExpressRoutePort resource.
func (o ExpressRoutePortPropertiesFormatResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfiguration struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the load balancer probe.
	Properties *FrontendIPConfigurationPropertiesFormat `pulumi:"properties"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// FrontendIPConfigurationInput is an input type that accepts FrontendIPConfigurationArgs and FrontendIPConfigurationOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationInput` via:
//
//          FrontendIPConfigurationArgs{...}
type FrontendIPConfigurationInput interface {
	pulumi.Input

	ToFrontendIPConfigurationOutput() FrontendIPConfigurationOutput
	ToFrontendIPConfigurationOutputWithContext(context.Context) FrontendIPConfigurationOutput
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the load balancer probe.
	Properties FrontendIPConfigurationPropertiesFormatPtrInput `pulumi:"properties"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (FrontendIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfiguration)(nil)).Elem()
}

func (i FrontendIPConfigurationArgs) ToFrontendIPConfigurationOutput() FrontendIPConfigurationOutput {
	return i.ToFrontendIPConfigurationOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationArgs) ToFrontendIPConfigurationOutputWithContext(ctx context.Context) FrontendIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationOutput)
}

func (i FrontendIPConfigurationArgs) ToFrontendIPConfigurationPtrOutput() FrontendIPConfigurationPtrOutput {
	return i.ToFrontendIPConfigurationPtrOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationArgs) ToFrontendIPConfigurationPtrOutputWithContext(ctx context.Context) FrontendIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationOutput).ToFrontendIPConfigurationPtrOutputWithContext(ctx)
}

// FrontendIPConfigurationPtrInput is an input type that accepts FrontendIPConfigurationArgs, FrontendIPConfigurationPtr and FrontendIPConfigurationPtrOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationPtrInput` via:
//
//          FrontendIPConfigurationArgs{...}
//
//  or:
//
//          nil
type FrontendIPConfigurationPtrInput interface {
	pulumi.Input

	ToFrontendIPConfigurationPtrOutput() FrontendIPConfigurationPtrOutput
	ToFrontendIPConfigurationPtrOutputWithContext(context.Context) FrontendIPConfigurationPtrOutput
}

type frontendIPConfigurationPtrType FrontendIPConfigurationArgs

func FrontendIPConfigurationPtr(v *FrontendIPConfigurationArgs) FrontendIPConfigurationPtrInput {
	return (*frontendIPConfigurationPtrType)(v)
}

func (*frontendIPConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendIPConfiguration)(nil)).Elem()
}

func (i *frontendIPConfigurationPtrType) ToFrontendIPConfigurationPtrOutput() FrontendIPConfigurationPtrOutput {
	return i.ToFrontendIPConfigurationPtrOutputWithContext(context.Background())
}

func (i *frontendIPConfigurationPtrType) ToFrontendIPConfigurationPtrOutputWithContext(ctx context.Context) FrontendIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationPtrOutput)
}

// FrontendIPConfigurationArrayInput is an input type that accepts FrontendIPConfigurationArray and FrontendIPConfigurationArrayOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationArrayInput` via:
//
//          FrontendIPConfigurationArray{ FrontendIPConfigurationArgs{...} }
type FrontendIPConfigurationArrayInput interface {
	pulumi.Input

	ToFrontendIPConfigurationArrayOutput() FrontendIPConfigurationArrayOutput
	ToFrontendIPConfigurationArrayOutputWithContext(context.Context) FrontendIPConfigurationArrayOutput
}

type FrontendIPConfigurationArray []FrontendIPConfigurationInput

func (FrontendIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfiguration)(nil)).Elem()
}

func (i FrontendIPConfigurationArray) ToFrontendIPConfigurationArrayOutput() FrontendIPConfigurationArrayOutput {
	return i.ToFrontendIPConfigurationArrayOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationArray) ToFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationArrayOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfiguration)(nil)).Elem()
}

func (o FrontendIPConfigurationOutput) ToFrontendIPConfigurationOutput() FrontendIPConfigurationOutput {
	return o
}

func (o FrontendIPConfigurationOutput) ToFrontendIPConfigurationOutputWithContext(ctx context.Context) FrontendIPConfigurationOutput {
	return o
}

func (o FrontendIPConfigurationOutput) ToFrontendIPConfigurationPtrOutput() FrontendIPConfigurationPtrOutput {
	return o.ToFrontendIPConfigurationPtrOutputWithContext(context.Background())
}

func (o FrontendIPConfigurationOutput) ToFrontendIPConfigurationPtrOutputWithContext(ctx context.Context) FrontendIPConfigurationPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *FrontendIPConfiguration {
		return &v
	}).(FrontendIPConfigurationPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o FrontendIPConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o FrontendIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o FrontendIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the load balancer probe.
func (o FrontendIPConfigurationOutput) Properties() FrontendIPConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *FrontendIPConfigurationPropertiesFormat { return v.Properties }).(FrontendIPConfigurationPropertiesFormatPtrOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o FrontendIPConfigurationOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type FrontendIPConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendIPConfiguration)(nil)).Elem()
}

func (o FrontendIPConfigurationPtrOutput) ToFrontendIPConfigurationPtrOutput() FrontendIPConfigurationPtrOutput {
	return o
}

func (o FrontendIPConfigurationPtrOutput) ToFrontendIPConfigurationPtrOutputWithContext(ctx context.Context) FrontendIPConfigurationPtrOutput {
	return o
}

func (o FrontendIPConfigurationPtrOutput) Elem() FrontendIPConfigurationOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) FrontendIPConfiguration { return *v }).(FrontendIPConfigurationOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o FrontendIPConfigurationPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o FrontendIPConfigurationPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o FrontendIPConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Properties of the load balancer probe.
func (o FrontendIPConfigurationPtrOutput) Properties() FrontendIPConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) *FrontendIPConfigurationPropertiesFormat {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(FrontendIPConfigurationPropertiesFormatPtrOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o FrontendIPConfigurationPtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

type FrontendIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfiguration)(nil)).Elem()
}

func (o FrontendIPConfigurationArrayOutput) ToFrontendIPConfigurationArrayOutput() FrontendIPConfigurationArrayOutput {
	return o
}

func (o FrontendIPConfigurationArrayOutput) ToFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationArrayOutput {
	return o
}

func (o FrontendIPConfigurationArrayOutput) Index(i pulumi.IntInput) FrontendIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontendIPConfiguration {
		return vs[0].([]FrontendIPConfiguration)[vs[1].(int)]
	}).(FrontendIPConfigurationOutput)
}

// Properties of Frontend IP Configuration of the load balancer.
type FrontendIPConfigurationPropertiesFormat struct {
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the Public IP resource.
	PublicIPAddress *PublicIPAddressType `pulumi:"publicIPAddress"`
	// The reference of the Public IP Prefix resource.
	PublicIPPrefix *SubResource `pulumi:"publicIPPrefix"`
	// The reference of the subnet resource.
	Subnet *SubnetType `pulumi:"subnet"`
}

// FrontendIPConfigurationPropertiesFormatInput is an input type that accepts FrontendIPConfigurationPropertiesFormatArgs and FrontendIPConfigurationPropertiesFormatOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationPropertiesFormatInput` via:
//
//          FrontendIPConfigurationPropertiesFormatArgs{...}
type FrontendIPConfigurationPropertiesFormatInput interface {
	pulumi.Input

	ToFrontendIPConfigurationPropertiesFormatOutput() FrontendIPConfigurationPropertiesFormatOutput
	ToFrontendIPConfigurationPropertiesFormatOutputWithContext(context.Context) FrontendIPConfigurationPropertiesFormatOutput
}

// Properties of Frontend IP Configuration of the load balancer.
type FrontendIPConfigurationPropertiesFormatArgs struct {
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the Public IP resource.
	PublicIPAddress PublicIPAddressTypePtrInput `pulumi:"publicIPAddress"`
	// The reference of the Public IP Prefix resource.
	PublicIPPrefix SubResourcePtrInput `pulumi:"publicIPPrefix"`
	// The reference of the subnet resource.
	Subnet SubnetTypePtrInput `pulumi:"subnet"`
}

func (FrontendIPConfigurationPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (i FrontendIPConfigurationPropertiesFormatArgs) ToFrontendIPConfigurationPropertiesFormatOutput() FrontendIPConfigurationPropertiesFormatOutput {
	return i.ToFrontendIPConfigurationPropertiesFormatOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationPropertiesFormatArgs) ToFrontendIPConfigurationPropertiesFormatOutputWithContext(ctx context.Context) FrontendIPConfigurationPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationPropertiesFormatOutput)
}

func (i FrontendIPConfigurationPropertiesFormatArgs) ToFrontendIPConfigurationPropertiesFormatPtrOutput() FrontendIPConfigurationPropertiesFormatPtrOutput {
	return i.ToFrontendIPConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationPropertiesFormatArgs) ToFrontendIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) FrontendIPConfigurationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationPropertiesFormatOutput).ToFrontendIPConfigurationPropertiesFormatPtrOutputWithContext(ctx)
}

// FrontendIPConfigurationPropertiesFormatPtrInput is an input type that accepts FrontendIPConfigurationPropertiesFormatArgs, FrontendIPConfigurationPropertiesFormatPtr and FrontendIPConfigurationPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationPropertiesFormatPtrInput` via:
//
//          FrontendIPConfigurationPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type FrontendIPConfigurationPropertiesFormatPtrInput interface {
	pulumi.Input

	ToFrontendIPConfigurationPropertiesFormatPtrOutput() FrontendIPConfigurationPropertiesFormatPtrOutput
	ToFrontendIPConfigurationPropertiesFormatPtrOutputWithContext(context.Context) FrontendIPConfigurationPropertiesFormatPtrOutput
}

type frontendIPConfigurationPropertiesFormatPtrType FrontendIPConfigurationPropertiesFormatArgs

func FrontendIPConfigurationPropertiesFormatPtr(v *FrontendIPConfigurationPropertiesFormatArgs) FrontendIPConfigurationPropertiesFormatPtrInput {
	return (*frontendIPConfigurationPropertiesFormatPtrType)(v)
}

func (*frontendIPConfigurationPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (i *frontendIPConfigurationPropertiesFormatPtrType) ToFrontendIPConfigurationPropertiesFormatPtrOutput() FrontendIPConfigurationPropertiesFormatPtrOutput {
	return i.ToFrontendIPConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *frontendIPConfigurationPropertiesFormatPtrType) ToFrontendIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) FrontendIPConfigurationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationPropertiesFormatPtrOutput)
}

// Properties of Frontend IP Configuration of the load balancer.
type FrontendIPConfigurationPropertiesFormatOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (o FrontendIPConfigurationPropertiesFormatOutput) ToFrontendIPConfigurationPropertiesFormatOutput() FrontendIPConfigurationPropertiesFormatOutput {
	return o
}

func (o FrontendIPConfigurationPropertiesFormatOutput) ToFrontendIPConfigurationPropertiesFormatOutputWithContext(ctx context.Context) FrontendIPConfigurationPropertiesFormatOutput {
	return o
}

func (o FrontendIPConfigurationPropertiesFormatOutput) ToFrontendIPConfigurationPropertiesFormatPtrOutput() FrontendIPConfigurationPropertiesFormatPtrOutput {
	return o.ToFrontendIPConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o FrontendIPConfigurationPropertiesFormatOutput) ToFrontendIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) FrontendIPConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationPropertiesFormat) *FrontendIPConfigurationPropertiesFormat {
		return &v
	}).(FrontendIPConfigurationPropertiesFormatPtrOutput)
}

// The private IP address of the IP configuration.
func (o FrontendIPConfigurationPropertiesFormatOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationPropertiesFormat) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o FrontendIPConfigurationPropertiesFormatOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationPropertiesFormat) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o FrontendIPConfigurationPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the Public IP resource.
func (o FrontendIPConfigurationPropertiesFormatOutput) PublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationPropertiesFormat) *PublicIPAddressType { return v.PublicIPAddress }).(PublicIPAddressTypePtrOutput)
}

// The reference of the Public IP Prefix resource.
func (o FrontendIPConfigurationPropertiesFormatOutput) PublicIPPrefix() SubResourcePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationPropertiesFormat) *SubResource { return v.PublicIPPrefix }).(SubResourcePtrOutput)
}

// The reference of the subnet resource.
func (o FrontendIPConfigurationPropertiesFormatOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationPropertiesFormat) *SubnetType { return v.Subnet }).(SubnetTypePtrOutput)
}

type FrontendIPConfigurationPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (o FrontendIPConfigurationPropertiesFormatPtrOutput) ToFrontendIPConfigurationPropertiesFormatPtrOutput() FrontendIPConfigurationPropertiesFormatPtrOutput {
	return o
}

func (o FrontendIPConfigurationPropertiesFormatPtrOutput) ToFrontendIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) FrontendIPConfigurationPropertiesFormatPtrOutput {
	return o
}

func (o FrontendIPConfigurationPropertiesFormatPtrOutput) Elem() FrontendIPConfigurationPropertiesFormatOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationPropertiesFormat) FrontendIPConfigurationPropertiesFormat { return *v }).(FrontendIPConfigurationPropertiesFormatOutput)
}

// The private IP address of the IP configuration.
func (o FrontendIPConfigurationPropertiesFormatPtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o FrontendIPConfigurationPropertiesFormatPtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o FrontendIPConfigurationPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference of the Public IP resource.
func (o FrontendIPConfigurationPropertiesFormatPtrOutput) PublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationPropertiesFormat) *PublicIPAddressType {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressTypePtrOutput)
}

// The reference of the Public IP Prefix resource.
func (o FrontendIPConfigurationPropertiesFormatPtrOutput) PublicIPPrefix() SubResourcePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.PublicIPPrefix
	}).(SubResourcePtrOutput)
}

// The reference of the subnet resource.
func (o FrontendIPConfigurationPropertiesFormatPtrOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationPropertiesFormat) *SubnetType {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetTypePtrOutput)
}

// Properties of Frontend IP Configuration of the load balancer.
type FrontendIPConfigurationPropertiesFormatResponse struct {
	// Read only. Inbound pools URIs that use this frontend IP.
	InboundNatPools []SubResourceResponse `pulumi:"inboundNatPools"`
	// Read only. Inbound rules URIs that use this frontend IP.
	InboundNatRules []SubResourceResponse `pulumi:"inboundNatRules"`
	// Gets load balancing rules URIs that use this frontend IP.
	LoadBalancingRules []SubResourceResponse `pulumi:"loadBalancingRules"`
	// Read only. Outbound rules URIs that use this frontend IP.
	OutboundRules []SubResourceResponse `pulumi:"outboundRules"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the Public IP resource.
	PublicIPAddress *PublicIPAddressResponse `pulumi:"publicIPAddress"`
	// The reference of the Public IP Prefix resource.
	PublicIPPrefix *SubResourceResponse `pulumi:"publicIPPrefix"`
	// The reference of the subnet resource.
	Subnet *SubnetResponse `pulumi:"subnet"`
}

// FrontendIPConfigurationPropertiesFormatResponseInput is an input type that accepts FrontendIPConfigurationPropertiesFormatResponseArgs and FrontendIPConfigurationPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationPropertiesFormatResponseInput` via:
//
//          FrontendIPConfigurationPropertiesFormatResponseArgs{...}
type FrontendIPConfigurationPropertiesFormatResponseInput interface {
	pulumi.Input

	ToFrontendIPConfigurationPropertiesFormatResponseOutput() FrontendIPConfigurationPropertiesFormatResponseOutput
	ToFrontendIPConfigurationPropertiesFormatResponseOutputWithContext(context.Context) FrontendIPConfigurationPropertiesFormatResponseOutput
}

// Properties of Frontend IP Configuration of the load balancer.
type FrontendIPConfigurationPropertiesFormatResponseArgs struct {
	// Read only. Inbound pools URIs that use this frontend IP.
	InboundNatPools SubResourceResponseArrayInput `pulumi:"inboundNatPools"`
	// Read only. Inbound rules URIs that use this frontend IP.
	InboundNatRules SubResourceResponseArrayInput `pulumi:"inboundNatRules"`
	// Gets load balancing rules URIs that use this frontend IP.
	LoadBalancingRules SubResourceResponseArrayInput `pulumi:"loadBalancingRules"`
	// Read only. Outbound rules URIs that use this frontend IP.
	OutboundRules SubResourceResponseArrayInput `pulumi:"outboundRules"`
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the Public IP resource.
	PublicIPAddress PublicIPAddressResponsePtrInput `pulumi:"publicIPAddress"`
	// The reference of the Public IP Prefix resource.
	PublicIPPrefix SubResourceResponsePtrInput `pulumi:"publicIPPrefix"`
	// The reference of the subnet resource.
	Subnet SubnetResponsePtrInput `pulumi:"subnet"`
}

func (FrontendIPConfigurationPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (i FrontendIPConfigurationPropertiesFormatResponseArgs) ToFrontendIPConfigurationPropertiesFormatResponseOutput() FrontendIPConfigurationPropertiesFormatResponseOutput {
	return i.ToFrontendIPConfigurationPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationPropertiesFormatResponseArgs) ToFrontendIPConfigurationPropertiesFormatResponseOutputWithContext(ctx context.Context) FrontendIPConfigurationPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationPropertiesFormatResponseOutput)
}

func (i FrontendIPConfigurationPropertiesFormatResponseArgs) ToFrontendIPConfigurationPropertiesFormatResponsePtrOutput() FrontendIPConfigurationPropertiesFormatResponsePtrOutput {
	return i.ToFrontendIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationPropertiesFormatResponseArgs) ToFrontendIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) FrontendIPConfigurationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationPropertiesFormatResponseOutput).ToFrontendIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// FrontendIPConfigurationPropertiesFormatResponsePtrInput is an input type that accepts FrontendIPConfigurationPropertiesFormatResponseArgs, FrontendIPConfigurationPropertiesFormatResponsePtr and FrontendIPConfigurationPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationPropertiesFormatResponsePtrInput` via:
//
//          FrontendIPConfigurationPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type FrontendIPConfigurationPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToFrontendIPConfigurationPropertiesFormatResponsePtrOutput() FrontendIPConfigurationPropertiesFormatResponsePtrOutput
	ToFrontendIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Context) FrontendIPConfigurationPropertiesFormatResponsePtrOutput
}

type frontendIPConfigurationPropertiesFormatResponsePtrType FrontendIPConfigurationPropertiesFormatResponseArgs

func FrontendIPConfigurationPropertiesFormatResponsePtr(v *FrontendIPConfigurationPropertiesFormatResponseArgs) FrontendIPConfigurationPropertiesFormatResponsePtrInput {
	return (*frontendIPConfigurationPropertiesFormatResponsePtrType)(v)
}

func (*frontendIPConfigurationPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (i *frontendIPConfigurationPropertiesFormatResponsePtrType) ToFrontendIPConfigurationPropertiesFormatResponsePtrOutput() FrontendIPConfigurationPropertiesFormatResponsePtrOutput {
	return i.ToFrontendIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *frontendIPConfigurationPropertiesFormatResponsePtrType) ToFrontendIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) FrontendIPConfigurationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationPropertiesFormatResponsePtrOutput)
}

// Properties of Frontend IP Configuration of the load balancer.
type FrontendIPConfigurationPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (o FrontendIPConfigurationPropertiesFormatResponseOutput) ToFrontendIPConfigurationPropertiesFormatResponseOutput() FrontendIPConfigurationPropertiesFormatResponseOutput {
	return o
}

func (o FrontendIPConfigurationPropertiesFormatResponseOutput) ToFrontendIPConfigurationPropertiesFormatResponseOutputWithContext(ctx context.Context) FrontendIPConfigurationPropertiesFormatResponseOutput {
	return o
}

func (o FrontendIPConfigurationPropertiesFormatResponseOutput) ToFrontendIPConfigurationPropertiesFormatResponsePtrOutput() FrontendIPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ToFrontendIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o FrontendIPConfigurationPropertiesFormatResponseOutput) ToFrontendIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) FrontendIPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationPropertiesFormatResponse) *FrontendIPConfigurationPropertiesFormatResponse {
		return &v
	}).(FrontendIPConfigurationPropertiesFormatResponsePtrOutput)
}

// Read only. Inbound pools URIs that use this frontend IP.
func (o FrontendIPConfigurationPropertiesFormatResponseOutput) InboundNatPools() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationPropertiesFormatResponse) []SubResourceResponse {
		return v.InboundNatPools
	}).(SubResourceResponseArrayOutput)
}

// Read only. Inbound rules URIs that use this frontend IP.
func (o FrontendIPConfigurationPropertiesFormatResponseOutput) InboundNatRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationPropertiesFormatResponse) []SubResourceResponse {
		return v.InboundNatRules
	}).(SubResourceResponseArrayOutput)
}

// Gets load balancing rules URIs that use this frontend IP.
func (o FrontendIPConfigurationPropertiesFormatResponseOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationPropertiesFormatResponse) []SubResourceResponse {
		return v.LoadBalancingRules
	}).(SubResourceResponseArrayOutput)
}

// Read only. Outbound rules URIs that use this frontend IP.
func (o FrontendIPConfigurationPropertiesFormatResponseOutput) OutboundRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationPropertiesFormatResponse) []SubResourceResponse { return v.OutboundRules }).(SubResourceResponseArrayOutput)
}

// The private IP address of the IP configuration.
func (o FrontendIPConfigurationPropertiesFormatResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationPropertiesFormatResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o FrontendIPConfigurationPropertiesFormatResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationPropertiesFormatResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o FrontendIPConfigurationPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the Public IP resource.
func (o FrontendIPConfigurationPropertiesFormatResponseOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationPropertiesFormatResponse) *PublicIPAddressResponse {
		return v.PublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// The reference of the Public IP Prefix resource.
func (o FrontendIPConfigurationPropertiesFormatResponseOutput) PublicIPPrefix() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationPropertiesFormatResponse) *SubResourceResponse { return v.PublicIPPrefix }).(SubResourceResponsePtrOutput)
}

// The reference of the subnet resource.
func (o FrontendIPConfigurationPropertiesFormatResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationPropertiesFormatResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

type FrontendIPConfigurationPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (o FrontendIPConfigurationPropertiesFormatResponsePtrOutput) ToFrontendIPConfigurationPropertiesFormatResponsePtrOutput() FrontendIPConfigurationPropertiesFormatResponsePtrOutput {
	return o
}

func (o FrontendIPConfigurationPropertiesFormatResponsePtrOutput) ToFrontendIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) FrontendIPConfigurationPropertiesFormatResponsePtrOutput {
	return o
}

func (o FrontendIPConfigurationPropertiesFormatResponsePtrOutput) Elem() FrontendIPConfigurationPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationPropertiesFormatResponse) FrontendIPConfigurationPropertiesFormatResponse {
		return *v
	}).(FrontendIPConfigurationPropertiesFormatResponseOutput)
}

// Read only. Inbound pools URIs that use this frontend IP.
func (o FrontendIPConfigurationPropertiesFormatResponsePtrOutput) InboundNatPools() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationPropertiesFormatResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.InboundNatPools
	}).(SubResourceResponseArrayOutput)
}

// Read only. Inbound rules URIs that use this frontend IP.
func (o FrontendIPConfigurationPropertiesFormatResponsePtrOutput) InboundNatRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationPropertiesFormatResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.InboundNatRules
	}).(SubResourceResponseArrayOutput)
}

// Gets load balancing rules URIs that use this frontend IP.
func (o FrontendIPConfigurationPropertiesFormatResponsePtrOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationPropertiesFormatResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancingRules
	}).(SubResourceResponseArrayOutput)
}

// Read only. Outbound rules URIs that use this frontend IP.
func (o FrontendIPConfigurationPropertiesFormatResponsePtrOutput) OutboundRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationPropertiesFormatResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.OutboundRules
	}).(SubResourceResponseArrayOutput)
}

// The private IP address of the IP configuration.
func (o FrontendIPConfigurationPropertiesFormatResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o FrontendIPConfigurationPropertiesFormatResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o FrontendIPConfigurationPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference of the Public IP resource.
func (o FrontendIPConfigurationPropertiesFormatResponsePtrOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationPropertiesFormatResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// The reference of the Public IP Prefix resource.
func (o FrontendIPConfigurationPropertiesFormatResponsePtrOutput) PublicIPPrefix() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPPrefix
	}).(SubResourceResponsePtrOutput)
}

// The reference of the subnet resource.
func (o FrontendIPConfigurationPropertiesFormatResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationPropertiesFormatResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the load balancer probe.
	Properties *FrontendIPConfigurationPropertiesFormatResponse `pulumi:"properties"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// FrontendIPConfigurationResponseInput is an input type that accepts FrontendIPConfigurationResponseArgs and FrontendIPConfigurationResponseOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationResponseInput` via:
//
//          FrontendIPConfigurationResponseArgs{...}
type FrontendIPConfigurationResponseInput interface {
	pulumi.Input

	ToFrontendIPConfigurationResponseOutput() FrontendIPConfigurationResponseOutput
	ToFrontendIPConfigurationResponseOutputWithContext(context.Context) FrontendIPConfigurationResponseOutput
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the load balancer probe.
	Properties FrontendIPConfigurationPropertiesFormatResponsePtrInput `pulumi:"properties"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (FrontendIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfigurationResponse)(nil)).Elem()
}

func (i FrontendIPConfigurationResponseArgs) ToFrontendIPConfigurationResponseOutput() FrontendIPConfigurationResponseOutput {
	return i.ToFrontendIPConfigurationResponseOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationResponseArgs) ToFrontendIPConfigurationResponseOutputWithContext(ctx context.Context) FrontendIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationResponseOutput)
}

func (i FrontendIPConfigurationResponseArgs) ToFrontendIPConfigurationResponsePtrOutput() FrontendIPConfigurationResponsePtrOutput {
	return i.ToFrontendIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationResponseArgs) ToFrontendIPConfigurationResponsePtrOutputWithContext(ctx context.Context) FrontendIPConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationResponseOutput).ToFrontendIPConfigurationResponsePtrOutputWithContext(ctx)
}

// FrontendIPConfigurationResponsePtrInput is an input type that accepts FrontendIPConfigurationResponseArgs, FrontendIPConfigurationResponsePtr and FrontendIPConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationResponsePtrInput` via:
//
//          FrontendIPConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type FrontendIPConfigurationResponsePtrInput interface {
	pulumi.Input

	ToFrontendIPConfigurationResponsePtrOutput() FrontendIPConfigurationResponsePtrOutput
	ToFrontendIPConfigurationResponsePtrOutputWithContext(context.Context) FrontendIPConfigurationResponsePtrOutput
}

type frontendIPConfigurationResponsePtrType FrontendIPConfigurationResponseArgs

func FrontendIPConfigurationResponsePtr(v *FrontendIPConfigurationResponseArgs) FrontendIPConfigurationResponsePtrInput {
	return (*frontendIPConfigurationResponsePtrType)(v)
}

func (*frontendIPConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendIPConfigurationResponse)(nil)).Elem()
}

func (i *frontendIPConfigurationResponsePtrType) ToFrontendIPConfigurationResponsePtrOutput() FrontendIPConfigurationResponsePtrOutput {
	return i.ToFrontendIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *frontendIPConfigurationResponsePtrType) ToFrontendIPConfigurationResponsePtrOutputWithContext(ctx context.Context) FrontendIPConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationResponsePtrOutput)
}

// FrontendIPConfigurationResponseArrayInput is an input type that accepts FrontendIPConfigurationResponseArray and FrontendIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationResponseArrayInput` via:
//
//          FrontendIPConfigurationResponseArray{ FrontendIPConfigurationResponseArgs{...} }
type FrontendIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToFrontendIPConfigurationResponseArrayOutput() FrontendIPConfigurationResponseArrayOutput
	ToFrontendIPConfigurationResponseArrayOutputWithContext(context.Context) FrontendIPConfigurationResponseArrayOutput
}

type FrontendIPConfigurationResponseArray []FrontendIPConfigurationResponseInput

func (FrontendIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfigurationResponse)(nil)).Elem()
}

func (i FrontendIPConfigurationResponseArray) ToFrontendIPConfigurationResponseArrayOutput() FrontendIPConfigurationResponseArrayOutput {
	return i.ToFrontendIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationResponseArray) ToFrontendIPConfigurationResponseArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationResponseArrayOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfigurationResponse)(nil)).Elem()
}

func (o FrontendIPConfigurationResponseOutput) ToFrontendIPConfigurationResponseOutput() FrontendIPConfigurationResponseOutput {
	return o
}

func (o FrontendIPConfigurationResponseOutput) ToFrontendIPConfigurationResponseOutputWithContext(ctx context.Context) FrontendIPConfigurationResponseOutput {
	return o
}

func (o FrontendIPConfigurationResponseOutput) ToFrontendIPConfigurationResponsePtrOutput() FrontendIPConfigurationResponsePtrOutput {
	return o.ToFrontendIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o FrontendIPConfigurationResponseOutput) ToFrontendIPConfigurationResponsePtrOutputWithContext(ctx context.Context) FrontendIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *FrontendIPConfigurationResponse {
		return &v
	}).(FrontendIPConfigurationResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o FrontendIPConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o FrontendIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o FrontendIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the load balancer probe.
func (o FrontendIPConfigurationResponseOutput) Properties() FrontendIPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *FrontendIPConfigurationPropertiesFormatResponse {
		return v.Properties
	}).(FrontendIPConfigurationPropertiesFormatResponsePtrOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o FrontendIPConfigurationResponseOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type FrontendIPConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendIPConfigurationResponse)(nil)).Elem()
}

func (o FrontendIPConfigurationResponsePtrOutput) ToFrontendIPConfigurationResponsePtrOutput() FrontendIPConfigurationResponsePtrOutput {
	return o
}

func (o FrontendIPConfigurationResponsePtrOutput) ToFrontendIPConfigurationResponsePtrOutputWithContext(ctx context.Context) FrontendIPConfigurationResponsePtrOutput {
	return o
}

func (o FrontendIPConfigurationResponsePtrOutput) Elem() FrontendIPConfigurationResponseOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) FrontendIPConfigurationResponse { return *v }).(FrontendIPConfigurationResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o FrontendIPConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o FrontendIPConfigurationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o FrontendIPConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Properties of the load balancer probe.
func (o FrontendIPConfigurationResponsePtrOutput) Properties() FrontendIPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *FrontendIPConfigurationPropertiesFormatResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(FrontendIPConfigurationPropertiesFormatResponsePtrOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o FrontendIPConfigurationResponsePtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

type FrontendIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfigurationResponse)(nil)).Elem()
}

func (o FrontendIPConfigurationResponseArrayOutput) ToFrontendIPConfigurationResponseArrayOutput() FrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o FrontendIPConfigurationResponseArrayOutput) ToFrontendIPConfigurationResponseArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o FrontendIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) FrontendIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontendIPConfigurationResponse {
		return vs[0].([]FrontendIPConfigurationResponse)[vs[1].(int)]
	}).(FrontendIPConfigurationResponseOutput)
}

// HubVirtualNetworkConnection Resource.
type HubVirtualNetworkConnection struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Parameters for HubVirtualNetworkConnection
	Properties *HubVirtualNetworkConnectionProperties `pulumi:"properties"`
}

// HubVirtualNetworkConnectionInput is an input type that accepts HubVirtualNetworkConnectionArgs and HubVirtualNetworkConnectionOutput values.
// You can construct a concrete instance of `HubVirtualNetworkConnectionInput` via:
//
//          HubVirtualNetworkConnectionArgs{...}
type HubVirtualNetworkConnectionInput interface {
	pulumi.Input

	ToHubVirtualNetworkConnectionOutput() HubVirtualNetworkConnectionOutput
	ToHubVirtualNetworkConnectionOutputWithContext(context.Context) HubVirtualNetworkConnectionOutput
}

// HubVirtualNetworkConnection Resource.
type HubVirtualNetworkConnectionArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Parameters for HubVirtualNetworkConnection
	Properties HubVirtualNetworkConnectionPropertiesPtrInput `pulumi:"properties"`
}

func (HubVirtualNetworkConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HubVirtualNetworkConnection)(nil)).Elem()
}

func (i HubVirtualNetworkConnectionArgs) ToHubVirtualNetworkConnectionOutput() HubVirtualNetworkConnectionOutput {
	return i.ToHubVirtualNetworkConnectionOutputWithContext(context.Background())
}

func (i HubVirtualNetworkConnectionArgs) ToHubVirtualNetworkConnectionOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubVirtualNetworkConnectionOutput)
}

// HubVirtualNetworkConnectionArrayInput is an input type that accepts HubVirtualNetworkConnectionArray and HubVirtualNetworkConnectionArrayOutput values.
// You can construct a concrete instance of `HubVirtualNetworkConnectionArrayInput` via:
//
//          HubVirtualNetworkConnectionArray{ HubVirtualNetworkConnectionArgs{...} }
type HubVirtualNetworkConnectionArrayInput interface {
	pulumi.Input

	ToHubVirtualNetworkConnectionArrayOutput() HubVirtualNetworkConnectionArrayOutput
	ToHubVirtualNetworkConnectionArrayOutputWithContext(context.Context) HubVirtualNetworkConnectionArrayOutput
}

type HubVirtualNetworkConnectionArray []HubVirtualNetworkConnectionInput

func (HubVirtualNetworkConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HubVirtualNetworkConnection)(nil)).Elem()
}

func (i HubVirtualNetworkConnectionArray) ToHubVirtualNetworkConnectionArrayOutput() HubVirtualNetworkConnectionArrayOutput {
	return i.ToHubVirtualNetworkConnectionArrayOutputWithContext(context.Background())
}

func (i HubVirtualNetworkConnectionArray) ToHubVirtualNetworkConnectionArrayOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubVirtualNetworkConnectionArrayOutput)
}

// HubVirtualNetworkConnection Resource.
type HubVirtualNetworkConnectionOutput struct{ *pulumi.OutputState }

func (HubVirtualNetworkConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubVirtualNetworkConnection)(nil)).Elem()
}

func (o HubVirtualNetworkConnectionOutput) ToHubVirtualNetworkConnectionOutput() HubVirtualNetworkConnectionOutput {
	return o
}

func (o HubVirtualNetworkConnectionOutput) ToHubVirtualNetworkConnectionOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionOutput {
	return o
}

// Resource ID.
func (o HubVirtualNetworkConnectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o HubVirtualNetworkConnectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Parameters for HubVirtualNetworkConnection
func (o HubVirtualNetworkConnectionOutput) Properties() HubVirtualNetworkConnectionPropertiesPtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnection) *HubVirtualNetworkConnectionProperties { return v.Properties }).(HubVirtualNetworkConnectionPropertiesPtrOutput)
}

type HubVirtualNetworkConnectionArrayOutput struct{ *pulumi.OutputState }

func (HubVirtualNetworkConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HubVirtualNetworkConnection)(nil)).Elem()
}

func (o HubVirtualNetworkConnectionArrayOutput) ToHubVirtualNetworkConnectionArrayOutput() HubVirtualNetworkConnectionArrayOutput {
	return o
}

func (o HubVirtualNetworkConnectionArrayOutput) ToHubVirtualNetworkConnectionArrayOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionArrayOutput {
	return o
}

func (o HubVirtualNetworkConnectionArrayOutput) Index(i pulumi.IntInput) HubVirtualNetworkConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HubVirtualNetworkConnection {
		return vs[0].([]HubVirtualNetworkConnection)[vs[1].(int)]
	}).(HubVirtualNetworkConnectionOutput)
}

// Parameters for HubVirtualNetworkConnection
type HubVirtualNetworkConnectionProperties struct {
	// VirtualHub to RemoteVnet transit to enabled or not.
	AllowHubToRemoteVnetTransit *bool `pulumi:"allowHubToRemoteVnetTransit"`
	// Allow RemoteVnet to use Virtual Hub's gateways.
	AllowRemoteVnetToUseHubVnetGateways *bool `pulumi:"allowRemoteVnetToUseHubVnetGateways"`
	// Enable internet security
	EnableInternetSecurity *bool `pulumi:"enableInternetSecurity"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Reference to the remote virtual network.
	RemoteVirtualNetwork *SubResource `pulumi:"remoteVirtualNetwork"`
}

// HubVirtualNetworkConnectionPropertiesInput is an input type that accepts HubVirtualNetworkConnectionPropertiesArgs and HubVirtualNetworkConnectionPropertiesOutput values.
// You can construct a concrete instance of `HubVirtualNetworkConnectionPropertiesInput` via:
//
//          HubVirtualNetworkConnectionPropertiesArgs{...}
type HubVirtualNetworkConnectionPropertiesInput interface {
	pulumi.Input

	ToHubVirtualNetworkConnectionPropertiesOutput() HubVirtualNetworkConnectionPropertiesOutput
	ToHubVirtualNetworkConnectionPropertiesOutputWithContext(context.Context) HubVirtualNetworkConnectionPropertiesOutput
}

// Parameters for HubVirtualNetworkConnection
type HubVirtualNetworkConnectionPropertiesArgs struct {
	// VirtualHub to RemoteVnet transit to enabled or not.
	AllowHubToRemoteVnetTransit pulumi.BoolPtrInput `pulumi:"allowHubToRemoteVnetTransit"`
	// Allow RemoteVnet to use Virtual Hub's gateways.
	AllowRemoteVnetToUseHubVnetGateways pulumi.BoolPtrInput `pulumi:"allowRemoteVnetToUseHubVnetGateways"`
	// Enable internet security
	EnableInternetSecurity pulumi.BoolPtrInput `pulumi:"enableInternetSecurity"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Reference to the remote virtual network.
	RemoteVirtualNetwork SubResourcePtrInput `pulumi:"remoteVirtualNetwork"`
}

func (HubVirtualNetworkConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HubVirtualNetworkConnectionProperties)(nil)).Elem()
}

func (i HubVirtualNetworkConnectionPropertiesArgs) ToHubVirtualNetworkConnectionPropertiesOutput() HubVirtualNetworkConnectionPropertiesOutput {
	return i.ToHubVirtualNetworkConnectionPropertiesOutputWithContext(context.Background())
}

func (i HubVirtualNetworkConnectionPropertiesArgs) ToHubVirtualNetworkConnectionPropertiesOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubVirtualNetworkConnectionPropertiesOutput)
}

func (i HubVirtualNetworkConnectionPropertiesArgs) ToHubVirtualNetworkConnectionPropertiesPtrOutput() HubVirtualNetworkConnectionPropertiesPtrOutput {
	return i.ToHubVirtualNetworkConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (i HubVirtualNetworkConnectionPropertiesArgs) ToHubVirtualNetworkConnectionPropertiesPtrOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubVirtualNetworkConnectionPropertiesOutput).ToHubVirtualNetworkConnectionPropertiesPtrOutputWithContext(ctx)
}

// HubVirtualNetworkConnectionPropertiesPtrInput is an input type that accepts HubVirtualNetworkConnectionPropertiesArgs, HubVirtualNetworkConnectionPropertiesPtr and HubVirtualNetworkConnectionPropertiesPtrOutput values.
// You can construct a concrete instance of `HubVirtualNetworkConnectionPropertiesPtrInput` via:
//
//          HubVirtualNetworkConnectionPropertiesArgs{...}
//
//  or:
//
//          nil
type HubVirtualNetworkConnectionPropertiesPtrInput interface {
	pulumi.Input

	ToHubVirtualNetworkConnectionPropertiesPtrOutput() HubVirtualNetworkConnectionPropertiesPtrOutput
	ToHubVirtualNetworkConnectionPropertiesPtrOutputWithContext(context.Context) HubVirtualNetworkConnectionPropertiesPtrOutput
}

type hubVirtualNetworkConnectionPropertiesPtrType HubVirtualNetworkConnectionPropertiesArgs

func HubVirtualNetworkConnectionPropertiesPtr(v *HubVirtualNetworkConnectionPropertiesArgs) HubVirtualNetworkConnectionPropertiesPtrInput {
	return (*hubVirtualNetworkConnectionPropertiesPtrType)(v)
}

func (*hubVirtualNetworkConnectionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HubVirtualNetworkConnectionProperties)(nil)).Elem()
}

func (i *hubVirtualNetworkConnectionPropertiesPtrType) ToHubVirtualNetworkConnectionPropertiesPtrOutput() HubVirtualNetworkConnectionPropertiesPtrOutput {
	return i.ToHubVirtualNetworkConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (i *hubVirtualNetworkConnectionPropertiesPtrType) ToHubVirtualNetworkConnectionPropertiesPtrOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubVirtualNetworkConnectionPropertiesPtrOutput)
}

// Parameters for HubVirtualNetworkConnection
type HubVirtualNetworkConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (HubVirtualNetworkConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubVirtualNetworkConnectionProperties)(nil)).Elem()
}

func (o HubVirtualNetworkConnectionPropertiesOutput) ToHubVirtualNetworkConnectionPropertiesOutput() HubVirtualNetworkConnectionPropertiesOutput {
	return o
}

func (o HubVirtualNetworkConnectionPropertiesOutput) ToHubVirtualNetworkConnectionPropertiesOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionPropertiesOutput {
	return o
}

func (o HubVirtualNetworkConnectionPropertiesOutput) ToHubVirtualNetworkConnectionPropertiesPtrOutput() HubVirtualNetworkConnectionPropertiesPtrOutput {
	return o.ToHubVirtualNetworkConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (o HubVirtualNetworkConnectionPropertiesOutput) ToHubVirtualNetworkConnectionPropertiesPtrOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionPropertiesPtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionProperties) *HubVirtualNetworkConnectionProperties {
		return &v
	}).(HubVirtualNetworkConnectionPropertiesPtrOutput)
}

// VirtualHub to RemoteVnet transit to enabled or not.
func (o HubVirtualNetworkConnectionPropertiesOutput) AllowHubToRemoteVnetTransit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionProperties) *bool { return v.AllowHubToRemoteVnetTransit }).(pulumi.BoolPtrOutput)
}

// Allow RemoteVnet to use Virtual Hub's gateways.
func (o HubVirtualNetworkConnectionPropertiesOutput) AllowRemoteVnetToUseHubVnetGateways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionProperties) *bool { return v.AllowRemoteVnetToUseHubVnetGateways }).(pulumi.BoolPtrOutput)
}

// Enable internet security
func (o HubVirtualNetworkConnectionPropertiesOutput) EnableInternetSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionProperties) *bool { return v.EnableInternetSecurity }).(pulumi.BoolPtrOutput)
}

// The provisioning state of the resource.
func (o HubVirtualNetworkConnectionPropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Reference to the remote virtual network.
func (o HubVirtualNetworkConnectionPropertiesOutput) RemoteVirtualNetwork() SubResourcePtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionProperties) *SubResource { return v.RemoteVirtualNetwork }).(SubResourcePtrOutput)
}

type HubVirtualNetworkConnectionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (HubVirtualNetworkConnectionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HubVirtualNetworkConnectionProperties)(nil)).Elem()
}

func (o HubVirtualNetworkConnectionPropertiesPtrOutput) ToHubVirtualNetworkConnectionPropertiesPtrOutput() HubVirtualNetworkConnectionPropertiesPtrOutput {
	return o
}

func (o HubVirtualNetworkConnectionPropertiesPtrOutput) ToHubVirtualNetworkConnectionPropertiesPtrOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionPropertiesPtrOutput {
	return o
}

func (o HubVirtualNetworkConnectionPropertiesPtrOutput) Elem() HubVirtualNetworkConnectionPropertiesOutput {
	return o.ApplyT(func(v *HubVirtualNetworkConnectionProperties) HubVirtualNetworkConnectionProperties { return *v }).(HubVirtualNetworkConnectionPropertiesOutput)
}

// VirtualHub to RemoteVnet transit to enabled or not.
func (o HubVirtualNetworkConnectionPropertiesPtrOutput) AllowHubToRemoteVnetTransit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HubVirtualNetworkConnectionProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AllowHubToRemoteVnetTransit
	}).(pulumi.BoolPtrOutput)
}

// Allow RemoteVnet to use Virtual Hub's gateways.
func (o HubVirtualNetworkConnectionPropertiesPtrOutput) AllowRemoteVnetToUseHubVnetGateways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HubVirtualNetworkConnectionProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AllowRemoteVnetToUseHubVnetGateways
	}).(pulumi.BoolPtrOutput)
}

// Enable internet security
func (o HubVirtualNetworkConnectionPropertiesPtrOutput) EnableInternetSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HubVirtualNetworkConnectionProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableInternetSecurity
	}).(pulumi.BoolPtrOutput)
}

// The provisioning state of the resource.
func (o HubVirtualNetworkConnectionPropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HubVirtualNetworkConnectionProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Reference to the remote virtual network.
func (o HubVirtualNetworkConnectionPropertiesPtrOutput) RemoteVirtualNetwork() SubResourcePtrOutput {
	return o.ApplyT(func(v *HubVirtualNetworkConnectionProperties) *SubResource {
		if v == nil {
			return nil
		}
		return v.RemoteVirtualNetwork
	}).(SubResourcePtrOutput)
}

// Parameters for HubVirtualNetworkConnection
type HubVirtualNetworkConnectionPropertiesResponse struct {
	// VirtualHub to RemoteVnet transit to enabled or not.
	AllowHubToRemoteVnetTransit *bool `pulumi:"allowHubToRemoteVnetTransit"`
	// Allow RemoteVnet to use Virtual Hub's gateways.
	AllowRemoteVnetToUseHubVnetGateways *bool `pulumi:"allowRemoteVnetToUseHubVnetGateways"`
	// Enable internet security
	EnableInternetSecurity *bool `pulumi:"enableInternetSecurity"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Reference to the remote virtual network.
	RemoteVirtualNetwork *SubResourceResponse `pulumi:"remoteVirtualNetwork"`
}

// HubVirtualNetworkConnectionPropertiesResponseInput is an input type that accepts HubVirtualNetworkConnectionPropertiesResponseArgs and HubVirtualNetworkConnectionPropertiesResponseOutput values.
// You can construct a concrete instance of `HubVirtualNetworkConnectionPropertiesResponseInput` via:
//
//          HubVirtualNetworkConnectionPropertiesResponseArgs{...}
type HubVirtualNetworkConnectionPropertiesResponseInput interface {
	pulumi.Input

	ToHubVirtualNetworkConnectionPropertiesResponseOutput() HubVirtualNetworkConnectionPropertiesResponseOutput
	ToHubVirtualNetworkConnectionPropertiesResponseOutputWithContext(context.Context) HubVirtualNetworkConnectionPropertiesResponseOutput
}

// Parameters for HubVirtualNetworkConnection
type HubVirtualNetworkConnectionPropertiesResponseArgs struct {
	// VirtualHub to RemoteVnet transit to enabled or not.
	AllowHubToRemoteVnetTransit pulumi.BoolPtrInput `pulumi:"allowHubToRemoteVnetTransit"`
	// Allow RemoteVnet to use Virtual Hub's gateways.
	AllowRemoteVnetToUseHubVnetGateways pulumi.BoolPtrInput `pulumi:"allowRemoteVnetToUseHubVnetGateways"`
	// Enable internet security
	EnableInternetSecurity pulumi.BoolPtrInput `pulumi:"enableInternetSecurity"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Reference to the remote virtual network.
	RemoteVirtualNetwork SubResourceResponsePtrInput `pulumi:"remoteVirtualNetwork"`
}

func (HubVirtualNetworkConnectionPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HubVirtualNetworkConnectionPropertiesResponse)(nil)).Elem()
}

func (i HubVirtualNetworkConnectionPropertiesResponseArgs) ToHubVirtualNetworkConnectionPropertiesResponseOutput() HubVirtualNetworkConnectionPropertiesResponseOutput {
	return i.ToHubVirtualNetworkConnectionPropertiesResponseOutputWithContext(context.Background())
}

func (i HubVirtualNetworkConnectionPropertiesResponseArgs) ToHubVirtualNetworkConnectionPropertiesResponseOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubVirtualNetworkConnectionPropertiesResponseOutput)
}

func (i HubVirtualNetworkConnectionPropertiesResponseArgs) ToHubVirtualNetworkConnectionPropertiesResponsePtrOutput() HubVirtualNetworkConnectionPropertiesResponsePtrOutput {
	return i.ToHubVirtualNetworkConnectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i HubVirtualNetworkConnectionPropertiesResponseArgs) ToHubVirtualNetworkConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubVirtualNetworkConnectionPropertiesResponseOutput).ToHubVirtualNetworkConnectionPropertiesResponsePtrOutputWithContext(ctx)
}

// HubVirtualNetworkConnectionPropertiesResponsePtrInput is an input type that accepts HubVirtualNetworkConnectionPropertiesResponseArgs, HubVirtualNetworkConnectionPropertiesResponsePtr and HubVirtualNetworkConnectionPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `HubVirtualNetworkConnectionPropertiesResponsePtrInput` via:
//
//          HubVirtualNetworkConnectionPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type HubVirtualNetworkConnectionPropertiesResponsePtrInput interface {
	pulumi.Input

	ToHubVirtualNetworkConnectionPropertiesResponsePtrOutput() HubVirtualNetworkConnectionPropertiesResponsePtrOutput
	ToHubVirtualNetworkConnectionPropertiesResponsePtrOutputWithContext(context.Context) HubVirtualNetworkConnectionPropertiesResponsePtrOutput
}

type hubVirtualNetworkConnectionPropertiesResponsePtrType HubVirtualNetworkConnectionPropertiesResponseArgs

func HubVirtualNetworkConnectionPropertiesResponsePtr(v *HubVirtualNetworkConnectionPropertiesResponseArgs) HubVirtualNetworkConnectionPropertiesResponsePtrInput {
	return (*hubVirtualNetworkConnectionPropertiesResponsePtrType)(v)
}

func (*hubVirtualNetworkConnectionPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HubVirtualNetworkConnectionPropertiesResponse)(nil)).Elem()
}

func (i *hubVirtualNetworkConnectionPropertiesResponsePtrType) ToHubVirtualNetworkConnectionPropertiesResponsePtrOutput() HubVirtualNetworkConnectionPropertiesResponsePtrOutput {
	return i.ToHubVirtualNetworkConnectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *hubVirtualNetworkConnectionPropertiesResponsePtrType) ToHubVirtualNetworkConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubVirtualNetworkConnectionPropertiesResponsePtrOutput)
}

// Parameters for HubVirtualNetworkConnection
type HubVirtualNetworkConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (HubVirtualNetworkConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubVirtualNetworkConnectionPropertiesResponse)(nil)).Elem()
}

func (o HubVirtualNetworkConnectionPropertiesResponseOutput) ToHubVirtualNetworkConnectionPropertiesResponseOutput() HubVirtualNetworkConnectionPropertiesResponseOutput {
	return o
}

func (o HubVirtualNetworkConnectionPropertiesResponseOutput) ToHubVirtualNetworkConnectionPropertiesResponseOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionPropertiesResponseOutput {
	return o
}

func (o HubVirtualNetworkConnectionPropertiesResponseOutput) ToHubVirtualNetworkConnectionPropertiesResponsePtrOutput() HubVirtualNetworkConnectionPropertiesResponsePtrOutput {
	return o.ToHubVirtualNetworkConnectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o HubVirtualNetworkConnectionPropertiesResponseOutput) ToHubVirtualNetworkConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionPropertiesResponse) *HubVirtualNetworkConnectionPropertiesResponse {
		return &v
	}).(HubVirtualNetworkConnectionPropertiesResponsePtrOutput)
}

// VirtualHub to RemoteVnet transit to enabled or not.
func (o HubVirtualNetworkConnectionPropertiesResponseOutput) AllowHubToRemoteVnetTransit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionPropertiesResponse) *bool { return v.AllowHubToRemoteVnetTransit }).(pulumi.BoolPtrOutput)
}

// Allow RemoteVnet to use Virtual Hub's gateways.
func (o HubVirtualNetworkConnectionPropertiesResponseOutput) AllowRemoteVnetToUseHubVnetGateways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionPropertiesResponse) *bool {
		return v.AllowRemoteVnetToUseHubVnetGateways
	}).(pulumi.BoolPtrOutput)
}

// Enable internet security
func (o HubVirtualNetworkConnectionPropertiesResponseOutput) EnableInternetSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionPropertiesResponse) *bool { return v.EnableInternetSecurity }).(pulumi.BoolPtrOutput)
}

// The provisioning state of the resource.
func (o HubVirtualNetworkConnectionPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Reference to the remote virtual network.
func (o HubVirtualNetworkConnectionPropertiesResponseOutput) RemoteVirtualNetwork() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionPropertiesResponse) *SubResourceResponse {
		return v.RemoteVirtualNetwork
	}).(SubResourceResponsePtrOutput)
}

type HubVirtualNetworkConnectionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (HubVirtualNetworkConnectionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HubVirtualNetworkConnectionPropertiesResponse)(nil)).Elem()
}

func (o HubVirtualNetworkConnectionPropertiesResponsePtrOutput) ToHubVirtualNetworkConnectionPropertiesResponsePtrOutput() HubVirtualNetworkConnectionPropertiesResponsePtrOutput {
	return o
}

func (o HubVirtualNetworkConnectionPropertiesResponsePtrOutput) ToHubVirtualNetworkConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionPropertiesResponsePtrOutput {
	return o
}

func (o HubVirtualNetworkConnectionPropertiesResponsePtrOutput) Elem() HubVirtualNetworkConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v *HubVirtualNetworkConnectionPropertiesResponse) HubVirtualNetworkConnectionPropertiesResponse {
		return *v
	}).(HubVirtualNetworkConnectionPropertiesResponseOutput)
}

// VirtualHub to RemoteVnet transit to enabled or not.
func (o HubVirtualNetworkConnectionPropertiesResponsePtrOutput) AllowHubToRemoteVnetTransit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HubVirtualNetworkConnectionPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowHubToRemoteVnetTransit
	}).(pulumi.BoolPtrOutput)
}

// Allow RemoteVnet to use Virtual Hub's gateways.
func (o HubVirtualNetworkConnectionPropertiesResponsePtrOutput) AllowRemoteVnetToUseHubVnetGateways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HubVirtualNetworkConnectionPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowRemoteVnetToUseHubVnetGateways
	}).(pulumi.BoolPtrOutput)
}

// Enable internet security
func (o HubVirtualNetworkConnectionPropertiesResponsePtrOutput) EnableInternetSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HubVirtualNetworkConnectionPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableInternetSecurity
	}).(pulumi.BoolPtrOutput)
}

// The provisioning state of the resource.
func (o HubVirtualNetworkConnectionPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HubVirtualNetworkConnectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Reference to the remote virtual network.
func (o HubVirtualNetworkConnectionPropertiesResponsePtrOutput) RemoteVirtualNetwork() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *HubVirtualNetworkConnectionPropertiesResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.RemoteVirtualNetwork
	}).(SubResourceResponsePtrOutput)
}

// HubVirtualNetworkConnection Resource.
type HubVirtualNetworkConnectionResponse struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Parameters for HubVirtualNetworkConnection
	Properties *HubVirtualNetworkConnectionPropertiesResponse `pulumi:"properties"`
}

// HubVirtualNetworkConnectionResponseInput is an input type that accepts HubVirtualNetworkConnectionResponseArgs and HubVirtualNetworkConnectionResponseOutput values.
// You can construct a concrete instance of `HubVirtualNetworkConnectionResponseInput` via:
//
//          HubVirtualNetworkConnectionResponseArgs{...}
type HubVirtualNetworkConnectionResponseInput interface {
	pulumi.Input

	ToHubVirtualNetworkConnectionResponseOutput() HubVirtualNetworkConnectionResponseOutput
	ToHubVirtualNetworkConnectionResponseOutputWithContext(context.Context) HubVirtualNetworkConnectionResponseOutput
}

// HubVirtualNetworkConnection Resource.
type HubVirtualNetworkConnectionResponseArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Parameters for HubVirtualNetworkConnection
	Properties HubVirtualNetworkConnectionPropertiesResponsePtrInput `pulumi:"properties"`
}

func (HubVirtualNetworkConnectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HubVirtualNetworkConnectionResponse)(nil)).Elem()
}

func (i HubVirtualNetworkConnectionResponseArgs) ToHubVirtualNetworkConnectionResponseOutput() HubVirtualNetworkConnectionResponseOutput {
	return i.ToHubVirtualNetworkConnectionResponseOutputWithContext(context.Background())
}

func (i HubVirtualNetworkConnectionResponseArgs) ToHubVirtualNetworkConnectionResponseOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubVirtualNetworkConnectionResponseOutput)
}

// HubVirtualNetworkConnectionResponseArrayInput is an input type that accepts HubVirtualNetworkConnectionResponseArray and HubVirtualNetworkConnectionResponseArrayOutput values.
// You can construct a concrete instance of `HubVirtualNetworkConnectionResponseArrayInput` via:
//
//          HubVirtualNetworkConnectionResponseArray{ HubVirtualNetworkConnectionResponseArgs{...} }
type HubVirtualNetworkConnectionResponseArrayInput interface {
	pulumi.Input

	ToHubVirtualNetworkConnectionResponseArrayOutput() HubVirtualNetworkConnectionResponseArrayOutput
	ToHubVirtualNetworkConnectionResponseArrayOutputWithContext(context.Context) HubVirtualNetworkConnectionResponseArrayOutput
}

type HubVirtualNetworkConnectionResponseArray []HubVirtualNetworkConnectionResponseInput

func (HubVirtualNetworkConnectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HubVirtualNetworkConnectionResponse)(nil)).Elem()
}

func (i HubVirtualNetworkConnectionResponseArray) ToHubVirtualNetworkConnectionResponseArrayOutput() HubVirtualNetworkConnectionResponseArrayOutput {
	return i.ToHubVirtualNetworkConnectionResponseArrayOutputWithContext(context.Background())
}

func (i HubVirtualNetworkConnectionResponseArray) ToHubVirtualNetworkConnectionResponseArrayOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubVirtualNetworkConnectionResponseArrayOutput)
}

// HubVirtualNetworkConnection Resource.
type HubVirtualNetworkConnectionResponseOutput struct{ *pulumi.OutputState }

func (HubVirtualNetworkConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubVirtualNetworkConnectionResponse)(nil)).Elem()
}

func (o HubVirtualNetworkConnectionResponseOutput) ToHubVirtualNetworkConnectionResponseOutput() HubVirtualNetworkConnectionResponseOutput {
	return o
}

func (o HubVirtualNetworkConnectionResponseOutput) ToHubVirtualNetworkConnectionResponseOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionResponseOutput {
	return o
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o HubVirtualNetworkConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o HubVirtualNetworkConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o HubVirtualNetworkConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Parameters for HubVirtualNetworkConnection
func (o HubVirtualNetworkConnectionResponseOutput) Properties() HubVirtualNetworkConnectionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionResponse) *HubVirtualNetworkConnectionPropertiesResponse {
		return v.Properties
	}).(HubVirtualNetworkConnectionPropertiesResponsePtrOutput)
}

type HubVirtualNetworkConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (HubVirtualNetworkConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HubVirtualNetworkConnectionResponse)(nil)).Elem()
}

func (o HubVirtualNetworkConnectionResponseArrayOutput) ToHubVirtualNetworkConnectionResponseArrayOutput() HubVirtualNetworkConnectionResponseArrayOutput {
	return o
}

func (o HubVirtualNetworkConnectionResponseArrayOutput) ToHubVirtualNetworkConnectionResponseArrayOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionResponseArrayOutput {
	return o
}

func (o HubVirtualNetworkConnectionResponseArrayOutput) Index(i pulumi.IntInput) HubVirtualNetworkConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HubVirtualNetworkConnectionResponse {
		return vs[0].([]HubVirtualNetworkConnectionResponse)[vs[1].(int)]
	}).(HubVirtualNetworkConnectionResponseOutput)
}

// IP configuration
type IPConfiguration struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the IP configuration
	Properties *IPConfigurationPropertiesFormat `pulumi:"properties"`
}

// IPConfigurationInput is an input type that accepts IPConfigurationArgs and IPConfigurationOutput values.
// You can construct a concrete instance of `IPConfigurationInput` via:
//
//          IPConfigurationArgs{...}
type IPConfigurationInput interface {
	pulumi.Input

	ToIPConfigurationOutput() IPConfigurationOutput
	ToIPConfigurationOutputWithContext(context.Context) IPConfigurationOutput
}

// IP configuration
type IPConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the IP configuration
	Properties IPConfigurationPropertiesFormatPtrInput `pulumi:"properties"`
}

func (IPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfiguration)(nil)).Elem()
}

func (i IPConfigurationArgs) ToIPConfigurationOutput() IPConfigurationOutput {
	return i.ToIPConfigurationOutputWithContext(context.Background())
}

func (i IPConfigurationArgs) ToIPConfigurationOutputWithContext(ctx context.Context) IPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationOutput)
}

// IP configuration
type IPConfigurationOutput struct{ *pulumi.OutputState }

func (IPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfiguration)(nil)).Elem()
}

func (o IPConfigurationOutput) ToIPConfigurationOutput() IPConfigurationOutput {
	return o
}

func (o IPConfigurationOutput) ToIPConfigurationOutputWithContext(ctx context.Context) IPConfigurationOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o IPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o IPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the IP configuration
func (o IPConfigurationOutput) Properties() IPConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v IPConfiguration) *IPConfigurationPropertiesFormat { return v.Properties }).(IPConfigurationPropertiesFormatPtrOutput)
}

// IP configuration profile child resource.
type IPConfigurationProfile struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the IP configuration profile.
	Properties *IPConfigurationProfilePropertiesFormat `pulumi:"properties"`
}

// IPConfigurationProfileInput is an input type that accepts IPConfigurationProfileArgs and IPConfigurationProfileOutput values.
// You can construct a concrete instance of `IPConfigurationProfileInput` via:
//
//          IPConfigurationProfileArgs{...}
type IPConfigurationProfileInput interface {
	pulumi.Input

	ToIPConfigurationProfileOutput() IPConfigurationProfileOutput
	ToIPConfigurationProfileOutputWithContext(context.Context) IPConfigurationProfileOutput
}

// IP configuration profile child resource.
type IPConfigurationProfileArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the IP configuration profile.
	Properties IPConfigurationProfilePropertiesFormatPtrInput `pulumi:"properties"`
}

func (IPConfigurationProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationProfile)(nil)).Elem()
}

func (i IPConfigurationProfileArgs) ToIPConfigurationProfileOutput() IPConfigurationProfileOutput {
	return i.ToIPConfigurationProfileOutputWithContext(context.Background())
}

func (i IPConfigurationProfileArgs) ToIPConfigurationProfileOutputWithContext(ctx context.Context) IPConfigurationProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationProfileOutput)
}

// IPConfigurationProfileArrayInput is an input type that accepts IPConfigurationProfileArray and IPConfigurationProfileArrayOutput values.
// You can construct a concrete instance of `IPConfigurationProfileArrayInput` via:
//
//          IPConfigurationProfileArray{ IPConfigurationProfileArgs{...} }
type IPConfigurationProfileArrayInput interface {
	pulumi.Input

	ToIPConfigurationProfileArrayOutput() IPConfigurationProfileArrayOutput
	ToIPConfigurationProfileArrayOutputWithContext(context.Context) IPConfigurationProfileArrayOutput
}

type IPConfigurationProfileArray []IPConfigurationProfileInput

func (IPConfigurationProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationProfile)(nil)).Elem()
}

func (i IPConfigurationProfileArray) ToIPConfigurationProfileArrayOutput() IPConfigurationProfileArrayOutput {
	return i.ToIPConfigurationProfileArrayOutputWithContext(context.Background())
}

func (i IPConfigurationProfileArray) ToIPConfigurationProfileArrayOutputWithContext(ctx context.Context) IPConfigurationProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationProfileArrayOutput)
}

// IP configuration profile child resource.
type IPConfigurationProfileOutput struct{ *pulumi.OutputState }

func (IPConfigurationProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationProfile)(nil)).Elem()
}

func (o IPConfigurationProfileOutput) ToIPConfigurationProfileOutput() IPConfigurationProfileOutput {
	return o
}

func (o IPConfigurationProfileOutput) ToIPConfigurationProfileOutputWithContext(ctx context.Context) IPConfigurationProfileOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationProfileOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationProfile) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o IPConfigurationProfileOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationProfile) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o IPConfigurationProfileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationProfile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the IP configuration profile.
func (o IPConfigurationProfileOutput) Properties() IPConfigurationProfilePropertiesFormatPtrOutput {
	return o.ApplyT(func(v IPConfigurationProfile) *IPConfigurationProfilePropertiesFormat { return v.Properties }).(IPConfigurationProfilePropertiesFormatPtrOutput)
}

type IPConfigurationProfileArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationProfile)(nil)).Elem()
}

func (o IPConfigurationProfileArrayOutput) ToIPConfigurationProfileArrayOutput() IPConfigurationProfileArrayOutput {
	return o
}

func (o IPConfigurationProfileArrayOutput) ToIPConfigurationProfileArrayOutputWithContext(ctx context.Context) IPConfigurationProfileArrayOutput {
	return o
}

func (o IPConfigurationProfileArrayOutput) Index(i pulumi.IntInput) IPConfigurationProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigurationProfile {
		return vs[0].([]IPConfigurationProfile)[vs[1].(int)]
	}).(IPConfigurationProfileOutput)
}

// IP configuration profile properties.
type IPConfigurationProfilePropertiesFormat struct {
	// The reference of the subnet resource to create a container network interface ip configuration.
	Subnet *SubnetType `pulumi:"subnet"`
}

// IPConfigurationProfilePropertiesFormatInput is an input type that accepts IPConfigurationProfilePropertiesFormatArgs and IPConfigurationProfilePropertiesFormatOutput values.
// You can construct a concrete instance of `IPConfigurationProfilePropertiesFormatInput` via:
//
//          IPConfigurationProfilePropertiesFormatArgs{...}
type IPConfigurationProfilePropertiesFormatInput interface {
	pulumi.Input

	ToIPConfigurationProfilePropertiesFormatOutput() IPConfigurationProfilePropertiesFormatOutput
	ToIPConfigurationProfilePropertiesFormatOutputWithContext(context.Context) IPConfigurationProfilePropertiesFormatOutput
}

// IP configuration profile properties.
type IPConfigurationProfilePropertiesFormatArgs struct {
	// The reference of the subnet resource to create a container network interface ip configuration.
	Subnet SubnetTypePtrInput `pulumi:"subnet"`
}

func (IPConfigurationProfilePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationProfilePropertiesFormat)(nil)).Elem()
}

func (i IPConfigurationProfilePropertiesFormatArgs) ToIPConfigurationProfilePropertiesFormatOutput() IPConfigurationProfilePropertiesFormatOutput {
	return i.ToIPConfigurationProfilePropertiesFormatOutputWithContext(context.Background())
}

func (i IPConfigurationProfilePropertiesFormatArgs) ToIPConfigurationProfilePropertiesFormatOutputWithContext(ctx context.Context) IPConfigurationProfilePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationProfilePropertiesFormatOutput)
}

func (i IPConfigurationProfilePropertiesFormatArgs) ToIPConfigurationProfilePropertiesFormatPtrOutput() IPConfigurationProfilePropertiesFormatPtrOutput {
	return i.ToIPConfigurationProfilePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i IPConfigurationProfilePropertiesFormatArgs) ToIPConfigurationProfilePropertiesFormatPtrOutputWithContext(ctx context.Context) IPConfigurationProfilePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationProfilePropertiesFormatOutput).ToIPConfigurationProfilePropertiesFormatPtrOutputWithContext(ctx)
}

// IPConfigurationProfilePropertiesFormatPtrInput is an input type that accepts IPConfigurationProfilePropertiesFormatArgs, IPConfigurationProfilePropertiesFormatPtr and IPConfigurationProfilePropertiesFormatPtrOutput values.
// You can construct a concrete instance of `IPConfigurationProfilePropertiesFormatPtrInput` via:
//
//          IPConfigurationProfilePropertiesFormatArgs{...}
//
//  or:
//
//          nil
type IPConfigurationProfilePropertiesFormatPtrInput interface {
	pulumi.Input

	ToIPConfigurationProfilePropertiesFormatPtrOutput() IPConfigurationProfilePropertiesFormatPtrOutput
	ToIPConfigurationProfilePropertiesFormatPtrOutputWithContext(context.Context) IPConfigurationProfilePropertiesFormatPtrOutput
}

type ipconfigurationProfilePropertiesFormatPtrType IPConfigurationProfilePropertiesFormatArgs

func IPConfigurationProfilePropertiesFormatPtr(v *IPConfigurationProfilePropertiesFormatArgs) IPConfigurationProfilePropertiesFormatPtrInput {
	return (*ipconfigurationProfilePropertiesFormatPtrType)(v)
}

func (*ipconfigurationProfilePropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationProfilePropertiesFormat)(nil)).Elem()
}

func (i *ipconfigurationProfilePropertiesFormatPtrType) ToIPConfigurationProfilePropertiesFormatPtrOutput() IPConfigurationProfilePropertiesFormatPtrOutput {
	return i.ToIPConfigurationProfilePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *ipconfigurationProfilePropertiesFormatPtrType) ToIPConfigurationProfilePropertiesFormatPtrOutputWithContext(ctx context.Context) IPConfigurationProfilePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationProfilePropertiesFormatPtrOutput)
}

// IP configuration profile properties.
type IPConfigurationProfilePropertiesFormatOutput struct{ *pulumi.OutputState }

func (IPConfigurationProfilePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationProfilePropertiesFormat)(nil)).Elem()
}

func (o IPConfigurationProfilePropertiesFormatOutput) ToIPConfigurationProfilePropertiesFormatOutput() IPConfigurationProfilePropertiesFormatOutput {
	return o
}

func (o IPConfigurationProfilePropertiesFormatOutput) ToIPConfigurationProfilePropertiesFormatOutputWithContext(ctx context.Context) IPConfigurationProfilePropertiesFormatOutput {
	return o
}

func (o IPConfigurationProfilePropertiesFormatOutput) ToIPConfigurationProfilePropertiesFormatPtrOutput() IPConfigurationProfilePropertiesFormatPtrOutput {
	return o.ToIPConfigurationProfilePropertiesFormatPtrOutputWithContext(context.Background())
}

func (o IPConfigurationProfilePropertiesFormatOutput) ToIPConfigurationProfilePropertiesFormatPtrOutputWithContext(ctx context.Context) IPConfigurationProfilePropertiesFormatPtrOutput {
	return o.ApplyT(func(v IPConfigurationProfilePropertiesFormat) *IPConfigurationProfilePropertiesFormat {
		return &v
	}).(IPConfigurationProfilePropertiesFormatPtrOutput)
}

// The reference of the subnet resource to create a container network interface ip configuration.
func (o IPConfigurationProfilePropertiesFormatOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v IPConfigurationProfilePropertiesFormat) *SubnetType { return v.Subnet }).(SubnetTypePtrOutput)
}

type IPConfigurationProfilePropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (IPConfigurationProfilePropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationProfilePropertiesFormat)(nil)).Elem()
}

func (o IPConfigurationProfilePropertiesFormatPtrOutput) ToIPConfigurationProfilePropertiesFormatPtrOutput() IPConfigurationProfilePropertiesFormatPtrOutput {
	return o
}

func (o IPConfigurationProfilePropertiesFormatPtrOutput) ToIPConfigurationProfilePropertiesFormatPtrOutputWithContext(ctx context.Context) IPConfigurationProfilePropertiesFormatPtrOutput {
	return o
}

func (o IPConfigurationProfilePropertiesFormatPtrOutput) Elem() IPConfigurationProfilePropertiesFormatOutput {
	return o.ApplyT(func(v *IPConfigurationProfilePropertiesFormat) IPConfigurationProfilePropertiesFormat { return *v }).(IPConfigurationProfilePropertiesFormatOutput)
}

// The reference of the subnet resource to create a container network interface ip configuration.
func (o IPConfigurationProfilePropertiesFormatPtrOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v *IPConfigurationProfilePropertiesFormat) *SubnetType {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetTypePtrOutput)
}

// IP configuration profile properties.
type IPConfigurationProfilePropertiesFormatResponse struct {
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference of the subnet resource to create a container network interface ip configuration.
	Subnet *SubnetResponse `pulumi:"subnet"`
}

// IPConfigurationProfilePropertiesFormatResponseInput is an input type that accepts IPConfigurationProfilePropertiesFormatResponseArgs and IPConfigurationProfilePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `IPConfigurationProfilePropertiesFormatResponseInput` via:
//
//          IPConfigurationProfilePropertiesFormatResponseArgs{...}
type IPConfigurationProfilePropertiesFormatResponseInput interface {
	pulumi.Input

	ToIPConfigurationProfilePropertiesFormatResponseOutput() IPConfigurationProfilePropertiesFormatResponseOutput
	ToIPConfigurationProfilePropertiesFormatResponseOutputWithContext(context.Context) IPConfigurationProfilePropertiesFormatResponseOutput
}

// IP configuration profile properties.
type IPConfigurationProfilePropertiesFormatResponseArgs struct {
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The reference of the subnet resource to create a container network interface ip configuration.
	Subnet SubnetResponsePtrInput `pulumi:"subnet"`
}

func (IPConfigurationProfilePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationProfilePropertiesFormatResponse)(nil)).Elem()
}

func (i IPConfigurationProfilePropertiesFormatResponseArgs) ToIPConfigurationProfilePropertiesFormatResponseOutput() IPConfigurationProfilePropertiesFormatResponseOutput {
	return i.ToIPConfigurationProfilePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i IPConfigurationProfilePropertiesFormatResponseArgs) ToIPConfigurationProfilePropertiesFormatResponseOutputWithContext(ctx context.Context) IPConfigurationProfilePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationProfilePropertiesFormatResponseOutput)
}

func (i IPConfigurationProfilePropertiesFormatResponseArgs) ToIPConfigurationProfilePropertiesFormatResponsePtrOutput() IPConfigurationProfilePropertiesFormatResponsePtrOutput {
	return i.ToIPConfigurationProfilePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i IPConfigurationProfilePropertiesFormatResponseArgs) ToIPConfigurationProfilePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) IPConfigurationProfilePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationProfilePropertiesFormatResponseOutput).ToIPConfigurationProfilePropertiesFormatResponsePtrOutputWithContext(ctx)
}

// IPConfigurationProfilePropertiesFormatResponsePtrInput is an input type that accepts IPConfigurationProfilePropertiesFormatResponseArgs, IPConfigurationProfilePropertiesFormatResponsePtr and IPConfigurationProfilePropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `IPConfigurationProfilePropertiesFormatResponsePtrInput` via:
//
//          IPConfigurationProfilePropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type IPConfigurationProfilePropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToIPConfigurationProfilePropertiesFormatResponsePtrOutput() IPConfigurationProfilePropertiesFormatResponsePtrOutput
	ToIPConfigurationProfilePropertiesFormatResponsePtrOutputWithContext(context.Context) IPConfigurationProfilePropertiesFormatResponsePtrOutput
}

type ipconfigurationProfilePropertiesFormatResponsePtrType IPConfigurationProfilePropertiesFormatResponseArgs

func IPConfigurationProfilePropertiesFormatResponsePtr(v *IPConfigurationProfilePropertiesFormatResponseArgs) IPConfigurationProfilePropertiesFormatResponsePtrInput {
	return (*ipconfigurationProfilePropertiesFormatResponsePtrType)(v)
}

func (*ipconfigurationProfilePropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationProfilePropertiesFormatResponse)(nil)).Elem()
}

func (i *ipconfigurationProfilePropertiesFormatResponsePtrType) ToIPConfigurationProfilePropertiesFormatResponsePtrOutput() IPConfigurationProfilePropertiesFormatResponsePtrOutput {
	return i.ToIPConfigurationProfilePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *ipconfigurationProfilePropertiesFormatResponsePtrType) ToIPConfigurationProfilePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) IPConfigurationProfilePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationProfilePropertiesFormatResponsePtrOutput)
}

// IP configuration profile properties.
type IPConfigurationProfilePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (IPConfigurationProfilePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationProfilePropertiesFormatResponse)(nil)).Elem()
}

func (o IPConfigurationProfilePropertiesFormatResponseOutput) ToIPConfigurationProfilePropertiesFormatResponseOutput() IPConfigurationProfilePropertiesFormatResponseOutput {
	return o
}

func (o IPConfigurationProfilePropertiesFormatResponseOutput) ToIPConfigurationProfilePropertiesFormatResponseOutputWithContext(ctx context.Context) IPConfigurationProfilePropertiesFormatResponseOutput {
	return o
}

func (o IPConfigurationProfilePropertiesFormatResponseOutput) ToIPConfigurationProfilePropertiesFormatResponsePtrOutput() IPConfigurationProfilePropertiesFormatResponsePtrOutput {
	return o.ToIPConfigurationProfilePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o IPConfigurationProfilePropertiesFormatResponseOutput) ToIPConfigurationProfilePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) IPConfigurationProfilePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationProfilePropertiesFormatResponse) *IPConfigurationProfilePropertiesFormatResponse {
		return &v
	}).(IPConfigurationProfilePropertiesFormatResponsePtrOutput)
}

// The provisioning state of the resource.
func (o IPConfigurationProfilePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationProfilePropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference of the subnet resource to create a container network interface ip configuration.
func (o IPConfigurationProfilePropertiesFormatResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationProfilePropertiesFormatResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

type IPConfigurationProfilePropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (IPConfigurationProfilePropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationProfilePropertiesFormatResponse)(nil)).Elem()
}

func (o IPConfigurationProfilePropertiesFormatResponsePtrOutput) ToIPConfigurationProfilePropertiesFormatResponsePtrOutput() IPConfigurationProfilePropertiesFormatResponsePtrOutput {
	return o
}

func (o IPConfigurationProfilePropertiesFormatResponsePtrOutput) ToIPConfigurationProfilePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) IPConfigurationProfilePropertiesFormatResponsePtrOutput {
	return o
}

func (o IPConfigurationProfilePropertiesFormatResponsePtrOutput) Elem() IPConfigurationProfilePropertiesFormatResponseOutput {
	return o.ApplyT(func(v *IPConfigurationProfilePropertiesFormatResponse) IPConfigurationProfilePropertiesFormatResponse {
		return *v
	}).(IPConfigurationProfilePropertiesFormatResponseOutput)
}

// The provisioning state of the resource.
func (o IPConfigurationProfilePropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationProfilePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference of the subnet resource to create a container network interface ip configuration.
func (o IPConfigurationProfilePropertiesFormatResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *IPConfigurationProfilePropertiesFormatResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

// IP configuration profile child resource.
type IPConfigurationProfileResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the IP configuration profile.
	Properties *IPConfigurationProfilePropertiesFormatResponse `pulumi:"properties"`
	// Sub Resource type.
	Type string `pulumi:"type"`
}

// IPConfigurationProfileResponseInput is an input type that accepts IPConfigurationProfileResponseArgs and IPConfigurationProfileResponseOutput values.
// You can construct a concrete instance of `IPConfigurationProfileResponseInput` via:
//
//          IPConfigurationProfileResponseArgs{...}
type IPConfigurationProfileResponseInput interface {
	pulumi.Input

	ToIPConfigurationProfileResponseOutput() IPConfigurationProfileResponseOutput
	ToIPConfigurationProfileResponseOutputWithContext(context.Context) IPConfigurationProfileResponseOutput
}

// IP configuration profile child resource.
type IPConfigurationProfileResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the IP configuration profile.
	Properties IPConfigurationProfilePropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Sub Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IPConfigurationProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationProfileResponse)(nil)).Elem()
}

func (i IPConfigurationProfileResponseArgs) ToIPConfigurationProfileResponseOutput() IPConfigurationProfileResponseOutput {
	return i.ToIPConfigurationProfileResponseOutputWithContext(context.Background())
}

func (i IPConfigurationProfileResponseArgs) ToIPConfigurationProfileResponseOutputWithContext(ctx context.Context) IPConfigurationProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationProfileResponseOutput)
}

// IPConfigurationProfileResponseArrayInput is an input type that accepts IPConfigurationProfileResponseArray and IPConfigurationProfileResponseArrayOutput values.
// You can construct a concrete instance of `IPConfigurationProfileResponseArrayInput` via:
//
//          IPConfigurationProfileResponseArray{ IPConfigurationProfileResponseArgs{...} }
type IPConfigurationProfileResponseArrayInput interface {
	pulumi.Input

	ToIPConfigurationProfileResponseArrayOutput() IPConfigurationProfileResponseArrayOutput
	ToIPConfigurationProfileResponseArrayOutputWithContext(context.Context) IPConfigurationProfileResponseArrayOutput
}

type IPConfigurationProfileResponseArray []IPConfigurationProfileResponseInput

func (IPConfigurationProfileResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationProfileResponse)(nil)).Elem()
}

func (i IPConfigurationProfileResponseArray) ToIPConfigurationProfileResponseArrayOutput() IPConfigurationProfileResponseArrayOutput {
	return i.ToIPConfigurationProfileResponseArrayOutputWithContext(context.Background())
}

func (i IPConfigurationProfileResponseArray) ToIPConfigurationProfileResponseArrayOutputWithContext(ctx context.Context) IPConfigurationProfileResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationProfileResponseArrayOutput)
}

// IP configuration profile child resource.
type IPConfigurationProfileResponseOutput struct{ *pulumi.OutputState }

func (IPConfigurationProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationProfileResponse)(nil)).Elem()
}

func (o IPConfigurationProfileResponseOutput) ToIPConfigurationProfileResponseOutput() IPConfigurationProfileResponseOutput {
	return o
}

func (o IPConfigurationProfileResponseOutput) ToIPConfigurationProfileResponseOutputWithContext(ctx context.Context) IPConfigurationProfileResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationProfileResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o IPConfigurationProfileResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o IPConfigurationProfileResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the IP configuration profile.
func (o IPConfigurationProfileResponseOutput) Properties() IPConfigurationProfilePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) *IPConfigurationProfilePropertiesFormatResponse {
		return v.Properties
	}).(IPConfigurationProfilePropertiesFormatResponsePtrOutput)
}

// Sub Resource type.
func (o IPConfigurationProfileResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) string { return v.Type }).(pulumi.StringOutput)
}

type IPConfigurationProfileResponseArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationProfileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationProfileResponse)(nil)).Elem()
}

func (o IPConfigurationProfileResponseArrayOutput) ToIPConfigurationProfileResponseArrayOutput() IPConfigurationProfileResponseArrayOutput {
	return o
}

func (o IPConfigurationProfileResponseArrayOutput) ToIPConfigurationProfileResponseArrayOutputWithContext(ctx context.Context) IPConfigurationProfileResponseArrayOutput {
	return o
}

func (o IPConfigurationProfileResponseArrayOutput) Index(i pulumi.IntInput) IPConfigurationProfileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigurationProfileResponse {
		return vs[0].([]IPConfigurationProfileResponse)[vs[1].(int)]
	}).(IPConfigurationProfileResponseOutput)
}

// Properties of IP configuration.
type IPConfigurationPropertiesFormat struct {
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the public IP resource.
	PublicIPAddress *PublicIPAddressType `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet *SubnetType `pulumi:"subnet"`
}

// IPConfigurationPropertiesFormatInput is an input type that accepts IPConfigurationPropertiesFormatArgs and IPConfigurationPropertiesFormatOutput values.
// You can construct a concrete instance of `IPConfigurationPropertiesFormatInput` via:
//
//          IPConfigurationPropertiesFormatArgs{...}
type IPConfigurationPropertiesFormatInput interface {
	pulumi.Input

	ToIPConfigurationPropertiesFormatOutput() IPConfigurationPropertiesFormatOutput
	ToIPConfigurationPropertiesFormatOutputWithContext(context.Context) IPConfigurationPropertiesFormatOutput
}

// Properties of IP configuration.
type IPConfigurationPropertiesFormatArgs struct {
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the public IP resource.
	PublicIPAddress PublicIPAddressTypePtrInput `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet SubnetTypePtrInput `pulumi:"subnet"`
}

func (IPConfigurationPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationPropertiesFormat)(nil)).Elem()
}

func (i IPConfigurationPropertiesFormatArgs) ToIPConfigurationPropertiesFormatOutput() IPConfigurationPropertiesFormatOutput {
	return i.ToIPConfigurationPropertiesFormatOutputWithContext(context.Background())
}

func (i IPConfigurationPropertiesFormatArgs) ToIPConfigurationPropertiesFormatOutputWithContext(ctx context.Context) IPConfigurationPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationPropertiesFormatOutput)
}

func (i IPConfigurationPropertiesFormatArgs) ToIPConfigurationPropertiesFormatPtrOutput() IPConfigurationPropertiesFormatPtrOutput {
	return i.ToIPConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i IPConfigurationPropertiesFormatArgs) ToIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) IPConfigurationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationPropertiesFormatOutput).ToIPConfigurationPropertiesFormatPtrOutputWithContext(ctx)
}

// IPConfigurationPropertiesFormatPtrInput is an input type that accepts IPConfigurationPropertiesFormatArgs, IPConfigurationPropertiesFormatPtr and IPConfigurationPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `IPConfigurationPropertiesFormatPtrInput` via:
//
//          IPConfigurationPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type IPConfigurationPropertiesFormatPtrInput interface {
	pulumi.Input

	ToIPConfigurationPropertiesFormatPtrOutput() IPConfigurationPropertiesFormatPtrOutput
	ToIPConfigurationPropertiesFormatPtrOutputWithContext(context.Context) IPConfigurationPropertiesFormatPtrOutput
}

type ipconfigurationPropertiesFormatPtrType IPConfigurationPropertiesFormatArgs

func IPConfigurationPropertiesFormatPtr(v *IPConfigurationPropertiesFormatArgs) IPConfigurationPropertiesFormatPtrInput {
	return (*ipconfigurationPropertiesFormatPtrType)(v)
}

func (*ipconfigurationPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationPropertiesFormat)(nil)).Elem()
}

func (i *ipconfigurationPropertiesFormatPtrType) ToIPConfigurationPropertiesFormatPtrOutput() IPConfigurationPropertiesFormatPtrOutput {
	return i.ToIPConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *ipconfigurationPropertiesFormatPtrType) ToIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) IPConfigurationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationPropertiesFormatPtrOutput)
}

// Properties of IP configuration.
type IPConfigurationPropertiesFormatOutput struct{ *pulumi.OutputState }

func (IPConfigurationPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationPropertiesFormat)(nil)).Elem()
}

func (o IPConfigurationPropertiesFormatOutput) ToIPConfigurationPropertiesFormatOutput() IPConfigurationPropertiesFormatOutput {
	return o
}

func (o IPConfigurationPropertiesFormatOutput) ToIPConfigurationPropertiesFormatOutputWithContext(ctx context.Context) IPConfigurationPropertiesFormatOutput {
	return o
}

func (o IPConfigurationPropertiesFormatOutput) ToIPConfigurationPropertiesFormatPtrOutput() IPConfigurationPropertiesFormatPtrOutput {
	return o.ToIPConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o IPConfigurationPropertiesFormatOutput) ToIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) IPConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v IPConfigurationPropertiesFormat) *IPConfigurationPropertiesFormat {
		return &v
	}).(IPConfigurationPropertiesFormatPtrOutput)
}

// The private IP address of the IP configuration.
func (o IPConfigurationPropertiesFormatOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationPropertiesFormat) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
func (o IPConfigurationPropertiesFormatOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationPropertiesFormat) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o IPConfigurationPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the public IP resource.
func (o IPConfigurationPropertiesFormatOutput) PublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v IPConfigurationPropertiesFormat) *PublicIPAddressType { return v.PublicIPAddress }).(PublicIPAddressTypePtrOutput)
}

// The reference of the subnet resource.
func (o IPConfigurationPropertiesFormatOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v IPConfigurationPropertiesFormat) *SubnetType { return v.Subnet }).(SubnetTypePtrOutput)
}

type IPConfigurationPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (IPConfigurationPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationPropertiesFormat)(nil)).Elem()
}

func (o IPConfigurationPropertiesFormatPtrOutput) ToIPConfigurationPropertiesFormatPtrOutput() IPConfigurationPropertiesFormatPtrOutput {
	return o
}

func (o IPConfigurationPropertiesFormatPtrOutput) ToIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) IPConfigurationPropertiesFormatPtrOutput {
	return o
}

func (o IPConfigurationPropertiesFormatPtrOutput) Elem() IPConfigurationPropertiesFormatOutput {
	return o.ApplyT(func(v *IPConfigurationPropertiesFormat) IPConfigurationPropertiesFormat { return *v }).(IPConfigurationPropertiesFormatOutput)
}

// The private IP address of the IP configuration.
func (o IPConfigurationPropertiesFormatPtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
func (o IPConfigurationPropertiesFormatPtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o IPConfigurationPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference of the public IP resource.
func (o IPConfigurationPropertiesFormatPtrOutput) PublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v *IPConfigurationPropertiesFormat) *PublicIPAddressType {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressTypePtrOutput)
}

// The reference of the subnet resource.
func (o IPConfigurationPropertiesFormatPtrOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v *IPConfigurationPropertiesFormat) *SubnetType {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetTypePtrOutput)
}

// Properties of IP configuration.
type IPConfigurationPropertiesFormatResponse struct {
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the public IP resource.
	PublicIPAddress *PublicIPAddressResponse `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet *SubnetResponse `pulumi:"subnet"`
}

// IPConfigurationPropertiesFormatResponseInput is an input type that accepts IPConfigurationPropertiesFormatResponseArgs and IPConfigurationPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `IPConfigurationPropertiesFormatResponseInput` via:
//
//          IPConfigurationPropertiesFormatResponseArgs{...}
type IPConfigurationPropertiesFormatResponseInput interface {
	pulumi.Input

	ToIPConfigurationPropertiesFormatResponseOutput() IPConfigurationPropertiesFormatResponseOutput
	ToIPConfigurationPropertiesFormatResponseOutputWithContext(context.Context) IPConfigurationPropertiesFormatResponseOutput
}

// Properties of IP configuration.
type IPConfigurationPropertiesFormatResponseArgs struct {
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the public IP resource.
	PublicIPAddress PublicIPAddressResponsePtrInput `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet SubnetResponsePtrInput `pulumi:"subnet"`
}

func (IPConfigurationPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (i IPConfigurationPropertiesFormatResponseArgs) ToIPConfigurationPropertiesFormatResponseOutput() IPConfigurationPropertiesFormatResponseOutput {
	return i.ToIPConfigurationPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i IPConfigurationPropertiesFormatResponseArgs) ToIPConfigurationPropertiesFormatResponseOutputWithContext(ctx context.Context) IPConfigurationPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationPropertiesFormatResponseOutput)
}

func (i IPConfigurationPropertiesFormatResponseArgs) ToIPConfigurationPropertiesFormatResponsePtrOutput() IPConfigurationPropertiesFormatResponsePtrOutput {
	return i.ToIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i IPConfigurationPropertiesFormatResponseArgs) ToIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) IPConfigurationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationPropertiesFormatResponseOutput).ToIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// IPConfigurationPropertiesFormatResponsePtrInput is an input type that accepts IPConfigurationPropertiesFormatResponseArgs, IPConfigurationPropertiesFormatResponsePtr and IPConfigurationPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `IPConfigurationPropertiesFormatResponsePtrInput` via:
//
//          IPConfigurationPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type IPConfigurationPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToIPConfigurationPropertiesFormatResponsePtrOutput() IPConfigurationPropertiesFormatResponsePtrOutput
	ToIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Context) IPConfigurationPropertiesFormatResponsePtrOutput
}

type ipconfigurationPropertiesFormatResponsePtrType IPConfigurationPropertiesFormatResponseArgs

func IPConfigurationPropertiesFormatResponsePtr(v *IPConfigurationPropertiesFormatResponseArgs) IPConfigurationPropertiesFormatResponsePtrInput {
	return (*ipconfigurationPropertiesFormatResponsePtrType)(v)
}

func (*ipconfigurationPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (i *ipconfigurationPropertiesFormatResponsePtrType) ToIPConfigurationPropertiesFormatResponsePtrOutput() IPConfigurationPropertiesFormatResponsePtrOutput {
	return i.ToIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *ipconfigurationPropertiesFormatResponsePtrType) ToIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) IPConfigurationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationPropertiesFormatResponsePtrOutput)
}

// Properties of IP configuration.
type IPConfigurationPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (IPConfigurationPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (o IPConfigurationPropertiesFormatResponseOutput) ToIPConfigurationPropertiesFormatResponseOutput() IPConfigurationPropertiesFormatResponseOutput {
	return o
}

func (o IPConfigurationPropertiesFormatResponseOutput) ToIPConfigurationPropertiesFormatResponseOutputWithContext(ctx context.Context) IPConfigurationPropertiesFormatResponseOutput {
	return o
}

func (o IPConfigurationPropertiesFormatResponseOutput) ToIPConfigurationPropertiesFormatResponsePtrOutput() IPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ToIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o IPConfigurationPropertiesFormatResponseOutput) ToIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) IPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationPropertiesFormatResponse) *IPConfigurationPropertiesFormatResponse {
		return &v
	}).(IPConfigurationPropertiesFormatResponsePtrOutput)
}

// The private IP address of the IP configuration.
func (o IPConfigurationPropertiesFormatResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationPropertiesFormatResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
func (o IPConfigurationPropertiesFormatResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationPropertiesFormatResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o IPConfigurationPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the public IP resource.
func (o IPConfigurationPropertiesFormatResponseOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationPropertiesFormatResponse) *PublicIPAddressResponse { return v.PublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// The reference of the subnet resource.
func (o IPConfigurationPropertiesFormatResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationPropertiesFormatResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

type IPConfigurationPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (IPConfigurationPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (o IPConfigurationPropertiesFormatResponsePtrOutput) ToIPConfigurationPropertiesFormatResponsePtrOutput() IPConfigurationPropertiesFormatResponsePtrOutput {
	return o
}

func (o IPConfigurationPropertiesFormatResponsePtrOutput) ToIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) IPConfigurationPropertiesFormatResponsePtrOutput {
	return o
}

func (o IPConfigurationPropertiesFormatResponsePtrOutput) Elem() IPConfigurationPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *IPConfigurationPropertiesFormatResponse) IPConfigurationPropertiesFormatResponse { return *v }).(IPConfigurationPropertiesFormatResponseOutput)
}

// The private IP address of the IP configuration.
func (o IPConfigurationPropertiesFormatResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
func (o IPConfigurationPropertiesFormatResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o IPConfigurationPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference of the public IP resource.
func (o IPConfigurationPropertiesFormatResponsePtrOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *IPConfigurationPropertiesFormatResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// The reference of the subnet resource.
func (o IPConfigurationPropertiesFormatResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *IPConfigurationPropertiesFormatResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

// IP configuration
type IPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the IP configuration
	Properties *IPConfigurationPropertiesFormatResponse `pulumi:"properties"`
}

// IPConfigurationResponseInput is an input type that accepts IPConfigurationResponseArgs and IPConfigurationResponseOutput values.
// You can construct a concrete instance of `IPConfigurationResponseInput` via:
//
//          IPConfigurationResponseArgs{...}
type IPConfigurationResponseInput interface {
	pulumi.Input

	ToIPConfigurationResponseOutput() IPConfigurationResponseOutput
	ToIPConfigurationResponseOutputWithContext(context.Context) IPConfigurationResponseOutput
}

// IP configuration
type IPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the IP configuration
	Properties IPConfigurationPropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (IPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationResponse)(nil)).Elem()
}

func (i IPConfigurationResponseArgs) ToIPConfigurationResponseOutput() IPConfigurationResponseOutput {
	return i.ToIPConfigurationResponseOutputWithContext(context.Background())
}

func (i IPConfigurationResponseArgs) ToIPConfigurationResponseOutputWithContext(ctx context.Context) IPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationResponseOutput)
}

func (i IPConfigurationResponseArgs) ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput {
	return i.ToIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i IPConfigurationResponseArgs) ToIPConfigurationResponsePtrOutputWithContext(ctx context.Context) IPConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationResponseOutput).ToIPConfigurationResponsePtrOutputWithContext(ctx)
}

// IPConfigurationResponsePtrInput is an input type that accepts IPConfigurationResponseArgs, IPConfigurationResponsePtr and IPConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `IPConfigurationResponsePtrInput` via:
//
//          IPConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type IPConfigurationResponsePtrInput interface {
	pulumi.Input

	ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput
	ToIPConfigurationResponsePtrOutputWithContext(context.Context) IPConfigurationResponsePtrOutput
}

type ipconfigurationResponsePtrType IPConfigurationResponseArgs

func IPConfigurationResponsePtr(v *IPConfigurationResponseArgs) IPConfigurationResponsePtrInput {
	return (*ipconfigurationResponsePtrType)(v)
}

func (*ipconfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationResponse)(nil)).Elem()
}

func (i *ipconfigurationResponsePtrType) ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput {
	return i.ToIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *ipconfigurationResponsePtrType) ToIPConfigurationResponsePtrOutputWithContext(ctx context.Context) IPConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationResponsePtrOutput)
}

// IPConfigurationResponseArrayInput is an input type that accepts IPConfigurationResponseArray and IPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `IPConfigurationResponseArrayInput` via:
//
//          IPConfigurationResponseArray{ IPConfigurationResponseArgs{...} }
type IPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToIPConfigurationResponseArrayOutput() IPConfigurationResponseArrayOutput
	ToIPConfigurationResponseArrayOutputWithContext(context.Context) IPConfigurationResponseArrayOutput
}

type IPConfigurationResponseArray []IPConfigurationResponseInput

func (IPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationResponse)(nil)).Elem()
}

func (i IPConfigurationResponseArray) ToIPConfigurationResponseArrayOutput() IPConfigurationResponseArrayOutput {
	return i.ToIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i IPConfigurationResponseArray) ToIPConfigurationResponseArrayOutputWithContext(ctx context.Context) IPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationResponseArrayOutput)
}

// IP configuration
type IPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponseOutput() IPConfigurationResponseOutput {
	return o
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponseOutputWithContext(ctx context.Context) IPConfigurationResponseOutput {
	return o
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput {
	return o.ToIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponsePtrOutputWithContext(ctx context.Context) IPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *IPConfigurationResponse {
		return &v
	}).(IPConfigurationResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o IPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o IPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the IP configuration
func (o IPConfigurationResponseOutput) Properties() IPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *IPConfigurationPropertiesFormatResponse { return v.Properties }).(IPConfigurationPropertiesFormatResponsePtrOutput)
}

type IPConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponsePtrOutput) ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput {
	return o
}

func (o IPConfigurationResponsePtrOutput) ToIPConfigurationResponsePtrOutputWithContext(ctx context.Context) IPConfigurationResponsePtrOutput {
	return o
}

func (o IPConfigurationResponsePtrOutput) Elem() IPConfigurationResponseOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) IPConfigurationResponse { return *v }).(IPConfigurationResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o IPConfigurationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o IPConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Properties of the IP configuration
func (o IPConfigurationResponsePtrOutput) Properties() IPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *IPConfigurationPropertiesFormatResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(IPConfigurationPropertiesFormatResponsePtrOutput)
}

type IPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponseArrayOutput) ToIPConfigurationResponseArrayOutput() IPConfigurationResponseArrayOutput {
	return o
}

func (o IPConfigurationResponseArrayOutput) ToIPConfigurationResponseArrayOutputWithContext(ctx context.Context) IPConfigurationResponseArrayOutput {
	return o
}

func (o IPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) IPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigurationResponse {
		return vs[0].([]IPConfigurationResponse)[vs[1].(int)]
	}).(IPConfigurationResponseOutput)
}

// Inbound NAT pool of the load balancer.
type InboundNatPool struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of load balancer inbound nat pool.
	Properties *InboundNatPoolPropertiesFormat `pulumi:"properties"`
}

// InboundNatPoolInput is an input type that accepts InboundNatPoolArgs and InboundNatPoolOutput values.
// You can construct a concrete instance of `InboundNatPoolInput` via:
//
//          InboundNatPoolArgs{...}
type InboundNatPoolInput interface {
	pulumi.Input

	ToInboundNatPoolOutput() InboundNatPoolOutput
	ToInboundNatPoolOutputWithContext(context.Context) InboundNatPoolOutput
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of load balancer inbound nat pool.
	Properties InboundNatPoolPropertiesFormatPtrInput `pulumi:"properties"`
}

func (InboundNatPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPool)(nil)).Elem()
}

func (i InboundNatPoolArgs) ToInboundNatPoolOutput() InboundNatPoolOutput {
	return i.ToInboundNatPoolOutputWithContext(context.Background())
}

func (i InboundNatPoolArgs) ToInboundNatPoolOutputWithContext(ctx context.Context) InboundNatPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolOutput)
}

// InboundNatPoolArrayInput is an input type that accepts InboundNatPoolArray and InboundNatPoolArrayOutput values.
// You can construct a concrete instance of `InboundNatPoolArrayInput` via:
//
//          InboundNatPoolArray{ InboundNatPoolArgs{...} }
type InboundNatPoolArrayInput interface {
	pulumi.Input

	ToInboundNatPoolArrayOutput() InboundNatPoolArrayOutput
	ToInboundNatPoolArrayOutputWithContext(context.Context) InboundNatPoolArrayOutput
}

type InboundNatPoolArray []InboundNatPoolInput

func (InboundNatPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatPool)(nil)).Elem()
}

func (i InboundNatPoolArray) ToInboundNatPoolArrayOutput() InboundNatPoolArrayOutput {
	return i.ToInboundNatPoolArrayOutputWithContext(context.Background())
}

func (i InboundNatPoolArray) ToInboundNatPoolArrayOutputWithContext(ctx context.Context) InboundNatPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolArrayOutput)
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolOutput struct{ *pulumi.OutputState }

func (InboundNatPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPool)(nil)).Elem()
}

func (o InboundNatPoolOutput) ToInboundNatPoolOutput() InboundNatPoolOutput {
	return o
}

func (o InboundNatPoolOutput) ToInboundNatPoolOutputWithContext(ctx context.Context) InboundNatPoolOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o InboundNatPoolOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o InboundNatPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o InboundNatPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of load balancer inbound nat pool.
func (o InboundNatPoolOutput) Properties() InboundNatPoolPropertiesFormatPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *InboundNatPoolPropertiesFormat { return v.Properties }).(InboundNatPoolPropertiesFormatPtrOutput)
}

type InboundNatPoolArrayOutput struct{ *pulumi.OutputState }

func (InboundNatPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatPool)(nil)).Elem()
}

func (o InboundNatPoolArrayOutput) ToInboundNatPoolArrayOutput() InboundNatPoolArrayOutput {
	return o
}

func (o InboundNatPoolArrayOutput) ToInboundNatPoolArrayOutputWithContext(ctx context.Context) InboundNatPoolArrayOutput {
	return o
}

func (o InboundNatPoolArrayOutput) Index(i pulumi.IntInput) InboundNatPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatPool {
		return vs[0].([]InboundNatPool)[vs[1].(int)]
	}).(InboundNatPoolOutput)
}

// Properties of Inbound NAT pool.
type InboundNatPoolPropertiesFormat struct {
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResource `pulumi:"frontendIPConfiguration"`
	// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd int `pulumi:"frontendPortRangeEnd"`
	// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart int `pulumi:"frontendPortRangeStart"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// InboundNatPoolPropertiesFormatInput is an input type that accepts InboundNatPoolPropertiesFormatArgs and InboundNatPoolPropertiesFormatOutput values.
// You can construct a concrete instance of `InboundNatPoolPropertiesFormatInput` via:
//
//          InboundNatPoolPropertiesFormatArgs{...}
type InboundNatPoolPropertiesFormatInput interface {
	pulumi.Input

	ToInboundNatPoolPropertiesFormatOutput() InboundNatPoolPropertiesFormatOutput
	ToInboundNatPoolPropertiesFormatOutputWithContext(context.Context) InboundNatPoolPropertiesFormatOutput
}

// Properties of Inbound NAT pool.
type InboundNatPoolPropertiesFormatArgs struct {
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort pulumi.IntInput `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolPtrInput `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourcePtrInput `pulumi:"frontendIPConfiguration"`
	// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd pulumi.IntInput `pulumi:"frontendPortRangeEnd"`
	// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart pulumi.IntInput `pulumi:"frontendPortRangeStart"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (InboundNatPoolPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPoolPropertiesFormat)(nil)).Elem()
}

func (i InboundNatPoolPropertiesFormatArgs) ToInboundNatPoolPropertiesFormatOutput() InboundNatPoolPropertiesFormatOutput {
	return i.ToInboundNatPoolPropertiesFormatOutputWithContext(context.Background())
}

func (i InboundNatPoolPropertiesFormatArgs) ToInboundNatPoolPropertiesFormatOutputWithContext(ctx context.Context) InboundNatPoolPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolPropertiesFormatOutput)
}

func (i InboundNatPoolPropertiesFormatArgs) ToInboundNatPoolPropertiesFormatPtrOutput() InboundNatPoolPropertiesFormatPtrOutput {
	return i.ToInboundNatPoolPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i InboundNatPoolPropertiesFormatArgs) ToInboundNatPoolPropertiesFormatPtrOutputWithContext(ctx context.Context) InboundNatPoolPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolPropertiesFormatOutput).ToInboundNatPoolPropertiesFormatPtrOutputWithContext(ctx)
}

// InboundNatPoolPropertiesFormatPtrInput is an input type that accepts InboundNatPoolPropertiesFormatArgs, InboundNatPoolPropertiesFormatPtr and InboundNatPoolPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `InboundNatPoolPropertiesFormatPtrInput` via:
//
//          InboundNatPoolPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type InboundNatPoolPropertiesFormatPtrInput interface {
	pulumi.Input

	ToInboundNatPoolPropertiesFormatPtrOutput() InboundNatPoolPropertiesFormatPtrOutput
	ToInboundNatPoolPropertiesFormatPtrOutputWithContext(context.Context) InboundNatPoolPropertiesFormatPtrOutput
}

type inboundNatPoolPropertiesFormatPtrType InboundNatPoolPropertiesFormatArgs

func InboundNatPoolPropertiesFormatPtr(v *InboundNatPoolPropertiesFormatArgs) InboundNatPoolPropertiesFormatPtrInput {
	return (*inboundNatPoolPropertiesFormatPtrType)(v)
}

func (*inboundNatPoolPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InboundNatPoolPropertiesFormat)(nil)).Elem()
}

func (i *inboundNatPoolPropertiesFormatPtrType) ToInboundNatPoolPropertiesFormatPtrOutput() InboundNatPoolPropertiesFormatPtrOutput {
	return i.ToInboundNatPoolPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *inboundNatPoolPropertiesFormatPtrType) ToInboundNatPoolPropertiesFormatPtrOutputWithContext(ctx context.Context) InboundNatPoolPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolPropertiesFormatPtrOutput)
}

// Properties of Inbound NAT pool.
type InboundNatPoolPropertiesFormatOutput struct{ *pulumi.OutputState }

func (InboundNatPoolPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPoolPropertiesFormat)(nil)).Elem()
}

func (o InboundNatPoolPropertiesFormatOutput) ToInboundNatPoolPropertiesFormatOutput() InboundNatPoolPropertiesFormatOutput {
	return o
}

func (o InboundNatPoolPropertiesFormatOutput) ToInboundNatPoolPropertiesFormatOutputWithContext(ctx context.Context) InboundNatPoolPropertiesFormatOutput {
	return o
}

func (o InboundNatPoolPropertiesFormatOutput) ToInboundNatPoolPropertiesFormatPtrOutput() InboundNatPoolPropertiesFormatPtrOutput {
	return o.ToInboundNatPoolPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o InboundNatPoolPropertiesFormatOutput) ToInboundNatPoolPropertiesFormatPtrOutputWithContext(ctx context.Context) InboundNatPoolPropertiesFormatPtrOutput {
	return o.ApplyT(func(v InboundNatPoolPropertiesFormat) *InboundNatPoolPropertiesFormat {
		return &v
	}).(InboundNatPoolPropertiesFormatPtrOutput)
}

// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
func (o InboundNatPoolPropertiesFormatOutput) BackendPort() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPoolPropertiesFormat) int { return v.BackendPort }).(pulumi.IntOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatPoolPropertiesFormatOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatPoolPropertiesFormat) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o InboundNatPoolPropertiesFormatOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatPoolPropertiesFormat) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatPoolPropertiesFormatOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v InboundNatPoolPropertiesFormat) *SubResource { return v.FrontendIPConfiguration }).(SubResourcePtrOutput)
}

// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
func (o InboundNatPoolPropertiesFormatOutput) FrontendPortRangeEnd() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPoolPropertiesFormat) int { return v.FrontendPortRangeEnd }).(pulumi.IntOutput)
}

// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
func (o InboundNatPoolPropertiesFormatOutput) FrontendPortRangeStart() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPoolPropertiesFormat) int { return v.FrontendPortRangeStart }).(pulumi.IntOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatPoolPropertiesFormatOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatPoolPropertiesFormat) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
func (o InboundNatPoolPropertiesFormatOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatPoolPropertiesFormat) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InboundNatPoolPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPoolPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type InboundNatPoolPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (InboundNatPoolPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InboundNatPoolPropertiesFormat)(nil)).Elem()
}

func (o InboundNatPoolPropertiesFormatPtrOutput) ToInboundNatPoolPropertiesFormatPtrOutput() InboundNatPoolPropertiesFormatPtrOutput {
	return o
}

func (o InboundNatPoolPropertiesFormatPtrOutput) ToInboundNatPoolPropertiesFormatPtrOutputWithContext(ctx context.Context) InboundNatPoolPropertiesFormatPtrOutput {
	return o
}

func (o InboundNatPoolPropertiesFormatPtrOutput) Elem() InboundNatPoolPropertiesFormatOutput {
	return o.ApplyT(func(v *InboundNatPoolPropertiesFormat) InboundNatPoolPropertiesFormat { return *v }).(InboundNatPoolPropertiesFormatOutput)
}

// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
func (o InboundNatPoolPropertiesFormatPtrOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InboundNatPoolPropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return &v.BackendPort
	}).(pulumi.IntPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatPoolPropertiesFormatPtrOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InboundNatPoolPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.EnableFloatingIP
	}).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o InboundNatPoolPropertiesFormatPtrOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InboundNatPoolPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.EnableTcpReset
	}).(pulumi.BoolPtrOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatPoolPropertiesFormatPtrOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v *InboundNatPoolPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.FrontendIPConfiguration
	}).(SubResourcePtrOutput)
}

// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
func (o InboundNatPoolPropertiesFormatPtrOutput) FrontendPortRangeEnd() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InboundNatPoolPropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return &v.FrontendPortRangeEnd
	}).(pulumi.IntPtrOutput)
}

// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
func (o InboundNatPoolPropertiesFormatPtrOutput) FrontendPortRangeStart() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InboundNatPoolPropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return &v.FrontendPortRangeStart
	}).(pulumi.IntPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatPoolPropertiesFormatPtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InboundNatPoolPropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
func (o InboundNatPoolPropertiesFormatPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InboundNatPoolPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InboundNatPoolPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InboundNatPoolPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Properties of Inbound NAT pool.
type InboundNatPoolPropertiesFormatResponse struct {
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd int `pulumi:"frontendPortRangeEnd"`
	// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart int `pulumi:"frontendPortRangeStart"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// InboundNatPoolPropertiesFormatResponseInput is an input type that accepts InboundNatPoolPropertiesFormatResponseArgs and InboundNatPoolPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `InboundNatPoolPropertiesFormatResponseInput` via:
//
//          InboundNatPoolPropertiesFormatResponseArgs{...}
type InboundNatPoolPropertiesFormatResponseInput interface {
	pulumi.Input

	ToInboundNatPoolPropertiesFormatResponseOutput() InboundNatPoolPropertiesFormatResponseOutput
	ToInboundNatPoolPropertiesFormatResponseOutputWithContext(context.Context) InboundNatPoolPropertiesFormatResponseOutput
}

// Properties of Inbound NAT pool.
type InboundNatPoolPropertiesFormatResponseArgs struct {
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort pulumi.IntInput `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolPtrInput `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourceResponsePtrInput `pulumi:"frontendIPConfiguration"`
	// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd pulumi.IntInput `pulumi:"frontendPortRangeEnd"`
	// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart pulumi.IntInput `pulumi:"frontendPortRangeStart"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (InboundNatPoolPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPoolPropertiesFormatResponse)(nil)).Elem()
}

func (i InboundNatPoolPropertiesFormatResponseArgs) ToInboundNatPoolPropertiesFormatResponseOutput() InboundNatPoolPropertiesFormatResponseOutput {
	return i.ToInboundNatPoolPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i InboundNatPoolPropertiesFormatResponseArgs) ToInboundNatPoolPropertiesFormatResponseOutputWithContext(ctx context.Context) InboundNatPoolPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolPropertiesFormatResponseOutput)
}

func (i InboundNatPoolPropertiesFormatResponseArgs) ToInboundNatPoolPropertiesFormatResponsePtrOutput() InboundNatPoolPropertiesFormatResponsePtrOutput {
	return i.ToInboundNatPoolPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i InboundNatPoolPropertiesFormatResponseArgs) ToInboundNatPoolPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) InboundNatPoolPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolPropertiesFormatResponseOutput).ToInboundNatPoolPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// InboundNatPoolPropertiesFormatResponsePtrInput is an input type that accepts InboundNatPoolPropertiesFormatResponseArgs, InboundNatPoolPropertiesFormatResponsePtr and InboundNatPoolPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `InboundNatPoolPropertiesFormatResponsePtrInput` via:
//
//          InboundNatPoolPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type InboundNatPoolPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToInboundNatPoolPropertiesFormatResponsePtrOutput() InboundNatPoolPropertiesFormatResponsePtrOutput
	ToInboundNatPoolPropertiesFormatResponsePtrOutputWithContext(context.Context) InboundNatPoolPropertiesFormatResponsePtrOutput
}

type inboundNatPoolPropertiesFormatResponsePtrType InboundNatPoolPropertiesFormatResponseArgs

func InboundNatPoolPropertiesFormatResponsePtr(v *InboundNatPoolPropertiesFormatResponseArgs) InboundNatPoolPropertiesFormatResponsePtrInput {
	return (*inboundNatPoolPropertiesFormatResponsePtrType)(v)
}

func (*inboundNatPoolPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InboundNatPoolPropertiesFormatResponse)(nil)).Elem()
}

func (i *inboundNatPoolPropertiesFormatResponsePtrType) ToInboundNatPoolPropertiesFormatResponsePtrOutput() InboundNatPoolPropertiesFormatResponsePtrOutput {
	return i.ToInboundNatPoolPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *inboundNatPoolPropertiesFormatResponsePtrType) ToInboundNatPoolPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) InboundNatPoolPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolPropertiesFormatResponsePtrOutput)
}

// Properties of Inbound NAT pool.
type InboundNatPoolPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (InboundNatPoolPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPoolPropertiesFormatResponse)(nil)).Elem()
}

func (o InboundNatPoolPropertiesFormatResponseOutput) ToInboundNatPoolPropertiesFormatResponseOutput() InboundNatPoolPropertiesFormatResponseOutput {
	return o
}

func (o InboundNatPoolPropertiesFormatResponseOutput) ToInboundNatPoolPropertiesFormatResponseOutputWithContext(ctx context.Context) InboundNatPoolPropertiesFormatResponseOutput {
	return o
}

func (o InboundNatPoolPropertiesFormatResponseOutput) ToInboundNatPoolPropertiesFormatResponsePtrOutput() InboundNatPoolPropertiesFormatResponsePtrOutput {
	return o.ToInboundNatPoolPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o InboundNatPoolPropertiesFormatResponseOutput) ToInboundNatPoolPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) InboundNatPoolPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v InboundNatPoolPropertiesFormatResponse) *InboundNatPoolPropertiesFormatResponse {
		return &v
	}).(InboundNatPoolPropertiesFormatResponsePtrOutput)
}

// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
func (o InboundNatPoolPropertiesFormatResponseOutput) BackendPort() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPoolPropertiesFormatResponse) int { return v.BackendPort }).(pulumi.IntOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatPoolPropertiesFormatResponseOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatPoolPropertiesFormatResponse) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o InboundNatPoolPropertiesFormatResponseOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatPoolPropertiesFormatResponse) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatPoolPropertiesFormatResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v InboundNatPoolPropertiesFormatResponse) *SubResourceResponse { return v.FrontendIPConfiguration }).(SubResourceResponsePtrOutput)
}

// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
func (o InboundNatPoolPropertiesFormatResponseOutput) FrontendPortRangeEnd() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPoolPropertiesFormatResponse) int { return v.FrontendPortRangeEnd }).(pulumi.IntOutput)
}

// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
func (o InboundNatPoolPropertiesFormatResponseOutput) FrontendPortRangeStart() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPoolPropertiesFormatResponse) int { return v.FrontendPortRangeStart }).(pulumi.IntOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatPoolPropertiesFormatResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatPoolPropertiesFormatResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
func (o InboundNatPoolPropertiesFormatResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatPoolPropertiesFormatResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InboundNatPoolPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPoolPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type InboundNatPoolPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (InboundNatPoolPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InboundNatPoolPropertiesFormatResponse)(nil)).Elem()
}

func (o InboundNatPoolPropertiesFormatResponsePtrOutput) ToInboundNatPoolPropertiesFormatResponsePtrOutput() InboundNatPoolPropertiesFormatResponsePtrOutput {
	return o
}

func (o InboundNatPoolPropertiesFormatResponsePtrOutput) ToInboundNatPoolPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) InboundNatPoolPropertiesFormatResponsePtrOutput {
	return o
}

func (o InboundNatPoolPropertiesFormatResponsePtrOutput) Elem() InboundNatPoolPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *InboundNatPoolPropertiesFormatResponse) InboundNatPoolPropertiesFormatResponse { return *v }).(InboundNatPoolPropertiesFormatResponseOutput)
}

// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
func (o InboundNatPoolPropertiesFormatResponsePtrOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InboundNatPoolPropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return &v.BackendPort
	}).(pulumi.IntPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatPoolPropertiesFormatResponsePtrOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InboundNatPoolPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableFloatingIP
	}).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o InboundNatPoolPropertiesFormatResponsePtrOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InboundNatPoolPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableTcpReset
	}).(pulumi.BoolPtrOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatPoolPropertiesFormatResponsePtrOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *InboundNatPoolPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.FrontendIPConfiguration
	}).(SubResourceResponsePtrOutput)
}

// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
func (o InboundNatPoolPropertiesFormatResponsePtrOutput) FrontendPortRangeEnd() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InboundNatPoolPropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return &v.FrontendPortRangeEnd
	}).(pulumi.IntPtrOutput)
}

// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
func (o InboundNatPoolPropertiesFormatResponsePtrOutput) FrontendPortRangeStart() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InboundNatPoolPropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return &v.FrontendPortRangeStart
	}).(pulumi.IntPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatPoolPropertiesFormatResponsePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InboundNatPoolPropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
func (o InboundNatPoolPropertiesFormatResponsePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InboundNatPoolPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InboundNatPoolPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InboundNatPoolPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of load balancer inbound nat pool.
	Properties *InboundNatPoolPropertiesFormatResponse `pulumi:"properties"`
}

// InboundNatPoolResponseInput is an input type that accepts InboundNatPoolResponseArgs and InboundNatPoolResponseOutput values.
// You can construct a concrete instance of `InboundNatPoolResponseInput` via:
//
//          InboundNatPoolResponseArgs{...}
type InboundNatPoolResponseInput interface {
	pulumi.Input

	ToInboundNatPoolResponseOutput() InboundNatPoolResponseOutput
	ToInboundNatPoolResponseOutputWithContext(context.Context) InboundNatPoolResponseOutput
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of load balancer inbound nat pool.
	Properties InboundNatPoolPropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (InboundNatPoolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPoolResponse)(nil)).Elem()
}

func (i InboundNatPoolResponseArgs) ToInboundNatPoolResponseOutput() InboundNatPoolResponseOutput {
	return i.ToInboundNatPoolResponseOutputWithContext(context.Background())
}

func (i InboundNatPoolResponseArgs) ToInboundNatPoolResponseOutputWithContext(ctx context.Context) InboundNatPoolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolResponseOutput)
}

// InboundNatPoolResponseArrayInput is an input type that accepts InboundNatPoolResponseArray and InboundNatPoolResponseArrayOutput values.
// You can construct a concrete instance of `InboundNatPoolResponseArrayInput` via:
//
//          InboundNatPoolResponseArray{ InboundNatPoolResponseArgs{...} }
type InboundNatPoolResponseArrayInput interface {
	pulumi.Input

	ToInboundNatPoolResponseArrayOutput() InboundNatPoolResponseArrayOutput
	ToInboundNatPoolResponseArrayOutputWithContext(context.Context) InboundNatPoolResponseArrayOutput
}

type InboundNatPoolResponseArray []InboundNatPoolResponseInput

func (InboundNatPoolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatPoolResponse)(nil)).Elem()
}

func (i InboundNatPoolResponseArray) ToInboundNatPoolResponseArrayOutput() InboundNatPoolResponseArrayOutput {
	return i.ToInboundNatPoolResponseArrayOutputWithContext(context.Background())
}

func (i InboundNatPoolResponseArray) ToInboundNatPoolResponseArrayOutputWithContext(ctx context.Context) InboundNatPoolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolResponseArrayOutput)
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolResponseOutput struct{ *pulumi.OutputState }

func (InboundNatPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPoolResponse)(nil)).Elem()
}

func (o InboundNatPoolResponseOutput) ToInboundNatPoolResponseOutput() InboundNatPoolResponseOutput {
	return o
}

func (o InboundNatPoolResponseOutput) ToInboundNatPoolResponseOutputWithContext(ctx context.Context) InboundNatPoolResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o InboundNatPoolResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o InboundNatPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o InboundNatPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of load balancer inbound nat pool.
func (o InboundNatPoolResponseOutput) Properties() InboundNatPoolPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *InboundNatPoolPropertiesFormatResponse { return v.Properties }).(InboundNatPoolPropertiesFormatResponsePtrOutput)
}

type InboundNatPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (InboundNatPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatPoolResponse)(nil)).Elem()
}

func (o InboundNatPoolResponseArrayOutput) ToInboundNatPoolResponseArrayOutput() InboundNatPoolResponseArrayOutput {
	return o
}

func (o InboundNatPoolResponseArrayOutput) ToInboundNatPoolResponseArrayOutputWithContext(ctx context.Context) InboundNatPoolResponseArrayOutput {
	return o
}

func (o InboundNatPoolResponseArrayOutput) Index(i pulumi.IntInput) InboundNatPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatPoolResponse {
		return vs[0].([]InboundNatPoolResponse)[vs[1].(int)]
	}).(InboundNatPoolResponseOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of load balancer inbound nat rule.
	Properties *InboundNatRulePropertiesFormat `pulumi:"properties"`
}

// InboundNatRuleTypeInput is an input type that accepts InboundNatRuleTypeArgs and InboundNatRuleTypeOutput values.
// You can construct a concrete instance of `InboundNatRuleTypeInput` via:
//
//          InboundNatRuleTypeArgs{...}
type InboundNatRuleTypeInput interface {
	pulumi.Input

	ToInboundNatRuleTypeOutput() InboundNatRuleTypeOutput
	ToInboundNatRuleTypeOutputWithContext(context.Context) InboundNatRuleTypeOutput
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of load balancer inbound nat rule.
	Properties InboundNatRulePropertiesFormatPtrInput `pulumi:"properties"`
}

func (InboundNatRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleType)(nil)).Elem()
}

func (i InboundNatRuleTypeArgs) ToInboundNatRuleTypeOutput() InboundNatRuleTypeOutput {
	return i.ToInboundNatRuleTypeOutputWithContext(context.Background())
}

func (i InboundNatRuleTypeArgs) ToInboundNatRuleTypeOutputWithContext(ctx context.Context) InboundNatRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleTypeOutput)
}

// InboundNatRuleTypeArrayInput is an input type that accepts InboundNatRuleTypeArray and InboundNatRuleTypeArrayOutput values.
// You can construct a concrete instance of `InboundNatRuleTypeArrayInput` via:
//
//          InboundNatRuleTypeArray{ InboundNatRuleTypeArgs{...} }
type InboundNatRuleTypeArrayInput interface {
	pulumi.Input

	ToInboundNatRuleTypeArrayOutput() InboundNatRuleTypeArrayOutput
	ToInboundNatRuleTypeArrayOutputWithContext(context.Context) InboundNatRuleTypeArrayOutput
}

type InboundNatRuleTypeArray []InboundNatRuleTypeInput

func (InboundNatRuleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleType)(nil)).Elem()
}

func (i InboundNatRuleTypeArray) ToInboundNatRuleTypeArrayOutput() InboundNatRuleTypeArrayOutput {
	return i.ToInboundNatRuleTypeArrayOutputWithContext(context.Background())
}

func (i InboundNatRuleTypeArray) ToInboundNatRuleTypeArrayOutputWithContext(ctx context.Context) InboundNatRuleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleTypeArrayOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleTypeOutput struct{ *pulumi.OutputState }

func (InboundNatRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleType)(nil)).Elem()
}

func (o InboundNatRuleTypeOutput) ToInboundNatRuleTypeOutput() InboundNatRuleTypeOutput {
	return o
}

func (o InboundNatRuleTypeOutput) ToInboundNatRuleTypeOutputWithContext(ctx context.Context) InboundNatRuleTypeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o InboundNatRuleTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o InboundNatRuleTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o InboundNatRuleTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of load balancer inbound nat rule.
func (o InboundNatRuleTypeOutput) Properties() InboundNatRulePropertiesFormatPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *InboundNatRulePropertiesFormat { return v.Properties }).(InboundNatRulePropertiesFormatPtrOutput)
}

type InboundNatRuleTypeArrayOutput struct{ *pulumi.OutputState }

func (InboundNatRuleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleType)(nil)).Elem()
}

func (o InboundNatRuleTypeArrayOutput) ToInboundNatRuleTypeArrayOutput() InboundNatRuleTypeArrayOutput {
	return o
}

func (o InboundNatRuleTypeArrayOutput) ToInboundNatRuleTypeArrayOutputWithContext(ctx context.Context) InboundNatRuleTypeArrayOutput {
	return o
}

func (o InboundNatRuleTypeArrayOutput) Index(i pulumi.IntInput) InboundNatRuleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatRuleType {
		return vs[0].([]InboundNatRuleType)[vs[1].(int)]
	}).(InboundNatRuleTypeOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleDefinition struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of load balancer inbound nat rule.
	Properties *InboundNatRulePropertiesFormat `pulumi:"properties"`
}

// InboundNatRuleDefinitionInput is an input type that accepts InboundNatRuleDefinitionArgs and InboundNatRuleDefinitionOutput values.
// You can construct a concrete instance of `InboundNatRuleDefinitionInput` via:
//
//          InboundNatRuleDefinitionArgs{...}
type InboundNatRuleDefinitionInput interface {
	pulumi.Input

	ToInboundNatRuleDefinitionOutput() InboundNatRuleDefinitionOutput
	ToInboundNatRuleDefinitionOutputWithContext(context.Context) InboundNatRuleDefinitionOutput
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleDefinitionArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of load balancer inbound nat rule.
	Properties InboundNatRulePropertiesFormatPtrInput `pulumi:"properties"`
}

func (InboundNatRuleDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleDefinition)(nil)).Elem()
}

func (i InboundNatRuleDefinitionArgs) ToInboundNatRuleDefinitionOutput() InboundNatRuleDefinitionOutput {
	return i.ToInboundNatRuleDefinitionOutputWithContext(context.Background())
}

func (i InboundNatRuleDefinitionArgs) ToInboundNatRuleDefinitionOutputWithContext(ctx context.Context) InboundNatRuleDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleDefinitionOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleDefinitionOutput struct{ *pulumi.OutputState }

func (InboundNatRuleDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleDefinition)(nil)).Elem()
}

func (o InboundNatRuleDefinitionOutput) ToInboundNatRuleDefinitionOutput() InboundNatRuleDefinitionOutput {
	return o
}

func (o InboundNatRuleDefinitionOutput) ToInboundNatRuleDefinitionOutputWithContext(ctx context.Context) InboundNatRuleDefinitionOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o InboundNatRuleDefinitionOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleDefinition) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o InboundNatRuleDefinitionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleDefinition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o InboundNatRuleDefinitionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleDefinition) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of load balancer inbound nat rule.
func (o InboundNatRuleDefinitionOutput) Properties() InboundNatRulePropertiesFormatPtrOutput {
	return o.ApplyT(func(v InboundNatRuleDefinition) *InboundNatRulePropertiesFormat { return v.Properties }).(InboundNatRulePropertiesFormatPtrOutput)
}

// Properties of the inbound NAT rule.
type InboundNatRulePropertiesFormat struct {
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort *int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResource `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort *int `pulumi:"frontendPort"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol *string `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// InboundNatRulePropertiesFormatInput is an input type that accepts InboundNatRulePropertiesFormatArgs and InboundNatRulePropertiesFormatOutput values.
// You can construct a concrete instance of `InboundNatRulePropertiesFormatInput` via:
//
//          InboundNatRulePropertiesFormatArgs{...}
type InboundNatRulePropertiesFormatInput interface {
	pulumi.Input

	ToInboundNatRulePropertiesFormatOutput() InboundNatRulePropertiesFormatOutput
	ToInboundNatRulePropertiesFormatOutputWithContext(context.Context) InboundNatRulePropertiesFormatOutput
}

// Properties of the inbound NAT rule.
type InboundNatRulePropertiesFormatArgs struct {
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolPtrInput `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourcePtrInput `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort pulumi.IntPtrInput `pulumi:"frontendPort"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (InboundNatRulePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRulePropertiesFormat)(nil)).Elem()
}

func (i InboundNatRulePropertiesFormatArgs) ToInboundNatRulePropertiesFormatOutput() InboundNatRulePropertiesFormatOutput {
	return i.ToInboundNatRulePropertiesFormatOutputWithContext(context.Background())
}

func (i InboundNatRulePropertiesFormatArgs) ToInboundNatRulePropertiesFormatOutputWithContext(ctx context.Context) InboundNatRulePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRulePropertiesFormatOutput)
}

func (i InboundNatRulePropertiesFormatArgs) ToInboundNatRulePropertiesFormatPtrOutput() InboundNatRulePropertiesFormatPtrOutput {
	return i.ToInboundNatRulePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i InboundNatRulePropertiesFormatArgs) ToInboundNatRulePropertiesFormatPtrOutputWithContext(ctx context.Context) InboundNatRulePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRulePropertiesFormatOutput).ToInboundNatRulePropertiesFormatPtrOutputWithContext(ctx)
}

// InboundNatRulePropertiesFormatPtrInput is an input type that accepts InboundNatRulePropertiesFormatArgs, InboundNatRulePropertiesFormatPtr and InboundNatRulePropertiesFormatPtrOutput values.
// You can construct a concrete instance of `InboundNatRulePropertiesFormatPtrInput` via:
//
//          InboundNatRulePropertiesFormatArgs{...}
//
//  or:
//
//          nil
type InboundNatRulePropertiesFormatPtrInput interface {
	pulumi.Input

	ToInboundNatRulePropertiesFormatPtrOutput() InboundNatRulePropertiesFormatPtrOutput
	ToInboundNatRulePropertiesFormatPtrOutputWithContext(context.Context) InboundNatRulePropertiesFormatPtrOutput
}

type inboundNatRulePropertiesFormatPtrType InboundNatRulePropertiesFormatArgs

func InboundNatRulePropertiesFormatPtr(v *InboundNatRulePropertiesFormatArgs) InboundNatRulePropertiesFormatPtrInput {
	return (*inboundNatRulePropertiesFormatPtrType)(v)
}

func (*inboundNatRulePropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InboundNatRulePropertiesFormat)(nil)).Elem()
}

func (i *inboundNatRulePropertiesFormatPtrType) ToInboundNatRulePropertiesFormatPtrOutput() InboundNatRulePropertiesFormatPtrOutput {
	return i.ToInboundNatRulePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *inboundNatRulePropertiesFormatPtrType) ToInboundNatRulePropertiesFormatPtrOutputWithContext(ctx context.Context) InboundNatRulePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRulePropertiesFormatPtrOutput)
}

// Properties of the inbound NAT rule.
type InboundNatRulePropertiesFormatOutput struct{ *pulumi.OutputState }

func (InboundNatRulePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRulePropertiesFormat)(nil)).Elem()
}

func (o InboundNatRulePropertiesFormatOutput) ToInboundNatRulePropertiesFormatOutput() InboundNatRulePropertiesFormatOutput {
	return o
}

func (o InboundNatRulePropertiesFormatOutput) ToInboundNatRulePropertiesFormatOutputWithContext(ctx context.Context) InboundNatRulePropertiesFormatOutput {
	return o
}

func (o InboundNatRulePropertiesFormatOutput) ToInboundNatRulePropertiesFormatPtrOutput() InboundNatRulePropertiesFormatPtrOutput {
	return o.ToInboundNatRulePropertiesFormatPtrOutputWithContext(context.Background())
}

func (o InboundNatRulePropertiesFormatOutput) ToInboundNatRulePropertiesFormatPtrOutputWithContext(ctx context.Context) InboundNatRulePropertiesFormatPtrOutput {
	return o.ApplyT(func(v InboundNatRulePropertiesFormat) *InboundNatRulePropertiesFormat {
		return &v
	}).(InboundNatRulePropertiesFormatPtrOutput)
}

// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
func (o InboundNatRulePropertiesFormatOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRulePropertiesFormat) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatRulePropertiesFormatOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatRulePropertiesFormat) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o InboundNatRulePropertiesFormatOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatRulePropertiesFormat) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatRulePropertiesFormatOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v InboundNatRulePropertiesFormat) *SubResource { return v.FrontendIPConfiguration }).(SubResourcePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
func (o InboundNatRulePropertiesFormatOutput) FrontendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRulePropertiesFormat) *int { return v.FrontendPort }).(pulumi.IntPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatRulePropertiesFormatOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRulePropertiesFormat) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
func (o InboundNatRulePropertiesFormatOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRulePropertiesFormat) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InboundNatRulePropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRulePropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type InboundNatRulePropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (InboundNatRulePropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InboundNatRulePropertiesFormat)(nil)).Elem()
}

func (o InboundNatRulePropertiesFormatPtrOutput) ToInboundNatRulePropertiesFormatPtrOutput() InboundNatRulePropertiesFormatPtrOutput {
	return o
}

func (o InboundNatRulePropertiesFormatPtrOutput) ToInboundNatRulePropertiesFormatPtrOutputWithContext(ctx context.Context) InboundNatRulePropertiesFormatPtrOutput {
	return o
}

func (o InboundNatRulePropertiesFormatPtrOutput) Elem() InboundNatRulePropertiesFormatOutput {
	return o.ApplyT(func(v *InboundNatRulePropertiesFormat) InboundNatRulePropertiesFormat { return *v }).(InboundNatRulePropertiesFormatOutput)
}

// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
func (o InboundNatRulePropertiesFormatPtrOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InboundNatRulePropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.BackendPort
	}).(pulumi.IntPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatRulePropertiesFormatPtrOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InboundNatRulePropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.EnableFloatingIP
	}).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o InboundNatRulePropertiesFormatPtrOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InboundNatRulePropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.EnableTcpReset
	}).(pulumi.BoolPtrOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatRulePropertiesFormatPtrOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v *InboundNatRulePropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.FrontendIPConfiguration
	}).(SubResourcePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
func (o InboundNatRulePropertiesFormatPtrOutput) FrontendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InboundNatRulePropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.FrontendPort
	}).(pulumi.IntPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatRulePropertiesFormatPtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InboundNatRulePropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
func (o InboundNatRulePropertiesFormatPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InboundNatRulePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InboundNatRulePropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InboundNatRulePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Properties of the inbound NAT rule.
type InboundNatRulePropertiesFormatResponse struct {
	// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
	BackendIPConfiguration NetworkInterfaceIPConfigurationResponse `pulumi:"backendIPConfiguration"`
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort *int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort *int `pulumi:"frontendPort"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol *string `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// InboundNatRulePropertiesFormatResponseInput is an input type that accepts InboundNatRulePropertiesFormatResponseArgs and InboundNatRulePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `InboundNatRulePropertiesFormatResponseInput` via:
//
//          InboundNatRulePropertiesFormatResponseArgs{...}
type InboundNatRulePropertiesFormatResponseInput interface {
	pulumi.Input

	ToInboundNatRulePropertiesFormatResponseOutput() InboundNatRulePropertiesFormatResponseOutput
	ToInboundNatRulePropertiesFormatResponseOutputWithContext(context.Context) InboundNatRulePropertiesFormatResponseOutput
}

// Properties of the inbound NAT rule.
type InboundNatRulePropertiesFormatResponseArgs struct {
	// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
	BackendIPConfiguration NetworkInterfaceIPConfigurationResponseInput `pulumi:"backendIPConfiguration"`
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolPtrInput `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourceResponsePtrInput `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort pulumi.IntPtrInput `pulumi:"frontendPort"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (InboundNatRulePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRulePropertiesFormatResponse)(nil)).Elem()
}

func (i InboundNatRulePropertiesFormatResponseArgs) ToInboundNatRulePropertiesFormatResponseOutput() InboundNatRulePropertiesFormatResponseOutput {
	return i.ToInboundNatRulePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i InboundNatRulePropertiesFormatResponseArgs) ToInboundNatRulePropertiesFormatResponseOutputWithContext(ctx context.Context) InboundNatRulePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRulePropertiesFormatResponseOutput)
}

func (i InboundNatRulePropertiesFormatResponseArgs) ToInboundNatRulePropertiesFormatResponsePtrOutput() InboundNatRulePropertiesFormatResponsePtrOutput {
	return i.ToInboundNatRulePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i InboundNatRulePropertiesFormatResponseArgs) ToInboundNatRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) InboundNatRulePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRulePropertiesFormatResponseOutput).ToInboundNatRulePropertiesFormatResponsePtrOutputWithContext(ctx)
}

// InboundNatRulePropertiesFormatResponsePtrInput is an input type that accepts InboundNatRulePropertiesFormatResponseArgs, InboundNatRulePropertiesFormatResponsePtr and InboundNatRulePropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `InboundNatRulePropertiesFormatResponsePtrInput` via:
//
//          InboundNatRulePropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type InboundNatRulePropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToInboundNatRulePropertiesFormatResponsePtrOutput() InboundNatRulePropertiesFormatResponsePtrOutput
	ToInboundNatRulePropertiesFormatResponsePtrOutputWithContext(context.Context) InboundNatRulePropertiesFormatResponsePtrOutput
}

type inboundNatRulePropertiesFormatResponsePtrType InboundNatRulePropertiesFormatResponseArgs

func InboundNatRulePropertiesFormatResponsePtr(v *InboundNatRulePropertiesFormatResponseArgs) InboundNatRulePropertiesFormatResponsePtrInput {
	return (*inboundNatRulePropertiesFormatResponsePtrType)(v)
}

func (*inboundNatRulePropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InboundNatRulePropertiesFormatResponse)(nil)).Elem()
}

func (i *inboundNatRulePropertiesFormatResponsePtrType) ToInboundNatRulePropertiesFormatResponsePtrOutput() InboundNatRulePropertiesFormatResponsePtrOutput {
	return i.ToInboundNatRulePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *inboundNatRulePropertiesFormatResponsePtrType) ToInboundNatRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) InboundNatRulePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRulePropertiesFormatResponsePtrOutput)
}

// Properties of the inbound NAT rule.
type InboundNatRulePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (InboundNatRulePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRulePropertiesFormatResponse)(nil)).Elem()
}

func (o InboundNatRulePropertiesFormatResponseOutput) ToInboundNatRulePropertiesFormatResponseOutput() InboundNatRulePropertiesFormatResponseOutput {
	return o
}

func (o InboundNatRulePropertiesFormatResponseOutput) ToInboundNatRulePropertiesFormatResponseOutputWithContext(ctx context.Context) InboundNatRulePropertiesFormatResponseOutput {
	return o
}

func (o InboundNatRulePropertiesFormatResponseOutput) ToInboundNatRulePropertiesFormatResponsePtrOutput() InboundNatRulePropertiesFormatResponsePtrOutput {
	return o.ToInboundNatRulePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o InboundNatRulePropertiesFormatResponseOutput) ToInboundNatRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) InboundNatRulePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v InboundNatRulePropertiesFormatResponse) *InboundNatRulePropertiesFormatResponse {
		return &v
	}).(InboundNatRulePropertiesFormatResponsePtrOutput)
}

// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
func (o InboundNatRulePropertiesFormatResponseOutput) BackendIPConfiguration() NetworkInterfaceIPConfigurationResponseOutput {
	return o.ApplyT(func(v InboundNatRulePropertiesFormatResponse) NetworkInterfaceIPConfigurationResponse {
		return v.BackendIPConfiguration
	}).(NetworkInterfaceIPConfigurationResponseOutput)
}

// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
func (o InboundNatRulePropertiesFormatResponseOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRulePropertiesFormatResponse) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatRulePropertiesFormatResponseOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatRulePropertiesFormatResponse) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o InboundNatRulePropertiesFormatResponseOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatRulePropertiesFormatResponse) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatRulePropertiesFormatResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v InboundNatRulePropertiesFormatResponse) *SubResourceResponse { return v.FrontendIPConfiguration }).(SubResourceResponsePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
func (o InboundNatRulePropertiesFormatResponseOutput) FrontendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRulePropertiesFormatResponse) *int { return v.FrontendPort }).(pulumi.IntPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatRulePropertiesFormatResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRulePropertiesFormatResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
func (o InboundNatRulePropertiesFormatResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRulePropertiesFormatResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InboundNatRulePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRulePropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type InboundNatRulePropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (InboundNatRulePropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InboundNatRulePropertiesFormatResponse)(nil)).Elem()
}

func (o InboundNatRulePropertiesFormatResponsePtrOutput) ToInboundNatRulePropertiesFormatResponsePtrOutput() InboundNatRulePropertiesFormatResponsePtrOutput {
	return o
}

func (o InboundNatRulePropertiesFormatResponsePtrOutput) ToInboundNatRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) InboundNatRulePropertiesFormatResponsePtrOutput {
	return o
}

func (o InboundNatRulePropertiesFormatResponsePtrOutput) Elem() InboundNatRulePropertiesFormatResponseOutput {
	return o.ApplyT(func(v *InboundNatRulePropertiesFormatResponse) InboundNatRulePropertiesFormatResponse { return *v }).(InboundNatRulePropertiesFormatResponseOutput)
}

// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
func (o InboundNatRulePropertiesFormatResponsePtrOutput) BackendIPConfiguration() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *InboundNatRulePropertiesFormatResponse) *NetworkInterfaceIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return &v.BackendIPConfiguration
	}).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
func (o InboundNatRulePropertiesFormatResponsePtrOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InboundNatRulePropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.BackendPort
	}).(pulumi.IntPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatRulePropertiesFormatResponsePtrOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InboundNatRulePropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableFloatingIP
	}).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o InboundNatRulePropertiesFormatResponsePtrOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InboundNatRulePropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableTcpReset
	}).(pulumi.BoolPtrOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatRulePropertiesFormatResponsePtrOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *InboundNatRulePropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.FrontendIPConfiguration
	}).(SubResourceResponsePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
func (o InboundNatRulePropertiesFormatResponsePtrOutput) FrontendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InboundNatRulePropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.FrontendPort
	}).(pulumi.IntPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatRulePropertiesFormatResponsePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InboundNatRulePropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
func (o InboundNatRulePropertiesFormatResponsePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InboundNatRulePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InboundNatRulePropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InboundNatRulePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of load balancer inbound nat rule.
	Properties *InboundNatRulePropertiesFormatResponse `pulumi:"properties"`
}

// InboundNatRuleResponseInput is an input type that accepts InboundNatRuleResponseArgs and InboundNatRuleResponseOutput values.
// You can construct a concrete instance of `InboundNatRuleResponseInput` via:
//
//          InboundNatRuleResponseArgs{...}
type InboundNatRuleResponseInput interface {
	pulumi.Input

	ToInboundNatRuleResponseOutput() InboundNatRuleResponseOutput
	ToInboundNatRuleResponseOutputWithContext(context.Context) InboundNatRuleResponseOutput
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of load balancer inbound nat rule.
	Properties InboundNatRulePropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (InboundNatRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleResponse)(nil)).Elem()
}

func (i InboundNatRuleResponseArgs) ToInboundNatRuleResponseOutput() InboundNatRuleResponseOutput {
	return i.ToInboundNatRuleResponseOutputWithContext(context.Background())
}

func (i InboundNatRuleResponseArgs) ToInboundNatRuleResponseOutputWithContext(ctx context.Context) InboundNatRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleResponseOutput)
}

// InboundNatRuleResponseArrayInput is an input type that accepts InboundNatRuleResponseArray and InboundNatRuleResponseArrayOutput values.
// You can construct a concrete instance of `InboundNatRuleResponseArrayInput` via:
//
//          InboundNatRuleResponseArray{ InboundNatRuleResponseArgs{...} }
type InboundNatRuleResponseArrayInput interface {
	pulumi.Input

	ToInboundNatRuleResponseArrayOutput() InboundNatRuleResponseArrayOutput
	ToInboundNatRuleResponseArrayOutputWithContext(context.Context) InboundNatRuleResponseArrayOutput
}

type InboundNatRuleResponseArray []InboundNatRuleResponseInput

func (InboundNatRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleResponse)(nil)).Elem()
}

func (i InboundNatRuleResponseArray) ToInboundNatRuleResponseArrayOutput() InboundNatRuleResponseArrayOutput {
	return i.ToInboundNatRuleResponseArrayOutputWithContext(context.Background())
}

func (i InboundNatRuleResponseArray) ToInboundNatRuleResponseArrayOutputWithContext(ctx context.Context) InboundNatRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleResponseArrayOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleResponseOutput struct{ *pulumi.OutputState }

func (InboundNatRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleResponse)(nil)).Elem()
}

func (o InboundNatRuleResponseOutput) ToInboundNatRuleResponseOutput() InboundNatRuleResponseOutput {
	return o
}

func (o InboundNatRuleResponseOutput) ToInboundNatRuleResponseOutputWithContext(ctx context.Context) InboundNatRuleResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o InboundNatRuleResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o InboundNatRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o InboundNatRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of load balancer inbound nat rule.
func (o InboundNatRuleResponseOutput) Properties() InboundNatRulePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *InboundNatRulePropertiesFormatResponse { return v.Properties }).(InboundNatRulePropertiesFormatResponsePtrOutput)
}

type InboundNatRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (InboundNatRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleResponse)(nil)).Elem()
}

func (o InboundNatRuleResponseArrayOutput) ToInboundNatRuleResponseArrayOutput() InboundNatRuleResponseArrayOutput {
	return o
}

func (o InboundNatRuleResponseArrayOutput) ToInboundNatRuleResponseArrayOutputWithContext(ctx context.Context) InboundNatRuleResponseArrayOutput {
	return o
}

func (o InboundNatRuleResponseArrayOutput) Index(i pulumi.IntInput) InboundNatRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatRuleResponse {
		return vs[0].([]InboundNatRuleResponse)[vs[1].(int)]
	}).(InboundNatRuleResponseOutput)
}

// Interface endpoint resource.
type InterfaceEndpointType struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Properties of the interface endpoint.
	Properties *InterfaceEndpointProperties `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// InterfaceEndpointTypeInput is an input type that accepts InterfaceEndpointTypeArgs and InterfaceEndpointTypeOutput values.
// You can construct a concrete instance of `InterfaceEndpointTypeInput` via:
//
//          InterfaceEndpointTypeArgs{...}
type InterfaceEndpointTypeInput interface {
	pulumi.Input

	ToInterfaceEndpointTypeOutput() InterfaceEndpointTypeOutput
	ToInterfaceEndpointTypeOutputWithContext(context.Context) InterfaceEndpointTypeOutput
}

// Interface endpoint resource.
type InterfaceEndpointTypeArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Properties of the interface endpoint.
	Properties InterfaceEndpointPropertiesPtrInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (InterfaceEndpointTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceEndpointType)(nil)).Elem()
}

func (i InterfaceEndpointTypeArgs) ToInterfaceEndpointTypeOutput() InterfaceEndpointTypeOutput {
	return i.ToInterfaceEndpointTypeOutputWithContext(context.Background())
}

func (i InterfaceEndpointTypeArgs) ToInterfaceEndpointTypeOutputWithContext(ctx context.Context) InterfaceEndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceEndpointTypeOutput)
}

// Interface endpoint resource.
type InterfaceEndpointTypeOutput struct{ *pulumi.OutputState }

func (InterfaceEndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceEndpointType)(nil)).Elem()
}

func (o InterfaceEndpointTypeOutput) ToInterfaceEndpointTypeOutput() InterfaceEndpointTypeOutput {
	return o
}

func (o InterfaceEndpointTypeOutput) ToInterfaceEndpointTypeOutputWithContext(ctx context.Context) InterfaceEndpointTypeOutput {
	return o
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o InterfaceEndpointTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceEndpointType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o InterfaceEndpointTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceEndpointType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o InterfaceEndpointTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceEndpointType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Properties of the interface endpoint.
func (o InterfaceEndpointTypeOutput) Properties() InterfaceEndpointPropertiesPtrOutput {
	return o.ApplyT(func(v InterfaceEndpointType) *InterfaceEndpointProperties { return v.Properties }).(InterfaceEndpointPropertiesPtrOutput)
}

// Resource tags.
func (o InterfaceEndpointTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v InterfaceEndpointType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Interface endpoint resource.
type InterfaceEndpointDefinition struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Properties of the interface endpoint.
	Properties *InterfaceEndpointProperties `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// InterfaceEndpointDefinitionInput is an input type that accepts InterfaceEndpointDefinitionArgs and InterfaceEndpointDefinitionOutput values.
// You can construct a concrete instance of `InterfaceEndpointDefinitionInput` via:
//
//          InterfaceEndpointDefinitionArgs{...}
type InterfaceEndpointDefinitionInput interface {
	pulumi.Input

	ToInterfaceEndpointDefinitionOutput() InterfaceEndpointDefinitionOutput
	ToInterfaceEndpointDefinitionOutputWithContext(context.Context) InterfaceEndpointDefinitionOutput
}

// Interface endpoint resource.
type InterfaceEndpointDefinitionArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Properties of the interface endpoint.
	Properties InterfaceEndpointPropertiesPtrInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (InterfaceEndpointDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceEndpointDefinition)(nil)).Elem()
}

func (i InterfaceEndpointDefinitionArgs) ToInterfaceEndpointDefinitionOutput() InterfaceEndpointDefinitionOutput {
	return i.ToInterfaceEndpointDefinitionOutputWithContext(context.Background())
}

func (i InterfaceEndpointDefinitionArgs) ToInterfaceEndpointDefinitionOutputWithContext(ctx context.Context) InterfaceEndpointDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceEndpointDefinitionOutput)
}

// Interface endpoint resource.
type InterfaceEndpointDefinitionOutput struct{ *pulumi.OutputState }

func (InterfaceEndpointDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceEndpointDefinition)(nil)).Elem()
}

func (o InterfaceEndpointDefinitionOutput) ToInterfaceEndpointDefinitionOutput() InterfaceEndpointDefinitionOutput {
	return o
}

func (o InterfaceEndpointDefinitionOutput) ToInterfaceEndpointDefinitionOutputWithContext(ctx context.Context) InterfaceEndpointDefinitionOutput {
	return o
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o InterfaceEndpointDefinitionOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceEndpointDefinition) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o InterfaceEndpointDefinitionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceEndpointDefinition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o InterfaceEndpointDefinitionOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceEndpointDefinition) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Properties of the interface endpoint.
func (o InterfaceEndpointDefinitionOutput) Properties() InterfaceEndpointPropertiesPtrOutput {
	return o.ApplyT(func(v InterfaceEndpointDefinition) *InterfaceEndpointProperties { return v.Properties }).(InterfaceEndpointPropertiesPtrOutput)
}

// Resource tags.
func (o InterfaceEndpointDefinitionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v InterfaceEndpointDefinition) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Properties of the interface endpoint.
type InterfaceEndpointProperties struct {
	// A reference to the service being brought into the virtual network.
	EndpointService *EndpointService `pulumi:"endpointService"`
	// A first-party service's FQDN that is mapped to the private IP allocated via this interface endpoint.
	Fqdn *string `pulumi:"fqdn"`
	// The ID of the subnet from which the private IP will be allocated.
	Subnet *SubnetType `pulumi:"subnet"`
}

// InterfaceEndpointPropertiesInput is an input type that accepts InterfaceEndpointPropertiesArgs and InterfaceEndpointPropertiesOutput values.
// You can construct a concrete instance of `InterfaceEndpointPropertiesInput` via:
//
//          InterfaceEndpointPropertiesArgs{...}
type InterfaceEndpointPropertiesInput interface {
	pulumi.Input

	ToInterfaceEndpointPropertiesOutput() InterfaceEndpointPropertiesOutput
	ToInterfaceEndpointPropertiesOutputWithContext(context.Context) InterfaceEndpointPropertiesOutput
}

// Properties of the interface endpoint.
type InterfaceEndpointPropertiesArgs struct {
	// A reference to the service being brought into the virtual network.
	EndpointService EndpointServicePtrInput `pulumi:"endpointService"`
	// A first-party service's FQDN that is mapped to the private IP allocated via this interface endpoint.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// The ID of the subnet from which the private IP will be allocated.
	Subnet SubnetTypePtrInput `pulumi:"subnet"`
}

func (InterfaceEndpointPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceEndpointProperties)(nil)).Elem()
}

func (i InterfaceEndpointPropertiesArgs) ToInterfaceEndpointPropertiesOutput() InterfaceEndpointPropertiesOutput {
	return i.ToInterfaceEndpointPropertiesOutputWithContext(context.Background())
}

func (i InterfaceEndpointPropertiesArgs) ToInterfaceEndpointPropertiesOutputWithContext(ctx context.Context) InterfaceEndpointPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceEndpointPropertiesOutput)
}

func (i InterfaceEndpointPropertiesArgs) ToInterfaceEndpointPropertiesPtrOutput() InterfaceEndpointPropertiesPtrOutput {
	return i.ToInterfaceEndpointPropertiesPtrOutputWithContext(context.Background())
}

func (i InterfaceEndpointPropertiesArgs) ToInterfaceEndpointPropertiesPtrOutputWithContext(ctx context.Context) InterfaceEndpointPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceEndpointPropertiesOutput).ToInterfaceEndpointPropertiesPtrOutputWithContext(ctx)
}

// InterfaceEndpointPropertiesPtrInput is an input type that accepts InterfaceEndpointPropertiesArgs, InterfaceEndpointPropertiesPtr and InterfaceEndpointPropertiesPtrOutput values.
// You can construct a concrete instance of `InterfaceEndpointPropertiesPtrInput` via:
//
//          InterfaceEndpointPropertiesArgs{...}
//
//  or:
//
//          nil
type InterfaceEndpointPropertiesPtrInput interface {
	pulumi.Input

	ToInterfaceEndpointPropertiesPtrOutput() InterfaceEndpointPropertiesPtrOutput
	ToInterfaceEndpointPropertiesPtrOutputWithContext(context.Context) InterfaceEndpointPropertiesPtrOutput
}

type interfaceEndpointPropertiesPtrType InterfaceEndpointPropertiesArgs

func InterfaceEndpointPropertiesPtr(v *InterfaceEndpointPropertiesArgs) InterfaceEndpointPropertiesPtrInput {
	return (*interfaceEndpointPropertiesPtrType)(v)
}

func (*interfaceEndpointPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InterfaceEndpointProperties)(nil)).Elem()
}

func (i *interfaceEndpointPropertiesPtrType) ToInterfaceEndpointPropertiesPtrOutput() InterfaceEndpointPropertiesPtrOutput {
	return i.ToInterfaceEndpointPropertiesPtrOutputWithContext(context.Background())
}

func (i *interfaceEndpointPropertiesPtrType) ToInterfaceEndpointPropertiesPtrOutputWithContext(ctx context.Context) InterfaceEndpointPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceEndpointPropertiesPtrOutput)
}

// Properties of the interface endpoint.
type InterfaceEndpointPropertiesOutput struct{ *pulumi.OutputState }

func (InterfaceEndpointPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceEndpointProperties)(nil)).Elem()
}

func (o InterfaceEndpointPropertiesOutput) ToInterfaceEndpointPropertiesOutput() InterfaceEndpointPropertiesOutput {
	return o
}

func (o InterfaceEndpointPropertiesOutput) ToInterfaceEndpointPropertiesOutputWithContext(ctx context.Context) InterfaceEndpointPropertiesOutput {
	return o
}

func (o InterfaceEndpointPropertiesOutput) ToInterfaceEndpointPropertiesPtrOutput() InterfaceEndpointPropertiesPtrOutput {
	return o.ToInterfaceEndpointPropertiesPtrOutputWithContext(context.Background())
}

func (o InterfaceEndpointPropertiesOutput) ToInterfaceEndpointPropertiesPtrOutputWithContext(ctx context.Context) InterfaceEndpointPropertiesPtrOutput {
	return o.ApplyT(func(v InterfaceEndpointProperties) *InterfaceEndpointProperties {
		return &v
	}).(InterfaceEndpointPropertiesPtrOutput)
}

// A reference to the service being brought into the virtual network.
func (o InterfaceEndpointPropertiesOutput) EndpointService() EndpointServicePtrOutput {
	return o.ApplyT(func(v InterfaceEndpointProperties) *EndpointService { return v.EndpointService }).(EndpointServicePtrOutput)
}

// A first-party service's FQDN that is mapped to the private IP allocated via this interface endpoint.
func (o InterfaceEndpointPropertiesOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceEndpointProperties) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The ID of the subnet from which the private IP will be allocated.
func (o InterfaceEndpointPropertiesOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v InterfaceEndpointProperties) *SubnetType { return v.Subnet }).(SubnetTypePtrOutput)
}

type InterfaceEndpointPropertiesPtrOutput struct{ *pulumi.OutputState }

func (InterfaceEndpointPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InterfaceEndpointProperties)(nil)).Elem()
}

func (o InterfaceEndpointPropertiesPtrOutput) ToInterfaceEndpointPropertiesPtrOutput() InterfaceEndpointPropertiesPtrOutput {
	return o
}

func (o InterfaceEndpointPropertiesPtrOutput) ToInterfaceEndpointPropertiesPtrOutputWithContext(ctx context.Context) InterfaceEndpointPropertiesPtrOutput {
	return o
}

func (o InterfaceEndpointPropertiesPtrOutput) Elem() InterfaceEndpointPropertiesOutput {
	return o.ApplyT(func(v *InterfaceEndpointProperties) InterfaceEndpointProperties { return *v }).(InterfaceEndpointPropertiesOutput)
}

// A reference to the service being brought into the virtual network.
func (o InterfaceEndpointPropertiesPtrOutput) EndpointService() EndpointServicePtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointProperties) *EndpointService {
		if v == nil {
			return nil
		}
		return v.EndpointService
	}).(EndpointServicePtrOutput)
}

// A first-party service's FQDN that is mapped to the private IP allocated via this interface endpoint.
func (o InterfaceEndpointPropertiesPtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointProperties) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// The ID of the subnet from which the private IP will be allocated.
func (o InterfaceEndpointPropertiesPtrOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointProperties) *SubnetType {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetTypePtrOutput)
}

// Properties of the interface endpoint.
type InterfaceEndpointPropertiesResponse struct {
	// A reference to the service being brought into the virtual network.
	EndpointService *EndpointServiceResponse `pulumi:"endpointService"`
	// A first-party service's FQDN that is mapped to the private IP allocated via this interface endpoint.
	Fqdn *string `pulumi:"fqdn"`
	// Gets an array of references to the network interfaces created for this interface endpoint.
	NetworkInterfaces []NetworkInterfaceResponse `pulumi:"networkInterfaces"`
	// A read-only property that identifies who created this interface endpoint.
	Owner string `pulumi:"owner"`
	// The provisioning state of the interface endpoint. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The ID of the subnet from which the private IP will be allocated.
	Subnet *SubnetResponse `pulumi:"subnet"`
}

// InterfaceEndpointPropertiesResponseInput is an input type that accepts InterfaceEndpointPropertiesResponseArgs and InterfaceEndpointPropertiesResponseOutput values.
// You can construct a concrete instance of `InterfaceEndpointPropertiesResponseInput` via:
//
//          InterfaceEndpointPropertiesResponseArgs{...}
type InterfaceEndpointPropertiesResponseInput interface {
	pulumi.Input

	ToInterfaceEndpointPropertiesResponseOutput() InterfaceEndpointPropertiesResponseOutput
	ToInterfaceEndpointPropertiesResponseOutputWithContext(context.Context) InterfaceEndpointPropertiesResponseOutput
}

// Properties of the interface endpoint.
type InterfaceEndpointPropertiesResponseArgs struct {
	// A reference to the service being brought into the virtual network.
	EndpointService EndpointServiceResponsePtrInput `pulumi:"endpointService"`
	// A first-party service's FQDN that is mapped to the private IP allocated via this interface endpoint.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// Gets an array of references to the network interfaces created for this interface endpoint.
	NetworkInterfaces NetworkInterfaceResponseArrayInput `pulumi:"networkInterfaces"`
	// A read-only property that identifies who created this interface endpoint.
	Owner pulumi.StringInput `pulumi:"owner"`
	// The provisioning state of the interface endpoint. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The ID of the subnet from which the private IP will be allocated.
	Subnet SubnetResponsePtrInput `pulumi:"subnet"`
}

func (InterfaceEndpointPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceEndpointPropertiesResponse)(nil)).Elem()
}

func (i InterfaceEndpointPropertiesResponseArgs) ToInterfaceEndpointPropertiesResponseOutput() InterfaceEndpointPropertiesResponseOutput {
	return i.ToInterfaceEndpointPropertiesResponseOutputWithContext(context.Background())
}

func (i InterfaceEndpointPropertiesResponseArgs) ToInterfaceEndpointPropertiesResponseOutputWithContext(ctx context.Context) InterfaceEndpointPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceEndpointPropertiesResponseOutput)
}

func (i InterfaceEndpointPropertiesResponseArgs) ToInterfaceEndpointPropertiesResponsePtrOutput() InterfaceEndpointPropertiesResponsePtrOutput {
	return i.ToInterfaceEndpointPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i InterfaceEndpointPropertiesResponseArgs) ToInterfaceEndpointPropertiesResponsePtrOutputWithContext(ctx context.Context) InterfaceEndpointPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceEndpointPropertiesResponseOutput).ToInterfaceEndpointPropertiesResponsePtrOutputWithContext(ctx)
}

// InterfaceEndpointPropertiesResponsePtrInput is an input type that accepts InterfaceEndpointPropertiesResponseArgs, InterfaceEndpointPropertiesResponsePtr and InterfaceEndpointPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `InterfaceEndpointPropertiesResponsePtrInput` via:
//
//          InterfaceEndpointPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type InterfaceEndpointPropertiesResponsePtrInput interface {
	pulumi.Input

	ToInterfaceEndpointPropertiesResponsePtrOutput() InterfaceEndpointPropertiesResponsePtrOutput
	ToInterfaceEndpointPropertiesResponsePtrOutputWithContext(context.Context) InterfaceEndpointPropertiesResponsePtrOutput
}

type interfaceEndpointPropertiesResponsePtrType InterfaceEndpointPropertiesResponseArgs

func InterfaceEndpointPropertiesResponsePtr(v *InterfaceEndpointPropertiesResponseArgs) InterfaceEndpointPropertiesResponsePtrInput {
	return (*interfaceEndpointPropertiesResponsePtrType)(v)
}

func (*interfaceEndpointPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InterfaceEndpointPropertiesResponse)(nil)).Elem()
}

func (i *interfaceEndpointPropertiesResponsePtrType) ToInterfaceEndpointPropertiesResponsePtrOutput() InterfaceEndpointPropertiesResponsePtrOutput {
	return i.ToInterfaceEndpointPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *interfaceEndpointPropertiesResponsePtrType) ToInterfaceEndpointPropertiesResponsePtrOutputWithContext(ctx context.Context) InterfaceEndpointPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceEndpointPropertiesResponsePtrOutput)
}

// Properties of the interface endpoint.
type InterfaceEndpointPropertiesResponseOutput struct{ *pulumi.OutputState }

func (InterfaceEndpointPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceEndpointPropertiesResponse)(nil)).Elem()
}

func (o InterfaceEndpointPropertiesResponseOutput) ToInterfaceEndpointPropertiesResponseOutput() InterfaceEndpointPropertiesResponseOutput {
	return o
}

func (o InterfaceEndpointPropertiesResponseOutput) ToInterfaceEndpointPropertiesResponseOutputWithContext(ctx context.Context) InterfaceEndpointPropertiesResponseOutput {
	return o
}

func (o InterfaceEndpointPropertiesResponseOutput) ToInterfaceEndpointPropertiesResponsePtrOutput() InterfaceEndpointPropertiesResponsePtrOutput {
	return o.ToInterfaceEndpointPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o InterfaceEndpointPropertiesResponseOutput) ToInterfaceEndpointPropertiesResponsePtrOutputWithContext(ctx context.Context) InterfaceEndpointPropertiesResponsePtrOutput {
	return o.ApplyT(func(v InterfaceEndpointPropertiesResponse) *InterfaceEndpointPropertiesResponse {
		return &v
	}).(InterfaceEndpointPropertiesResponsePtrOutput)
}

// A reference to the service being brought into the virtual network.
func (o InterfaceEndpointPropertiesResponseOutput) EndpointService() EndpointServiceResponsePtrOutput {
	return o.ApplyT(func(v InterfaceEndpointPropertiesResponse) *EndpointServiceResponse { return v.EndpointService }).(EndpointServiceResponsePtrOutput)
}

// A first-party service's FQDN that is mapped to the private IP allocated via this interface endpoint.
func (o InterfaceEndpointPropertiesResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceEndpointPropertiesResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// Gets an array of references to the network interfaces created for this interface endpoint.
func (o InterfaceEndpointPropertiesResponseOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v InterfaceEndpointPropertiesResponse) []NetworkInterfaceResponse { return v.NetworkInterfaces }).(NetworkInterfaceResponseArrayOutput)
}

// A read-only property that identifies who created this interface endpoint.
func (o InterfaceEndpointPropertiesResponseOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v InterfaceEndpointPropertiesResponse) string { return v.Owner }).(pulumi.StringOutput)
}

// The provisioning state of the interface endpoint. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InterfaceEndpointPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v InterfaceEndpointPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The ID of the subnet from which the private IP will be allocated.
func (o InterfaceEndpointPropertiesResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v InterfaceEndpointPropertiesResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

type InterfaceEndpointPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (InterfaceEndpointPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InterfaceEndpointPropertiesResponse)(nil)).Elem()
}

func (o InterfaceEndpointPropertiesResponsePtrOutput) ToInterfaceEndpointPropertiesResponsePtrOutput() InterfaceEndpointPropertiesResponsePtrOutput {
	return o
}

func (o InterfaceEndpointPropertiesResponsePtrOutput) ToInterfaceEndpointPropertiesResponsePtrOutputWithContext(ctx context.Context) InterfaceEndpointPropertiesResponsePtrOutput {
	return o
}

func (o InterfaceEndpointPropertiesResponsePtrOutput) Elem() InterfaceEndpointPropertiesResponseOutput {
	return o.ApplyT(func(v *InterfaceEndpointPropertiesResponse) InterfaceEndpointPropertiesResponse { return *v }).(InterfaceEndpointPropertiesResponseOutput)
}

// A reference to the service being brought into the virtual network.
func (o InterfaceEndpointPropertiesResponsePtrOutput) EndpointService() EndpointServiceResponsePtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointPropertiesResponse) *EndpointServiceResponse {
		if v == nil {
			return nil
		}
		return v.EndpointService
	}).(EndpointServiceResponsePtrOutput)
}

// A first-party service's FQDN that is mapped to the private IP allocated via this interface endpoint.
func (o InterfaceEndpointPropertiesResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// Gets an array of references to the network interfaces created for this interface endpoint.
func (o InterfaceEndpointPropertiesResponsePtrOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v *InterfaceEndpointPropertiesResponse) []NetworkInterfaceResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(NetworkInterfaceResponseArrayOutput)
}

// A read-only property that identifies who created this interface endpoint.
func (o InterfaceEndpointPropertiesResponsePtrOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Owner
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the interface endpoint. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InterfaceEndpointPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The ID of the subnet from which the private IP will be allocated.
func (o InterfaceEndpointPropertiesResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointPropertiesResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

// Interface endpoint resource.
type InterfaceEndpointResponse struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the interface endpoint.
	Properties *InterfaceEndpointPropertiesResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// InterfaceEndpointResponseInput is an input type that accepts InterfaceEndpointResponseArgs and InterfaceEndpointResponseOutput values.
// You can construct a concrete instance of `InterfaceEndpointResponseInput` via:
//
//          InterfaceEndpointResponseArgs{...}
type InterfaceEndpointResponseInput interface {
	pulumi.Input

	ToInterfaceEndpointResponseOutput() InterfaceEndpointResponseOutput
	ToInterfaceEndpointResponseOutputWithContext(context.Context) InterfaceEndpointResponseOutput
}

// Interface endpoint resource.
type InterfaceEndpointResponseArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the interface endpoint.
	Properties InterfaceEndpointPropertiesResponsePtrInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (InterfaceEndpointResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceEndpointResponse)(nil)).Elem()
}

func (i InterfaceEndpointResponseArgs) ToInterfaceEndpointResponseOutput() InterfaceEndpointResponseOutput {
	return i.ToInterfaceEndpointResponseOutputWithContext(context.Background())
}

func (i InterfaceEndpointResponseArgs) ToInterfaceEndpointResponseOutputWithContext(ctx context.Context) InterfaceEndpointResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceEndpointResponseOutput)
}

func (i InterfaceEndpointResponseArgs) ToInterfaceEndpointResponsePtrOutput() InterfaceEndpointResponsePtrOutput {
	return i.ToInterfaceEndpointResponsePtrOutputWithContext(context.Background())
}

func (i InterfaceEndpointResponseArgs) ToInterfaceEndpointResponsePtrOutputWithContext(ctx context.Context) InterfaceEndpointResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceEndpointResponseOutput).ToInterfaceEndpointResponsePtrOutputWithContext(ctx)
}

// InterfaceEndpointResponsePtrInput is an input type that accepts InterfaceEndpointResponseArgs, InterfaceEndpointResponsePtr and InterfaceEndpointResponsePtrOutput values.
// You can construct a concrete instance of `InterfaceEndpointResponsePtrInput` via:
//
//          InterfaceEndpointResponseArgs{...}
//
//  or:
//
//          nil
type InterfaceEndpointResponsePtrInput interface {
	pulumi.Input

	ToInterfaceEndpointResponsePtrOutput() InterfaceEndpointResponsePtrOutput
	ToInterfaceEndpointResponsePtrOutputWithContext(context.Context) InterfaceEndpointResponsePtrOutput
}

type interfaceEndpointResponsePtrType InterfaceEndpointResponseArgs

func InterfaceEndpointResponsePtr(v *InterfaceEndpointResponseArgs) InterfaceEndpointResponsePtrInput {
	return (*interfaceEndpointResponsePtrType)(v)
}

func (*interfaceEndpointResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InterfaceEndpointResponse)(nil)).Elem()
}

func (i *interfaceEndpointResponsePtrType) ToInterfaceEndpointResponsePtrOutput() InterfaceEndpointResponsePtrOutput {
	return i.ToInterfaceEndpointResponsePtrOutputWithContext(context.Background())
}

func (i *interfaceEndpointResponsePtrType) ToInterfaceEndpointResponsePtrOutputWithContext(ctx context.Context) InterfaceEndpointResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceEndpointResponsePtrOutput)
}

// InterfaceEndpointResponseArrayInput is an input type that accepts InterfaceEndpointResponseArray and InterfaceEndpointResponseArrayOutput values.
// You can construct a concrete instance of `InterfaceEndpointResponseArrayInput` via:
//
//          InterfaceEndpointResponseArray{ InterfaceEndpointResponseArgs{...} }
type InterfaceEndpointResponseArrayInput interface {
	pulumi.Input

	ToInterfaceEndpointResponseArrayOutput() InterfaceEndpointResponseArrayOutput
	ToInterfaceEndpointResponseArrayOutputWithContext(context.Context) InterfaceEndpointResponseArrayOutput
}

type InterfaceEndpointResponseArray []InterfaceEndpointResponseInput

func (InterfaceEndpointResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceEndpointResponse)(nil)).Elem()
}

func (i InterfaceEndpointResponseArray) ToInterfaceEndpointResponseArrayOutput() InterfaceEndpointResponseArrayOutput {
	return i.ToInterfaceEndpointResponseArrayOutputWithContext(context.Background())
}

func (i InterfaceEndpointResponseArray) ToInterfaceEndpointResponseArrayOutputWithContext(ctx context.Context) InterfaceEndpointResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceEndpointResponseArrayOutput)
}

// Interface endpoint resource.
type InterfaceEndpointResponseOutput struct{ *pulumi.OutputState }

func (InterfaceEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceEndpointResponse)(nil)).Elem()
}

func (o InterfaceEndpointResponseOutput) ToInterfaceEndpointResponseOutput() InterfaceEndpointResponseOutput {
	return o
}

func (o InterfaceEndpointResponseOutput) ToInterfaceEndpointResponseOutputWithContext(ctx context.Context) InterfaceEndpointResponseOutput {
	return o
}

func (o InterfaceEndpointResponseOutput) ToInterfaceEndpointResponsePtrOutput() InterfaceEndpointResponsePtrOutput {
	return o.ToInterfaceEndpointResponsePtrOutputWithContext(context.Background())
}

func (o InterfaceEndpointResponseOutput) ToInterfaceEndpointResponsePtrOutputWithContext(ctx context.Context) InterfaceEndpointResponsePtrOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) *InterfaceEndpointResponse {
		return &v
	}).(InterfaceEndpointResponsePtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o InterfaceEndpointResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o InterfaceEndpointResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o InterfaceEndpointResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o InterfaceEndpointResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the interface endpoint.
func (o InterfaceEndpointResponseOutput) Properties() InterfaceEndpointPropertiesResponsePtrOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) *InterfaceEndpointPropertiesResponse { return v.Properties }).(InterfaceEndpointPropertiesResponsePtrOutput)
}

// Resource tags.
func (o InterfaceEndpointResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o InterfaceEndpointResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) string { return v.Type }).(pulumi.StringOutput)
}

type InterfaceEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (InterfaceEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InterfaceEndpointResponse)(nil)).Elem()
}

func (o InterfaceEndpointResponsePtrOutput) ToInterfaceEndpointResponsePtrOutput() InterfaceEndpointResponsePtrOutput {
	return o
}

func (o InterfaceEndpointResponsePtrOutput) ToInterfaceEndpointResponsePtrOutputWithContext(ctx context.Context) InterfaceEndpointResponsePtrOutput {
	return o
}

func (o InterfaceEndpointResponsePtrOutput) Elem() InterfaceEndpointResponseOutput {
	return o.ApplyT(func(v *InterfaceEndpointResponse) InterfaceEndpointResponse { return *v }).(InterfaceEndpointResponseOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o InterfaceEndpointResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o InterfaceEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o InterfaceEndpointResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o InterfaceEndpointResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Properties of the interface endpoint.
func (o InterfaceEndpointResponsePtrOutput) Properties() InterfaceEndpointPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointResponse) *InterfaceEndpointPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(InterfaceEndpointPropertiesResponsePtrOutput)
}

// Resource tags.
func (o InterfaceEndpointResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InterfaceEndpointResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o InterfaceEndpointResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type InterfaceEndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (InterfaceEndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterfaceEndpointResponse)(nil)).Elem()
}

func (o InterfaceEndpointResponseArrayOutput) ToInterfaceEndpointResponseArrayOutput() InterfaceEndpointResponseArrayOutput {
	return o
}

func (o InterfaceEndpointResponseArrayOutput) ToInterfaceEndpointResponseArrayOutputWithContext(ctx context.Context) InterfaceEndpointResponseArrayOutput {
	return o
}

func (o InterfaceEndpointResponseArrayOutput) Index(i pulumi.IntInput) InterfaceEndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterfaceEndpointResponse {
		return vs[0].([]InterfaceEndpointResponse)[vs[1].(int)]
	}).(InterfaceEndpointResponseOutput)
}

// Contains the IpTag associated with the object
type IpTag struct {
	// Gets or sets the ipTag type: Example FirstPartyUsage.
	IpTagType *string `pulumi:"ipTagType"`
	// Gets or sets value of the IpTag associated with the public IP. Example SQL, Storage etc
	Tag *string `pulumi:"tag"`
}

// IpTagInput is an input type that accepts IpTagArgs and IpTagOutput values.
// You can construct a concrete instance of `IpTagInput` via:
//
//          IpTagArgs{...}
type IpTagInput interface {
	pulumi.Input

	ToIpTagOutput() IpTagOutput
	ToIpTagOutputWithContext(context.Context) IpTagOutput
}

// Contains the IpTag associated with the object
type IpTagArgs struct {
	// Gets or sets the ipTag type: Example FirstPartyUsage.
	IpTagType pulumi.StringPtrInput `pulumi:"ipTagType"`
	// Gets or sets value of the IpTag associated with the public IP. Example SQL, Storage etc
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (IpTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpTag)(nil)).Elem()
}

func (i IpTagArgs) ToIpTagOutput() IpTagOutput {
	return i.ToIpTagOutputWithContext(context.Background())
}

func (i IpTagArgs) ToIpTagOutputWithContext(ctx context.Context) IpTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpTagOutput)
}

// IpTagArrayInput is an input type that accepts IpTagArray and IpTagArrayOutput values.
// You can construct a concrete instance of `IpTagArrayInput` via:
//
//          IpTagArray{ IpTagArgs{...} }
type IpTagArrayInput interface {
	pulumi.Input

	ToIpTagArrayOutput() IpTagArrayOutput
	ToIpTagArrayOutputWithContext(context.Context) IpTagArrayOutput
}

type IpTagArray []IpTagInput

func (IpTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpTag)(nil)).Elem()
}

func (i IpTagArray) ToIpTagArrayOutput() IpTagArrayOutput {
	return i.ToIpTagArrayOutputWithContext(context.Background())
}

func (i IpTagArray) ToIpTagArrayOutputWithContext(ctx context.Context) IpTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpTagArrayOutput)
}

// Contains the IpTag associated with the object
type IpTagOutput struct{ *pulumi.OutputState }

func (IpTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpTag)(nil)).Elem()
}

func (o IpTagOutput) ToIpTagOutput() IpTagOutput {
	return o
}

func (o IpTagOutput) ToIpTagOutputWithContext(ctx context.Context) IpTagOutput {
	return o
}

// Gets or sets the ipTag type: Example FirstPartyUsage.
func (o IpTagOutput) IpTagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpTag) *string { return v.IpTagType }).(pulumi.StringPtrOutput)
}

// Gets or sets value of the IpTag associated with the public IP. Example SQL, Storage etc
func (o IpTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type IpTagArrayOutput struct{ *pulumi.OutputState }

func (IpTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpTag)(nil)).Elem()
}

func (o IpTagArrayOutput) ToIpTagArrayOutput() IpTagArrayOutput {
	return o
}

func (o IpTagArrayOutput) ToIpTagArrayOutputWithContext(ctx context.Context) IpTagArrayOutput {
	return o
}

func (o IpTagArrayOutput) Index(i pulumi.IntInput) IpTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpTag {
		return vs[0].([]IpTag)[vs[1].(int)]
	}).(IpTagOutput)
}

// Contains the IpTag associated with the object
type IpTagResponse struct {
	// Gets or sets the ipTag type: Example FirstPartyUsage.
	IpTagType *string `pulumi:"ipTagType"`
	// Gets or sets value of the IpTag associated with the public IP. Example SQL, Storage etc
	Tag *string `pulumi:"tag"`
}

// IpTagResponseInput is an input type that accepts IpTagResponseArgs and IpTagResponseOutput values.
// You can construct a concrete instance of `IpTagResponseInput` via:
//
//          IpTagResponseArgs{...}
type IpTagResponseInput interface {
	pulumi.Input

	ToIpTagResponseOutput() IpTagResponseOutput
	ToIpTagResponseOutputWithContext(context.Context) IpTagResponseOutput
}

// Contains the IpTag associated with the object
type IpTagResponseArgs struct {
	// Gets or sets the ipTag type: Example FirstPartyUsage.
	IpTagType pulumi.StringPtrInput `pulumi:"ipTagType"`
	// Gets or sets value of the IpTag associated with the public IP. Example SQL, Storage etc
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (IpTagResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpTagResponse)(nil)).Elem()
}

func (i IpTagResponseArgs) ToIpTagResponseOutput() IpTagResponseOutput {
	return i.ToIpTagResponseOutputWithContext(context.Background())
}

func (i IpTagResponseArgs) ToIpTagResponseOutputWithContext(ctx context.Context) IpTagResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpTagResponseOutput)
}

// IpTagResponseArrayInput is an input type that accepts IpTagResponseArray and IpTagResponseArrayOutput values.
// You can construct a concrete instance of `IpTagResponseArrayInput` via:
//
//          IpTagResponseArray{ IpTagResponseArgs{...} }
type IpTagResponseArrayInput interface {
	pulumi.Input

	ToIpTagResponseArrayOutput() IpTagResponseArrayOutput
	ToIpTagResponseArrayOutputWithContext(context.Context) IpTagResponseArrayOutput
}

type IpTagResponseArray []IpTagResponseInput

func (IpTagResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpTagResponse)(nil)).Elem()
}

func (i IpTagResponseArray) ToIpTagResponseArrayOutput() IpTagResponseArrayOutput {
	return i.ToIpTagResponseArrayOutputWithContext(context.Background())
}

func (i IpTagResponseArray) ToIpTagResponseArrayOutputWithContext(ctx context.Context) IpTagResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpTagResponseArrayOutput)
}

// Contains the IpTag associated with the object
type IpTagResponseOutput struct{ *pulumi.OutputState }

func (IpTagResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpTagResponse)(nil)).Elem()
}

func (o IpTagResponseOutput) ToIpTagResponseOutput() IpTagResponseOutput {
	return o
}

func (o IpTagResponseOutput) ToIpTagResponseOutputWithContext(ctx context.Context) IpTagResponseOutput {
	return o
}

// Gets or sets the ipTag type: Example FirstPartyUsage.
func (o IpTagResponseOutput) IpTagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpTagResponse) *string { return v.IpTagType }).(pulumi.StringPtrOutput)
}

// Gets or sets value of the IpTag associated with the public IP. Example SQL, Storage etc
func (o IpTagResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpTagResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type IpTagResponseArrayOutput struct{ *pulumi.OutputState }

func (IpTagResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpTagResponse)(nil)).Elem()
}

func (o IpTagResponseArrayOutput) ToIpTagResponseArrayOutput() IpTagResponseArrayOutput {
	return o
}

func (o IpTagResponseArrayOutput) ToIpTagResponseArrayOutputWithContext(ctx context.Context) IpTagResponseArrayOutput {
	return o
}

func (o IpTagResponseArrayOutput) Index(i pulumi.IntInput) IpTagResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpTagResponse {
		return vs[0].([]IpTagResponse)[vs[1].(int)]
	}).(IpTagResponseOutput)
}

// An IPSec Policy configuration for a virtual network gateway connection
type IpsecPolicy struct {
	// The DH Groups used in IKE Phase 1 for initial SA.
	DhGroup string `pulumi:"dhGroup"`
	// The IKE encryption algorithm (IKE phase 2).
	IkeEncryption string `pulumi:"ikeEncryption"`
	// The IKE integrity algorithm (IKE phase 2).
	IkeIntegrity string `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm (IKE phase 1).
	IpsecEncryption string `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm (IKE phase 1).
	IpsecIntegrity string `pulumi:"ipsecIntegrity"`
	// The Pfs Groups used in IKE Phase 2 for new child SA.
	PfsGroup string `pulumi:"pfsGroup"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
	SaDataSizeKilobytes int `pulumi:"saDataSizeKilobytes"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
	SaLifeTimeSeconds int `pulumi:"saLifeTimeSeconds"`
}

// IpsecPolicyInput is an input type that accepts IpsecPolicyArgs and IpsecPolicyOutput values.
// You can construct a concrete instance of `IpsecPolicyInput` via:
//
//          IpsecPolicyArgs{...}
type IpsecPolicyInput interface {
	pulumi.Input

	ToIpsecPolicyOutput() IpsecPolicyOutput
	ToIpsecPolicyOutputWithContext(context.Context) IpsecPolicyOutput
}

// An IPSec Policy configuration for a virtual network gateway connection
type IpsecPolicyArgs struct {
	// The DH Groups used in IKE Phase 1 for initial SA.
	DhGroup pulumi.StringInput `pulumi:"dhGroup"`
	// The IKE encryption algorithm (IKE phase 2).
	IkeEncryption pulumi.StringInput `pulumi:"ikeEncryption"`
	// The IKE integrity algorithm (IKE phase 2).
	IkeIntegrity pulumi.StringInput `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm (IKE phase 1).
	IpsecEncryption pulumi.StringInput `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm (IKE phase 1).
	IpsecIntegrity pulumi.StringInput `pulumi:"ipsecIntegrity"`
	// The Pfs Groups used in IKE Phase 2 for new child SA.
	PfsGroup pulumi.StringInput `pulumi:"pfsGroup"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
	SaDataSizeKilobytes pulumi.IntInput `pulumi:"saDataSizeKilobytes"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
	SaLifeTimeSeconds pulumi.IntInput `pulumi:"saLifeTimeSeconds"`
}

func (IpsecPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecPolicy)(nil)).Elem()
}

func (i IpsecPolicyArgs) ToIpsecPolicyOutput() IpsecPolicyOutput {
	return i.ToIpsecPolicyOutputWithContext(context.Background())
}

func (i IpsecPolicyArgs) ToIpsecPolicyOutputWithContext(ctx context.Context) IpsecPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecPolicyOutput)
}

// IpsecPolicyArrayInput is an input type that accepts IpsecPolicyArray and IpsecPolicyArrayOutput values.
// You can construct a concrete instance of `IpsecPolicyArrayInput` via:
//
//          IpsecPolicyArray{ IpsecPolicyArgs{...} }
type IpsecPolicyArrayInput interface {
	pulumi.Input

	ToIpsecPolicyArrayOutput() IpsecPolicyArrayOutput
	ToIpsecPolicyArrayOutputWithContext(context.Context) IpsecPolicyArrayOutput
}

type IpsecPolicyArray []IpsecPolicyInput

func (IpsecPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecPolicy)(nil)).Elem()
}

func (i IpsecPolicyArray) ToIpsecPolicyArrayOutput() IpsecPolicyArrayOutput {
	return i.ToIpsecPolicyArrayOutputWithContext(context.Background())
}

func (i IpsecPolicyArray) ToIpsecPolicyArrayOutputWithContext(ctx context.Context) IpsecPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecPolicyArrayOutput)
}

// An IPSec Policy configuration for a virtual network gateway connection
type IpsecPolicyOutput struct{ *pulumi.OutputState }

func (IpsecPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecPolicy)(nil)).Elem()
}

func (o IpsecPolicyOutput) ToIpsecPolicyOutput() IpsecPolicyOutput {
	return o
}

func (o IpsecPolicyOutput) ToIpsecPolicyOutputWithContext(ctx context.Context) IpsecPolicyOutput {
	return o
}

// The DH Groups used in IKE Phase 1 for initial SA.
func (o IpsecPolicyOutput) DhGroup() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.DhGroup }).(pulumi.StringOutput)
}

// The IKE encryption algorithm (IKE phase 2).
func (o IpsecPolicyOutput) IkeEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.IkeEncryption }).(pulumi.StringOutput)
}

// The IKE integrity algorithm (IKE phase 2).
func (o IpsecPolicyOutput) IkeIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.IkeIntegrity }).(pulumi.StringOutput)
}

// The IPSec encryption algorithm (IKE phase 1).
func (o IpsecPolicyOutput) IpsecEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.IpsecEncryption }).(pulumi.StringOutput)
}

// The IPSec integrity algorithm (IKE phase 1).
func (o IpsecPolicyOutput) IpsecIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.IpsecIntegrity }).(pulumi.StringOutput)
}

// The Pfs Groups used in IKE Phase 2 for new child SA.
func (o IpsecPolicyOutput) PfsGroup() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.PfsGroup }).(pulumi.StringOutput)
}

// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
func (o IpsecPolicyOutput) SaDataSizeKilobytes() pulumi.IntOutput {
	return o.ApplyT(func(v IpsecPolicy) int { return v.SaDataSizeKilobytes }).(pulumi.IntOutput)
}

// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
func (o IpsecPolicyOutput) SaLifeTimeSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v IpsecPolicy) int { return v.SaLifeTimeSeconds }).(pulumi.IntOutput)
}

type IpsecPolicyArrayOutput struct{ *pulumi.OutputState }

func (IpsecPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecPolicy)(nil)).Elem()
}

func (o IpsecPolicyArrayOutput) ToIpsecPolicyArrayOutput() IpsecPolicyArrayOutput {
	return o
}

func (o IpsecPolicyArrayOutput) ToIpsecPolicyArrayOutputWithContext(ctx context.Context) IpsecPolicyArrayOutput {
	return o
}

func (o IpsecPolicyArrayOutput) Index(i pulumi.IntInput) IpsecPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsecPolicy {
		return vs[0].([]IpsecPolicy)[vs[1].(int)]
	}).(IpsecPolicyOutput)
}

// An IPSec Policy configuration for a virtual network gateway connection
type IpsecPolicyResponse struct {
	// The DH Groups used in IKE Phase 1 for initial SA.
	DhGroup string `pulumi:"dhGroup"`
	// The IKE encryption algorithm (IKE phase 2).
	IkeEncryption string `pulumi:"ikeEncryption"`
	// The IKE integrity algorithm (IKE phase 2).
	IkeIntegrity string `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm (IKE phase 1).
	IpsecEncryption string `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm (IKE phase 1).
	IpsecIntegrity string `pulumi:"ipsecIntegrity"`
	// The Pfs Groups used in IKE Phase 2 for new child SA.
	PfsGroup string `pulumi:"pfsGroup"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
	SaDataSizeKilobytes int `pulumi:"saDataSizeKilobytes"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
	SaLifeTimeSeconds int `pulumi:"saLifeTimeSeconds"`
}

// IpsecPolicyResponseInput is an input type that accepts IpsecPolicyResponseArgs and IpsecPolicyResponseOutput values.
// You can construct a concrete instance of `IpsecPolicyResponseInput` via:
//
//          IpsecPolicyResponseArgs{...}
type IpsecPolicyResponseInput interface {
	pulumi.Input

	ToIpsecPolicyResponseOutput() IpsecPolicyResponseOutput
	ToIpsecPolicyResponseOutputWithContext(context.Context) IpsecPolicyResponseOutput
}

// An IPSec Policy configuration for a virtual network gateway connection
type IpsecPolicyResponseArgs struct {
	// The DH Groups used in IKE Phase 1 for initial SA.
	DhGroup pulumi.StringInput `pulumi:"dhGroup"`
	// The IKE encryption algorithm (IKE phase 2).
	IkeEncryption pulumi.StringInput `pulumi:"ikeEncryption"`
	// The IKE integrity algorithm (IKE phase 2).
	IkeIntegrity pulumi.StringInput `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm (IKE phase 1).
	IpsecEncryption pulumi.StringInput `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm (IKE phase 1).
	IpsecIntegrity pulumi.StringInput `pulumi:"ipsecIntegrity"`
	// The Pfs Groups used in IKE Phase 2 for new child SA.
	PfsGroup pulumi.StringInput `pulumi:"pfsGroup"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
	SaDataSizeKilobytes pulumi.IntInput `pulumi:"saDataSizeKilobytes"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
	SaLifeTimeSeconds pulumi.IntInput `pulumi:"saLifeTimeSeconds"`
}

func (IpsecPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecPolicyResponse)(nil)).Elem()
}

func (i IpsecPolicyResponseArgs) ToIpsecPolicyResponseOutput() IpsecPolicyResponseOutput {
	return i.ToIpsecPolicyResponseOutputWithContext(context.Background())
}

func (i IpsecPolicyResponseArgs) ToIpsecPolicyResponseOutputWithContext(ctx context.Context) IpsecPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecPolicyResponseOutput)
}

// IpsecPolicyResponseArrayInput is an input type that accepts IpsecPolicyResponseArray and IpsecPolicyResponseArrayOutput values.
// You can construct a concrete instance of `IpsecPolicyResponseArrayInput` via:
//
//          IpsecPolicyResponseArray{ IpsecPolicyResponseArgs{...} }
type IpsecPolicyResponseArrayInput interface {
	pulumi.Input

	ToIpsecPolicyResponseArrayOutput() IpsecPolicyResponseArrayOutput
	ToIpsecPolicyResponseArrayOutputWithContext(context.Context) IpsecPolicyResponseArrayOutput
}

type IpsecPolicyResponseArray []IpsecPolicyResponseInput

func (IpsecPolicyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecPolicyResponse)(nil)).Elem()
}

func (i IpsecPolicyResponseArray) ToIpsecPolicyResponseArrayOutput() IpsecPolicyResponseArrayOutput {
	return i.ToIpsecPolicyResponseArrayOutputWithContext(context.Background())
}

func (i IpsecPolicyResponseArray) ToIpsecPolicyResponseArrayOutputWithContext(ctx context.Context) IpsecPolicyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecPolicyResponseArrayOutput)
}

// An IPSec Policy configuration for a virtual network gateway connection
type IpsecPolicyResponseOutput struct{ *pulumi.OutputState }

func (IpsecPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecPolicyResponse)(nil)).Elem()
}

func (o IpsecPolicyResponseOutput) ToIpsecPolicyResponseOutput() IpsecPolicyResponseOutput {
	return o
}

func (o IpsecPolicyResponseOutput) ToIpsecPolicyResponseOutputWithContext(ctx context.Context) IpsecPolicyResponseOutput {
	return o
}

// The DH Groups used in IKE Phase 1 for initial SA.
func (o IpsecPolicyResponseOutput) DhGroup() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.DhGroup }).(pulumi.StringOutput)
}

// The IKE encryption algorithm (IKE phase 2).
func (o IpsecPolicyResponseOutput) IkeEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.IkeEncryption }).(pulumi.StringOutput)
}

// The IKE integrity algorithm (IKE phase 2).
func (o IpsecPolicyResponseOutput) IkeIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.IkeIntegrity }).(pulumi.StringOutput)
}

// The IPSec encryption algorithm (IKE phase 1).
func (o IpsecPolicyResponseOutput) IpsecEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.IpsecEncryption }).(pulumi.StringOutput)
}

// The IPSec integrity algorithm (IKE phase 1).
func (o IpsecPolicyResponseOutput) IpsecIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.IpsecIntegrity }).(pulumi.StringOutput)
}

// The Pfs Groups used in IKE Phase 2 for new child SA.
func (o IpsecPolicyResponseOutput) PfsGroup() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.PfsGroup }).(pulumi.StringOutput)
}

// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
func (o IpsecPolicyResponseOutput) SaDataSizeKilobytes() pulumi.IntOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) int { return v.SaDataSizeKilobytes }).(pulumi.IntOutput)
}

// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
func (o IpsecPolicyResponseOutput) SaLifeTimeSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) int { return v.SaLifeTimeSeconds }).(pulumi.IntOutput)
}

type IpsecPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (IpsecPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecPolicyResponse)(nil)).Elem()
}

func (o IpsecPolicyResponseArrayOutput) ToIpsecPolicyResponseArrayOutput() IpsecPolicyResponseArrayOutput {
	return o
}

func (o IpsecPolicyResponseArrayOutput) ToIpsecPolicyResponseArrayOutputWithContext(ctx context.Context) IpsecPolicyResponseArrayOutput {
	return o
}

func (o IpsecPolicyResponseArrayOutput) Index(i pulumi.IntInput) IpsecPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsecPolicyResponse {
		return vs[0].([]IpsecPolicyResponse)[vs[1].(int)]
	}).(IpsecPolicyResponseOutput)
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfig struct {
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig *ExpressRouteCircuitPeeringConfig `pulumi:"microsoftPeeringConfig"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix *string `pulumi:"primaryPeerAddressPrefix"`
	// The reference of the RouteFilter resource.
	RouteFilter *RouteFilterDefinition `pulumi:"routeFilter"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix *string `pulumi:"secondaryPeerAddressPrefix"`
	// The state of peering. Possible values are: 'Disabled' and 'Enabled'
	State *string `pulumi:"state"`
}

// Ipv6ExpressRouteCircuitPeeringConfigInput is an input type that accepts Ipv6ExpressRouteCircuitPeeringConfigArgs and Ipv6ExpressRouteCircuitPeeringConfigOutput values.
// You can construct a concrete instance of `Ipv6ExpressRouteCircuitPeeringConfigInput` via:
//
//          Ipv6ExpressRouteCircuitPeeringConfigArgs{...}
type Ipv6ExpressRouteCircuitPeeringConfigInput interface {
	pulumi.Input

	ToIpv6ExpressRouteCircuitPeeringConfigOutput() Ipv6ExpressRouteCircuitPeeringConfigOutput
	ToIpv6ExpressRouteCircuitPeeringConfigOutputWithContext(context.Context) Ipv6ExpressRouteCircuitPeeringConfigOutput
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfigArgs struct {
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig ExpressRouteCircuitPeeringConfigPtrInput `pulumi:"microsoftPeeringConfig"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"primaryPeerAddressPrefix"`
	// The reference of the RouteFilter resource.
	RouteFilter RouteFilterDefinitionPtrInput `pulumi:"routeFilter"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"secondaryPeerAddressPrefix"`
	// The state of peering. Possible values are: 'Disabled' and 'Enabled'
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (Ipv6ExpressRouteCircuitPeeringConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (i Ipv6ExpressRouteCircuitPeeringConfigArgs) ToIpv6ExpressRouteCircuitPeeringConfigOutput() Ipv6ExpressRouteCircuitPeeringConfigOutput {
	return i.ToIpv6ExpressRouteCircuitPeeringConfigOutputWithContext(context.Background())
}

func (i Ipv6ExpressRouteCircuitPeeringConfigArgs) ToIpv6ExpressRouteCircuitPeeringConfigOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ExpressRouteCircuitPeeringConfigOutput)
}

func (i Ipv6ExpressRouteCircuitPeeringConfigArgs) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutput() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return i.ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (i Ipv6ExpressRouteCircuitPeeringConfigArgs) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ExpressRouteCircuitPeeringConfigOutput).ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx)
}

// Ipv6ExpressRouteCircuitPeeringConfigPtrInput is an input type that accepts Ipv6ExpressRouteCircuitPeeringConfigArgs, Ipv6ExpressRouteCircuitPeeringConfigPtr and Ipv6ExpressRouteCircuitPeeringConfigPtrOutput values.
// You can construct a concrete instance of `Ipv6ExpressRouteCircuitPeeringConfigPtrInput` via:
//
//          Ipv6ExpressRouteCircuitPeeringConfigArgs{...}
//
//  or:
//
//          nil
type Ipv6ExpressRouteCircuitPeeringConfigPtrInput interface {
	pulumi.Input

	ToIpv6ExpressRouteCircuitPeeringConfigPtrOutput() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput
	ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Context) Ipv6ExpressRouteCircuitPeeringConfigPtrOutput
}

type ipv6ExpressRouteCircuitPeeringConfigPtrType Ipv6ExpressRouteCircuitPeeringConfigArgs

func Ipv6ExpressRouteCircuitPeeringConfigPtr(v *Ipv6ExpressRouteCircuitPeeringConfigArgs) Ipv6ExpressRouteCircuitPeeringConfigPtrInput {
	return (*ipv6ExpressRouteCircuitPeeringConfigPtrType)(v)
}

func (*ipv6ExpressRouteCircuitPeeringConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (i *ipv6ExpressRouteCircuitPeeringConfigPtrType) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutput() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return i.ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (i *ipv6ExpressRouteCircuitPeeringConfigPtrType) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ExpressRouteCircuitPeeringConfigPtrOutput)
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfigOutput struct{ *pulumi.OutputState }

func (Ipv6ExpressRouteCircuitPeeringConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) ToIpv6ExpressRouteCircuitPeeringConfigOutput() Ipv6ExpressRouteCircuitPeeringConfigOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) ToIpv6ExpressRouteCircuitPeeringConfigOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutput() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *Ipv6ExpressRouteCircuitPeeringConfig {
		return &v
	}).(Ipv6ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The Microsoft peering configuration.
func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *ExpressRouteCircuitPeeringConfig {
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The primary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The reference of the RouteFilter resource.
func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) RouteFilter() RouteFilterDefinitionPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *RouteFilterDefinition { return v.RouteFilter }).(RouteFilterDefinitionPtrOutput)
}

// The secondary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *string { return v.SecondaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The state of peering. Possible values are: 'Disabled' and 'Enabled'
func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *string { return v.State }).(pulumi.StringPtrOutput)
}

type Ipv6ExpressRouteCircuitPeeringConfigPtrOutput struct{ *pulumi.OutputState }

func (Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutput() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) Elem() Ipv6ExpressRouteCircuitPeeringConfigOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) Ipv6ExpressRouteCircuitPeeringConfig { return *v }).(Ipv6ExpressRouteCircuitPeeringConfigOutput)
}

// The Microsoft peering configuration.
func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) *ExpressRouteCircuitPeeringConfig {
		if v == nil {
			return nil
		}
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The primary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The reference of the RouteFilter resource.
func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) RouteFilter() RouteFilterDefinitionPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) *RouteFilterDefinition {
		if v == nil {
			return nil
		}
		return v.RouteFilter
	}).(RouteFilterDefinitionPtrOutput)
}

// The secondary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The state of peering. Possible values are: 'Disabled' and 'Enabled'
func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfigResponse struct {
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig *ExpressRouteCircuitPeeringConfigResponse `pulumi:"microsoftPeeringConfig"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix *string `pulumi:"primaryPeerAddressPrefix"`
	// The reference of the RouteFilter resource.
	RouteFilter *RouteFilterResponse `pulumi:"routeFilter"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix *string `pulumi:"secondaryPeerAddressPrefix"`
	// The state of peering. Possible values are: 'Disabled' and 'Enabled'
	State *string `pulumi:"state"`
}

// Ipv6ExpressRouteCircuitPeeringConfigResponseInput is an input type that accepts Ipv6ExpressRouteCircuitPeeringConfigResponseArgs and Ipv6ExpressRouteCircuitPeeringConfigResponseOutput values.
// You can construct a concrete instance of `Ipv6ExpressRouteCircuitPeeringConfigResponseInput` via:
//
//          Ipv6ExpressRouteCircuitPeeringConfigResponseArgs{...}
type Ipv6ExpressRouteCircuitPeeringConfigResponseInput interface {
	pulumi.Input

	ToIpv6ExpressRouteCircuitPeeringConfigResponseOutput() Ipv6ExpressRouteCircuitPeeringConfigResponseOutput
	ToIpv6ExpressRouteCircuitPeeringConfigResponseOutputWithContext(context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponseOutput
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfigResponseArgs struct {
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig ExpressRouteCircuitPeeringConfigResponsePtrInput `pulumi:"microsoftPeeringConfig"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"primaryPeerAddressPrefix"`
	// The reference of the RouteFilter resource.
	RouteFilter RouteFilterResponsePtrInput `pulumi:"routeFilter"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"secondaryPeerAddressPrefix"`
	// The state of peering. Possible values are: 'Disabled' and 'Enabled'
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (Ipv6ExpressRouteCircuitPeeringConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (i Ipv6ExpressRouteCircuitPeeringConfigResponseArgs) ToIpv6ExpressRouteCircuitPeeringConfigResponseOutput() Ipv6ExpressRouteCircuitPeeringConfigResponseOutput {
	return i.ToIpv6ExpressRouteCircuitPeeringConfigResponseOutputWithContext(context.Background())
}

func (i Ipv6ExpressRouteCircuitPeeringConfigResponseArgs) ToIpv6ExpressRouteCircuitPeeringConfigResponseOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ExpressRouteCircuitPeeringConfigResponseOutput)
}

func (i Ipv6ExpressRouteCircuitPeeringConfigResponseArgs) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutput() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return i.ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Background())
}

func (i Ipv6ExpressRouteCircuitPeeringConfigResponseArgs) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ExpressRouteCircuitPeeringConfigResponseOutput).ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx)
}

// Ipv6ExpressRouteCircuitPeeringConfigResponsePtrInput is an input type that accepts Ipv6ExpressRouteCircuitPeeringConfigResponseArgs, Ipv6ExpressRouteCircuitPeeringConfigResponsePtr and Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput values.
// You can construct a concrete instance of `Ipv6ExpressRouteCircuitPeeringConfigResponsePtrInput` via:
//
//          Ipv6ExpressRouteCircuitPeeringConfigResponseArgs{...}
//
//  or:
//
//          nil
type Ipv6ExpressRouteCircuitPeeringConfigResponsePtrInput interface {
	pulumi.Input

	ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutput() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput
	ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput
}

type ipv6ExpressRouteCircuitPeeringConfigResponsePtrType Ipv6ExpressRouteCircuitPeeringConfigResponseArgs

func Ipv6ExpressRouteCircuitPeeringConfigResponsePtr(v *Ipv6ExpressRouteCircuitPeeringConfigResponseArgs) Ipv6ExpressRouteCircuitPeeringConfigResponsePtrInput {
	return (*ipv6ExpressRouteCircuitPeeringConfigResponsePtrType)(v)
}

func (*ipv6ExpressRouteCircuitPeeringConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (i *ipv6ExpressRouteCircuitPeeringConfigResponsePtrType) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutput() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return i.ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Background())
}

func (i *ipv6ExpressRouteCircuitPeeringConfigResponsePtrType) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfigResponseOutput struct{ *pulumi.OutputState }

func (Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) ToIpv6ExpressRouteCircuitPeeringConfigResponseOutput() Ipv6ExpressRouteCircuitPeeringConfigResponseOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) ToIpv6ExpressRouteCircuitPeeringConfigResponseOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponseOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutput() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Background())
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *Ipv6ExpressRouteCircuitPeeringConfigResponse {
		return &v
	}).(Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// The Microsoft peering configuration.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *ExpressRouteCircuitPeeringConfigResponse {
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// The primary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The reference of the RouteFilter resource.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) RouteFilter() RouteFilterResponsePtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *RouteFilterResponse { return v.RouteFilter }).(RouteFilterResponsePtrOutput)
}

// The secondary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *string { return v.SecondaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The state of peering. Possible values are: 'Disabled' and 'Enabled'
func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutput() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) Elem() Ipv6ExpressRouteCircuitPeeringConfigResponseOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) Ipv6ExpressRouteCircuitPeeringConfigResponse {
		return *v
	}).(Ipv6ExpressRouteCircuitPeeringConfigResponseOutput)
}

// The Microsoft peering configuration.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) *ExpressRouteCircuitPeeringConfigResponse {
		if v == nil {
			return nil
		}
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// The primary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The reference of the RouteFilter resource.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) RouteFilter() RouteFilterResponsePtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) *RouteFilterResponse {
		if v == nil {
			return nil
		}
		return v.RouteFilter
	}).(RouteFilterResponsePtrOutput)
}

// The secondary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The state of peering. Possible values are: 'Disabled' and 'Enabled'
func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// LoadBalancer resource
type LoadBalancerType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of load balancer.
	Properties LoadBalancerPropertiesFormatResponse `pulumi:"properties"`
	// The load balancer SKU.
	Sku *LoadBalancerSkuResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// LoadBalancerTypeInput is an input type that accepts LoadBalancerTypeArgs and LoadBalancerTypeOutput values.
// You can construct a concrete instance of `LoadBalancerTypeInput` via:
//
//          LoadBalancerTypeArgs{...}
type LoadBalancerTypeInput interface {
	pulumi.Input

	ToLoadBalancerTypeOutput() LoadBalancerTypeOutput
	ToLoadBalancerTypeOutputWithContext(context.Context) LoadBalancerTypeOutput
}

// LoadBalancer resource
type LoadBalancerTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of load balancer.
	Properties LoadBalancerPropertiesFormatResponseInput `pulumi:"properties"`
	// The load balancer SKU.
	Sku LoadBalancerSkuResponsePtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LoadBalancerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerType)(nil)).Elem()
}

func (i LoadBalancerTypeArgs) ToLoadBalancerTypeOutput() LoadBalancerTypeOutput {
	return i.ToLoadBalancerTypeOutputWithContext(context.Background())
}

func (i LoadBalancerTypeArgs) ToLoadBalancerTypeOutputWithContext(ctx context.Context) LoadBalancerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerTypeOutput)
}

// LoadBalancer resource
type LoadBalancerTypeOutput struct{ *pulumi.OutputState }

func (LoadBalancerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerType)(nil)).Elem()
}

func (o LoadBalancerTypeOutput) ToLoadBalancerTypeOutput() LoadBalancerTypeOutput {
	return o
}

func (o LoadBalancerTypeOutput) ToLoadBalancerTypeOutputWithContext(ctx context.Context) LoadBalancerTypeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o LoadBalancerTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o LoadBalancerTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LoadBalancerTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of load balancer.
func (o LoadBalancerTypeOutput) Properties() LoadBalancerPropertiesFormatResponseOutput {
	return o.ApplyT(func(v LoadBalancerType) LoadBalancerPropertiesFormatResponse { return v.Properties }).(LoadBalancerPropertiesFormatResponseOutput)
}

// The load balancer SKU.
func (o LoadBalancerTypeOutput) Sku() LoadBalancerSkuResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancerType) *LoadBalancerSkuResponse { return v.Sku }).(LoadBalancerSkuResponsePtrOutput)
}

// Resource tags.
func (o LoadBalancerTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LoadBalancerType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o LoadBalancerTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerType) string { return v.Type }).(pulumi.StringOutput)
}

// Properties of the load balancer.
type LoadBalancerPropertiesFormat struct {
	// Collection of backend address pools used by a load balancer
	BackendAddressPools []BackendAddressPool `pulumi:"backendAddressPools"`
	// Object representing the frontend IPs to be used for the load balancer
	FrontendIPConfigurations []FrontendIPConfiguration `pulumi:"frontendIPConfigurations"`
	// Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound Nat rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.
	InboundNatPools []InboundNatPool `pulumi:"inboundNatPools"`
	// Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.
	InboundNatRules []InboundNatRuleType `pulumi:"inboundNatRules"`
	// Object collection representing the load balancing rules Gets the provisioning
	LoadBalancingRules []LoadBalancingRule `pulumi:"loadBalancingRules"`
	// The outbound rules.
	OutboundRules []OutboundRule `pulumi:"outboundRules"`
	// Collection of probe objects used in the load balancer
	Probes []Probe `pulumi:"probes"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resource GUID property of the load balancer resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
}

// LoadBalancerPropertiesFormatInput is an input type that accepts LoadBalancerPropertiesFormatArgs and LoadBalancerPropertiesFormatOutput values.
// You can construct a concrete instance of `LoadBalancerPropertiesFormatInput` via:
//
//          LoadBalancerPropertiesFormatArgs{...}
type LoadBalancerPropertiesFormatInput interface {
	pulumi.Input

	ToLoadBalancerPropertiesFormatOutput() LoadBalancerPropertiesFormatOutput
	ToLoadBalancerPropertiesFormatOutputWithContext(context.Context) LoadBalancerPropertiesFormatOutput
}

// Properties of the load balancer.
type LoadBalancerPropertiesFormatArgs struct {
	// Collection of backend address pools used by a load balancer
	BackendAddressPools BackendAddressPoolArrayInput `pulumi:"backendAddressPools"`
	// Object representing the frontend IPs to be used for the load balancer
	FrontendIPConfigurations FrontendIPConfigurationArrayInput `pulumi:"frontendIPConfigurations"`
	// Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound Nat rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.
	InboundNatPools InboundNatPoolArrayInput `pulumi:"inboundNatPools"`
	// Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.
	InboundNatRules InboundNatRuleTypeArrayInput `pulumi:"inboundNatRules"`
	// Object collection representing the load balancing rules Gets the provisioning
	LoadBalancingRules LoadBalancingRuleArrayInput `pulumi:"loadBalancingRules"`
	// The outbound rules.
	OutboundRules OutboundRuleArrayInput `pulumi:"outboundRules"`
	// Collection of probe objects used in the load balancer
	Probes ProbeArrayInput `pulumi:"probes"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resource GUID property of the load balancer resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
}

func (LoadBalancerPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPropertiesFormat)(nil)).Elem()
}

func (i LoadBalancerPropertiesFormatArgs) ToLoadBalancerPropertiesFormatOutput() LoadBalancerPropertiesFormatOutput {
	return i.ToLoadBalancerPropertiesFormatOutputWithContext(context.Background())
}

func (i LoadBalancerPropertiesFormatArgs) ToLoadBalancerPropertiesFormatOutputWithContext(ctx context.Context) LoadBalancerPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPropertiesFormatOutput)
}

func (i LoadBalancerPropertiesFormatArgs) ToLoadBalancerPropertiesFormatPtrOutput() LoadBalancerPropertiesFormatPtrOutput {
	return i.ToLoadBalancerPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i LoadBalancerPropertiesFormatArgs) ToLoadBalancerPropertiesFormatPtrOutputWithContext(ctx context.Context) LoadBalancerPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPropertiesFormatOutput).ToLoadBalancerPropertiesFormatPtrOutputWithContext(ctx)
}

// LoadBalancerPropertiesFormatPtrInput is an input type that accepts LoadBalancerPropertiesFormatArgs, LoadBalancerPropertiesFormatPtr and LoadBalancerPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `LoadBalancerPropertiesFormatPtrInput` via:
//
//          LoadBalancerPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type LoadBalancerPropertiesFormatPtrInput interface {
	pulumi.Input

	ToLoadBalancerPropertiesFormatPtrOutput() LoadBalancerPropertiesFormatPtrOutput
	ToLoadBalancerPropertiesFormatPtrOutputWithContext(context.Context) LoadBalancerPropertiesFormatPtrOutput
}

type loadBalancerPropertiesFormatPtrType LoadBalancerPropertiesFormatArgs

func LoadBalancerPropertiesFormatPtr(v *LoadBalancerPropertiesFormatArgs) LoadBalancerPropertiesFormatPtrInput {
	return (*loadBalancerPropertiesFormatPtrType)(v)
}

func (*loadBalancerPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerPropertiesFormat)(nil)).Elem()
}

func (i *loadBalancerPropertiesFormatPtrType) ToLoadBalancerPropertiesFormatPtrOutput() LoadBalancerPropertiesFormatPtrOutput {
	return i.ToLoadBalancerPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *loadBalancerPropertiesFormatPtrType) ToLoadBalancerPropertiesFormatPtrOutputWithContext(ctx context.Context) LoadBalancerPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPropertiesFormatPtrOutput)
}

// Properties of the load balancer.
type LoadBalancerPropertiesFormatOutput struct{ *pulumi.OutputState }

func (LoadBalancerPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPropertiesFormat)(nil)).Elem()
}

func (o LoadBalancerPropertiesFormatOutput) ToLoadBalancerPropertiesFormatOutput() LoadBalancerPropertiesFormatOutput {
	return o
}

func (o LoadBalancerPropertiesFormatOutput) ToLoadBalancerPropertiesFormatOutputWithContext(ctx context.Context) LoadBalancerPropertiesFormatOutput {
	return o
}

func (o LoadBalancerPropertiesFormatOutput) ToLoadBalancerPropertiesFormatPtrOutput() LoadBalancerPropertiesFormatPtrOutput {
	return o.ToLoadBalancerPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o LoadBalancerPropertiesFormatOutput) ToLoadBalancerPropertiesFormatPtrOutputWithContext(ctx context.Context) LoadBalancerPropertiesFormatPtrOutput {
	return o.ApplyT(func(v LoadBalancerPropertiesFormat) *LoadBalancerPropertiesFormat {
		return &v
	}).(LoadBalancerPropertiesFormatPtrOutput)
}

// Collection of backend address pools used by a load balancer
func (o LoadBalancerPropertiesFormatOutput) BackendAddressPools() BackendAddressPoolArrayOutput {
	return o.ApplyT(func(v LoadBalancerPropertiesFormat) []BackendAddressPool { return v.BackendAddressPools }).(BackendAddressPoolArrayOutput)
}

// Object representing the frontend IPs to be used for the load balancer
func (o LoadBalancerPropertiesFormatOutput) FrontendIPConfigurations() FrontendIPConfigurationArrayOutput {
	return o.ApplyT(func(v LoadBalancerPropertiesFormat) []FrontendIPConfiguration { return v.FrontendIPConfigurations }).(FrontendIPConfigurationArrayOutput)
}

// Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound Nat rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.
func (o LoadBalancerPropertiesFormatOutput) InboundNatPools() InboundNatPoolArrayOutput {
	return o.ApplyT(func(v LoadBalancerPropertiesFormat) []InboundNatPool { return v.InboundNatPools }).(InboundNatPoolArrayOutput)
}

// Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.
func (o LoadBalancerPropertiesFormatOutput) InboundNatRules() InboundNatRuleTypeArrayOutput {
	return o.ApplyT(func(v LoadBalancerPropertiesFormat) []InboundNatRuleType { return v.InboundNatRules }).(InboundNatRuleTypeArrayOutput)
}

// Object collection representing the load balancing rules Gets the provisioning
func (o LoadBalancerPropertiesFormatOutput) LoadBalancingRules() LoadBalancingRuleArrayOutput {
	return o.ApplyT(func(v LoadBalancerPropertiesFormat) []LoadBalancingRule { return v.LoadBalancingRules }).(LoadBalancingRuleArrayOutput)
}

// The outbound rules.
func (o LoadBalancerPropertiesFormatOutput) OutboundRules() OutboundRuleArrayOutput {
	return o.ApplyT(func(v LoadBalancerPropertiesFormat) []OutboundRule { return v.OutboundRules }).(OutboundRuleArrayOutput)
}

// Collection of probe objects used in the load balancer
func (o LoadBalancerPropertiesFormatOutput) Probes() ProbeArrayOutput {
	return o.ApplyT(func(v LoadBalancerPropertiesFormat) []Probe { return v.Probes }).(ProbeArrayOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o LoadBalancerPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the load balancer resource.
func (o LoadBalancerPropertiesFormatOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerPropertiesFormat) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

type LoadBalancerPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerPropertiesFormat)(nil)).Elem()
}

func (o LoadBalancerPropertiesFormatPtrOutput) ToLoadBalancerPropertiesFormatPtrOutput() LoadBalancerPropertiesFormatPtrOutput {
	return o
}

func (o LoadBalancerPropertiesFormatPtrOutput) ToLoadBalancerPropertiesFormatPtrOutputWithContext(ctx context.Context) LoadBalancerPropertiesFormatPtrOutput {
	return o
}

func (o LoadBalancerPropertiesFormatPtrOutput) Elem() LoadBalancerPropertiesFormatOutput {
	return o.ApplyT(func(v *LoadBalancerPropertiesFormat) LoadBalancerPropertiesFormat { return *v }).(LoadBalancerPropertiesFormatOutput)
}

// Collection of backend address pools used by a load balancer
func (o LoadBalancerPropertiesFormatPtrOutput) BackendAddressPools() BackendAddressPoolArrayOutput {
	return o.ApplyT(func(v *LoadBalancerPropertiesFormat) []BackendAddressPool {
		if v == nil {
			return nil
		}
		return v.BackendAddressPools
	}).(BackendAddressPoolArrayOutput)
}

// Object representing the frontend IPs to be used for the load balancer
func (o LoadBalancerPropertiesFormatPtrOutput) FrontendIPConfigurations() FrontendIPConfigurationArrayOutput {
	return o.ApplyT(func(v *LoadBalancerPropertiesFormat) []FrontendIPConfiguration {
		if v == nil {
			return nil
		}
		return v.FrontendIPConfigurations
	}).(FrontendIPConfigurationArrayOutput)
}

// Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound Nat rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.
func (o LoadBalancerPropertiesFormatPtrOutput) InboundNatPools() InboundNatPoolArrayOutput {
	return o.ApplyT(func(v *LoadBalancerPropertiesFormat) []InboundNatPool {
		if v == nil {
			return nil
		}
		return v.InboundNatPools
	}).(InboundNatPoolArrayOutput)
}

// Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.
func (o LoadBalancerPropertiesFormatPtrOutput) InboundNatRules() InboundNatRuleTypeArrayOutput {
	return o.ApplyT(func(v *LoadBalancerPropertiesFormat) []InboundNatRuleType {
		if v == nil {
			return nil
		}
		return v.InboundNatRules
	}).(InboundNatRuleTypeArrayOutput)
}

// Object collection representing the load balancing rules Gets the provisioning
func (o LoadBalancerPropertiesFormatPtrOutput) LoadBalancingRules() LoadBalancingRuleArrayOutput {
	return o.ApplyT(func(v *LoadBalancerPropertiesFormat) []LoadBalancingRule {
		if v == nil {
			return nil
		}
		return v.LoadBalancingRules
	}).(LoadBalancingRuleArrayOutput)
}

// The outbound rules.
func (o LoadBalancerPropertiesFormatPtrOutput) OutboundRules() OutboundRuleArrayOutput {
	return o.ApplyT(func(v *LoadBalancerPropertiesFormat) []OutboundRule {
		if v == nil {
			return nil
		}
		return v.OutboundRules
	}).(OutboundRuleArrayOutput)
}

// Collection of probe objects used in the load balancer
func (o LoadBalancerPropertiesFormatPtrOutput) Probes() ProbeArrayOutput {
	return o.ApplyT(func(v *LoadBalancerPropertiesFormat) []Probe {
		if v == nil {
			return nil
		}
		return v.Probes
	}).(ProbeArrayOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o LoadBalancerPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the load balancer resource.
func (o LoadBalancerPropertiesFormatPtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Properties of the load balancer.
type LoadBalancerPropertiesFormatResponse struct {
	// Collection of backend address pools used by a load balancer
	BackendAddressPools []BackendAddressPoolResponse `pulumi:"backendAddressPools"`
	// Object representing the frontend IPs to be used for the load balancer
	FrontendIPConfigurations []FrontendIPConfigurationResponse `pulumi:"frontendIPConfigurations"`
	// Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound Nat rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.
	InboundNatPools []InboundNatPoolResponse `pulumi:"inboundNatPools"`
	// Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.
	InboundNatRules []InboundNatRuleResponse `pulumi:"inboundNatRules"`
	// Object collection representing the load balancing rules Gets the provisioning
	LoadBalancingRules []LoadBalancingRuleResponse `pulumi:"loadBalancingRules"`
	// The outbound rules.
	OutboundRules []OutboundRuleResponse `pulumi:"outboundRules"`
	// Collection of probe objects used in the load balancer
	Probes []ProbeResponse `pulumi:"probes"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resource GUID property of the load balancer resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
}

// LoadBalancerPropertiesFormatResponseInput is an input type that accepts LoadBalancerPropertiesFormatResponseArgs and LoadBalancerPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `LoadBalancerPropertiesFormatResponseInput` via:
//
//          LoadBalancerPropertiesFormatResponseArgs{...}
type LoadBalancerPropertiesFormatResponseInput interface {
	pulumi.Input

	ToLoadBalancerPropertiesFormatResponseOutput() LoadBalancerPropertiesFormatResponseOutput
	ToLoadBalancerPropertiesFormatResponseOutputWithContext(context.Context) LoadBalancerPropertiesFormatResponseOutput
}

// Properties of the load balancer.
type LoadBalancerPropertiesFormatResponseArgs struct {
	// Collection of backend address pools used by a load balancer
	BackendAddressPools BackendAddressPoolResponseArrayInput `pulumi:"backendAddressPools"`
	// Object representing the frontend IPs to be used for the load balancer
	FrontendIPConfigurations FrontendIPConfigurationResponseArrayInput `pulumi:"frontendIPConfigurations"`
	// Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound Nat rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.
	InboundNatPools InboundNatPoolResponseArrayInput `pulumi:"inboundNatPools"`
	// Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.
	InboundNatRules InboundNatRuleResponseArrayInput `pulumi:"inboundNatRules"`
	// Object collection representing the load balancing rules Gets the provisioning
	LoadBalancingRules LoadBalancingRuleResponseArrayInput `pulumi:"loadBalancingRules"`
	// The outbound rules.
	OutboundRules OutboundRuleResponseArrayInput `pulumi:"outboundRules"`
	// Collection of probe objects used in the load balancer
	Probes ProbeResponseArrayInput `pulumi:"probes"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resource GUID property of the load balancer resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
}

func (LoadBalancerPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPropertiesFormatResponse)(nil)).Elem()
}

func (i LoadBalancerPropertiesFormatResponseArgs) ToLoadBalancerPropertiesFormatResponseOutput() LoadBalancerPropertiesFormatResponseOutput {
	return i.ToLoadBalancerPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i LoadBalancerPropertiesFormatResponseArgs) ToLoadBalancerPropertiesFormatResponseOutputWithContext(ctx context.Context) LoadBalancerPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPropertiesFormatResponseOutput)
}

func (i LoadBalancerPropertiesFormatResponseArgs) ToLoadBalancerPropertiesFormatResponsePtrOutput() LoadBalancerPropertiesFormatResponsePtrOutput {
	return i.ToLoadBalancerPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i LoadBalancerPropertiesFormatResponseArgs) ToLoadBalancerPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) LoadBalancerPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPropertiesFormatResponseOutput).ToLoadBalancerPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// LoadBalancerPropertiesFormatResponsePtrInput is an input type that accepts LoadBalancerPropertiesFormatResponseArgs, LoadBalancerPropertiesFormatResponsePtr and LoadBalancerPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `LoadBalancerPropertiesFormatResponsePtrInput` via:
//
//          LoadBalancerPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type LoadBalancerPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToLoadBalancerPropertiesFormatResponsePtrOutput() LoadBalancerPropertiesFormatResponsePtrOutput
	ToLoadBalancerPropertiesFormatResponsePtrOutputWithContext(context.Context) LoadBalancerPropertiesFormatResponsePtrOutput
}

type loadBalancerPropertiesFormatResponsePtrType LoadBalancerPropertiesFormatResponseArgs

func LoadBalancerPropertiesFormatResponsePtr(v *LoadBalancerPropertiesFormatResponseArgs) LoadBalancerPropertiesFormatResponsePtrInput {
	return (*loadBalancerPropertiesFormatResponsePtrType)(v)
}

func (*loadBalancerPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerPropertiesFormatResponse)(nil)).Elem()
}

func (i *loadBalancerPropertiesFormatResponsePtrType) ToLoadBalancerPropertiesFormatResponsePtrOutput() LoadBalancerPropertiesFormatResponsePtrOutput {
	return i.ToLoadBalancerPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *loadBalancerPropertiesFormatResponsePtrType) ToLoadBalancerPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) LoadBalancerPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPropertiesFormatResponsePtrOutput)
}

// Properties of the load balancer.
type LoadBalancerPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPropertiesFormatResponse)(nil)).Elem()
}

func (o LoadBalancerPropertiesFormatResponseOutput) ToLoadBalancerPropertiesFormatResponseOutput() LoadBalancerPropertiesFormatResponseOutput {
	return o
}

func (o LoadBalancerPropertiesFormatResponseOutput) ToLoadBalancerPropertiesFormatResponseOutputWithContext(ctx context.Context) LoadBalancerPropertiesFormatResponseOutput {
	return o
}

func (o LoadBalancerPropertiesFormatResponseOutput) ToLoadBalancerPropertiesFormatResponsePtrOutput() LoadBalancerPropertiesFormatResponsePtrOutput {
	return o.ToLoadBalancerPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o LoadBalancerPropertiesFormatResponseOutput) ToLoadBalancerPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) LoadBalancerPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancerPropertiesFormatResponse) *LoadBalancerPropertiesFormatResponse {
		return &v
	}).(LoadBalancerPropertiesFormatResponsePtrOutput)
}

// Collection of backend address pools used by a load balancer
func (o LoadBalancerPropertiesFormatResponseOutput) BackendAddressPools() BackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v LoadBalancerPropertiesFormatResponse) []BackendAddressPoolResponse {
		return v.BackendAddressPools
	}).(BackendAddressPoolResponseArrayOutput)
}

// Object representing the frontend IPs to be used for the load balancer
func (o LoadBalancerPropertiesFormatResponseOutput) FrontendIPConfigurations() FrontendIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v LoadBalancerPropertiesFormatResponse) []FrontendIPConfigurationResponse {
		return v.FrontendIPConfigurations
	}).(FrontendIPConfigurationResponseArrayOutput)
}

// Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound Nat rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.
func (o LoadBalancerPropertiesFormatResponseOutput) InboundNatPools() InboundNatPoolResponseArrayOutput {
	return o.ApplyT(func(v LoadBalancerPropertiesFormatResponse) []InboundNatPoolResponse { return v.InboundNatPools }).(InboundNatPoolResponseArrayOutput)
}

// Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.
func (o LoadBalancerPropertiesFormatResponseOutput) InboundNatRules() InboundNatRuleResponseArrayOutput {
	return o.ApplyT(func(v LoadBalancerPropertiesFormatResponse) []InboundNatRuleResponse { return v.InboundNatRules }).(InboundNatRuleResponseArrayOutput)
}

// Object collection representing the load balancing rules Gets the provisioning
func (o LoadBalancerPropertiesFormatResponseOutput) LoadBalancingRules() LoadBalancingRuleResponseArrayOutput {
	return o.ApplyT(func(v LoadBalancerPropertiesFormatResponse) []LoadBalancingRuleResponse { return v.LoadBalancingRules }).(LoadBalancingRuleResponseArrayOutput)
}

// The outbound rules.
func (o LoadBalancerPropertiesFormatResponseOutput) OutboundRules() OutboundRuleResponseArrayOutput {
	return o.ApplyT(func(v LoadBalancerPropertiesFormatResponse) []OutboundRuleResponse { return v.OutboundRules }).(OutboundRuleResponseArrayOutput)
}

// Collection of probe objects used in the load balancer
func (o LoadBalancerPropertiesFormatResponseOutput) Probes() ProbeResponseArrayOutput {
	return o.ApplyT(func(v LoadBalancerPropertiesFormatResponse) []ProbeResponse { return v.Probes }).(ProbeResponseArrayOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o LoadBalancerPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the load balancer resource.
func (o LoadBalancerPropertiesFormatResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerPropertiesFormatResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

type LoadBalancerPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerPropertiesFormatResponse)(nil)).Elem()
}

func (o LoadBalancerPropertiesFormatResponsePtrOutput) ToLoadBalancerPropertiesFormatResponsePtrOutput() LoadBalancerPropertiesFormatResponsePtrOutput {
	return o
}

func (o LoadBalancerPropertiesFormatResponsePtrOutput) ToLoadBalancerPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) LoadBalancerPropertiesFormatResponsePtrOutput {
	return o
}

func (o LoadBalancerPropertiesFormatResponsePtrOutput) Elem() LoadBalancerPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *LoadBalancerPropertiesFormatResponse) LoadBalancerPropertiesFormatResponse { return *v }).(LoadBalancerPropertiesFormatResponseOutput)
}

// Collection of backend address pools used by a load balancer
func (o LoadBalancerPropertiesFormatResponsePtrOutput) BackendAddressPools() BackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v *LoadBalancerPropertiesFormatResponse) []BackendAddressPoolResponse {
		if v == nil {
			return nil
		}
		return v.BackendAddressPools
	}).(BackendAddressPoolResponseArrayOutput)
}

// Object representing the frontend IPs to be used for the load balancer
func (o LoadBalancerPropertiesFormatResponsePtrOutput) FrontendIPConfigurations() FrontendIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *LoadBalancerPropertiesFormatResponse) []FrontendIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.FrontendIPConfigurations
	}).(FrontendIPConfigurationResponseArrayOutput)
}

// Defines an external port range for inbound NAT to a single backend port on NICs associated with a load balancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external port from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound Nat rules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.
func (o LoadBalancerPropertiesFormatResponsePtrOutput) InboundNatPools() InboundNatPoolResponseArrayOutput {
	return o.ApplyT(func(v *LoadBalancerPropertiesFormatResponse) []InboundNatPoolResponse {
		if v == nil {
			return nil
		}
		return v.InboundNatPools
	}).(InboundNatPoolResponseArrayOutput)
}

// Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load balancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to reference individual inbound NAT rules.
func (o LoadBalancerPropertiesFormatResponsePtrOutput) InboundNatRules() InboundNatRuleResponseArrayOutput {
	return o.ApplyT(func(v *LoadBalancerPropertiesFormatResponse) []InboundNatRuleResponse {
		if v == nil {
			return nil
		}
		return v.InboundNatRules
	}).(InboundNatRuleResponseArrayOutput)
}

// Object collection representing the load balancing rules Gets the provisioning
func (o LoadBalancerPropertiesFormatResponsePtrOutput) LoadBalancingRules() LoadBalancingRuleResponseArrayOutput {
	return o.ApplyT(func(v *LoadBalancerPropertiesFormatResponse) []LoadBalancingRuleResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancingRules
	}).(LoadBalancingRuleResponseArrayOutput)
}

// The outbound rules.
func (o LoadBalancerPropertiesFormatResponsePtrOutput) OutboundRules() OutboundRuleResponseArrayOutput {
	return o.ApplyT(func(v *LoadBalancerPropertiesFormatResponse) []OutboundRuleResponse {
		if v == nil {
			return nil
		}
		return v.OutboundRules
	}).(OutboundRuleResponseArrayOutput)
}

// Collection of probe objects used in the load balancer
func (o LoadBalancerPropertiesFormatResponsePtrOutput) Probes() ProbeResponseArrayOutput {
	return o.ApplyT(func(v *LoadBalancerPropertiesFormatResponse) []ProbeResponse {
		if v == nil {
			return nil
		}
		return v.Probes
	}).(ProbeResponseArrayOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o LoadBalancerPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the load balancer resource.
func (o LoadBalancerPropertiesFormatResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// SKU of a load balancer
type LoadBalancerSku struct {
	// Name of a load balancer SKU.
	Name *string `pulumi:"name"`
}

// LoadBalancerSkuInput is an input type that accepts LoadBalancerSkuArgs and LoadBalancerSkuOutput values.
// You can construct a concrete instance of `LoadBalancerSkuInput` via:
//
//          LoadBalancerSkuArgs{...}
type LoadBalancerSkuInput interface {
	pulumi.Input

	ToLoadBalancerSkuOutput() LoadBalancerSkuOutput
	ToLoadBalancerSkuOutputWithContext(context.Context) LoadBalancerSkuOutput
}

// SKU of a load balancer
type LoadBalancerSkuArgs struct {
	// Name of a load balancer SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LoadBalancerSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSku)(nil)).Elem()
}

func (i LoadBalancerSkuArgs) ToLoadBalancerSkuOutput() LoadBalancerSkuOutput {
	return i.ToLoadBalancerSkuOutputWithContext(context.Background())
}

func (i LoadBalancerSkuArgs) ToLoadBalancerSkuOutputWithContext(ctx context.Context) LoadBalancerSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSkuOutput)
}

func (i LoadBalancerSkuArgs) ToLoadBalancerSkuPtrOutput() LoadBalancerSkuPtrOutput {
	return i.ToLoadBalancerSkuPtrOutputWithContext(context.Background())
}

func (i LoadBalancerSkuArgs) ToLoadBalancerSkuPtrOutputWithContext(ctx context.Context) LoadBalancerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSkuOutput).ToLoadBalancerSkuPtrOutputWithContext(ctx)
}

// LoadBalancerSkuPtrInput is an input type that accepts LoadBalancerSkuArgs, LoadBalancerSkuPtr and LoadBalancerSkuPtrOutput values.
// You can construct a concrete instance of `LoadBalancerSkuPtrInput` via:
//
//          LoadBalancerSkuArgs{...}
//
//  or:
//
//          nil
type LoadBalancerSkuPtrInput interface {
	pulumi.Input

	ToLoadBalancerSkuPtrOutput() LoadBalancerSkuPtrOutput
	ToLoadBalancerSkuPtrOutputWithContext(context.Context) LoadBalancerSkuPtrOutput
}

type loadBalancerSkuPtrType LoadBalancerSkuArgs

func LoadBalancerSkuPtr(v *LoadBalancerSkuArgs) LoadBalancerSkuPtrInput {
	return (*loadBalancerSkuPtrType)(v)
}

func (*loadBalancerSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerSku)(nil)).Elem()
}

func (i *loadBalancerSkuPtrType) ToLoadBalancerSkuPtrOutput() LoadBalancerSkuPtrOutput {
	return i.ToLoadBalancerSkuPtrOutputWithContext(context.Background())
}

func (i *loadBalancerSkuPtrType) ToLoadBalancerSkuPtrOutputWithContext(ctx context.Context) LoadBalancerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSkuPtrOutput)
}

// SKU of a load balancer
type LoadBalancerSkuOutput struct{ *pulumi.OutputState }

func (LoadBalancerSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSku)(nil)).Elem()
}

func (o LoadBalancerSkuOutput) ToLoadBalancerSkuOutput() LoadBalancerSkuOutput {
	return o
}

func (o LoadBalancerSkuOutput) ToLoadBalancerSkuOutputWithContext(ctx context.Context) LoadBalancerSkuOutput {
	return o
}

func (o LoadBalancerSkuOutput) ToLoadBalancerSkuPtrOutput() LoadBalancerSkuPtrOutput {
	return o.ToLoadBalancerSkuPtrOutputWithContext(context.Background())
}

func (o LoadBalancerSkuOutput) ToLoadBalancerSkuPtrOutputWithContext(ctx context.Context) LoadBalancerSkuPtrOutput {
	return o.ApplyT(func(v LoadBalancerSku) *LoadBalancerSku {
		return &v
	}).(LoadBalancerSkuPtrOutput)
}

// Name of a load balancer SKU.
func (o LoadBalancerSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LoadBalancerSkuPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerSku)(nil)).Elem()
}

func (o LoadBalancerSkuPtrOutput) ToLoadBalancerSkuPtrOutput() LoadBalancerSkuPtrOutput {
	return o
}

func (o LoadBalancerSkuPtrOutput) ToLoadBalancerSkuPtrOutputWithContext(ctx context.Context) LoadBalancerSkuPtrOutput {
	return o
}

func (o LoadBalancerSkuPtrOutput) Elem() LoadBalancerSkuOutput {
	return o.ApplyT(func(v *LoadBalancerSku) LoadBalancerSku { return *v }).(LoadBalancerSkuOutput)
}

// Name of a load balancer SKU.
func (o LoadBalancerSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// SKU of a load balancer
type LoadBalancerSkuResponse struct {
	// Name of a load balancer SKU.
	Name *string `pulumi:"name"`
}

// LoadBalancerSkuResponseInput is an input type that accepts LoadBalancerSkuResponseArgs and LoadBalancerSkuResponseOutput values.
// You can construct a concrete instance of `LoadBalancerSkuResponseInput` via:
//
//          LoadBalancerSkuResponseArgs{...}
type LoadBalancerSkuResponseInput interface {
	pulumi.Input

	ToLoadBalancerSkuResponseOutput() LoadBalancerSkuResponseOutput
	ToLoadBalancerSkuResponseOutputWithContext(context.Context) LoadBalancerSkuResponseOutput
}

// SKU of a load balancer
type LoadBalancerSkuResponseArgs struct {
	// Name of a load balancer SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LoadBalancerSkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSkuResponse)(nil)).Elem()
}

func (i LoadBalancerSkuResponseArgs) ToLoadBalancerSkuResponseOutput() LoadBalancerSkuResponseOutput {
	return i.ToLoadBalancerSkuResponseOutputWithContext(context.Background())
}

func (i LoadBalancerSkuResponseArgs) ToLoadBalancerSkuResponseOutputWithContext(ctx context.Context) LoadBalancerSkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSkuResponseOutput)
}

func (i LoadBalancerSkuResponseArgs) ToLoadBalancerSkuResponsePtrOutput() LoadBalancerSkuResponsePtrOutput {
	return i.ToLoadBalancerSkuResponsePtrOutputWithContext(context.Background())
}

func (i LoadBalancerSkuResponseArgs) ToLoadBalancerSkuResponsePtrOutputWithContext(ctx context.Context) LoadBalancerSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSkuResponseOutput).ToLoadBalancerSkuResponsePtrOutputWithContext(ctx)
}

// LoadBalancerSkuResponsePtrInput is an input type that accepts LoadBalancerSkuResponseArgs, LoadBalancerSkuResponsePtr and LoadBalancerSkuResponsePtrOutput values.
// You can construct a concrete instance of `LoadBalancerSkuResponsePtrInput` via:
//
//          LoadBalancerSkuResponseArgs{...}
//
//  or:
//
//          nil
type LoadBalancerSkuResponsePtrInput interface {
	pulumi.Input

	ToLoadBalancerSkuResponsePtrOutput() LoadBalancerSkuResponsePtrOutput
	ToLoadBalancerSkuResponsePtrOutputWithContext(context.Context) LoadBalancerSkuResponsePtrOutput
}

type loadBalancerSkuResponsePtrType LoadBalancerSkuResponseArgs

func LoadBalancerSkuResponsePtr(v *LoadBalancerSkuResponseArgs) LoadBalancerSkuResponsePtrInput {
	return (*loadBalancerSkuResponsePtrType)(v)
}

func (*loadBalancerSkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerSkuResponse)(nil)).Elem()
}

func (i *loadBalancerSkuResponsePtrType) ToLoadBalancerSkuResponsePtrOutput() LoadBalancerSkuResponsePtrOutput {
	return i.ToLoadBalancerSkuResponsePtrOutputWithContext(context.Background())
}

func (i *loadBalancerSkuResponsePtrType) ToLoadBalancerSkuResponsePtrOutputWithContext(ctx context.Context) LoadBalancerSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSkuResponsePtrOutput)
}

// SKU of a load balancer
type LoadBalancerSkuResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSkuResponse)(nil)).Elem()
}

func (o LoadBalancerSkuResponseOutput) ToLoadBalancerSkuResponseOutput() LoadBalancerSkuResponseOutput {
	return o
}

func (o LoadBalancerSkuResponseOutput) ToLoadBalancerSkuResponseOutputWithContext(ctx context.Context) LoadBalancerSkuResponseOutput {
	return o
}

func (o LoadBalancerSkuResponseOutput) ToLoadBalancerSkuResponsePtrOutput() LoadBalancerSkuResponsePtrOutput {
	return o.ToLoadBalancerSkuResponsePtrOutputWithContext(context.Background())
}

func (o LoadBalancerSkuResponseOutput) ToLoadBalancerSkuResponsePtrOutputWithContext(ctx context.Context) LoadBalancerSkuResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancerSkuResponse) *LoadBalancerSkuResponse {
		return &v
	}).(LoadBalancerSkuResponsePtrOutput)
}

// Name of a load balancer SKU.
func (o LoadBalancerSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LoadBalancerSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerSkuResponse)(nil)).Elem()
}

func (o LoadBalancerSkuResponsePtrOutput) ToLoadBalancerSkuResponsePtrOutput() LoadBalancerSkuResponsePtrOutput {
	return o
}

func (o LoadBalancerSkuResponsePtrOutput) ToLoadBalancerSkuResponsePtrOutputWithContext(ctx context.Context) LoadBalancerSkuResponsePtrOutput {
	return o
}

func (o LoadBalancerSkuResponsePtrOutput) Elem() LoadBalancerSkuResponseOutput {
	return o.ApplyT(func(v *LoadBalancerSkuResponse) LoadBalancerSkuResponse { return *v }).(LoadBalancerSkuResponseOutput)
}

// Name of a load balancer SKU.
func (o LoadBalancerSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A load balancing rule for a load balancer.
type LoadBalancingRule struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of load balancer load balancing rule.
	Properties *LoadBalancingRulePropertiesFormat `pulumi:"properties"`
}

// LoadBalancingRuleInput is an input type that accepts LoadBalancingRuleArgs and LoadBalancingRuleOutput values.
// You can construct a concrete instance of `LoadBalancingRuleInput` via:
//
//          LoadBalancingRuleArgs{...}
type LoadBalancingRuleInput interface {
	pulumi.Input

	ToLoadBalancingRuleOutput() LoadBalancingRuleOutput
	ToLoadBalancingRuleOutputWithContext(context.Context) LoadBalancingRuleOutput
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of load balancer load balancing rule.
	Properties LoadBalancingRulePropertiesFormatPtrInput `pulumi:"properties"`
}

func (LoadBalancingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRule)(nil)).Elem()
}

func (i LoadBalancingRuleArgs) ToLoadBalancingRuleOutput() LoadBalancingRuleOutput {
	return i.ToLoadBalancingRuleOutputWithContext(context.Background())
}

func (i LoadBalancingRuleArgs) ToLoadBalancingRuleOutputWithContext(ctx context.Context) LoadBalancingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRuleOutput)
}

// LoadBalancingRuleArrayInput is an input type that accepts LoadBalancingRuleArray and LoadBalancingRuleArrayOutput values.
// You can construct a concrete instance of `LoadBalancingRuleArrayInput` via:
//
//          LoadBalancingRuleArray{ LoadBalancingRuleArgs{...} }
type LoadBalancingRuleArrayInput interface {
	pulumi.Input

	ToLoadBalancingRuleArrayOutput() LoadBalancingRuleArrayOutput
	ToLoadBalancingRuleArrayOutputWithContext(context.Context) LoadBalancingRuleArrayOutput
}

type LoadBalancingRuleArray []LoadBalancingRuleInput

func (LoadBalancingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingRule)(nil)).Elem()
}

func (i LoadBalancingRuleArray) ToLoadBalancingRuleArrayOutput() LoadBalancingRuleArrayOutput {
	return i.ToLoadBalancingRuleArrayOutputWithContext(context.Background())
}

func (i LoadBalancingRuleArray) ToLoadBalancingRuleArrayOutputWithContext(ctx context.Context) LoadBalancingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRuleArrayOutput)
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleOutput struct{ *pulumi.OutputState }

func (LoadBalancingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRule)(nil)).Elem()
}

func (o LoadBalancingRuleOutput) ToLoadBalancingRuleOutput() LoadBalancingRuleOutput {
	return o
}

func (o LoadBalancingRuleOutput) ToLoadBalancingRuleOutputWithContext(ctx context.Context) LoadBalancingRuleOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o LoadBalancingRuleOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o LoadBalancingRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o LoadBalancingRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of load balancer load balancing rule.
func (o LoadBalancingRuleOutput) Properties() LoadBalancingRulePropertiesFormatPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *LoadBalancingRulePropertiesFormat { return v.Properties }).(LoadBalancingRulePropertiesFormatPtrOutput)
}

type LoadBalancingRuleArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingRule)(nil)).Elem()
}

func (o LoadBalancingRuleArrayOutput) ToLoadBalancingRuleArrayOutput() LoadBalancingRuleArrayOutput {
	return o
}

func (o LoadBalancingRuleArrayOutput) ToLoadBalancingRuleArrayOutputWithContext(ctx context.Context) LoadBalancingRuleArrayOutput {
	return o
}

func (o LoadBalancingRuleArrayOutput) Index(i pulumi.IntInput) LoadBalancingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancingRule {
		return vs[0].([]LoadBalancingRule)[vs[1].(int)]
	}).(LoadBalancingRuleOutput)
}

// Properties of the load balancer.
type LoadBalancingRulePropertiesFormat struct {
	// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool *SubResource `pulumi:"backendAddressPool"`
	// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port"
	BackendPort *int `pulumi:"backendPort"`
	// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
	DisableOutboundSnat *bool `pulumi:"disableOutboundSnat"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResource `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port"
	FrontendPort int `pulumi:"frontendPort"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
	LoadDistribution *string `pulumi:"loadDistribution"`
	// The reference of the load balancer probe used by the load balancing rule.
	Probe *SubResource `pulumi:"probe"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// LoadBalancingRulePropertiesFormatInput is an input type that accepts LoadBalancingRulePropertiesFormatArgs and LoadBalancingRulePropertiesFormatOutput values.
// You can construct a concrete instance of `LoadBalancingRulePropertiesFormatInput` via:
//
//          LoadBalancingRulePropertiesFormatArgs{...}
type LoadBalancingRulePropertiesFormatInput interface {
	pulumi.Input

	ToLoadBalancingRulePropertiesFormatOutput() LoadBalancingRulePropertiesFormatOutput
	ToLoadBalancingRulePropertiesFormatOutputWithContext(context.Context) LoadBalancingRulePropertiesFormatOutput
}

// Properties of the load balancer.
type LoadBalancingRulePropertiesFormatArgs struct {
	// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourcePtrInput `pulumi:"backendAddressPool"`
	// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port"
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
	DisableOutboundSnat pulumi.BoolPtrInput `pulumi:"disableOutboundSnat"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolPtrInput `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourcePtrInput `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port"
	FrontendPort pulumi.IntInput `pulumi:"frontendPort"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
	LoadDistribution pulumi.StringPtrInput `pulumi:"loadDistribution"`
	// The reference of the load balancer probe used by the load balancing rule.
	Probe SubResourcePtrInput `pulumi:"probe"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (LoadBalancingRulePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRulePropertiesFormat)(nil)).Elem()
}

func (i LoadBalancingRulePropertiesFormatArgs) ToLoadBalancingRulePropertiesFormatOutput() LoadBalancingRulePropertiesFormatOutput {
	return i.ToLoadBalancingRulePropertiesFormatOutputWithContext(context.Background())
}

func (i LoadBalancingRulePropertiesFormatArgs) ToLoadBalancingRulePropertiesFormatOutputWithContext(ctx context.Context) LoadBalancingRulePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRulePropertiesFormatOutput)
}

func (i LoadBalancingRulePropertiesFormatArgs) ToLoadBalancingRulePropertiesFormatPtrOutput() LoadBalancingRulePropertiesFormatPtrOutput {
	return i.ToLoadBalancingRulePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i LoadBalancingRulePropertiesFormatArgs) ToLoadBalancingRulePropertiesFormatPtrOutputWithContext(ctx context.Context) LoadBalancingRulePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRulePropertiesFormatOutput).ToLoadBalancingRulePropertiesFormatPtrOutputWithContext(ctx)
}

// LoadBalancingRulePropertiesFormatPtrInput is an input type that accepts LoadBalancingRulePropertiesFormatArgs, LoadBalancingRulePropertiesFormatPtr and LoadBalancingRulePropertiesFormatPtrOutput values.
// You can construct a concrete instance of `LoadBalancingRulePropertiesFormatPtrInput` via:
//
//          LoadBalancingRulePropertiesFormatArgs{...}
//
//  or:
//
//          nil
type LoadBalancingRulePropertiesFormatPtrInput interface {
	pulumi.Input

	ToLoadBalancingRulePropertiesFormatPtrOutput() LoadBalancingRulePropertiesFormatPtrOutput
	ToLoadBalancingRulePropertiesFormatPtrOutputWithContext(context.Context) LoadBalancingRulePropertiesFormatPtrOutput
}

type loadBalancingRulePropertiesFormatPtrType LoadBalancingRulePropertiesFormatArgs

func LoadBalancingRulePropertiesFormatPtr(v *LoadBalancingRulePropertiesFormatArgs) LoadBalancingRulePropertiesFormatPtrInput {
	return (*loadBalancingRulePropertiesFormatPtrType)(v)
}

func (*loadBalancingRulePropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancingRulePropertiesFormat)(nil)).Elem()
}

func (i *loadBalancingRulePropertiesFormatPtrType) ToLoadBalancingRulePropertiesFormatPtrOutput() LoadBalancingRulePropertiesFormatPtrOutput {
	return i.ToLoadBalancingRulePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *loadBalancingRulePropertiesFormatPtrType) ToLoadBalancingRulePropertiesFormatPtrOutputWithContext(ctx context.Context) LoadBalancingRulePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRulePropertiesFormatPtrOutput)
}

// Properties of the load balancer.
type LoadBalancingRulePropertiesFormatOutput struct{ *pulumi.OutputState }

func (LoadBalancingRulePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRulePropertiesFormat)(nil)).Elem()
}

func (o LoadBalancingRulePropertiesFormatOutput) ToLoadBalancingRulePropertiesFormatOutput() LoadBalancingRulePropertiesFormatOutput {
	return o
}

func (o LoadBalancingRulePropertiesFormatOutput) ToLoadBalancingRulePropertiesFormatOutputWithContext(ctx context.Context) LoadBalancingRulePropertiesFormatOutput {
	return o
}

func (o LoadBalancingRulePropertiesFormatOutput) ToLoadBalancingRulePropertiesFormatPtrOutput() LoadBalancingRulePropertiesFormatPtrOutput {
	return o.ToLoadBalancingRulePropertiesFormatPtrOutputWithContext(context.Background())
}

func (o LoadBalancingRulePropertiesFormatOutput) ToLoadBalancingRulePropertiesFormatPtrOutputWithContext(ctx context.Context) LoadBalancingRulePropertiesFormatPtrOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormat) *LoadBalancingRulePropertiesFormat {
		return &v
	}).(LoadBalancingRulePropertiesFormatPtrOutput)
}

// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
func (o LoadBalancingRulePropertiesFormatOutput) BackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormat) *SubResource { return v.BackendAddressPool }).(SubResourcePtrOutput)
}

// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port"
func (o LoadBalancingRulePropertiesFormatOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormat) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
func (o LoadBalancingRulePropertiesFormatOutput) DisableOutboundSnat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormat) *bool { return v.DisableOutboundSnat }).(pulumi.BoolPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o LoadBalancingRulePropertiesFormatOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormat) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o LoadBalancingRulePropertiesFormatOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormat) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// A reference to frontend IP addresses.
func (o LoadBalancingRulePropertiesFormatOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormat) *SubResource { return v.FrontendIPConfiguration }).(SubResourcePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port"
func (o LoadBalancingRulePropertiesFormatOutput) FrontendPort() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormat) int { return v.FrontendPort }).(pulumi.IntOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o LoadBalancingRulePropertiesFormatOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormat) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
func (o LoadBalancingRulePropertiesFormatOutput) LoadDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormat) *string { return v.LoadDistribution }).(pulumi.StringPtrOutput)
}

// The reference of the load balancer probe used by the load balancing rule.
func (o LoadBalancingRulePropertiesFormatOutput) Probe() SubResourcePtrOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormat) *SubResource { return v.Probe }).(SubResourcePtrOutput)
}

// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
func (o LoadBalancingRulePropertiesFormatOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormat) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o LoadBalancingRulePropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type LoadBalancingRulePropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancingRulePropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancingRulePropertiesFormat)(nil)).Elem()
}

func (o LoadBalancingRulePropertiesFormatPtrOutput) ToLoadBalancingRulePropertiesFormatPtrOutput() LoadBalancingRulePropertiesFormatPtrOutput {
	return o
}

func (o LoadBalancingRulePropertiesFormatPtrOutput) ToLoadBalancingRulePropertiesFormatPtrOutputWithContext(ctx context.Context) LoadBalancingRulePropertiesFormatPtrOutput {
	return o
}

func (o LoadBalancingRulePropertiesFormatPtrOutput) Elem() LoadBalancingRulePropertiesFormatOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormat) LoadBalancingRulePropertiesFormat { return *v }).(LoadBalancingRulePropertiesFormatOutput)
}

// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
func (o LoadBalancingRulePropertiesFormatPtrOutput) BackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.BackendAddressPool
	}).(SubResourcePtrOutput)
}

// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port"
func (o LoadBalancingRulePropertiesFormatPtrOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.BackendPort
	}).(pulumi.IntPtrOutput)
}

// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
func (o LoadBalancingRulePropertiesFormatPtrOutput) DisableOutboundSnat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.DisableOutboundSnat
	}).(pulumi.BoolPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o LoadBalancingRulePropertiesFormatPtrOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.EnableFloatingIP
	}).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o LoadBalancingRulePropertiesFormatPtrOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.EnableTcpReset
	}).(pulumi.BoolPtrOutput)
}

// A reference to frontend IP addresses.
func (o LoadBalancingRulePropertiesFormatPtrOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.FrontendIPConfiguration
	}).(SubResourcePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port"
func (o LoadBalancingRulePropertiesFormatPtrOutput) FrontendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return &v.FrontendPort
	}).(pulumi.IntPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o LoadBalancingRulePropertiesFormatPtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
func (o LoadBalancingRulePropertiesFormatPtrOutput) LoadDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.LoadDistribution
	}).(pulumi.StringPtrOutput)
}

// The reference of the load balancer probe used by the load balancing rule.
func (o LoadBalancingRulePropertiesFormatPtrOutput) Probe() SubResourcePtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.Probe
	}).(SubResourcePtrOutput)
}

// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
func (o LoadBalancingRulePropertiesFormatPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o LoadBalancingRulePropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Properties of the load balancer.
type LoadBalancingRulePropertiesFormatResponse struct {
	// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool *SubResourceResponse `pulumi:"backendAddressPool"`
	// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port"
	BackendPort *int `pulumi:"backendPort"`
	// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
	DisableOutboundSnat *bool `pulumi:"disableOutboundSnat"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port"
	FrontendPort int `pulumi:"frontendPort"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
	LoadDistribution *string `pulumi:"loadDistribution"`
	// The reference of the load balancer probe used by the load balancing rule.
	Probe *SubResourceResponse `pulumi:"probe"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// LoadBalancingRulePropertiesFormatResponseInput is an input type that accepts LoadBalancingRulePropertiesFormatResponseArgs and LoadBalancingRulePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `LoadBalancingRulePropertiesFormatResponseInput` via:
//
//          LoadBalancingRulePropertiesFormatResponseArgs{...}
type LoadBalancingRulePropertiesFormatResponseInput interface {
	pulumi.Input

	ToLoadBalancingRulePropertiesFormatResponseOutput() LoadBalancingRulePropertiesFormatResponseOutput
	ToLoadBalancingRulePropertiesFormatResponseOutputWithContext(context.Context) LoadBalancingRulePropertiesFormatResponseOutput
}

// Properties of the load balancer.
type LoadBalancingRulePropertiesFormatResponseArgs struct {
	// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourceResponsePtrInput `pulumi:"backendAddressPool"`
	// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port"
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
	DisableOutboundSnat pulumi.BoolPtrInput `pulumi:"disableOutboundSnat"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolPtrInput `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourceResponsePtrInput `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port"
	FrontendPort pulumi.IntInput `pulumi:"frontendPort"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
	LoadDistribution pulumi.StringPtrInput `pulumi:"loadDistribution"`
	// The reference of the load balancer probe used by the load balancing rule.
	Probe SubResourceResponsePtrInput `pulumi:"probe"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (LoadBalancingRulePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRulePropertiesFormatResponse)(nil)).Elem()
}

func (i LoadBalancingRulePropertiesFormatResponseArgs) ToLoadBalancingRulePropertiesFormatResponseOutput() LoadBalancingRulePropertiesFormatResponseOutput {
	return i.ToLoadBalancingRulePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i LoadBalancingRulePropertiesFormatResponseArgs) ToLoadBalancingRulePropertiesFormatResponseOutputWithContext(ctx context.Context) LoadBalancingRulePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRulePropertiesFormatResponseOutput)
}

func (i LoadBalancingRulePropertiesFormatResponseArgs) ToLoadBalancingRulePropertiesFormatResponsePtrOutput() LoadBalancingRulePropertiesFormatResponsePtrOutput {
	return i.ToLoadBalancingRulePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i LoadBalancingRulePropertiesFormatResponseArgs) ToLoadBalancingRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) LoadBalancingRulePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRulePropertiesFormatResponseOutput).ToLoadBalancingRulePropertiesFormatResponsePtrOutputWithContext(ctx)
}

// LoadBalancingRulePropertiesFormatResponsePtrInput is an input type that accepts LoadBalancingRulePropertiesFormatResponseArgs, LoadBalancingRulePropertiesFormatResponsePtr and LoadBalancingRulePropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `LoadBalancingRulePropertiesFormatResponsePtrInput` via:
//
//          LoadBalancingRulePropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type LoadBalancingRulePropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToLoadBalancingRulePropertiesFormatResponsePtrOutput() LoadBalancingRulePropertiesFormatResponsePtrOutput
	ToLoadBalancingRulePropertiesFormatResponsePtrOutputWithContext(context.Context) LoadBalancingRulePropertiesFormatResponsePtrOutput
}

type loadBalancingRulePropertiesFormatResponsePtrType LoadBalancingRulePropertiesFormatResponseArgs

func LoadBalancingRulePropertiesFormatResponsePtr(v *LoadBalancingRulePropertiesFormatResponseArgs) LoadBalancingRulePropertiesFormatResponsePtrInput {
	return (*loadBalancingRulePropertiesFormatResponsePtrType)(v)
}

func (*loadBalancingRulePropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancingRulePropertiesFormatResponse)(nil)).Elem()
}

func (i *loadBalancingRulePropertiesFormatResponsePtrType) ToLoadBalancingRulePropertiesFormatResponsePtrOutput() LoadBalancingRulePropertiesFormatResponsePtrOutput {
	return i.ToLoadBalancingRulePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *loadBalancingRulePropertiesFormatResponsePtrType) ToLoadBalancingRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) LoadBalancingRulePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRulePropertiesFormatResponsePtrOutput)
}

// Properties of the load balancer.
type LoadBalancingRulePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancingRulePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRulePropertiesFormatResponse)(nil)).Elem()
}

func (o LoadBalancingRulePropertiesFormatResponseOutput) ToLoadBalancingRulePropertiesFormatResponseOutput() LoadBalancingRulePropertiesFormatResponseOutput {
	return o
}

func (o LoadBalancingRulePropertiesFormatResponseOutput) ToLoadBalancingRulePropertiesFormatResponseOutputWithContext(ctx context.Context) LoadBalancingRulePropertiesFormatResponseOutput {
	return o
}

func (o LoadBalancingRulePropertiesFormatResponseOutput) ToLoadBalancingRulePropertiesFormatResponsePtrOutput() LoadBalancingRulePropertiesFormatResponsePtrOutput {
	return o.ToLoadBalancingRulePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o LoadBalancingRulePropertiesFormatResponseOutput) ToLoadBalancingRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) LoadBalancingRulePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormatResponse) *LoadBalancingRulePropertiesFormatResponse {
		return &v
	}).(LoadBalancingRulePropertiesFormatResponsePtrOutput)
}

// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
func (o LoadBalancingRulePropertiesFormatResponseOutput) BackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormatResponse) *SubResourceResponse { return v.BackendAddressPool }).(SubResourceResponsePtrOutput)
}

// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port"
func (o LoadBalancingRulePropertiesFormatResponseOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormatResponse) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
func (o LoadBalancingRulePropertiesFormatResponseOutput) DisableOutboundSnat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormatResponse) *bool { return v.DisableOutboundSnat }).(pulumi.BoolPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o LoadBalancingRulePropertiesFormatResponseOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormatResponse) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o LoadBalancingRulePropertiesFormatResponseOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormatResponse) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// A reference to frontend IP addresses.
func (o LoadBalancingRulePropertiesFormatResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormatResponse) *SubResourceResponse {
		return v.FrontendIPConfiguration
	}).(SubResourceResponsePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port"
func (o LoadBalancingRulePropertiesFormatResponseOutput) FrontendPort() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormatResponse) int { return v.FrontendPort }).(pulumi.IntOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o LoadBalancingRulePropertiesFormatResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormatResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
func (o LoadBalancingRulePropertiesFormatResponseOutput) LoadDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormatResponse) *string { return v.LoadDistribution }).(pulumi.StringPtrOutput)
}

// The reference of the load balancer probe used by the load balancing rule.
func (o LoadBalancingRulePropertiesFormatResponseOutput) Probe() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormatResponse) *SubResourceResponse { return v.Probe }).(SubResourceResponsePtrOutput)
}

// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
func (o LoadBalancingRulePropertiesFormatResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormatResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o LoadBalancingRulePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRulePropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type LoadBalancingRulePropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (LoadBalancingRulePropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancingRulePropertiesFormatResponse)(nil)).Elem()
}

func (o LoadBalancingRulePropertiesFormatResponsePtrOutput) ToLoadBalancingRulePropertiesFormatResponsePtrOutput() LoadBalancingRulePropertiesFormatResponsePtrOutput {
	return o
}

func (o LoadBalancingRulePropertiesFormatResponsePtrOutput) ToLoadBalancingRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) LoadBalancingRulePropertiesFormatResponsePtrOutput {
	return o
}

func (o LoadBalancingRulePropertiesFormatResponsePtrOutput) Elem() LoadBalancingRulePropertiesFormatResponseOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormatResponse) LoadBalancingRulePropertiesFormatResponse {
		return *v
	}).(LoadBalancingRulePropertiesFormatResponseOutput)
}

// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
func (o LoadBalancingRulePropertiesFormatResponsePtrOutput) BackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.BackendAddressPool
	}).(SubResourceResponsePtrOutput)
}

// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port"
func (o LoadBalancingRulePropertiesFormatResponsePtrOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.BackendPort
	}).(pulumi.IntPtrOutput)
}

// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
func (o LoadBalancingRulePropertiesFormatResponsePtrOutput) DisableOutboundSnat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableOutboundSnat
	}).(pulumi.BoolPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o LoadBalancingRulePropertiesFormatResponsePtrOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableFloatingIP
	}).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o LoadBalancingRulePropertiesFormatResponsePtrOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableTcpReset
	}).(pulumi.BoolPtrOutput)
}

// A reference to frontend IP addresses.
func (o LoadBalancingRulePropertiesFormatResponsePtrOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.FrontendIPConfiguration
	}).(SubResourceResponsePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port"
func (o LoadBalancingRulePropertiesFormatResponsePtrOutput) FrontendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return &v.FrontendPort
	}).(pulumi.IntPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o LoadBalancingRulePropertiesFormatResponsePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
func (o LoadBalancingRulePropertiesFormatResponsePtrOutput) LoadDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.LoadDistribution
	}).(pulumi.StringPtrOutput)
}

// The reference of the load balancer probe used by the load balancing rule.
func (o LoadBalancingRulePropertiesFormatResponsePtrOutput) Probe() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.Probe
	}).(SubResourceResponsePtrOutput)
}

// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
func (o LoadBalancingRulePropertiesFormatResponsePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o LoadBalancingRulePropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancingRulePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of load balancer load balancing rule.
	Properties *LoadBalancingRulePropertiesFormatResponse `pulumi:"properties"`
}

// LoadBalancingRuleResponseInput is an input type that accepts LoadBalancingRuleResponseArgs and LoadBalancingRuleResponseOutput values.
// You can construct a concrete instance of `LoadBalancingRuleResponseInput` via:
//
//          LoadBalancingRuleResponseArgs{...}
type LoadBalancingRuleResponseInput interface {
	pulumi.Input

	ToLoadBalancingRuleResponseOutput() LoadBalancingRuleResponseOutput
	ToLoadBalancingRuleResponseOutputWithContext(context.Context) LoadBalancingRuleResponseOutput
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of load balancer load balancing rule.
	Properties LoadBalancingRulePropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (LoadBalancingRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRuleResponse)(nil)).Elem()
}

func (i LoadBalancingRuleResponseArgs) ToLoadBalancingRuleResponseOutput() LoadBalancingRuleResponseOutput {
	return i.ToLoadBalancingRuleResponseOutputWithContext(context.Background())
}

func (i LoadBalancingRuleResponseArgs) ToLoadBalancingRuleResponseOutputWithContext(ctx context.Context) LoadBalancingRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRuleResponseOutput)
}

// LoadBalancingRuleResponseArrayInput is an input type that accepts LoadBalancingRuleResponseArray and LoadBalancingRuleResponseArrayOutput values.
// You can construct a concrete instance of `LoadBalancingRuleResponseArrayInput` via:
//
//          LoadBalancingRuleResponseArray{ LoadBalancingRuleResponseArgs{...} }
type LoadBalancingRuleResponseArrayInput interface {
	pulumi.Input

	ToLoadBalancingRuleResponseArrayOutput() LoadBalancingRuleResponseArrayOutput
	ToLoadBalancingRuleResponseArrayOutputWithContext(context.Context) LoadBalancingRuleResponseArrayOutput
}

type LoadBalancingRuleResponseArray []LoadBalancingRuleResponseInput

func (LoadBalancingRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingRuleResponse)(nil)).Elem()
}

func (i LoadBalancingRuleResponseArray) ToLoadBalancingRuleResponseArrayOutput() LoadBalancingRuleResponseArrayOutput {
	return i.ToLoadBalancingRuleResponseArrayOutputWithContext(context.Background())
}

func (i LoadBalancingRuleResponseArray) ToLoadBalancingRuleResponseArrayOutputWithContext(ctx context.Context) LoadBalancingRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRuleResponseArrayOutput)
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancingRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRuleResponse)(nil)).Elem()
}

func (o LoadBalancingRuleResponseOutput) ToLoadBalancingRuleResponseOutput() LoadBalancingRuleResponseOutput {
	return o
}

func (o LoadBalancingRuleResponseOutput) ToLoadBalancingRuleResponseOutputWithContext(ctx context.Context) LoadBalancingRuleResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o LoadBalancingRuleResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o LoadBalancingRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o LoadBalancingRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of load balancer load balancing rule.
func (o LoadBalancingRuleResponseOutput) Properties() LoadBalancingRulePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *LoadBalancingRulePropertiesFormatResponse { return v.Properties }).(LoadBalancingRulePropertiesFormatResponsePtrOutput)
}

type LoadBalancingRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancingRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingRuleResponse)(nil)).Elem()
}

func (o LoadBalancingRuleResponseArrayOutput) ToLoadBalancingRuleResponseArrayOutput() LoadBalancingRuleResponseArrayOutput {
	return o
}

func (o LoadBalancingRuleResponseArrayOutput) ToLoadBalancingRuleResponseArrayOutputWithContext(ctx context.Context) LoadBalancingRuleResponseArrayOutput {
	return o
}

func (o LoadBalancingRuleResponseArrayOutput) Index(i pulumi.IntInput) LoadBalancingRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancingRuleResponse {
		return vs[0].([]LoadBalancingRuleResponse)[vs[1].(int)]
	}).(LoadBalancingRuleResponseOutput)
}

// A common class for general resource information
type LocalNetworkGatewayType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the local network gateway.
	Properties LocalNetworkGatewayPropertiesFormatResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// LocalNetworkGatewayTypeInput is an input type that accepts LocalNetworkGatewayTypeArgs and LocalNetworkGatewayTypeOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayTypeInput` via:
//
//          LocalNetworkGatewayTypeArgs{...}
type LocalNetworkGatewayTypeInput interface {
	pulumi.Input

	ToLocalNetworkGatewayTypeOutput() LocalNetworkGatewayTypeOutput
	ToLocalNetworkGatewayTypeOutputWithContext(context.Context) LocalNetworkGatewayTypeOutput
}

// A common class for general resource information
type LocalNetworkGatewayTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the local network gateway.
	Properties LocalNetworkGatewayPropertiesFormatResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LocalNetworkGatewayTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayType)(nil)).Elem()
}

func (i LocalNetworkGatewayTypeArgs) ToLocalNetworkGatewayTypeOutput() LocalNetworkGatewayTypeOutput {
	return i.ToLocalNetworkGatewayTypeOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayTypeArgs) ToLocalNetworkGatewayTypeOutputWithContext(ctx context.Context) LocalNetworkGatewayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayTypeOutput)
}

func (i LocalNetworkGatewayTypeArgs) ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput {
	return i.ToLocalNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayTypeArgs) ToLocalNetworkGatewayTypePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayTypeOutput).ToLocalNetworkGatewayTypePtrOutputWithContext(ctx)
}

// LocalNetworkGatewayTypePtrInput is an input type that accepts LocalNetworkGatewayTypeArgs, LocalNetworkGatewayTypePtr and LocalNetworkGatewayTypePtrOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayTypePtrInput` via:
//
//          LocalNetworkGatewayTypeArgs{...}
//
//  or:
//
//          nil
type LocalNetworkGatewayTypePtrInput interface {
	pulumi.Input

	ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput
	ToLocalNetworkGatewayTypePtrOutputWithContext(context.Context) LocalNetworkGatewayTypePtrOutput
}

type localNetworkGatewayTypePtrType LocalNetworkGatewayTypeArgs

func LocalNetworkGatewayTypePtr(v *LocalNetworkGatewayTypeArgs) LocalNetworkGatewayTypePtrInput {
	return (*localNetworkGatewayTypePtrType)(v)
}

func (*localNetworkGatewayTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayType)(nil)).Elem()
}

func (i *localNetworkGatewayTypePtrType) ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput {
	return i.ToLocalNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (i *localNetworkGatewayTypePtrType) ToLocalNetworkGatewayTypePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayTypePtrOutput)
}

// A common class for general resource information
type LocalNetworkGatewayTypeOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayType)(nil)).Elem()
}

func (o LocalNetworkGatewayTypeOutput) ToLocalNetworkGatewayTypeOutput() LocalNetworkGatewayTypeOutput {
	return o
}

func (o LocalNetworkGatewayTypeOutput) ToLocalNetworkGatewayTypeOutputWithContext(ctx context.Context) LocalNetworkGatewayTypeOutput {
	return o
}

func (o LocalNetworkGatewayTypeOutput) ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput {
	return o.ToLocalNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (o LocalNetworkGatewayTypeOutput) ToLocalNetworkGatewayTypePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayTypePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *LocalNetworkGatewayType {
		return &v
	}).(LocalNetworkGatewayTypePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LocalNetworkGatewayTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o LocalNetworkGatewayTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LocalNetworkGatewayTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the local network gateway.
func (o LocalNetworkGatewayTypeOutput) Properties() LocalNetworkGatewayPropertiesFormatResponseOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) LocalNetworkGatewayPropertiesFormatResponse { return v.Properties }).(LocalNetworkGatewayPropertiesFormatResponseOutput)
}

// Resource tags.
func (o LocalNetworkGatewayTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o LocalNetworkGatewayTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) string { return v.Type }).(pulumi.StringOutput)
}

type LocalNetworkGatewayTypePtrOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayType)(nil)).Elem()
}

func (o LocalNetworkGatewayTypePtrOutput) ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput {
	return o
}

func (o LocalNetworkGatewayTypePtrOutput) ToLocalNetworkGatewayTypePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayTypePtrOutput {
	return o
}

func (o LocalNetworkGatewayTypePtrOutput) Elem() LocalNetworkGatewayTypeOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) LocalNetworkGatewayType { return *v }).(LocalNetworkGatewayTypeOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LocalNetworkGatewayTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o LocalNetworkGatewayTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LocalNetworkGatewayTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Properties of the local network gateway.
func (o LocalNetworkGatewayTypePtrOutput) Properties() LocalNetworkGatewayPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *LocalNetworkGatewayPropertiesFormatResponse {
		if v == nil {
			return nil
		}
		return &v.Properties
	}).(LocalNetworkGatewayPropertiesFormatResponsePtrOutput)
}

// Resource tags.
func (o LocalNetworkGatewayTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o LocalNetworkGatewayTypePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// LocalNetworkGateway properties
type LocalNetworkGatewayPropertiesFormat struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings *BgpSettings `pulumi:"bgpSettings"`
	// IP address of local network gateway.
	GatewayIpAddress *string `pulumi:"gatewayIpAddress"`
	// Local network site address space.
	LocalNetworkAddressSpace *AddressSpace `pulumi:"localNetworkAddressSpace"`
	// The resource GUID property of the LocalNetworkGateway resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
}

// LocalNetworkGatewayPropertiesFormatInput is an input type that accepts LocalNetworkGatewayPropertiesFormatArgs and LocalNetworkGatewayPropertiesFormatOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayPropertiesFormatInput` via:
//
//          LocalNetworkGatewayPropertiesFormatArgs{...}
type LocalNetworkGatewayPropertiesFormatInput interface {
	pulumi.Input

	ToLocalNetworkGatewayPropertiesFormatOutput() LocalNetworkGatewayPropertiesFormatOutput
	ToLocalNetworkGatewayPropertiesFormatOutputWithContext(context.Context) LocalNetworkGatewayPropertiesFormatOutput
}

// LocalNetworkGateway properties
type LocalNetworkGatewayPropertiesFormatArgs struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings BgpSettingsPtrInput `pulumi:"bgpSettings"`
	// IP address of local network gateway.
	GatewayIpAddress pulumi.StringPtrInput `pulumi:"gatewayIpAddress"`
	// Local network site address space.
	LocalNetworkAddressSpace AddressSpacePtrInput `pulumi:"localNetworkAddressSpace"`
	// The resource GUID property of the LocalNetworkGateway resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
}

func (LocalNetworkGatewayPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayPropertiesFormat)(nil)).Elem()
}

func (i LocalNetworkGatewayPropertiesFormatArgs) ToLocalNetworkGatewayPropertiesFormatOutput() LocalNetworkGatewayPropertiesFormatOutput {
	return i.ToLocalNetworkGatewayPropertiesFormatOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayPropertiesFormatArgs) ToLocalNetworkGatewayPropertiesFormatOutputWithContext(ctx context.Context) LocalNetworkGatewayPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayPropertiesFormatOutput)
}

func (i LocalNetworkGatewayPropertiesFormatArgs) ToLocalNetworkGatewayPropertiesFormatPtrOutput() LocalNetworkGatewayPropertiesFormatPtrOutput {
	return i.ToLocalNetworkGatewayPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayPropertiesFormatArgs) ToLocalNetworkGatewayPropertiesFormatPtrOutputWithContext(ctx context.Context) LocalNetworkGatewayPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayPropertiesFormatOutput).ToLocalNetworkGatewayPropertiesFormatPtrOutputWithContext(ctx)
}

// LocalNetworkGatewayPropertiesFormatPtrInput is an input type that accepts LocalNetworkGatewayPropertiesFormatArgs, LocalNetworkGatewayPropertiesFormatPtr and LocalNetworkGatewayPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayPropertiesFormatPtrInput` via:
//
//          LocalNetworkGatewayPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type LocalNetworkGatewayPropertiesFormatPtrInput interface {
	pulumi.Input

	ToLocalNetworkGatewayPropertiesFormatPtrOutput() LocalNetworkGatewayPropertiesFormatPtrOutput
	ToLocalNetworkGatewayPropertiesFormatPtrOutputWithContext(context.Context) LocalNetworkGatewayPropertiesFormatPtrOutput
}

type localNetworkGatewayPropertiesFormatPtrType LocalNetworkGatewayPropertiesFormatArgs

func LocalNetworkGatewayPropertiesFormatPtr(v *LocalNetworkGatewayPropertiesFormatArgs) LocalNetworkGatewayPropertiesFormatPtrInput {
	return (*localNetworkGatewayPropertiesFormatPtrType)(v)
}

func (*localNetworkGatewayPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayPropertiesFormat)(nil)).Elem()
}

func (i *localNetworkGatewayPropertiesFormatPtrType) ToLocalNetworkGatewayPropertiesFormatPtrOutput() LocalNetworkGatewayPropertiesFormatPtrOutput {
	return i.ToLocalNetworkGatewayPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *localNetworkGatewayPropertiesFormatPtrType) ToLocalNetworkGatewayPropertiesFormatPtrOutputWithContext(ctx context.Context) LocalNetworkGatewayPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayPropertiesFormatPtrOutput)
}

// LocalNetworkGateway properties
type LocalNetworkGatewayPropertiesFormatOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayPropertiesFormat)(nil)).Elem()
}

func (o LocalNetworkGatewayPropertiesFormatOutput) ToLocalNetworkGatewayPropertiesFormatOutput() LocalNetworkGatewayPropertiesFormatOutput {
	return o
}

func (o LocalNetworkGatewayPropertiesFormatOutput) ToLocalNetworkGatewayPropertiesFormatOutputWithContext(ctx context.Context) LocalNetworkGatewayPropertiesFormatOutput {
	return o
}

func (o LocalNetworkGatewayPropertiesFormatOutput) ToLocalNetworkGatewayPropertiesFormatPtrOutput() LocalNetworkGatewayPropertiesFormatPtrOutput {
	return o.ToLocalNetworkGatewayPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o LocalNetworkGatewayPropertiesFormatOutput) ToLocalNetworkGatewayPropertiesFormatPtrOutputWithContext(ctx context.Context) LocalNetworkGatewayPropertiesFormatPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayPropertiesFormat) *LocalNetworkGatewayPropertiesFormat {
		return &v
	}).(LocalNetworkGatewayPropertiesFormatPtrOutput)
}

// Local network gateway's BGP speaker settings.
func (o LocalNetworkGatewayPropertiesFormatOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayPropertiesFormat) *BgpSettings { return v.BgpSettings }).(BgpSettingsPtrOutput)
}

// IP address of local network gateway.
func (o LocalNetworkGatewayPropertiesFormatOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayPropertiesFormat) *string { return v.GatewayIpAddress }).(pulumi.StringPtrOutput)
}

// Local network site address space.
func (o LocalNetworkGatewayPropertiesFormatOutput) LocalNetworkAddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayPropertiesFormat) *AddressSpace { return v.LocalNetworkAddressSpace }).(AddressSpacePtrOutput)
}

// The resource GUID property of the LocalNetworkGateway resource.
func (o LocalNetworkGatewayPropertiesFormatOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayPropertiesFormat) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

type LocalNetworkGatewayPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayPropertiesFormat)(nil)).Elem()
}

func (o LocalNetworkGatewayPropertiesFormatPtrOutput) ToLocalNetworkGatewayPropertiesFormatPtrOutput() LocalNetworkGatewayPropertiesFormatPtrOutput {
	return o
}

func (o LocalNetworkGatewayPropertiesFormatPtrOutput) ToLocalNetworkGatewayPropertiesFormatPtrOutputWithContext(ctx context.Context) LocalNetworkGatewayPropertiesFormatPtrOutput {
	return o
}

func (o LocalNetworkGatewayPropertiesFormatPtrOutput) Elem() LocalNetworkGatewayPropertiesFormatOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayPropertiesFormat) LocalNetworkGatewayPropertiesFormat { return *v }).(LocalNetworkGatewayPropertiesFormatOutput)
}

// Local network gateway's BGP speaker settings.
func (o LocalNetworkGatewayPropertiesFormatPtrOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayPropertiesFormat) *BgpSettings {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsPtrOutput)
}

// IP address of local network gateway.
func (o LocalNetworkGatewayPropertiesFormatPtrOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.GatewayIpAddress
	}).(pulumi.StringPtrOutput)
}

// Local network site address space.
func (o LocalNetworkGatewayPropertiesFormatPtrOutput) LocalNetworkAddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayPropertiesFormat) *AddressSpace {
		if v == nil {
			return nil
		}
		return v.LocalNetworkAddressSpace
	}).(AddressSpacePtrOutput)
}

// The resource GUID property of the LocalNetworkGateway resource.
func (o LocalNetworkGatewayPropertiesFormatPtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// LocalNetworkGateway properties
type LocalNetworkGatewayPropertiesFormatResponse struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings *BgpSettingsResponse `pulumi:"bgpSettings"`
	// IP address of local network gateway.
	GatewayIpAddress *string `pulumi:"gatewayIpAddress"`
	// Local network site address space.
	LocalNetworkAddressSpace *AddressSpaceResponse `pulumi:"localNetworkAddressSpace"`
	// The provisioning state of the LocalNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the LocalNetworkGateway resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
}

// LocalNetworkGatewayPropertiesFormatResponseInput is an input type that accepts LocalNetworkGatewayPropertiesFormatResponseArgs and LocalNetworkGatewayPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayPropertiesFormatResponseInput` via:
//
//          LocalNetworkGatewayPropertiesFormatResponseArgs{...}
type LocalNetworkGatewayPropertiesFormatResponseInput interface {
	pulumi.Input

	ToLocalNetworkGatewayPropertiesFormatResponseOutput() LocalNetworkGatewayPropertiesFormatResponseOutput
	ToLocalNetworkGatewayPropertiesFormatResponseOutputWithContext(context.Context) LocalNetworkGatewayPropertiesFormatResponseOutput
}

// LocalNetworkGateway properties
type LocalNetworkGatewayPropertiesFormatResponseArgs struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings BgpSettingsResponsePtrInput `pulumi:"bgpSettings"`
	// IP address of local network gateway.
	GatewayIpAddress pulumi.StringPtrInput `pulumi:"gatewayIpAddress"`
	// Local network site address space.
	LocalNetworkAddressSpace AddressSpaceResponsePtrInput `pulumi:"localNetworkAddressSpace"`
	// The provisioning state of the LocalNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The resource GUID property of the LocalNetworkGateway resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
}

func (LocalNetworkGatewayPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayPropertiesFormatResponse)(nil)).Elem()
}

func (i LocalNetworkGatewayPropertiesFormatResponseArgs) ToLocalNetworkGatewayPropertiesFormatResponseOutput() LocalNetworkGatewayPropertiesFormatResponseOutput {
	return i.ToLocalNetworkGatewayPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayPropertiesFormatResponseArgs) ToLocalNetworkGatewayPropertiesFormatResponseOutputWithContext(ctx context.Context) LocalNetworkGatewayPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayPropertiesFormatResponseOutput)
}

func (i LocalNetworkGatewayPropertiesFormatResponseArgs) ToLocalNetworkGatewayPropertiesFormatResponsePtrOutput() LocalNetworkGatewayPropertiesFormatResponsePtrOutput {
	return i.ToLocalNetworkGatewayPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayPropertiesFormatResponseArgs) ToLocalNetworkGatewayPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayPropertiesFormatResponseOutput).ToLocalNetworkGatewayPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// LocalNetworkGatewayPropertiesFormatResponsePtrInput is an input type that accepts LocalNetworkGatewayPropertiesFormatResponseArgs, LocalNetworkGatewayPropertiesFormatResponsePtr and LocalNetworkGatewayPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayPropertiesFormatResponsePtrInput` via:
//
//          LocalNetworkGatewayPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type LocalNetworkGatewayPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToLocalNetworkGatewayPropertiesFormatResponsePtrOutput() LocalNetworkGatewayPropertiesFormatResponsePtrOutput
	ToLocalNetworkGatewayPropertiesFormatResponsePtrOutputWithContext(context.Context) LocalNetworkGatewayPropertiesFormatResponsePtrOutput
}

type localNetworkGatewayPropertiesFormatResponsePtrType LocalNetworkGatewayPropertiesFormatResponseArgs

func LocalNetworkGatewayPropertiesFormatResponsePtr(v *LocalNetworkGatewayPropertiesFormatResponseArgs) LocalNetworkGatewayPropertiesFormatResponsePtrInput {
	return (*localNetworkGatewayPropertiesFormatResponsePtrType)(v)
}

func (*localNetworkGatewayPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayPropertiesFormatResponse)(nil)).Elem()
}

func (i *localNetworkGatewayPropertiesFormatResponsePtrType) ToLocalNetworkGatewayPropertiesFormatResponsePtrOutput() LocalNetworkGatewayPropertiesFormatResponsePtrOutput {
	return i.ToLocalNetworkGatewayPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *localNetworkGatewayPropertiesFormatResponsePtrType) ToLocalNetworkGatewayPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayPropertiesFormatResponsePtrOutput)
}

// LocalNetworkGateway properties
type LocalNetworkGatewayPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayPropertiesFormatResponse)(nil)).Elem()
}

func (o LocalNetworkGatewayPropertiesFormatResponseOutput) ToLocalNetworkGatewayPropertiesFormatResponseOutput() LocalNetworkGatewayPropertiesFormatResponseOutput {
	return o
}

func (o LocalNetworkGatewayPropertiesFormatResponseOutput) ToLocalNetworkGatewayPropertiesFormatResponseOutputWithContext(ctx context.Context) LocalNetworkGatewayPropertiesFormatResponseOutput {
	return o
}

func (o LocalNetworkGatewayPropertiesFormatResponseOutput) ToLocalNetworkGatewayPropertiesFormatResponsePtrOutput() LocalNetworkGatewayPropertiesFormatResponsePtrOutput {
	return o.ToLocalNetworkGatewayPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o LocalNetworkGatewayPropertiesFormatResponseOutput) ToLocalNetworkGatewayPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayPropertiesFormatResponse) *LocalNetworkGatewayPropertiesFormatResponse {
		return &v
	}).(LocalNetworkGatewayPropertiesFormatResponsePtrOutput)
}

// Local network gateway's BGP speaker settings.
func (o LocalNetworkGatewayPropertiesFormatResponseOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayPropertiesFormatResponse) *BgpSettingsResponse { return v.BgpSettings }).(BgpSettingsResponsePtrOutput)
}

// IP address of local network gateway.
func (o LocalNetworkGatewayPropertiesFormatResponseOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayPropertiesFormatResponse) *string { return v.GatewayIpAddress }).(pulumi.StringPtrOutput)
}

// Local network site address space.
func (o LocalNetworkGatewayPropertiesFormatResponseOutput) LocalNetworkAddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayPropertiesFormatResponse) *AddressSpaceResponse {
		return v.LocalNetworkAddressSpace
	}).(AddressSpaceResponsePtrOutput)
}

// The provisioning state of the LocalNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o LocalNetworkGatewayPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the LocalNetworkGateway resource.
func (o LocalNetworkGatewayPropertiesFormatResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayPropertiesFormatResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

type LocalNetworkGatewayPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayPropertiesFormatResponse)(nil)).Elem()
}

func (o LocalNetworkGatewayPropertiesFormatResponsePtrOutput) ToLocalNetworkGatewayPropertiesFormatResponsePtrOutput() LocalNetworkGatewayPropertiesFormatResponsePtrOutput {
	return o
}

func (o LocalNetworkGatewayPropertiesFormatResponsePtrOutput) ToLocalNetworkGatewayPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayPropertiesFormatResponsePtrOutput {
	return o
}

func (o LocalNetworkGatewayPropertiesFormatResponsePtrOutput) Elem() LocalNetworkGatewayPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayPropertiesFormatResponse) LocalNetworkGatewayPropertiesFormatResponse {
		return *v
	}).(LocalNetworkGatewayPropertiesFormatResponseOutput)
}

// Local network gateway's BGP speaker settings.
func (o LocalNetworkGatewayPropertiesFormatResponsePtrOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayPropertiesFormatResponse) *BgpSettingsResponse {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsResponsePtrOutput)
}

// IP address of local network gateway.
func (o LocalNetworkGatewayPropertiesFormatResponsePtrOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.GatewayIpAddress
	}).(pulumi.StringPtrOutput)
}

// Local network site address space.
func (o LocalNetworkGatewayPropertiesFormatResponsePtrOutput) LocalNetworkAddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayPropertiesFormatResponse) *AddressSpaceResponse {
		if v == nil {
			return nil
		}
		return v.LocalNetworkAddressSpace
	}).(AddressSpaceResponsePtrOutput)
}

// The provisioning state of the LocalNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o LocalNetworkGatewayPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the LocalNetworkGateway resource.
func (o LocalNetworkGatewayPropertiesFormatResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// A common class for general resource information
type LocalNetworkGatewayResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the local network gateway.
	Properties LocalNetworkGatewayPropertiesFormatResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// LocalNetworkGatewayResponseInput is an input type that accepts LocalNetworkGatewayResponseArgs and LocalNetworkGatewayResponseOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayResponseInput` via:
//
//          LocalNetworkGatewayResponseArgs{...}
type LocalNetworkGatewayResponseInput interface {
	pulumi.Input

	ToLocalNetworkGatewayResponseOutput() LocalNetworkGatewayResponseOutput
	ToLocalNetworkGatewayResponseOutputWithContext(context.Context) LocalNetworkGatewayResponseOutput
}

// A common class for general resource information
type LocalNetworkGatewayResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the local network gateway.
	Properties LocalNetworkGatewayPropertiesFormatResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LocalNetworkGatewayResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayResponse)(nil)).Elem()
}

func (i LocalNetworkGatewayResponseArgs) ToLocalNetworkGatewayResponseOutput() LocalNetworkGatewayResponseOutput {
	return i.ToLocalNetworkGatewayResponseOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayResponseArgs) ToLocalNetworkGatewayResponseOutputWithContext(ctx context.Context) LocalNetworkGatewayResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayResponseOutput)
}

func (i LocalNetworkGatewayResponseArgs) ToLocalNetworkGatewayResponsePtrOutput() LocalNetworkGatewayResponsePtrOutput {
	return i.ToLocalNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayResponseArgs) ToLocalNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayResponseOutput).ToLocalNetworkGatewayResponsePtrOutputWithContext(ctx)
}

// LocalNetworkGatewayResponsePtrInput is an input type that accepts LocalNetworkGatewayResponseArgs, LocalNetworkGatewayResponsePtr and LocalNetworkGatewayResponsePtrOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayResponsePtrInput` via:
//
//          LocalNetworkGatewayResponseArgs{...}
//
//  or:
//
//          nil
type LocalNetworkGatewayResponsePtrInput interface {
	pulumi.Input

	ToLocalNetworkGatewayResponsePtrOutput() LocalNetworkGatewayResponsePtrOutput
	ToLocalNetworkGatewayResponsePtrOutputWithContext(context.Context) LocalNetworkGatewayResponsePtrOutput
}

type localNetworkGatewayResponsePtrType LocalNetworkGatewayResponseArgs

func LocalNetworkGatewayResponsePtr(v *LocalNetworkGatewayResponseArgs) LocalNetworkGatewayResponsePtrInput {
	return (*localNetworkGatewayResponsePtrType)(v)
}

func (*localNetworkGatewayResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayResponse)(nil)).Elem()
}

func (i *localNetworkGatewayResponsePtrType) ToLocalNetworkGatewayResponsePtrOutput() LocalNetworkGatewayResponsePtrOutput {
	return i.ToLocalNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (i *localNetworkGatewayResponsePtrType) ToLocalNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayResponsePtrOutput)
}

// A common class for general resource information
type LocalNetworkGatewayResponseOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayResponse)(nil)).Elem()
}

func (o LocalNetworkGatewayResponseOutput) ToLocalNetworkGatewayResponseOutput() LocalNetworkGatewayResponseOutput {
	return o
}

func (o LocalNetworkGatewayResponseOutput) ToLocalNetworkGatewayResponseOutputWithContext(ctx context.Context) LocalNetworkGatewayResponseOutput {
	return o
}

func (o LocalNetworkGatewayResponseOutput) ToLocalNetworkGatewayResponsePtrOutput() LocalNetworkGatewayResponsePtrOutput {
	return o.ToLocalNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (o LocalNetworkGatewayResponseOutput) ToLocalNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayResponsePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *LocalNetworkGatewayResponse {
		return &v
	}).(LocalNetworkGatewayResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LocalNetworkGatewayResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o LocalNetworkGatewayResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o LocalNetworkGatewayResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LocalNetworkGatewayResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the local network gateway.
func (o LocalNetworkGatewayResponseOutput) Properties() LocalNetworkGatewayPropertiesFormatResponseOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) LocalNetworkGatewayPropertiesFormatResponse { return v.Properties }).(LocalNetworkGatewayPropertiesFormatResponseOutput)
}

// Resource tags.
func (o LocalNetworkGatewayResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o LocalNetworkGatewayResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) string { return v.Type }).(pulumi.StringOutput)
}

type LocalNetworkGatewayResponsePtrOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayResponse)(nil)).Elem()
}

func (o LocalNetworkGatewayResponsePtrOutput) ToLocalNetworkGatewayResponsePtrOutput() LocalNetworkGatewayResponsePtrOutput {
	return o
}

func (o LocalNetworkGatewayResponsePtrOutput) ToLocalNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayResponsePtrOutput {
	return o
}

func (o LocalNetworkGatewayResponsePtrOutput) Elem() LocalNetworkGatewayResponseOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) LocalNetworkGatewayResponse { return *v }).(LocalNetworkGatewayResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LocalNetworkGatewayResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o LocalNetworkGatewayResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o LocalNetworkGatewayResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LocalNetworkGatewayResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Properties of the local network gateway.
func (o LocalNetworkGatewayResponsePtrOutput) Properties() LocalNetworkGatewayPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *LocalNetworkGatewayPropertiesFormatResponse {
		if v == nil {
			return nil
		}
		return &v.Properties
	}).(LocalNetworkGatewayPropertiesFormatResponsePtrOutput)
}

// Resource tags.
func (o LocalNetworkGatewayResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o LocalNetworkGatewayResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity for the resource.
type ManagedServiceIdentity struct {
	// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
	Type *string `pulumi:"type"`
	// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]string `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//          ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Identity for the resource.
type ManagedServiceIdentityArgs struct {
	// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities pulumi.StringMapInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//          ManagedServiceIdentityArgs{...}
//
//  or:
//
//          nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Identity for the resource.
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
func (o ManagedServiceIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ManagedServiceIdentityOutput) UserAssignedIdentities() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) map[string]string { return v.UserAssignedIdentities }).(pulumi.StringMapOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity { return *v }).(ManagedServiceIdentityOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
func (o ManagedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ManagedServiceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) map[string]string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringMapOutput)
}

// Identity for the resource.
type ManagedServiceIdentityResponse struct {
	// The principal id of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
	Type *string `pulumi:"type"`
	// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]string `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityResponseInput is an input type that accepts ManagedServiceIdentityResponseArgs and ManagedServiceIdentityResponseOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityResponseInput` via:
//
//          ManagedServiceIdentityResponseArgs{...}
type ManagedServiceIdentityResponseInput interface {
	pulumi.Input

	ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput
	ToManagedServiceIdentityResponseOutputWithContext(context.Context) ManagedServiceIdentityResponseOutput
}

// Identity for the resource.
type ManagedServiceIdentityResponseArgs struct {
	// The principal id of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities pulumi.StringMapInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (i ManagedServiceIdentityResponseArgs) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return i.ToManagedServiceIdentityResponseOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityResponseArgs) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponseOutput)
}

func (i ManagedServiceIdentityResponseArgs) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return i.ToManagedServiceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityResponseArgs) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponseOutput).ToManagedServiceIdentityResponsePtrOutputWithContext(ctx)
}

// ManagedServiceIdentityResponsePtrInput is an input type that accepts ManagedServiceIdentityResponseArgs, ManagedServiceIdentityResponsePtr and ManagedServiceIdentityResponsePtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityResponsePtrInput` via:
//
//          ManagedServiceIdentityResponseArgs{...}
//
//  or:
//
//          nil
type ManagedServiceIdentityResponsePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput
	ToManagedServiceIdentityResponsePtrOutputWithContext(context.Context) ManagedServiceIdentityResponsePtrOutput
}

type managedServiceIdentityResponsePtrType ManagedServiceIdentityResponseArgs

func ManagedServiceIdentityResponsePtr(v *ManagedServiceIdentityResponseArgs) ManagedServiceIdentityResponsePtrInput {
	return (*managedServiceIdentityResponsePtrType)(v)
}

func (*managedServiceIdentityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (i *managedServiceIdentityResponsePtrType) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return i.ToManagedServiceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityResponsePtrType) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponsePtrOutput)
}

// Identity for the resource.
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o.ToManagedServiceIdentityResponsePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) *ManagedServiceIdentityResponse {
		return &v
	}).(ManagedServiceIdentityResponsePtrOutput)
}

// The principal id of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]string { return v.UserAssignedIdentities }).(pulumi.StringMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse { return *v }).(ManagedServiceIdentityResponseOutput)
}

// The principal id of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringMapOutput)
}

// A network interface in a resource group.
type NetworkInterfaceType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Properties of the network interface.
	Properties *NetworkInterfacePropertiesFormat `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// NetworkInterfaceTypeInput is an input type that accepts NetworkInterfaceTypeArgs and NetworkInterfaceTypeOutput values.
// You can construct a concrete instance of `NetworkInterfaceTypeInput` via:
//
//          NetworkInterfaceTypeArgs{...}
type NetworkInterfaceTypeInput interface {
	pulumi.Input

	ToNetworkInterfaceTypeOutput() NetworkInterfaceTypeOutput
	ToNetworkInterfaceTypeOutputWithContext(context.Context) NetworkInterfaceTypeOutput
}

// A network interface in a resource group.
type NetworkInterfaceTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Properties of the network interface.
	Properties NetworkInterfacePropertiesFormatPtrInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (NetworkInterfaceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceType)(nil)).Elem()
}

func (i NetworkInterfaceTypeArgs) ToNetworkInterfaceTypeOutput() NetworkInterfaceTypeOutput {
	return i.ToNetworkInterfaceTypeOutputWithContext(context.Background())
}

func (i NetworkInterfaceTypeArgs) ToNetworkInterfaceTypeOutputWithContext(ctx context.Context) NetworkInterfaceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceTypeOutput)
}

// A network interface in a resource group.
type NetworkInterfaceTypeOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceType)(nil)).Elem()
}

func (o NetworkInterfaceTypeOutput) ToNetworkInterfaceTypeOutput() NetworkInterfaceTypeOutput {
	return o
}

func (o NetworkInterfaceTypeOutput) ToNetworkInterfaceTypeOutputWithContext(ctx context.Context) NetworkInterfaceTypeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkInterfaceTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkInterfaceTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Properties of the network interface.
func (o NetworkInterfaceTypeOutput) Properties() NetworkInterfacePropertiesFormatPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceType) *NetworkInterfacePropertiesFormat { return v.Properties }).(NetworkInterfacePropertiesFormatPtrOutput)
}

// Resource tags.
func (o NetworkInterfaceTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkInterfaceType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// A network interface in a resource group.
type NetworkInterfaceDefinition struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Properties of the network interface.
	Properties *NetworkInterfacePropertiesFormat `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// NetworkInterfaceDefinitionInput is an input type that accepts NetworkInterfaceDefinitionArgs and NetworkInterfaceDefinitionOutput values.
// You can construct a concrete instance of `NetworkInterfaceDefinitionInput` via:
//
//          NetworkInterfaceDefinitionArgs{...}
type NetworkInterfaceDefinitionInput interface {
	pulumi.Input

	ToNetworkInterfaceDefinitionOutput() NetworkInterfaceDefinitionOutput
	ToNetworkInterfaceDefinitionOutputWithContext(context.Context) NetworkInterfaceDefinitionOutput
}

// A network interface in a resource group.
type NetworkInterfaceDefinitionArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Properties of the network interface.
	Properties NetworkInterfacePropertiesFormatPtrInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (NetworkInterfaceDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDefinition)(nil)).Elem()
}

func (i NetworkInterfaceDefinitionArgs) ToNetworkInterfaceDefinitionOutput() NetworkInterfaceDefinitionOutput {
	return i.ToNetworkInterfaceDefinitionOutputWithContext(context.Background())
}

func (i NetworkInterfaceDefinitionArgs) ToNetworkInterfaceDefinitionOutputWithContext(ctx context.Context) NetworkInterfaceDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDefinitionOutput)
}

// A network interface in a resource group.
type NetworkInterfaceDefinitionOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDefinition)(nil)).Elem()
}

func (o NetworkInterfaceDefinitionOutput) ToNetworkInterfaceDefinitionOutput() NetworkInterfaceDefinitionOutput {
	return o
}

func (o NetworkInterfaceDefinitionOutput) ToNetworkInterfaceDefinitionOutputWithContext(ctx context.Context) NetworkInterfaceDefinitionOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceDefinitionOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDefinition) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkInterfaceDefinitionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDefinition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkInterfaceDefinitionOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDefinition) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Properties of the network interface.
func (o NetworkInterfaceDefinitionOutput) Properties() NetworkInterfacePropertiesFormatPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDefinition) *NetworkInterfacePropertiesFormat { return v.Properties }).(NetworkInterfacePropertiesFormatPtrOutput)
}

// Resource tags.
func (o NetworkInterfaceDefinitionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkInterfaceDefinition) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettings struct {
	// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
	AppliedDnsServers []string `pulumi:"appliedDnsServers"`
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers []string `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel *string `pulumi:"internalDnsNameLabel"`
	// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
	InternalDomainNameSuffix *string `pulumi:"internalDomainNameSuffix"`
	// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
	InternalFqdn *string `pulumi:"internalFqdn"`
}

// NetworkInterfaceDnsSettingsInput is an input type that accepts NetworkInterfaceDnsSettingsArgs and NetworkInterfaceDnsSettingsOutput values.
// You can construct a concrete instance of `NetworkInterfaceDnsSettingsInput` via:
//
//          NetworkInterfaceDnsSettingsArgs{...}
type NetworkInterfaceDnsSettingsInput interface {
	pulumi.Input

	ToNetworkInterfaceDnsSettingsOutput() NetworkInterfaceDnsSettingsOutput
	ToNetworkInterfaceDnsSettingsOutputWithContext(context.Context) NetworkInterfaceDnsSettingsOutput
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsArgs struct {
	// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
	AppliedDnsServers pulumi.StringArrayInput `pulumi:"appliedDnsServers"`
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel pulumi.StringPtrInput `pulumi:"internalDnsNameLabel"`
	// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
	InternalDomainNameSuffix pulumi.StringPtrInput `pulumi:"internalDomainNameSuffix"`
	// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
	InternalFqdn pulumi.StringPtrInput `pulumi:"internalFqdn"`
}

func (NetworkInterfaceDnsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettings)(nil)).Elem()
}

func (i NetworkInterfaceDnsSettingsArgs) ToNetworkInterfaceDnsSettingsOutput() NetworkInterfaceDnsSettingsOutput {
	return i.ToNetworkInterfaceDnsSettingsOutputWithContext(context.Background())
}

func (i NetworkInterfaceDnsSettingsArgs) ToNetworkInterfaceDnsSettingsOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsOutput)
}

func (i NetworkInterfaceDnsSettingsArgs) ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput {
	return i.ToNetworkInterfaceDnsSettingsPtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceDnsSettingsArgs) ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsOutput).ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx)
}

// NetworkInterfaceDnsSettingsPtrInput is an input type that accepts NetworkInterfaceDnsSettingsArgs, NetworkInterfaceDnsSettingsPtr and NetworkInterfaceDnsSettingsPtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceDnsSettingsPtrInput` via:
//
//          NetworkInterfaceDnsSettingsArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceDnsSettingsPtrInput interface {
	pulumi.Input

	ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput
	ToNetworkInterfaceDnsSettingsPtrOutputWithContext(context.Context) NetworkInterfaceDnsSettingsPtrOutput
}

type networkInterfaceDnsSettingsPtrType NetworkInterfaceDnsSettingsArgs

func NetworkInterfaceDnsSettingsPtr(v *NetworkInterfaceDnsSettingsArgs) NetworkInterfaceDnsSettingsPtrInput {
	return (*networkInterfaceDnsSettingsPtrType)(v)
}

func (*networkInterfaceDnsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettings)(nil)).Elem()
}

func (i *networkInterfaceDnsSettingsPtrType) ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput {
	return i.ToNetworkInterfaceDnsSettingsPtrOutputWithContext(context.Background())
}

func (i *networkInterfaceDnsSettingsPtrType) ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsPtrOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettings)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsOutput) ToNetworkInterfaceDnsSettingsOutput() NetworkInterfaceDnsSettingsOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsOutput) ToNetworkInterfaceDnsSettingsOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsOutput) ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput {
	return o.ToNetworkInterfaceDnsSettingsPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceDnsSettingsOutput) ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettings) *NetworkInterfaceDnsSettings {
		return &v
	}).(NetworkInterfaceDnsSettingsPtrOutput)
}

// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
func (o NetworkInterfaceDnsSettingsOutput) AppliedDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettings) []string { return v.AppliedDnsServers }).(pulumi.StringArrayOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettings) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettings) *string { return v.InternalDnsNameLabel }).(pulumi.StringPtrOutput)
}

// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
func (o NetworkInterfaceDnsSettingsOutput) InternalDomainNameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettings) *string { return v.InternalDomainNameSuffix }).(pulumi.StringPtrOutput)
}

// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsOutput) InternalFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettings) *string { return v.InternalFqdn }).(pulumi.StringPtrOutput)
}

type NetworkInterfaceDnsSettingsPtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettings)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsPtrOutput) ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsPtrOutput) ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsPtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsPtrOutput) Elem() NetworkInterfaceDnsSettingsOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) NetworkInterfaceDnsSettings { return *v }).(NetworkInterfaceDnsSettingsOutput)
}

// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
func (o NetworkInterfaceDnsSettingsPtrOutput) AppliedDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) []string {
		if v == nil {
			return nil
		}
		return v.AppliedDnsServers
	}).(pulumi.StringArrayOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsPtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsPtrOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.InternalDnsNameLabel
	}).(pulumi.StringPtrOutput)
}

// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
func (o NetworkInterfaceDnsSettingsPtrOutput) InternalDomainNameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.InternalDomainNameSuffix
	}).(pulumi.StringPtrOutput)
}

// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsPtrOutput) InternalFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.InternalFqdn
	}).(pulumi.StringPtrOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsResponse struct {
	// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
	AppliedDnsServers []string `pulumi:"appliedDnsServers"`
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers []string `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel *string `pulumi:"internalDnsNameLabel"`
	// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
	InternalDomainNameSuffix *string `pulumi:"internalDomainNameSuffix"`
	// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
	InternalFqdn *string `pulumi:"internalFqdn"`
}

// NetworkInterfaceDnsSettingsResponseInput is an input type that accepts NetworkInterfaceDnsSettingsResponseArgs and NetworkInterfaceDnsSettingsResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceDnsSettingsResponseInput` via:
//
//          NetworkInterfaceDnsSettingsResponseArgs{...}
type NetworkInterfaceDnsSettingsResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceDnsSettingsResponseOutput() NetworkInterfaceDnsSettingsResponseOutput
	ToNetworkInterfaceDnsSettingsResponseOutputWithContext(context.Context) NetworkInterfaceDnsSettingsResponseOutput
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsResponseArgs struct {
	// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
	AppliedDnsServers pulumi.StringArrayInput `pulumi:"appliedDnsServers"`
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel pulumi.StringPtrInput `pulumi:"internalDnsNameLabel"`
	// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
	InternalDomainNameSuffix pulumi.StringPtrInput `pulumi:"internalDomainNameSuffix"`
	// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
	InternalFqdn pulumi.StringPtrInput `pulumi:"internalFqdn"`
}

func (NetworkInterfaceDnsSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettingsResponse)(nil)).Elem()
}

func (i NetworkInterfaceDnsSettingsResponseArgs) ToNetworkInterfaceDnsSettingsResponseOutput() NetworkInterfaceDnsSettingsResponseOutput {
	return i.ToNetworkInterfaceDnsSettingsResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceDnsSettingsResponseArgs) ToNetworkInterfaceDnsSettingsResponseOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsResponseOutput)
}

func (i NetworkInterfaceDnsSettingsResponseArgs) ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return i.ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceDnsSettingsResponseArgs) ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsResponseOutput).ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx)
}

// NetworkInterfaceDnsSettingsResponsePtrInput is an input type that accepts NetworkInterfaceDnsSettingsResponseArgs, NetworkInterfaceDnsSettingsResponsePtr and NetworkInterfaceDnsSettingsResponsePtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceDnsSettingsResponsePtrInput` via:
//
//          NetworkInterfaceDnsSettingsResponseArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceDnsSettingsResponsePtrInput interface {
	pulumi.Input

	ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput
	ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput
}

type networkInterfaceDnsSettingsResponsePtrType NetworkInterfaceDnsSettingsResponseArgs

func NetworkInterfaceDnsSettingsResponsePtr(v *NetworkInterfaceDnsSettingsResponseArgs) NetworkInterfaceDnsSettingsResponsePtrInput {
	return (*networkInterfaceDnsSettingsResponsePtrType)(v)
}

func (*networkInterfaceDnsSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettingsResponse)(nil)).Elem()
}

func (i *networkInterfaceDnsSettingsResponsePtrType) ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return i.ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *networkInterfaceDnsSettingsResponsePtrType) ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsResponsePtrOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettingsResponse)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsResponseOutput) ToNetworkInterfaceDnsSettingsResponseOutput() NetworkInterfaceDnsSettingsResponseOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponseOutput) ToNetworkInterfaceDnsSettingsResponseOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponseOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponseOutput) ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o.ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceDnsSettingsResponseOutput) ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) *NetworkInterfaceDnsSettingsResponse {
		return &v
	}).(NetworkInterfaceDnsSettingsResponsePtrOutput)
}

// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
func (o NetworkInterfaceDnsSettingsResponseOutput) AppliedDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) []string { return v.AppliedDnsServers }).(pulumi.StringArrayOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponseOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) *string { return v.InternalDnsNameLabel }).(pulumi.StringPtrOutput)
}

// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
func (o NetworkInterfaceDnsSettingsResponseOutput) InternalDomainNameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) *string { return v.InternalDomainNameSuffix }).(pulumi.StringPtrOutput)
}

// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponseOutput) InternalFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) *string { return v.InternalFqdn }).(pulumi.StringPtrOutput)
}

type NetworkInterfaceDnsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettingsResponse)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsResponsePtrOutput) ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponsePtrOutput) ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponsePtrOutput) Elem() NetworkInterfaceDnsSettingsResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) NetworkInterfaceDnsSettingsResponse { return *v }).(NetworkInterfaceDnsSettingsResponseOutput)
}

// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) AppliedDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.AppliedDnsServers
	}).(pulumi.StringArrayOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InternalDnsNameLabel
	}).(pulumi.StringPtrOutput)
}

// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) InternalDomainNameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InternalDomainNameSuffix
	}).(pulumi.StringPtrOutput)
}

// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) InternalFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InternalFqdn
	}).(pulumi.StringPtrOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfiguration struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Network interface IP configuration properties.
	Properties *NetworkInterfaceIPConfigurationPropertiesFormat `pulumi:"properties"`
}

// NetworkInterfaceIPConfigurationInput is an input type that accepts NetworkInterfaceIPConfigurationArgs and NetworkInterfaceIPConfigurationOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationInput` via:
//
//          NetworkInterfaceIPConfigurationArgs{...}
type NetworkInterfaceIPConfigurationInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationOutput() NetworkInterfaceIPConfigurationOutput
	ToNetworkInterfaceIPConfigurationOutputWithContext(context.Context) NetworkInterfaceIPConfigurationOutput
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Network interface IP configuration properties.
	Properties NetworkInterfaceIPConfigurationPropertiesFormatPtrInput `pulumi:"properties"`
}

func (NetworkInterfaceIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationArgs) ToNetworkInterfaceIPConfigurationOutput() NetworkInterfaceIPConfigurationOutput {
	return i.ToNetworkInterfaceIPConfigurationOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationArgs) ToNetworkInterfaceIPConfigurationOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationOutput)
}

func (i NetworkInterfaceIPConfigurationArgs) ToNetworkInterfaceIPConfigurationPtrOutput() NetworkInterfaceIPConfigurationPtrOutput {
	return i.ToNetworkInterfaceIPConfigurationPtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationArgs) ToNetworkInterfaceIPConfigurationPtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationOutput).ToNetworkInterfaceIPConfigurationPtrOutputWithContext(ctx)
}

// NetworkInterfaceIPConfigurationPtrInput is an input type that accepts NetworkInterfaceIPConfigurationArgs, NetworkInterfaceIPConfigurationPtr and NetworkInterfaceIPConfigurationPtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationPtrInput` via:
//
//          NetworkInterfaceIPConfigurationArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceIPConfigurationPtrInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationPtrOutput() NetworkInterfaceIPConfigurationPtrOutput
	ToNetworkInterfaceIPConfigurationPtrOutputWithContext(context.Context) NetworkInterfaceIPConfigurationPtrOutput
}

type networkInterfaceIPConfigurationPtrType NetworkInterfaceIPConfigurationArgs

func NetworkInterfaceIPConfigurationPtr(v *NetworkInterfaceIPConfigurationArgs) NetworkInterfaceIPConfigurationPtrInput {
	return (*networkInterfaceIPConfigurationPtrType)(v)
}

func (*networkInterfaceIPConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (i *networkInterfaceIPConfigurationPtrType) ToNetworkInterfaceIPConfigurationPtrOutput() NetworkInterfaceIPConfigurationPtrOutput {
	return i.ToNetworkInterfaceIPConfigurationPtrOutputWithContext(context.Background())
}

func (i *networkInterfaceIPConfigurationPtrType) ToNetworkInterfaceIPConfigurationPtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationPtrOutput)
}

// NetworkInterfaceIPConfigurationArrayInput is an input type that accepts NetworkInterfaceIPConfigurationArray and NetworkInterfaceIPConfigurationArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationArrayInput` via:
//
//          NetworkInterfaceIPConfigurationArray{ NetworkInterfaceIPConfigurationArgs{...} }
type NetworkInterfaceIPConfigurationArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationArrayOutput() NetworkInterfaceIPConfigurationArrayOutput
	ToNetworkInterfaceIPConfigurationArrayOutputWithContext(context.Context) NetworkInterfaceIPConfigurationArrayOutput
}

type NetworkInterfaceIPConfigurationArray []NetworkInterfaceIPConfigurationInput

func (NetworkInterfaceIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationArray) ToNetworkInterfaceIPConfigurationArrayOutput() NetworkInterfaceIPConfigurationArrayOutput {
	return i.ToNetworkInterfaceIPConfigurationArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationArray) ToNetworkInterfaceIPConfigurationArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationArrayOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationOutput) ToNetworkInterfaceIPConfigurationOutput() NetworkInterfaceIPConfigurationOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationOutput) ToNetworkInterfaceIPConfigurationOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationOutput) ToNetworkInterfaceIPConfigurationPtrOutput() NetworkInterfaceIPConfigurationPtrOutput {
	return o.ToNetworkInterfaceIPConfigurationPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceIPConfigurationOutput) ToNetworkInterfaceIPConfigurationPtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *NetworkInterfaceIPConfiguration {
		return &v
	}).(NetworkInterfaceIPConfigurationPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceIPConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkInterfaceIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Network interface IP configuration properties.
func (o NetworkInterfaceIPConfigurationOutput) Properties() NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *NetworkInterfaceIPConfigurationPropertiesFormat {
		return v.Properties
	}).(NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput)
}

type NetworkInterfaceIPConfigurationPtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationPtrOutput) ToNetworkInterfaceIPConfigurationPtrOutput() NetworkInterfaceIPConfigurationPtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPtrOutput) ToNetworkInterfaceIPConfigurationPtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPtrOutput) Elem() NetworkInterfaceIPConfigurationOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) NetworkInterfaceIPConfiguration { return *v }).(NetworkInterfaceIPConfigurationOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceIPConfigurationPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkInterfaceIPConfigurationPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Network interface IP configuration properties.
func (o NetworkInterfaceIPConfigurationPtrOutput) Properties() NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *NetworkInterfaceIPConfigurationPropertiesFormat {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput)
}

type NetworkInterfaceIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationArrayOutput) ToNetworkInterfaceIPConfigurationArrayOutput() NetworkInterfaceIPConfigurationArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationArrayOutput) ToNetworkInterfaceIPConfigurationArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceIPConfiguration {
		return vs[0].([]NetworkInterfaceIPConfiguration)[vs[1].(int)]
	}).(NetworkInterfaceIPConfigurationOutput)
}

// Properties of IP configuration.
type NetworkInterfaceIPConfigurationPropertiesFormat struct {
	// The reference of ApplicationGatewayBackendAddressPool resource.
	ApplicationGatewayBackendAddressPools []ApplicationGatewayBackendAddressPool `pulumi:"applicationGatewayBackendAddressPools"`
	// Application security groups in which the IP configuration is included.
	ApplicationSecurityGroups []ApplicationSecurityGroupType `pulumi:"applicationSecurityGroups"`
	// The reference of LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools []BackendAddressPool `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules []InboundNatRuleType `pulumi:"loadBalancerInboundNatRules"`
	// Gets whether this is a primary customer address on the network interface.
	Primary *bool `pulumi:"primary"`
	// Private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Public IP address bound to the IP configuration.
	PublicIPAddress *PublicIPAddressType `pulumi:"publicIPAddress"`
	// Subnet bound to the IP configuration.
	Subnet *SubnetType `pulumi:"subnet"`
	// The reference to Virtual Network Taps.
	VirtualNetworkTaps []VirtualNetworkTapDefinition `pulumi:"virtualNetworkTaps"`
}

// NetworkInterfaceIPConfigurationPropertiesFormatInput is an input type that accepts NetworkInterfaceIPConfigurationPropertiesFormatArgs and NetworkInterfaceIPConfigurationPropertiesFormatOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationPropertiesFormatInput` via:
//
//          NetworkInterfaceIPConfigurationPropertiesFormatArgs{...}
type NetworkInterfaceIPConfigurationPropertiesFormatInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationPropertiesFormatOutput() NetworkInterfaceIPConfigurationPropertiesFormatOutput
	ToNetworkInterfaceIPConfigurationPropertiesFormatOutputWithContext(context.Context) NetworkInterfaceIPConfigurationPropertiesFormatOutput
}

// Properties of IP configuration.
type NetworkInterfaceIPConfigurationPropertiesFormatArgs struct {
	// The reference of ApplicationGatewayBackendAddressPool resource.
	ApplicationGatewayBackendAddressPools ApplicationGatewayBackendAddressPoolArrayInput `pulumi:"applicationGatewayBackendAddressPools"`
	// Application security groups in which the IP configuration is included.
	ApplicationSecurityGroups ApplicationSecurityGroupTypeArrayInput `pulumi:"applicationSecurityGroups"`
	// The reference of LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools BackendAddressPoolArrayInput `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules InboundNatRuleTypeArrayInput `pulumi:"loadBalancerInboundNatRules"`
	// Gets whether this is a primary customer address on the network interface.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// Private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
	PrivateIPAddressVersion pulumi.StringPtrInput `pulumi:"privateIPAddressVersion"`
	// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Public IP address bound to the IP configuration.
	PublicIPAddress PublicIPAddressTypePtrInput `pulumi:"publicIPAddress"`
	// Subnet bound to the IP configuration.
	Subnet SubnetTypePtrInput `pulumi:"subnet"`
	// The reference to Virtual Network Taps.
	VirtualNetworkTaps VirtualNetworkTapDefinitionArrayInput `pulumi:"virtualNetworkTaps"`
}

func (NetworkInterfaceIPConfigurationPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationPropertiesFormatArgs) ToNetworkInterfaceIPConfigurationPropertiesFormatOutput() NetworkInterfaceIPConfigurationPropertiesFormatOutput {
	return i.ToNetworkInterfaceIPConfigurationPropertiesFormatOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationPropertiesFormatArgs) ToNetworkInterfaceIPConfigurationPropertiesFormatOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationPropertiesFormatOutput)
}

func (i NetworkInterfaceIPConfigurationPropertiesFormatArgs) ToNetworkInterfaceIPConfigurationPropertiesFormatPtrOutput() NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput {
	return i.ToNetworkInterfaceIPConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationPropertiesFormatArgs) ToNetworkInterfaceIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationPropertiesFormatOutput).ToNetworkInterfaceIPConfigurationPropertiesFormatPtrOutputWithContext(ctx)
}

// NetworkInterfaceIPConfigurationPropertiesFormatPtrInput is an input type that accepts NetworkInterfaceIPConfigurationPropertiesFormatArgs, NetworkInterfaceIPConfigurationPropertiesFormatPtr and NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationPropertiesFormatPtrInput` via:
//
//          NetworkInterfaceIPConfigurationPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceIPConfigurationPropertiesFormatPtrInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationPropertiesFormatPtrOutput() NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput
	ToNetworkInterfaceIPConfigurationPropertiesFormatPtrOutputWithContext(context.Context) NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput
}

type networkInterfaceIPConfigurationPropertiesFormatPtrType NetworkInterfaceIPConfigurationPropertiesFormatArgs

func NetworkInterfaceIPConfigurationPropertiesFormatPtr(v *NetworkInterfaceIPConfigurationPropertiesFormatArgs) NetworkInterfaceIPConfigurationPropertiesFormatPtrInput {
	return (*networkInterfaceIPConfigurationPropertiesFormatPtrType)(v)
}

func (*networkInterfaceIPConfigurationPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (i *networkInterfaceIPConfigurationPropertiesFormatPtrType) ToNetworkInterfaceIPConfigurationPropertiesFormatPtrOutput() NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput {
	return i.ToNetworkInterfaceIPConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *networkInterfaceIPConfigurationPropertiesFormatPtrType) ToNetworkInterfaceIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput)
}

// Properties of IP configuration.
type NetworkInterfaceIPConfigurationPropertiesFormatOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationPropertiesFormatOutput) ToNetworkInterfaceIPConfigurationPropertiesFormatOutput() NetworkInterfaceIPConfigurationPropertiesFormatOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPropertiesFormatOutput) ToNetworkInterfaceIPConfigurationPropertiesFormatOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPropertiesFormatOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPropertiesFormatOutput) ToNetworkInterfaceIPConfigurationPropertiesFormatPtrOutput() NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput {
	return o.ToNetworkInterfaceIPConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceIPConfigurationPropertiesFormatOutput) ToNetworkInterfaceIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormat) *NetworkInterfaceIPConfigurationPropertiesFormat {
		return &v
	}).(NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput)
}

// The reference of ApplicationGatewayBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationPropertiesFormatOutput) ApplicationGatewayBackendAddressPools() ApplicationGatewayBackendAddressPoolArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormat) []ApplicationGatewayBackendAddressPool {
		return v.ApplicationGatewayBackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolArrayOutput)
}

// Application security groups in which the IP configuration is included.
func (o NetworkInterfaceIPConfigurationPropertiesFormatOutput) ApplicationSecurityGroups() ApplicationSecurityGroupTypeArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormat) []ApplicationSecurityGroupType {
		return v.ApplicationSecurityGroups
	}).(ApplicationSecurityGroupTypeArrayOutput)
}

// The reference of LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationPropertiesFormatOutput) LoadBalancerBackendAddressPools() BackendAddressPoolArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormat) []BackendAddressPool {
		return v.LoadBalancerBackendAddressPools
	}).(BackendAddressPoolArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationPropertiesFormatOutput) LoadBalancerInboundNatRules() InboundNatRuleTypeArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormat) []InboundNatRuleType {
		return v.LoadBalancerInboundNatRules
	}).(InboundNatRuleTypeArrayOutput)
}

// Gets whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationPropertiesFormatOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormat) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// Private IP address of the IP configuration.
func (o NetworkInterfaceIPConfigurationPropertiesFormatOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormat) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
func (o NetworkInterfaceIPConfigurationPropertiesFormatOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormat) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
func (o NetworkInterfaceIPConfigurationPropertiesFormatOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormat) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkInterfaceIPConfigurationPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Public IP address bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationPropertiesFormatOutput) PublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormat) *PublicIPAddressType { return v.PublicIPAddress }).(PublicIPAddressTypePtrOutput)
}

// Subnet bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationPropertiesFormatOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormat) *SubnetType { return v.Subnet }).(SubnetTypePtrOutput)
}

// The reference to Virtual Network Taps.
func (o NetworkInterfaceIPConfigurationPropertiesFormatOutput) VirtualNetworkTaps() VirtualNetworkTapDefinitionArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormat) []VirtualNetworkTapDefinition {
		return v.VirtualNetworkTaps
	}).(VirtualNetworkTapDefinitionArrayOutput)
}

type NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput) ToNetworkInterfaceIPConfigurationPropertiesFormatPtrOutput() NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput) ToNetworkInterfaceIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput) Elem() NetworkInterfaceIPConfigurationPropertiesFormatOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormat) NetworkInterfaceIPConfigurationPropertiesFormat {
		return *v
	}).(NetworkInterfaceIPConfigurationPropertiesFormatOutput)
}

// The reference of ApplicationGatewayBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput) ApplicationGatewayBackendAddressPools() ApplicationGatewayBackendAddressPoolArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormat) []ApplicationGatewayBackendAddressPool {
		if v == nil {
			return nil
		}
		return v.ApplicationGatewayBackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolArrayOutput)
}

// Application security groups in which the IP configuration is included.
func (o NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput) ApplicationSecurityGroups() ApplicationSecurityGroupTypeArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormat) []ApplicationSecurityGroupType {
		if v == nil {
			return nil
		}
		return v.ApplicationSecurityGroups
	}).(ApplicationSecurityGroupTypeArrayOutput)
}

// The reference of LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput) LoadBalancerBackendAddressPools() BackendAddressPoolArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormat) []BackendAddressPool {
		if v == nil {
			return nil
		}
		return v.LoadBalancerBackendAddressPools
	}).(BackendAddressPoolArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput) LoadBalancerInboundNatRules() InboundNatRuleTypeArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormat) []InboundNatRuleType {
		if v == nil {
			return nil
		}
		return v.LoadBalancerInboundNatRules
	}).(InboundNatRuleTypeArrayOutput)
}

// Gets whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.BoolPtrOutput)
}

// Private IP address of the IP configuration.
func (o NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
func (o NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
func (o NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Public IP address bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput) PublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormat) *PublicIPAddressType {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressTypePtrOutput)
}

// Subnet bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormat) *SubnetType {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetTypePtrOutput)
}

// The reference to Virtual Network Taps.
func (o NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput) VirtualNetworkTaps() VirtualNetworkTapDefinitionArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormat) []VirtualNetworkTapDefinition {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkTaps
	}).(VirtualNetworkTapDefinitionArrayOutput)
}

// Properties of IP configuration.
type NetworkInterfaceIPConfigurationPropertiesFormatResponse struct {
	// The reference of ApplicationGatewayBackendAddressPool resource.
	ApplicationGatewayBackendAddressPools []ApplicationGatewayBackendAddressPoolResponse `pulumi:"applicationGatewayBackendAddressPools"`
	// Application security groups in which the IP configuration is included.
	ApplicationSecurityGroups []ApplicationSecurityGroupResponse `pulumi:"applicationSecurityGroups"`
	// The reference of LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools []BackendAddressPoolResponse `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules []InboundNatRuleResponse `pulumi:"loadBalancerInboundNatRules"`
	// Gets whether this is a primary customer address on the network interface.
	Primary *bool `pulumi:"primary"`
	// Private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Public IP address bound to the IP configuration.
	PublicIPAddress *PublicIPAddressResponse `pulumi:"publicIPAddress"`
	// Subnet bound to the IP configuration.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// The reference to Virtual Network Taps.
	VirtualNetworkTaps []VirtualNetworkTapResponse `pulumi:"virtualNetworkTaps"`
}

// NetworkInterfaceIPConfigurationPropertiesFormatResponseInput is an input type that accepts NetworkInterfaceIPConfigurationPropertiesFormatResponseArgs and NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationPropertiesFormatResponseInput` via:
//
//          NetworkInterfaceIPConfigurationPropertiesFormatResponseArgs{...}
type NetworkInterfaceIPConfigurationPropertiesFormatResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationPropertiesFormatResponseOutput() NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput
	ToNetworkInterfaceIPConfigurationPropertiesFormatResponseOutputWithContext(context.Context) NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput
}

// Properties of IP configuration.
type NetworkInterfaceIPConfigurationPropertiesFormatResponseArgs struct {
	// The reference of ApplicationGatewayBackendAddressPool resource.
	ApplicationGatewayBackendAddressPools ApplicationGatewayBackendAddressPoolResponseArrayInput `pulumi:"applicationGatewayBackendAddressPools"`
	// Application security groups in which the IP configuration is included.
	ApplicationSecurityGroups ApplicationSecurityGroupResponseArrayInput `pulumi:"applicationSecurityGroups"`
	// The reference of LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools BackendAddressPoolResponseArrayInput `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules InboundNatRuleResponseArrayInput `pulumi:"loadBalancerInboundNatRules"`
	// Gets whether this is a primary customer address on the network interface.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// Private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
	PrivateIPAddressVersion pulumi.StringPtrInput `pulumi:"privateIPAddressVersion"`
	// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Public IP address bound to the IP configuration.
	PublicIPAddress PublicIPAddressResponsePtrInput `pulumi:"publicIPAddress"`
	// Subnet bound to the IP configuration.
	Subnet SubnetResponsePtrInput `pulumi:"subnet"`
	// The reference to Virtual Network Taps.
	VirtualNetworkTaps VirtualNetworkTapResponseArrayInput `pulumi:"virtualNetworkTaps"`
}

func (NetworkInterfaceIPConfigurationPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationPropertiesFormatResponseArgs) ToNetworkInterfaceIPConfigurationPropertiesFormatResponseOutput() NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput {
	return i.ToNetworkInterfaceIPConfigurationPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationPropertiesFormatResponseArgs) ToNetworkInterfaceIPConfigurationPropertiesFormatResponseOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput)
}

func (i NetworkInterfaceIPConfigurationPropertiesFormatResponseArgs) ToNetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput() NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput {
	return i.ToNetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationPropertiesFormatResponseArgs) ToNetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput).ToNetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrInput is an input type that accepts NetworkInterfaceIPConfigurationPropertiesFormatResponseArgs, NetworkInterfaceIPConfigurationPropertiesFormatResponsePtr and NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrInput` via:
//
//          NetworkInterfaceIPConfigurationPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput() NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput
	ToNetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Context) NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput
}

type networkInterfaceIPConfigurationPropertiesFormatResponsePtrType NetworkInterfaceIPConfigurationPropertiesFormatResponseArgs

func NetworkInterfaceIPConfigurationPropertiesFormatResponsePtr(v *NetworkInterfaceIPConfigurationPropertiesFormatResponseArgs) NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrInput {
	return (*networkInterfaceIPConfigurationPropertiesFormatResponsePtrType)(v)
}

func (*networkInterfaceIPConfigurationPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (i *networkInterfaceIPConfigurationPropertiesFormatResponsePtrType) ToNetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput() NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput {
	return i.ToNetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *networkInterfaceIPConfigurationPropertiesFormatResponsePtrType) ToNetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput)
}

// Properties of IP configuration.
type NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput) ToNetworkInterfaceIPConfigurationPropertiesFormatResponseOutput() NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput) ToNetworkInterfaceIPConfigurationPropertiesFormatResponseOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput) ToNetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput() NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ToNetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput) ToNetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormatResponse) *NetworkInterfaceIPConfigurationPropertiesFormatResponse {
		return &v
	}).(NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput)
}

// The reference of ApplicationGatewayBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput) ApplicationGatewayBackendAddressPools() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormatResponse) []ApplicationGatewayBackendAddressPoolResponse {
		return v.ApplicationGatewayBackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolResponseArrayOutput)
}

// Application security groups in which the IP configuration is included.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput) ApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormatResponse) []ApplicationSecurityGroupResponse {
		return v.ApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// The reference of LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput) LoadBalancerBackendAddressPools() BackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormatResponse) []BackendAddressPoolResponse {
		return v.LoadBalancerBackendAddressPools
	}).(BackendAddressPoolResponseArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput) LoadBalancerInboundNatRules() InboundNatRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormatResponse) []InboundNatRuleResponse {
		return v.LoadBalancerInboundNatRules
	}).(InboundNatRuleResponseArrayOutput)
}

// Gets whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormatResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// Private IP address of the IP configuration.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormatResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormatResponse) *string {
		return v.PrivateIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormatResponse) *string {
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Public IP address bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormatResponse) *PublicIPAddressResponse {
		return v.PublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// Subnet bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormatResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// The reference to Virtual Network Taps.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput) VirtualNetworkTaps() VirtualNetworkTapResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPropertiesFormatResponse) []VirtualNetworkTapResponse {
		return v.VirtualNetworkTaps
	}).(VirtualNetworkTapResponseArrayOutput)
}

type NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput) ToNetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput() NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput) ToNetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput) Elem() NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormatResponse) NetworkInterfaceIPConfigurationPropertiesFormatResponse {
		return *v
	}).(NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput)
}

// The reference of ApplicationGatewayBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput) ApplicationGatewayBackendAddressPools() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormatResponse) []ApplicationGatewayBackendAddressPoolResponse {
		if v == nil {
			return nil
		}
		return v.ApplicationGatewayBackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolResponseArrayOutput)
}

// Application security groups in which the IP configuration is included.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput) ApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormatResponse) []ApplicationSecurityGroupResponse {
		if v == nil {
			return nil
		}
		return v.ApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// The reference of LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput) LoadBalancerBackendAddressPools() BackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormatResponse) []BackendAddressPoolResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerBackendAddressPools
	}).(BackendAddressPoolResponseArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput) LoadBalancerInboundNatRules() InboundNatRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormatResponse) []InboundNatRuleResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerInboundNatRules
	}).(InboundNatRuleResponseArrayOutput)
}

// Gets whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.BoolPtrOutput)
}

// Private IP address of the IP configuration.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Public IP address bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormatResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// Subnet bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormatResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

// The reference to Virtual Network Taps.
func (o NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput) VirtualNetworkTaps() VirtualNetworkTapResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPropertiesFormatResponse) []VirtualNetworkTapResponse {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkTaps
	}).(VirtualNetworkTapResponseArrayOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Network interface IP configuration properties.
	Properties *NetworkInterfaceIPConfigurationPropertiesFormatResponse `pulumi:"properties"`
}

// NetworkInterfaceIPConfigurationResponseInput is an input type that accepts NetworkInterfaceIPConfigurationResponseArgs and NetworkInterfaceIPConfigurationResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationResponseInput` via:
//
//          NetworkInterfaceIPConfigurationResponseArgs{...}
type NetworkInterfaceIPConfigurationResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationResponseOutput() NetworkInterfaceIPConfigurationResponseOutput
	ToNetworkInterfaceIPConfigurationResponseOutputWithContext(context.Context) NetworkInterfaceIPConfigurationResponseOutput
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Network interface IP configuration properties.
	Properties NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (NetworkInterfaceIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationResponseArgs) ToNetworkInterfaceIPConfigurationResponseOutput() NetworkInterfaceIPConfigurationResponseOutput {
	return i.ToNetworkInterfaceIPConfigurationResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationResponseArgs) ToNetworkInterfaceIPConfigurationResponseOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationResponseOutput)
}

func (i NetworkInterfaceIPConfigurationResponseArgs) ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return i.ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationResponseArgs) ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationResponseOutput).ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx)
}

// NetworkInterfaceIPConfigurationResponsePtrInput is an input type that accepts NetworkInterfaceIPConfigurationResponseArgs, NetworkInterfaceIPConfigurationResponsePtr and NetworkInterfaceIPConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationResponsePtrInput` via:
//
//          NetworkInterfaceIPConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceIPConfigurationResponsePtrInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput
	ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput
}

type networkInterfaceIPConfigurationResponsePtrType NetworkInterfaceIPConfigurationResponseArgs

func NetworkInterfaceIPConfigurationResponsePtr(v *NetworkInterfaceIPConfigurationResponseArgs) NetworkInterfaceIPConfigurationResponsePtrInput {
	return (*networkInterfaceIPConfigurationResponsePtrType)(v)
}

func (*networkInterfaceIPConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (i *networkInterfaceIPConfigurationResponsePtrType) ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return i.ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *networkInterfaceIPConfigurationResponsePtrType) ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

// NetworkInterfaceIPConfigurationResponseArrayInput is an input type that accepts NetworkInterfaceIPConfigurationResponseArray and NetworkInterfaceIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationResponseArrayInput` via:
//
//          NetworkInterfaceIPConfigurationResponseArray{ NetworkInterfaceIPConfigurationResponseArgs{...} }
type NetworkInterfaceIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationResponseArrayOutput() NetworkInterfaceIPConfigurationResponseArrayOutput
	ToNetworkInterfaceIPConfigurationResponseArrayOutputWithContext(context.Context) NetworkInterfaceIPConfigurationResponseArrayOutput
}

type NetworkInterfaceIPConfigurationResponseArray []NetworkInterfaceIPConfigurationResponseInput

func (NetworkInterfaceIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationResponseArray) ToNetworkInterfaceIPConfigurationResponseArrayOutput() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return i.ToNetworkInterfaceIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationResponseArray) ToNetworkInterfaceIPConfigurationResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ToNetworkInterfaceIPConfigurationResponseOutput() NetworkInterfaceIPConfigurationResponseOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ToNetworkInterfaceIPConfigurationResponseOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponseOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *NetworkInterfaceIPConfigurationResponse {
		return &v
	}).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceIPConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkInterfaceIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Network interface IP configuration properties.
func (o NetworkInterfaceIPConfigurationResponseOutput) Properties() NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *NetworkInterfaceIPConfigurationPropertiesFormatResponse {
		return v.Properties
	}).(NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput)
}

type NetworkInterfaceIPConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Elem() NetworkInterfaceIPConfigurationResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) NetworkInterfaceIPConfigurationResponse { return *v }).(NetworkInterfaceIPConfigurationResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Network interface IP configuration properties.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Properties() NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *NetworkInterfaceIPConfigurationPropertiesFormatResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput)
}

type NetworkInterfaceIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationResponseArrayOutput) ToNetworkInterfaceIPConfigurationResponseArrayOutput() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseArrayOutput) ToNetworkInterfaceIPConfigurationResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceIPConfigurationResponse {
		return vs[0].([]NetworkInterfaceIPConfigurationResponse)[vs[1].(int)]
	}).(NetworkInterfaceIPConfigurationResponseOutput)
}

// NetworkInterface properties.
type NetworkInterfacePropertiesFormat struct {
	// The DNS settings in network interface.
	DnsSettings *NetworkInterfaceDnsSettings `pulumi:"dnsSettings"`
	// If the network interface is accelerated networking enabled.
	EnableAcceleratedNetworking *bool `pulumi:"enableAcceleratedNetworking"`
	// Indicates whether IP forwarding is enabled on this network interface.
	EnableIPForwarding *bool `pulumi:"enableIPForwarding"`
	// A list of IPConfigurations of the network interface.
	IpConfigurations []NetworkInterfaceIPConfiguration `pulumi:"ipConfigurations"`
	// The MAC address of the network interface.
	MacAddress *string `pulumi:"macAddress"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupType `pulumi:"networkSecurityGroup"`
	// Gets whether this is a primary network interface on a virtual machine.
	Primary *bool `pulumi:"primary"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resource GUID property of the network interface resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// A list of TapConfigurations of the network interface.
	TapConfigurations []NetworkInterfaceTapConfigurationType `pulumi:"tapConfigurations"`
}

// NetworkInterfacePropertiesFormatInput is an input type that accepts NetworkInterfacePropertiesFormatArgs and NetworkInterfacePropertiesFormatOutput values.
// You can construct a concrete instance of `NetworkInterfacePropertiesFormatInput` via:
//
//          NetworkInterfacePropertiesFormatArgs{...}
type NetworkInterfacePropertiesFormatInput interface {
	pulumi.Input

	ToNetworkInterfacePropertiesFormatOutput() NetworkInterfacePropertiesFormatOutput
	ToNetworkInterfacePropertiesFormatOutputWithContext(context.Context) NetworkInterfacePropertiesFormatOutput
}

// NetworkInterface properties.
type NetworkInterfacePropertiesFormatArgs struct {
	// The DNS settings in network interface.
	DnsSettings NetworkInterfaceDnsSettingsPtrInput `pulumi:"dnsSettings"`
	// If the network interface is accelerated networking enabled.
	EnableAcceleratedNetworking pulumi.BoolPtrInput `pulumi:"enableAcceleratedNetworking"`
	// Indicates whether IP forwarding is enabled on this network interface.
	EnableIPForwarding pulumi.BoolPtrInput `pulumi:"enableIPForwarding"`
	// A list of IPConfigurations of the network interface.
	IpConfigurations NetworkInterfaceIPConfigurationArrayInput `pulumi:"ipConfigurations"`
	// The MAC address of the network interface.
	MacAddress pulumi.StringPtrInput `pulumi:"macAddress"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup NetworkSecurityGroupTypePtrInput `pulumi:"networkSecurityGroup"`
	// Gets whether this is a primary network interface on a virtual machine.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resource GUID property of the network interface resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// A list of TapConfigurations of the network interface.
	TapConfigurations NetworkInterfaceTapConfigurationTypeArrayInput `pulumi:"tapConfigurations"`
}

func (NetworkInterfacePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacePropertiesFormat)(nil)).Elem()
}

func (i NetworkInterfacePropertiesFormatArgs) ToNetworkInterfacePropertiesFormatOutput() NetworkInterfacePropertiesFormatOutput {
	return i.ToNetworkInterfacePropertiesFormatOutputWithContext(context.Background())
}

func (i NetworkInterfacePropertiesFormatArgs) ToNetworkInterfacePropertiesFormatOutputWithContext(ctx context.Context) NetworkInterfacePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacePropertiesFormatOutput)
}

func (i NetworkInterfacePropertiesFormatArgs) ToNetworkInterfacePropertiesFormatPtrOutput() NetworkInterfacePropertiesFormatPtrOutput {
	return i.ToNetworkInterfacePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i NetworkInterfacePropertiesFormatArgs) ToNetworkInterfacePropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkInterfacePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacePropertiesFormatOutput).ToNetworkInterfacePropertiesFormatPtrOutputWithContext(ctx)
}

// NetworkInterfacePropertiesFormatPtrInput is an input type that accepts NetworkInterfacePropertiesFormatArgs, NetworkInterfacePropertiesFormatPtr and NetworkInterfacePropertiesFormatPtrOutput values.
// You can construct a concrete instance of `NetworkInterfacePropertiesFormatPtrInput` via:
//
//          NetworkInterfacePropertiesFormatArgs{...}
//
//  or:
//
//          nil
type NetworkInterfacePropertiesFormatPtrInput interface {
	pulumi.Input

	ToNetworkInterfacePropertiesFormatPtrOutput() NetworkInterfacePropertiesFormatPtrOutput
	ToNetworkInterfacePropertiesFormatPtrOutputWithContext(context.Context) NetworkInterfacePropertiesFormatPtrOutput
}

type networkInterfacePropertiesFormatPtrType NetworkInterfacePropertiesFormatArgs

func NetworkInterfacePropertiesFormatPtr(v *NetworkInterfacePropertiesFormatArgs) NetworkInterfacePropertiesFormatPtrInput {
	return (*networkInterfacePropertiesFormatPtrType)(v)
}

func (*networkInterfacePropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfacePropertiesFormat)(nil)).Elem()
}

func (i *networkInterfacePropertiesFormatPtrType) ToNetworkInterfacePropertiesFormatPtrOutput() NetworkInterfacePropertiesFormatPtrOutput {
	return i.ToNetworkInterfacePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *networkInterfacePropertiesFormatPtrType) ToNetworkInterfacePropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkInterfacePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacePropertiesFormatPtrOutput)
}

// NetworkInterface properties.
type NetworkInterfacePropertiesFormatOutput struct{ *pulumi.OutputState }

func (NetworkInterfacePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacePropertiesFormat)(nil)).Elem()
}

func (o NetworkInterfacePropertiesFormatOutput) ToNetworkInterfacePropertiesFormatOutput() NetworkInterfacePropertiesFormatOutput {
	return o
}

func (o NetworkInterfacePropertiesFormatOutput) ToNetworkInterfacePropertiesFormatOutputWithContext(ctx context.Context) NetworkInterfacePropertiesFormatOutput {
	return o
}

func (o NetworkInterfacePropertiesFormatOutput) ToNetworkInterfacePropertiesFormatPtrOutput() NetworkInterfacePropertiesFormatPtrOutput {
	return o.ToNetworkInterfacePropertiesFormatPtrOutputWithContext(context.Background())
}

func (o NetworkInterfacePropertiesFormatOutput) ToNetworkInterfacePropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkInterfacePropertiesFormatPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormat) *NetworkInterfacePropertiesFormat {
		return &v
	}).(NetworkInterfacePropertiesFormatPtrOutput)
}

// The DNS settings in network interface.
func (o NetworkInterfacePropertiesFormatOutput) DnsSettings() NetworkInterfaceDnsSettingsPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormat) *NetworkInterfaceDnsSettings { return v.DnsSettings }).(NetworkInterfaceDnsSettingsPtrOutput)
}

// If the network interface is accelerated networking enabled.
func (o NetworkInterfacePropertiesFormatOutput) EnableAcceleratedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormat) *bool { return v.EnableAcceleratedNetworking }).(pulumi.BoolPtrOutput)
}

// Indicates whether IP forwarding is enabled on this network interface.
func (o NetworkInterfacePropertiesFormatOutput) EnableIPForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormat) *bool { return v.EnableIPForwarding }).(pulumi.BoolPtrOutput)
}

// A list of IPConfigurations of the network interface.
func (o NetworkInterfacePropertiesFormatOutput) IpConfigurations() NetworkInterfaceIPConfigurationArrayOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormat) []NetworkInterfaceIPConfiguration { return v.IpConfigurations }).(NetworkInterfaceIPConfigurationArrayOutput)
}

// The MAC address of the network interface.
func (o NetworkInterfacePropertiesFormatOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormat) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

// The reference of the NetworkSecurityGroup resource.
func (o NetworkInterfacePropertiesFormatOutput) NetworkSecurityGroup() NetworkSecurityGroupTypePtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormat) *NetworkSecurityGroupType { return v.NetworkSecurityGroup }).(NetworkSecurityGroupTypePtrOutput)
}

// Gets whether this is a primary network interface on a virtual machine.
func (o NetworkInterfacePropertiesFormatOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormat) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkInterfacePropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network interface resource.
func (o NetworkInterfacePropertiesFormatOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormat) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// A list of TapConfigurations of the network interface.
func (o NetworkInterfacePropertiesFormatOutput) TapConfigurations() NetworkInterfaceTapConfigurationTypeArrayOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormat) []NetworkInterfaceTapConfigurationType {
		return v.TapConfigurations
	}).(NetworkInterfaceTapConfigurationTypeArrayOutput)
}

type NetworkInterfacePropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfacePropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfacePropertiesFormat)(nil)).Elem()
}

func (o NetworkInterfacePropertiesFormatPtrOutput) ToNetworkInterfacePropertiesFormatPtrOutput() NetworkInterfacePropertiesFormatPtrOutput {
	return o
}

func (o NetworkInterfacePropertiesFormatPtrOutput) ToNetworkInterfacePropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkInterfacePropertiesFormatPtrOutput {
	return o
}

func (o NetworkInterfacePropertiesFormatPtrOutput) Elem() NetworkInterfacePropertiesFormatOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormat) NetworkInterfacePropertiesFormat { return *v }).(NetworkInterfacePropertiesFormatOutput)
}

// The DNS settings in network interface.
func (o NetworkInterfacePropertiesFormatPtrOutput) DnsSettings() NetworkInterfaceDnsSettingsPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormat) *NetworkInterfaceDnsSettings {
		if v == nil {
			return nil
		}
		return v.DnsSettings
	}).(NetworkInterfaceDnsSettingsPtrOutput)
}

// If the network interface is accelerated networking enabled.
func (o NetworkInterfacePropertiesFormatPtrOutput) EnableAcceleratedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAcceleratedNetworking
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether IP forwarding is enabled on this network interface.
func (o NetworkInterfacePropertiesFormatPtrOutput) EnableIPForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIPForwarding
	}).(pulumi.BoolPtrOutput)
}

// A list of IPConfigurations of the network interface.
func (o NetworkInterfacePropertiesFormatPtrOutput) IpConfigurations() NetworkInterfaceIPConfigurationArrayOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormat) []NetworkInterfaceIPConfiguration {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(NetworkInterfaceIPConfigurationArrayOutput)
}

// The MAC address of the network interface.
func (o NetworkInterfacePropertiesFormatPtrOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.MacAddress
	}).(pulumi.StringPtrOutput)
}

// The reference of the NetworkSecurityGroup resource.
func (o NetworkInterfacePropertiesFormatPtrOutput) NetworkSecurityGroup() NetworkSecurityGroupTypePtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormat) *NetworkSecurityGroupType {
		if v == nil {
			return nil
		}
		return v.NetworkSecurityGroup
	}).(NetworkSecurityGroupTypePtrOutput)
}

// Gets whether this is a primary network interface on a virtual machine.
func (o NetworkInterfacePropertiesFormatPtrOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.BoolPtrOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkInterfacePropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network interface resource.
func (o NetworkInterfacePropertiesFormatPtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// A list of TapConfigurations of the network interface.
func (o NetworkInterfacePropertiesFormatPtrOutput) TapConfigurations() NetworkInterfaceTapConfigurationTypeArrayOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormat) []NetworkInterfaceTapConfigurationType {
		if v == nil {
			return nil
		}
		return v.TapConfigurations
	}).(NetworkInterfaceTapConfigurationTypeArrayOutput)
}

// NetworkInterface properties.
type NetworkInterfacePropertiesFormatResponse struct {
	// The DNS settings in network interface.
	DnsSettings *NetworkInterfaceDnsSettingsResponse `pulumi:"dnsSettings"`
	// If the network interface is accelerated networking enabled.
	EnableAcceleratedNetworking *bool `pulumi:"enableAcceleratedNetworking"`
	// Indicates whether IP forwarding is enabled on this network interface.
	EnableIPForwarding *bool `pulumi:"enableIPForwarding"`
	// A list of references to linked BareMetal resources
	HostedWorkloads []string `pulumi:"hostedWorkloads"`
	// A reference to the interface endpoint to which the network interface is linked.
	InterfaceEndpoint InterfaceEndpointResponse `pulumi:"interfaceEndpoint"`
	// A list of IPConfigurations of the network interface.
	IpConfigurations []NetworkInterfaceIPConfigurationResponse `pulumi:"ipConfigurations"`
	// The MAC address of the network interface.
	MacAddress *string `pulumi:"macAddress"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupResponse `pulumi:"networkSecurityGroup"`
	// Gets whether this is a primary network interface on a virtual machine.
	Primary *bool `pulumi:"primary"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resource GUID property of the network interface resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// A list of TapConfigurations of the network interface.
	TapConfigurations []NetworkInterfaceTapConfigurationResponse `pulumi:"tapConfigurations"`
	// The reference of a virtual machine.
	VirtualMachine SubResourceResponse `pulumi:"virtualMachine"`
}

// NetworkInterfacePropertiesFormatResponseInput is an input type that accepts NetworkInterfacePropertiesFormatResponseArgs and NetworkInterfacePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `NetworkInterfacePropertiesFormatResponseInput` via:
//
//          NetworkInterfacePropertiesFormatResponseArgs{...}
type NetworkInterfacePropertiesFormatResponseInput interface {
	pulumi.Input

	ToNetworkInterfacePropertiesFormatResponseOutput() NetworkInterfacePropertiesFormatResponseOutput
	ToNetworkInterfacePropertiesFormatResponseOutputWithContext(context.Context) NetworkInterfacePropertiesFormatResponseOutput
}

// NetworkInterface properties.
type NetworkInterfacePropertiesFormatResponseArgs struct {
	// The DNS settings in network interface.
	DnsSettings NetworkInterfaceDnsSettingsResponsePtrInput `pulumi:"dnsSettings"`
	// If the network interface is accelerated networking enabled.
	EnableAcceleratedNetworking pulumi.BoolPtrInput `pulumi:"enableAcceleratedNetworking"`
	// Indicates whether IP forwarding is enabled on this network interface.
	EnableIPForwarding pulumi.BoolPtrInput `pulumi:"enableIPForwarding"`
	// A list of references to linked BareMetal resources
	HostedWorkloads pulumi.StringArrayInput `pulumi:"hostedWorkloads"`
	// A reference to the interface endpoint to which the network interface is linked.
	InterfaceEndpoint InterfaceEndpointResponseInput `pulumi:"interfaceEndpoint"`
	// A list of IPConfigurations of the network interface.
	IpConfigurations NetworkInterfaceIPConfigurationResponseArrayInput `pulumi:"ipConfigurations"`
	// The MAC address of the network interface.
	MacAddress pulumi.StringPtrInput `pulumi:"macAddress"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup NetworkSecurityGroupResponsePtrInput `pulumi:"networkSecurityGroup"`
	// Gets whether this is a primary network interface on a virtual machine.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resource GUID property of the network interface resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// A list of TapConfigurations of the network interface.
	TapConfigurations NetworkInterfaceTapConfigurationResponseArrayInput `pulumi:"tapConfigurations"`
	// The reference of a virtual machine.
	VirtualMachine SubResourceResponseInput `pulumi:"virtualMachine"`
}

func (NetworkInterfacePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacePropertiesFormatResponse)(nil)).Elem()
}

func (i NetworkInterfacePropertiesFormatResponseArgs) ToNetworkInterfacePropertiesFormatResponseOutput() NetworkInterfacePropertiesFormatResponseOutput {
	return i.ToNetworkInterfacePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i NetworkInterfacePropertiesFormatResponseArgs) ToNetworkInterfacePropertiesFormatResponseOutputWithContext(ctx context.Context) NetworkInterfacePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacePropertiesFormatResponseOutput)
}

func (i NetworkInterfacePropertiesFormatResponseArgs) ToNetworkInterfacePropertiesFormatResponsePtrOutput() NetworkInterfacePropertiesFormatResponsePtrOutput {
	return i.ToNetworkInterfacePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i NetworkInterfacePropertiesFormatResponseArgs) ToNetworkInterfacePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkInterfacePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacePropertiesFormatResponseOutput).ToNetworkInterfacePropertiesFormatResponsePtrOutputWithContext(ctx)
}

// NetworkInterfacePropertiesFormatResponsePtrInput is an input type that accepts NetworkInterfacePropertiesFormatResponseArgs, NetworkInterfacePropertiesFormatResponsePtr and NetworkInterfacePropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `NetworkInterfacePropertiesFormatResponsePtrInput` via:
//
//          NetworkInterfacePropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type NetworkInterfacePropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToNetworkInterfacePropertiesFormatResponsePtrOutput() NetworkInterfacePropertiesFormatResponsePtrOutput
	ToNetworkInterfacePropertiesFormatResponsePtrOutputWithContext(context.Context) NetworkInterfacePropertiesFormatResponsePtrOutput
}

type networkInterfacePropertiesFormatResponsePtrType NetworkInterfacePropertiesFormatResponseArgs

func NetworkInterfacePropertiesFormatResponsePtr(v *NetworkInterfacePropertiesFormatResponseArgs) NetworkInterfacePropertiesFormatResponsePtrInput {
	return (*networkInterfacePropertiesFormatResponsePtrType)(v)
}

func (*networkInterfacePropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfacePropertiesFormatResponse)(nil)).Elem()
}

func (i *networkInterfacePropertiesFormatResponsePtrType) ToNetworkInterfacePropertiesFormatResponsePtrOutput() NetworkInterfacePropertiesFormatResponsePtrOutput {
	return i.ToNetworkInterfacePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *networkInterfacePropertiesFormatResponsePtrType) ToNetworkInterfacePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkInterfacePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacePropertiesFormatResponsePtrOutput)
}

// NetworkInterface properties.
type NetworkInterfacePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfacePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacePropertiesFormatResponse)(nil)).Elem()
}

func (o NetworkInterfacePropertiesFormatResponseOutput) ToNetworkInterfacePropertiesFormatResponseOutput() NetworkInterfacePropertiesFormatResponseOutput {
	return o
}

func (o NetworkInterfacePropertiesFormatResponseOutput) ToNetworkInterfacePropertiesFormatResponseOutputWithContext(ctx context.Context) NetworkInterfacePropertiesFormatResponseOutput {
	return o
}

func (o NetworkInterfacePropertiesFormatResponseOutput) ToNetworkInterfacePropertiesFormatResponsePtrOutput() NetworkInterfacePropertiesFormatResponsePtrOutput {
	return o.ToNetworkInterfacePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o NetworkInterfacePropertiesFormatResponseOutput) ToNetworkInterfacePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkInterfacePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormatResponse) *NetworkInterfacePropertiesFormatResponse {
		return &v
	}).(NetworkInterfacePropertiesFormatResponsePtrOutput)
}

// The DNS settings in network interface.
func (o NetworkInterfacePropertiesFormatResponseOutput) DnsSettings() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormatResponse) *NetworkInterfaceDnsSettingsResponse {
		return v.DnsSettings
	}).(NetworkInterfaceDnsSettingsResponsePtrOutput)
}

// If the network interface is accelerated networking enabled.
func (o NetworkInterfacePropertiesFormatResponseOutput) EnableAcceleratedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormatResponse) *bool { return v.EnableAcceleratedNetworking }).(pulumi.BoolPtrOutput)
}

// Indicates whether IP forwarding is enabled on this network interface.
func (o NetworkInterfacePropertiesFormatResponseOutput) EnableIPForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormatResponse) *bool { return v.EnableIPForwarding }).(pulumi.BoolPtrOutput)
}

// A list of references to linked BareMetal resources
func (o NetworkInterfacePropertiesFormatResponseOutput) HostedWorkloads() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormatResponse) []string { return v.HostedWorkloads }).(pulumi.StringArrayOutput)
}

// A reference to the interface endpoint to which the network interface is linked.
func (o NetworkInterfacePropertiesFormatResponseOutput) InterfaceEndpoint() InterfaceEndpointResponseOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormatResponse) InterfaceEndpointResponse { return v.InterfaceEndpoint }).(InterfaceEndpointResponseOutput)
}

// A list of IPConfigurations of the network interface.
func (o NetworkInterfacePropertiesFormatResponseOutput) IpConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormatResponse) []NetworkInterfaceIPConfigurationResponse {
		return v.IpConfigurations
	}).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// The MAC address of the network interface.
func (o NetworkInterfacePropertiesFormatResponseOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormatResponse) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

// The reference of the NetworkSecurityGroup resource.
func (o NetworkInterfacePropertiesFormatResponseOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormatResponse) *NetworkSecurityGroupResponse {
		return v.NetworkSecurityGroup
	}).(NetworkSecurityGroupResponsePtrOutput)
}

// Gets whether this is a primary network interface on a virtual machine.
func (o NetworkInterfacePropertiesFormatResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormatResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkInterfacePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network interface resource.
func (o NetworkInterfacePropertiesFormatResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormatResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// A list of TapConfigurations of the network interface.
func (o NetworkInterfacePropertiesFormatResponseOutput) TapConfigurations() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormatResponse) []NetworkInterfaceTapConfigurationResponse {
		return v.TapConfigurations
	}).(NetworkInterfaceTapConfigurationResponseArrayOutput)
}

// The reference of a virtual machine.
func (o NetworkInterfacePropertiesFormatResponseOutput) VirtualMachine() SubResourceResponseOutput {
	return o.ApplyT(func(v NetworkInterfacePropertiesFormatResponse) SubResourceResponse { return v.VirtualMachine }).(SubResourceResponseOutput)
}

type NetworkInterfacePropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfacePropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfacePropertiesFormatResponse)(nil)).Elem()
}

func (o NetworkInterfacePropertiesFormatResponsePtrOutput) ToNetworkInterfacePropertiesFormatResponsePtrOutput() NetworkInterfacePropertiesFormatResponsePtrOutput {
	return o
}

func (o NetworkInterfacePropertiesFormatResponsePtrOutput) ToNetworkInterfacePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkInterfacePropertiesFormatResponsePtrOutput {
	return o
}

func (o NetworkInterfacePropertiesFormatResponsePtrOutput) Elem() NetworkInterfacePropertiesFormatResponseOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormatResponse) NetworkInterfacePropertiesFormatResponse { return *v }).(NetworkInterfacePropertiesFormatResponseOutput)
}

// The DNS settings in network interface.
func (o NetworkInterfacePropertiesFormatResponsePtrOutput) DnsSettings() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormatResponse) *NetworkInterfaceDnsSettingsResponse {
		if v == nil {
			return nil
		}
		return v.DnsSettings
	}).(NetworkInterfaceDnsSettingsResponsePtrOutput)
}

// If the network interface is accelerated networking enabled.
func (o NetworkInterfacePropertiesFormatResponsePtrOutput) EnableAcceleratedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAcceleratedNetworking
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether IP forwarding is enabled on this network interface.
func (o NetworkInterfacePropertiesFormatResponsePtrOutput) EnableIPForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIPForwarding
	}).(pulumi.BoolPtrOutput)
}

// A list of references to linked BareMetal resources
func (o NetworkInterfacePropertiesFormatResponsePtrOutput) HostedWorkloads() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormatResponse) []string {
		if v == nil {
			return nil
		}
		return v.HostedWorkloads
	}).(pulumi.StringArrayOutput)
}

// A reference to the interface endpoint to which the network interface is linked.
func (o NetworkInterfacePropertiesFormatResponsePtrOutput) InterfaceEndpoint() InterfaceEndpointResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormatResponse) *InterfaceEndpointResponse {
		if v == nil {
			return nil
		}
		return &v.InterfaceEndpoint
	}).(InterfaceEndpointResponsePtrOutput)
}

// A list of IPConfigurations of the network interface.
func (o NetworkInterfacePropertiesFormatResponsePtrOutput) IpConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormatResponse) []NetworkInterfaceIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// The MAC address of the network interface.
func (o NetworkInterfacePropertiesFormatResponsePtrOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.MacAddress
	}).(pulumi.StringPtrOutput)
}

// The reference of the NetworkSecurityGroup resource.
func (o NetworkInterfacePropertiesFormatResponsePtrOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormatResponse) *NetworkSecurityGroupResponse {
		if v == nil {
			return nil
		}
		return v.NetworkSecurityGroup
	}).(NetworkSecurityGroupResponsePtrOutput)
}

// Gets whether this is a primary network interface on a virtual machine.
func (o NetworkInterfacePropertiesFormatResponsePtrOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.BoolPtrOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkInterfacePropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network interface resource.
func (o NetworkInterfacePropertiesFormatResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// A list of TapConfigurations of the network interface.
func (o NetworkInterfacePropertiesFormatResponsePtrOutput) TapConfigurations() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormatResponse) []NetworkInterfaceTapConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.TapConfigurations
	}).(NetworkInterfaceTapConfigurationResponseArrayOutput)
}

// The reference of a virtual machine.
func (o NetworkInterfacePropertiesFormatResponsePtrOutput) VirtualMachine() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfacePropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return &v.VirtualMachine
	}).(SubResourceResponsePtrOutput)
}

// A network interface in a resource group.
type NetworkInterfaceResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the network interface.
	Properties *NetworkInterfacePropertiesFormatResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// NetworkInterfaceResponseInput is an input type that accepts NetworkInterfaceResponseArgs and NetworkInterfaceResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceResponseInput` via:
//
//          NetworkInterfaceResponseArgs{...}
type NetworkInterfaceResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceResponseOutput() NetworkInterfaceResponseOutput
	ToNetworkInterfaceResponseOutputWithContext(context.Context) NetworkInterfaceResponseOutput
}

// A network interface in a resource group.
type NetworkInterfaceResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the network interface.
	Properties NetworkInterfacePropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NetworkInterfaceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResponse)(nil)).Elem()
}

func (i NetworkInterfaceResponseArgs) ToNetworkInterfaceResponseOutput() NetworkInterfaceResponseOutput {
	return i.ToNetworkInterfaceResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceResponseArgs) ToNetworkInterfaceResponseOutputWithContext(ctx context.Context) NetworkInterfaceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceResponseOutput)
}

// NetworkInterfaceResponseArrayInput is an input type that accepts NetworkInterfaceResponseArray and NetworkInterfaceResponseArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceResponseArrayInput` via:
//
//          NetworkInterfaceResponseArray{ NetworkInterfaceResponseArgs{...} }
type NetworkInterfaceResponseArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceResponseArrayOutput() NetworkInterfaceResponseArrayOutput
	ToNetworkInterfaceResponseArrayOutputWithContext(context.Context) NetworkInterfaceResponseArrayOutput
}

type NetworkInterfaceResponseArray []NetworkInterfaceResponseInput

func (NetworkInterfaceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceResponse)(nil)).Elem()
}

func (i NetworkInterfaceResponseArray) ToNetworkInterfaceResponseArrayOutput() NetworkInterfaceResponseArrayOutput {
	return i.ToNetworkInterfaceResponseArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceResponseArray) ToNetworkInterfaceResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceResponseArrayOutput)
}

// A network interface in a resource group.
type NetworkInterfaceResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResponse)(nil)).Elem()
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponseOutput() NetworkInterfaceResponseOutput {
	return o
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponseOutputWithContext(ctx context.Context) NetworkInterfaceResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkInterfaceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkInterfaceResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkInterfaceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the network interface.
func (o NetworkInterfaceResponseOutput) Properties() NetworkInterfacePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *NetworkInterfacePropertiesFormatResponse { return v.Properties }).(NetworkInterfacePropertiesFormatResponsePtrOutput)
}

// Resource tags.
func (o NetworkInterfaceResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkInterfaceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.Type }).(pulumi.StringOutput)
}

type NetworkInterfaceResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceResponse)(nil)).Elem()
}

func (o NetworkInterfaceResponseArrayOutput) ToNetworkInterfaceResponseArrayOutput() NetworkInterfaceResponseArrayOutput {
	return o
}

func (o NetworkInterfaceResponseArrayOutput) ToNetworkInterfaceResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceResponseArrayOutput {
	return o
}

func (o NetworkInterfaceResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceResponse {
		return vs[0].([]NetworkInterfaceResponse)[vs[1].(int)]
	}).(NetworkInterfaceResponseOutput)
}

// Tap configuration in a Network Interface
type NetworkInterfaceTapConfigurationType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the Virtual Network Tap configuration
	Properties *NetworkInterfaceTapConfigurationPropertiesFormat `pulumi:"properties"`
}

// NetworkInterfaceTapConfigurationTypeInput is an input type that accepts NetworkInterfaceTapConfigurationTypeArgs and NetworkInterfaceTapConfigurationTypeOutput values.
// You can construct a concrete instance of `NetworkInterfaceTapConfigurationTypeInput` via:
//
//          NetworkInterfaceTapConfigurationTypeArgs{...}
type NetworkInterfaceTapConfigurationTypeInput interface {
	pulumi.Input

	ToNetworkInterfaceTapConfigurationTypeOutput() NetworkInterfaceTapConfigurationTypeOutput
	ToNetworkInterfaceTapConfigurationTypeOutputWithContext(context.Context) NetworkInterfaceTapConfigurationTypeOutput
}

// Tap configuration in a Network Interface
type NetworkInterfaceTapConfigurationTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the Virtual Network Tap configuration
	Properties NetworkInterfaceTapConfigurationPropertiesFormatPtrInput `pulumi:"properties"`
}

func (NetworkInterfaceTapConfigurationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceTapConfigurationType)(nil)).Elem()
}

func (i NetworkInterfaceTapConfigurationTypeArgs) ToNetworkInterfaceTapConfigurationTypeOutput() NetworkInterfaceTapConfigurationTypeOutput {
	return i.ToNetworkInterfaceTapConfigurationTypeOutputWithContext(context.Background())
}

func (i NetworkInterfaceTapConfigurationTypeArgs) ToNetworkInterfaceTapConfigurationTypeOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceTapConfigurationTypeOutput)
}

// NetworkInterfaceTapConfigurationTypeArrayInput is an input type that accepts NetworkInterfaceTapConfigurationTypeArray and NetworkInterfaceTapConfigurationTypeArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceTapConfigurationTypeArrayInput` via:
//
//          NetworkInterfaceTapConfigurationTypeArray{ NetworkInterfaceTapConfigurationTypeArgs{...} }
type NetworkInterfaceTapConfigurationTypeArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceTapConfigurationTypeArrayOutput() NetworkInterfaceTapConfigurationTypeArrayOutput
	ToNetworkInterfaceTapConfigurationTypeArrayOutputWithContext(context.Context) NetworkInterfaceTapConfigurationTypeArrayOutput
}

type NetworkInterfaceTapConfigurationTypeArray []NetworkInterfaceTapConfigurationTypeInput

func (NetworkInterfaceTapConfigurationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceTapConfigurationType)(nil)).Elem()
}

func (i NetworkInterfaceTapConfigurationTypeArray) ToNetworkInterfaceTapConfigurationTypeArrayOutput() NetworkInterfaceTapConfigurationTypeArrayOutput {
	return i.ToNetworkInterfaceTapConfigurationTypeArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceTapConfigurationTypeArray) ToNetworkInterfaceTapConfigurationTypeArrayOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceTapConfigurationTypeArrayOutput)
}

// Tap configuration in a Network Interface
type NetworkInterfaceTapConfigurationTypeOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTapConfigurationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceTapConfigurationType)(nil)).Elem()
}

func (o NetworkInterfaceTapConfigurationTypeOutput) ToNetworkInterfaceTapConfigurationTypeOutput() NetworkInterfaceTapConfigurationTypeOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationTypeOutput) ToNetworkInterfaceTapConfigurationTypeOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationTypeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceTapConfigurationTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkInterfaceTapConfigurationTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceTapConfigurationTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the Virtual Network Tap configuration
func (o NetworkInterfaceTapConfigurationTypeOutput) Properties() NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationType) *NetworkInterfaceTapConfigurationPropertiesFormat {
		return v.Properties
	}).(NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput)
}

type NetworkInterfaceTapConfigurationTypeArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTapConfigurationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceTapConfigurationType)(nil)).Elem()
}

func (o NetworkInterfaceTapConfigurationTypeArrayOutput) ToNetworkInterfaceTapConfigurationTypeArrayOutput() NetworkInterfaceTapConfigurationTypeArrayOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationTypeArrayOutput) ToNetworkInterfaceTapConfigurationTypeArrayOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationTypeArrayOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationTypeArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceTapConfigurationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceTapConfigurationType {
		return vs[0].([]NetworkInterfaceTapConfigurationType)[vs[1].(int)]
	}).(NetworkInterfaceTapConfigurationTypeOutput)
}

// Tap configuration in a Network Interface
type NetworkInterfaceTapConfigurationDefinition struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the Virtual Network Tap configuration
	Properties *NetworkInterfaceTapConfigurationPropertiesFormat `pulumi:"properties"`
}

// NetworkInterfaceTapConfigurationDefinitionInput is an input type that accepts NetworkInterfaceTapConfigurationDefinitionArgs and NetworkInterfaceTapConfigurationDefinitionOutput values.
// You can construct a concrete instance of `NetworkInterfaceTapConfigurationDefinitionInput` via:
//
//          NetworkInterfaceTapConfigurationDefinitionArgs{...}
type NetworkInterfaceTapConfigurationDefinitionInput interface {
	pulumi.Input

	ToNetworkInterfaceTapConfigurationDefinitionOutput() NetworkInterfaceTapConfigurationDefinitionOutput
	ToNetworkInterfaceTapConfigurationDefinitionOutputWithContext(context.Context) NetworkInterfaceTapConfigurationDefinitionOutput
}

// Tap configuration in a Network Interface
type NetworkInterfaceTapConfigurationDefinitionArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the Virtual Network Tap configuration
	Properties NetworkInterfaceTapConfigurationPropertiesFormatPtrInput `pulumi:"properties"`
}

func (NetworkInterfaceTapConfigurationDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceTapConfigurationDefinition)(nil)).Elem()
}

func (i NetworkInterfaceTapConfigurationDefinitionArgs) ToNetworkInterfaceTapConfigurationDefinitionOutput() NetworkInterfaceTapConfigurationDefinitionOutput {
	return i.ToNetworkInterfaceTapConfigurationDefinitionOutputWithContext(context.Background())
}

func (i NetworkInterfaceTapConfigurationDefinitionArgs) ToNetworkInterfaceTapConfigurationDefinitionOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceTapConfigurationDefinitionOutput)
}

// Tap configuration in a Network Interface
type NetworkInterfaceTapConfigurationDefinitionOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTapConfigurationDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceTapConfigurationDefinition)(nil)).Elem()
}

func (o NetworkInterfaceTapConfigurationDefinitionOutput) ToNetworkInterfaceTapConfigurationDefinitionOutput() NetworkInterfaceTapConfigurationDefinitionOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationDefinitionOutput) ToNetworkInterfaceTapConfigurationDefinitionOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationDefinitionOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceTapConfigurationDefinitionOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationDefinition) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkInterfaceTapConfigurationDefinitionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationDefinition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceTapConfigurationDefinitionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationDefinition) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the Virtual Network Tap configuration
func (o NetworkInterfaceTapConfigurationDefinitionOutput) Properties() NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationDefinition) *NetworkInterfaceTapConfigurationPropertiesFormat {
		return v.Properties
	}).(NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput)
}

// Properties of Virtual Network Tap configuration.
type NetworkInterfaceTapConfigurationPropertiesFormat struct {
	// The reference of the Virtual Network Tap resource.
	VirtualNetworkTap *VirtualNetworkTapDefinition `pulumi:"virtualNetworkTap"`
}

// NetworkInterfaceTapConfigurationPropertiesFormatInput is an input type that accepts NetworkInterfaceTapConfigurationPropertiesFormatArgs and NetworkInterfaceTapConfigurationPropertiesFormatOutput values.
// You can construct a concrete instance of `NetworkInterfaceTapConfigurationPropertiesFormatInput` via:
//
//          NetworkInterfaceTapConfigurationPropertiesFormatArgs{...}
type NetworkInterfaceTapConfigurationPropertiesFormatInput interface {
	pulumi.Input

	ToNetworkInterfaceTapConfigurationPropertiesFormatOutput() NetworkInterfaceTapConfigurationPropertiesFormatOutput
	ToNetworkInterfaceTapConfigurationPropertiesFormatOutputWithContext(context.Context) NetworkInterfaceTapConfigurationPropertiesFormatOutput
}

// Properties of Virtual Network Tap configuration.
type NetworkInterfaceTapConfigurationPropertiesFormatArgs struct {
	// The reference of the Virtual Network Tap resource.
	VirtualNetworkTap VirtualNetworkTapDefinitionPtrInput `pulumi:"virtualNetworkTap"`
}

func (NetworkInterfaceTapConfigurationPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceTapConfigurationPropertiesFormat)(nil)).Elem()
}

func (i NetworkInterfaceTapConfigurationPropertiesFormatArgs) ToNetworkInterfaceTapConfigurationPropertiesFormatOutput() NetworkInterfaceTapConfigurationPropertiesFormatOutput {
	return i.ToNetworkInterfaceTapConfigurationPropertiesFormatOutputWithContext(context.Background())
}

func (i NetworkInterfaceTapConfigurationPropertiesFormatArgs) ToNetworkInterfaceTapConfigurationPropertiesFormatOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceTapConfigurationPropertiesFormatOutput)
}

func (i NetworkInterfaceTapConfigurationPropertiesFormatArgs) ToNetworkInterfaceTapConfigurationPropertiesFormatPtrOutput() NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput {
	return i.ToNetworkInterfaceTapConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceTapConfigurationPropertiesFormatArgs) ToNetworkInterfaceTapConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceTapConfigurationPropertiesFormatOutput).ToNetworkInterfaceTapConfigurationPropertiesFormatPtrOutputWithContext(ctx)
}

// NetworkInterfaceTapConfigurationPropertiesFormatPtrInput is an input type that accepts NetworkInterfaceTapConfigurationPropertiesFormatArgs, NetworkInterfaceTapConfigurationPropertiesFormatPtr and NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceTapConfigurationPropertiesFormatPtrInput` via:
//
//          NetworkInterfaceTapConfigurationPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceTapConfigurationPropertiesFormatPtrInput interface {
	pulumi.Input

	ToNetworkInterfaceTapConfigurationPropertiesFormatPtrOutput() NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput
	ToNetworkInterfaceTapConfigurationPropertiesFormatPtrOutputWithContext(context.Context) NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput
}

type networkInterfaceTapConfigurationPropertiesFormatPtrType NetworkInterfaceTapConfigurationPropertiesFormatArgs

func NetworkInterfaceTapConfigurationPropertiesFormatPtr(v *NetworkInterfaceTapConfigurationPropertiesFormatArgs) NetworkInterfaceTapConfigurationPropertiesFormatPtrInput {
	return (*networkInterfaceTapConfigurationPropertiesFormatPtrType)(v)
}

func (*networkInterfaceTapConfigurationPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceTapConfigurationPropertiesFormat)(nil)).Elem()
}

func (i *networkInterfaceTapConfigurationPropertiesFormatPtrType) ToNetworkInterfaceTapConfigurationPropertiesFormatPtrOutput() NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput {
	return i.ToNetworkInterfaceTapConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *networkInterfaceTapConfigurationPropertiesFormatPtrType) ToNetworkInterfaceTapConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput)
}

// Properties of Virtual Network Tap configuration.
type NetworkInterfaceTapConfigurationPropertiesFormatOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTapConfigurationPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceTapConfigurationPropertiesFormat)(nil)).Elem()
}

func (o NetworkInterfaceTapConfigurationPropertiesFormatOutput) ToNetworkInterfaceTapConfigurationPropertiesFormatOutput() NetworkInterfaceTapConfigurationPropertiesFormatOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationPropertiesFormatOutput) ToNetworkInterfaceTapConfigurationPropertiesFormatOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationPropertiesFormatOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationPropertiesFormatOutput) ToNetworkInterfaceTapConfigurationPropertiesFormatPtrOutput() NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput {
	return o.ToNetworkInterfaceTapConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceTapConfigurationPropertiesFormatOutput) ToNetworkInterfaceTapConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationPropertiesFormat) *NetworkInterfaceTapConfigurationPropertiesFormat {
		return &v
	}).(NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput)
}

// The reference of the Virtual Network Tap resource.
func (o NetworkInterfaceTapConfigurationPropertiesFormatOutput) VirtualNetworkTap() VirtualNetworkTapDefinitionPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationPropertiesFormat) *VirtualNetworkTapDefinition {
		return v.VirtualNetworkTap
	}).(VirtualNetworkTapDefinitionPtrOutput)
}

type NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceTapConfigurationPropertiesFormat)(nil)).Elem()
}

func (o NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput) ToNetworkInterfaceTapConfigurationPropertiesFormatPtrOutput() NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput) ToNetworkInterfaceTapConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput) Elem() NetworkInterfaceTapConfigurationPropertiesFormatOutput {
	return o.ApplyT(func(v *NetworkInterfaceTapConfigurationPropertiesFormat) NetworkInterfaceTapConfigurationPropertiesFormat {
		return *v
	}).(NetworkInterfaceTapConfigurationPropertiesFormatOutput)
}

// The reference of the Virtual Network Tap resource.
func (o NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput) VirtualNetworkTap() VirtualNetworkTapDefinitionPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceTapConfigurationPropertiesFormat) *VirtualNetworkTapDefinition {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkTap
	}).(VirtualNetworkTapDefinitionPtrOutput)
}

// Properties of Virtual Network Tap configuration.
type NetworkInterfaceTapConfigurationPropertiesFormatResponse struct {
	// The provisioning state of the network interface tap configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference of the Virtual Network Tap resource.
	VirtualNetworkTap *VirtualNetworkTapResponse `pulumi:"virtualNetworkTap"`
}

// NetworkInterfaceTapConfigurationPropertiesFormatResponseInput is an input type that accepts NetworkInterfaceTapConfigurationPropertiesFormatResponseArgs and NetworkInterfaceTapConfigurationPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceTapConfigurationPropertiesFormatResponseInput` via:
//
//          NetworkInterfaceTapConfigurationPropertiesFormatResponseArgs{...}
type NetworkInterfaceTapConfigurationPropertiesFormatResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceTapConfigurationPropertiesFormatResponseOutput() NetworkInterfaceTapConfigurationPropertiesFormatResponseOutput
	ToNetworkInterfaceTapConfigurationPropertiesFormatResponseOutputWithContext(context.Context) NetworkInterfaceTapConfigurationPropertiesFormatResponseOutput
}

// Properties of Virtual Network Tap configuration.
type NetworkInterfaceTapConfigurationPropertiesFormatResponseArgs struct {
	// The provisioning state of the network interface tap configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The reference of the Virtual Network Tap resource.
	VirtualNetworkTap VirtualNetworkTapResponsePtrInput `pulumi:"virtualNetworkTap"`
}

func (NetworkInterfaceTapConfigurationPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceTapConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (i NetworkInterfaceTapConfigurationPropertiesFormatResponseArgs) ToNetworkInterfaceTapConfigurationPropertiesFormatResponseOutput() NetworkInterfaceTapConfigurationPropertiesFormatResponseOutput {
	return i.ToNetworkInterfaceTapConfigurationPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceTapConfigurationPropertiesFormatResponseArgs) ToNetworkInterfaceTapConfigurationPropertiesFormatResponseOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceTapConfigurationPropertiesFormatResponseOutput)
}

func (i NetworkInterfaceTapConfigurationPropertiesFormatResponseArgs) ToNetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput() NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput {
	return i.ToNetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceTapConfigurationPropertiesFormatResponseArgs) ToNetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceTapConfigurationPropertiesFormatResponseOutput).ToNetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrInput is an input type that accepts NetworkInterfaceTapConfigurationPropertiesFormatResponseArgs, NetworkInterfaceTapConfigurationPropertiesFormatResponsePtr and NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrInput` via:
//
//          NetworkInterfaceTapConfigurationPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToNetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput() NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput
	ToNetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Context) NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput
}

type networkInterfaceTapConfigurationPropertiesFormatResponsePtrType NetworkInterfaceTapConfigurationPropertiesFormatResponseArgs

func NetworkInterfaceTapConfigurationPropertiesFormatResponsePtr(v *NetworkInterfaceTapConfigurationPropertiesFormatResponseArgs) NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrInput {
	return (*networkInterfaceTapConfigurationPropertiesFormatResponsePtrType)(v)
}

func (*networkInterfaceTapConfigurationPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceTapConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (i *networkInterfaceTapConfigurationPropertiesFormatResponsePtrType) ToNetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput() NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput {
	return i.ToNetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *networkInterfaceTapConfigurationPropertiesFormatResponsePtrType) ToNetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput)
}

// Properties of Virtual Network Tap configuration.
type NetworkInterfaceTapConfigurationPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTapConfigurationPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceTapConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (o NetworkInterfaceTapConfigurationPropertiesFormatResponseOutput) ToNetworkInterfaceTapConfigurationPropertiesFormatResponseOutput() NetworkInterfaceTapConfigurationPropertiesFormatResponseOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationPropertiesFormatResponseOutput) ToNetworkInterfaceTapConfigurationPropertiesFormatResponseOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationPropertiesFormatResponseOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationPropertiesFormatResponseOutput) ToNetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput() NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput {
	return o.ToNetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceTapConfigurationPropertiesFormatResponseOutput) ToNetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationPropertiesFormatResponse) *NetworkInterfaceTapConfigurationPropertiesFormatResponse {
		return &v
	}).(NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput)
}

// The provisioning state of the network interface tap configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkInterfaceTapConfigurationPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference of the Virtual Network Tap resource.
func (o NetworkInterfaceTapConfigurationPropertiesFormatResponseOutput) VirtualNetworkTap() VirtualNetworkTapResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationPropertiesFormatResponse) *VirtualNetworkTapResponse {
		return v.VirtualNetworkTap
	}).(VirtualNetworkTapResponsePtrOutput)
}

type NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceTapConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (o NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput) ToNetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput() NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput) ToNetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput) Elem() NetworkInterfaceTapConfigurationPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceTapConfigurationPropertiesFormatResponse) NetworkInterfaceTapConfigurationPropertiesFormatResponse {
		return *v
	}).(NetworkInterfaceTapConfigurationPropertiesFormatResponseOutput)
}

// The provisioning state of the network interface tap configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceTapConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference of the Virtual Network Tap resource.
func (o NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput) VirtualNetworkTap() VirtualNetworkTapResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceTapConfigurationPropertiesFormatResponse) *VirtualNetworkTapResponse {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkTap
	}).(VirtualNetworkTapResponsePtrOutput)
}

// Tap configuration in a Network Interface
type NetworkInterfaceTapConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the Virtual Network Tap configuration
	Properties *NetworkInterfaceTapConfigurationPropertiesFormatResponse `pulumi:"properties"`
	// Sub Resource type.
	Type string `pulumi:"type"`
}

// NetworkInterfaceTapConfigurationResponseInput is an input type that accepts NetworkInterfaceTapConfigurationResponseArgs and NetworkInterfaceTapConfigurationResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceTapConfigurationResponseInput` via:
//
//          NetworkInterfaceTapConfigurationResponseArgs{...}
type NetworkInterfaceTapConfigurationResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceTapConfigurationResponseOutput() NetworkInterfaceTapConfigurationResponseOutput
	ToNetworkInterfaceTapConfigurationResponseOutputWithContext(context.Context) NetworkInterfaceTapConfigurationResponseOutput
}

// Tap configuration in a Network Interface
type NetworkInterfaceTapConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the Virtual Network Tap configuration
	Properties NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Sub Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NetworkInterfaceTapConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceTapConfigurationResponse)(nil)).Elem()
}

func (i NetworkInterfaceTapConfigurationResponseArgs) ToNetworkInterfaceTapConfigurationResponseOutput() NetworkInterfaceTapConfigurationResponseOutput {
	return i.ToNetworkInterfaceTapConfigurationResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceTapConfigurationResponseArgs) ToNetworkInterfaceTapConfigurationResponseOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceTapConfigurationResponseOutput)
}

// NetworkInterfaceTapConfigurationResponseArrayInput is an input type that accepts NetworkInterfaceTapConfigurationResponseArray and NetworkInterfaceTapConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceTapConfigurationResponseArrayInput` via:
//
//          NetworkInterfaceTapConfigurationResponseArray{ NetworkInterfaceTapConfigurationResponseArgs{...} }
type NetworkInterfaceTapConfigurationResponseArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceTapConfigurationResponseArrayOutput() NetworkInterfaceTapConfigurationResponseArrayOutput
	ToNetworkInterfaceTapConfigurationResponseArrayOutputWithContext(context.Context) NetworkInterfaceTapConfigurationResponseArrayOutput
}

type NetworkInterfaceTapConfigurationResponseArray []NetworkInterfaceTapConfigurationResponseInput

func (NetworkInterfaceTapConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceTapConfigurationResponse)(nil)).Elem()
}

func (i NetworkInterfaceTapConfigurationResponseArray) ToNetworkInterfaceTapConfigurationResponseArrayOutput() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return i.ToNetworkInterfaceTapConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceTapConfigurationResponseArray) ToNetworkInterfaceTapConfigurationResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceTapConfigurationResponseArrayOutput)
}

// Tap configuration in a Network Interface
type NetworkInterfaceTapConfigurationResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTapConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceTapConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceTapConfigurationResponseOutput) ToNetworkInterfaceTapConfigurationResponseOutput() NetworkInterfaceTapConfigurationResponseOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationResponseOutput) ToNetworkInterfaceTapConfigurationResponseOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceTapConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkInterfaceTapConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceTapConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the Virtual Network Tap configuration
func (o NetworkInterfaceTapConfigurationResponseOutput) Properties() NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) *NetworkInterfaceTapConfigurationPropertiesFormatResponse {
		return v.Properties
	}).(NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput)
}

// Sub Resource type.
func (o NetworkInterfaceTapConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type NetworkInterfaceTapConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTapConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceTapConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceTapConfigurationResponseArrayOutput) ToNetworkInterfaceTapConfigurationResponseArrayOutput() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationResponseArrayOutput) ToNetworkInterfaceTapConfigurationResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceTapConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceTapConfigurationResponse {
		return vs[0].([]NetworkInterfaceTapConfigurationResponse)[vs[1].(int)]
	}).(NetworkInterfaceTapConfigurationResponseOutput)
}

// Network profile resource.
type NetworkProfileType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Network profile properties.
	Properties NetworkProfilePropertiesFormatResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// NetworkProfileTypeInput is an input type that accepts NetworkProfileTypeArgs and NetworkProfileTypeOutput values.
// You can construct a concrete instance of `NetworkProfileTypeInput` via:
//
//          NetworkProfileTypeArgs{...}
type NetworkProfileTypeInput interface {
	pulumi.Input

	ToNetworkProfileTypeOutput() NetworkProfileTypeOutput
	ToNetworkProfileTypeOutputWithContext(context.Context) NetworkProfileTypeOutput
}

// Network profile resource.
type NetworkProfileTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Network profile properties.
	Properties NetworkProfilePropertiesFormatResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NetworkProfileTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfileType)(nil)).Elem()
}

func (i NetworkProfileTypeArgs) ToNetworkProfileTypeOutput() NetworkProfileTypeOutput {
	return i.ToNetworkProfileTypeOutputWithContext(context.Background())
}

func (i NetworkProfileTypeArgs) ToNetworkProfileTypeOutputWithContext(ctx context.Context) NetworkProfileTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileTypeOutput)
}

// Network profile resource.
type NetworkProfileTypeOutput struct{ *pulumi.OutputState }

func (NetworkProfileTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfileType)(nil)).Elem()
}

func (o NetworkProfileTypeOutput) ToNetworkProfileTypeOutput() NetworkProfileTypeOutput {
	return o
}

func (o NetworkProfileTypeOutput) ToNetworkProfileTypeOutputWithContext(ctx context.Context) NetworkProfileTypeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkProfileTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkProfileTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkProfileTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkProfileType) string { return v.Name }).(pulumi.StringOutput)
}

// Network profile properties.
func (o NetworkProfileTypeOutput) Properties() NetworkProfilePropertiesFormatResponseOutput {
	return o.ApplyT(func(v NetworkProfileType) NetworkProfilePropertiesFormatResponse { return v.Properties }).(NetworkProfilePropertiesFormatResponseOutput)
}

// Resource tags.
func (o NetworkProfileTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkProfileType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkProfileTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkProfileType) string { return v.Type }).(pulumi.StringOutput)
}

// Network profile properties.
type NetworkProfilePropertiesFormat struct {
	// List of chid container network interface configurations.
	ContainerNetworkInterfaceConfigurations []ContainerNetworkInterfaceConfiguration `pulumi:"containerNetworkInterfaceConfigurations"`
	// List of child container network interfaces.
	ContainerNetworkInterfaces []ContainerNetworkInterface `pulumi:"containerNetworkInterfaces"`
}

// NetworkProfilePropertiesFormatInput is an input type that accepts NetworkProfilePropertiesFormatArgs and NetworkProfilePropertiesFormatOutput values.
// You can construct a concrete instance of `NetworkProfilePropertiesFormatInput` via:
//
//          NetworkProfilePropertiesFormatArgs{...}
type NetworkProfilePropertiesFormatInput interface {
	pulumi.Input

	ToNetworkProfilePropertiesFormatOutput() NetworkProfilePropertiesFormatOutput
	ToNetworkProfilePropertiesFormatOutputWithContext(context.Context) NetworkProfilePropertiesFormatOutput
}

// Network profile properties.
type NetworkProfilePropertiesFormatArgs struct {
	// List of chid container network interface configurations.
	ContainerNetworkInterfaceConfigurations ContainerNetworkInterfaceConfigurationArrayInput `pulumi:"containerNetworkInterfaceConfigurations"`
	// List of child container network interfaces.
	ContainerNetworkInterfaces ContainerNetworkInterfaceArrayInput `pulumi:"containerNetworkInterfaces"`
}

func (NetworkProfilePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfilePropertiesFormat)(nil)).Elem()
}

func (i NetworkProfilePropertiesFormatArgs) ToNetworkProfilePropertiesFormatOutput() NetworkProfilePropertiesFormatOutput {
	return i.ToNetworkProfilePropertiesFormatOutputWithContext(context.Background())
}

func (i NetworkProfilePropertiesFormatArgs) ToNetworkProfilePropertiesFormatOutputWithContext(ctx context.Context) NetworkProfilePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfilePropertiesFormatOutput)
}

func (i NetworkProfilePropertiesFormatArgs) ToNetworkProfilePropertiesFormatPtrOutput() NetworkProfilePropertiesFormatPtrOutput {
	return i.ToNetworkProfilePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i NetworkProfilePropertiesFormatArgs) ToNetworkProfilePropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkProfilePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfilePropertiesFormatOutput).ToNetworkProfilePropertiesFormatPtrOutputWithContext(ctx)
}

// NetworkProfilePropertiesFormatPtrInput is an input type that accepts NetworkProfilePropertiesFormatArgs, NetworkProfilePropertiesFormatPtr and NetworkProfilePropertiesFormatPtrOutput values.
// You can construct a concrete instance of `NetworkProfilePropertiesFormatPtrInput` via:
//
//          NetworkProfilePropertiesFormatArgs{...}
//
//  or:
//
//          nil
type NetworkProfilePropertiesFormatPtrInput interface {
	pulumi.Input

	ToNetworkProfilePropertiesFormatPtrOutput() NetworkProfilePropertiesFormatPtrOutput
	ToNetworkProfilePropertiesFormatPtrOutputWithContext(context.Context) NetworkProfilePropertiesFormatPtrOutput
}

type networkProfilePropertiesFormatPtrType NetworkProfilePropertiesFormatArgs

func NetworkProfilePropertiesFormatPtr(v *NetworkProfilePropertiesFormatArgs) NetworkProfilePropertiesFormatPtrInput {
	return (*networkProfilePropertiesFormatPtrType)(v)
}

func (*networkProfilePropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfilePropertiesFormat)(nil)).Elem()
}

func (i *networkProfilePropertiesFormatPtrType) ToNetworkProfilePropertiesFormatPtrOutput() NetworkProfilePropertiesFormatPtrOutput {
	return i.ToNetworkProfilePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *networkProfilePropertiesFormatPtrType) ToNetworkProfilePropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkProfilePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfilePropertiesFormatPtrOutput)
}

// Network profile properties.
type NetworkProfilePropertiesFormatOutput struct{ *pulumi.OutputState }

func (NetworkProfilePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfilePropertiesFormat)(nil)).Elem()
}

func (o NetworkProfilePropertiesFormatOutput) ToNetworkProfilePropertiesFormatOutput() NetworkProfilePropertiesFormatOutput {
	return o
}

func (o NetworkProfilePropertiesFormatOutput) ToNetworkProfilePropertiesFormatOutputWithContext(ctx context.Context) NetworkProfilePropertiesFormatOutput {
	return o
}

func (o NetworkProfilePropertiesFormatOutput) ToNetworkProfilePropertiesFormatPtrOutput() NetworkProfilePropertiesFormatPtrOutput {
	return o.ToNetworkProfilePropertiesFormatPtrOutputWithContext(context.Background())
}

func (o NetworkProfilePropertiesFormatOutput) ToNetworkProfilePropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkProfilePropertiesFormatPtrOutput {
	return o.ApplyT(func(v NetworkProfilePropertiesFormat) *NetworkProfilePropertiesFormat {
		return &v
	}).(NetworkProfilePropertiesFormatPtrOutput)
}

// List of chid container network interface configurations.
func (o NetworkProfilePropertiesFormatOutput) ContainerNetworkInterfaceConfigurations() ContainerNetworkInterfaceConfigurationArrayOutput {
	return o.ApplyT(func(v NetworkProfilePropertiesFormat) []ContainerNetworkInterfaceConfiguration {
		return v.ContainerNetworkInterfaceConfigurations
	}).(ContainerNetworkInterfaceConfigurationArrayOutput)
}

// List of child container network interfaces.
func (o NetworkProfilePropertiesFormatOutput) ContainerNetworkInterfaces() ContainerNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v NetworkProfilePropertiesFormat) []ContainerNetworkInterface {
		return v.ContainerNetworkInterfaces
	}).(ContainerNetworkInterfaceArrayOutput)
}

type NetworkProfilePropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (NetworkProfilePropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfilePropertiesFormat)(nil)).Elem()
}

func (o NetworkProfilePropertiesFormatPtrOutput) ToNetworkProfilePropertiesFormatPtrOutput() NetworkProfilePropertiesFormatPtrOutput {
	return o
}

func (o NetworkProfilePropertiesFormatPtrOutput) ToNetworkProfilePropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkProfilePropertiesFormatPtrOutput {
	return o
}

func (o NetworkProfilePropertiesFormatPtrOutput) Elem() NetworkProfilePropertiesFormatOutput {
	return o.ApplyT(func(v *NetworkProfilePropertiesFormat) NetworkProfilePropertiesFormat { return *v }).(NetworkProfilePropertiesFormatOutput)
}

// List of chid container network interface configurations.
func (o NetworkProfilePropertiesFormatPtrOutput) ContainerNetworkInterfaceConfigurations() ContainerNetworkInterfaceConfigurationArrayOutput {
	return o.ApplyT(func(v *NetworkProfilePropertiesFormat) []ContainerNetworkInterfaceConfiguration {
		if v == nil {
			return nil
		}
		return v.ContainerNetworkInterfaceConfigurations
	}).(ContainerNetworkInterfaceConfigurationArrayOutput)
}

// List of child container network interfaces.
func (o NetworkProfilePropertiesFormatPtrOutput) ContainerNetworkInterfaces() ContainerNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v *NetworkProfilePropertiesFormat) []ContainerNetworkInterface {
		if v == nil {
			return nil
		}
		return v.ContainerNetworkInterfaces
	}).(ContainerNetworkInterfaceArrayOutput)
}

// Network profile properties.
type NetworkProfilePropertiesFormatResponse struct {
	// List of chid container network interface configurations.
	ContainerNetworkInterfaceConfigurations []ContainerNetworkInterfaceConfigurationResponse `pulumi:"containerNetworkInterfaceConfigurations"`
	// List of child container network interfaces.
	ContainerNetworkInterfaces []ContainerNetworkInterfaceResponse `pulumi:"containerNetworkInterfaces"`
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the network interface resource.
	ResourceGuid string `pulumi:"resourceGuid"`
}

// NetworkProfilePropertiesFormatResponseInput is an input type that accepts NetworkProfilePropertiesFormatResponseArgs and NetworkProfilePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `NetworkProfilePropertiesFormatResponseInput` via:
//
//          NetworkProfilePropertiesFormatResponseArgs{...}
type NetworkProfilePropertiesFormatResponseInput interface {
	pulumi.Input

	ToNetworkProfilePropertiesFormatResponseOutput() NetworkProfilePropertiesFormatResponseOutput
	ToNetworkProfilePropertiesFormatResponseOutputWithContext(context.Context) NetworkProfilePropertiesFormatResponseOutput
}

// Network profile properties.
type NetworkProfilePropertiesFormatResponseArgs struct {
	// List of chid container network interface configurations.
	ContainerNetworkInterfaceConfigurations ContainerNetworkInterfaceConfigurationResponseArrayInput `pulumi:"containerNetworkInterfaceConfigurations"`
	// List of child container network interfaces.
	ContainerNetworkInterfaces ContainerNetworkInterfaceResponseArrayInput `pulumi:"containerNetworkInterfaces"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The resource GUID property of the network interface resource.
	ResourceGuid pulumi.StringInput `pulumi:"resourceGuid"`
}

func (NetworkProfilePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfilePropertiesFormatResponse)(nil)).Elem()
}

func (i NetworkProfilePropertiesFormatResponseArgs) ToNetworkProfilePropertiesFormatResponseOutput() NetworkProfilePropertiesFormatResponseOutput {
	return i.ToNetworkProfilePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i NetworkProfilePropertiesFormatResponseArgs) ToNetworkProfilePropertiesFormatResponseOutputWithContext(ctx context.Context) NetworkProfilePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfilePropertiesFormatResponseOutput)
}

func (i NetworkProfilePropertiesFormatResponseArgs) ToNetworkProfilePropertiesFormatResponsePtrOutput() NetworkProfilePropertiesFormatResponsePtrOutput {
	return i.ToNetworkProfilePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i NetworkProfilePropertiesFormatResponseArgs) ToNetworkProfilePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkProfilePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfilePropertiesFormatResponseOutput).ToNetworkProfilePropertiesFormatResponsePtrOutputWithContext(ctx)
}

// NetworkProfilePropertiesFormatResponsePtrInput is an input type that accepts NetworkProfilePropertiesFormatResponseArgs, NetworkProfilePropertiesFormatResponsePtr and NetworkProfilePropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `NetworkProfilePropertiesFormatResponsePtrInput` via:
//
//          NetworkProfilePropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type NetworkProfilePropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToNetworkProfilePropertiesFormatResponsePtrOutput() NetworkProfilePropertiesFormatResponsePtrOutput
	ToNetworkProfilePropertiesFormatResponsePtrOutputWithContext(context.Context) NetworkProfilePropertiesFormatResponsePtrOutput
}

type networkProfilePropertiesFormatResponsePtrType NetworkProfilePropertiesFormatResponseArgs

func NetworkProfilePropertiesFormatResponsePtr(v *NetworkProfilePropertiesFormatResponseArgs) NetworkProfilePropertiesFormatResponsePtrInput {
	return (*networkProfilePropertiesFormatResponsePtrType)(v)
}

func (*networkProfilePropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfilePropertiesFormatResponse)(nil)).Elem()
}

func (i *networkProfilePropertiesFormatResponsePtrType) ToNetworkProfilePropertiesFormatResponsePtrOutput() NetworkProfilePropertiesFormatResponsePtrOutput {
	return i.ToNetworkProfilePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *networkProfilePropertiesFormatResponsePtrType) ToNetworkProfilePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkProfilePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfilePropertiesFormatResponsePtrOutput)
}

// Network profile properties.
type NetworkProfilePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (NetworkProfilePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfilePropertiesFormatResponse)(nil)).Elem()
}

func (o NetworkProfilePropertiesFormatResponseOutput) ToNetworkProfilePropertiesFormatResponseOutput() NetworkProfilePropertiesFormatResponseOutput {
	return o
}

func (o NetworkProfilePropertiesFormatResponseOutput) ToNetworkProfilePropertiesFormatResponseOutputWithContext(ctx context.Context) NetworkProfilePropertiesFormatResponseOutput {
	return o
}

func (o NetworkProfilePropertiesFormatResponseOutput) ToNetworkProfilePropertiesFormatResponsePtrOutput() NetworkProfilePropertiesFormatResponsePtrOutput {
	return o.ToNetworkProfilePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o NetworkProfilePropertiesFormatResponseOutput) ToNetworkProfilePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkProfilePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v NetworkProfilePropertiesFormatResponse) *NetworkProfilePropertiesFormatResponse {
		return &v
	}).(NetworkProfilePropertiesFormatResponsePtrOutput)
}

// List of chid container network interface configurations.
func (o NetworkProfilePropertiesFormatResponseOutput) ContainerNetworkInterfaceConfigurations() ContainerNetworkInterfaceConfigurationResponseArrayOutput {
	return o.ApplyT(func(v NetworkProfilePropertiesFormatResponse) []ContainerNetworkInterfaceConfigurationResponse {
		return v.ContainerNetworkInterfaceConfigurations
	}).(ContainerNetworkInterfaceConfigurationResponseArrayOutput)
}

// List of child container network interfaces.
func (o NetworkProfilePropertiesFormatResponseOutput) ContainerNetworkInterfaces() ContainerNetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v NetworkProfilePropertiesFormatResponse) []ContainerNetworkInterfaceResponse {
		return v.ContainerNetworkInterfaces
	}).(ContainerNetworkInterfaceResponseArrayOutput)
}

// The provisioning state of the resource.
func (o NetworkProfilePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkProfilePropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the network interface resource.
func (o NetworkProfilePropertiesFormatResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkProfilePropertiesFormatResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

type NetworkProfilePropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkProfilePropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfilePropertiesFormatResponse)(nil)).Elem()
}

func (o NetworkProfilePropertiesFormatResponsePtrOutput) ToNetworkProfilePropertiesFormatResponsePtrOutput() NetworkProfilePropertiesFormatResponsePtrOutput {
	return o
}

func (o NetworkProfilePropertiesFormatResponsePtrOutput) ToNetworkProfilePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkProfilePropertiesFormatResponsePtrOutput {
	return o
}

func (o NetworkProfilePropertiesFormatResponsePtrOutput) Elem() NetworkProfilePropertiesFormatResponseOutput {
	return o.ApplyT(func(v *NetworkProfilePropertiesFormatResponse) NetworkProfilePropertiesFormatResponse { return *v }).(NetworkProfilePropertiesFormatResponseOutput)
}

// List of chid container network interface configurations.
func (o NetworkProfilePropertiesFormatResponsePtrOutput) ContainerNetworkInterfaceConfigurations() ContainerNetworkInterfaceConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *NetworkProfilePropertiesFormatResponse) []ContainerNetworkInterfaceConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.ContainerNetworkInterfaceConfigurations
	}).(ContainerNetworkInterfaceConfigurationResponseArrayOutput)
}

// List of child container network interfaces.
func (o NetworkProfilePropertiesFormatResponsePtrOutput) ContainerNetworkInterfaces() ContainerNetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v *NetworkProfilePropertiesFormatResponse) []ContainerNetworkInterfaceResponse {
		if v == nil {
			return nil
		}
		return v.ContainerNetworkInterfaces
	}).(ContainerNetworkInterfaceResponseArrayOutput)
}

// The provisioning state of the resource.
func (o NetworkProfilePropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfilePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network interface resource.
func (o NetworkProfilePropertiesFormatResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfilePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Properties of the network security group
	Properties *NetworkSecurityGroupPropertiesFormat `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// NetworkSecurityGroupTypeInput is an input type that accepts NetworkSecurityGroupTypeArgs and NetworkSecurityGroupTypeOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupTypeInput` via:
//
//          NetworkSecurityGroupTypeArgs{...}
type NetworkSecurityGroupTypeInput interface {
	pulumi.Input

	ToNetworkSecurityGroupTypeOutput() NetworkSecurityGroupTypeOutput
	ToNetworkSecurityGroupTypeOutputWithContext(context.Context) NetworkSecurityGroupTypeOutput
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Properties of the network security group
	Properties NetworkSecurityGroupPropertiesFormatPtrInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (NetworkSecurityGroupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupType)(nil)).Elem()
}

func (i NetworkSecurityGroupTypeArgs) ToNetworkSecurityGroupTypeOutput() NetworkSecurityGroupTypeOutput {
	return i.ToNetworkSecurityGroupTypeOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupTypeArgs) ToNetworkSecurityGroupTypeOutputWithContext(ctx context.Context) NetworkSecurityGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupTypeOutput)
}

func (i NetworkSecurityGroupTypeArgs) ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput {
	return i.ToNetworkSecurityGroupTypePtrOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupTypeArgs) ToNetworkSecurityGroupTypePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupTypeOutput).ToNetworkSecurityGroupTypePtrOutputWithContext(ctx)
}

// NetworkSecurityGroupTypePtrInput is an input type that accepts NetworkSecurityGroupTypeArgs, NetworkSecurityGroupTypePtr and NetworkSecurityGroupTypePtrOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupTypePtrInput` via:
//
//          NetworkSecurityGroupTypeArgs{...}
//
//  or:
//
//          nil
type NetworkSecurityGroupTypePtrInput interface {
	pulumi.Input

	ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput
	ToNetworkSecurityGroupTypePtrOutputWithContext(context.Context) NetworkSecurityGroupTypePtrOutput
}

type networkSecurityGroupTypePtrType NetworkSecurityGroupTypeArgs

func NetworkSecurityGroupTypePtr(v *NetworkSecurityGroupTypeArgs) NetworkSecurityGroupTypePtrInput {
	return (*networkSecurityGroupTypePtrType)(v)
}

func (*networkSecurityGroupTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupType)(nil)).Elem()
}

func (i *networkSecurityGroupTypePtrType) ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput {
	return i.ToNetworkSecurityGroupTypePtrOutputWithContext(context.Background())
}

func (i *networkSecurityGroupTypePtrType) ToNetworkSecurityGroupTypePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupTypePtrOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupTypeOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupType)(nil)).Elem()
}

func (o NetworkSecurityGroupTypeOutput) ToNetworkSecurityGroupTypeOutput() NetworkSecurityGroupTypeOutput {
	return o
}

func (o NetworkSecurityGroupTypeOutput) ToNetworkSecurityGroupTypeOutputWithContext(ctx context.Context) NetworkSecurityGroupTypeOutput {
	return o
}

func (o NetworkSecurityGroupTypeOutput) ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput {
	return o.ToNetworkSecurityGroupTypePtrOutputWithContext(context.Background())
}

func (o NetworkSecurityGroupTypeOutput) ToNetworkSecurityGroupTypePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupTypePtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *NetworkSecurityGroupType {
		return &v
	}).(NetworkSecurityGroupTypePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkSecurityGroupTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Properties of the network security group
func (o NetworkSecurityGroupTypeOutput) Properties() NetworkSecurityGroupPropertiesFormatPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *NetworkSecurityGroupPropertiesFormat { return v.Properties }).(NetworkSecurityGroupPropertiesFormatPtrOutput)
}

// Resource tags.
func (o NetworkSecurityGroupTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type NetworkSecurityGroupTypePtrOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupType)(nil)).Elem()
}

func (o NetworkSecurityGroupTypePtrOutput) ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput {
	return o
}

func (o NetworkSecurityGroupTypePtrOutput) ToNetworkSecurityGroupTypePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupTypePtrOutput {
	return o
}

func (o NetworkSecurityGroupTypePtrOutput) Elem() NetworkSecurityGroupTypeOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) NetworkSecurityGroupType { return *v }).(NetworkSecurityGroupTypeOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkSecurityGroupTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Properties of the network security group
func (o NetworkSecurityGroupTypePtrOutput) Properties() NetworkSecurityGroupPropertiesFormatPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) *NetworkSecurityGroupPropertiesFormat {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(NetworkSecurityGroupPropertiesFormatPtrOutput)
}

// Resource tags.
func (o NetworkSecurityGroupTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupDefinition struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Properties of the network security group
	Properties *NetworkSecurityGroupPropertiesFormat `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// NetworkSecurityGroupDefinitionInput is an input type that accepts NetworkSecurityGroupDefinitionArgs and NetworkSecurityGroupDefinitionOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupDefinitionInput` via:
//
//          NetworkSecurityGroupDefinitionArgs{...}
type NetworkSecurityGroupDefinitionInput interface {
	pulumi.Input

	ToNetworkSecurityGroupDefinitionOutput() NetworkSecurityGroupDefinitionOutput
	ToNetworkSecurityGroupDefinitionOutputWithContext(context.Context) NetworkSecurityGroupDefinitionOutput
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupDefinitionArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Properties of the network security group
	Properties NetworkSecurityGroupPropertiesFormatPtrInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (NetworkSecurityGroupDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupDefinition)(nil)).Elem()
}

func (i NetworkSecurityGroupDefinitionArgs) ToNetworkSecurityGroupDefinitionOutput() NetworkSecurityGroupDefinitionOutput {
	return i.ToNetworkSecurityGroupDefinitionOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupDefinitionArgs) ToNetworkSecurityGroupDefinitionOutputWithContext(ctx context.Context) NetworkSecurityGroupDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupDefinitionOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupDefinitionOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupDefinition)(nil)).Elem()
}

func (o NetworkSecurityGroupDefinitionOutput) ToNetworkSecurityGroupDefinitionOutput() NetworkSecurityGroupDefinitionOutput {
	return o
}

func (o NetworkSecurityGroupDefinitionOutput) ToNetworkSecurityGroupDefinitionOutputWithContext(ctx context.Context) NetworkSecurityGroupDefinitionOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupDefinitionOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupDefinition) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkSecurityGroupDefinitionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupDefinition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupDefinitionOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupDefinition) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Properties of the network security group
func (o NetworkSecurityGroupDefinitionOutput) Properties() NetworkSecurityGroupPropertiesFormatPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupDefinition) *NetworkSecurityGroupPropertiesFormat { return v.Properties }).(NetworkSecurityGroupPropertiesFormatPtrOutput)
}

// Resource tags.
func (o NetworkSecurityGroupDefinitionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityGroupDefinition) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Network Security Group resource.
type NetworkSecurityGroupPropertiesFormat struct {
	// The default security rules of network security group.
	DefaultSecurityRules []SecurityRuleType `pulumi:"defaultSecurityRules"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resource GUID property of the network security group resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// A collection of security rules of the network security group.
	SecurityRules []SecurityRuleType `pulumi:"securityRules"`
}

// NetworkSecurityGroupPropertiesFormatInput is an input type that accepts NetworkSecurityGroupPropertiesFormatArgs and NetworkSecurityGroupPropertiesFormatOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupPropertiesFormatInput` via:
//
//          NetworkSecurityGroupPropertiesFormatArgs{...}
type NetworkSecurityGroupPropertiesFormatInput interface {
	pulumi.Input

	ToNetworkSecurityGroupPropertiesFormatOutput() NetworkSecurityGroupPropertiesFormatOutput
	ToNetworkSecurityGroupPropertiesFormatOutputWithContext(context.Context) NetworkSecurityGroupPropertiesFormatOutput
}

// Network Security Group resource.
type NetworkSecurityGroupPropertiesFormatArgs struct {
	// The default security rules of network security group.
	DefaultSecurityRules SecurityRuleTypeArrayInput `pulumi:"defaultSecurityRules"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resource GUID property of the network security group resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// A collection of security rules of the network security group.
	SecurityRules SecurityRuleTypeArrayInput `pulumi:"securityRules"`
}

func (NetworkSecurityGroupPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupPropertiesFormat)(nil)).Elem()
}

func (i NetworkSecurityGroupPropertiesFormatArgs) ToNetworkSecurityGroupPropertiesFormatOutput() NetworkSecurityGroupPropertiesFormatOutput {
	return i.ToNetworkSecurityGroupPropertiesFormatOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupPropertiesFormatArgs) ToNetworkSecurityGroupPropertiesFormatOutputWithContext(ctx context.Context) NetworkSecurityGroupPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupPropertiesFormatOutput)
}

func (i NetworkSecurityGroupPropertiesFormatArgs) ToNetworkSecurityGroupPropertiesFormatPtrOutput() NetworkSecurityGroupPropertiesFormatPtrOutput {
	return i.ToNetworkSecurityGroupPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupPropertiesFormatArgs) ToNetworkSecurityGroupPropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkSecurityGroupPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupPropertiesFormatOutput).ToNetworkSecurityGroupPropertiesFormatPtrOutputWithContext(ctx)
}

// NetworkSecurityGroupPropertiesFormatPtrInput is an input type that accepts NetworkSecurityGroupPropertiesFormatArgs, NetworkSecurityGroupPropertiesFormatPtr and NetworkSecurityGroupPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupPropertiesFormatPtrInput` via:
//
//          NetworkSecurityGroupPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type NetworkSecurityGroupPropertiesFormatPtrInput interface {
	pulumi.Input

	ToNetworkSecurityGroupPropertiesFormatPtrOutput() NetworkSecurityGroupPropertiesFormatPtrOutput
	ToNetworkSecurityGroupPropertiesFormatPtrOutputWithContext(context.Context) NetworkSecurityGroupPropertiesFormatPtrOutput
}

type networkSecurityGroupPropertiesFormatPtrType NetworkSecurityGroupPropertiesFormatArgs

func NetworkSecurityGroupPropertiesFormatPtr(v *NetworkSecurityGroupPropertiesFormatArgs) NetworkSecurityGroupPropertiesFormatPtrInput {
	return (*networkSecurityGroupPropertiesFormatPtrType)(v)
}

func (*networkSecurityGroupPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupPropertiesFormat)(nil)).Elem()
}

func (i *networkSecurityGroupPropertiesFormatPtrType) ToNetworkSecurityGroupPropertiesFormatPtrOutput() NetworkSecurityGroupPropertiesFormatPtrOutput {
	return i.ToNetworkSecurityGroupPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *networkSecurityGroupPropertiesFormatPtrType) ToNetworkSecurityGroupPropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkSecurityGroupPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupPropertiesFormatPtrOutput)
}

// Network Security Group resource.
type NetworkSecurityGroupPropertiesFormatOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupPropertiesFormat)(nil)).Elem()
}

func (o NetworkSecurityGroupPropertiesFormatOutput) ToNetworkSecurityGroupPropertiesFormatOutput() NetworkSecurityGroupPropertiesFormatOutput {
	return o
}

func (o NetworkSecurityGroupPropertiesFormatOutput) ToNetworkSecurityGroupPropertiesFormatOutputWithContext(ctx context.Context) NetworkSecurityGroupPropertiesFormatOutput {
	return o
}

func (o NetworkSecurityGroupPropertiesFormatOutput) ToNetworkSecurityGroupPropertiesFormatPtrOutput() NetworkSecurityGroupPropertiesFormatPtrOutput {
	return o.ToNetworkSecurityGroupPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o NetworkSecurityGroupPropertiesFormatOutput) ToNetworkSecurityGroupPropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkSecurityGroupPropertiesFormatPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupPropertiesFormat) *NetworkSecurityGroupPropertiesFormat {
		return &v
	}).(NetworkSecurityGroupPropertiesFormatPtrOutput)
}

// The default security rules of network security group.
func (o NetworkSecurityGroupPropertiesFormatOutput) DefaultSecurityRules() SecurityRuleTypeArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupPropertiesFormat) []SecurityRuleType { return v.DefaultSecurityRules }).(SecurityRuleTypeArrayOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkSecurityGroupPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupPropertiesFormatOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupPropertiesFormat) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupPropertiesFormatOutput) SecurityRules() SecurityRuleTypeArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupPropertiesFormat) []SecurityRuleType { return v.SecurityRules }).(SecurityRuleTypeArrayOutput)
}

type NetworkSecurityGroupPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupPropertiesFormat)(nil)).Elem()
}

func (o NetworkSecurityGroupPropertiesFormatPtrOutput) ToNetworkSecurityGroupPropertiesFormatPtrOutput() NetworkSecurityGroupPropertiesFormatPtrOutput {
	return o
}

func (o NetworkSecurityGroupPropertiesFormatPtrOutput) ToNetworkSecurityGroupPropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkSecurityGroupPropertiesFormatPtrOutput {
	return o
}

func (o NetworkSecurityGroupPropertiesFormatPtrOutput) Elem() NetworkSecurityGroupPropertiesFormatOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupPropertiesFormat) NetworkSecurityGroupPropertiesFormat { return *v }).(NetworkSecurityGroupPropertiesFormatOutput)
}

// The default security rules of network security group.
func (o NetworkSecurityGroupPropertiesFormatPtrOutput) DefaultSecurityRules() SecurityRuleTypeArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupPropertiesFormat) []SecurityRuleType {
		if v == nil {
			return nil
		}
		return v.DefaultSecurityRules
	}).(SecurityRuleTypeArrayOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkSecurityGroupPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupPropertiesFormatPtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupPropertiesFormatPtrOutput) SecurityRules() SecurityRuleTypeArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupPropertiesFormat) []SecurityRuleType {
		if v == nil {
			return nil
		}
		return v.SecurityRules
	}).(SecurityRuleTypeArrayOutput)
}

// Network Security Group resource.
type NetworkSecurityGroupPropertiesFormatResponse struct {
	// The default security rules of network security group.
	DefaultSecurityRules []SecurityRuleResponse `pulumi:"defaultSecurityRules"`
	// A collection of references to network interfaces.
	NetworkInterfaces []NetworkInterfaceResponse `pulumi:"networkInterfaces"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resource GUID property of the network security group resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// A collection of security rules of the network security group.
	SecurityRules []SecurityRuleResponse `pulumi:"securityRules"`
	// A collection of references to subnets.
	Subnets []SubnetResponse `pulumi:"subnets"`
}

// NetworkSecurityGroupPropertiesFormatResponseInput is an input type that accepts NetworkSecurityGroupPropertiesFormatResponseArgs and NetworkSecurityGroupPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupPropertiesFormatResponseInput` via:
//
//          NetworkSecurityGroupPropertiesFormatResponseArgs{...}
type NetworkSecurityGroupPropertiesFormatResponseInput interface {
	pulumi.Input

	ToNetworkSecurityGroupPropertiesFormatResponseOutput() NetworkSecurityGroupPropertiesFormatResponseOutput
	ToNetworkSecurityGroupPropertiesFormatResponseOutputWithContext(context.Context) NetworkSecurityGroupPropertiesFormatResponseOutput
}

// Network Security Group resource.
type NetworkSecurityGroupPropertiesFormatResponseArgs struct {
	// The default security rules of network security group.
	DefaultSecurityRules SecurityRuleResponseArrayInput `pulumi:"defaultSecurityRules"`
	// A collection of references to network interfaces.
	NetworkInterfaces NetworkInterfaceResponseArrayInput `pulumi:"networkInterfaces"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resource GUID property of the network security group resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// A collection of security rules of the network security group.
	SecurityRules SecurityRuleResponseArrayInput `pulumi:"securityRules"`
	// A collection of references to subnets.
	Subnets SubnetResponseArrayInput `pulumi:"subnets"`
}

func (NetworkSecurityGroupPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupPropertiesFormatResponse)(nil)).Elem()
}

func (i NetworkSecurityGroupPropertiesFormatResponseArgs) ToNetworkSecurityGroupPropertiesFormatResponseOutput() NetworkSecurityGroupPropertiesFormatResponseOutput {
	return i.ToNetworkSecurityGroupPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupPropertiesFormatResponseArgs) ToNetworkSecurityGroupPropertiesFormatResponseOutputWithContext(ctx context.Context) NetworkSecurityGroupPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupPropertiesFormatResponseOutput)
}

func (i NetworkSecurityGroupPropertiesFormatResponseArgs) ToNetworkSecurityGroupPropertiesFormatResponsePtrOutput() NetworkSecurityGroupPropertiesFormatResponsePtrOutput {
	return i.ToNetworkSecurityGroupPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupPropertiesFormatResponseArgs) ToNetworkSecurityGroupPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupPropertiesFormatResponseOutput).ToNetworkSecurityGroupPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// NetworkSecurityGroupPropertiesFormatResponsePtrInput is an input type that accepts NetworkSecurityGroupPropertiesFormatResponseArgs, NetworkSecurityGroupPropertiesFormatResponsePtr and NetworkSecurityGroupPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupPropertiesFormatResponsePtrInput` via:
//
//          NetworkSecurityGroupPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type NetworkSecurityGroupPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToNetworkSecurityGroupPropertiesFormatResponsePtrOutput() NetworkSecurityGroupPropertiesFormatResponsePtrOutput
	ToNetworkSecurityGroupPropertiesFormatResponsePtrOutputWithContext(context.Context) NetworkSecurityGroupPropertiesFormatResponsePtrOutput
}

type networkSecurityGroupPropertiesFormatResponsePtrType NetworkSecurityGroupPropertiesFormatResponseArgs

func NetworkSecurityGroupPropertiesFormatResponsePtr(v *NetworkSecurityGroupPropertiesFormatResponseArgs) NetworkSecurityGroupPropertiesFormatResponsePtrInput {
	return (*networkSecurityGroupPropertiesFormatResponsePtrType)(v)
}

func (*networkSecurityGroupPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupPropertiesFormatResponse)(nil)).Elem()
}

func (i *networkSecurityGroupPropertiesFormatResponsePtrType) ToNetworkSecurityGroupPropertiesFormatResponsePtrOutput() NetworkSecurityGroupPropertiesFormatResponsePtrOutput {
	return i.ToNetworkSecurityGroupPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *networkSecurityGroupPropertiesFormatResponsePtrType) ToNetworkSecurityGroupPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupPropertiesFormatResponsePtrOutput)
}

// Network Security Group resource.
type NetworkSecurityGroupPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupPropertiesFormatResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupPropertiesFormatResponseOutput) ToNetworkSecurityGroupPropertiesFormatResponseOutput() NetworkSecurityGroupPropertiesFormatResponseOutput {
	return o
}

func (o NetworkSecurityGroupPropertiesFormatResponseOutput) ToNetworkSecurityGroupPropertiesFormatResponseOutputWithContext(ctx context.Context) NetworkSecurityGroupPropertiesFormatResponseOutput {
	return o
}

func (o NetworkSecurityGroupPropertiesFormatResponseOutput) ToNetworkSecurityGroupPropertiesFormatResponsePtrOutput() NetworkSecurityGroupPropertiesFormatResponsePtrOutput {
	return o.ToNetworkSecurityGroupPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o NetworkSecurityGroupPropertiesFormatResponseOutput) ToNetworkSecurityGroupPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupPropertiesFormatResponse) *NetworkSecurityGroupPropertiesFormatResponse {
		return &v
	}).(NetworkSecurityGroupPropertiesFormatResponsePtrOutput)
}

// The default security rules of network security group.
func (o NetworkSecurityGroupPropertiesFormatResponseOutput) DefaultSecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupPropertiesFormatResponse) []SecurityRuleResponse {
		return v.DefaultSecurityRules
	}).(SecurityRuleResponseArrayOutput)
}

// A collection of references to network interfaces.
func (o NetworkSecurityGroupPropertiesFormatResponseOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupPropertiesFormatResponse) []NetworkInterfaceResponse {
		return v.NetworkInterfaces
	}).(NetworkInterfaceResponseArrayOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkSecurityGroupPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupPropertiesFormatResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupPropertiesFormatResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupPropertiesFormatResponseOutput) SecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupPropertiesFormatResponse) []SecurityRuleResponse { return v.SecurityRules }).(SecurityRuleResponseArrayOutput)
}

// A collection of references to subnets.
func (o NetworkSecurityGroupPropertiesFormatResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupPropertiesFormatResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

type NetworkSecurityGroupPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupPropertiesFormatResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupPropertiesFormatResponsePtrOutput) ToNetworkSecurityGroupPropertiesFormatResponsePtrOutput() NetworkSecurityGroupPropertiesFormatResponsePtrOutput {
	return o
}

func (o NetworkSecurityGroupPropertiesFormatResponsePtrOutput) ToNetworkSecurityGroupPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupPropertiesFormatResponsePtrOutput {
	return o
}

func (o NetworkSecurityGroupPropertiesFormatResponsePtrOutput) Elem() NetworkSecurityGroupPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupPropertiesFormatResponse) NetworkSecurityGroupPropertiesFormatResponse {
		return *v
	}).(NetworkSecurityGroupPropertiesFormatResponseOutput)
}

// The default security rules of network security group.
func (o NetworkSecurityGroupPropertiesFormatResponsePtrOutput) DefaultSecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupPropertiesFormatResponse) []SecurityRuleResponse {
		if v == nil {
			return nil
		}
		return v.DefaultSecurityRules
	}).(SecurityRuleResponseArrayOutput)
}

// A collection of references to network interfaces.
func (o NetworkSecurityGroupPropertiesFormatResponsePtrOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupPropertiesFormatResponse) []NetworkInterfaceResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(NetworkInterfaceResponseArrayOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkSecurityGroupPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupPropertiesFormatResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupPropertiesFormatResponsePtrOutput) SecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupPropertiesFormatResponse) []SecurityRuleResponse {
		if v == nil {
			return nil
		}
		return v.SecurityRules
	}).(SecurityRuleResponseArrayOutput)
}

// A collection of references to subnets.
func (o NetworkSecurityGroupPropertiesFormatResponsePtrOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupPropertiesFormatResponse) []SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetResponseArrayOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the network security group
	Properties *NetworkSecurityGroupPropertiesFormatResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// NetworkSecurityGroupResponseInput is an input type that accepts NetworkSecurityGroupResponseArgs and NetworkSecurityGroupResponseOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupResponseInput` via:
//
//          NetworkSecurityGroupResponseArgs{...}
type NetworkSecurityGroupResponseInput interface {
	pulumi.Input

	ToNetworkSecurityGroupResponseOutput() NetworkSecurityGroupResponseOutput
	ToNetworkSecurityGroupResponseOutputWithContext(context.Context) NetworkSecurityGroupResponseOutput
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the network security group
	Properties NetworkSecurityGroupPropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NetworkSecurityGroupResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupResponse)(nil)).Elem()
}

func (i NetworkSecurityGroupResponseArgs) ToNetworkSecurityGroupResponseOutput() NetworkSecurityGroupResponseOutput {
	return i.ToNetworkSecurityGroupResponseOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupResponseArgs) ToNetworkSecurityGroupResponseOutputWithContext(ctx context.Context) NetworkSecurityGroupResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupResponseOutput)
}

func (i NetworkSecurityGroupResponseArgs) ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput {
	return i.ToNetworkSecurityGroupResponsePtrOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupResponseArgs) ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupResponseOutput).ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx)
}

// NetworkSecurityGroupResponsePtrInput is an input type that accepts NetworkSecurityGroupResponseArgs, NetworkSecurityGroupResponsePtr and NetworkSecurityGroupResponsePtrOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupResponsePtrInput` via:
//
//          NetworkSecurityGroupResponseArgs{...}
//
//  or:
//
//          nil
type NetworkSecurityGroupResponsePtrInput interface {
	pulumi.Input

	ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput
	ToNetworkSecurityGroupResponsePtrOutputWithContext(context.Context) NetworkSecurityGroupResponsePtrOutput
}

type networkSecurityGroupResponsePtrType NetworkSecurityGroupResponseArgs

func NetworkSecurityGroupResponsePtr(v *NetworkSecurityGroupResponseArgs) NetworkSecurityGroupResponsePtrInput {
	return (*networkSecurityGroupResponsePtrType)(v)
}

func (*networkSecurityGroupResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupResponse)(nil)).Elem()
}

func (i *networkSecurityGroupResponsePtrType) ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput {
	return i.ToNetworkSecurityGroupResponsePtrOutputWithContext(context.Background())
}

func (i *networkSecurityGroupResponsePtrType) ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupResponsePtrOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupResponseOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupResponseOutput) ToNetworkSecurityGroupResponseOutput() NetworkSecurityGroupResponseOutput {
	return o
}

func (o NetworkSecurityGroupResponseOutput) ToNetworkSecurityGroupResponseOutputWithContext(ctx context.Context) NetworkSecurityGroupResponseOutput {
	return o
}

func (o NetworkSecurityGroupResponseOutput) ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput {
	return o.ToNetworkSecurityGroupResponsePtrOutputWithContext(context.Background())
}

func (o NetworkSecurityGroupResponseOutput) ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *NetworkSecurityGroupResponse {
		return &v
	}).(NetworkSecurityGroupResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkSecurityGroupResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkSecurityGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the network security group
func (o NetworkSecurityGroupResponseOutput) Properties() NetworkSecurityGroupPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *NetworkSecurityGroupPropertiesFormatResponse {
		return v.Properties
	}).(NetworkSecurityGroupPropertiesFormatResponsePtrOutput)
}

// Resource tags.
func (o NetworkSecurityGroupResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkSecurityGroupResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.Type }).(pulumi.StringOutput)
}

type NetworkSecurityGroupResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupResponsePtrOutput) ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput {
	return o
}

func (o NetworkSecurityGroupResponsePtrOutput) ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupResponsePtrOutput {
	return o
}

func (o NetworkSecurityGroupResponsePtrOutput) Elem() NetworkSecurityGroupResponseOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) NetworkSecurityGroupResponse { return *v }).(NetworkSecurityGroupResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkSecurityGroupResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkSecurityGroupResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Properties of the network security group
func (o NetworkSecurityGroupResponsePtrOutput) Properties() NetworkSecurityGroupPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *NetworkSecurityGroupPropertiesFormatResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(NetworkSecurityGroupPropertiesFormatResponsePtrOutput)
}

// Resource tags.
func (o NetworkSecurityGroupResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkSecurityGroupResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Network watcher in a resource group.
type NetworkWatcherType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The network watcher properties.
	Properties NetworkWatcherPropertiesFormatResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// NetworkWatcherTypeInput is an input type that accepts NetworkWatcherTypeArgs and NetworkWatcherTypeOutput values.
// You can construct a concrete instance of `NetworkWatcherTypeInput` via:
//
//          NetworkWatcherTypeArgs{...}
type NetworkWatcherTypeInput interface {
	pulumi.Input

	ToNetworkWatcherTypeOutput() NetworkWatcherTypeOutput
	ToNetworkWatcherTypeOutputWithContext(context.Context) NetworkWatcherTypeOutput
}

// Network watcher in a resource group.
type NetworkWatcherTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The network watcher properties.
	Properties NetworkWatcherPropertiesFormatResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NetworkWatcherTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkWatcherType)(nil)).Elem()
}

func (i NetworkWatcherTypeArgs) ToNetworkWatcherTypeOutput() NetworkWatcherTypeOutput {
	return i.ToNetworkWatcherTypeOutputWithContext(context.Background())
}

func (i NetworkWatcherTypeArgs) ToNetworkWatcherTypeOutputWithContext(ctx context.Context) NetworkWatcherTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkWatcherTypeOutput)
}

// Network watcher in a resource group.
type NetworkWatcherTypeOutput struct{ *pulumi.OutputState }

func (NetworkWatcherTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkWatcherType)(nil)).Elem()
}

func (o NetworkWatcherTypeOutput) ToNetworkWatcherTypeOutput() NetworkWatcherTypeOutput {
	return o
}

func (o NetworkWatcherTypeOutput) ToNetworkWatcherTypeOutputWithContext(ctx context.Context) NetworkWatcherTypeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkWatcherTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkWatcherType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkWatcherTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkWatcherType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkWatcherTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkWatcherType) string { return v.Name }).(pulumi.StringOutput)
}

// The network watcher properties.
func (o NetworkWatcherTypeOutput) Properties() NetworkWatcherPropertiesFormatResponseOutput {
	return o.ApplyT(func(v NetworkWatcherType) NetworkWatcherPropertiesFormatResponse { return v.Properties }).(NetworkWatcherPropertiesFormatResponseOutput)
}

// Resource tags.
func (o NetworkWatcherTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkWatcherType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkWatcherTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkWatcherType) string { return v.Type }).(pulumi.StringOutput)
}

// The network watcher properties.
type NetworkWatcherPropertiesFormat struct {
}

// NetworkWatcherPropertiesFormatInput is an input type that accepts NetworkWatcherPropertiesFormatArgs and NetworkWatcherPropertiesFormatOutput values.
// You can construct a concrete instance of `NetworkWatcherPropertiesFormatInput` via:
//
//          NetworkWatcherPropertiesFormatArgs{...}
type NetworkWatcherPropertiesFormatInput interface {
	pulumi.Input

	ToNetworkWatcherPropertiesFormatOutput() NetworkWatcherPropertiesFormatOutput
	ToNetworkWatcherPropertiesFormatOutputWithContext(context.Context) NetworkWatcherPropertiesFormatOutput
}

// The network watcher properties.
type NetworkWatcherPropertiesFormatArgs struct {
}

func (NetworkWatcherPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkWatcherPropertiesFormat)(nil)).Elem()
}

func (i NetworkWatcherPropertiesFormatArgs) ToNetworkWatcherPropertiesFormatOutput() NetworkWatcherPropertiesFormatOutput {
	return i.ToNetworkWatcherPropertiesFormatOutputWithContext(context.Background())
}

func (i NetworkWatcherPropertiesFormatArgs) ToNetworkWatcherPropertiesFormatOutputWithContext(ctx context.Context) NetworkWatcherPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkWatcherPropertiesFormatOutput)
}

func (i NetworkWatcherPropertiesFormatArgs) ToNetworkWatcherPropertiesFormatPtrOutput() NetworkWatcherPropertiesFormatPtrOutput {
	return i.ToNetworkWatcherPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i NetworkWatcherPropertiesFormatArgs) ToNetworkWatcherPropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkWatcherPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkWatcherPropertiesFormatOutput).ToNetworkWatcherPropertiesFormatPtrOutputWithContext(ctx)
}

// NetworkWatcherPropertiesFormatPtrInput is an input type that accepts NetworkWatcherPropertiesFormatArgs, NetworkWatcherPropertiesFormatPtr and NetworkWatcherPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `NetworkWatcherPropertiesFormatPtrInput` via:
//
//          NetworkWatcherPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type NetworkWatcherPropertiesFormatPtrInput interface {
	pulumi.Input

	ToNetworkWatcherPropertiesFormatPtrOutput() NetworkWatcherPropertiesFormatPtrOutput
	ToNetworkWatcherPropertiesFormatPtrOutputWithContext(context.Context) NetworkWatcherPropertiesFormatPtrOutput
}

type networkWatcherPropertiesFormatPtrType NetworkWatcherPropertiesFormatArgs

func NetworkWatcherPropertiesFormatPtr(v *NetworkWatcherPropertiesFormatArgs) NetworkWatcherPropertiesFormatPtrInput {
	return (*networkWatcherPropertiesFormatPtrType)(v)
}

func (*networkWatcherPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkWatcherPropertiesFormat)(nil)).Elem()
}

func (i *networkWatcherPropertiesFormatPtrType) ToNetworkWatcherPropertiesFormatPtrOutput() NetworkWatcherPropertiesFormatPtrOutput {
	return i.ToNetworkWatcherPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *networkWatcherPropertiesFormatPtrType) ToNetworkWatcherPropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkWatcherPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkWatcherPropertiesFormatPtrOutput)
}

// The network watcher properties.
type NetworkWatcherPropertiesFormatOutput struct{ *pulumi.OutputState }

func (NetworkWatcherPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkWatcherPropertiesFormat)(nil)).Elem()
}

func (o NetworkWatcherPropertiesFormatOutput) ToNetworkWatcherPropertiesFormatOutput() NetworkWatcherPropertiesFormatOutput {
	return o
}

func (o NetworkWatcherPropertiesFormatOutput) ToNetworkWatcherPropertiesFormatOutputWithContext(ctx context.Context) NetworkWatcherPropertiesFormatOutput {
	return o
}

func (o NetworkWatcherPropertiesFormatOutput) ToNetworkWatcherPropertiesFormatPtrOutput() NetworkWatcherPropertiesFormatPtrOutput {
	return o.ToNetworkWatcherPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o NetworkWatcherPropertiesFormatOutput) ToNetworkWatcherPropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkWatcherPropertiesFormatPtrOutput {
	return o.ApplyT(func(v NetworkWatcherPropertiesFormat) *NetworkWatcherPropertiesFormat {
		return &v
	}).(NetworkWatcherPropertiesFormatPtrOutput)
}

type NetworkWatcherPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (NetworkWatcherPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkWatcherPropertiesFormat)(nil)).Elem()
}

func (o NetworkWatcherPropertiesFormatPtrOutput) ToNetworkWatcherPropertiesFormatPtrOutput() NetworkWatcherPropertiesFormatPtrOutput {
	return o
}

func (o NetworkWatcherPropertiesFormatPtrOutput) ToNetworkWatcherPropertiesFormatPtrOutputWithContext(ctx context.Context) NetworkWatcherPropertiesFormatPtrOutput {
	return o
}

func (o NetworkWatcherPropertiesFormatPtrOutput) Elem() NetworkWatcherPropertiesFormatOutput {
	return o.ApplyT(func(v *NetworkWatcherPropertiesFormat) NetworkWatcherPropertiesFormat { return *v }).(NetworkWatcherPropertiesFormatOutput)
}

// The network watcher properties.
type NetworkWatcherPropertiesFormatResponse struct {
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
}

// NetworkWatcherPropertiesFormatResponseInput is an input type that accepts NetworkWatcherPropertiesFormatResponseArgs and NetworkWatcherPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `NetworkWatcherPropertiesFormatResponseInput` via:
//
//          NetworkWatcherPropertiesFormatResponseArgs{...}
type NetworkWatcherPropertiesFormatResponseInput interface {
	pulumi.Input

	ToNetworkWatcherPropertiesFormatResponseOutput() NetworkWatcherPropertiesFormatResponseOutput
	ToNetworkWatcherPropertiesFormatResponseOutputWithContext(context.Context) NetworkWatcherPropertiesFormatResponseOutput
}

// The network watcher properties.
type NetworkWatcherPropertiesFormatResponseArgs struct {
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (NetworkWatcherPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkWatcherPropertiesFormatResponse)(nil)).Elem()
}

func (i NetworkWatcherPropertiesFormatResponseArgs) ToNetworkWatcherPropertiesFormatResponseOutput() NetworkWatcherPropertiesFormatResponseOutput {
	return i.ToNetworkWatcherPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i NetworkWatcherPropertiesFormatResponseArgs) ToNetworkWatcherPropertiesFormatResponseOutputWithContext(ctx context.Context) NetworkWatcherPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkWatcherPropertiesFormatResponseOutput)
}

func (i NetworkWatcherPropertiesFormatResponseArgs) ToNetworkWatcherPropertiesFormatResponsePtrOutput() NetworkWatcherPropertiesFormatResponsePtrOutput {
	return i.ToNetworkWatcherPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i NetworkWatcherPropertiesFormatResponseArgs) ToNetworkWatcherPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkWatcherPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkWatcherPropertiesFormatResponseOutput).ToNetworkWatcherPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// NetworkWatcherPropertiesFormatResponsePtrInput is an input type that accepts NetworkWatcherPropertiesFormatResponseArgs, NetworkWatcherPropertiesFormatResponsePtr and NetworkWatcherPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `NetworkWatcherPropertiesFormatResponsePtrInput` via:
//
//          NetworkWatcherPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type NetworkWatcherPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToNetworkWatcherPropertiesFormatResponsePtrOutput() NetworkWatcherPropertiesFormatResponsePtrOutput
	ToNetworkWatcherPropertiesFormatResponsePtrOutputWithContext(context.Context) NetworkWatcherPropertiesFormatResponsePtrOutput
}

type networkWatcherPropertiesFormatResponsePtrType NetworkWatcherPropertiesFormatResponseArgs

func NetworkWatcherPropertiesFormatResponsePtr(v *NetworkWatcherPropertiesFormatResponseArgs) NetworkWatcherPropertiesFormatResponsePtrInput {
	return (*networkWatcherPropertiesFormatResponsePtrType)(v)
}

func (*networkWatcherPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkWatcherPropertiesFormatResponse)(nil)).Elem()
}

func (i *networkWatcherPropertiesFormatResponsePtrType) ToNetworkWatcherPropertiesFormatResponsePtrOutput() NetworkWatcherPropertiesFormatResponsePtrOutput {
	return i.ToNetworkWatcherPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *networkWatcherPropertiesFormatResponsePtrType) ToNetworkWatcherPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkWatcherPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkWatcherPropertiesFormatResponsePtrOutput)
}

// The network watcher properties.
type NetworkWatcherPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (NetworkWatcherPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkWatcherPropertiesFormatResponse)(nil)).Elem()
}

func (o NetworkWatcherPropertiesFormatResponseOutput) ToNetworkWatcherPropertiesFormatResponseOutput() NetworkWatcherPropertiesFormatResponseOutput {
	return o
}

func (o NetworkWatcherPropertiesFormatResponseOutput) ToNetworkWatcherPropertiesFormatResponseOutputWithContext(ctx context.Context) NetworkWatcherPropertiesFormatResponseOutput {
	return o
}

func (o NetworkWatcherPropertiesFormatResponseOutput) ToNetworkWatcherPropertiesFormatResponsePtrOutput() NetworkWatcherPropertiesFormatResponsePtrOutput {
	return o.ToNetworkWatcherPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o NetworkWatcherPropertiesFormatResponseOutput) ToNetworkWatcherPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkWatcherPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v NetworkWatcherPropertiesFormatResponse) *NetworkWatcherPropertiesFormatResponse {
		return &v
	}).(NetworkWatcherPropertiesFormatResponsePtrOutput)
}

// The provisioning state of the resource.
func (o NetworkWatcherPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkWatcherPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type NetworkWatcherPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkWatcherPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkWatcherPropertiesFormatResponse)(nil)).Elem()
}

func (o NetworkWatcherPropertiesFormatResponsePtrOutput) ToNetworkWatcherPropertiesFormatResponsePtrOutput() NetworkWatcherPropertiesFormatResponsePtrOutput {
	return o
}

func (o NetworkWatcherPropertiesFormatResponsePtrOutput) ToNetworkWatcherPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) NetworkWatcherPropertiesFormatResponsePtrOutput {
	return o
}

func (o NetworkWatcherPropertiesFormatResponsePtrOutput) Elem() NetworkWatcherPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *NetworkWatcherPropertiesFormatResponse) NetworkWatcherPropertiesFormatResponse { return *v }).(NetworkWatcherPropertiesFormatResponseOutput)
}

// The provisioning state of the resource.
func (o NetworkWatcherPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkWatcherPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Outbound rule of the load balancer.
type OutboundRule struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of load balancer outbound rule.
	Properties *OutboundRulePropertiesFormat `pulumi:"properties"`
}

// OutboundRuleInput is an input type that accepts OutboundRuleArgs and OutboundRuleOutput values.
// You can construct a concrete instance of `OutboundRuleInput` via:
//
//          OutboundRuleArgs{...}
type OutboundRuleInput interface {
	pulumi.Input

	ToOutboundRuleOutput() OutboundRuleOutput
	ToOutboundRuleOutputWithContext(context.Context) OutboundRuleOutput
}

// Outbound rule of the load balancer.
type OutboundRuleArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of load balancer outbound rule.
	Properties OutboundRulePropertiesFormatPtrInput `pulumi:"properties"`
}

func (OutboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundRule)(nil)).Elem()
}

func (i OutboundRuleArgs) ToOutboundRuleOutput() OutboundRuleOutput {
	return i.ToOutboundRuleOutputWithContext(context.Background())
}

func (i OutboundRuleArgs) ToOutboundRuleOutputWithContext(ctx context.Context) OutboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundRuleOutput)
}

// OutboundRuleArrayInput is an input type that accepts OutboundRuleArray and OutboundRuleArrayOutput values.
// You can construct a concrete instance of `OutboundRuleArrayInput` via:
//
//          OutboundRuleArray{ OutboundRuleArgs{...} }
type OutboundRuleArrayInput interface {
	pulumi.Input

	ToOutboundRuleArrayOutput() OutboundRuleArrayOutput
	ToOutboundRuleArrayOutputWithContext(context.Context) OutboundRuleArrayOutput
}

type OutboundRuleArray []OutboundRuleInput

func (OutboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundRule)(nil)).Elem()
}

func (i OutboundRuleArray) ToOutboundRuleArrayOutput() OutboundRuleArrayOutput {
	return i.ToOutboundRuleArrayOutputWithContext(context.Background())
}

func (i OutboundRuleArray) ToOutboundRuleArrayOutputWithContext(ctx context.Context) OutboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundRuleArrayOutput)
}

// Outbound rule of the load balancer.
type OutboundRuleOutput struct{ *pulumi.OutputState }

func (OutboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundRule)(nil)).Elem()
}

func (o OutboundRuleOutput) ToOutboundRuleOutput() OutboundRuleOutput {
	return o
}

func (o OutboundRuleOutput) ToOutboundRuleOutputWithContext(ctx context.Context) OutboundRuleOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o OutboundRuleOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundRule) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o OutboundRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o OutboundRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of load balancer outbound rule.
func (o OutboundRuleOutput) Properties() OutboundRulePropertiesFormatPtrOutput {
	return o.ApplyT(func(v OutboundRule) *OutboundRulePropertiesFormat { return v.Properties }).(OutboundRulePropertiesFormatPtrOutput)
}

type OutboundRuleArrayOutput struct{ *pulumi.OutputState }

func (OutboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundRule)(nil)).Elem()
}

func (o OutboundRuleArrayOutput) ToOutboundRuleArrayOutput() OutboundRuleArrayOutput {
	return o
}

func (o OutboundRuleArrayOutput) ToOutboundRuleArrayOutputWithContext(ctx context.Context) OutboundRuleArrayOutput {
	return o
}

func (o OutboundRuleArrayOutput) Index(i pulumi.IntInput) OutboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OutboundRule {
		return vs[0].([]OutboundRule)[vs[1].(int)]
	}).(OutboundRuleOutput)
}

// Outbound rule of the load balancer.
type OutboundRulePropertiesFormat struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts *int `pulumi:"allocatedOutboundPorts"`
	// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResource `pulumi:"backendAddressPool"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations []SubResource `pulumi:"frontendIPConfigurations"`
	// The timeout for the TCP idle connection
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// Protocol - TCP, UDP or All
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// OutboundRulePropertiesFormatInput is an input type that accepts OutboundRulePropertiesFormatArgs and OutboundRulePropertiesFormatOutput values.
// You can construct a concrete instance of `OutboundRulePropertiesFormatInput` via:
//
//          OutboundRulePropertiesFormatArgs{...}
type OutboundRulePropertiesFormatInput interface {
	pulumi.Input

	ToOutboundRulePropertiesFormatOutput() OutboundRulePropertiesFormatOutput
	ToOutboundRulePropertiesFormatOutputWithContext(context.Context) OutboundRulePropertiesFormatOutput
}

// Outbound rule of the load balancer.
type OutboundRulePropertiesFormatArgs struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts pulumi.IntPtrInput `pulumi:"allocatedOutboundPorts"`
	// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourceInput `pulumi:"backendAddressPool"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolPtrInput `pulumi:"enableTcpReset"`
	// The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations SubResourceArrayInput `pulumi:"frontendIPConfigurations"`
	// The timeout for the TCP idle connection
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// Protocol - TCP, UDP or All
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (OutboundRulePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundRulePropertiesFormat)(nil)).Elem()
}

func (i OutboundRulePropertiesFormatArgs) ToOutboundRulePropertiesFormatOutput() OutboundRulePropertiesFormatOutput {
	return i.ToOutboundRulePropertiesFormatOutputWithContext(context.Background())
}

func (i OutboundRulePropertiesFormatArgs) ToOutboundRulePropertiesFormatOutputWithContext(ctx context.Context) OutboundRulePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundRulePropertiesFormatOutput)
}

func (i OutboundRulePropertiesFormatArgs) ToOutboundRulePropertiesFormatPtrOutput() OutboundRulePropertiesFormatPtrOutput {
	return i.ToOutboundRulePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i OutboundRulePropertiesFormatArgs) ToOutboundRulePropertiesFormatPtrOutputWithContext(ctx context.Context) OutboundRulePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundRulePropertiesFormatOutput).ToOutboundRulePropertiesFormatPtrOutputWithContext(ctx)
}

// OutboundRulePropertiesFormatPtrInput is an input type that accepts OutboundRulePropertiesFormatArgs, OutboundRulePropertiesFormatPtr and OutboundRulePropertiesFormatPtrOutput values.
// You can construct a concrete instance of `OutboundRulePropertiesFormatPtrInput` via:
//
//          OutboundRulePropertiesFormatArgs{...}
//
//  or:
//
//          nil
type OutboundRulePropertiesFormatPtrInput interface {
	pulumi.Input

	ToOutboundRulePropertiesFormatPtrOutput() OutboundRulePropertiesFormatPtrOutput
	ToOutboundRulePropertiesFormatPtrOutputWithContext(context.Context) OutboundRulePropertiesFormatPtrOutput
}

type outboundRulePropertiesFormatPtrType OutboundRulePropertiesFormatArgs

func OutboundRulePropertiesFormatPtr(v *OutboundRulePropertiesFormatArgs) OutboundRulePropertiesFormatPtrInput {
	return (*outboundRulePropertiesFormatPtrType)(v)
}

func (*outboundRulePropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OutboundRulePropertiesFormat)(nil)).Elem()
}

func (i *outboundRulePropertiesFormatPtrType) ToOutboundRulePropertiesFormatPtrOutput() OutboundRulePropertiesFormatPtrOutput {
	return i.ToOutboundRulePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *outboundRulePropertiesFormatPtrType) ToOutboundRulePropertiesFormatPtrOutputWithContext(ctx context.Context) OutboundRulePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundRulePropertiesFormatPtrOutput)
}

// Outbound rule of the load balancer.
type OutboundRulePropertiesFormatOutput struct{ *pulumi.OutputState }

func (OutboundRulePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundRulePropertiesFormat)(nil)).Elem()
}

func (o OutboundRulePropertiesFormatOutput) ToOutboundRulePropertiesFormatOutput() OutboundRulePropertiesFormatOutput {
	return o
}

func (o OutboundRulePropertiesFormatOutput) ToOutboundRulePropertiesFormatOutputWithContext(ctx context.Context) OutboundRulePropertiesFormatOutput {
	return o
}

func (o OutboundRulePropertiesFormatOutput) ToOutboundRulePropertiesFormatPtrOutput() OutboundRulePropertiesFormatPtrOutput {
	return o.ToOutboundRulePropertiesFormatPtrOutputWithContext(context.Background())
}

func (o OutboundRulePropertiesFormatOutput) ToOutboundRulePropertiesFormatPtrOutputWithContext(ctx context.Context) OutboundRulePropertiesFormatPtrOutput {
	return o.ApplyT(func(v OutboundRulePropertiesFormat) *OutboundRulePropertiesFormat {
		return &v
	}).(OutboundRulePropertiesFormatPtrOutput)
}

// The number of outbound ports to be used for NAT.
func (o OutboundRulePropertiesFormatOutput) AllocatedOutboundPorts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OutboundRulePropertiesFormat) *int { return v.AllocatedOutboundPorts }).(pulumi.IntPtrOutput)
}

// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
func (o OutboundRulePropertiesFormatOutput) BackendAddressPool() SubResourceOutput {
	return o.ApplyT(func(v OutboundRulePropertiesFormat) SubResource { return v.BackendAddressPool }).(SubResourceOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o OutboundRulePropertiesFormatOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OutboundRulePropertiesFormat) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// The Frontend IP addresses of the load balancer.
func (o OutboundRulePropertiesFormatOutput) FrontendIPConfigurations() SubResourceArrayOutput {
	return o.ApplyT(func(v OutboundRulePropertiesFormat) []SubResource { return v.FrontendIPConfigurations }).(SubResourceArrayOutput)
}

// The timeout for the TCP idle connection
func (o OutboundRulePropertiesFormatOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OutboundRulePropertiesFormat) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// Protocol - TCP, UDP or All
func (o OutboundRulePropertiesFormatOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v OutboundRulePropertiesFormat) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o OutboundRulePropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundRulePropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type OutboundRulePropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (OutboundRulePropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OutboundRulePropertiesFormat)(nil)).Elem()
}

func (o OutboundRulePropertiesFormatPtrOutput) ToOutboundRulePropertiesFormatPtrOutput() OutboundRulePropertiesFormatPtrOutput {
	return o
}

func (o OutboundRulePropertiesFormatPtrOutput) ToOutboundRulePropertiesFormatPtrOutputWithContext(ctx context.Context) OutboundRulePropertiesFormatPtrOutput {
	return o
}

func (o OutboundRulePropertiesFormatPtrOutput) Elem() OutboundRulePropertiesFormatOutput {
	return o.ApplyT(func(v *OutboundRulePropertiesFormat) OutboundRulePropertiesFormat { return *v }).(OutboundRulePropertiesFormatOutput)
}

// The number of outbound ports to be used for NAT.
func (o OutboundRulePropertiesFormatPtrOutput) AllocatedOutboundPorts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OutboundRulePropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.AllocatedOutboundPorts
	}).(pulumi.IntPtrOutput)
}

// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
func (o OutboundRulePropertiesFormatPtrOutput) BackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v *OutboundRulePropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return &v.BackendAddressPool
	}).(SubResourcePtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o OutboundRulePropertiesFormatPtrOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OutboundRulePropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.EnableTcpReset
	}).(pulumi.BoolPtrOutput)
}

// The Frontend IP addresses of the load balancer.
func (o OutboundRulePropertiesFormatPtrOutput) FrontendIPConfigurations() SubResourceArrayOutput {
	return o.ApplyT(func(v *OutboundRulePropertiesFormat) []SubResource {
		if v == nil {
			return nil
		}
		return v.FrontendIPConfigurations
	}).(SubResourceArrayOutput)
}

// The timeout for the TCP idle connection
func (o OutboundRulePropertiesFormatPtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OutboundRulePropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// Protocol - TCP, UDP or All
func (o OutboundRulePropertiesFormatPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutboundRulePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o OutboundRulePropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutboundRulePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Outbound rule of the load balancer.
type OutboundRulePropertiesFormatResponse struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts *int `pulumi:"allocatedOutboundPorts"`
	// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourceResponse `pulumi:"backendAddressPool"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations []SubResourceResponse `pulumi:"frontendIPConfigurations"`
	// The timeout for the TCP idle connection
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// Protocol - TCP, UDP or All
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// OutboundRulePropertiesFormatResponseInput is an input type that accepts OutboundRulePropertiesFormatResponseArgs and OutboundRulePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `OutboundRulePropertiesFormatResponseInput` via:
//
//          OutboundRulePropertiesFormatResponseArgs{...}
type OutboundRulePropertiesFormatResponseInput interface {
	pulumi.Input

	ToOutboundRulePropertiesFormatResponseOutput() OutboundRulePropertiesFormatResponseOutput
	ToOutboundRulePropertiesFormatResponseOutputWithContext(context.Context) OutboundRulePropertiesFormatResponseOutput
}

// Outbound rule of the load balancer.
type OutboundRulePropertiesFormatResponseArgs struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts pulumi.IntPtrInput `pulumi:"allocatedOutboundPorts"`
	// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourceResponseInput `pulumi:"backendAddressPool"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolPtrInput `pulumi:"enableTcpReset"`
	// The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations SubResourceResponseArrayInput `pulumi:"frontendIPConfigurations"`
	// The timeout for the TCP idle connection
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// Protocol - TCP, UDP or All
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (OutboundRulePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundRulePropertiesFormatResponse)(nil)).Elem()
}

func (i OutboundRulePropertiesFormatResponseArgs) ToOutboundRulePropertiesFormatResponseOutput() OutboundRulePropertiesFormatResponseOutput {
	return i.ToOutboundRulePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i OutboundRulePropertiesFormatResponseArgs) ToOutboundRulePropertiesFormatResponseOutputWithContext(ctx context.Context) OutboundRulePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundRulePropertiesFormatResponseOutput)
}

func (i OutboundRulePropertiesFormatResponseArgs) ToOutboundRulePropertiesFormatResponsePtrOutput() OutboundRulePropertiesFormatResponsePtrOutput {
	return i.ToOutboundRulePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i OutboundRulePropertiesFormatResponseArgs) ToOutboundRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) OutboundRulePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundRulePropertiesFormatResponseOutput).ToOutboundRulePropertiesFormatResponsePtrOutputWithContext(ctx)
}

// OutboundRulePropertiesFormatResponsePtrInput is an input type that accepts OutboundRulePropertiesFormatResponseArgs, OutboundRulePropertiesFormatResponsePtr and OutboundRulePropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `OutboundRulePropertiesFormatResponsePtrInput` via:
//
//          OutboundRulePropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type OutboundRulePropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToOutboundRulePropertiesFormatResponsePtrOutput() OutboundRulePropertiesFormatResponsePtrOutput
	ToOutboundRulePropertiesFormatResponsePtrOutputWithContext(context.Context) OutboundRulePropertiesFormatResponsePtrOutput
}

type outboundRulePropertiesFormatResponsePtrType OutboundRulePropertiesFormatResponseArgs

func OutboundRulePropertiesFormatResponsePtr(v *OutboundRulePropertiesFormatResponseArgs) OutboundRulePropertiesFormatResponsePtrInput {
	return (*outboundRulePropertiesFormatResponsePtrType)(v)
}

func (*outboundRulePropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OutboundRulePropertiesFormatResponse)(nil)).Elem()
}

func (i *outboundRulePropertiesFormatResponsePtrType) ToOutboundRulePropertiesFormatResponsePtrOutput() OutboundRulePropertiesFormatResponsePtrOutput {
	return i.ToOutboundRulePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *outboundRulePropertiesFormatResponsePtrType) ToOutboundRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) OutboundRulePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundRulePropertiesFormatResponsePtrOutput)
}

// Outbound rule of the load balancer.
type OutboundRulePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (OutboundRulePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundRulePropertiesFormatResponse)(nil)).Elem()
}

func (o OutboundRulePropertiesFormatResponseOutput) ToOutboundRulePropertiesFormatResponseOutput() OutboundRulePropertiesFormatResponseOutput {
	return o
}

func (o OutboundRulePropertiesFormatResponseOutput) ToOutboundRulePropertiesFormatResponseOutputWithContext(ctx context.Context) OutboundRulePropertiesFormatResponseOutput {
	return o
}

func (o OutboundRulePropertiesFormatResponseOutput) ToOutboundRulePropertiesFormatResponsePtrOutput() OutboundRulePropertiesFormatResponsePtrOutput {
	return o.ToOutboundRulePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o OutboundRulePropertiesFormatResponseOutput) ToOutboundRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) OutboundRulePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v OutboundRulePropertiesFormatResponse) *OutboundRulePropertiesFormatResponse {
		return &v
	}).(OutboundRulePropertiesFormatResponsePtrOutput)
}

// The number of outbound ports to be used for NAT.
func (o OutboundRulePropertiesFormatResponseOutput) AllocatedOutboundPorts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OutboundRulePropertiesFormatResponse) *int { return v.AllocatedOutboundPorts }).(pulumi.IntPtrOutput)
}

// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
func (o OutboundRulePropertiesFormatResponseOutput) BackendAddressPool() SubResourceResponseOutput {
	return o.ApplyT(func(v OutboundRulePropertiesFormatResponse) SubResourceResponse { return v.BackendAddressPool }).(SubResourceResponseOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o OutboundRulePropertiesFormatResponseOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OutboundRulePropertiesFormatResponse) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// The Frontend IP addresses of the load balancer.
func (o OutboundRulePropertiesFormatResponseOutput) FrontendIPConfigurations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v OutboundRulePropertiesFormatResponse) []SubResourceResponse { return v.FrontendIPConfigurations }).(SubResourceResponseArrayOutput)
}

// The timeout for the TCP idle connection
func (o OutboundRulePropertiesFormatResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OutboundRulePropertiesFormatResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// Protocol - TCP, UDP or All
func (o OutboundRulePropertiesFormatResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v OutboundRulePropertiesFormatResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o OutboundRulePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundRulePropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type OutboundRulePropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (OutboundRulePropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OutboundRulePropertiesFormatResponse)(nil)).Elem()
}

func (o OutboundRulePropertiesFormatResponsePtrOutput) ToOutboundRulePropertiesFormatResponsePtrOutput() OutboundRulePropertiesFormatResponsePtrOutput {
	return o
}

func (o OutboundRulePropertiesFormatResponsePtrOutput) ToOutboundRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) OutboundRulePropertiesFormatResponsePtrOutput {
	return o
}

func (o OutboundRulePropertiesFormatResponsePtrOutput) Elem() OutboundRulePropertiesFormatResponseOutput {
	return o.ApplyT(func(v *OutboundRulePropertiesFormatResponse) OutboundRulePropertiesFormatResponse { return *v }).(OutboundRulePropertiesFormatResponseOutput)
}

// The number of outbound ports to be used for NAT.
func (o OutboundRulePropertiesFormatResponsePtrOutput) AllocatedOutboundPorts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OutboundRulePropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.AllocatedOutboundPorts
	}).(pulumi.IntPtrOutput)
}

// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
func (o OutboundRulePropertiesFormatResponsePtrOutput) BackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *OutboundRulePropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return &v.BackendAddressPool
	}).(SubResourceResponsePtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o OutboundRulePropertiesFormatResponsePtrOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OutboundRulePropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableTcpReset
	}).(pulumi.BoolPtrOutput)
}

// The Frontend IP addresses of the load balancer.
func (o OutboundRulePropertiesFormatResponsePtrOutput) FrontendIPConfigurations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *OutboundRulePropertiesFormatResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.FrontendIPConfigurations
	}).(SubResourceResponseArrayOutput)
}

// The timeout for the TCP idle connection
func (o OutboundRulePropertiesFormatResponsePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OutboundRulePropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// Protocol - TCP, UDP or All
func (o OutboundRulePropertiesFormatResponsePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutboundRulePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o OutboundRulePropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutboundRulePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Outbound rule of the load balancer.
type OutboundRuleResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of load balancer outbound rule.
	Properties *OutboundRulePropertiesFormatResponse `pulumi:"properties"`
}

// OutboundRuleResponseInput is an input type that accepts OutboundRuleResponseArgs and OutboundRuleResponseOutput values.
// You can construct a concrete instance of `OutboundRuleResponseInput` via:
//
//          OutboundRuleResponseArgs{...}
type OutboundRuleResponseInput interface {
	pulumi.Input

	ToOutboundRuleResponseOutput() OutboundRuleResponseOutput
	ToOutboundRuleResponseOutputWithContext(context.Context) OutboundRuleResponseOutput
}

// Outbound rule of the load balancer.
type OutboundRuleResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of load balancer outbound rule.
	Properties OutboundRulePropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (OutboundRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundRuleResponse)(nil)).Elem()
}

func (i OutboundRuleResponseArgs) ToOutboundRuleResponseOutput() OutboundRuleResponseOutput {
	return i.ToOutboundRuleResponseOutputWithContext(context.Background())
}

func (i OutboundRuleResponseArgs) ToOutboundRuleResponseOutputWithContext(ctx context.Context) OutboundRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundRuleResponseOutput)
}

// OutboundRuleResponseArrayInput is an input type that accepts OutboundRuleResponseArray and OutboundRuleResponseArrayOutput values.
// You can construct a concrete instance of `OutboundRuleResponseArrayInput` via:
//
//          OutboundRuleResponseArray{ OutboundRuleResponseArgs{...} }
type OutboundRuleResponseArrayInput interface {
	pulumi.Input

	ToOutboundRuleResponseArrayOutput() OutboundRuleResponseArrayOutput
	ToOutboundRuleResponseArrayOutputWithContext(context.Context) OutboundRuleResponseArrayOutput
}

type OutboundRuleResponseArray []OutboundRuleResponseInput

func (OutboundRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundRuleResponse)(nil)).Elem()
}

func (i OutboundRuleResponseArray) ToOutboundRuleResponseArrayOutput() OutboundRuleResponseArrayOutput {
	return i.ToOutboundRuleResponseArrayOutputWithContext(context.Background())
}

func (i OutboundRuleResponseArray) ToOutboundRuleResponseArrayOutputWithContext(ctx context.Context) OutboundRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundRuleResponseArrayOutput)
}

// Outbound rule of the load balancer.
type OutboundRuleResponseOutput struct{ *pulumi.OutputState }

func (OutboundRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundRuleResponse)(nil)).Elem()
}

func (o OutboundRuleResponseOutput) ToOutboundRuleResponseOutput() OutboundRuleResponseOutput {
	return o
}

func (o OutboundRuleResponseOutput) ToOutboundRuleResponseOutputWithContext(ctx context.Context) OutboundRuleResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o OutboundRuleResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundRuleResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o OutboundRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o OutboundRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of load balancer outbound rule.
func (o OutboundRuleResponseOutput) Properties() OutboundRulePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v OutboundRuleResponse) *OutboundRulePropertiesFormatResponse { return v.Properties }).(OutboundRulePropertiesFormatResponsePtrOutput)
}

type OutboundRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (OutboundRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundRuleResponse)(nil)).Elem()
}

func (o OutboundRuleResponseArrayOutput) ToOutboundRuleResponseArrayOutput() OutboundRuleResponseArrayOutput {
	return o
}

func (o OutboundRuleResponseArrayOutput) ToOutboundRuleResponseArrayOutputWithContext(ctx context.Context) OutboundRuleResponseArrayOutput {
	return o
}

func (o OutboundRuleResponseArrayOutput) Index(i pulumi.IntInput) OutboundRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OutboundRuleResponse {
		return vs[0].([]OutboundRuleResponse)[vs[1].(int)]
	}).(OutboundRuleResponseOutput)
}

// Parameters for P2SVpnGateway
type P2SVpnGatewayProperties struct {
	// The P2SVpnServerConfiguration to which the p2sVpnGateway is attached to.
	P2SVpnServerConfiguration *SubResource `pulumi:"p2SVpnServerConfiguration"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The VirtualHub to which the gateway belongs
	VirtualHub *SubResource `pulumi:"virtualHub"`
	// The reference of the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool *AddressSpace `pulumi:"vpnClientAddressPool"`
	// The scale unit for this p2s vpn gateway.
	VpnGatewayScaleUnit *int `pulumi:"vpnGatewayScaleUnit"`
}

// P2SVpnGatewayPropertiesInput is an input type that accepts P2SVpnGatewayPropertiesArgs and P2SVpnGatewayPropertiesOutput values.
// You can construct a concrete instance of `P2SVpnGatewayPropertiesInput` via:
//
//          P2SVpnGatewayPropertiesArgs{...}
type P2SVpnGatewayPropertiesInput interface {
	pulumi.Input

	ToP2SVpnGatewayPropertiesOutput() P2SVpnGatewayPropertiesOutput
	ToP2SVpnGatewayPropertiesOutputWithContext(context.Context) P2SVpnGatewayPropertiesOutput
}

// Parameters for P2SVpnGateway
type P2SVpnGatewayPropertiesArgs struct {
	// The P2SVpnServerConfiguration to which the p2sVpnGateway is attached to.
	P2SVpnServerConfiguration SubResourcePtrInput `pulumi:"p2SVpnServerConfiguration"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The VirtualHub to which the gateway belongs
	VirtualHub SubResourcePtrInput `pulumi:"virtualHub"`
	// The reference of the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool AddressSpacePtrInput `pulumi:"vpnClientAddressPool"`
	// The scale unit for this p2s vpn gateway.
	VpnGatewayScaleUnit pulumi.IntPtrInput `pulumi:"vpnGatewayScaleUnit"`
}

func (P2SVpnGatewayPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnGatewayProperties)(nil)).Elem()
}

func (i P2SVpnGatewayPropertiesArgs) ToP2SVpnGatewayPropertiesOutput() P2SVpnGatewayPropertiesOutput {
	return i.ToP2SVpnGatewayPropertiesOutputWithContext(context.Background())
}

func (i P2SVpnGatewayPropertiesArgs) ToP2SVpnGatewayPropertiesOutputWithContext(ctx context.Context) P2SVpnGatewayPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnGatewayPropertiesOutput)
}

func (i P2SVpnGatewayPropertiesArgs) ToP2SVpnGatewayPropertiesPtrOutput() P2SVpnGatewayPropertiesPtrOutput {
	return i.ToP2SVpnGatewayPropertiesPtrOutputWithContext(context.Background())
}

func (i P2SVpnGatewayPropertiesArgs) ToP2SVpnGatewayPropertiesPtrOutputWithContext(ctx context.Context) P2SVpnGatewayPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnGatewayPropertiesOutput).ToP2SVpnGatewayPropertiesPtrOutputWithContext(ctx)
}

// P2SVpnGatewayPropertiesPtrInput is an input type that accepts P2SVpnGatewayPropertiesArgs, P2SVpnGatewayPropertiesPtr and P2SVpnGatewayPropertiesPtrOutput values.
// You can construct a concrete instance of `P2SVpnGatewayPropertiesPtrInput` via:
//
//          P2SVpnGatewayPropertiesArgs{...}
//
//  or:
//
//          nil
type P2SVpnGatewayPropertiesPtrInput interface {
	pulumi.Input

	ToP2SVpnGatewayPropertiesPtrOutput() P2SVpnGatewayPropertiesPtrOutput
	ToP2SVpnGatewayPropertiesPtrOutputWithContext(context.Context) P2SVpnGatewayPropertiesPtrOutput
}

type p2svpnGatewayPropertiesPtrType P2SVpnGatewayPropertiesArgs

func P2SVpnGatewayPropertiesPtr(v *P2SVpnGatewayPropertiesArgs) P2SVpnGatewayPropertiesPtrInput {
	return (*p2svpnGatewayPropertiesPtrType)(v)
}

func (*p2svpnGatewayPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**P2SVpnGatewayProperties)(nil)).Elem()
}

func (i *p2svpnGatewayPropertiesPtrType) ToP2SVpnGatewayPropertiesPtrOutput() P2SVpnGatewayPropertiesPtrOutput {
	return i.ToP2SVpnGatewayPropertiesPtrOutputWithContext(context.Background())
}

func (i *p2svpnGatewayPropertiesPtrType) ToP2SVpnGatewayPropertiesPtrOutputWithContext(ctx context.Context) P2SVpnGatewayPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnGatewayPropertiesPtrOutput)
}

// Parameters for P2SVpnGateway
type P2SVpnGatewayPropertiesOutput struct{ *pulumi.OutputState }

func (P2SVpnGatewayPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnGatewayProperties)(nil)).Elem()
}

func (o P2SVpnGatewayPropertiesOutput) ToP2SVpnGatewayPropertiesOutput() P2SVpnGatewayPropertiesOutput {
	return o
}

func (o P2SVpnGatewayPropertiesOutput) ToP2SVpnGatewayPropertiesOutputWithContext(ctx context.Context) P2SVpnGatewayPropertiesOutput {
	return o
}

func (o P2SVpnGatewayPropertiesOutput) ToP2SVpnGatewayPropertiesPtrOutput() P2SVpnGatewayPropertiesPtrOutput {
	return o.ToP2SVpnGatewayPropertiesPtrOutputWithContext(context.Background())
}

func (o P2SVpnGatewayPropertiesOutput) ToP2SVpnGatewayPropertiesPtrOutputWithContext(ctx context.Context) P2SVpnGatewayPropertiesPtrOutput {
	return o.ApplyT(func(v P2SVpnGatewayProperties) *P2SVpnGatewayProperties {
		return &v
	}).(P2SVpnGatewayPropertiesPtrOutput)
}

// The P2SVpnServerConfiguration to which the p2sVpnGateway is attached to.
func (o P2SVpnGatewayPropertiesOutput) P2SVpnServerConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v P2SVpnGatewayProperties) *SubResource { return v.P2SVpnServerConfiguration }).(SubResourcePtrOutput)
}

// The provisioning state of the resource.
func (o P2SVpnGatewayPropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnGatewayProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The VirtualHub to which the gateway belongs
func (o P2SVpnGatewayPropertiesOutput) VirtualHub() SubResourcePtrOutput {
	return o.ApplyT(func(v P2SVpnGatewayProperties) *SubResource { return v.VirtualHub }).(SubResourcePtrOutput)
}

// The reference of the address space resource which represents Address space for P2S VpnClient.
func (o P2SVpnGatewayPropertiesOutput) VpnClientAddressPool() AddressSpacePtrOutput {
	return o.ApplyT(func(v P2SVpnGatewayProperties) *AddressSpace { return v.VpnClientAddressPool }).(AddressSpacePtrOutput)
}

// The scale unit for this p2s vpn gateway.
func (o P2SVpnGatewayPropertiesOutput) VpnGatewayScaleUnit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v P2SVpnGatewayProperties) *int { return v.VpnGatewayScaleUnit }).(pulumi.IntPtrOutput)
}

type P2SVpnGatewayPropertiesPtrOutput struct{ *pulumi.OutputState }

func (P2SVpnGatewayPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**P2SVpnGatewayProperties)(nil)).Elem()
}

func (o P2SVpnGatewayPropertiesPtrOutput) ToP2SVpnGatewayPropertiesPtrOutput() P2SVpnGatewayPropertiesPtrOutput {
	return o
}

func (o P2SVpnGatewayPropertiesPtrOutput) ToP2SVpnGatewayPropertiesPtrOutputWithContext(ctx context.Context) P2SVpnGatewayPropertiesPtrOutput {
	return o
}

func (o P2SVpnGatewayPropertiesPtrOutput) Elem() P2SVpnGatewayPropertiesOutput {
	return o.ApplyT(func(v *P2SVpnGatewayProperties) P2SVpnGatewayProperties { return *v }).(P2SVpnGatewayPropertiesOutput)
}

// The P2SVpnServerConfiguration to which the p2sVpnGateway is attached to.
func (o P2SVpnGatewayPropertiesPtrOutput) P2SVpnServerConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v *P2SVpnGatewayProperties) *SubResource {
		if v == nil {
			return nil
		}
		return v.P2SVpnServerConfiguration
	}).(SubResourcePtrOutput)
}

// The provisioning state of the resource.
func (o P2SVpnGatewayPropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *P2SVpnGatewayProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The VirtualHub to which the gateway belongs
func (o P2SVpnGatewayPropertiesPtrOutput) VirtualHub() SubResourcePtrOutput {
	return o.ApplyT(func(v *P2SVpnGatewayProperties) *SubResource {
		if v == nil {
			return nil
		}
		return v.VirtualHub
	}).(SubResourcePtrOutput)
}

// The reference of the address space resource which represents Address space for P2S VpnClient.
func (o P2SVpnGatewayPropertiesPtrOutput) VpnClientAddressPool() AddressSpacePtrOutput {
	return o.ApplyT(func(v *P2SVpnGatewayProperties) *AddressSpace {
		if v == nil {
			return nil
		}
		return v.VpnClientAddressPool
	}).(AddressSpacePtrOutput)
}

// The scale unit for this p2s vpn gateway.
func (o P2SVpnGatewayPropertiesPtrOutput) VpnGatewayScaleUnit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *P2SVpnGatewayProperties) *int {
		if v == nil {
			return nil
		}
		return v.VpnGatewayScaleUnit
	}).(pulumi.IntPtrOutput)
}

// Parameters for P2SVpnGateway
type P2SVpnGatewayPropertiesResponse struct {
	// The P2SVpnServerConfiguration to which the p2sVpnGateway is attached to.
	P2SVpnServerConfiguration *SubResourceResponse `pulumi:"p2SVpnServerConfiguration"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The VirtualHub to which the gateway belongs
	VirtualHub *SubResourceResponse `pulumi:"virtualHub"`
	// The reference of the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool *AddressSpaceResponse `pulumi:"vpnClientAddressPool"`
	// All P2S VPN clients' connection health status.
	VpnClientConnectionHealth VpnClientConnectionHealthResponse `pulumi:"vpnClientConnectionHealth"`
	// The scale unit for this p2s vpn gateway.
	VpnGatewayScaleUnit *int `pulumi:"vpnGatewayScaleUnit"`
}

// P2SVpnGatewayPropertiesResponseInput is an input type that accepts P2SVpnGatewayPropertiesResponseArgs and P2SVpnGatewayPropertiesResponseOutput values.
// You can construct a concrete instance of `P2SVpnGatewayPropertiesResponseInput` via:
//
//          P2SVpnGatewayPropertiesResponseArgs{...}
type P2SVpnGatewayPropertiesResponseInput interface {
	pulumi.Input

	ToP2SVpnGatewayPropertiesResponseOutput() P2SVpnGatewayPropertiesResponseOutput
	ToP2SVpnGatewayPropertiesResponseOutputWithContext(context.Context) P2SVpnGatewayPropertiesResponseOutput
}

// Parameters for P2SVpnGateway
type P2SVpnGatewayPropertiesResponseArgs struct {
	// The P2SVpnServerConfiguration to which the p2sVpnGateway is attached to.
	P2SVpnServerConfiguration SubResourceResponsePtrInput `pulumi:"p2SVpnServerConfiguration"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The VirtualHub to which the gateway belongs
	VirtualHub SubResourceResponsePtrInput `pulumi:"virtualHub"`
	// The reference of the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool AddressSpaceResponsePtrInput `pulumi:"vpnClientAddressPool"`
	// All P2S VPN clients' connection health status.
	VpnClientConnectionHealth VpnClientConnectionHealthResponseInput `pulumi:"vpnClientConnectionHealth"`
	// The scale unit for this p2s vpn gateway.
	VpnGatewayScaleUnit pulumi.IntPtrInput `pulumi:"vpnGatewayScaleUnit"`
}

func (P2SVpnGatewayPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnGatewayPropertiesResponse)(nil)).Elem()
}

func (i P2SVpnGatewayPropertiesResponseArgs) ToP2SVpnGatewayPropertiesResponseOutput() P2SVpnGatewayPropertiesResponseOutput {
	return i.ToP2SVpnGatewayPropertiesResponseOutputWithContext(context.Background())
}

func (i P2SVpnGatewayPropertiesResponseArgs) ToP2SVpnGatewayPropertiesResponseOutputWithContext(ctx context.Context) P2SVpnGatewayPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnGatewayPropertiesResponseOutput)
}

func (i P2SVpnGatewayPropertiesResponseArgs) ToP2SVpnGatewayPropertiesResponsePtrOutput() P2SVpnGatewayPropertiesResponsePtrOutput {
	return i.ToP2SVpnGatewayPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i P2SVpnGatewayPropertiesResponseArgs) ToP2SVpnGatewayPropertiesResponsePtrOutputWithContext(ctx context.Context) P2SVpnGatewayPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnGatewayPropertiesResponseOutput).ToP2SVpnGatewayPropertiesResponsePtrOutputWithContext(ctx)
}

// P2SVpnGatewayPropertiesResponsePtrInput is an input type that accepts P2SVpnGatewayPropertiesResponseArgs, P2SVpnGatewayPropertiesResponsePtr and P2SVpnGatewayPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `P2SVpnGatewayPropertiesResponsePtrInput` via:
//
//          P2SVpnGatewayPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type P2SVpnGatewayPropertiesResponsePtrInput interface {
	pulumi.Input

	ToP2SVpnGatewayPropertiesResponsePtrOutput() P2SVpnGatewayPropertiesResponsePtrOutput
	ToP2SVpnGatewayPropertiesResponsePtrOutputWithContext(context.Context) P2SVpnGatewayPropertiesResponsePtrOutput
}

type p2svpnGatewayPropertiesResponsePtrType P2SVpnGatewayPropertiesResponseArgs

func P2SVpnGatewayPropertiesResponsePtr(v *P2SVpnGatewayPropertiesResponseArgs) P2SVpnGatewayPropertiesResponsePtrInput {
	return (*p2svpnGatewayPropertiesResponsePtrType)(v)
}

func (*p2svpnGatewayPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**P2SVpnGatewayPropertiesResponse)(nil)).Elem()
}

func (i *p2svpnGatewayPropertiesResponsePtrType) ToP2SVpnGatewayPropertiesResponsePtrOutput() P2SVpnGatewayPropertiesResponsePtrOutput {
	return i.ToP2SVpnGatewayPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *p2svpnGatewayPropertiesResponsePtrType) ToP2SVpnGatewayPropertiesResponsePtrOutputWithContext(ctx context.Context) P2SVpnGatewayPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnGatewayPropertiesResponsePtrOutput)
}

// Parameters for P2SVpnGateway
type P2SVpnGatewayPropertiesResponseOutput struct{ *pulumi.OutputState }

func (P2SVpnGatewayPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnGatewayPropertiesResponse)(nil)).Elem()
}

func (o P2SVpnGatewayPropertiesResponseOutput) ToP2SVpnGatewayPropertiesResponseOutput() P2SVpnGatewayPropertiesResponseOutput {
	return o
}

func (o P2SVpnGatewayPropertiesResponseOutput) ToP2SVpnGatewayPropertiesResponseOutputWithContext(ctx context.Context) P2SVpnGatewayPropertiesResponseOutput {
	return o
}

func (o P2SVpnGatewayPropertiesResponseOutput) ToP2SVpnGatewayPropertiesResponsePtrOutput() P2SVpnGatewayPropertiesResponsePtrOutput {
	return o.ToP2SVpnGatewayPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o P2SVpnGatewayPropertiesResponseOutput) ToP2SVpnGatewayPropertiesResponsePtrOutputWithContext(ctx context.Context) P2SVpnGatewayPropertiesResponsePtrOutput {
	return o.ApplyT(func(v P2SVpnGatewayPropertiesResponse) *P2SVpnGatewayPropertiesResponse {
		return &v
	}).(P2SVpnGatewayPropertiesResponsePtrOutput)
}

// The P2SVpnServerConfiguration to which the p2sVpnGateway is attached to.
func (o P2SVpnGatewayPropertiesResponseOutput) P2SVpnServerConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v P2SVpnGatewayPropertiesResponse) *SubResourceResponse { return v.P2SVpnServerConfiguration }).(SubResourceResponsePtrOutput)
}

// The provisioning state of the resource.
func (o P2SVpnGatewayPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnGatewayPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The VirtualHub to which the gateway belongs
func (o P2SVpnGatewayPropertiesResponseOutput) VirtualHub() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v P2SVpnGatewayPropertiesResponse) *SubResourceResponse { return v.VirtualHub }).(SubResourceResponsePtrOutput)
}

// The reference of the address space resource which represents Address space for P2S VpnClient.
func (o P2SVpnGatewayPropertiesResponseOutput) VpnClientAddressPool() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v P2SVpnGatewayPropertiesResponse) *AddressSpaceResponse { return v.VpnClientAddressPool }).(AddressSpaceResponsePtrOutput)
}

// All P2S VPN clients' connection health status.
func (o P2SVpnGatewayPropertiesResponseOutput) VpnClientConnectionHealth() VpnClientConnectionHealthResponseOutput {
	return o.ApplyT(func(v P2SVpnGatewayPropertiesResponse) VpnClientConnectionHealthResponse {
		return v.VpnClientConnectionHealth
	}).(VpnClientConnectionHealthResponseOutput)
}

// The scale unit for this p2s vpn gateway.
func (o P2SVpnGatewayPropertiesResponseOutput) VpnGatewayScaleUnit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v P2SVpnGatewayPropertiesResponse) *int { return v.VpnGatewayScaleUnit }).(pulumi.IntPtrOutput)
}

type P2SVpnGatewayPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (P2SVpnGatewayPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**P2SVpnGatewayPropertiesResponse)(nil)).Elem()
}

func (o P2SVpnGatewayPropertiesResponsePtrOutput) ToP2SVpnGatewayPropertiesResponsePtrOutput() P2SVpnGatewayPropertiesResponsePtrOutput {
	return o
}

func (o P2SVpnGatewayPropertiesResponsePtrOutput) ToP2SVpnGatewayPropertiesResponsePtrOutputWithContext(ctx context.Context) P2SVpnGatewayPropertiesResponsePtrOutput {
	return o
}

func (o P2SVpnGatewayPropertiesResponsePtrOutput) Elem() P2SVpnGatewayPropertiesResponseOutput {
	return o.ApplyT(func(v *P2SVpnGatewayPropertiesResponse) P2SVpnGatewayPropertiesResponse { return *v }).(P2SVpnGatewayPropertiesResponseOutput)
}

// The P2SVpnServerConfiguration to which the p2sVpnGateway is attached to.
func (o P2SVpnGatewayPropertiesResponsePtrOutput) P2SVpnServerConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *P2SVpnGatewayPropertiesResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.P2SVpnServerConfiguration
	}).(SubResourceResponsePtrOutput)
}

// The provisioning state of the resource.
func (o P2SVpnGatewayPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *P2SVpnGatewayPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The VirtualHub to which the gateway belongs
func (o P2SVpnGatewayPropertiesResponsePtrOutput) VirtualHub() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *P2SVpnGatewayPropertiesResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.VirtualHub
	}).(SubResourceResponsePtrOutput)
}

// The reference of the address space resource which represents Address space for P2S VpnClient.
func (o P2SVpnGatewayPropertiesResponsePtrOutput) VpnClientAddressPool() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v *P2SVpnGatewayPropertiesResponse) *AddressSpaceResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientAddressPool
	}).(AddressSpaceResponsePtrOutput)
}

// All P2S VPN clients' connection health status.
func (o P2SVpnGatewayPropertiesResponsePtrOutput) VpnClientConnectionHealth() VpnClientConnectionHealthResponsePtrOutput {
	return o.ApplyT(func(v *P2SVpnGatewayPropertiesResponse) *VpnClientConnectionHealthResponse {
		if v == nil {
			return nil
		}
		return &v.VpnClientConnectionHealth
	}).(VpnClientConnectionHealthResponsePtrOutput)
}

// The scale unit for this p2s vpn gateway.
func (o P2SVpnGatewayPropertiesResponsePtrOutput) VpnGatewayScaleUnit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *P2SVpnGatewayPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.VpnGatewayScaleUnit
	}).(pulumi.IntPtrOutput)
}

// Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificate struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the Radius client root certificate.
	Properties *P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormat `pulumi:"properties"`
}

// P2SVpnServerConfigRadiusClientRootCertificateInput is an input type that accepts P2SVpnServerConfigRadiusClientRootCertificateArgs and P2SVpnServerConfigRadiusClientRootCertificateOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusClientRootCertificateInput` via:
//
//          P2SVpnServerConfigRadiusClientRootCertificateArgs{...}
type P2SVpnServerConfigRadiusClientRootCertificateInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusClientRootCertificateOutput() P2SVpnServerConfigRadiusClientRootCertificateOutput
	ToP2SVpnServerConfigRadiusClientRootCertificateOutputWithContext(context.Context) P2SVpnServerConfigRadiusClientRootCertificateOutput
}

// Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificateArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the Radius client root certificate.
	Properties P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrInput `pulumi:"properties"`
}

func (P2SVpnServerConfigRadiusClientRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusClientRootCertificateArgs) ToP2SVpnServerConfigRadiusClientRootCertificateOutput() P2SVpnServerConfigRadiusClientRootCertificateOutput {
	return i.ToP2SVpnServerConfigRadiusClientRootCertificateOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusClientRootCertificateArgs) ToP2SVpnServerConfigRadiusClientRootCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusClientRootCertificateOutput)
}

// P2SVpnServerConfigRadiusClientRootCertificateArrayInput is an input type that accepts P2SVpnServerConfigRadiusClientRootCertificateArray and P2SVpnServerConfigRadiusClientRootCertificateArrayOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusClientRootCertificateArrayInput` via:
//
//          P2SVpnServerConfigRadiusClientRootCertificateArray{ P2SVpnServerConfigRadiusClientRootCertificateArgs{...} }
type P2SVpnServerConfigRadiusClientRootCertificateArrayInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusClientRootCertificateArrayOutput() P2SVpnServerConfigRadiusClientRootCertificateArrayOutput
	ToP2SVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(context.Context) P2SVpnServerConfigRadiusClientRootCertificateArrayOutput
}

type P2SVpnServerConfigRadiusClientRootCertificateArray []P2SVpnServerConfigRadiusClientRootCertificateInput

func (P2SVpnServerConfigRadiusClientRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusClientRootCertificateArray) ToP2SVpnServerConfigRadiusClientRootCertificateArrayOutput() P2SVpnServerConfigRadiusClientRootCertificateArrayOutput {
	return i.ToP2SVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusClientRootCertificateArray) ToP2SVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusClientRootCertificateArrayOutput)
}

// Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificateOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusClientRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusClientRootCertificateOutput) ToP2SVpnServerConfigRadiusClientRootCertificateOutput() P2SVpnServerConfigRadiusClientRootCertificateOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificateOutput) ToP2SVpnServerConfigRadiusClientRootCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificateOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigRadiusClientRootCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigRadiusClientRootCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigRadiusClientRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the Radius client root certificate.
func (o P2SVpnServerConfigRadiusClientRootCertificateOutput) Properties() P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificate) *P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormat {
		return v.Properties
	}).(P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput)
}

type P2SVpnServerConfigRadiusClientRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusClientRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusClientRootCertificateArrayOutput) ToP2SVpnServerConfigRadiusClientRootCertificateArrayOutput() P2SVpnServerConfigRadiusClientRootCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificateArrayOutput) ToP2SVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificateArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigRadiusClientRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigRadiusClientRootCertificate {
		return vs[0].([]P2SVpnServerConfigRadiusClientRootCertificate)[vs[1].(int)]
	}).(P2SVpnServerConfigRadiusClientRootCertificateOutput)
}

// Properties of the Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormat struct {
	// The Radius client root certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatInput is an input type that accepts P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatArgs and P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatInput` via:
//
//          P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatArgs{...}
type P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutput() P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutput
	ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutputWithContext(context.Context) P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutput
}

// Properties of the Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatArgs struct {
	// The Radius client root certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormat)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatArgs) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutput() P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutput {
	return i.ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatArgs) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutput)
}

func (i P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatArgs) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput() P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput {
	return i.ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatArgs) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutput).ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutputWithContext(ctx)
}

// P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrInput is an input type that accepts P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatArgs, P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtr and P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrInput` via:
//
//          P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatArgs{...}
//
//  or:
//
//          nil
type P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput() P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput
	ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutputWithContext(context.Context) P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput
}

type p2svpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrType P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatArgs

func P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtr(v *P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatArgs) P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrInput {
	return (*p2svpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrType)(v)
}

func (*p2svpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormat)(nil)).Elem()
}

func (i *p2svpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrType) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput() P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput {
	return i.ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *p2svpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrType) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput)
}

// Properties of the Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormat)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutput) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutput() P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutput) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutput) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput() P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput {
	return o.ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutputWithContext(context.Background())
}

func (o P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutput) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormat) *P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormat {
		return &v
	}).(P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput)
}

// The Radius client root certificate thumbprint.
func (o P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormat) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormat)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput() P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput) Elem() P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormat) P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormat {
		return *v
	}).(P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutput)
}

// The Radius client root certificate thumbprint.
func (o P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// Properties of the Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponse struct {
	// The provisioning state of the Radius client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The Radius client root certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseInput is an input type that accepts P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseArgs and P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseInput` via:
//
//          P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseArgs{...}
type P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput() P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput
	ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutputWithContext(context.Context) P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput
}

// Properties of the Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseArgs struct {
	// The provisioning state of the Radius client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The Radius client root certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseArgs) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput() P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput {
	return i.ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseArgs) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput)
}

func (i P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseArgs) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput() P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput {
	return i.ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseArgs) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput).ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutputWithContext(ctx)
}

// P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrInput is an input type that accepts P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseArgs, P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtr and P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrInput` via:
//
//          P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput() P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput
	ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutputWithContext(context.Context) P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput
}

type p2svpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrType P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseArgs

func P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtr(v *P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseArgs) P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrInput {
	return (*p2svpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrType)(v)
}

func (*p2svpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (i *p2svpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrType) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput() P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput {
	return i.ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *p2svpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrType) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput)
}

// Properties of the Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput() P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput() P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput {
	return o.ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponse) *P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponse {
		return &v
	}).(P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput)
}

// The provisioning state of the Radius client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponse) string {
		return v.ProvisioningState
	}).(pulumi.StringOutput)
}

// The Radius client root certificate thumbprint.
func (o P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponse) *string {
		return v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

type P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput() P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput) ToP2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput) Elem() P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponse) P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponse {
		return *v
	}).(P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput)
}

// The provisioning state of the Radius client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The Radius client root certificate thumbprint.
func (o P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the Radius client root certificate.
	Properties *P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponse `pulumi:"properties"`
}

// P2SVpnServerConfigRadiusClientRootCertificateResponseInput is an input type that accepts P2SVpnServerConfigRadiusClientRootCertificateResponseArgs and P2SVpnServerConfigRadiusClientRootCertificateResponseOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusClientRootCertificateResponseInput` via:
//
//          P2SVpnServerConfigRadiusClientRootCertificateResponseArgs{...}
type P2SVpnServerConfigRadiusClientRootCertificateResponseInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusClientRootCertificateResponseOutput() P2SVpnServerConfigRadiusClientRootCertificateResponseOutput
	ToP2SVpnServerConfigRadiusClientRootCertificateResponseOutputWithContext(context.Context) P2SVpnServerConfigRadiusClientRootCertificateResponseOutput
}

// Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificateResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the Radius client root certificate.
	Properties P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (P2SVpnServerConfigRadiusClientRootCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusClientRootCertificateResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusClientRootCertificateResponseArgs) ToP2SVpnServerConfigRadiusClientRootCertificateResponseOutput() P2SVpnServerConfigRadiusClientRootCertificateResponseOutput {
	return i.ToP2SVpnServerConfigRadiusClientRootCertificateResponseOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusClientRootCertificateResponseArgs) ToP2SVpnServerConfigRadiusClientRootCertificateResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusClientRootCertificateResponseOutput)
}

// P2SVpnServerConfigRadiusClientRootCertificateResponseArrayInput is an input type that accepts P2SVpnServerConfigRadiusClientRootCertificateResponseArray and P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusClientRootCertificateResponseArrayInput` via:
//
//          P2SVpnServerConfigRadiusClientRootCertificateResponseArray{ P2SVpnServerConfigRadiusClientRootCertificateResponseArgs{...} }
type P2SVpnServerConfigRadiusClientRootCertificateResponseArrayInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput() P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput
	ToP2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutputWithContext(context.Context) P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput
}

type P2SVpnServerConfigRadiusClientRootCertificateResponseArray []P2SVpnServerConfigRadiusClientRootCertificateResponseInput

func (P2SVpnServerConfigRadiusClientRootCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigRadiusClientRootCertificateResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusClientRootCertificateResponseArray) ToP2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput() P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput {
	return i.ToP2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusClientRootCertificateResponseArray) ToP2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput)
}

// Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusClientRootCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) ToP2SVpnServerConfigRadiusClientRootCertificateResponseOutput() P2SVpnServerConfigRadiusClientRootCertificateResponseOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) ToP2SVpnServerConfigRadiusClientRootCertificateResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the Radius client root certificate.
func (o P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) Properties() P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificateResponse) *P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponse {
		return v.Properties
	}).(P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput)
}

type P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigRadiusClientRootCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput) ToP2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput() P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput) ToP2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigRadiusClientRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigRadiusClientRootCertificateResponse {
		return vs[0].([]P2SVpnServerConfigRadiusClientRootCertificateResponse)[vs[1].(int)]
	}).(P2SVpnServerConfigRadiusClientRootCertificateResponseOutput)
}

// Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificate struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the P2SVpnServerConfiguration Radius Server root certificate.
	Properties P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormat `pulumi:"properties"`
}

// P2SVpnServerConfigRadiusServerRootCertificateInput is an input type that accepts P2SVpnServerConfigRadiusServerRootCertificateArgs and P2SVpnServerConfigRadiusServerRootCertificateOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusServerRootCertificateInput` via:
//
//          P2SVpnServerConfigRadiusServerRootCertificateArgs{...}
type P2SVpnServerConfigRadiusServerRootCertificateInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusServerRootCertificateOutput() P2SVpnServerConfigRadiusServerRootCertificateOutput
	ToP2SVpnServerConfigRadiusServerRootCertificateOutputWithContext(context.Context) P2SVpnServerConfigRadiusServerRootCertificateOutput
}

// Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificateArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the P2SVpnServerConfiguration Radius Server root certificate.
	Properties P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatInput `pulumi:"properties"`
}

func (P2SVpnServerConfigRadiusServerRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusServerRootCertificateArgs) ToP2SVpnServerConfigRadiusServerRootCertificateOutput() P2SVpnServerConfigRadiusServerRootCertificateOutput {
	return i.ToP2SVpnServerConfigRadiusServerRootCertificateOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusServerRootCertificateArgs) ToP2SVpnServerConfigRadiusServerRootCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusServerRootCertificateOutput)
}

// P2SVpnServerConfigRadiusServerRootCertificateArrayInput is an input type that accepts P2SVpnServerConfigRadiusServerRootCertificateArray and P2SVpnServerConfigRadiusServerRootCertificateArrayOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusServerRootCertificateArrayInput` via:
//
//          P2SVpnServerConfigRadiusServerRootCertificateArray{ P2SVpnServerConfigRadiusServerRootCertificateArgs{...} }
type P2SVpnServerConfigRadiusServerRootCertificateArrayInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusServerRootCertificateArrayOutput() P2SVpnServerConfigRadiusServerRootCertificateArrayOutput
	ToP2SVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(context.Context) P2SVpnServerConfigRadiusServerRootCertificateArrayOutput
}

type P2SVpnServerConfigRadiusServerRootCertificateArray []P2SVpnServerConfigRadiusServerRootCertificateInput

func (P2SVpnServerConfigRadiusServerRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusServerRootCertificateArray) ToP2SVpnServerConfigRadiusServerRootCertificateArrayOutput() P2SVpnServerConfigRadiusServerRootCertificateArrayOutput {
	return i.ToP2SVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusServerRootCertificateArray) ToP2SVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusServerRootCertificateArrayOutput)
}

// Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificateOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusServerRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusServerRootCertificateOutput) ToP2SVpnServerConfigRadiusServerRootCertificateOutput() P2SVpnServerConfigRadiusServerRootCertificateOutput {
	return o
}

func (o P2SVpnServerConfigRadiusServerRootCertificateOutput) ToP2SVpnServerConfigRadiusServerRootCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificateOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigRadiusServerRootCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigRadiusServerRootCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigRadiusServerRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the P2SVpnServerConfiguration Radius Server root certificate.
func (o P2SVpnServerConfigRadiusServerRootCertificateOutput) Properties() P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificate) P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormat {
		return v.Properties
	}).(P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutput)
}

type P2SVpnServerConfigRadiusServerRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusServerRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusServerRootCertificateArrayOutput) ToP2SVpnServerConfigRadiusServerRootCertificateArrayOutput() P2SVpnServerConfigRadiusServerRootCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusServerRootCertificateArrayOutput) ToP2SVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusServerRootCertificateArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigRadiusServerRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigRadiusServerRootCertificate {
		return vs[0].([]P2SVpnServerConfigRadiusServerRootCertificate)[vs[1].(int)]
	}).(P2SVpnServerConfigRadiusServerRootCertificateOutput)
}

// Properties of Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormat struct {
	// The certificate public data.
	PublicCertData string `pulumi:"publicCertData"`
}

// P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatInput is an input type that accepts P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatArgs and P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatInput` via:
//
//          P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatArgs{...}
type P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutput() P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutput
	ToP2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutputWithContext(context.Context) P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutput
}

// Properties of Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatArgs struct {
	// The certificate public data.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormat)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatArgs) ToP2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutput() P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutput {
	return i.ToP2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatArgs) ToP2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutput)
}

// Properties of Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormat)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutput) ToP2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutput() P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutput {
	return o
}

func (o P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutput) ToP2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutput {
	return o
}

// The certificate public data.
func (o P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormat) string { return v.PublicCertData }).(pulumi.StringOutput)
}

// Properties of Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponse struct {
	// The provisioning state of the P2SVpnServerConfiguration Radius Server root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The certificate public data.
	PublicCertData string `pulumi:"publicCertData"`
}

// P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseInput is an input type that accepts P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseArgs and P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseInput` via:
//
//          P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseArgs{...}
type P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutput() P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutput
	ToP2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutputWithContext(context.Context) P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutput
}

// Properties of Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseArgs struct {
	// The provisioning state of the P2SVpnServerConfiguration Radius Server root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The certificate public data.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseArgs) ToP2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutput() P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutput {
	return i.ToP2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseArgs) ToP2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutput)
}

// Properties of Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutput) ToP2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutput() P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutput {
	return o
}

func (o P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutput) ToP2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutput {
	return o
}

// The provisioning state of the P2SVpnServerConfiguration Radius Server root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponse) string {
		return v.ProvisioningState
	}).(pulumi.StringOutput)
}

// The certificate public data.
func (o P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponse) string {
		return v.PublicCertData
	}).(pulumi.StringOutput)
}

// Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the P2SVpnServerConfiguration Radius Server root certificate.
	Properties P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponse `pulumi:"properties"`
}

// P2SVpnServerConfigRadiusServerRootCertificateResponseInput is an input type that accepts P2SVpnServerConfigRadiusServerRootCertificateResponseArgs and P2SVpnServerConfigRadiusServerRootCertificateResponseOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusServerRootCertificateResponseInput` via:
//
//          P2SVpnServerConfigRadiusServerRootCertificateResponseArgs{...}
type P2SVpnServerConfigRadiusServerRootCertificateResponseInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusServerRootCertificateResponseOutput() P2SVpnServerConfigRadiusServerRootCertificateResponseOutput
	ToP2SVpnServerConfigRadiusServerRootCertificateResponseOutputWithContext(context.Context) P2SVpnServerConfigRadiusServerRootCertificateResponseOutput
}

// Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificateResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the P2SVpnServerConfiguration Radius Server root certificate.
	Properties P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseInput `pulumi:"properties"`
}

func (P2SVpnServerConfigRadiusServerRootCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusServerRootCertificateResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusServerRootCertificateResponseArgs) ToP2SVpnServerConfigRadiusServerRootCertificateResponseOutput() P2SVpnServerConfigRadiusServerRootCertificateResponseOutput {
	return i.ToP2SVpnServerConfigRadiusServerRootCertificateResponseOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusServerRootCertificateResponseArgs) ToP2SVpnServerConfigRadiusServerRootCertificateResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusServerRootCertificateResponseOutput)
}

// P2SVpnServerConfigRadiusServerRootCertificateResponseArrayInput is an input type that accepts P2SVpnServerConfigRadiusServerRootCertificateResponseArray and P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusServerRootCertificateResponseArrayInput` via:
//
//          P2SVpnServerConfigRadiusServerRootCertificateResponseArray{ P2SVpnServerConfigRadiusServerRootCertificateResponseArgs{...} }
type P2SVpnServerConfigRadiusServerRootCertificateResponseArrayInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput() P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput
	ToP2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutputWithContext(context.Context) P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput
}

type P2SVpnServerConfigRadiusServerRootCertificateResponseArray []P2SVpnServerConfigRadiusServerRootCertificateResponseInput

func (P2SVpnServerConfigRadiusServerRootCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigRadiusServerRootCertificateResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusServerRootCertificateResponseArray) ToP2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput() P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput {
	return i.ToP2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusServerRootCertificateResponseArray) ToP2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput)
}

// Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusServerRootCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) ToP2SVpnServerConfigRadiusServerRootCertificateResponseOutput() P2SVpnServerConfigRadiusServerRootCertificateResponseOutput {
	return o
}

func (o P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) ToP2SVpnServerConfigRadiusServerRootCertificateResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the P2SVpnServerConfiguration Radius Server root certificate.
func (o P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) Properties() P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificateResponse) P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponse {
		return v.Properties
	}).(P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutput)
}

type P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigRadiusServerRootCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput) ToP2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput() P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput) ToP2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigRadiusServerRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigRadiusServerRootCertificateResponse {
		return vs[0].([]P2SVpnServerConfigRadiusServerRootCertificateResponse)[vs[1].(int)]
	}).(P2SVpnServerConfigRadiusServerRootCertificateResponseOutput)
}

// VPN client revoked certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificate struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the vpn client revoked certificate.
	Properties *P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat `pulumi:"properties"`
}

// P2SVpnServerConfigVpnClientRevokedCertificateInput is an input type that accepts P2SVpnServerConfigVpnClientRevokedCertificateArgs and P2SVpnServerConfigVpnClientRevokedCertificateOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRevokedCertificateInput` via:
//
//          P2SVpnServerConfigVpnClientRevokedCertificateArgs{...}
type P2SVpnServerConfigVpnClientRevokedCertificateInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRevokedCertificateOutput() P2SVpnServerConfigVpnClientRevokedCertificateOutput
	ToP2SVpnServerConfigVpnClientRevokedCertificateOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRevokedCertificateOutput
}

// VPN client revoked certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificateArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the vpn client revoked certificate.
	Properties P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrInput `pulumi:"properties"`
}

func (P2SVpnServerConfigVpnClientRevokedCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRevokedCertificateArgs) ToP2SVpnServerConfigVpnClientRevokedCertificateOutput() P2SVpnServerConfigVpnClientRevokedCertificateOutput {
	return i.ToP2SVpnServerConfigVpnClientRevokedCertificateOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRevokedCertificateArgs) ToP2SVpnServerConfigVpnClientRevokedCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRevokedCertificateOutput)
}

// P2SVpnServerConfigVpnClientRevokedCertificateArrayInput is an input type that accepts P2SVpnServerConfigVpnClientRevokedCertificateArray and P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRevokedCertificateArrayInput` via:
//
//          P2SVpnServerConfigVpnClientRevokedCertificateArray{ P2SVpnServerConfigVpnClientRevokedCertificateArgs{...} }
type P2SVpnServerConfigVpnClientRevokedCertificateArrayInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRevokedCertificateArrayOutput() P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput
	ToP2SVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput
}

type P2SVpnServerConfigVpnClientRevokedCertificateArray []P2SVpnServerConfigVpnClientRevokedCertificateInput

func (P2SVpnServerConfigVpnClientRevokedCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRevokedCertificateArray) ToP2SVpnServerConfigVpnClientRevokedCertificateArrayOutput() P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return i.ToP2SVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRevokedCertificateArray) ToP2SVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput)
}

// VPN client revoked certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificateOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRevokedCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateOutput() P2SVpnServerConfigVpnClientRevokedCertificateOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificateOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigVpnClientRevokedCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigVpnClientRevokedCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigVpnClientRevokedCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the vpn client revoked certificate.
func (o P2SVpnServerConfigVpnClientRevokedCertificateOutput) Properties() P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificate) *P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat {
		return v.Properties
	}).(P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput)
}

type P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateArrayOutput() P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigVpnClientRevokedCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigVpnClientRevokedCertificate {
		return vs[0].([]P2SVpnServerConfigVpnClientRevokedCertificate)[vs[1].(int)]
	}).(P2SVpnServerConfigVpnClientRevokedCertificateOutput)
}

// Properties of the revoked VPN client certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat struct {
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatInput is an input type that accepts P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatArgs and P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatInput` via:
//
//          P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatArgs{...}
type P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutput() P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutput
	ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutput
}

// Properties of the revoked VPN client certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatArgs struct {
	// The revoked VPN client certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatArgs) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutput() P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutput {
	return i.ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatArgs) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutput)
}

func (i P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatArgs) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput() P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput {
	return i.ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatArgs) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutput).ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutputWithContext(ctx)
}

// P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrInput is an input type that accepts P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatArgs, P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtr and P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrInput` via:
//
//          P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatArgs{...}
//
//  or:
//
//          nil
type P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput() P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput
	ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput
}

type p2svpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrType P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatArgs

func P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtr(v *P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatArgs) P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrInput {
	return (*p2svpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrType)(v)
}

func (*p2svpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat)(nil)).Elem()
}

func (i *p2svpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrType) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput() P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput {
	return i.ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *p2svpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrType) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput)
}

// Properties of the revoked VPN client certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutput) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutput() P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutput) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutput) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput() P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput {
	return o.ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutputWithContext(context.Background())
}

func (o P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutput) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat) *P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat {
		return &v
	}).(P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput)
}

// The revoked VPN client certificate thumbprint.
func (o P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput() P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput) Elem() P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat) P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat {
		return *v
	}).(P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutput)
}

// The revoked VPN client certificate thumbprint.
func (o P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// Properties of the revoked VPN client certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponse struct {
	// The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseInput is an input type that accepts P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseArgs and P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseInput` via:
//
//          P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseArgs{...}
type P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput() P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput
	ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput
}

// Properties of the revoked VPN client certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseArgs struct {
	// The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseArgs) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput() P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput {
	return i.ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseArgs) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput)
}

func (i P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseArgs) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput() P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput {
	return i.ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseArgs) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput).ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutputWithContext(ctx)
}

// P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrInput is an input type that accepts P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseArgs, P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtr and P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrInput` via:
//
//          P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput() P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput
	ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput
}

type p2svpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrType P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseArgs

func P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtr(v *P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseArgs) P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrInput {
	return (*p2svpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrType)(v)
}

func (*p2svpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (i *p2svpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrType) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput() P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput {
	return i.ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *p2svpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrType) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput)
}

// Properties of the revoked VPN client certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput() P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput() P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput {
	return o.ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponse) *P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponse {
		return &v
	}).(P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput)
}

// The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponse) string {
		return v.ProvisioningState
	}).(pulumi.StringOutput)
}

// The revoked VPN client certificate thumbprint.
func (o P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponse) *string {
		return v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

type P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput() P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput) ToP2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput) Elem() P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponse) P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponse {
		return *v
	}).(P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput)
}

// The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The revoked VPN client certificate thumbprint.
func (o P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// VPN client revoked certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the vpn client revoked certificate.
	Properties *P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponse `pulumi:"properties"`
}

// P2SVpnServerConfigVpnClientRevokedCertificateResponseInput is an input type that accepts P2SVpnServerConfigVpnClientRevokedCertificateResponseArgs and P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRevokedCertificateResponseInput` via:
//
//          P2SVpnServerConfigVpnClientRevokedCertificateResponseArgs{...}
type P2SVpnServerConfigVpnClientRevokedCertificateResponseInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRevokedCertificateResponseOutput() P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput
	ToP2SVpnServerConfigVpnClientRevokedCertificateResponseOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput
}

// VPN client revoked certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificateResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the vpn client revoked certificate.
	Properties P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (P2SVpnServerConfigVpnClientRevokedCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRevokedCertificateResponseArgs) ToP2SVpnServerConfigVpnClientRevokedCertificateResponseOutput() P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return i.ToP2SVpnServerConfigVpnClientRevokedCertificateResponseOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRevokedCertificateResponseArgs) ToP2SVpnServerConfigVpnClientRevokedCertificateResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput)
}

// P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayInput is an input type that accepts P2SVpnServerConfigVpnClientRevokedCertificateResponseArray and P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayInput` via:
//
//          P2SVpnServerConfigVpnClientRevokedCertificateResponseArray{ P2SVpnServerConfigVpnClientRevokedCertificateResponseArgs{...} }
type P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput() P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput
	ToP2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput
}

type P2SVpnServerConfigVpnClientRevokedCertificateResponseArray []P2SVpnServerConfigVpnClientRevokedCertificateResponseInput

func (P2SVpnServerConfigVpnClientRevokedCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigVpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRevokedCertificateResponseArray) ToP2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput() P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput {
	return i.ToP2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRevokedCertificateResponseArray) ToP2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput)
}

// VPN client revoked certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateResponseOutput() P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the vpn client revoked certificate.
func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) Properties() P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificateResponse) *P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponse {
		return v.Properties
	}).(P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput)
}

type P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigVpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput() P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigVpnClientRevokedCertificateResponse {
		return vs[0].([]P2SVpnServerConfigVpnClientRevokedCertificateResponse)[vs[1].(int)]
	}).(P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput)
}

// VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificate struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the P2SVpnServerConfiguration VPN client root certificate.
	Properties P2SVpnServerConfigVpnClientRootCertificatePropertiesFormat `pulumi:"properties"`
}

// P2SVpnServerConfigVpnClientRootCertificateInput is an input type that accepts P2SVpnServerConfigVpnClientRootCertificateArgs and P2SVpnServerConfigVpnClientRootCertificateOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRootCertificateInput` via:
//
//          P2SVpnServerConfigVpnClientRootCertificateArgs{...}
type P2SVpnServerConfigVpnClientRootCertificateInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRootCertificateOutput() P2SVpnServerConfigVpnClientRootCertificateOutput
	ToP2SVpnServerConfigVpnClientRootCertificateOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRootCertificateOutput
}

// VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificateArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the P2SVpnServerConfiguration VPN client root certificate.
	Properties P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatInput `pulumi:"properties"`
}

func (P2SVpnServerConfigVpnClientRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRootCertificateArgs) ToP2SVpnServerConfigVpnClientRootCertificateOutput() P2SVpnServerConfigVpnClientRootCertificateOutput {
	return i.ToP2SVpnServerConfigVpnClientRootCertificateOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRootCertificateArgs) ToP2SVpnServerConfigVpnClientRootCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRootCertificateOutput)
}

// P2SVpnServerConfigVpnClientRootCertificateArrayInput is an input type that accepts P2SVpnServerConfigVpnClientRootCertificateArray and P2SVpnServerConfigVpnClientRootCertificateArrayOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRootCertificateArrayInput` via:
//
//          P2SVpnServerConfigVpnClientRootCertificateArray{ P2SVpnServerConfigVpnClientRootCertificateArgs{...} }
type P2SVpnServerConfigVpnClientRootCertificateArrayInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRootCertificateArrayOutput() P2SVpnServerConfigVpnClientRootCertificateArrayOutput
	ToP2SVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRootCertificateArrayOutput
}

type P2SVpnServerConfigVpnClientRootCertificateArray []P2SVpnServerConfigVpnClientRootCertificateInput

func (P2SVpnServerConfigVpnClientRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRootCertificateArray) ToP2SVpnServerConfigVpnClientRootCertificateArrayOutput() P2SVpnServerConfigVpnClientRootCertificateArrayOutput {
	return i.ToP2SVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRootCertificateArray) ToP2SVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRootCertificateArrayOutput)
}

// VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificateOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRootCertificateOutput) ToP2SVpnServerConfigVpnClientRootCertificateOutput() P2SVpnServerConfigVpnClientRootCertificateOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRootCertificateOutput) ToP2SVpnServerConfigVpnClientRootCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificateOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigVpnClientRootCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigVpnClientRootCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigVpnClientRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the P2SVpnServerConfiguration VPN client root certificate.
func (o P2SVpnServerConfigVpnClientRootCertificateOutput) Properties() P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificate) P2SVpnServerConfigVpnClientRootCertificatePropertiesFormat {
		return v.Properties
	}).(P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutput)
}

type P2SVpnServerConfigVpnClientRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRootCertificateArrayOutput) ToP2SVpnServerConfigVpnClientRootCertificateArrayOutput() P2SVpnServerConfigVpnClientRootCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRootCertificateArrayOutput) ToP2SVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRootCertificateArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigVpnClientRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigVpnClientRootCertificate {
		return vs[0].([]P2SVpnServerConfigVpnClientRootCertificate)[vs[1].(int)]
	}).(P2SVpnServerConfigVpnClientRootCertificateOutput)
}

// Properties of VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificatePropertiesFormat struct {
	// The certificate public data.
	PublicCertData string `pulumi:"publicCertData"`
}

// P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatInput is an input type that accepts P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatArgs and P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatInput` via:
//
//          P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatArgs{...}
type P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutput() P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutput
	ToP2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutput
}

// Properties of VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatArgs struct {
	// The certificate public data.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRootCertificatePropertiesFormat)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatArgs) ToP2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutput() P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutput {
	return i.ToP2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatArgs) ToP2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutput)
}

// Properties of VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRootCertificatePropertiesFormat)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutput) ToP2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutput() P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutput) ToP2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutput {
	return o
}

// The certificate public data.
func (o P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificatePropertiesFormat) string { return v.PublicCertData }).(pulumi.StringOutput)
}

// Properties of VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponse struct {
	// The provisioning state of the P2SVpnServerConfiguration VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The certificate public data.
	PublicCertData string `pulumi:"publicCertData"`
}

// P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseInput is an input type that accepts P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseArgs and P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseInput` via:
//
//          P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseArgs{...}
type P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutput() P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutput
	ToP2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutput
}

// Properties of VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseArgs struct {
	// The provisioning state of the P2SVpnServerConfiguration VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The certificate public data.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseArgs) ToP2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutput() P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutput {
	return i.ToP2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseArgs) ToP2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutput)
}

// Properties of VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutput) ToP2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutput() P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutput) ToP2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutput {
	return o
}

// The provisioning state of the P2SVpnServerConfiguration VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponse) string {
		return v.ProvisioningState
	}).(pulumi.StringOutput)
}

// The certificate public data.
func (o P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponse) string {
		return v.PublicCertData
	}).(pulumi.StringOutput)
}

// VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the P2SVpnServerConfiguration VPN client root certificate.
	Properties P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponse `pulumi:"properties"`
}

// P2SVpnServerConfigVpnClientRootCertificateResponseInput is an input type that accepts P2SVpnServerConfigVpnClientRootCertificateResponseArgs and P2SVpnServerConfigVpnClientRootCertificateResponseOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRootCertificateResponseInput` via:
//
//          P2SVpnServerConfigVpnClientRootCertificateResponseArgs{...}
type P2SVpnServerConfigVpnClientRootCertificateResponseInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRootCertificateResponseOutput() P2SVpnServerConfigVpnClientRootCertificateResponseOutput
	ToP2SVpnServerConfigVpnClientRootCertificateResponseOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRootCertificateResponseOutput
}

// VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificateResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the P2SVpnServerConfiguration VPN client root certificate.
	Properties P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseInput `pulumi:"properties"`
}

func (P2SVpnServerConfigVpnClientRootCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRootCertificateResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRootCertificateResponseArgs) ToP2SVpnServerConfigVpnClientRootCertificateResponseOutput() P2SVpnServerConfigVpnClientRootCertificateResponseOutput {
	return i.ToP2SVpnServerConfigVpnClientRootCertificateResponseOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRootCertificateResponseArgs) ToP2SVpnServerConfigVpnClientRootCertificateResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRootCertificateResponseOutput)
}

// P2SVpnServerConfigVpnClientRootCertificateResponseArrayInput is an input type that accepts P2SVpnServerConfigVpnClientRootCertificateResponseArray and P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRootCertificateResponseArrayInput` via:
//
//          P2SVpnServerConfigVpnClientRootCertificateResponseArray{ P2SVpnServerConfigVpnClientRootCertificateResponseArgs{...} }
type P2SVpnServerConfigVpnClientRootCertificateResponseArrayInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput() P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput
	ToP2SVpnServerConfigVpnClientRootCertificateResponseArrayOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput
}

type P2SVpnServerConfigVpnClientRootCertificateResponseArray []P2SVpnServerConfigVpnClientRootCertificateResponseInput

func (P2SVpnServerConfigVpnClientRootCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigVpnClientRootCertificateResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRootCertificateResponseArray) ToP2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput() P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput {
	return i.ToP2SVpnServerConfigVpnClientRootCertificateResponseArrayOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRootCertificateResponseArray) ToP2SVpnServerConfigVpnClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput)
}

// VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRootCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRootCertificateResponseOutput) ToP2SVpnServerConfigVpnClientRootCertificateResponseOutput() P2SVpnServerConfigVpnClientRootCertificateResponseOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRootCertificateResponseOutput) ToP2SVpnServerConfigVpnClientRootCertificateResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigVpnClientRootCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigVpnClientRootCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigVpnClientRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the P2SVpnServerConfiguration VPN client root certificate.
func (o P2SVpnServerConfigVpnClientRootCertificateResponseOutput) Properties() P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificateResponse) P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponse {
		return v.Properties
	}).(P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutput)
}

type P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigVpnClientRootCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput) ToP2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput() P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput) ToP2SVpnServerConfigVpnClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigVpnClientRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigVpnClientRootCertificateResponse {
		return vs[0].([]P2SVpnServerConfigVpnClientRootCertificateResponse)[vs[1].(int)]
	}).(P2SVpnServerConfigVpnClientRootCertificateResponseOutput)
}

// P2SVpnServerConfiguration Resource.
type P2SVpnServerConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Parameters for P2SVpnServerConfiguration
	Properties *P2SVpnServerConfigurationProperties `pulumi:"properties"`
}

// P2SVpnServerConfigurationInput is an input type that accepts P2SVpnServerConfigurationArgs and P2SVpnServerConfigurationOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigurationInput` via:
//
//          P2SVpnServerConfigurationArgs{...}
type P2SVpnServerConfigurationInput interface {
	pulumi.Input

	ToP2SVpnServerConfigurationOutput() P2SVpnServerConfigurationOutput
	ToP2SVpnServerConfigurationOutputWithContext(context.Context) P2SVpnServerConfigurationOutput
}

// P2SVpnServerConfiguration Resource.
type P2SVpnServerConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Parameters for P2SVpnServerConfiguration
	Properties P2SVpnServerConfigurationPropertiesPtrInput `pulumi:"properties"`
}

func (P2SVpnServerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfiguration)(nil)).Elem()
}

func (i P2SVpnServerConfigurationArgs) ToP2SVpnServerConfigurationOutput() P2SVpnServerConfigurationOutput {
	return i.ToP2SVpnServerConfigurationOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigurationArgs) ToP2SVpnServerConfigurationOutputWithContext(ctx context.Context) P2SVpnServerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigurationOutput)
}

// P2SVpnServerConfigurationArrayInput is an input type that accepts P2SVpnServerConfigurationArray and P2SVpnServerConfigurationArrayOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigurationArrayInput` via:
//
//          P2SVpnServerConfigurationArray{ P2SVpnServerConfigurationArgs{...} }
type P2SVpnServerConfigurationArrayInput interface {
	pulumi.Input

	ToP2SVpnServerConfigurationArrayOutput() P2SVpnServerConfigurationArrayOutput
	ToP2SVpnServerConfigurationArrayOutputWithContext(context.Context) P2SVpnServerConfigurationArrayOutput
}

type P2SVpnServerConfigurationArray []P2SVpnServerConfigurationInput

func (P2SVpnServerConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfiguration)(nil)).Elem()
}

func (i P2SVpnServerConfigurationArray) ToP2SVpnServerConfigurationArrayOutput() P2SVpnServerConfigurationArrayOutput {
	return i.ToP2SVpnServerConfigurationArrayOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigurationArray) ToP2SVpnServerConfigurationArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigurationArrayOutput)
}

// P2SVpnServerConfiguration Resource.
type P2SVpnServerConfigurationOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfiguration)(nil)).Elem()
}

func (o P2SVpnServerConfigurationOutput) ToP2SVpnServerConfigurationOutput() P2SVpnServerConfigurationOutput {
	return o
}

func (o P2SVpnServerConfigurationOutput) ToP2SVpnServerConfigurationOutputWithContext(ctx context.Context) P2SVpnServerConfigurationOutput {
	return o
}

// Resource ID.
func (o P2SVpnServerConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Parameters for P2SVpnServerConfiguration
func (o P2SVpnServerConfigurationOutput) Properties() P2SVpnServerConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfiguration) *P2SVpnServerConfigurationProperties { return v.Properties }).(P2SVpnServerConfigurationPropertiesPtrOutput)
}

type P2SVpnServerConfigurationArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfiguration)(nil)).Elem()
}

func (o P2SVpnServerConfigurationArrayOutput) ToP2SVpnServerConfigurationArrayOutput() P2SVpnServerConfigurationArrayOutput {
	return o
}

func (o P2SVpnServerConfigurationArrayOutput) ToP2SVpnServerConfigurationArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigurationArrayOutput {
	return o
}

func (o P2SVpnServerConfigurationArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfiguration {
		return vs[0].([]P2SVpnServerConfiguration)[vs[1].(int)]
	}).(P2SVpnServerConfigurationOutput)
}

// Parameters for P2SVpnServerConfiguration
type P2SVpnServerConfigurationProperties struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// The name of the P2SVpnServerConfiguration that is unique within a VirtualWan in a resource group. This name can be used to access the resource along with Paren VirtualWan resource name.
	Name *string `pulumi:"name"`
	// Radius client root certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigRadiusClientRootCertificates []P2SVpnServerConfigRadiusClientRootCertificate `pulumi:"p2SVpnServerConfigRadiusClientRootCertificates"`
	// Radius Server root certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigRadiusServerRootCertificates []P2SVpnServerConfigRadiusServerRootCertificate `pulumi:"p2SVpnServerConfigRadiusServerRootCertificates"`
	// VPN client revoked certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigVpnClientRevokedCertificates []P2SVpnServerConfigVpnClientRevokedCertificate `pulumi:"p2SVpnServerConfigVpnClientRevokedCertificates"`
	// VPN client root certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigVpnClientRootCertificates []P2SVpnServerConfigVpnClientRootCertificate `pulumi:"p2SVpnServerConfigVpnClientRootCertificates"`
	// The radius server address property of the P2SVpnServerConfiguration resource for point to site client connection.
	RadiusServerAddress *string `pulumi:"radiusServerAddress"`
	// The radius secret property of the P2SVpnServerConfiguration resource for point to site client connection.
	RadiusServerSecret *string `pulumi:"radiusServerSecret"`
	// VpnClientIpsecPolicies for P2SVpnServerConfiguration.
	VpnClientIpsecPolicies []IpsecPolicy `pulumi:"vpnClientIpsecPolicies"`
	// vpnProtocols for the P2SVpnServerConfiguration.
	VpnProtocols []string `pulumi:"vpnProtocols"`
}

// P2SVpnServerConfigurationPropertiesInput is an input type that accepts P2SVpnServerConfigurationPropertiesArgs and P2SVpnServerConfigurationPropertiesOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigurationPropertiesInput` via:
//
//          P2SVpnServerConfigurationPropertiesArgs{...}
type P2SVpnServerConfigurationPropertiesInput interface {
	pulumi.Input

	ToP2SVpnServerConfigurationPropertiesOutput() P2SVpnServerConfigurationPropertiesOutput
	ToP2SVpnServerConfigurationPropertiesOutputWithContext(context.Context) P2SVpnServerConfigurationPropertiesOutput
}

// Parameters for P2SVpnServerConfiguration
type P2SVpnServerConfigurationPropertiesArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// The name of the P2SVpnServerConfiguration that is unique within a VirtualWan in a resource group. This name can be used to access the resource along with Paren VirtualWan resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Radius client root certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigRadiusClientRootCertificates P2SVpnServerConfigRadiusClientRootCertificateArrayInput `pulumi:"p2SVpnServerConfigRadiusClientRootCertificates"`
	// Radius Server root certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigRadiusServerRootCertificates P2SVpnServerConfigRadiusServerRootCertificateArrayInput `pulumi:"p2SVpnServerConfigRadiusServerRootCertificates"`
	// VPN client revoked certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigVpnClientRevokedCertificates P2SVpnServerConfigVpnClientRevokedCertificateArrayInput `pulumi:"p2SVpnServerConfigVpnClientRevokedCertificates"`
	// VPN client root certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigVpnClientRootCertificates P2SVpnServerConfigVpnClientRootCertificateArrayInput `pulumi:"p2SVpnServerConfigVpnClientRootCertificates"`
	// The radius server address property of the P2SVpnServerConfiguration resource for point to site client connection.
	RadiusServerAddress pulumi.StringPtrInput `pulumi:"radiusServerAddress"`
	// The radius secret property of the P2SVpnServerConfiguration resource for point to site client connection.
	RadiusServerSecret pulumi.StringPtrInput `pulumi:"radiusServerSecret"`
	// VpnClientIpsecPolicies for P2SVpnServerConfiguration.
	VpnClientIpsecPolicies IpsecPolicyArrayInput `pulumi:"vpnClientIpsecPolicies"`
	// vpnProtocols for the P2SVpnServerConfiguration.
	VpnProtocols pulumi.StringArrayInput `pulumi:"vpnProtocols"`
}

func (P2SVpnServerConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigurationProperties)(nil)).Elem()
}

func (i P2SVpnServerConfigurationPropertiesArgs) ToP2SVpnServerConfigurationPropertiesOutput() P2SVpnServerConfigurationPropertiesOutput {
	return i.ToP2SVpnServerConfigurationPropertiesOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigurationPropertiesArgs) ToP2SVpnServerConfigurationPropertiesOutputWithContext(ctx context.Context) P2SVpnServerConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigurationPropertiesOutput)
}

func (i P2SVpnServerConfigurationPropertiesArgs) ToP2SVpnServerConfigurationPropertiesPtrOutput() P2SVpnServerConfigurationPropertiesPtrOutput {
	return i.ToP2SVpnServerConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigurationPropertiesArgs) ToP2SVpnServerConfigurationPropertiesPtrOutputWithContext(ctx context.Context) P2SVpnServerConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigurationPropertiesOutput).ToP2SVpnServerConfigurationPropertiesPtrOutputWithContext(ctx)
}

// P2SVpnServerConfigurationPropertiesPtrInput is an input type that accepts P2SVpnServerConfigurationPropertiesArgs, P2SVpnServerConfigurationPropertiesPtr and P2SVpnServerConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigurationPropertiesPtrInput` via:
//
//          P2SVpnServerConfigurationPropertiesArgs{...}
//
//  or:
//
//          nil
type P2SVpnServerConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToP2SVpnServerConfigurationPropertiesPtrOutput() P2SVpnServerConfigurationPropertiesPtrOutput
	ToP2SVpnServerConfigurationPropertiesPtrOutputWithContext(context.Context) P2SVpnServerConfigurationPropertiesPtrOutput
}

type p2svpnServerConfigurationPropertiesPtrType P2SVpnServerConfigurationPropertiesArgs

func P2SVpnServerConfigurationPropertiesPtr(v *P2SVpnServerConfigurationPropertiesArgs) P2SVpnServerConfigurationPropertiesPtrInput {
	return (*p2svpnServerConfigurationPropertiesPtrType)(v)
}

func (*p2svpnServerConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**P2SVpnServerConfigurationProperties)(nil)).Elem()
}

func (i *p2svpnServerConfigurationPropertiesPtrType) ToP2SVpnServerConfigurationPropertiesPtrOutput() P2SVpnServerConfigurationPropertiesPtrOutput {
	return i.ToP2SVpnServerConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *p2svpnServerConfigurationPropertiesPtrType) ToP2SVpnServerConfigurationPropertiesPtrOutputWithContext(ctx context.Context) P2SVpnServerConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigurationPropertiesPtrOutput)
}

// Parameters for P2SVpnServerConfiguration
type P2SVpnServerConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigurationProperties)(nil)).Elem()
}

func (o P2SVpnServerConfigurationPropertiesOutput) ToP2SVpnServerConfigurationPropertiesOutput() P2SVpnServerConfigurationPropertiesOutput {
	return o
}

func (o P2SVpnServerConfigurationPropertiesOutput) ToP2SVpnServerConfigurationPropertiesOutputWithContext(ctx context.Context) P2SVpnServerConfigurationPropertiesOutput {
	return o
}

func (o P2SVpnServerConfigurationPropertiesOutput) ToP2SVpnServerConfigurationPropertiesPtrOutput() P2SVpnServerConfigurationPropertiesPtrOutput {
	return o.ToP2SVpnServerConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o P2SVpnServerConfigurationPropertiesOutput) ToP2SVpnServerConfigurationPropertiesPtrOutputWithContext(ctx context.Context) P2SVpnServerConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationProperties) *P2SVpnServerConfigurationProperties {
		return &v
	}).(P2SVpnServerConfigurationPropertiesPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigurationPropertiesOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationProperties) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The name of the P2SVpnServerConfiguration that is unique within a VirtualWan in a resource group. This name can be used to access the resource along with Paren VirtualWan resource name.
func (o P2SVpnServerConfigurationPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Radius client root certificate of P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesOutput) P2SVpnServerConfigRadiusClientRootCertificates() P2SVpnServerConfigRadiusClientRootCertificateArrayOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationProperties) []P2SVpnServerConfigRadiusClientRootCertificate {
		return v.P2SVpnServerConfigRadiusClientRootCertificates
	}).(P2SVpnServerConfigRadiusClientRootCertificateArrayOutput)
}

// Radius Server root certificate of P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesOutput) P2SVpnServerConfigRadiusServerRootCertificates() P2SVpnServerConfigRadiusServerRootCertificateArrayOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationProperties) []P2SVpnServerConfigRadiusServerRootCertificate {
		return v.P2SVpnServerConfigRadiusServerRootCertificates
	}).(P2SVpnServerConfigRadiusServerRootCertificateArrayOutput)
}

// VPN client revoked certificate of P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesOutput) P2SVpnServerConfigVpnClientRevokedCertificates() P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationProperties) []P2SVpnServerConfigVpnClientRevokedCertificate {
		return v.P2SVpnServerConfigVpnClientRevokedCertificates
	}).(P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput)
}

// VPN client root certificate of P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesOutput) P2SVpnServerConfigVpnClientRootCertificates() P2SVpnServerConfigVpnClientRootCertificateArrayOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationProperties) []P2SVpnServerConfigVpnClientRootCertificate {
		return v.P2SVpnServerConfigVpnClientRootCertificates
	}).(P2SVpnServerConfigVpnClientRootCertificateArrayOutput)
}

// The radius server address property of the P2SVpnServerConfiguration resource for point to site client connection.
func (o P2SVpnServerConfigurationPropertiesOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationProperties) *string { return v.RadiusServerAddress }).(pulumi.StringPtrOutput)
}

// The radius secret property of the P2SVpnServerConfiguration resource for point to site client connection.
func (o P2SVpnServerConfigurationPropertiesOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationProperties) *string { return v.RadiusServerSecret }).(pulumi.StringPtrOutput)
}

// VpnClientIpsecPolicies for P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesOutput) VpnClientIpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationProperties) []IpsecPolicy { return v.VpnClientIpsecPolicies }).(IpsecPolicyArrayOutput)
}

// vpnProtocols for the P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesOutput) VpnProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationProperties) []string { return v.VpnProtocols }).(pulumi.StringArrayOutput)
}

type P2SVpnServerConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**P2SVpnServerConfigurationProperties)(nil)).Elem()
}

func (o P2SVpnServerConfigurationPropertiesPtrOutput) ToP2SVpnServerConfigurationPropertiesPtrOutput() P2SVpnServerConfigurationPropertiesPtrOutput {
	return o
}

func (o P2SVpnServerConfigurationPropertiesPtrOutput) ToP2SVpnServerConfigurationPropertiesPtrOutputWithContext(ctx context.Context) P2SVpnServerConfigurationPropertiesPtrOutput {
	return o
}

func (o P2SVpnServerConfigurationPropertiesPtrOutput) Elem() P2SVpnServerConfigurationPropertiesOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationProperties) P2SVpnServerConfigurationProperties { return *v }).(P2SVpnServerConfigurationPropertiesOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigurationPropertiesPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// The name of the P2SVpnServerConfiguration that is unique within a VirtualWan in a resource group. This name can be used to access the resource along with Paren VirtualWan resource name.
func (o P2SVpnServerConfigurationPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Radius client root certificate of P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesPtrOutput) P2SVpnServerConfigRadiusClientRootCertificates() P2SVpnServerConfigRadiusClientRootCertificateArrayOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationProperties) []P2SVpnServerConfigRadiusClientRootCertificate {
		if v == nil {
			return nil
		}
		return v.P2SVpnServerConfigRadiusClientRootCertificates
	}).(P2SVpnServerConfigRadiusClientRootCertificateArrayOutput)
}

// Radius Server root certificate of P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesPtrOutput) P2SVpnServerConfigRadiusServerRootCertificates() P2SVpnServerConfigRadiusServerRootCertificateArrayOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationProperties) []P2SVpnServerConfigRadiusServerRootCertificate {
		if v == nil {
			return nil
		}
		return v.P2SVpnServerConfigRadiusServerRootCertificates
	}).(P2SVpnServerConfigRadiusServerRootCertificateArrayOutput)
}

// VPN client revoked certificate of P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesPtrOutput) P2SVpnServerConfigVpnClientRevokedCertificates() P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationProperties) []P2SVpnServerConfigVpnClientRevokedCertificate {
		if v == nil {
			return nil
		}
		return v.P2SVpnServerConfigVpnClientRevokedCertificates
	}).(P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput)
}

// VPN client root certificate of P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesPtrOutput) P2SVpnServerConfigVpnClientRootCertificates() P2SVpnServerConfigVpnClientRootCertificateArrayOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationProperties) []P2SVpnServerConfigVpnClientRootCertificate {
		if v == nil {
			return nil
		}
		return v.P2SVpnServerConfigVpnClientRootCertificates
	}).(P2SVpnServerConfigVpnClientRootCertificateArrayOutput)
}

// The radius server address property of the P2SVpnServerConfiguration resource for point to site client connection.
func (o P2SVpnServerConfigurationPropertiesPtrOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerAddress
	}).(pulumi.StringPtrOutput)
}

// The radius secret property of the P2SVpnServerConfiguration resource for point to site client connection.
func (o P2SVpnServerConfigurationPropertiesPtrOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerSecret
	}).(pulumi.StringPtrOutput)
}

// VpnClientIpsecPolicies for P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesPtrOutput) VpnClientIpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationProperties) []IpsecPolicy {
		if v == nil {
			return nil
		}
		return v.VpnClientIpsecPolicies
	}).(IpsecPolicyArrayOutput)
}

// vpnProtocols for the P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesPtrOutput) VpnProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationProperties) []string {
		if v == nil {
			return nil
		}
		return v.VpnProtocols
	}).(pulumi.StringArrayOutput)
}

// Parameters for P2SVpnServerConfiguration
type P2SVpnServerConfigurationPropertiesResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// The name of the P2SVpnServerConfiguration that is unique within a VirtualWan in a resource group. This name can be used to access the resource along with Paren VirtualWan resource name.
	Name           *string               `pulumi:"name"`
	P2SVpnGateways []SubResourceResponse `pulumi:"p2SVpnGateways"`
	// Radius client root certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigRadiusClientRootCertificates []P2SVpnServerConfigRadiusClientRootCertificateResponse `pulumi:"p2SVpnServerConfigRadiusClientRootCertificates"`
	// Radius Server root certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigRadiusServerRootCertificates []P2SVpnServerConfigRadiusServerRootCertificateResponse `pulumi:"p2SVpnServerConfigRadiusServerRootCertificates"`
	// VPN client revoked certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigVpnClientRevokedCertificates []P2SVpnServerConfigVpnClientRevokedCertificateResponse `pulumi:"p2SVpnServerConfigVpnClientRevokedCertificates"`
	// VPN client root certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigVpnClientRootCertificates []P2SVpnServerConfigVpnClientRootCertificateResponse `pulumi:"p2SVpnServerConfigVpnClientRootCertificates"`
	// The provisioning state of the P2SVpnServerConfiguration resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The radius server address property of the P2SVpnServerConfiguration resource for point to site client connection.
	RadiusServerAddress *string `pulumi:"radiusServerAddress"`
	// The radius secret property of the P2SVpnServerConfiguration resource for point to site client connection.
	RadiusServerSecret *string `pulumi:"radiusServerSecret"`
	// VpnClientIpsecPolicies for P2SVpnServerConfiguration.
	VpnClientIpsecPolicies []IpsecPolicyResponse `pulumi:"vpnClientIpsecPolicies"`
	// vpnProtocols for the P2SVpnServerConfiguration.
	VpnProtocols []string `pulumi:"vpnProtocols"`
}

// P2SVpnServerConfigurationPropertiesResponseInput is an input type that accepts P2SVpnServerConfigurationPropertiesResponseArgs and P2SVpnServerConfigurationPropertiesResponseOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigurationPropertiesResponseInput` via:
//
//          P2SVpnServerConfigurationPropertiesResponseArgs{...}
type P2SVpnServerConfigurationPropertiesResponseInput interface {
	pulumi.Input

	ToP2SVpnServerConfigurationPropertiesResponseOutput() P2SVpnServerConfigurationPropertiesResponseOutput
	ToP2SVpnServerConfigurationPropertiesResponseOutputWithContext(context.Context) P2SVpnServerConfigurationPropertiesResponseOutput
}

// Parameters for P2SVpnServerConfiguration
type P2SVpnServerConfigurationPropertiesResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// The name of the P2SVpnServerConfiguration that is unique within a VirtualWan in a resource group. This name can be used to access the resource along with Paren VirtualWan resource name.
	Name           pulumi.StringPtrInput         `pulumi:"name"`
	P2SVpnGateways SubResourceResponseArrayInput `pulumi:"p2SVpnGateways"`
	// Radius client root certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigRadiusClientRootCertificates P2SVpnServerConfigRadiusClientRootCertificateResponseArrayInput `pulumi:"p2SVpnServerConfigRadiusClientRootCertificates"`
	// Radius Server root certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigRadiusServerRootCertificates P2SVpnServerConfigRadiusServerRootCertificateResponseArrayInput `pulumi:"p2SVpnServerConfigRadiusServerRootCertificates"`
	// VPN client revoked certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigVpnClientRevokedCertificates P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayInput `pulumi:"p2SVpnServerConfigVpnClientRevokedCertificates"`
	// VPN client root certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigVpnClientRootCertificates P2SVpnServerConfigVpnClientRootCertificateResponseArrayInput `pulumi:"p2SVpnServerConfigVpnClientRootCertificates"`
	// The provisioning state of the P2SVpnServerConfiguration resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The radius server address property of the P2SVpnServerConfiguration resource for point to site client connection.
	RadiusServerAddress pulumi.StringPtrInput `pulumi:"radiusServerAddress"`
	// The radius secret property of the P2SVpnServerConfiguration resource for point to site client connection.
	RadiusServerSecret pulumi.StringPtrInput `pulumi:"radiusServerSecret"`
	// VpnClientIpsecPolicies for P2SVpnServerConfiguration.
	VpnClientIpsecPolicies IpsecPolicyResponseArrayInput `pulumi:"vpnClientIpsecPolicies"`
	// vpnProtocols for the P2SVpnServerConfiguration.
	VpnProtocols pulumi.StringArrayInput `pulumi:"vpnProtocols"`
}

func (P2SVpnServerConfigurationPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigurationPropertiesResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigurationPropertiesResponseArgs) ToP2SVpnServerConfigurationPropertiesResponseOutput() P2SVpnServerConfigurationPropertiesResponseOutput {
	return i.ToP2SVpnServerConfigurationPropertiesResponseOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigurationPropertiesResponseArgs) ToP2SVpnServerConfigurationPropertiesResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigurationPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigurationPropertiesResponseOutput)
}

func (i P2SVpnServerConfigurationPropertiesResponseArgs) ToP2SVpnServerConfigurationPropertiesResponsePtrOutput() P2SVpnServerConfigurationPropertiesResponsePtrOutput {
	return i.ToP2SVpnServerConfigurationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigurationPropertiesResponseArgs) ToP2SVpnServerConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) P2SVpnServerConfigurationPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigurationPropertiesResponseOutput).ToP2SVpnServerConfigurationPropertiesResponsePtrOutputWithContext(ctx)
}

// P2SVpnServerConfigurationPropertiesResponsePtrInput is an input type that accepts P2SVpnServerConfigurationPropertiesResponseArgs, P2SVpnServerConfigurationPropertiesResponsePtr and P2SVpnServerConfigurationPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigurationPropertiesResponsePtrInput` via:
//
//          P2SVpnServerConfigurationPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type P2SVpnServerConfigurationPropertiesResponsePtrInput interface {
	pulumi.Input

	ToP2SVpnServerConfigurationPropertiesResponsePtrOutput() P2SVpnServerConfigurationPropertiesResponsePtrOutput
	ToP2SVpnServerConfigurationPropertiesResponsePtrOutputWithContext(context.Context) P2SVpnServerConfigurationPropertiesResponsePtrOutput
}

type p2svpnServerConfigurationPropertiesResponsePtrType P2SVpnServerConfigurationPropertiesResponseArgs

func P2SVpnServerConfigurationPropertiesResponsePtr(v *P2SVpnServerConfigurationPropertiesResponseArgs) P2SVpnServerConfigurationPropertiesResponsePtrInput {
	return (*p2svpnServerConfigurationPropertiesResponsePtrType)(v)
}

func (*p2svpnServerConfigurationPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**P2SVpnServerConfigurationPropertiesResponse)(nil)).Elem()
}

func (i *p2svpnServerConfigurationPropertiesResponsePtrType) ToP2SVpnServerConfigurationPropertiesResponsePtrOutput() P2SVpnServerConfigurationPropertiesResponsePtrOutput {
	return i.ToP2SVpnServerConfigurationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *p2svpnServerConfigurationPropertiesResponsePtrType) ToP2SVpnServerConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) P2SVpnServerConfigurationPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigurationPropertiesResponsePtrOutput)
}

// Parameters for P2SVpnServerConfiguration
type P2SVpnServerConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigurationPropertiesResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigurationPropertiesResponseOutput) ToP2SVpnServerConfigurationPropertiesResponseOutput() P2SVpnServerConfigurationPropertiesResponseOutput {
	return o
}

func (o P2SVpnServerConfigurationPropertiesResponseOutput) ToP2SVpnServerConfigurationPropertiesResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigurationPropertiesResponseOutput {
	return o
}

func (o P2SVpnServerConfigurationPropertiesResponseOutput) ToP2SVpnServerConfigurationPropertiesResponsePtrOutput() P2SVpnServerConfigurationPropertiesResponsePtrOutput {
	return o.ToP2SVpnServerConfigurationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o P2SVpnServerConfigurationPropertiesResponseOutput) ToP2SVpnServerConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) P2SVpnServerConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationPropertiesResponse) *P2SVpnServerConfigurationPropertiesResponse {
		return &v
	}).(P2SVpnServerConfigurationPropertiesResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigurationPropertiesResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationPropertiesResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The name of the P2SVpnServerConfiguration that is unique within a VirtualWan in a resource group. This name can be used to access the resource along with Paren VirtualWan resource name.
func (o P2SVpnServerConfigurationPropertiesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationPropertiesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o P2SVpnServerConfigurationPropertiesResponseOutput) P2SVpnGateways() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationPropertiesResponse) []SubResourceResponse { return v.P2SVpnGateways }).(SubResourceResponseArrayOutput)
}

// Radius client root certificate of P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesResponseOutput) P2SVpnServerConfigRadiusClientRootCertificates() P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationPropertiesResponse) []P2SVpnServerConfigRadiusClientRootCertificateResponse {
		return v.P2SVpnServerConfigRadiusClientRootCertificates
	}).(P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput)
}

// Radius Server root certificate of P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesResponseOutput) P2SVpnServerConfigRadiusServerRootCertificates() P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationPropertiesResponse) []P2SVpnServerConfigRadiusServerRootCertificateResponse {
		return v.P2SVpnServerConfigRadiusServerRootCertificates
	}).(P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput)
}

// VPN client revoked certificate of P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesResponseOutput) P2SVpnServerConfigVpnClientRevokedCertificates() P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationPropertiesResponse) []P2SVpnServerConfigVpnClientRevokedCertificateResponse {
		return v.P2SVpnServerConfigVpnClientRevokedCertificates
	}).(P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput)
}

// VPN client root certificate of P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesResponseOutput) P2SVpnServerConfigVpnClientRootCertificates() P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationPropertiesResponse) []P2SVpnServerConfigVpnClientRootCertificateResponse {
		return v.P2SVpnServerConfigVpnClientRootCertificates
	}).(P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput)
}

// The provisioning state of the P2SVpnServerConfiguration resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o P2SVpnServerConfigurationPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The radius server address property of the P2SVpnServerConfiguration resource for point to site client connection.
func (o P2SVpnServerConfigurationPropertiesResponseOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationPropertiesResponse) *string { return v.RadiusServerAddress }).(pulumi.StringPtrOutput)
}

// The radius secret property of the P2SVpnServerConfiguration resource for point to site client connection.
func (o P2SVpnServerConfigurationPropertiesResponseOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationPropertiesResponse) *string { return v.RadiusServerSecret }).(pulumi.StringPtrOutput)
}

// VpnClientIpsecPolicies for P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesResponseOutput) VpnClientIpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationPropertiesResponse) []IpsecPolicyResponse {
		return v.VpnClientIpsecPolicies
	}).(IpsecPolicyResponseArrayOutput)
}

// vpnProtocols for the P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesResponseOutput) VpnProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationPropertiesResponse) []string { return v.VpnProtocols }).(pulumi.StringArrayOutput)
}

type P2SVpnServerConfigurationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigurationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**P2SVpnServerConfigurationPropertiesResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigurationPropertiesResponsePtrOutput) ToP2SVpnServerConfigurationPropertiesResponsePtrOutput() P2SVpnServerConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o P2SVpnServerConfigurationPropertiesResponsePtrOutput) ToP2SVpnServerConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) P2SVpnServerConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o P2SVpnServerConfigurationPropertiesResponsePtrOutput) Elem() P2SVpnServerConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationPropertiesResponse) P2SVpnServerConfigurationPropertiesResponse {
		return *v
	}).(P2SVpnServerConfigurationPropertiesResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigurationPropertiesResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// The name of the P2SVpnServerConfiguration that is unique within a VirtualWan in a resource group. This name can be used to access the resource along with Paren VirtualWan resource name.
func (o P2SVpnServerConfigurationPropertiesResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o P2SVpnServerConfigurationPropertiesResponsePtrOutput) P2SVpnGateways() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationPropertiesResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.P2SVpnGateways
	}).(SubResourceResponseArrayOutput)
}

// Radius client root certificate of P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesResponsePtrOutput) P2SVpnServerConfigRadiusClientRootCertificates() P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationPropertiesResponse) []P2SVpnServerConfigRadiusClientRootCertificateResponse {
		if v == nil {
			return nil
		}
		return v.P2SVpnServerConfigRadiusClientRootCertificates
	}).(P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput)
}

// Radius Server root certificate of P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesResponsePtrOutput) P2SVpnServerConfigRadiusServerRootCertificates() P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationPropertiesResponse) []P2SVpnServerConfigRadiusServerRootCertificateResponse {
		if v == nil {
			return nil
		}
		return v.P2SVpnServerConfigRadiusServerRootCertificates
	}).(P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput)
}

// VPN client revoked certificate of P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesResponsePtrOutput) P2SVpnServerConfigVpnClientRevokedCertificates() P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationPropertiesResponse) []P2SVpnServerConfigVpnClientRevokedCertificateResponse {
		if v == nil {
			return nil
		}
		return v.P2SVpnServerConfigVpnClientRevokedCertificates
	}).(P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput)
}

// VPN client root certificate of P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesResponsePtrOutput) P2SVpnServerConfigVpnClientRootCertificates() P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationPropertiesResponse) []P2SVpnServerConfigVpnClientRootCertificateResponse {
		if v == nil {
			return nil
		}
		return v.P2SVpnServerConfigVpnClientRootCertificates
	}).(P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput)
}

// The provisioning state of the P2SVpnServerConfiguration resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o P2SVpnServerConfigurationPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The radius server address property of the P2SVpnServerConfiguration resource for point to site client connection.
func (o P2SVpnServerConfigurationPropertiesResponsePtrOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerAddress
	}).(pulumi.StringPtrOutput)
}

// The radius secret property of the P2SVpnServerConfiguration resource for point to site client connection.
func (o P2SVpnServerConfigurationPropertiesResponsePtrOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerSecret
	}).(pulumi.StringPtrOutput)
}

// VpnClientIpsecPolicies for P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesResponsePtrOutput) VpnClientIpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationPropertiesResponse) []IpsecPolicyResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientIpsecPolicies
	}).(IpsecPolicyResponseArrayOutput)
}

// vpnProtocols for the P2SVpnServerConfiguration.
func (o P2SVpnServerConfigurationPropertiesResponsePtrOutput) VpnProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *P2SVpnServerConfigurationPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.VpnProtocols
	}).(pulumi.StringArrayOutput)
}

// P2SVpnServerConfiguration Resource.
type P2SVpnServerConfigurationResponse struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Parameters for P2SVpnServerConfiguration
	Properties *P2SVpnServerConfigurationPropertiesResponse `pulumi:"properties"`
}

// P2SVpnServerConfigurationResponseInput is an input type that accepts P2SVpnServerConfigurationResponseArgs and P2SVpnServerConfigurationResponseOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigurationResponseInput` via:
//
//          P2SVpnServerConfigurationResponseArgs{...}
type P2SVpnServerConfigurationResponseInput interface {
	pulumi.Input

	ToP2SVpnServerConfigurationResponseOutput() P2SVpnServerConfigurationResponseOutput
	ToP2SVpnServerConfigurationResponseOutputWithContext(context.Context) P2SVpnServerConfigurationResponseOutput
}

// P2SVpnServerConfiguration Resource.
type P2SVpnServerConfigurationResponseArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Parameters for P2SVpnServerConfiguration
	Properties P2SVpnServerConfigurationPropertiesResponsePtrInput `pulumi:"properties"`
}

func (P2SVpnServerConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigurationResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigurationResponseArgs) ToP2SVpnServerConfigurationResponseOutput() P2SVpnServerConfigurationResponseOutput {
	return i.ToP2SVpnServerConfigurationResponseOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigurationResponseArgs) ToP2SVpnServerConfigurationResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigurationResponseOutput)
}

// P2SVpnServerConfigurationResponseArrayInput is an input type that accepts P2SVpnServerConfigurationResponseArray and P2SVpnServerConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigurationResponseArrayInput` via:
//
//          P2SVpnServerConfigurationResponseArray{ P2SVpnServerConfigurationResponseArgs{...} }
type P2SVpnServerConfigurationResponseArrayInput interface {
	pulumi.Input

	ToP2SVpnServerConfigurationResponseArrayOutput() P2SVpnServerConfigurationResponseArrayOutput
	ToP2SVpnServerConfigurationResponseArrayOutputWithContext(context.Context) P2SVpnServerConfigurationResponseArrayOutput
}

type P2SVpnServerConfigurationResponseArray []P2SVpnServerConfigurationResponseInput

func (P2SVpnServerConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigurationResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigurationResponseArray) ToP2SVpnServerConfigurationResponseArrayOutput() P2SVpnServerConfigurationResponseArrayOutput {
	return i.ToP2SVpnServerConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigurationResponseArray) ToP2SVpnServerConfigurationResponseArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigurationResponseArrayOutput)
}

// P2SVpnServerConfiguration Resource.
type P2SVpnServerConfigurationResponseOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigurationResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigurationResponseOutput) ToP2SVpnServerConfigurationResponseOutput() P2SVpnServerConfigurationResponseOutput {
	return o
}

func (o P2SVpnServerConfigurationResponseOutput) ToP2SVpnServerConfigurationResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigurationResponseOutput {
	return o
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o P2SVpnServerConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Parameters for P2SVpnServerConfiguration
func (o P2SVpnServerConfigurationResponseOutput) Properties() P2SVpnServerConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigurationResponse) *P2SVpnServerConfigurationPropertiesResponse {
		return v.Properties
	}).(P2SVpnServerConfigurationPropertiesResponsePtrOutput)
}

type P2SVpnServerConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigurationResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigurationResponseArrayOutput) ToP2SVpnServerConfigurationResponseArrayOutput() P2SVpnServerConfigurationResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigurationResponseArrayOutput) ToP2SVpnServerConfigurationResponseArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigurationResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigurationResponseArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigurationResponse {
		return vs[0].([]P2SVpnServerConfigurationResponse)[vs[1].(int)]
	}).(P2SVpnServerConfigurationResponseOutput)
}

// P2SVpnGateway Resource.
type P2sVpnGatewayType struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource location.
	Location string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Parameters for P2SVpnGateway
	Properties P2SVpnGatewayPropertiesResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// P2sVpnGatewayTypeInput is an input type that accepts P2sVpnGatewayTypeArgs and P2sVpnGatewayTypeOutput values.
// You can construct a concrete instance of `P2sVpnGatewayTypeInput` via:
//
//          P2sVpnGatewayTypeArgs{...}
type P2sVpnGatewayTypeInput interface {
	pulumi.Input

	ToP2sVpnGatewayTypeOutput() P2sVpnGatewayTypeOutput
	ToP2sVpnGatewayTypeOutputWithContext(context.Context) P2sVpnGatewayTypeOutput
}

// P2SVpnGateway Resource.
type P2sVpnGatewayTypeArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Parameters for P2SVpnGateway
	Properties P2SVpnGatewayPropertiesResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (P2sVpnGatewayTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2sVpnGatewayType)(nil)).Elem()
}

func (i P2sVpnGatewayTypeArgs) ToP2sVpnGatewayTypeOutput() P2sVpnGatewayTypeOutput {
	return i.ToP2sVpnGatewayTypeOutputWithContext(context.Background())
}

func (i P2sVpnGatewayTypeArgs) ToP2sVpnGatewayTypeOutputWithContext(ctx context.Context) P2sVpnGatewayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2sVpnGatewayTypeOutput)
}

// P2SVpnGateway Resource.
type P2sVpnGatewayTypeOutput struct{ *pulumi.OutputState }

func (P2sVpnGatewayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2sVpnGatewayType)(nil)).Elem()
}

func (o P2sVpnGatewayTypeOutput) ToP2sVpnGatewayTypeOutput() P2sVpnGatewayTypeOutput {
	return o
}

func (o P2sVpnGatewayTypeOutput) ToP2sVpnGatewayTypeOutputWithContext(ctx context.Context) P2sVpnGatewayTypeOutput {
	return o
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o P2sVpnGatewayTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v P2sVpnGatewayType) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource location.
func (o P2sVpnGatewayTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v P2sVpnGatewayType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name.
func (o P2sVpnGatewayTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v P2sVpnGatewayType) string { return v.Name }).(pulumi.StringOutput)
}

// Parameters for P2SVpnGateway
func (o P2sVpnGatewayTypeOutput) Properties() P2SVpnGatewayPropertiesResponseOutput {
	return o.ApplyT(func(v P2sVpnGatewayType) P2SVpnGatewayPropertiesResponse { return v.Properties }).(P2SVpnGatewayPropertiesResponseOutput)
}

// Resource tags.
func (o P2sVpnGatewayTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v P2sVpnGatewayType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o P2sVpnGatewayTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v P2sVpnGatewayType) string { return v.Type }).(pulumi.StringOutput)
}

// P2SVpnServerConfiguration Resource.
type P2sVpnServerConfigurationType struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Parameters for P2SVpnServerConfiguration
	Properties P2SVpnServerConfigurationPropertiesResponse `pulumi:"properties"`
}

// P2sVpnServerConfigurationTypeInput is an input type that accepts P2sVpnServerConfigurationTypeArgs and P2sVpnServerConfigurationTypeOutput values.
// You can construct a concrete instance of `P2sVpnServerConfigurationTypeInput` via:
//
//          P2sVpnServerConfigurationTypeArgs{...}
type P2sVpnServerConfigurationTypeInput interface {
	pulumi.Input

	ToP2sVpnServerConfigurationTypeOutput() P2sVpnServerConfigurationTypeOutput
	ToP2sVpnServerConfigurationTypeOutputWithContext(context.Context) P2sVpnServerConfigurationTypeOutput
}

// P2SVpnServerConfiguration Resource.
type P2sVpnServerConfigurationTypeArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Parameters for P2SVpnServerConfiguration
	Properties P2SVpnServerConfigurationPropertiesResponseInput `pulumi:"properties"`
}

func (P2sVpnServerConfigurationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2sVpnServerConfigurationType)(nil)).Elem()
}

func (i P2sVpnServerConfigurationTypeArgs) ToP2sVpnServerConfigurationTypeOutput() P2sVpnServerConfigurationTypeOutput {
	return i.ToP2sVpnServerConfigurationTypeOutputWithContext(context.Background())
}

func (i P2sVpnServerConfigurationTypeArgs) ToP2sVpnServerConfigurationTypeOutputWithContext(ctx context.Context) P2sVpnServerConfigurationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2sVpnServerConfigurationTypeOutput)
}

// P2SVpnServerConfiguration Resource.
type P2sVpnServerConfigurationTypeOutput struct{ *pulumi.OutputState }

func (P2sVpnServerConfigurationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2sVpnServerConfigurationType)(nil)).Elem()
}

func (o P2sVpnServerConfigurationTypeOutput) ToP2sVpnServerConfigurationTypeOutput() P2sVpnServerConfigurationTypeOutput {
	return o
}

func (o P2sVpnServerConfigurationTypeOutput) ToP2sVpnServerConfigurationTypeOutputWithContext(ctx context.Context) P2sVpnServerConfigurationTypeOutput {
	return o
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o P2sVpnServerConfigurationTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v P2sVpnServerConfigurationType) string { return v.Etag }).(pulumi.StringOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2sVpnServerConfigurationTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2sVpnServerConfigurationType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Parameters for P2SVpnServerConfiguration
func (o P2sVpnServerConfigurationTypeOutput) Properties() P2SVpnServerConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v P2sVpnServerConfigurationType) P2SVpnServerConfigurationPropertiesResponse { return v.Properties }).(P2SVpnServerConfigurationPropertiesResponseOutput)
}

// Information about packet capture session.
type PacketCaptureType struct {
	Etag *string `pulumi:"etag"`
	// Name of the packet capture session.
	Name string `pulumi:"name"`
	// Describes the properties of a packet capture session.
	Properties PacketCaptureResultPropertiesResponse `pulumi:"properties"`
}

// PacketCaptureTypeInput is an input type that accepts PacketCaptureTypeArgs and PacketCaptureTypeOutput values.
// You can construct a concrete instance of `PacketCaptureTypeInput` via:
//
//          PacketCaptureTypeArgs{...}
type PacketCaptureTypeInput interface {
	pulumi.Input

	ToPacketCaptureTypeOutput() PacketCaptureTypeOutput
	ToPacketCaptureTypeOutputWithContext(context.Context) PacketCaptureTypeOutput
}

// Information about packet capture session.
type PacketCaptureTypeArgs struct {
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Name of the packet capture session.
	Name pulumi.StringInput `pulumi:"name"`
	// Describes the properties of a packet capture session.
	Properties PacketCaptureResultPropertiesResponseInput `pulumi:"properties"`
}

func (PacketCaptureTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureType)(nil)).Elem()
}

func (i PacketCaptureTypeArgs) ToPacketCaptureTypeOutput() PacketCaptureTypeOutput {
	return i.ToPacketCaptureTypeOutputWithContext(context.Background())
}

func (i PacketCaptureTypeArgs) ToPacketCaptureTypeOutputWithContext(ctx context.Context) PacketCaptureTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureTypeOutput)
}

// Information about packet capture session.
type PacketCaptureTypeOutput struct{ *pulumi.OutputState }

func (PacketCaptureTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureType)(nil)).Elem()
}

func (o PacketCaptureTypeOutput) ToPacketCaptureTypeOutput() PacketCaptureTypeOutput {
	return o
}

func (o PacketCaptureTypeOutput) ToPacketCaptureTypeOutputWithContext(ctx context.Context) PacketCaptureTypeOutput {
	return o
}

func (o PacketCaptureTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Name of the packet capture session.
func (o PacketCaptureTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PacketCaptureType) string { return v.Name }).(pulumi.StringOutput)
}

// Describes the properties of a packet capture session.
func (o PacketCaptureTypeOutput) Properties() PacketCaptureResultPropertiesResponseOutput {
	return o.ApplyT(func(v PacketCaptureType) PacketCaptureResultPropertiesResponse { return v.Properties }).(PacketCaptureResultPropertiesResponseOutput)
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilter struct {
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalIPAddress *string `pulumi:"localIPAddress"`
	// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalPort *string `pulumi:"localPort"`
	// Protocol to be filtered on.
	Protocol *string `pulumi:"protocol"`
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemoteIPAddress *string `pulumi:"remoteIPAddress"`
	// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemotePort *string `pulumi:"remotePort"`
}

// PacketCaptureFilterInput is an input type that accepts PacketCaptureFilterArgs and PacketCaptureFilterOutput values.
// You can construct a concrete instance of `PacketCaptureFilterInput` via:
//
//          PacketCaptureFilterArgs{...}
type PacketCaptureFilterInput interface {
	pulumi.Input

	ToPacketCaptureFilterOutput() PacketCaptureFilterOutput
	ToPacketCaptureFilterOutputWithContext(context.Context) PacketCaptureFilterOutput
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterArgs struct {
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalIPAddress pulumi.StringPtrInput `pulumi:"localIPAddress"`
	// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalPort pulumi.StringPtrInput `pulumi:"localPort"`
	// Protocol to be filtered on.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemoteIPAddress pulumi.StringPtrInput `pulumi:"remoteIPAddress"`
	// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemotePort pulumi.StringPtrInput `pulumi:"remotePort"`
}

func (PacketCaptureFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureFilter)(nil)).Elem()
}

func (i PacketCaptureFilterArgs) ToPacketCaptureFilterOutput() PacketCaptureFilterOutput {
	return i.ToPacketCaptureFilterOutputWithContext(context.Background())
}

func (i PacketCaptureFilterArgs) ToPacketCaptureFilterOutputWithContext(ctx context.Context) PacketCaptureFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureFilterOutput)
}

// PacketCaptureFilterArrayInput is an input type that accepts PacketCaptureFilterArray and PacketCaptureFilterArrayOutput values.
// You can construct a concrete instance of `PacketCaptureFilterArrayInput` via:
//
//          PacketCaptureFilterArray{ PacketCaptureFilterArgs{...} }
type PacketCaptureFilterArrayInput interface {
	pulumi.Input

	ToPacketCaptureFilterArrayOutput() PacketCaptureFilterArrayOutput
	ToPacketCaptureFilterArrayOutputWithContext(context.Context) PacketCaptureFilterArrayOutput
}

type PacketCaptureFilterArray []PacketCaptureFilterInput

func (PacketCaptureFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PacketCaptureFilter)(nil)).Elem()
}

func (i PacketCaptureFilterArray) ToPacketCaptureFilterArrayOutput() PacketCaptureFilterArrayOutput {
	return i.ToPacketCaptureFilterArrayOutputWithContext(context.Background())
}

func (i PacketCaptureFilterArray) ToPacketCaptureFilterArrayOutputWithContext(ctx context.Context) PacketCaptureFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureFilterArrayOutput)
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterOutput struct{ *pulumi.OutputState }

func (PacketCaptureFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureFilter)(nil)).Elem()
}

func (o PacketCaptureFilterOutput) ToPacketCaptureFilterOutput() PacketCaptureFilterOutput {
	return o
}

func (o PacketCaptureFilterOutput) ToPacketCaptureFilterOutputWithContext(ctx context.Context) PacketCaptureFilterOutput {
	return o
}

// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterOutput) LocalIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.LocalIPAddress }).(pulumi.StringPtrOutput)
}

// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterOutput) LocalPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.LocalPort }).(pulumi.StringPtrOutput)
}

// Protocol to be filtered on.
func (o PacketCaptureFilterOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterOutput) RemoteIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.RemoteIPAddress }).(pulumi.StringPtrOutput)
}

// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterOutput) RemotePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.RemotePort }).(pulumi.StringPtrOutput)
}

type PacketCaptureFilterArrayOutput struct{ *pulumi.OutputState }

func (PacketCaptureFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PacketCaptureFilter)(nil)).Elem()
}

func (o PacketCaptureFilterArrayOutput) ToPacketCaptureFilterArrayOutput() PacketCaptureFilterArrayOutput {
	return o
}

func (o PacketCaptureFilterArrayOutput) ToPacketCaptureFilterArrayOutputWithContext(ctx context.Context) PacketCaptureFilterArrayOutput {
	return o
}

func (o PacketCaptureFilterArrayOutput) Index(i pulumi.IntInput) PacketCaptureFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PacketCaptureFilter {
		return vs[0].([]PacketCaptureFilter)[vs[1].(int)]
	}).(PacketCaptureFilterOutput)
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterResponse struct {
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalIPAddress *string `pulumi:"localIPAddress"`
	// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalPort *string `pulumi:"localPort"`
	// Protocol to be filtered on.
	Protocol *string `pulumi:"protocol"`
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemoteIPAddress *string `pulumi:"remoteIPAddress"`
	// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemotePort *string `pulumi:"remotePort"`
}

// PacketCaptureFilterResponseInput is an input type that accepts PacketCaptureFilterResponseArgs and PacketCaptureFilterResponseOutput values.
// You can construct a concrete instance of `PacketCaptureFilterResponseInput` via:
//
//          PacketCaptureFilterResponseArgs{...}
type PacketCaptureFilterResponseInput interface {
	pulumi.Input

	ToPacketCaptureFilterResponseOutput() PacketCaptureFilterResponseOutput
	ToPacketCaptureFilterResponseOutputWithContext(context.Context) PacketCaptureFilterResponseOutput
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterResponseArgs struct {
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalIPAddress pulumi.StringPtrInput `pulumi:"localIPAddress"`
	// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalPort pulumi.StringPtrInput `pulumi:"localPort"`
	// Protocol to be filtered on.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemoteIPAddress pulumi.StringPtrInput `pulumi:"remoteIPAddress"`
	// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemotePort pulumi.StringPtrInput `pulumi:"remotePort"`
}

func (PacketCaptureFilterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureFilterResponse)(nil)).Elem()
}

func (i PacketCaptureFilterResponseArgs) ToPacketCaptureFilterResponseOutput() PacketCaptureFilterResponseOutput {
	return i.ToPacketCaptureFilterResponseOutputWithContext(context.Background())
}

func (i PacketCaptureFilterResponseArgs) ToPacketCaptureFilterResponseOutputWithContext(ctx context.Context) PacketCaptureFilterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureFilterResponseOutput)
}

// PacketCaptureFilterResponseArrayInput is an input type that accepts PacketCaptureFilterResponseArray and PacketCaptureFilterResponseArrayOutput values.
// You can construct a concrete instance of `PacketCaptureFilterResponseArrayInput` via:
//
//          PacketCaptureFilterResponseArray{ PacketCaptureFilterResponseArgs{...} }
type PacketCaptureFilterResponseArrayInput interface {
	pulumi.Input

	ToPacketCaptureFilterResponseArrayOutput() PacketCaptureFilterResponseArrayOutput
	ToPacketCaptureFilterResponseArrayOutputWithContext(context.Context) PacketCaptureFilterResponseArrayOutput
}

type PacketCaptureFilterResponseArray []PacketCaptureFilterResponseInput

func (PacketCaptureFilterResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PacketCaptureFilterResponse)(nil)).Elem()
}

func (i PacketCaptureFilterResponseArray) ToPacketCaptureFilterResponseArrayOutput() PacketCaptureFilterResponseArrayOutput {
	return i.ToPacketCaptureFilterResponseArrayOutputWithContext(context.Background())
}

func (i PacketCaptureFilterResponseArray) ToPacketCaptureFilterResponseArrayOutputWithContext(ctx context.Context) PacketCaptureFilterResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureFilterResponseArrayOutput)
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterResponseOutput struct{ *pulumi.OutputState }

func (PacketCaptureFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureFilterResponse)(nil)).Elem()
}

func (o PacketCaptureFilterResponseOutput) ToPacketCaptureFilterResponseOutput() PacketCaptureFilterResponseOutput {
	return o
}

func (o PacketCaptureFilterResponseOutput) ToPacketCaptureFilterResponseOutputWithContext(ctx context.Context) PacketCaptureFilterResponseOutput {
	return o
}

// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterResponseOutput) LocalIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.LocalIPAddress }).(pulumi.StringPtrOutput)
}

// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterResponseOutput) LocalPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.LocalPort }).(pulumi.StringPtrOutput)
}

// Protocol to be filtered on.
func (o PacketCaptureFilterResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterResponseOutput) RemoteIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.RemoteIPAddress }).(pulumi.StringPtrOutput)
}

// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterResponseOutput) RemotePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.RemotePort }).(pulumi.StringPtrOutput)
}

type PacketCaptureFilterResponseArrayOutput struct{ *pulumi.OutputState }

func (PacketCaptureFilterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PacketCaptureFilterResponse)(nil)).Elem()
}

func (o PacketCaptureFilterResponseArrayOutput) ToPacketCaptureFilterResponseArrayOutput() PacketCaptureFilterResponseArrayOutput {
	return o
}

func (o PacketCaptureFilterResponseArrayOutput) ToPacketCaptureFilterResponseArrayOutputWithContext(ctx context.Context) PacketCaptureFilterResponseArrayOutput {
	return o
}

func (o PacketCaptureFilterResponseArrayOutput) Index(i pulumi.IntInput) PacketCaptureFilterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PacketCaptureFilterResponse {
		return vs[0].([]PacketCaptureFilterResponse)[vs[1].(int)]
	}).(PacketCaptureFilterResponseOutput)
}

// Parameters that define the create packet capture operation.
type PacketCaptureParameters struct {
	// Number of bytes captured per packet, the remaining bytes are truncated.
	BytesToCapturePerPacket *int                  `pulumi:"bytesToCapturePerPacket"`
	Filters                 []PacketCaptureFilter `pulumi:"filters"`
	// Describes the storage location for a packet capture session.
	StorageLocation PacketCaptureStorageLocation `pulumi:"storageLocation"`
	// The ID of the targeted resource, only VM is currently supported.
	Target string `pulumi:"target"`
	// Maximum duration of the capture session in seconds.
	TimeLimitInSeconds *int `pulumi:"timeLimitInSeconds"`
	// Maximum size of the capture output.
	TotalBytesPerSession *int `pulumi:"totalBytesPerSession"`
}

// PacketCaptureParametersInput is an input type that accepts PacketCaptureParametersArgs and PacketCaptureParametersOutput values.
// You can construct a concrete instance of `PacketCaptureParametersInput` via:
//
//          PacketCaptureParametersArgs{...}
type PacketCaptureParametersInput interface {
	pulumi.Input

	ToPacketCaptureParametersOutput() PacketCaptureParametersOutput
	ToPacketCaptureParametersOutputWithContext(context.Context) PacketCaptureParametersOutput
}

// Parameters that define the create packet capture operation.
type PacketCaptureParametersArgs struct {
	// Number of bytes captured per packet, the remaining bytes are truncated.
	BytesToCapturePerPacket pulumi.IntPtrInput            `pulumi:"bytesToCapturePerPacket"`
	Filters                 PacketCaptureFilterArrayInput `pulumi:"filters"`
	// Describes the storage location for a packet capture session.
	StorageLocation PacketCaptureStorageLocationInput `pulumi:"storageLocation"`
	// The ID of the targeted resource, only VM is currently supported.
	Target pulumi.StringInput `pulumi:"target"`
	// Maximum duration of the capture session in seconds.
	TimeLimitInSeconds pulumi.IntPtrInput `pulumi:"timeLimitInSeconds"`
	// Maximum size of the capture output.
	TotalBytesPerSession pulumi.IntPtrInput `pulumi:"totalBytesPerSession"`
}

func (PacketCaptureParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureParameters)(nil)).Elem()
}

func (i PacketCaptureParametersArgs) ToPacketCaptureParametersOutput() PacketCaptureParametersOutput {
	return i.ToPacketCaptureParametersOutputWithContext(context.Background())
}

func (i PacketCaptureParametersArgs) ToPacketCaptureParametersOutputWithContext(ctx context.Context) PacketCaptureParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureParametersOutput)
}

func (i PacketCaptureParametersArgs) ToPacketCaptureParametersPtrOutput() PacketCaptureParametersPtrOutput {
	return i.ToPacketCaptureParametersPtrOutputWithContext(context.Background())
}

func (i PacketCaptureParametersArgs) ToPacketCaptureParametersPtrOutputWithContext(ctx context.Context) PacketCaptureParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureParametersOutput).ToPacketCaptureParametersPtrOutputWithContext(ctx)
}

// PacketCaptureParametersPtrInput is an input type that accepts PacketCaptureParametersArgs, PacketCaptureParametersPtr and PacketCaptureParametersPtrOutput values.
// You can construct a concrete instance of `PacketCaptureParametersPtrInput` via:
//
//          PacketCaptureParametersArgs{...}
//
//  or:
//
//          nil
type PacketCaptureParametersPtrInput interface {
	pulumi.Input

	ToPacketCaptureParametersPtrOutput() PacketCaptureParametersPtrOutput
	ToPacketCaptureParametersPtrOutputWithContext(context.Context) PacketCaptureParametersPtrOutput
}

type packetCaptureParametersPtrType PacketCaptureParametersArgs

func PacketCaptureParametersPtr(v *PacketCaptureParametersArgs) PacketCaptureParametersPtrInput {
	return (*packetCaptureParametersPtrType)(v)
}

func (*packetCaptureParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketCaptureParameters)(nil)).Elem()
}

func (i *packetCaptureParametersPtrType) ToPacketCaptureParametersPtrOutput() PacketCaptureParametersPtrOutput {
	return i.ToPacketCaptureParametersPtrOutputWithContext(context.Background())
}

func (i *packetCaptureParametersPtrType) ToPacketCaptureParametersPtrOutputWithContext(ctx context.Context) PacketCaptureParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureParametersPtrOutput)
}

// Parameters that define the create packet capture operation.
type PacketCaptureParametersOutput struct{ *pulumi.OutputState }

func (PacketCaptureParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureParameters)(nil)).Elem()
}

func (o PacketCaptureParametersOutput) ToPacketCaptureParametersOutput() PacketCaptureParametersOutput {
	return o
}

func (o PacketCaptureParametersOutput) ToPacketCaptureParametersOutputWithContext(ctx context.Context) PacketCaptureParametersOutput {
	return o
}

func (o PacketCaptureParametersOutput) ToPacketCaptureParametersPtrOutput() PacketCaptureParametersPtrOutput {
	return o.ToPacketCaptureParametersPtrOutputWithContext(context.Background())
}

func (o PacketCaptureParametersOutput) ToPacketCaptureParametersPtrOutputWithContext(ctx context.Context) PacketCaptureParametersPtrOutput {
	return o.ApplyT(func(v PacketCaptureParameters) *PacketCaptureParameters {
		return &v
	}).(PacketCaptureParametersPtrOutput)
}

// Number of bytes captured per packet, the remaining bytes are truncated.
func (o PacketCaptureParametersOutput) BytesToCapturePerPacket() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PacketCaptureParameters) *int { return v.BytesToCapturePerPacket }).(pulumi.IntPtrOutput)
}

func (o PacketCaptureParametersOutput) Filters() PacketCaptureFilterArrayOutput {
	return o.ApplyT(func(v PacketCaptureParameters) []PacketCaptureFilter { return v.Filters }).(PacketCaptureFilterArrayOutput)
}

// Describes the storage location for a packet capture session.
func (o PacketCaptureParametersOutput) StorageLocation() PacketCaptureStorageLocationOutput {
	return o.ApplyT(func(v PacketCaptureParameters) PacketCaptureStorageLocation { return v.StorageLocation }).(PacketCaptureStorageLocationOutput)
}

// The ID of the targeted resource, only VM is currently supported.
func (o PacketCaptureParametersOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v PacketCaptureParameters) string { return v.Target }).(pulumi.StringOutput)
}

// Maximum duration of the capture session in seconds.
func (o PacketCaptureParametersOutput) TimeLimitInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PacketCaptureParameters) *int { return v.TimeLimitInSeconds }).(pulumi.IntPtrOutput)
}

// Maximum size of the capture output.
func (o PacketCaptureParametersOutput) TotalBytesPerSession() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PacketCaptureParameters) *int { return v.TotalBytesPerSession }).(pulumi.IntPtrOutput)
}

type PacketCaptureParametersPtrOutput struct{ *pulumi.OutputState }

func (PacketCaptureParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketCaptureParameters)(nil)).Elem()
}

func (o PacketCaptureParametersPtrOutput) ToPacketCaptureParametersPtrOutput() PacketCaptureParametersPtrOutput {
	return o
}

func (o PacketCaptureParametersPtrOutput) ToPacketCaptureParametersPtrOutputWithContext(ctx context.Context) PacketCaptureParametersPtrOutput {
	return o
}

func (o PacketCaptureParametersPtrOutput) Elem() PacketCaptureParametersOutput {
	return o.ApplyT(func(v *PacketCaptureParameters) PacketCaptureParameters { return *v }).(PacketCaptureParametersOutput)
}

// Number of bytes captured per packet, the remaining bytes are truncated.
func (o PacketCaptureParametersPtrOutput) BytesToCapturePerPacket() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PacketCaptureParameters) *int {
		if v == nil {
			return nil
		}
		return v.BytesToCapturePerPacket
	}).(pulumi.IntPtrOutput)
}

func (o PacketCaptureParametersPtrOutput) Filters() PacketCaptureFilterArrayOutput {
	return o.ApplyT(func(v *PacketCaptureParameters) []PacketCaptureFilter {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(PacketCaptureFilterArrayOutput)
}

// Describes the storage location for a packet capture session.
func (o PacketCaptureParametersPtrOutput) StorageLocation() PacketCaptureStorageLocationPtrOutput {
	return o.ApplyT(func(v *PacketCaptureParameters) *PacketCaptureStorageLocation {
		if v == nil {
			return nil
		}
		return &v.StorageLocation
	}).(PacketCaptureStorageLocationPtrOutput)
}

// The ID of the targeted resource, only VM is currently supported.
func (o PacketCaptureParametersPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PacketCaptureParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(pulumi.StringPtrOutput)
}

// Maximum duration of the capture session in seconds.
func (o PacketCaptureParametersPtrOutput) TimeLimitInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PacketCaptureParameters) *int {
		if v == nil {
			return nil
		}
		return v.TimeLimitInSeconds
	}).(pulumi.IntPtrOutput)
}

// Maximum size of the capture output.
func (o PacketCaptureParametersPtrOutput) TotalBytesPerSession() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PacketCaptureParameters) *int {
		if v == nil {
			return nil
		}
		return v.TotalBytesPerSession
	}).(pulumi.IntPtrOutput)
}

// Describes the properties of a packet capture session.
type PacketCaptureResultPropertiesResponse struct {
	// Number of bytes captured per packet, the remaining bytes are truncated.
	BytesToCapturePerPacket *int                          `pulumi:"bytesToCapturePerPacket"`
	Filters                 []PacketCaptureFilterResponse `pulumi:"filters"`
	// The provisioning state of the packet capture session.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Describes the storage location for a packet capture session.
	StorageLocation PacketCaptureStorageLocationResponse `pulumi:"storageLocation"`
	// The ID of the targeted resource, only VM is currently supported.
	Target string `pulumi:"target"`
	// Maximum duration of the capture session in seconds.
	TimeLimitInSeconds *int `pulumi:"timeLimitInSeconds"`
	// Maximum size of the capture output.
	TotalBytesPerSession *int `pulumi:"totalBytesPerSession"`
}

// PacketCaptureResultPropertiesResponseInput is an input type that accepts PacketCaptureResultPropertiesResponseArgs and PacketCaptureResultPropertiesResponseOutput values.
// You can construct a concrete instance of `PacketCaptureResultPropertiesResponseInput` via:
//
//          PacketCaptureResultPropertiesResponseArgs{...}
type PacketCaptureResultPropertiesResponseInput interface {
	pulumi.Input

	ToPacketCaptureResultPropertiesResponseOutput() PacketCaptureResultPropertiesResponseOutput
	ToPacketCaptureResultPropertiesResponseOutputWithContext(context.Context) PacketCaptureResultPropertiesResponseOutput
}

// Describes the properties of a packet capture session.
type PacketCaptureResultPropertiesResponseArgs struct {
	// Number of bytes captured per packet, the remaining bytes are truncated.
	BytesToCapturePerPacket pulumi.IntPtrInput                    `pulumi:"bytesToCapturePerPacket"`
	Filters                 PacketCaptureFilterResponseArrayInput `pulumi:"filters"`
	// The provisioning state of the packet capture session.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Describes the storage location for a packet capture session.
	StorageLocation PacketCaptureStorageLocationResponseInput `pulumi:"storageLocation"`
	// The ID of the targeted resource, only VM is currently supported.
	Target pulumi.StringInput `pulumi:"target"`
	// Maximum duration of the capture session in seconds.
	TimeLimitInSeconds pulumi.IntPtrInput `pulumi:"timeLimitInSeconds"`
	// Maximum size of the capture output.
	TotalBytesPerSession pulumi.IntPtrInput `pulumi:"totalBytesPerSession"`
}

func (PacketCaptureResultPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureResultPropertiesResponse)(nil)).Elem()
}

func (i PacketCaptureResultPropertiesResponseArgs) ToPacketCaptureResultPropertiesResponseOutput() PacketCaptureResultPropertiesResponseOutput {
	return i.ToPacketCaptureResultPropertiesResponseOutputWithContext(context.Background())
}

func (i PacketCaptureResultPropertiesResponseArgs) ToPacketCaptureResultPropertiesResponseOutputWithContext(ctx context.Context) PacketCaptureResultPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureResultPropertiesResponseOutput)
}

func (i PacketCaptureResultPropertiesResponseArgs) ToPacketCaptureResultPropertiesResponsePtrOutput() PacketCaptureResultPropertiesResponsePtrOutput {
	return i.ToPacketCaptureResultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i PacketCaptureResultPropertiesResponseArgs) ToPacketCaptureResultPropertiesResponsePtrOutputWithContext(ctx context.Context) PacketCaptureResultPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureResultPropertiesResponseOutput).ToPacketCaptureResultPropertiesResponsePtrOutputWithContext(ctx)
}

// PacketCaptureResultPropertiesResponsePtrInput is an input type that accepts PacketCaptureResultPropertiesResponseArgs, PacketCaptureResultPropertiesResponsePtr and PacketCaptureResultPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `PacketCaptureResultPropertiesResponsePtrInput` via:
//
//          PacketCaptureResultPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type PacketCaptureResultPropertiesResponsePtrInput interface {
	pulumi.Input

	ToPacketCaptureResultPropertiesResponsePtrOutput() PacketCaptureResultPropertiesResponsePtrOutput
	ToPacketCaptureResultPropertiesResponsePtrOutputWithContext(context.Context) PacketCaptureResultPropertiesResponsePtrOutput
}

type packetCaptureResultPropertiesResponsePtrType PacketCaptureResultPropertiesResponseArgs

func PacketCaptureResultPropertiesResponsePtr(v *PacketCaptureResultPropertiesResponseArgs) PacketCaptureResultPropertiesResponsePtrInput {
	return (*packetCaptureResultPropertiesResponsePtrType)(v)
}

func (*packetCaptureResultPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketCaptureResultPropertiesResponse)(nil)).Elem()
}

func (i *packetCaptureResultPropertiesResponsePtrType) ToPacketCaptureResultPropertiesResponsePtrOutput() PacketCaptureResultPropertiesResponsePtrOutput {
	return i.ToPacketCaptureResultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *packetCaptureResultPropertiesResponsePtrType) ToPacketCaptureResultPropertiesResponsePtrOutputWithContext(ctx context.Context) PacketCaptureResultPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureResultPropertiesResponsePtrOutput)
}

// Describes the properties of a packet capture session.
type PacketCaptureResultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PacketCaptureResultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureResultPropertiesResponse)(nil)).Elem()
}

func (o PacketCaptureResultPropertiesResponseOutput) ToPacketCaptureResultPropertiesResponseOutput() PacketCaptureResultPropertiesResponseOutput {
	return o
}

func (o PacketCaptureResultPropertiesResponseOutput) ToPacketCaptureResultPropertiesResponseOutputWithContext(ctx context.Context) PacketCaptureResultPropertiesResponseOutput {
	return o
}

func (o PacketCaptureResultPropertiesResponseOutput) ToPacketCaptureResultPropertiesResponsePtrOutput() PacketCaptureResultPropertiesResponsePtrOutput {
	return o.ToPacketCaptureResultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o PacketCaptureResultPropertiesResponseOutput) ToPacketCaptureResultPropertiesResponsePtrOutputWithContext(ctx context.Context) PacketCaptureResultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v PacketCaptureResultPropertiesResponse) *PacketCaptureResultPropertiesResponse {
		return &v
	}).(PacketCaptureResultPropertiesResponsePtrOutput)
}

// Number of bytes captured per packet, the remaining bytes are truncated.
func (o PacketCaptureResultPropertiesResponseOutput) BytesToCapturePerPacket() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PacketCaptureResultPropertiesResponse) *int { return v.BytesToCapturePerPacket }).(pulumi.IntPtrOutput)
}

func (o PacketCaptureResultPropertiesResponseOutput) Filters() PacketCaptureFilterResponseArrayOutput {
	return o.ApplyT(func(v PacketCaptureResultPropertiesResponse) []PacketCaptureFilterResponse { return v.Filters }).(PacketCaptureFilterResponseArrayOutput)
}

// The provisioning state of the packet capture session.
func (o PacketCaptureResultPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureResultPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Describes the storage location for a packet capture session.
func (o PacketCaptureResultPropertiesResponseOutput) StorageLocation() PacketCaptureStorageLocationResponseOutput {
	return o.ApplyT(func(v PacketCaptureResultPropertiesResponse) PacketCaptureStorageLocationResponse {
		return v.StorageLocation
	}).(PacketCaptureStorageLocationResponseOutput)
}

// The ID of the targeted resource, only VM is currently supported.
func (o PacketCaptureResultPropertiesResponseOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v PacketCaptureResultPropertiesResponse) string { return v.Target }).(pulumi.StringOutput)
}

// Maximum duration of the capture session in seconds.
func (o PacketCaptureResultPropertiesResponseOutput) TimeLimitInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PacketCaptureResultPropertiesResponse) *int { return v.TimeLimitInSeconds }).(pulumi.IntPtrOutput)
}

// Maximum size of the capture output.
func (o PacketCaptureResultPropertiesResponseOutput) TotalBytesPerSession() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PacketCaptureResultPropertiesResponse) *int { return v.TotalBytesPerSession }).(pulumi.IntPtrOutput)
}

type PacketCaptureResultPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PacketCaptureResultPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketCaptureResultPropertiesResponse)(nil)).Elem()
}

func (o PacketCaptureResultPropertiesResponsePtrOutput) ToPacketCaptureResultPropertiesResponsePtrOutput() PacketCaptureResultPropertiesResponsePtrOutput {
	return o
}

func (o PacketCaptureResultPropertiesResponsePtrOutput) ToPacketCaptureResultPropertiesResponsePtrOutputWithContext(ctx context.Context) PacketCaptureResultPropertiesResponsePtrOutput {
	return o
}

func (o PacketCaptureResultPropertiesResponsePtrOutput) Elem() PacketCaptureResultPropertiesResponseOutput {
	return o.ApplyT(func(v *PacketCaptureResultPropertiesResponse) PacketCaptureResultPropertiesResponse { return *v }).(PacketCaptureResultPropertiesResponseOutput)
}

// Number of bytes captured per packet, the remaining bytes are truncated.
func (o PacketCaptureResultPropertiesResponsePtrOutput) BytesToCapturePerPacket() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PacketCaptureResultPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.BytesToCapturePerPacket
	}).(pulumi.IntPtrOutput)
}

func (o PacketCaptureResultPropertiesResponsePtrOutput) Filters() PacketCaptureFilterResponseArrayOutput {
	return o.ApplyT(func(v *PacketCaptureResultPropertiesResponse) []PacketCaptureFilterResponse {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(PacketCaptureFilterResponseArrayOutput)
}

// The provisioning state of the packet capture session.
func (o PacketCaptureResultPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PacketCaptureResultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Describes the storage location for a packet capture session.
func (o PacketCaptureResultPropertiesResponsePtrOutput) StorageLocation() PacketCaptureStorageLocationResponsePtrOutput {
	return o.ApplyT(func(v *PacketCaptureResultPropertiesResponse) *PacketCaptureStorageLocationResponse {
		if v == nil {
			return nil
		}
		return &v.StorageLocation
	}).(PacketCaptureStorageLocationResponsePtrOutput)
}

// The ID of the targeted resource, only VM is currently supported.
func (o PacketCaptureResultPropertiesResponsePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PacketCaptureResultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(pulumi.StringPtrOutput)
}

// Maximum duration of the capture session in seconds.
func (o PacketCaptureResultPropertiesResponsePtrOutput) TimeLimitInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PacketCaptureResultPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.TimeLimitInSeconds
	}).(pulumi.IntPtrOutput)
}

// Maximum size of the capture output.
func (o PacketCaptureResultPropertiesResponsePtrOutput) TotalBytesPerSession() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PacketCaptureResultPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.TotalBytesPerSession
	}).(pulumi.IntPtrOutput)
}

// Describes the storage location for a packet capture session.
type PacketCaptureStorageLocation struct {
	// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
	FilePath *string `pulumi:"filePath"`
	// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
	StorageId *string `pulumi:"storageId"`
	// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
	StoragePath *string `pulumi:"storagePath"`
}

// PacketCaptureStorageLocationInput is an input type that accepts PacketCaptureStorageLocationArgs and PacketCaptureStorageLocationOutput values.
// You can construct a concrete instance of `PacketCaptureStorageLocationInput` via:
//
//          PacketCaptureStorageLocationArgs{...}
type PacketCaptureStorageLocationInput interface {
	pulumi.Input

	ToPacketCaptureStorageLocationOutput() PacketCaptureStorageLocationOutput
	ToPacketCaptureStorageLocationOutputWithContext(context.Context) PacketCaptureStorageLocationOutput
}

// Describes the storage location for a packet capture session.
type PacketCaptureStorageLocationArgs struct {
	// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
	StorageId pulumi.StringPtrInput `pulumi:"storageId"`
	// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
	StoragePath pulumi.StringPtrInput `pulumi:"storagePath"`
}

func (PacketCaptureStorageLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureStorageLocation)(nil)).Elem()
}

func (i PacketCaptureStorageLocationArgs) ToPacketCaptureStorageLocationOutput() PacketCaptureStorageLocationOutput {
	return i.ToPacketCaptureStorageLocationOutputWithContext(context.Background())
}

func (i PacketCaptureStorageLocationArgs) ToPacketCaptureStorageLocationOutputWithContext(ctx context.Context) PacketCaptureStorageLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureStorageLocationOutput)
}

func (i PacketCaptureStorageLocationArgs) ToPacketCaptureStorageLocationPtrOutput() PacketCaptureStorageLocationPtrOutput {
	return i.ToPacketCaptureStorageLocationPtrOutputWithContext(context.Background())
}

func (i PacketCaptureStorageLocationArgs) ToPacketCaptureStorageLocationPtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureStorageLocationOutput).ToPacketCaptureStorageLocationPtrOutputWithContext(ctx)
}

// PacketCaptureStorageLocationPtrInput is an input type that accepts PacketCaptureStorageLocationArgs, PacketCaptureStorageLocationPtr and PacketCaptureStorageLocationPtrOutput values.
// You can construct a concrete instance of `PacketCaptureStorageLocationPtrInput` via:
//
//          PacketCaptureStorageLocationArgs{...}
//
//  or:
//
//          nil
type PacketCaptureStorageLocationPtrInput interface {
	pulumi.Input

	ToPacketCaptureStorageLocationPtrOutput() PacketCaptureStorageLocationPtrOutput
	ToPacketCaptureStorageLocationPtrOutputWithContext(context.Context) PacketCaptureStorageLocationPtrOutput
}

type packetCaptureStorageLocationPtrType PacketCaptureStorageLocationArgs

func PacketCaptureStorageLocationPtr(v *PacketCaptureStorageLocationArgs) PacketCaptureStorageLocationPtrInput {
	return (*packetCaptureStorageLocationPtrType)(v)
}

func (*packetCaptureStorageLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketCaptureStorageLocation)(nil)).Elem()
}

func (i *packetCaptureStorageLocationPtrType) ToPacketCaptureStorageLocationPtrOutput() PacketCaptureStorageLocationPtrOutput {
	return i.ToPacketCaptureStorageLocationPtrOutputWithContext(context.Background())
}

func (i *packetCaptureStorageLocationPtrType) ToPacketCaptureStorageLocationPtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureStorageLocationPtrOutput)
}

// Describes the storage location for a packet capture session.
type PacketCaptureStorageLocationOutput struct{ *pulumi.OutputState }

func (PacketCaptureStorageLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureStorageLocation)(nil)).Elem()
}

func (o PacketCaptureStorageLocationOutput) ToPacketCaptureStorageLocationOutput() PacketCaptureStorageLocationOutput {
	return o
}

func (o PacketCaptureStorageLocationOutput) ToPacketCaptureStorageLocationOutputWithContext(ctx context.Context) PacketCaptureStorageLocationOutput {
	return o
}

func (o PacketCaptureStorageLocationOutput) ToPacketCaptureStorageLocationPtrOutput() PacketCaptureStorageLocationPtrOutput {
	return o.ToPacketCaptureStorageLocationPtrOutputWithContext(context.Background())
}

func (o PacketCaptureStorageLocationOutput) ToPacketCaptureStorageLocationPtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocation) *PacketCaptureStorageLocation {
		return &v
	}).(PacketCaptureStorageLocationPtrOutput)
}

// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
func (o PacketCaptureStorageLocationOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocation) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
func (o PacketCaptureStorageLocationOutput) StorageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocation) *string { return v.StorageId }).(pulumi.StringPtrOutput)
}

// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
func (o PacketCaptureStorageLocationOutput) StoragePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocation) *string { return v.StoragePath }).(pulumi.StringPtrOutput)
}

type PacketCaptureStorageLocationPtrOutput struct{ *pulumi.OutputState }

func (PacketCaptureStorageLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketCaptureStorageLocation)(nil)).Elem()
}

func (o PacketCaptureStorageLocationPtrOutput) ToPacketCaptureStorageLocationPtrOutput() PacketCaptureStorageLocationPtrOutput {
	return o
}

func (o PacketCaptureStorageLocationPtrOutput) ToPacketCaptureStorageLocationPtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationPtrOutput {
	return o
}

func (o PacketCaptureStorageLocationPtrOutput) Elem() PacketCaptureStorageLocationOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocation) PacketCaptureStorageLocation { return *v }).(PacketCaptureStorageLocationOutput)
}

// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
func (o PacketCaptureStorageLocationPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocation) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
func (o PacketCaptureStorageLocationPtrOutput) StorageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocation) *string {
		if v == nil {
			return nil
		}
		return v.StorageId
	}).(pulumi.StringPtrOutput)
}

// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
func (o PacketCaptureStorageLocationPtrOutput) StoragePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocation) *string {
		if v == nil {
			return nil
		}
		return v.StoragePath
	}).(pulumi.StringPtrOutput)
}

// Describes the storage location for a packet capture session.
type PacketCaptureStorageLocationResponse struct {
	// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
	FilePath *string `pulumi:"filePath"`
	// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
	StorageId *string `pulumi:"storageId"`
	// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
	StoragePath *string `pulumi:"storagePath"`
}

// PacketCaptureStorageLocationResponseInput is an input type that accepts PacketCaptureStorageLocationResponseArgs and PacketCaptureStorageLocationResponseOutput values.
// You can construct a concrete instance of `PacketCaptureStorageLocationResponseInput` via:
//
//          PacketCaptureStorageLocationResponseArgs{...}
type PacketCaptureStorageLocationResponseInput interface {
	pulumi.Input

	ToPacketCaptureStorageLocationResponseOutput() PacketCaptureStorageLocationResponseOutput
	ToPacketCaptureStorageLocationResponseOutputWithContext(context.Context) PacketCaptureStorageLocationResponseOutput
}

// Describes the storage location for a packet capture session.
type PacketCaptureStorageLocationResponseArgs struct {
	// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
	StorageId pulumi.StringPtrInput `pulumi:"storageId"`
	// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
	StoragePath pulumi.StringPtrInput `pulumi:"storagePath"`
}

func (PacketCaptureStorageLocationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureStorageLocationResponse)(nil)).Elem()
}

func (i PacketCaptureStorageLocationResponseArgs) ToPacketCaptureStorageLocationResponseOutput() PacketCaptureStorageLocationResponseOutput {
	return i.ToPacketCaptureStorageLocationResponseOutputWithContext(context.Background())
}

func (i PacketCaptureStorageLocationResponseArgs) ToPacketCaptureStorageLocationResponseOutputWithContext(ctx context.Context) PacketCaptureStorageLocationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureStorageLocationResponseOutput)
}

func (i PacketCaptureStorageLocationResponseArgs) ToPacketCaptureStorageLocationResponsePtrOutput() PacketCaptureStorageLocationResponsePtrOutput {
	return i.ToPacketCaptureStorageLocationResponsePtrOutputWithContext(context.Background())
}

func (i PacketCaptureStorageLocationResponseArgs) ToPacketCaptureStorageLocationResponsePtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureStorageLocationResponseOutput).ToPacketCaptureStorageLocationResponsePtrOutputWithContext(ctx)
}

// PacketCaptureStorageLocationResponsePtrInput is an input type that accepts PacketCaptureStorageLocationResponseArgs, PacketCaptureStorageLocationResponsePtr and PacketCaptureStorageLocationResponsePtrOutput values.
// You can construct a concrete instance of `PacketCaptureStorageLocationResponsePtrInput` via:
//
//          PacketCaptureStorageLocationResponseArgs{...}
//
//  or:
//
//          nil
type PacketCaptureStorageLocationResponsePtrInput interface {
	pulumi.Input

	ToPacketCaptureStorageLocationResponsePtrOutput() PacketCaptureStorageLocationResponsePtrOutput
	ToPacketCaptureStorageLocationResponsePtrOutputWithContext(context.Context) PacketCaptureStorageLocationResponsePtrOutput
}

type packetCaptureStorageLocationResponsePtrType PacketCaptureStorageLocationResponseArgs

func PacketCaptureStorageLocationResponsePtr(v *PacketCaptureStorageLocationResponseArgs) PacketCaptureStorageLocationResponsePtrInput {
	return (*packetCaptureStorageLocationResponsePtrType)(v)
}

func (*packetCaptureStorageLocationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketCaptureStorageLocationResponse)(nil)).Elem()
}

func (i *packetCaptureStorageLocationResponsePtrType) ToPacketCaptureStorageLocationResponsePtrOutput() PacketCaptureStorageLocationResponsePtrOutput {
	return i.ToPacketCaptureStorageLocationResponsePtrOutputWithContext(context.Background())
}

func (i *packetCaptureStorageLocationResponsePtrType) ToPacketCaptureStorageLocationResponsePtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureStorageLocationResponsePtrOutput)
}

// Describes the storage location for a packet capture session.
type PacketCaptureStorageLocationResponseOutput struct{ *pulumi.OutputState }

func (PacketCaptureStorageLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureStorageLocationResponse)(nil)).Elem()
}

func (o PacketCaptureStorageLocationResponseOutput) ToPacketCaptureStorageLocationResponseOutput() PacketCaptureStorageLocationResponseOutput {
	return o
}

func (o PacketCaptureStorageLocationResponseOutput) ToPacketCaptureStorageLocationResponseOutputWithContext(ctx context.Context) PacketCaptureStorageLocationResponseOutput {
	return o
}

func (o PacketCaptureStorageLocationResponseOutput) ToPacketCaptureStorageLocationResponsePtrOutput() PacketCaptureStorageLocationResponsePtrOutput {
	return o.ToPacketCaptureStorageLocationResponsePtrOutputWithContext(context.Background())
}

func (o PacketCaptureStorageLocationResponseOutput) ToPacketCaptureStorageLocationResponsePtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationResponsePtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocationResponse) *PacketCaptureStorageLocationResponse {
		return &v
	}).(PacketCaptureStorageLocationResponsePtrOutput)
}

// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
func (o PacketCaptureStorageLocationResponseOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocationResponse) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
func (o PacketCaptureStorageLocationResponseOutput) StorageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocationResponse) *string { return v.StorageId }).(pulumi.StringPtrOutput)
}

// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
func (o PacketCaptureStorageLocationResponseOutput) StoragePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocationResponse) *string { return v.StoragePath }).(pulumi.StringPtrOutput)
}

type PacketCaptureStorageLocationResponsePtrOutput struct{ *pulumi.OutputState }

func (PacketCaptureStorageLocationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketCaptureStorageLocationResponse)(nil)).Elem()
}

func (o PacketCaptureStorageLocationResponsePtrOutput) ToPacketCaptureStorageLocationResponsePtrOutput() PacketCaptureStorageLocationResponsePtrOutput {
	return o
}

func (o PacketCaptureStorageLocationResponsePtrOutput) ToPacketCaptureStorageLocationResponsePtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationResponsePtrOutput {
	return o
}

func (o PacketCaptureStorageLocationResponsePtrOutput) Elem() PacketCaptureStorageLocationResponseOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocationResponse) PacketCaptureStorageLocationResponse { return *v }).(PacketCaptureStorageLocationResponseOutput)
}

// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
func (o PacketCaptureStorageLocationResponsePtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
func (o PacketCaptureStorageLocationResponsePtrOutput) StorageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageId
	}).(pulumi.StringPtrOutput)
}

// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
func (o PacketCaptureStorageLocationResponsePtrOutput) StoragePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.StoragePath
	}).(pulumi.StringPtrOutput)
}

// A load balancer probe.
type Probe struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of load balancer probe.
	Properties *ProbePropertiesFormat `pulumi:"properties"`
}

// ProbeInput is an input type that accepts ProbeArgs and ProbeOutput values.
// You can construct a concrete instance of `ProbeInput` via:
//
//          ProbeArgs{...}
type ProbeInput interface {
	pulumi.Input

	ToProbeOutput() ProbeOutput
	ToProbeOutputWithContext(context.Context) ProbeOutput
}

// A load balancer probe.
type ProbeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of load balancer probe.
	Properties ProbePropertiesFormatPtrInput `pulumi:"properties"`
}

func (ProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Probe)(nil)).Elem()
}

func (i ProbeArgs) ToProbeOutput() ProbeOutput {
	return i.ToProbeOutputWithContext(context.Background())
}

func (i ProbeArgs) ToProbeOutputWithContext(ctx context.Context) ProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeOutput)
}

// ProbeArrayInput is an input type that accepts ProbeArray and ProbeArrayOutput values.
// You can construct a concrete instance of `ProbeArrayInput` via:
//
//          ProbeArray{ ProbeArgs{...} }
type ProbeArrayInput interface {
	pulumi.Input

	ToProbeArrayOutput() ProbeArrayOutput
	ToProbeArrayOutputWithContext(context.Context) ProbeArrayOutput
}

type ProbeArray []ProbeInput

func (ProbeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Probe)(nil)).Elem()
}

func (i ProbeArray) ToProbeArrayOutput() ProbeArrayOutput {
	return i.ToProbeArrayOutputWithContext(context.Background())
}

func (i ProbeArray) ToProbeArrayOutputWithContext(ctx context.Context) ProbeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeArrayOutput)
}

// A load balancer probe.
type ProbeOutput struct{ *pulumi.OutputState }

func (ProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Probe)(nil)).Elem()
}

func (o ProbeOutput) ToProbeOutput() ProbeOutput {
	return o
}

func (o ProbeOutput) ToProbeOutputWithContext(ctx context.Context) ProbeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ProbeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Probe) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ProbeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Probe) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ProbeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Probe) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of load balancer probe.
func (o ProbeOutput) Properties() ProbePropertiesFormatPtrOutput {
	return o.ApplyT(func(v Probe) *ProbePropertiesFormat { return v.Properties }).(ProbePropertiesFormatPtrOutput)
}

type ProbeArrayOutput struct{ *pulumi.OutputState }

func (ProbeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Probe)(nil)).Elem()
}

func (o ProbeArrayOutput) ToProbeArrayOutput() ProbeArrayOutput {
	return o
}

func (o ProbeArrayOutput) ToProbeArrayOutputWithContext(ctx context.Context) ProbeArrayOutput {
	return o
}

func (o ProbeArrayOutput) Index(i pulumi.IntInput) ProbeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Probe {
		return vs[0].([]Probe)[vs[1].(int)]
	}).(ProbeOutput)
}

// Load balancer probe resource.
type ProbePropertiesFormat struct {
	// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
	NumberOfProbes *int `pulumi:"numberOfProbes"`
	// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
	Port int `pulumi:"port"`
	// The protocol of the end point. Possible values are: 'Http', 'Tcp', or 'Https'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
	RequestPath *string `pulumi:"requestPath"`
}

// ProbePropertiesFormatInput is an input type that accepts ProbePropertiesFormatArgs and ProbePropertiesFormatOutput values.
// You can construct a concrete instance of `ProbePropertiesFormatInput` via:
//
//          ProbePropertiesFormatArgs{...}
type ProbePropertiesFormatInput interface {
	pulumi.Input

	ToProbePropertiesFormatOutput() ProbePropertiesFormatOutput
	ToProbePropertiesFormatOutputWithContext(context.Context) ProbePropertiesFormatOutput
}

// Load balancer probe resource.
type ProbePropertiesFormatArgs struct {
	// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
	NumberOfProbes pulumi.IntPtrInput `pulumi:"numberOfProbes"`
	// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol of the end point. Possible values are: 'Http', 'Tcp', or 'Https'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
	RequestPath pulumi.StringPtrInput `pulumi:"requestPath"`
}

func (ProbePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbePropertiesFormat)(nil)).Elem()
}

func (i ProbePropertiesFormatArgs) ToProbePropertiesFormatOutput() ProbePropertiesFormatOutput {
	return i.ToProbePropertiesFormatOutputWithContext(context.Background())
}

func (i ProbePropertiesFormatArgs) ToProbePropertiesFormatOutputWithContext(ctx context.Context) ProbePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbePropertiesFormatOutput)
}

func (i ProbePropertiesFormatArgs) ToProbePropertiesFormatPtrOutput() ProbePropertiesFormatPtrOutput {
	return i.ToProbePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ProbePropertiesFormatArgs) ToProbePropertiesFormatPtrOutputWithContext(ctx context.Context) ProbePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbePropertiesFormatOutput).ToProbePropertiesFormatPtrOutputWithContext(ctx)
}

// ProbePropertiesFormatPtrInput is an input type that accepts ProbePropertiesFormatArgs, ProbePropertiesFormatPtr and ProbePropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ProbePropertiesFormatPtrInput` via:
//
//          ProbePropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ProbePropertiesFormatPtrInput interface {
	pulumi.Input

	ToProbePropertiesFormatPtrOutput() ProbePropertiesFormatPtrOutput
	ToProbePropertiesFormatPtrOutputWithContext(context.Context) ProbePropertiesFormatPtrOutput
}

type probePropertiesFormatPtrType ProbePropertiesFormatArgs

func ProbePropertiesFormatPtr(v *ProbePropertiesFormatArgs) ProbePropertiesFormatPtrInput {
	return (*probePropertiesFormatPtrType)(v)
}

func (*probePropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProbePropertiesFormat)(nil)).Elem()
}

func (i *probePropertiesFormatPtrType) ToProbePropertiesFormatPtrOutput() ProbePropertiesFormatPtrOutput {
	return i.ToProbePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *probePropertiesFormatPtrType) ToProbePropertiesFormatPtrOutputWithContext(ctx context.Context) ProbePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbePropertiesFormatPtrOutput)
}

// Load balancer probe resource.
type ProbePropertiesFormatOutput struct{ *pulumi.OutputState }

func (ProbePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbePropertiesFormat)(nil)).Elem()
}

func (o ProbePropertiesFormatOutput) ToProbePropertiesFormatOutput() ProbePropertiesFormatOutput {
	return o
}

func (o ProbePropertiesFormatOutput) ToProbePropertiesFormatOutputWithContext(ctx context.Context) ProbePropertiesFormatOutput {
	return o
}

func (o ProbePropertiesFormatOutput) ToProbePropertiesFormatPtrOutput() ProbePropertiesFormatPtrOutput {
	return o.ToProbePropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ProbePropertiesFormatOutput) ToProbePropertiesFormatPtrOutputWithContext(ctx context.Context) ProbePropertiesFormatPtrOutput {
	return o.ApplyT(func(v ProbePropertiesFormat) *ProbePropertiesFormat {
		return &v
	}).(ProbePropertiesFormatPtrOutput)
}

// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
func (o ProbePropertiesFormatOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbePropertiesFormat) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
func (o ProbePropertiesFormatOutput) NumberOfProbes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbePropertiesFormat) *int { return v.NumberOfProbes }).(pulumi.IntPtrOutput)
}

// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
func (o ProbePropertiesFormatOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ProbePropertiesFormat) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol of the end point. Possible values are: 'Http', 'Tcp', or 'Https'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
func (o ProbePropertiesFormatOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ProbePropertiesFormat) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ProbePropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbePropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
func (o ProbePropertiesFormatOutput) RequestPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbePropertiesFormat) *string { return v.RequestPath }).(pulumi.StringPtrOutput)
}

type ProbePropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ProbePropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProbePropertiesFormat)(nil)).Elem()
}

func (o ProbePropertiesFormatPtrOutput) ToProbePropertiesFormatPtrOutput() ProbePropertiesFormatPtrOutput {
	return o
}

func (o ProbePropertiesFormatPtrOutput) ToProbePropertiesFormatPtrOutputWithContext(ctx context.Context) ProbePropertiesFormatPtrOutput {
	return o
}

func (o ProbePropertiesFormatPtrOutput) Elem() ProbePropertiesFormatOutput {
	return o.ApplyT(func(v *ProbePropertiesFormat) ProbePropertiesFormat { return *v }).(ProbePropertiesFormatOutput)
}

// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
func (o ProbePropertiesFormatPtrOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProbePropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.IntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
func (o ProbePropertiesFormatPtrOutput) NumberOfProbes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProbePropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfProbes
	}).(pulumi.IntPtrOutput)
}

// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
func (o ProbePropertiesFormatPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProbePropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The protocol of the end point. Possible values are: 'Http', 'Tcp', or 'Https'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
func (o ProbePropertiesFormatPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProbePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ProbePropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProbePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
func (o ProbePropertiesFormatPtrOutput) RequestPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProbePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.RequestPath
	}).(pulumi.StringPtrOutput)
}

// Load balancer probe resource.
type ProbePropertiesFormatResponse struct {
	// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// The load balancer rules that use this probe.
	LoadBalancingRules []SubResourceResponse `pulumi:"loadBalancingRules"`
	// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
	NumberOfProbes *int `pulumi:"numberOfProbes"`
	// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
	Port int `pulumi:"port"`
	// The protocol of the end point. Possible values are: 'Http', 'Tcp', or 'Https'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
	RequestPath *string `pulumi:"requestPath"`
}

// ProbePropertiesFormatResponseInput is an input type that accepts ProbePropertiesFormatResponseArgs and ProbePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ProbePropertiesFormatResponseInput` via:
//
//          ProbePropertiesFormatResponseArgs{...}
type ProbePropertiesFormatResponseInput interface {
	pulumi.Input

	ToProbePropertiesFormatResponseOutput() ProbePropertiesFormatResponseOutput
	ToProbePropertiesFormatResponseOutputWithContext(context.Context) ProbePropertiesFormatResponseOutput
}

// Load balancer probe resource.
type ProbePropertiesFormatResponseArgs struct {
	// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// The load balancer rules that use this probe.
	LoadBalancingRules SubResourceResponseArrayInput `pulumi:"loadBalancingRules"`
	// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
	NumberOfProbes pulumi.IntPtrInput `pulumi:"numberOfProbes"`
	// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol of the end point. Possible values are: 'Http', 'Tcp', or 'Https'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
	RequestPath pulumi.StringPtrInput `pulumi:"requestPath"`
}

func (ProbePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbePropertiesFormatResponse)(nil)).Elem()
}

func (i ProbePropertiesFormatResponseArgs) ToProbePropertiesFormatResponseOutput() ProbePropertiesFormatResponseOutput {
	return i.ToProbePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ProbePropertiesFormatResponseArgs) ToProbePropertiesFormatResponseOutputWithContext(ctx context.Context) ProbePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbePropertiesFormatResponseOutput)
}

func (i ProbePropertiesFormatResponseArgs) ToProbePropertiesFormatResponsePtrOutput() ProbePropertiesFormatResponsePtrOutput {
	return i.ToProbePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ProbePropertiesFormatResponseArgs) ToProbePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ProbePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbePropertiesFormatResponseOutput).ToProbePropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ProbePropertiesFormatResponsePtrInput is an input type that accepts ProbePropertiesFormatResponseArgs, ProbePropertiesFormatResponsePtr and ProbePropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ProbePropertiesFormatResponsePtrInput` via:
//
//          ProbePropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ProbePropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToProbePropertiesFormatResponsePtrOutput() ProbePropertiesFormatResponsePtrOutput
	ToProbePropertiesFormatResponsePtrOutputWithContext(context.Context) ProbePropertiesFormatResponsePtrOutput
}

type probePropertiesFormatResponsePtrType ProbePropertiesFormatResponseArgs

func ProbePropertiesFormatResponsePtr(v *ProbePropertiesFormatResponseArgs) ProbePropertiesFormatResponsePtrInput {
	return (*probePropertiesFormatResponsePtrType)(v)
}

func (*probePropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProbePropertiesFormatResponse)(nil)).Elem()
}

func (i *probePropertiesFormatResponsePtrType) ToProbePropertiesFormatResponsePtrOutput() ProbePropertiesFormatResponsePtrOutput {
	return i.ToProbePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *probePropertiesFormatResponsePtrType) ToProbePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ProbePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbePropertiesFormatResponsePtrOutput)
}

// Load balancer probe resource.
type ProbePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ProbePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbePropertiesFormatResponse)(nil)).Elem()
}

func (o ProbePropertiesFormatResponseOutput) ToProbePropertiesFormatResponseOutput() ProbePropertiesFormatResponseOutput {
	return o
}

func (o ProbePropertiesFormatResponseOutput) ToProbePropertiesFormatResponseOutputWithContext(ctx context.Context) ProbePropertiesFormatResponseOutput {
	return o
}

func (o ProbePropertiesFormatResponseOutput) ToProbePropertiesFormatResponsePtrOutput() ProbePropertiesFormatResponsePtrOutput {
	return o.ToProbePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ProbePropertiesFormatResponseOutput) ToProbePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ProbePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ProbePropertiesFormatResponse) *ProbePropertiesFormatResponse {
		return &v
	}).(ProbePropertiesFormatResponsePtrOutput)
}

// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
func (o ProbePropertiesFormatResponseOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbePropertiesFormatResponse) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The load balancer rules that use this probe.
func (o ProbePropertiesFormatResponseOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ProbePropertiesFormatResponse) []SubResourceResponse { return v.LoadBalancingRules }).(SubResourceResponseArrayOutput)
}

// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
func (o ProbePropertiesFormatResponseOutput) NumberOfProbes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbePropertiesFormatResponse) *int { return v.NumberOfProbes }).(pulumi.IntPtrOutput)
}

// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
func (o ProbePropertiesFormatResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ProbePropertiesFormatResponse) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol of the end point. Possible values are: 'Http', 'Tcp', or 'Https'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
func (o ProbePropertiesFormatResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ProbePropertiesFormatResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ProbePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbePropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
func (o ProbePropertiesFormatResponseOutput) RequestPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbePropertiesFormatResponse) *string { return v.RequestPath }).(pulumi.StringPtrOutput)
}

type ProbePropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ProbePropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProbePropertiesFormatResponse)(nil)).Elem()
}

func (o ProbePropertiesFormatResponsePtrOutput) ToProbePropertiesFormatResponsePtrOutput() ProbePropertiesFormatResponsePtrOutput {
	return o
}

func (o ProbePropertiesFormatResponsePtrOutput) ToProbePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ProbePropertiesFormatResponsePtrOutput {
	return o
}

func (o ProbePropertiesFormatResponsePtrOutput) Elem() ProbePropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ProbePropertiesFormatResponse) ProbePropertiesFormatResponse { return *v }).(ProbePropertiesFormatResponseOutput)
}

// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
func (o ProbePropertiesFormatResponsePtrOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProbePropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.IntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The load balancer rules that use this probe.
func (o ProbePropertiesFormatResponsePtrOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *ProbePropertiesFormatResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancingRules
	}).(SubResourceResponseArrayOutput)
}

// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
func (o ProbePropertiesFormatResponsePtrOutput) NumberOfProbes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProbePropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfProbes
	}).(pulumi.IntPtrOutput)
}

// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
func (o ProbePropertiesFormatResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProbePropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The protocol of the end point. Possible values are: 'Http', 'Tcp', or 'Https'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
func (o ProbePropertiesFormatResponsePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProbePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ProbePropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProbePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
func (o ProbePropertiesFormatResponsePtrOutput) RequestPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProbePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.RequestPath
	}).(pulumi.StringPtrOutput)
}

// A load balancer probe.
type ProbeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of load balancer probe.
	Properties *ProbePropertiesFormatResponse `pulumi:"properties"`
}

// ProbeResponseInput is an input type that accepts ProbeResponseArgs and ProbeResponseOutput values.
// You can construct a concrete instance of `ProbeResponseInput` via:
//
//          ProbeResponseArgs{...}
type ProbeResponseInput interface {
	pulumi.Input

	ToProbeResponseOutput() ProbeResponseOutput
	ToProbeResponseOutputWithContext(context.Context) ProbeResponseOutput
}

// A load balancer probe.
type ProbeResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of load balancer probe.
	Properties ProbePropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (ProbeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbeResponse)(nil)).Elem()
}

func (i ProbeResponseArgs) ToProbeResponseOutput() ProbeResponseOutput {
	return i.ToProbeResponseOutputWithContext(context.Background())
}

func (i ProbeResponseArgs) ToProbeResponseOutputWithContext(ctx context.Context) ProbeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeResponseOutput)
}

// ProbeResponseArrayInput is an input type that accepts ProbeResponseArray and ProbeResponseArrayOutput values.
// You can construct a concrete instance of `ProbeResponseArrayInput` via:
//
//          ProbeResponseArray{ ProbeResponseArgs{...} }
type ProbeResponseArrayInput interface {
	pulumi.Input

	ToProbeResponseArrayOutput() ProbeResponseArrayOutput
	ToProbeResponseArrayOutputWithContext(context.Context) ProbeResponseArrayOutput
}

type ProbeResponseArray []ProbeResponseInput

func (ProbeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProbeResponse)(nil)).Elem()
}

func (i ProbeResponseArray) ToProbeResponseArrayOutput() ProbeResponseArrayOutput {
	return i.ToProbeResponseArrayOutputWithContext(context.Background())
}

func (i ProbeResponseArray) ToProbeResponseArrayOutputWithContext(ctx context.Context) ProbeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeResponseArrayOutput)
}

// A load balancer probe.
type ProbeResponseOutput struct{ *pulumi.OutputState }

func (ProbeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbeResponse)(nil)).Elem()
}

func (o ProbeResponseOutput) ToProbeResponseOutput() ProbeResponseOutput {
	return o
}

func (o ProbeResponseOutput) ToProbeResponseOutputWithContext(ctx context.Context) ProbeResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ProbeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ProbeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ProbeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of load balancer probe.
func (o ProbeResponseOutput) Properties() ProbePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ProbeResponse) *ProbePropertiesFormatResponse { return v.Properties }).(ProbePropertiesFormatResponsePtrOutput)
}

type ProbeResponseArrayOutput struct{ *pulumi.OutputState }

func (ProbeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProbeResponse)(nil)).Elem()
}

func (o ProbeResponseArrayOutput) ToProbeResponseArrayOutput() ProbeResponseArrayOutput {
	return o
}

func (o ProbeResponseArrayOutput) ToProbeResponseArrayOutputWithContext(ctx context.Context) ProbeResponseArrayOutput {
	return o
}

func (o ProbeResponseArrayOutput) Index(i pulumi.IntInput) ProbeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProbeResponse {
		return vs[0].([]ProbeResponse)[vs[1].(int)]
	}).(ProbeResponseOutput)
}

// DDoS custom policy properties.
type ProtocolCustomSettingsFormat struct {
	// The protocol for which the DDoS protection policy is being customized.
	Protocol *string `pulumi:"protocol"`
	// The customized DDoS protection source rate.
	SourceRateOverride *string `pulumi:"sourceRateOverride"`
	// The customized DDoS protection trigger rate.
	TriggerRateOverride *string `pulumi:"triggerRateOverride"`
	// The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.
	TriggerSensitivityOverride *string `pulumi:"triggerSensitivityOverride"`
}

// ProtocolCustomSettingsFormatInput is an input type that accepts ProtocolCustomSettingsFormatArgs and ProtocolCustomSettingsFormatOutput values.
// You can construct a concrete instance of `ProtocolCustomSettingsFormatInput` via:
//
//          ProtocolCustomSettingsFormatArgs{...}
type ProtocolCustomSettingsFormatInput interface {
	pulumi.Input

	ToProtocolCustomSettingsFormatOutput() ProtocolCustomSettingsFormatOutput
	ToProtocolCustomSettingsFormatOutputWithContext(context.Context) ProtocolCustomSettingsFormatOutput
}

// DDoS custom policy properties.
type ProtocolCustomSettingsFormatArgs struct {
	// The protocol for which the DDoS protection policy is being customized.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The customized DDoS protection source rate.
	SourceRateOverride pulumi.StringPtrInput `pulumi:"sourceRateOverride"`
	// The customized DDoS protection trigger rate.
	TriggerRateOverride pulumi.StringPtrInput `pulumi:"triggerRateOverride"`
	// The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.
	TriggerSensitivityOverride pulumi.StringPtrInput `pulumi:"triggerSensitivityOverride"`
}

func (ProtocolCustomSettingsFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtocolCustomSettingsFormat)(nil)).Elem()
}

func (i ProtocolCustomSettingsFormatArgs) ToProtocolCustomSettingsFormatOutput() ProtocolCustomSettingsFormatOutput {
	return i.ToProtocolCustomSettingsFormatOutputWithContext(context.Background())
}

func (i ProtocolCustomSettingsFormatArgs) ToProtocolCustomSettingsFormatOutputWithContext(ctx context.Context) ProtocolCustomSettingsFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtocolCustomSettingsFormatOutput)
}

// ProtocolCustomSettingsFormatArrayInput is an input type that accepts ProtocolCustomSettingsFormatArray and ProtocolCustomSettingsFormatArrayOutput values.
// You can construct a concrete instance of `ProtocolCustomSettingsFormatArrayInput` via:
//
//          ProtocolCustomSettingsFormatArray{ ProtocolCustomSettingsFormatArgs{...} }
type ProtocolCustomSettingsFormatArrayInput interface {
	pulumi.Input

	ToProtocolCustomSettingsFormatArrayOutput() ProtocolCustomSettingsFormatArrayOutput
	ToProtocolCustomSettingsFormatArrayOutputWithContext(context.Context) ProtocolCustomSettingsFormatArrayOutput
}

type ProtocolCustomSettingsFormatArray []ProtocolCustomSettingsFormatInput

func (ProtocolCustomSettingsFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtocolCustomSettingsFormat)(nil)).Elem()
}

func (i ProtocolCustomSettingsFormatArray) ToProtocolCustomSettingsFormatArrayOutput() ProtocolCustomSettingsFormatArrayOutput {
	return i.ToProtocolCustomSettingsFormatArrayOutputWithContext(context.Background())
}

func (i ProtocolCustomSettingsFormatArray) ToProtocolCustomSettingsFormatArrayOutputWithContext(ctx context.Context) ProtocolCustomSettingsFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtocolCustomSettingsFormatArrayOutput)
}

// DDoS custom policy properties.
type ProtocolCustomSettingsFormatOutput struct{ *pulumi.OutputState }

func (ProtocolCustomSettingsFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtocolCustomSettingsFormat)(nil)).Elem()
}

func (o ProtocolCustomSettingsFormatOutput) ToProtocolCustomSettingsFormatOutput() ProtocolCustomSettingsFormatOutput {
	return o
}

func (o ProtocolCustomSettingsFormatOutput) ToProtocolCustomSettingsFormatOutputWithContext(ctx context.Context) ProtocolCustomSettingsFormatOutput {
	return o
}

// The protocol for which the DDoS protection policy is being customized.
func (o ProtocolCustomSettingsFormatOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormat) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The customized DDoS protection source rate.
func (o ProtocolCustomSettingsFormatOutput) SourceRateOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormat) *string { return v.SourceRateOverride }).(pulumi.StringPtrOutput)
}

// The customized DDoS protection trigger rate.
func (o ProtocolCustomSettingsFormatOutput) TriggerRateOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormat) *string { return v.TriggerRateOverride }).(pulumi.StringPtrOutput)
}

// The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.
func (o ProtocolCustomSettingsFormatOutput) TriggerSensitivityOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormat) *string { return v.TriggerSensitivityOverride }).(pulumi.StringPtrOutput)
}

type ProtocolCustomSettingsFormatArrayOutput struct{ *pulumi.OutputState }

func (ProtocolCustomSettingsFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtocolCustomSettingsFormat)(nil)).Elem()
}

func (o ProtocolCustomSettingsFormatArrayOutput) ToProtocolCustomSettingsFormatArrayOutput() ProtocolCustomSettingsFormatArrayOutput {
	return o
}

func (o ProtocolCustomSettingsFormatArrayOutput) ToProtocolCustomSettingsFormatArrayOutputWithContext(ctx context.Context) ProtocolCustomSettingsFormatArrayOutput {
	return o
}

func (o ProtocolCustomSettingsFormatArrayOutput) Index(i pulumi.IntInput) ProtocolCustomSettingsFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProtocolCustomSettingsFormat {
		return vs[0].([]ProtocolCustomSettingsFormat)[vs[1].(int)]
	}).(ProtocolCustomSettingsFormatOutput)
}

// DDoS custom policy properties.
type ProtocolCustomSettingsFormatResponse struct {
	// The protocol for which the DDoS protection policy is being customized.
	Protocol *string `pulumi:"protocol"`
	// The customized DDoS protection source rate.
	SourceRateOverride *string `pulumi:"sourceRateOverride"`
	// The customized DDoS protection trigger rate.
	TriggerRateOverride *string `pulumi:"triggerRateOverride"`
	// The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.
	TriggerSensitivityOverride *string `pulumi:"triggerSensitivityOverride"`
}

// ProtocolCustomSettingsFormatResponseInput is an input type that accepts ProtocolCustomSettingsFormatResponseArgs and ProtocolCustomSettingsFormatResponseOutput values.
// You can construct a concrete instance of `ProtocolCustomSettingsFormatResponseInput` via:
//
//          ProtocolCustomSettingsFormatResponseArgs{...}
type ProtocolCustomSettingsFormatResponseInput interface {
	pulumi.Input

	ToProtocolCustomSettingsFormatResponseOutput() ProtocolCustomSettingsFormatResponseOutput
	ToProtocolCustomSettingsFormatResponseOutputWithContext(context.Context) ProtocolCustomSettingsFormatResponseOutput
}

// DDoS custom policy properties.
type ProtocolCustomSettingsFormatResponseArgs struct {
	// The protocol for which the DDoS protection policy is being customized.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The customized DDoS protection source rate.
	SourceRateOverride pulumi.StringPtrInput `pulumi:"sourceRateOverride"`
	// The customized DDoS protection trigger rate.
	TriggerRateOverride pulumi.StringPtrInput `pulumi:"triggerRateOverride"`
	// The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.
	TriggerSensitivityOverride pulumi.StringPtrInput `pulumi:"triggerSensitivityOverride"`
}

func (ProtocolCustomSettingsFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtocolCustomSettingsFormatResponse)(nil)).Elem()
}

func (i ProtocolCustomSettingsFormatResponseArgs) ToProtocolCustomSettingsFormatResponseOutput() ProtocolCustomSettingsFormatResponseOutput {
	return i.ToProtocolCustomSettingsFormatResponseOutputWithContext(context.Background())
}

func (i ProtocolCustomSettingsFormatResponseArgs) ToProtocolCustomSettingsFormatResponseOutputWithContext(ctx context.Context) ProtocolCustomSettingsFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtocolCustomSettingsFormatResponseOutput)
}

// ProtocolCustomSettingsFormatResponseArrayInput is an input type that accepts ProtocolCustomSettingsFormatResponseArray and ProtocolCustomSettingsFormatResponseArrayOutput values.
// You can construct a concrete instance of `ProtocolCustomSettingsFormatResponseArrayInput` via:
//
//          ProtocolCustomSettingsFormatResponseArray{ ProtocolCustomSettingsFormatResponseArgs{...} }
type ProtocolCustomSettingsFormatResponseArrayInput interface {
	pulumi.Input

	ToProtocolCustomSettingsFormatResponseArrayOutput() ProtocolCustomSettingsFormatResponseArrayOutput
	ToProtocolCustomSettingsFormatResponseArrayOutputWithContext(context.Context) ProtocolCustomSettingsFormatResponseArrayOutput
}

type ProtocolCustomSettingsFormatResponseArray []ProtocolCustomSettingsFormatResponseInput

func (ProtocolCustomSettingsFormatResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtocolCustomSettingsFormatResponse)(nil)).Elem()
}

func (i ProtocolCustomSettingsFormatResponseArray) ToProtocolCustomSettingsFormatResponseArrayOutput() ProtocolCustomSettingsFormatResponseArrayOutput {
	return i.ToProtocolCustomSettingsFormatResponseArrayOutputWithContext(context.Background())
}

func (i ProtocolCustomSettingsFormatResponseArray) ToProtocolCustomSettingsFormatResponseArrayOutputWithContext(ctx context.Context) ProtocolCustomSettingsFormatResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtocolCustomSettingsFormatResponseArrayOutput)
}

// DDoS custom policy properties.
type ProtocolCustomSettingsFormatResponseOutput struct{ *pulumi.OutputState }

func (ProtocolCustomSettingsFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtocolCustomSettingsFormatResponse)(nil)).Elem()
}

func (o ProtocolCustomSettingsFormatResponseOutput) ToProtocolCustomSettingsFormatResponseOutput() ProtocolCustomSettingsFormatResponseOutput {
	return o
}

func (o ProtocolCustomSettingsFormatResponseOutput) ToProtocolCustomSettingsFormatResponseOutputWithContext(ctx context.Context) ProtocolCustomSettingsFormatResponseOutput {
	return o
}

// The protocol for which the DDoS protection policy is being customized.
func (o ProtocolCustomSettingsFormatResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormatResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The customized DDoS protection source rate.
func (o ProtocolCustomSettingsFormatResponseOutput) SourceRateOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormatResponse) *string { return v.SourceRateOverride }).(pulumi.StringPtrOutput)
}

// The customized DDoS protection trigger rate.
func (o ProtocolCustomSettingsFormatResponseOutput) TriggerRateOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormatResponse) *string { return v.TriggerRateOverride }).(pulumi.StringPtrOutput)
}

// The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.
func (o ProtocolCustomSettingsFormatResponseOutput) TriggerSensitivityOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormatResponse) *string { return v.TriggerSensitivityOverride }).(pulumi.StringPtrOutput)
}

type ProtocolCustomSettingsFormatResponseArrayOutput struct{ *pulumi.OutputState }

func (ProtocolCustomSettingsFormatResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtocolCustomSettingsFormatResponse)(nil)).Elem()
}

func (o ProtocolCustomSettingsFormatResponseArrayOutput) ToProtocolCustomSettingsFormatResponseArrayOutput() ProtocolCustomSettingsFormatResponseArrayOutput {
	return o
}

func (o ProtocolCustomSettingsFormatResponseArrayOutput) ToProtocolCustomSettingsFormatResponseArrayOutputWithContext(ctx context.Context) ProtocolCustomSettingsFormatResponseArrayOutput {
	return o
}

func (o ProtocolCustomSettingsFormatResponseArrayOutput) Index(i pulumi.IntInput) ProtocolCustomSettingsFormatResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProtocolCustomSettingsFormatResponse {
		return vs[0].([]ProtocolCustomSettingsFormatResponse)[vs[1].(int)]
	}).(ProtocolCustomSettingsFormatResponseOutput)
}

// Public IP address resource.
type PublicIPAddressType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Public IP address properties.
	Properties *PublicIPAddressPropertiesFormat `pulumi:"properties"`
	// The public IP address SKU.
	Sku *PublicIPAddressSku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// PublicIPAddressTypeInput is an input type that accepts PublicIPAddressTypeArgs and PublicIPAddressTypeOutput values.
// You can construct a concrete instance of `PublicIPAddressTypeInput` via:
//
//          PublicIPAddressTypeArgs{...}
type PublicIPAddressTypeInput interface {
	pulumi.Input

	ToPublicIPAddressTypeOutput() PublicIPAddressTypeOutput
	ToPublicIPAddressTypeOutputWithContext(context.Context) PublicIPAddressTypeOutput
}

// Public IP address resource.
type PublicIPAddressTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Public IP address properties.
	Properties PublicIPAddressPropertiesFormatPtrInput `pulumi:"properties"`
	// The public IP address SKU.
	Sku PublicIPAddressSkuPtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (PublicIPAddressTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressType)(nil)).Elem()
}

func (i PublicIPAddressTypeArgs) ToPublicIPAddressTypeOutput() PublicIPAddressTypeOutput {
	return i.ToPublicIPAddressTypeOutputWithContext(context.Background())
}

func (i PublicIPAddressTypeArgs) ToPublicIPAddressTypeOutputWithContext(ctx context.Context) PublicIPAddressTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressTypeOutput)
}

func (i PublicIPAddressTypeArgs) ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput {
	return i.ToPublicIPAddressTypePtrOutputWithContext(context.Background())
}

func (i PublicIPAddressTypeArgs) ToPublicIPAddressTypePtrOutputWithContext(ctx context.Context) PublicIPAddressTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressTypeOutput).ToPublicIPAddressTypePtrOutputWithContext(ctx)
}

// PublicIPAddressTypePtrInput is an input type that accepts PublicIPAddressTypeArgs, PublicIPAddressTypePtr and PublicIPAddressTypePtrOutput values.
// You can construct a concrete instance of `PublicIPAddressTypePtrInput` via:
//
//          PublicIPAddressTypeArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressTypePtrInput interface {
	pulumi.Input

	ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput
	ToPublicIPAddressTypePtrOutputWithContext(context.Context) PublicIPAddressTypePtrOutput
}

type publicIPAddressTypePtrType PublicIPAddressTypeArgs

func PublicIPAddressTypePtr(v *PublicIPAddressTypeArgs) PublicIPAddressTypePtrInput {
	return (*publicIPAddressTypePtrType)(v)
}

func (*publicIPAddressTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressType)(nil)).Elem()
}

func (i *publicIPAddressTypePtrType) ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput {
	return i.ToPublicIPAddressTypePtrOutputWithContext(context.Background())
}

func (i *publicIPAddressTypePtrType) ToPublicIPAddressTypePtrOutputWithContext(ctx context.Context) PublicIPAddressTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressTypePtrOutput)
}

// Public IP address resource.
type PublicIPAddressTypeOutput struct{ *pulumi.OutputState }

func (PublicIPAddressTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressType)(nil)).Elem()
}

func (o PublicIPAddressTypeOutput) ToPublicIPAddressTypeOutput() PublicIPAddressTypeOutput {
	return o
}

func (o PublicIPAddressTypeOutput) ToPublicIPAddressTypeOutputWithContext(ctx context.Context) PublicIPAddressTypeOutput {
	return o
}

func (o PublicIPAddressTypeOutput) ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput {
	return o.ToPublicIPAddressTypePtrOutputWithContext(context.Background())
}

func (o PublicIPAddressTypeOutput) ToPublicIPAddressTypePtrOutputWithContext(ctx context.Context) PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *PublicIPAddressType {
		return &v
	}).(PublicIPAddressTypePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o PublicIPAddressTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o PublicIPAddressTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Public IP address properties.
func (o PublicIPAddressTypeOutput) Properties() PublicIPAddressPropertiesFormatPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *PublicIPAddressPropertiesFormat { return v.Properties }).(PublicIPAddressPropertiesFormatPtrOutput)
}

// The public IP address SKU.
func (o PublicIPAddressTypeOutput) Sku() PublicIPAddressSkuPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *PublicIPAddressSku { return v.Sku }).(PublicIPAddressSkuPtrOutput)
}

// Resource tags.
func (o PublicIPAddressTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PublicIPAddressType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressTypeOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PublicIPAddressType) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type PublicIPAddressTypePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressType)(nil)).Elem()
}

func (o PublicIPAddressTypePtrOutput) ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput {
	return o
}

func (o PublicIPAddressTypePtrOutput) ToPublicIPAddressTypePtrOutputWithContext(ctx context.Context) PublicIPAddressTypePtrOutput {
	return o
}

func (o PublicIPAddressTypePtrOutput) Elem() PublicIPAddressTypeOutput {
	return o.ApplyT(func(v *PublicIPAddressType) PublicIPAddressType { return *v }).(PublicIPAddressTypeOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o PublicIPAddressTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o PublicIPAddressTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Public IP address properties.
func (o PublicIPAddressTypePtrOutput) Properties() PublicIPAddressPropertiesFormatPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *PublicIPAddressPropertiesFormat {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(PublicIPAddressPropertiesFormatPtrOutput)
}

// The public IP address SKU.
func (o PublicIPAddressTypePtrOutput) Sku() PublicIPAddressSkuPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *PublicIPAddressSku {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(PublicIPAddressSkuPtrOutput)
}

// Resource tags.
func (o PublicIPAddressTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PublicIPAddressType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressTypePtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PublicIPAddressType) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

// Public IP address resource.
type PublicIPAddressDefinition struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Public IP address properties.
	Properties *PublicIPAddressPropertiesFormat `pulumi:"properties"`
	// The public IP address SKU.
	Sku *PublicIPAddressSku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// PublicIPAddressDefinitionInput is an input type that accepts PublicIPAddressDefinitionArgs and PublicIPAddressDefinitionOutput values.
// You can construct a concrete instance of `PublicIPAddressDefinitionInput` via:
//
//          PublicIPAddressDefinitionArgs{...}
type PublicIPAddressDefinitionInput interface {
	pulumi.Input

	ToPublicIPAddressDefinitionOutput() PublicIPAddressDefinitionOutput
	ToPublicIPAddressDefinitionOutputWithContext(context.Context) PublicIPAddressDefinitionOutput
}

// Public IP address resource.
type PublicIPAddressDefinitionArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Public IP address properties.
	Properties PublicIPAddressPropertiesFormatPtrInput `pulumi:"properties"`
	// The public IP address SKU.
	Sku PublicIPAddressSkuPtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (PublicIPAddressDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDefinition)(nil)).Elem()
}

func (i PublicIPAddressDefinitionArgs) ToPublicIPAddressDefinitionOutput() PublicIPAddressDefinitionOutput {
	return i.ToPublicIPAddressDefinitionOutputWithContext(context.Background())
}

func (i PublicIPAddressDefinitionArgs) ToPublicIPAddressDefinitionOutputWithContext(ctx context.Context) PublicIPAddressDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDefinitionOutput)
}

// Public IP address resource.
type PublicIPAddressDefinitionOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDefinition)(nil)).Elem()
}

func (o PublicIPAddressDefinitionOutput) ToPublicIPAddressDefinitionOutput() PublicIPAddressDefinitionOutput {
	return o
}

func (o PublicIPAddressDefinitionOutput) ToPublicIPAddressDefinitionOutputWithContext(ctx context.Context) PublicIPAddressDefinitionOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressDefinitionOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDefinition) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o PublicIPAddressDefinitionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDefinition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o PublicIPAddressDefinitionOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDefinition) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Public IP address properties.
func (o PublicIPAddressDefinitionOutput) Properties() PublicIPAddressPropertiesFormatPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDefinition) *PublicIPAddressPropertiesFormat { return v.Properties }).(PublicIPAddressPropertiesFormatPtrOutput)
}

// The public IP address SKU.
func (o PublicIPAddressDefinitionOutput) Sku() PublicIPAddressSkuPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDefinition) *PublicIPAddressSku { return v.Sku }).(PublicIPAddressSkuPtrOutput)
}

// Resource tags.
func (o PublicIPAddressDefinitionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PublicIPAddressDefinition) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressDefinitionOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PublicIPAddressDefinition) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

// Contains FQDN of the DNS record associated with the public IP address
type PublicIPAddressDnsSettings struct {
	// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel *string `pulumi:"domainNameLabel"`
	// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn *string `pulumi:"fqdn"`
	// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn *string `pulumi:"reverseFqdn"`
}

// PublicIPAddressDnsSettingsInput is an input type that accepts PublicIPAddressDnsSettingsArgs and PublicIPAddressDnsSettingsOutput values.
// You can construct a concrete instance of `PublicIPAddressDnsSettingsInput` via:
//
//          PublicIPAddressDnsSettingsArgs{...}
type PublicIPAddressDnsSettingsInput interface {
	pulumi.Input

	ToPublicIPAddressDnsSettingsOutput() PublicIPAddressDnsSettingsOutput
	ToPublicIPAddressDnsSettingsOutputWithContext(context.Context) PublicIPAddressDnsSettingsOutput
}

// Contains FQDN of the DNS record associated with the public IP address
type PublicIPAddressDnsSettingsArgs struct {
	// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel pulumi.StringPtrInput `pulumi:"domainNameLabel"`
	// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn pulumi.StringPtrInput `pulumi:"reverseFqdn"`
}

func (PublicIPAddressDnsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettings)(nil)).Elem()
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsOutput() PublicIPAddressDnsSettingsOutput {
	return i.ToPublicIPAddressDnsSettingsOutputWithContext(context.Background())
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsOutput)
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return i.ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Background())
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsOutput).ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx)
}

// PublicIPAddressDnsSettingsPtrInput is an input type that accepts PublicIPAddressDnsSettingsArgs, PublicIPAddressDnsSettingsPtr and PublicIPAddressDnsSettingsPtrOutput values.
// You can construct a concrete instance of `PublicIPAddressDnsSettingsPtrInput` via:
//
//          PublicIPAddressDnsSettingsArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressDnsSettingsPtrInput interface {
	pulumi.Input

	ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput
	ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Context) PublicIPAddressDnsSettingsPtrOutput
}

type publicIPAddressDnsSettingsPtrType PublicIPAddressDnsSettingsArgs

func PublicIPAddressDnsSettingsPtr(v *PublicIPAddressDnsSettingsArgs) PublicIPAddressDnsSettingsPtrInput {
	return (*publicIPAddressDnsSettingsPtrType)(v)
}

func (*publicIPAddressDnsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettings)(nil)).Elem()
}

func (i *publicIPAddressDnsSettingsPtrType) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return i.ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Background())
}

func (i *publicIPAddressDnsSettingsPtrType) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsPtrOutput)
}

// Contains FQDN of the DNS record associated with the public IP address
type PublicIPAddressDnsSettingsOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettings)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsOutput() PublicIPAddressDnsSettingsOutput {
	return o
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsOutput {
	return o
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return o.ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Background())
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *PublicIPAddressDnsSettings {
		return &v
	}).(PublicIPAddressDnsSettingsPtrOutput)
}

// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *string { return v.DomainNameLabel }).(pulumi.StringPtrOutput)
}

// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *string { return v.ReverseFqdn }).(pulumi.StringPtrOutput)
}

type PublicIPAddressDnsSettingsPtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettings)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsPtrOutput) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsPtrOutput) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsPtrOutput) Elem() PublicIPAddressDnsSettingsOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) PublicIPAddressDnsSettings { return *v }).(PublicIPAddressDnsSettingsOutput)
}

// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsPtrOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.DomainNameLabel
	}).(pulumi.StringPtrOutput)
}

// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsPtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsPtrOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.ReverseFqdn
	}).(pulumi.StringPtrOutput)
}

// Contains FQDN of the DNS record associated with the public IP address
type PublicIPAddressDnsSettingsResponse struct {
	// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel *string `pulumi:"domainNameLabel"`
	// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn *string `pulumi:"fqdn"`
	// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn *string `pulumi:"reverseFqdn"`
}

// PublicIPAddressDnsSettingsResponseInput is an input type that accepts PublicIPAddressDnsSettingsResponseArgs and PublicIPAddressDnsSettingsResponseOutput values.
// You can construct a concrete instance of `PublicIPAddressDnsSettingsResponseInput` via:
//
//          PublicIPAddressDnsSettingsResponseArgs{...}
type PublicIPAddressDnsSettingsResponseInput interface {
	pulumi.Input

	ToPublicIPAddressDnsSettingsResponseOutput() PublicIPAddressDnsSettingsResponseOutput
	ToPublicIPAddressDnsSettingsResponseOutputWithContext(context.Context) PublicIPAddressDnsSettingsResponseOutput
}

// Contains FQDN of the DNS record associated with the public IP address
type PublicIPAddressDnsSettingsResponseArgs struct {
	// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel pulumi.StringPtrInput `pulumi:"domainNameLabel"`
	// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn pulumi.StringPtrInput `pulumi:"reverseFqdn"`
}

func (PublicIPAddressDnsSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettingsResponse)(nil)).Elem()
}

func (i PublicIPAddressDnsSettingsResponseArgs) ToPublicIPAddressDnsSettingsResponseOutput() PublicIPAddressDnsSettingsResponseOutput {
	return i.ToPublicIPAddressDnsSettingsResponseOutputWithContext(context.Background())
}

func (i PublicIPAddressDnsSettingsResponseArgs) ToPublicIPAddressDnsSettingsResponseOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsResponseOutput)
}

func (i PublicIPAddressDnsSettingsResponseArgs) ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput {
	return i.ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i PublicIPAddressDnsSettingsResponseArgs) ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsResponseOutput).ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx)
}

// PublicIPAddressDnsSettingsResponsePtrInput is an input type that accepts PublicIPAddressDnsSettingsResponseArgs, PublicIPAddressDnsSettingsResponsePtr and PublicIPAddressDnsSettingsResponsePtrOutput values.
// You can construct a concrete instance of `PublicIPAddressDnsSettingsResponsePtrInput` via:
//
//          PublicIPAddressDnsSettingsResponseArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressDnsSettingsResponsePtrInput interface {
	pulumi.Input

	ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput
	ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(context.Context) PublicIPAddressDnsSettingsResponsePtrOutput
}

type publicIPAddressDnsSettingsResponsePtrType PublicIPAddressDnsSettingsResponseArgs

func PublicIPAddressDnsSettingsResponsePtr(v *PublicIPAddressDnsSettingsResponseArgs) PublicIPAddressDnsSettingsResponsePtrInput {
	return (*publicIPAddressDnsSettingsResponsePtrType)(v)
}

func (*publicIPAddressDnsSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettingsResponse)(nil)).Elem()
}

func (i *publicIPAddressDnsSettingsResponsePtrType) ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput {
	return i.ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *publicIPAddressDnsSettingsResponsePtrType) ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsResponsePtrOutput)
}

// Contains FQDN of the DNS record associated with the public IP address
type PublicIPAddressDnsSettingsResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettingsResponse)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsResponseOutput) ToPublicIPAddressDnsSettingsResponseOutput() PublicIPAddressDnsSettingsResponseOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponseOutput) ToPublicIPAddressDnsSettingsResponseOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponseOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponseOutput) ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o.ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (o PublicIPAddressDnsSettingsResponseOutput) ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *PublicIPAddressDnsSettingsResponse {
		return &v
	}).(PublicIPAddressDnsSettingsResponsePtrOutput)
}

// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsResponseOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *string { return v.DomainNameLabel }).(pulumi.StringPtrOutput)
}

// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsResponseOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *string { return v.ReverseFqdn }).(pulumi.StringPtrOutput)
}

type PublicIPAddressDnsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettingsResponse)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsResponsePtrOutput) ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponsePtrOutput) ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponsePtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponsePtrOutput) Elem() PublicIPAddressDnsSettingsResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) PublicIPAddressDnsSettingsResponse { return *v }).(PublicIPAddressDnsSettingsResponseOutput)
}

// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsResponsePtrOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DomainNameLabel
	}).(pulumi.StringPtrOutput)
}

// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsResponsePtrOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReverseFqdn
	}).(pulumi.StringPtrOutput)
}

// Public IP address properties.
type PublicIPAddressPropertiesFormat struct {
	// The DDoS protection custom policy associated with the public IP address.
	DdosSettings *DdosSettings `pulumi:"ddosSettings"`
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings *PublicIPAddressDnsSettings `pulumi:"dnsSettings"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The IP address associated with the public IP address resource.
	IpAddress *string `pulumi:"ipAddress"`
	// The list of tags associated with the public IP address.
	IpTags []IpTag `pulumi:"ipTags"`
	// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
	PublicIPAddressVersion *string `pulumi:"publicIPAddressVersion"`
	// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PublicIPAllocationMethod *string `pulumi:"publicIPAllocationMethod"`
	// The Public IP Prefix this Public IP Address should be allocated from.
	PublicIPPrefix *SubResource `pulumi:"publicIPPrefix"`
	// The resource GUID property of the public IP resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
}

// PublicIPAddressPropertiesFormatInput is an input type that accepts PublicIPAddressPropertiesFormatArgs and PublicIPAddressPropertiesFormatOutput values.
// You can construct a concrete instance of `PublicIPAddressPropertiesFormatInput` via:
//
//          PublicIPAddressPropertiesFormatArgs{...}
type PublicIPAddressPropertiesFormatInput interface {
	pulumi.Input

	ToPublicIPAddressPropertiesFormatOutput() PublicIPAddressPropertiesFormatOutput
	ToPublicIPAddressPropertiesFormatOutputWithContext(context.Context) PublicIPAddressPropertiesFormatOutput
}

// Public IP address properties.
type PublicIPAddressPropertiesFormatArgs struct {
	// The DDoS protection custom policy associated with the public IP address.
	DdosSettings DdosSettingsPtrInput `pulumi:"ddosSettings"`
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings PublicIPAddressDnsSettingsPtrInput `pulumi:"dnsSettings"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The IP address associated with the public IP address resource.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The list of tags associated with the public IP address.
	IpTags IpTagArrayInput `pulumi:"ipTags"`
	// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
	PublicIPAddressVersion pulumi.StringPtrInput `pulumi:"publicIPAddressVersion"`
	// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PublicIPAllocationMethod pulumi.StringPtrInput `pulumi:"publicIPAllocationMethod"`
	// The Public IP Prefix this Public IP Address should be allocated from.
	PublicIPPrefix SubResourcePtrInput `pulumi:"publicIPPrefix"`
	// The resource GUID property of the public IP resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
}

func (PublicIPAddressPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressPropertiesFormat)(nil)).Elem()
}

func (i PublicIPAddressPropertiesFormatArgs) ToPublicIPAddressPropertiesFormatOutput() PublicIPAddressPropertiesFormatOutput {
	return i.ToPublicIPAddressPropertiesFormatOutputWithContext(context.Background())
}

func (i PublicIPAddressPropertiesFormatArgs) ToPublicIPAddressPropertiesFormatOutputWithContext(ctx context.Context) PublicIPAddressPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressPropertiesFormatOutput)
}

func (i PublicIPAddressPropertiesFormatArgs) ToPublicIPAddressPropertiesFormatPtrOutput() PublicIPAddressPropertiesFormatPtrOutput {
	return i.ToPublicIPAddressPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i PublicIPAddressPropertiesFormatArgs) ToPublicIPAddressPropertiesFormatPtrOutputWithContext(ctx context.Context) PublicIPAddressPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressPropertiesFormatOutput).ToPublicIPAddressPropertiesFormatPtrOutputWithContext(ctx)
}

// PublicIPAddressPropertiesFormatPtrInput is an input type that accepts PublicIPAddressPropertiesFormatArgs, PublicIPAddressPropertiesFormatPtr and PublicIPAddressPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `PublicIPAddressPropertiesFormatPtrInput` via:
//
//          PublicIPAddressPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressPropertiesFormatPtrInput interface {
	pulumi.Input

	ToPublicIPAddressPropertiesFormatPtrOutput() PublicIPAddressPropertiesFormatPtrOutput
	ToPublicIPAddressPropertiesFormatPtrOutputWithContext(context.Context) PublicIPAddressPropertiesFormatPtrOutput
}

type publicIPAddressPropertiesFormatPtrType PublicIPAddressPropertiesFormatArgs

func PublicIPAddressPropertiesFormatPtr(v *PublicIPAddressPropertiesFormatArgs) PublicIPAddressPropertiesFormatPtrInput {
	return (*publicIPAddressPropertiesFormatPtrType)(v)
}

func (*publicIPAddressPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressPropertiesFormat)(nil)).Elem()
}

func (i *publicIPAddressPropertiesFormatPtrType) ToPublicIPAddressPropertiesFormatPtrOutput() PublicIPAddressPropertiesFormatPtrOutput {
	return i.ToPublicIPAddressPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *publicIPAddressPropertiesFormatPtrType) ToPublicIPAddressPropertiesFormatPtrOutputWithContext(ctx context.Context) PublicIPAddressPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressPropertiesFormatPtrOutput)
}

// Public IP address properties.
type PublicIPAddressPropertiesFormatOutput struct{ *pulumi.OutputState }

func (PublicIPAddressPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressPropertiesFormat)(nil)).Elem()
}

func (o PublicIPAddressPropertiesFormatOutput) ToPublicIPAddressPropertiesFormatOutput() PublicIPAddressPropertiesFormatOutput {
	return o
}

func (o PublicIPAddressPropertiesFormatOutput) ToPublicIPAddressPropertiesFormatOutputWithContext(ctx context.Context) PublicIPAddressPropertiesFormatOutput {
	return o
}

func (o PublicIPAddressPropertiesFormatOutput) ToPublicIPAddressPropertiesFormatPtrOutput() PublicIPAddressPropertiesFormatPtrOutput {
	return o.ToPublicIPAddressPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o PublicIPAddressPropertiesFormatOutput) ToPublicIPAddressPropertiesFormatPtrOutputWithContext(ctx context.Context) PublicIPAddressPropertiesFormatPtrOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormat) *PublicIPAddressPropertiesFormat {
		return &v
	}).(PublicIPAddressPropertiesFormatPtrOutput)
}

// The DDoS protection custom policy associated with the public IP address.
func (o PublicIPAddressPropertiesFormatOutput) DdosSettings() DdosSettingsPtrOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormat) *DdosSettings { return v.DdosSettings }).(DdosSettingsPtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressPropertiesFormatOutput) DnsSettings() PublicIPAddressDnsSettingsPtrOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormat) *PublicIPAddressDnsSettings { return v.DnsSettings }).(PublicIPAddressDnsSettingsPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressPropertiesFormatOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormat) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The IP address associated with the public IP address resource.
func (o PublicIPAddressPropertiesFormatOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormat) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The list of tags associated with the public IP address.
func (o PublicIPAddressPropertiesFormatOutput) IpTags() IpTagArrayOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormat) []IpTag { return v.IpTags }).(IpTagArrayOutput)
}

// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o PublicIPAddressPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
func (o PublicIPAddressPropertiesFormatOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormat) *string { return v.PublicIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o PublicIPAddressPropertiesFormatOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormat) *string { return v.PublicIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The Public IP Prefix this Public IP Address should be allocated from.
func (o PublicIPAddressPropertiesFormatOutput) PublicIPPrefix() SubResourcePtrOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormat) *SubResource { return v.PublicIPPrefix }).(SubResourcePtrOutput)
}

// The resource GUID property of the public IP resource.
func (o PublicIPAddressPropertiesFormatOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormat) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

type PublicIPAddressPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressPropertiesFormat)(nil)).Elem()
}

func (o PublicIPAddressPropertiesFormatPtrOutput) ToPublicIPAddressPropertiesFormatPtrOutput() PublicIPAddressPropertiesFormatPtrOutput {
	return o
}

func (o PublicIPAddressPropertiesFormatPtrOutput) ToPublicIPAddressPropertiesFormatPtrOutputWithContext(ctx context.Context) PublicIPAddressPropertiesFormatPtrOutput {
	return o
}

func (o PublicIPAddressPropertiesFormatPtrOutput) Elem() PublicIPAddressPropertiesFormatOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormat) PublicIPAddressPropertiesFormat { return *v }).(PublicIPAddressPropertiesFormatOutput)
}

// The DDoS protection custom policy associated with the public IP address.
func (o PublicIPAddressPropertiesFormatPtrOutput) DdosSettings() DdosSettingsPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormat) *DdosSettings {
		if v == nil {
			return nil
		}
		return v.DdosSettings
	}).(DdosSettingsPtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressPropertiesFormatPtrOutput) DnsSettings() PublicIPAddressDnsSettingsPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormat) *PublicIPAddressDnsSettings {
		if v == nil {
			return nil
		}
		return v.DnsSettings
	}).(PublicIPAddressDnsSettingsPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressPropertiesFormatPtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// The IP address associated with the public IP address resource.
func (o PublicIPAddressPropertiesFormatPtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// The list of tags associated with the public IP address.
func (o PublicIPAddressPropertiesFormatPtrOutput) IpTags() IpTagArrayOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormat) []IpTag {
		if v == nil {
			return nil
		}
		return v.IpTags
	}).(IpTagArrayOutput)
}

// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o PublicIPAddressPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
func (o PublicIPAddressPropertiesFormatPtrOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o PublicIPAddressPropertiesFormatPtrOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The Public IP Prefix this Public IP Address should be allocated from.
func (o PublicIPAddressPropertiesFormatPtrOutput) PublicIPPrefix() SubResourcePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.PublicIPPrefix
	}).(SubResourcePtrOutput)
}

// The resource GUID property of the public IP resource.
func (o PublicIPAddressPropertiesFormatPtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Public IP address properties.
type PublicIPAddressPropertiesFormatResponse struct {
	// The DDoS protection custom policy associated with the public IP address.
	DdosSettings *DdosSettingsResponse `pulumi:"ddosSettings"`
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings *PublicIPAddressDnsSettingsResponse `pulumi:"dnsSettings"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The IP address associated with the public IP address resource.
	IpAddress *string `pulumi:"ipAddress"`
	// The IP configuration associated with the public IP address.
	IpConfiguration IPConfigurationResponse `pulumi:"ipConfiguration"`
	// The list of tags associated with the public IP address.
	IpTags []IpTagResponse `pulumi:"ipTags"`
	// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
	PublicIPAddressVersion *string `pulumi:"publicIPAddressVersion"`
	// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PublicIPAllocationMethod *string `pulumi:"publicIPAllocationMethod"`
	// The Public IP Prefix this Public IP Address should be allocated from.
	PublicIPPrefix *SubResourceResponse `pulumi:"publicIPPrefix"`
	// The resource GUID property of the public IP resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
}

// PublicIPAddressPropertiesFormatResponseInput is an input type that accepts PublicIPAddressPropertiesFormatResponseArgs and PublicIPAddressPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `PublicIPAddressPropertiesFormatResponseInput` via:
//
//          PublicIPAddressPropertiesFormatResponseArgs{...}
type PublicIPAddressPropertiesFormatResponseInput interface {
	pulumi.Input

	ToPublicIPAddressPropertiesFormatResponseOutput() PublicIPAddressPropertiesFormatResponseOutput
	ToPublicIPAddressPropertiesFormatResponseOutputWithContext(context.Context) PublicIPAddressPropertiesFormatResponseOutput
}

// Public IP address properties.
type PublicIPAddressPropertiesFormatResponseArgs struct {
	// The DDoS protection custom policy associated with the public IP address.
	DdosSettings DdosSettingsResponsePtrInput `pulumi:"ddosSettings"`
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings PublicIPAddressDnsSettingsResponsePtrInput `pulumi:"dnsSettings"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The IP address associated with the public IP address resource.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The IP configuration associated with the public IP address.
	IpConfiguration IPConfigurationResponseInput `pulumi:"ipConfiguration"`
	// The list of tags associated with the public IP address.
	IpTags IpTagResponseArrayInput `pulumi:"ipTags"`
	// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
	PublicIPAddressVersion pulumi.StringPtrInput `pulumi:"publicIPAddressVersion"`
	// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PublicIPAllocationMethod pulumi.StringPtrInput `pulumi:"publicIPAllocationMethod"`
	// The Public IP Prefix this Public IP Address should be allocated from.
	PublicIPPrefix SubResourceResponsePtrInput `pulumi:"publicIPPrefix"`
	// The resource GUID property of the public IP resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
}

func (PublicIPAddressPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressPropertiesFormatResponse)(nil)).Elem()
}

func (i PublicIPAddressPropertiesFormatResponseArgs) ToPublicIPAddressPropertiesFormatResponseOutput() PublicIPAddressPropertiesFormatResponseOutput {
	return i.ToPublicIPAddressPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i PublicIPAddressPropertiesFormatResponseArgs) ToPublicIPAddressPropertiesFormatResponseOutputWithContext(ctx context.Context) PublicIPAddressPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressPropertiesFormatResponseOutput)
}

func (i PublicIPAddressPropertiesFormatResponseArgs) ToPublicIPAddressPropertiesFormatResponsePtrOutput() PublicIPAddressPropertiesFormatResponsePtrOutput {
	return i.ToPublicIPAddressPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i PublicIPAddressPropertiesFormatResponseArgs) ToPublicIPAddressPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressPropertiesFormatResponseOutput).ToPublicIPAddressPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// PublicIPAddressPropertiesFormatResponsePtrInput is an input type that accepts PublicIPAddressPropertiesFormatResponseArgs, PublicIPAddressPropertiesFormatResponsePtr and PublicIPAddressPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `PublicIPAddressPropertiesFormatResponsePtrInput` via:
//
//          PublicIPAddressPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToPublicIPAddressPropertiesFormatResponsePtrOutput() PublicIPAddressPropertiesFormatResponsePtrOutput
	ToPublicIPAddressPropertiesFormatResponsePtrOutputWithContext(context.Context) PublicIPAddressPropertiesFormatResponsePtrOutput
}

type publicIPAddressPropertiesFormatResponsePtrType PublicIPAddressPropertiesFormatResponseArgs

func PublicIPAddressPropertiesFormatResponsePtr(v *PublicIPAddressPropertiesFormatResponseArgs) PublicIPAddressPropertiesFormatResponsePtrInput {
	return (*publicIPAddressPropertiesFormatResponsePtrType)(v)
}

func (*publicIPAddressPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressPropertiesFormatResponse)(nil)).Elem()
}

func (i *publicIPAddressPropertiesFormatResponsePtrType) ToPublicIPAddressPropertiesFormatResponsePtrOutput() PublicIPAddressPropertiesFormatResponsePtrOutput {
	return i.ToPublicIPAddressPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *publicIPAddressPropertiesFormatResponsePtrType) ToPublicIPAddressPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressPropertiesFormatResponsePtrOutput)
}

// Public IP address properties.
type PublicIPAddressPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressPropertiesFormatResponse)(nil)).Elem()
}

func (o PublicIPAddressPropertiesFormatResponseOutput) ToPublicIPAddressPropertiesFormatResponseOutput() PublicIPAddressPropertiesFormatResponseOutput {
	return o
}

func (o PublicIPAddressPropertiesFormatResponseOutput) ToPublicIPAddressPropertiesFormatResponseOutputWithContext(ctx context.Context) PublicIPAddressPropertiesFormatResponseOutput {
	return o
}

func (o PublicIPAddressPropertiesFormatResponseOutput) ToPublicIPAddressPropertiesFormatResponsePtrOutput() PublicIPAddressPropertiesFormatResponsePtrOutput {
	return o.ToPublicIPAddressPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o PublicIPAddressPropertiesFormatResponseOutput) ToPublicIPAddressPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormatResponse) *PublicIPAddressPropertiesFormatResponse {
		return &v
	}).(PublicIPAddressPropertiesFormatResponsePtrOutput)
}

// The DDoS protection custom policy associated with the public IP address.
func (o PublicIPAddressPropertiesFormatResponseOutput) DdosSettings() DdosSettingsResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormatResponse) *DdosSettingsResponse { return v.DdosSettings }).(DdosSettingsResponsePtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressPropertiesFormatResponseOutput) DnsSettings() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormatResponse) *PublicIPAddressDnsSettingsResponse {
		return v.DnsSettings
	}).(PublicIPAddressDnsSettingsResponsePtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressPropertiesFormatResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormatResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The IP address associated with the public IP address resource.
func (o PublicIPAddressPropertiesFormatResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormatResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The IP configuration associated with the public IP address.
func (o PublicIPAddressPropertiesFormatResponseOutput) IpConfiguration() IPConfigurationResponseOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormatResponse) IPConfigurationResponse { return v.IpConfiguration }).(IPConfigurationResponseOutput)
}

// The list of tags associated with the public IP address.
func (o PublicIPAddressPropertiesFormatResponseOutput) IpTags() IpTagResponseArrayOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormatResponse) []IpTagResponse { return v.IpTags }).(IpTagResponseArrayOutput)
}

// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o PublicIPAddressPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
func (o PublicIPAddressPropertiesFormatResponseOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormatResponse) *string { return v.PublicIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o PublicIPAddressPropertiesFormatResponseOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormatResponse) *string { return v.PublicIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The Public IP Prefix this Public IP Address should be allocated from.
func (o PublicIPAddressPropertiesFormatResponseOutput) PublicIPPrefix() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormatResponse) *SubResourceResponse { return v.PublicIPPrefix }).(SubResourceResponsePtrOutput)
}

// The resource GUID property of the public IP resource.
func (o PublicIPAddressPropertiesFormatResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressPropertiesFormatResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

type PublicIPAddressPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressPropertiesFormatResponse)(nil)).Elem()
}

func (o PublicIPAddressPropertiesFormatResponsePtrOutput) ToPublicIPAddressPropertiesFormatResponsePtrOutput() PublicIPAddressPropertiesFormatResponsePtrOutput {
	return o
}

func (o PublicIPAddressPropertiesFormatResponsePtrOutput) ToPublicIPAddressPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressPropertiesFormatResponsePtrOutput {
	return o
}

func (o PublicIPAddressPropertiesFormatResponsePtrOutput) Elem() PublicIPAddressPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormatResponse) PublicIPAddressPropertiesFormatResponse { return *v }).(PublicIPAddressPropertiesFormatResponseOutput)
}

// The DDoS protection custom policy associated with the public IP address.
func (o PublicIPAddressPropertiesFormatResponsePtrOutput) DdosSettings() DdosSettingsResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormatResponse) *DdosSettingsResponse {
		if v == nil {
			return nil
		}
		return v.DdosSettings
	}).(DdosSettingsResponsePtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressPropertiesFormatResponsePtrOutput) DnsSettings() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormatResponse) *PublicIPAddressDnsSettingsResponse {
		if v == nil {
			return nil
		}
		return v.DnsSettings
	}).(PublicIPAddressDnsSettingsResponsePtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressPropertiesFormatResponsePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// The IP address associated with the public IP address resource.
func (o PublicIPAddressPropertiesFormatResponsePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// The IP configuration associated with the public IP address.
func (o PublicIPAddressPropertiesFormatResponsePtrOutput) IpConfiguration() IPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormatResponse) *IPConfigurationResponse {
		if v == nil {
			return nil
		}
		return &v.IpConfiguration
	}).(IPConfigurationResponsePtrOutput)
}

// The list of tags associated with the public IP address.
func (o PublicIPAddressPropertiesFormatResponsePtrOutput) IpTags() IpTagResponseArrayOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormatResponse) []IpTagResponse {
		if v == nil {
			return nil
		}
		return v.IpTags
	}).(IpTagResponseArrayOutput)
}

// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o PublicIPAddressPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
func (o PublicIPAddressPropertiesFormatResponsePtrOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o PublicIPAddressPropertiesFormatResponsePtrOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The Public IP Prefix this Public IP Address should be allocated from.
func (o PublicIPAddressPropertiesFormatResponsePtrOutput) PublicIPPrefix() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPPrefix
	}).(SubResourceResponsePtrOutput)
}

// The resource GUID property of the public IP resource.
func (o PublicIPAddressPropertiesFormatResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Public IP address resource.
type PublicIPAddressResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Public IP address properties.
	Properties *PublicIPAddressPropertiesFormatResponse `pulumi:"properties"`
	// The public IP address SKU.
	Sku *PublicIPAddressSkuResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// PublicIPAddressResponseInput is an input type that accepts PublicIPAddressResponseArgs and PublicIPAddressResponseOutput values.
// You can construct a concrete instance of `PublicIPAddressResponseInput` via:
//
//          PublicIPAddressResponseArgs{...}
type PublicIPAddressResponseInput interface {
	pulumi.Input

	ToPublicIPAddressResponseOutput() PublicIPAddressResponseOutput
	ToPublicIPAddressResponseOutputWithContext(context.Context) PublicIPAddressResponseOutput
}

// Public IP address resource.
type PublicIPAddressResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Public IP address properties.
	Properties PublicIPAddressPropertiesFormatResponsePtrInput `pulumi:"properties"`
	// The public IP address SKU.
	Sku PublicIPAddressSkuResponsePtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (PublicIPAddressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressResponse)(nil)).Elem()
}

func (i PublicIPAddressResponseArgs) ToPublicIPAddressResponseOutput() PublicIPAddressResponseOutput {
	return i.ToPublicIPAddressResponseOutputWithContext(context.Background())
}

func (i PublicIPAddressResponseArgs) ToPublicIPAddressResponseOutputWithContext(ctx context.Context) PublicIPAddressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressResponseOutput)
}

func (i PublicIPAddressResponseArgs) ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput {
	return i.ToPublicIPAddressResponsePtrOutputWithContext(context.Background())
}

func (i PublicIPAddressResponseArgs) ToPublicIPAddressResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressResponseOutput).ToPublicIPAddressResponsePtrOutputWithContext(ctx)
}

// PublicIPAddressResponsePtrInput is an input type that accepts PublicIPAddressResponseArgs, PublicIPAddressResponsePtr and PublicIPAddressResponsePtrOutput values.
// You can construct a concrete instance of `PublicIPAddressResponsePtrInput` via:
//
//          PublicIPAddressResponseArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressResponsePtrInput interface {
	pulumi.Input

	ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput
	ToPublicIPAddressResponsePtrOutputWithContext(context.Context) PublicIPAddressResponsePtrOutput
}

type publicIPAddressResponsePtrType PublicIPAddressResponseArgs

func PublicIPAddressResponsePtr(v *PublicIPAddressResponseArgs) PublicIPAddressResponsePtrInput {
	return (*publicIPAddressResponsePtrType)(v)
}

func (*publicIPAddressResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressResponse)(nil)).Elem()
}

func (i *publicIPAddressResponsePtrType) ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput {
	return i.ToPublicIPAddressResponsePtrOutputWithContext(context.Background())
}

func (i *publicIPAddressResponsePtrType) ToPublicIPAddressResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressResponsePtrOutput)
}

// Public IP address resource.
type PublicIPAddressResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressResponse)(nil)).Elem()
}

func (o PublicIPAddressResponseOutput) ToPublicIPAddressResponseOutput() PublicIPAddressResponseOutput {
	return o
}

func (o PublicIPAddressResponseOutput) ToPublicIPAddressResponseOutputWithContext(ctx context.Context) PublicIPAddressResponseOutput {
	return o
}

func (o PublicIPAddressResponseOutput) ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput {
	return o.ToPublicIPAddressResponsePtrOutputWithContext(context.Background())
}

func (o PublicIPAddressResponseOutput) ToPublicIPAddressResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *PublicIPAddressResponse {
		return &v
	}).(PublicIPAddressResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o PublicIPAddressResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o PublicIPAddressResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o PublicIPAddressResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Public IP address properties.
func (o PublicIPAddressResponseOutput) Properties() PublicIPAddressPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *PublicIPAddressPropertiesFormatResponse { return v.Properties }).(PublicIPAddressPropertiesFormatResponsePtrOutput)
}

// The public IP address SKU.
func (o PublicIPAddressResponseOutput) Sku() PublicIPAddressSkuResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *PublicIPAddressSkuResponse { return v.Sku }).(PublicIPAddressSkuResponsePtrOutput)
}

// Resource tags.
func (o PublicIPAddressResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o PublicIPAddressResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressResponseOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type PublicIPAddressResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressResponse)(nil)).Elem()
}

func (o PublicIPAddressResponsePtrOutput) ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput {
	return o
}

func (o PublicIPAddressResponsePtrOutput) ToPublicIPAddressResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressResponsePtrOutput {
	return o
}

func (o PublicIPAddressResponsePtrOutput) Elem() PublicIPAddressResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) PublicIPAddressResponse { return *v }).(PublicIPAddressResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o PublicIPAddressResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o PublicIPAddressResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o PublicIPAddressResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Public IP address properties.
func (o PublicIPAddressResponsePtrOutput) Properties() PublicIPAddressPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *PublicIPAddressPropertiesFormatResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(PublicIPAddressPropertiesFormatResponsePtrOutput)
}

// The public IP address SKU.
func (o PublicIPAddressResponsePtrOutput) Sku() PublicIPAddressSkuResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *PublicIPAddressSkuResponse {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(PublicIPAddressSkuResponsePtrOutput)
}

// Resource tags.
func (o PublicIPAddressResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o PublicIPAddressResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressResponsePtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

// SKU of a public IP address
type PublicIPAddressSku struct {
	// Name of a public IP address SKU.
	Name *string `pulumi:"name"`
}

// PublicIPAddressSkuInput is an input type that accepts PublicIPAddressSkuArgs and PublicIPAddressSkuOutput values.
// You can construct a concrete instance of `PublicIPAddressSkuInput` via:
//
//          PublicIPAddressSkuArgs{...}
type PublicIPAddressSkuInput interface {
	pulumi.Input

	ToPublicIPAddressSkuOutput() PublicIPAddressSkuOutput
	ToPublicIPAddressSkuOutputWithContext(context.Context) PublicIPAddressSkuOutput
}

// SKU of a public IP address
type PublicIPAddressSkuArgs struct {
	// Name of a public IP address SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PublicIPAddressSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSku)(nil)).Elem()
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuOutput() PublicIPAddressSkuOutput {
	return i.ToPublicIPAddressSkuOutputWithContext(context.Background())
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuOutputWithContext(ctx context.Context) PublicIPAddressSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuOutput)
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return i.ToPublicIPAddressSkuPtrOutputWithContext(context.Background())
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuOutput).ToPublicIPAddressSkuPtrOutputWithContext(ctx)
}

// PublicIPAddressSkuPtrInput is an input type that accepts PublicIPAddressSkuArgs, PublicIPAddressSkuPtr and PublicIPAddressSkuPtrOutput values.
// You can construct a concrete instance of `PublicIPAddressSkuPtrInput` via:
//
//          PublicIPAddressSkuArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressSkuPtrInput interface {
	pulumi.Input

	ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput
	ToPublicIPAddressSkuPtrOutputWithContext(context.Context) PublicIPAddressSkuPtrOutput
}

type publicIPAddressSkuPtrType PublicIPAddressSkuArgs

func PublicIPAddressSkuPtr(v *PublicIPAddressSkuArgs) PublicIPAddressSkuPtrInput {
	return (*publicIPAddressSkuPtrType)(v)
}

func (*publicIPAddressSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSku)(nil)).Elem()
}

func (i *publicIPAddressSkuPtrType) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return i.ToPublicIPAddressSkuPtrOutputWithContext(context.Background())
}

func (i *publicIPAddressSkuPtrType) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuPtrOutput)
}

// SKU of a public IP address
type PublicIPAddressSkuOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSku)(nil)).Elem()
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuOutput() PublicIPAddressSkuOutput {
	return o
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuOutputWithContext(ctx context.Context) PublicIPAddressSkuOutput {
	return o
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return o.ToPublicIPAddressSkuPtrOutputWithContext(context.Background())
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSku) *PublicIPAddressSku {
		return &v
	}).(PublicIPAddressSkuPtrOutput)
}

// Name of a public IP address SKU.
func (o PublicIPAddressSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PublicIPAddressSkuPtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSku)(nil)).Elem()
}

func (o PublicIPAddressSkuPtrOutput) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return o
}

func (o PublicIPAddressSkuPtrOutput) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return o
}

func (o PublicIPAddressSkuPtrOutput) Elem() PublicIPAddressSkuOutput {
	return o.ApplyT(func(v *PublicIPAddressSku) PublicIPAddressSku { return *v }).(PublicIPAddressSkuOutput)
}

// Name of a public IP address SKU.
func (o PublicIPAddressSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// SKU of a public IP address
type PublicIPAddressSkuResponse struct {
	// Name of a public IP address SKU.
	Name *string `pulumi:"name"`
}

// PublicIPAddressSkuResponseInput is an input type that accepts PublicIPAddressSkuResponseArgs and PublicIPAddressSkuResponseOutput values.
// You can construct a concrete instance of `PublicIPAddressSkuResponseInput` via:
//
//          PublicIPAddressSkuResponseArgs{...}
type PublicIPAddressSkuResponseInput interface {
	pulumi.Input

	ToPublicIPAddressSkuResponseOutput() PublicIPAddressSkuResponseOutput
	ToPublicIPAddressSkuResponseOutputWithContext(context.Context) PublicIPAddressSkuResponseOutput
}

// SKU of a public IP address
type PublicIPAddressSkuResponseArgs struct {
	// Name of a public IP address SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PublicIPAddressSkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSkuResponse)(nil)).Elem()
}

func (i PublicIPAddressSkuResponseArgs) ToPublicIPAddressSkuResponseOutput() PublicIPAddressSkuResponseOutput {
	return i.ToPublicIPAddressSkuResponseOutputWithContext(context.Background())
}

func (i PublicIPAddressSkuResponseArgs) ToPublicIPAddressSkuResponseOutputWithContext(ctx context.Context) PublicIPAddressSkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuResponseOutput)
}

func (i PublicIPAddressSkuResponseArgs) ToPublicIPAddressSkuResponsePtrOutput() PublicIPAddressSkuResponsePtrOutput {
	return i.ToPublicIPAddressSkuResponsePtrOutputWithContext(context.Background())
}

func (i PublicIPAddressSkuResponseArgs) ToPublicIPAddressSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuResponseOutput).ToPublicIPAddressSkuResponsePtrOutputWithContext(ctx)
}

// PublicIPAddressSkuResponsePtrInput is an input type that accepts PublicIPAddressSkuResponseArgs, PublicIPAddressSkuResponsePtr and PublicIPAddressSkuResponsePtrOutput values.
// You can construct a concrete instance of `PublicIPAddressSkuResponsePtrInput` via:
//
//          PublicIPAddressSkuResponseArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressSkuResponsePtrInput interface {
	pulumi.Input

	ToPublicIPAddressSkuResponsePtrOutput() PublicIPAddressSkuResponsePtrOutput
	ToPublicIPAddressSkuResponsePtrOutputWithContext(context.Context) PublicIPAddressSkuResponsePtrOutput
}

type publicIPAddressSkuResponsePtrType PublicIPAddressSkuResponseArgs

func PublicIPAddressSkuResponsePtr(v *PublicIPAddressSkuResponseArgs) PublicIPAddressSkuResponsePtrInput {
	return (*publicIPAddressSkuResponsePtrType)(v)
}

func (*publicIPAddressSkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSkuResponse)(nil)).Elem()
}

func (i *publicIPAddressSkuResponsePtrType) ToPublicIPAddressSkuResponsePtrOutput() PublicIPAddressSkuResponsePtrOutput {
	return i.ToPublicIPAddressSkuResponsePtrOutputWithContext(context.Background())
}

func (i *publicIPAddressSkuResponsePtrType) ToPublicIPAddressSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuResponsePtrOutput)
}

// SKU of a public IP address
type PublicIPAddressSkuResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSkuResponse)(nil)).Elem()
}

func (o PublicIPAddressSkuResponseOutput) ToPublicIPAddressSkuResponseOutput() PublicIPAddressSkuResponseOutput {
	return o
}

func (o PublicIPAddressSkuResponseOutput) ToPublicIPAddressSkuResponseOutputWithContext(ctx context.Context) PublicIPAddressSkuResponseOutput {
	return o
}

func (o PublicIPAddressSkuResponseOutput) ToPublicIPAddressSkuResponsePtrOutput() PublicIPAddressSkuResponsePtrOutput {
	return o.ToPublicIPAddressSkuResponsePtrOutputWithContext(context.Background())
}

func (o PublicIPAddressSkuResponseOutput) ToPublicIPAddressSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressSkuResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressSkuResponse) *PublicIPAddressSkuResponse {
		return &v
	}).(PublicIPAddressSkuResponsePtrOutput)
}

// Name of a public IP address SKU.
func (o PublicIPAddressSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PublicIPAddressSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSkuResponse)(nil)).Elem()
}

func (o PublicIPAddressSkuResponsePtrOutput) ToPublicIPAddressSkuResponsePtrOutput() PublicIPAddressSkuResponsePtrOutput {
	return o
}

func (o PublicIPAddressSkuResponsePtrOutput) ToPublicIPAddressSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressSkuResponsePtrOutput {
	return o
}

func (o PublicIPAddressSkuResponsePtrOutput) Elem() PublicIPAddressSkuResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressSkuResponse) PublicIPAddressSkuResponse { return *v }).(PublicIPAddressSkuResponseOutput)
}

// Name of a public IP address SKU.
func (o PublicIPAddressSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Public IP prefix resource.
type PublicIPPrefixType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Public IP prefix properties.
	Properties PublicIPPrefixPropertiesFormatResponse `pulumi:"properties"`
	// The public IP prefix SKU.
	Sku *PublicIPPrefixSkuResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// PublicIPPrefixTypeInput is an input type that accepts PublicIPPrefixTypeArgs and PublicIPPrefixTypeOutput values.
// You can construct a concrete instance of `PublicIPPrefixTypeInput` via:
//
//          PublicIPPrefixTypeArgs{...}
type PublicIPPrefixTypeInput interface {
	pulumi.Input

	ToPublicIPPrefixTypeOutput() PublicIPPrefixTypeOutput
	ToPublicIPPrefixTypeOutputWithContext(context.Context) PublicIPPrefixTypeOutput
}

// Public IP prefix resource.
type PublicIPPrefixTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Public IP prefix properties.
	Properties PublicIPPrefixPropertiesFormatResponseInput `pulumi:"properties"`
	// The public IP prefix SKU.
	Sku PublicIPPrefixSkuResponsePtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (PublicIPPrefixTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPPrefixType)(nil)).Elem()
}

func (i PublicIPPrefixTypeArgs) ToPublicIPPrefixTypeOutput() PublicIPPrefixTypeOutput {
	return i.ToPublicIPPrefixTypeOutputWithContext(context.Background())
}

func (i PublicIPPrefixTypeArgs) ToPublicIPPrefixTypeOutputWithContext(ctx context.Context) PublicIPPrefixTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPPrefixTypeOutput)
}

// Public IP prefix resource.
type PublicIPPrefixTypeOutput struct{ *pulumi.OutputState }

func (PublicIPPrefixTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPPrefixType)(nil)).Elem()
}

func (o PublicIPPrefixTypeOutput) ToPublicIPPrefixTypeOutput() PublicIPPrefixTypeOutput {
	return o
}

func (o PublicIPPrefixTypeOutput) ToPublicIPPrefixTypeOutputWithContext(ctx context.Context) PublicIPPrefixTypeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPPrefixTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o PublicIPPrefixTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o PublicIPPrefixTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPPrefixType) string { return v.Name }).(pulumi.StringOutput)
}

// Public IP prefix properties.
func (o PublicIPPrefixTypeOutput) Properties() PublicIPPrefixPropertiesFormatResponseOutput {
	return o.ApplyT(func(v PublicIPPrefixType) PublicIPPrefixPropertiesFormatResponse { return v.Properties }).(PublicIPPrefixPropertiesFormatResponseOutput)
}

// The public IP prefix SKU.
func (o PublicIPPrefixTypeOutput) Sku() PublicIPPrefixSkuResponsePtrOutput {
	return o.ApplyT(func(v PublicIPPrefixType) *PublicIPPrefixSkuResponse { return v.Sku }).(PublicIPPrefixSkuResponsePtrOutput)
}

// Resource tags.
func (o PublicIPPrefixTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PublicIPPrefixType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o PublicIPPrefixTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPPrefixType) string { return v.Type }).(pulumi.StringOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPPrefixTypeOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PublicIPPrefixType) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

// Public IP prefix properties.
type PublicIPPrefixPropertiesFormat struct {
	// The allocated Prefix
	IpPrefix *string `pulumi:"ipPrefix"`
	// The list of tags associated with the public IP prefix.
	IpTags []IpTag `pulumi:"ipTags"`
	// The Length of the Public IP Prefix.
	PrefixLength *int `pulumi:"prefixLength"`
	// The provisioning state of the Public IP prefix resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
	PublicIPAddressVersion *string `pulumi:"publicIPAddressVersion"`
	// The list of all referenced PublicIPAddresses
	PublicIPAddresses []ReferencedPublicIpAddress `pulumi:"publicIPAddresses"`
	// The resource GUID property of the public IP prefix resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
}

// PublicIPPrefixPropertiesFormatInput is an input type that accepts PublicIPPrefixPropertiesFormatArgs and PublicIPPrefixPropertiesFormatOutput values.
// You can construct a concrete instance of `PublicIPPrefixPropertiesFormatInput` via:
//
//          PublicIPPrefixPropertiesFormatArgs{...}
type PublicIPPrefixPropertiesFormatInput interface {
	pulumi.Input

	ToPublicIPPrefixPropertiesFormatOutput() PublicIPPrefixPropertiesFormatOutput
	ToPublicIPPrefixPropertiesFormatOutputWithContext(context.Context) PublicIPPrefixPropertiesFormatOutput
}

// Public IP prefix properties.
type PublicIPPrefixPropertiesFormatArgs struct {
	// The allocated Prefix
	IpPrefix pulumi.StringPtrInput `pulumi:"ipPrefix"`
	// The list of tags associated with the public IP prefix.
	IpTags IpTagArrayInput `pulumi:"ipTags"`
	// The Length of the Public IP Prefix.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// The provisioning state of the Public IP prefix resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
	PublicIPAddressVersion pulumi.StringPtrInput `pulumi:"publicIPAddressVersion"`
	// The list of all referenced PublicIPAddresses
	PublicIPAddresses ReferencedPublicIpAddressArrayInput `pulumi:"publicIPAddresses"`
	// The resource GUID property of the public IP prefix resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
}

func (PublicIPPrefixPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPPrefixPropertiesFormat)(nil)).Elem()
}

func (i PublicIPPrefixPropertiesFormatArgs) ToPublicIPPrefixPropertiesFormatOutput() PublicIPPrefixPropertiesFormatOutput {
	return i.ToPublicIPPrefixPropertiesFormatOutputWithContext(context.Background())
}

func (i PublicIPPrefixPropertiesFormatArgs) ToPublicIPPrefixPropertiesFormatOutputWithContext(ctx context.Context) PublicIPPrefixPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPPrefixPropertiesFormatOutput)
}

func (i PublicIPPrefixPropertiesFormatArgs) ToPublicIPPrefixPropertiesFormatPtrOutput() PublicIPPrefixPropertiesFormatPtrOutput {
	return i.ToPublicIPPrefixPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i PublicIPPrefixPropertiesFormatArgs) ToPublicIPPrefixPropertiesFormatPtrOutputWithContext(ctx context.Context) PublicIPPrefixPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPPrefixPropertiesFormatOutput).ToPublicIPPrefixPropertiesFormatPtrOutputWithContext(ctx)
}

// PublicIPPrefixPropertiesFormatPtrInput is an input type that accepts PublicIPPrefixPropertiesFormatArgs, PublicIPPrefixPropertiesFormatPtr and PublicIPPrefixPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `PublicIPPrefixPropertiesFormatPtrInput` via:
//
//          PublicIPPrefixPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type PublicIPPrefixPropertiesFormatPtrInput interface {
	pulumi.Input

	ToPublicIPPrefixPropertiesFormatPtrOutput() PublicIPPrefixPropertiesFormatPtrOutput
	ToPublicIPPrefixPropertiesFormatPtrOutputWithContext(context.Context) PublicIPPrefixPropertiesFormatPtrOutput
}

type publicIPPrefixPropertiesFormatPtrType PublicIPPrefixPropertiesFormatArgs

func PublicIPPrefixPropertiesFormatPtr(v *PublicIPPrefixPropertiesFormatArgs) PublicIPPrefixPropertiesFormatPtrInput {
	return (*publicIPPrefixPropertiesFormatPtrType)(v)
}

func (*publicIPPrefixPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPPrefixPropertiesFormat)(nil)).Elem()
}

func (i *publicIPPrefixPropertiesFormatPtrType) ToPublicIPPrefixPropertiesFormatPtrOutput() PublicIPPrefixPropertiesFormatPtrOutput {
	return i.ToPublicIPPrefixPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *publicIPPrefixPropertiesFormatPtrType) ToPublicIPPrefixPropertiesFormatPtrOutputWithContext(ctx context.Context) PublicIPPrefixPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPPrefixPropertiesFormatPtrOutput)
}

// Public IP prefix properties.
type PublicIPPrefixPropertiesFormatOutput struct{ *pulumi.OutputState }

func (PublicIPPrefixPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPPrefixPropertiesFormat)(nil)).Elem()
}

func (o PublicIPPrefixPropertiesFormatOutput) ToPublicIPPrefixPropertiesFormatOutput() PublicIPPrefixPropertiesFormatOutput {
	return o
}

func (o PublicIPPrefixPropertiesFormatOutput) ToPublicIPPrefixPropertiesFormatOutputWithContext(ctx context.Context) PublicIPPrefixPropertiesFormatOutput {
	return o
}

func (o PublicIPPrefixPropertiesFormatOutput) ToPublicIPPrefixPropertiesFormatPtrOutput() PublicIPPrefixPropertiesFormatPtrOutput {
	return o.ToPublicIPPrefixPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o PublicIPPrefixPropertiesFormatOutput) ToPublicIPPrefixPropertiesFormatPtrOutputWithContext(ctx context.Context) PublicIPPrefixPropertiesFormatPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixPropertiesFormat) *PublicIPPrefixPropertiesFormat {
		return &v
	}).(PublicIPPrefixPropertiesFormatPtrOutput)
}

// The allocated Prefix
func (o PublicIPPrefixPropertiesFormatOutput) IpPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixPropertiesFormat) *string { return v.IpPrefix }).(pulumi.StringPtrOutput)
}

// The list of tags associated with the public IP prefix.
func (o PublicIPPrefixPropertiesFormatOutput) IpTags() IpTagArrayOutput {
	return o.ApplyT(func(v PublicIPPrefixPropertiesFormat) []IpTag { return v.IpTags }).(IpTagArrayOutput)
}

// The Length of the Public IP Prefix.
func (o PublicIPPrefixPropertiesFormatOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixPropertiesFormat) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// The provisioning state of the Public IP prefix resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o PublicIPPrefixPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
func (o PublicIPPrefixPropertiesFormatOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixPropertiesFormat) *string { return v.PublicIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The list of all referenced PublicIPAddresses
func (o PublicIPPrefixPropertiesFormatOutput) PublicIPAddresses() ReferencedPublicIpAddressArrayOutput {
	return o.ApplyT(func(v PublicIPPrefixPropertiesFormat) []ReferencedPublicIpAddress { return v.PublicIPAddresses }).(ReferencedPublicIpAddressArrayOutput)
}

// The resource GUID property of the public IP prefix resource.
func (o PublicIPPrefixPropertiesFormatOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixPropertiesFormat) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

type PublicIPPrefixPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (PublicIPPrefixPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPPrefixPropertiesFormat)(nil)).Elem()
}

func (o PublicIPPrefixPropertiesFormatPtrOutput) ToPublicIPPrefixPropertiesFormatPtrOutput() PublicIPPrefixPropertiesFormatPtrOutput {
	return o
}

func (o PublicIPPrefixPropertiesFormatPtrOutput) ToPublicIPPrefixPropertiesFormatPtrOutputWithContext(ctx context.Context) PublicIPPrefixPropertiesFormatPtrOutput {
	return o
}

func (o PublicIPPrefixPropertiesFormatPtrOutput) Elem() PublicIPPrefixPropertiesFormatOutput {
	return o.ApplyT(func(v *PublicIPPrefixPropertiesFormat) PublicIPPrefixPropertiesFormat { return *v }).(PublicIPPrefixPropertiesFormatOutput)
}

// The allocated Prefix
func (o PublicIPPrefixPropertiesFormatPtrOutput) IpPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPPrefixPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.IpPrefix
	}).(pulumi.StringPtrOutput)
}

// The list of tags associated with the public IP prefix.
func (o PublicIPPrefixPropertiesFormatPtrOutput) IpTags() IpTagArrayOutput {
	return o.ApplyT(func(v *PublicIPPrefixPropertiesFormat) []IpTag {
		if v == nil {
			return nil
		}
		return v.IpTags
	}).(IpTagArrayOutput)
}

// The Length of the Public IP Prefix.
func (o PublicIPPrefixPropertiesFormatPtrOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PublicIPPrefixPropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.PrefixLength
	}).(pulumi.IntPtrOutput)
}

// The provisioning state of the Public IP prefix resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o PublicIPPrefixPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPPrefixPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
func (o PublicIPPrefixPropertiesFormatPtrOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPPrefixPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The list of all referenced PublicIPAddresses
func (o PublicIPPrefixPropertiesFormatPtrOutput) PublicIPAddresses() ReferencedPublicIpAddressArrayOutput {
	return o.ApplyT(func(v *PublicIPPrefixPropertiesFormat) []ReferencedPublicIpAddress {
		if v == nil {
			return nil
		}
		return v.PublicIPAddresses
	}).(ReferencedPublicIpAddressArrayOutput)
}

// The resource GUID property of the public IP prefix resource.
func (o PublicIPPrefixPropertiesFormatPtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPPrefixPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Public IP prefix properties.
type PublicIPPrefixPropertiesFormatResponse struct {
	// The allocated Prefix
	IpPrefix *string `pulumi:"ipPrefix"`
	// The list of tags associated with the public IP prefix.
	IpTags []IpTagResponse `pulumi:"ipTags"`
	// The reference to load balancer frontend IP configuration associated with the public IP prefix.
	LoadBalancerFrontendIpConfiguration SubResourceResponse `pulumi:"loadBalancerFrontendIpConfiguration"`
	// The Length of the Public IP Prefix.
	PrefixLength *int `pulumi:"prefixLength"`
	// The provisioning state of the Public IP prefix resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
	PublicIPAddressVersion *string `pulumi:"publicIPAddressVersion"`
	// The list of all referenced PublicIPAddresses
	PublicIPAddresses []ReferencedPublicIpAddressResponse `pulumi:"publicIPAddresses"`
	// The resource GUID property of the public IP prefix resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
}

// PublicIPPrefixPropertiesFormatResponseInput is an input type that accepts PublicIPPrefixPropertiesFormatResponseArgs and PublicIPPrefixPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `PublicIPPrefixPropertiesFormatResponseInput` via:
//
//          PublicIPPrefixPropertiesFormatResponseArgs{...}
type PublicIPPrefixPropertiesFormatResponseInput interface {
	pulumi.Input

	ToPublicIPPrefixPropertiesFormatResponseOutput() PublicIPPrefixPropertiesFormatResponseOutput
	ToPublicIPPrefixPropertiesFormatResponseOutputWithContext(context.Context) PublicIPPrefixPropertiesFormatResponseOutput
}

// Public IP prefix properties.
type PublicIPPrefixPropertiesFormatResponseArgs struct {
	// The allocated Prefix
	IpPrefix pulumi.StringPtrInput `pulumi:"ipPrefix"`
	// The list of tags associated with the public IP prefix.
	IpTags IpTagResponseArrayInput `pulumi:"ipTags"`
	// The reference to load balancer frontend IP configuration associated with the public IP prefix.
	LoadBalancerFrontendIpConfiguration SubResourceResponseInput `pulumi:"loadBalancerFrontendIpConfiguration"`
	// The Length of the Public IP Prefix.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// The provisioning state of the Public IP prefix resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
	PublicIPAddressVersion pulumi.StringPtrInput `pulumi:"publicIPAddressVersion"`
	// The list of all referenced PublicIPAddresses
	PublicIPAddresses ReferencedPublicIpAddressResponseArrayInput `pulumi:"publicIPAddresses"`
	// The resource GUID property of the public IP prefix resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
}

func (PublicIPPrefixPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPPrefixPropertiesFormatResponse)(nil)).Elem()
}

func (i PublicIPPrefixPropertiesFormatResponseArgs) ToPublicIPPrefixPropertiesFormatResponseOutput() PublicIPPrefixPropertiesFormatResponseOutput {
	return i.ToPublicIPPrefixPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i PublicIPPrefixPropertiesFormatResponseArgs) ToPublicIPPrefixPropertiesFormatResponseOutputWithContext(ctx context.Context) PublicIPPrefixPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPPrefixPropertiesFormatResponseOutput)
}

func (i PublicIPPrefixPropertiesFormatResponseArgs) ToPublicIPPrefixPropertiesFormatResponsePtrOutput() PublicIPPrefixPropertiesFormatResponsePtrOutput {
	return i.ToPublicIPPrefixPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i PublicIPPrefixPropertiesFormatResponseArgs) ToPublicIPPrefixPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) PublicIPPrefixPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPPrefixPropertiesFormatResponseOutput).ToPublicIPPrefixPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// PublicIPPrefixPropertiesFormatResponsePtrInput is an input type that accepts PublicIPPrefixPropertiesFormatResponseArgs, PublicIPPrefixPropertiesFormatResponsePtr and PublicIPPrefixPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `PublicIPPrefixPropertiesFormatResponsePtrInput` via:
//
//          PublicIPPrefixPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type PublicIPPrefixPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToPublicIPPrefixPropertiesFormatResponsePtrOutput() PublicIPPrefixPropertiesFormatResponsePtrOutput
	ToPublicIPPrefixPropertiesFormatResponsePtrOutputWithContext(context.Context) PublicIPPrefixPropertiesFormatResponsePtrOutput
}

type publicIPPrefixPropertiesFormatResponsePtrType PublicIPPrefixPropertiesFormatResponseArgs

func PublicIPPrefixPropertiesFormatResponsePtr(v *PublicIPPrefixPropertiesFormatResponseArgs) PublicIPPrefixPropertiesFormatResponsePtrInput {
	return (*publicIPPrefixPropertiesFormatResponsePtrType)(v)
}

func (*publicIPPrefixPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPPrefixPropertiesFormatResponse)(nil)).Elem()
}

func (i *publicIPPrefixPropertiesFormatResponsePtrType) ToPublicIPPrefixPropertiesFormatResponsePtrOutput() PublicIPPrefixPropertiesFormatResponsePtrOutput {
	return i.ToPublicIPPrefixPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *publicIPPrefixPropertiesFormatResponsePtrType) ToPublicIPPrefixPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) PublicIPPrefixPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPPrefixPropertiesFormatResponsePtrOutput)
}

// Public IP prefix properties.
type PublicIPPrefixPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (PublicIPPrefixPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPPrefixPropertiesFormatResponse)(nil)).Elem()
}

func (o PublicIPPrefixPropertiesFormatResponseOutput) ToPublicIPPrefixPropertiesFormatResponseOutput() PublicIPPrefixPropertiesFormatResponseOutput {
	return o
}

func (o PublicIPPrefixPropertiesFormatResponseOutput) ToPublicIPPrefixPropertiesFormatResponseOutputWithContext(ctx context.Context) PublicIPPrefixPropertiesFormatResponseOutput {
	return o
}

func (o PublicIPPrefixPropertiesFormatResponseOutput) ToPublicIPPrefixPropertiesFormatResponsePtrOutput() PublicIPPrefixPropertiesFormatResponsePtrOutput {
	return o.ToPublicIPPrefixPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o PublicIPPrefixPropertiesFormatResponseOutput) ToPublicIPPrefixPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) PublicIPPrefixPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v PublicIPPrefixPropertiesFormatResponse) *PublicIPPrefixPropertiesFormatResponse {
		return &v
	}).(PublicIPPrefixPropertiesFormatResponsePtrOutput)
}

// The allocated Prefix
func (o PublicIPPrefixPropertiesFormatResponseOutput) IpPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixPropertiesFormatResponse) *string { return v.IpPrefix }).(pulumi.StringPtrOutput)
}

// The list of tags associated with the public IP prefix.
func (o PublicIPPrefixPropertiesFormatResponseOutput) IpTags() IpTagResponseArrayOutput {
	return o.ApplyT(func(v PublicIPPrefixPropertiesFormatResponse) []IpTagResponse { return v.IpTags }).(IpTagResponseArrayOutput)
}

// The reference to load balancer frontend IP configuration associated with the public IP prefix.
func (o PublicIPPrefixPropertiesFormatResponseOutput) LoadBalancerFrontendIpConfiguration() SubResourceResponseOutput {
	return o.ApplyT(func(v PublicIPPrefixPropertiesFormatResponse) SubResourceResponse {
		return v.LoadBalancerFrontendIpConfiguration
	}).(SubResourceResponseOutput)
}

// The Length of the Public IP Prefix.
func (o PublicIPPrefixPropertiesFormatResponseOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixPropertiesFormatResponse) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// The provisioning state of the Public IP prefix resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o PublicIPPrefixPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
func (o PublicIPPrefixPropertiesFormatResponseOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixPropertiesFormatResponse) *string { return v.PublicIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The list of all referenced PublicIPAddresses
func (o PublicIPPrefixPropertiesFormatResponseOutput) PublicIPAddresses() ReferencedPublicIpAddressResponseArrayOutput {
	return o.ApplyT(func(v PublicIPPrefixPropertiesFormatResponse) []ReferencedPublicIpAddressResponse {
		return v.PublicIPAddresses
	}).(ReferencedPublicIpAddressResponseArrayOutput)
}

// The resource GUID property of the public IP prefix resource.
func (o PublicIPPrefixPropertiesFormatResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixPropertiesFormatResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

type PublicIPPrefixPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPPrefixPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPPrefixPropertiesFormatResponse)(nil)).Elem()
}

func (o PublicIPPrefixPropertiesFormatResponsePtrOutput) ToPublicIPPrefixPropertiesFormatResponsePtrOutput() PublicIPPrefixPropertiesFormatResponsePtrOutput {
	return o
}

func (o PublicIPPrefixPropertiesFormatResponsePtrOutput) ToPublicIPPrefixPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) PublicIPPrefixPropertiesFormatResponsePtrOutput {
	return o
}

func (o PublicIPPrefixPropertiesFormatResponsePtrOutput) Elem() PublicIPPrefixPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *PublicIPPrefixPropertiesFormatResponse) PublicIPPrefixPropertiesFormatResponse { return *v }).(PublicIPPrefixPropertiesFormatResponseOutput)
}

// The allocated Prefix
func (o PublicIPPrefixPropertiesFormatResponsePtrOutput) IpPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPPrefixPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.IpPrefix
	}).(pulumi.StringPtrOutput)
}

// The list of tags associated with the public IP prefix.
func (o PublicIPPrefixPropertiesFormatResponsePtrOutput) IpTags() IpTagResponseArrayOutput {
	return o.ApplyT(func(v *PublicIPPrefixPropertiesFormatResponse) []IpTagResponse {
		if v == nil {
			return nil
		}
		return v.IpTags
	}).(IpTagResponseArrayOutput)
}

// The reference to load balancer frontend IP configuration associated with the public IP prefix.
func (o PublicIPPrefixPropertiesFormatResponsePtrOutput) LoadBalancerFrontendIpConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPPrefixPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return &v.LoadBalancerFrontendIpConfiguration
	}).(SubResourceResponsePtrOutput)
}

// The Length of the Public IP Prefix.
func (o PublicIPPrefixPropertiesFormatResponsePtrOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PublicIPPrefixPropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.PrefixLength
	}).(pulumi.IntPtrOutput)
}

// The provisioning state of the Public IP prefix resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o PublicIPPrefixPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPPrefixPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
func (o PublicIPPrefixPropertiesFormatResponsePtrOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPPrefixPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The list of all referenced PublicIPAddresses
func (o PublicIPPrefixPropertiesFormatResponsePtrOutput) PublicIPAddresses() ReferencedPublicIpAddressResponseArrayOutput {
	return o.ApplyT(func(v *PublicIPPrefixPropertiesFormatResponse) []ReferencedPublicIpAddressResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddresses
	}).(ReferencedPublicIpAddressResponseArrayOutput)
}

// The resource GUID property of the public IP prefix resource.
func (o PublicIPPrefixPropertiesFormatResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPPrefixPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// SKU of a public IP prefix
type PublicIPPrefixSku struct {
	// Name of a public IP prefix SKU.
	Name *string `pulumi:"name"`
}

// PublicIPPrefixSkuInput is an input type that accepts PublicIPPrefixSkuArgs and PublicIPPrefixSkuOutput values.
// You can construct a concrete instance of `PublicIPPrefixSkuInput` via:
//
//          PublicIPPrefixSkuArgs{...}
type PublicIPPrefixSkuInput interface {
	pulumi.Input

	ToPublicIPPrefixSkuOutput() PublicIPPrefixSkuOutput
	ToPublicIPPrefixSkuOutputWithContext(context.Context) PublicIPPrefixSkuOutput
}

// SKU of a public IP prefix
type PublicIPPrefixSkuArgs struct {
	// Name of a public IP prefix SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PublicIPPrefixSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPPrefixSku)(nil)).Elem()
}

func (i PublicIPPrefixSkuArgs) ToPublicIPPrefixSkuOutput() PublicIPPrefixSkuOutput {
	return i.ToPublicIPPrefixSkuOutputWithContext(context.Background())
}

func (i PublicIPPrefixSkuArgs) ToPublicIPPrefixSkuOutputWithContext(ctx context.Context) PublicIPPrefixSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPPrefixSkuOutput)
}

func (i PublicIPPrefixSkuArgs) ToPublicIPPrefixSkuPtrOutput() PublicIPPrefixSkuPtrOutput {
	return i.ToPublicIPPrefixSkuPtrOutputWithContext(context.Background())
}

func (i PublicIPPrefixSkuArgs) ToPublicIPPrefixSkuPtrOutputWithContext(ctx context.Context) PublicIPPrefixSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPPrefixSkuOutput).ToPublicIPPrefixSkuPtrOutputWithContext(ctx)
}

// PublicIPPrefixSkuPtrInput is an input type that accepts PublicIPPrefixSkuArgs, PublicIPPrefixSkuPtr and PublicIPPrefixSkuPtrOutput values.
// You can construct a concrete instance of `PublicIPPrefixSkuPtrInput` via:
//
//          PublicIPPrefixSkuArgs{...}
//
//  or:
//
//          nil
type PublicIPPrefixSkuPtrInput interface {
	pulumi.Input

	ToPublicIPPrefixSkuPtrOutput() PublicIPPrefixSkuPtrOutput
	ToPublicIPPrefixSkuPtrOutputWithContext(context.Context) PublicIPPrefixSkuPtrOutput
}

type publicIPPrefixSkuPtrType PublicIPPrefixSkuArgs

func PublicIPPrefixSkuPtr(v *PublicIPPrefixSkuArgs) PublicIPPrefixSkuPtrInput {
	return (*publicIPPrefixSkuPtrType)(v)
}

func (*publicIPPrefixSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPPrefixSku)(nil)).Elem()
}

func (i *publicIPPrefixSkuPtrType) ToPublicIPPrefixSkuPtrOutput() PublicIPPrefixSkuPtrOutput {
	return i.ToPublicIPPrefixSkuPtrOutputWithContext(context.Background())
}

func (i *publicIPPrefixSkuPtrType) ToPublicIPPrefixSkuPtrOutputWithContext(ctx context.Context) PublicIPPrefixSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPPrefixSkuPtrOutput)
}

// SKU of a public IP prefix
type PublicIPPrefixSkuOutput struct{ *pulumi.OutputState }

func (PublicIPPrefixSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPPrefixSku)(nil)).Elem()
}

func (o PublicIPPrefixSkuOutput) ToPublicIPPrefixSkuOutput() PublicIPPrefixSkuOutput {
	return o
}

func (o PublicIPPrefixSkuOutput) ToPublicIPPrefixSkuOutputWithContext(ctx context.Context) PublicIPPrefixSkuOutput {
	return o
}

func (o PublicIPPrefixSkuOutput) ToPublicIPPrefixSkuPtrOutput() PublicIPPrefixSkuPtrOutput {
	return o.ToPublicIPPrefixSkuPtrOutputWithContext(context.Background())
}

func (o PublicIPPrefixSkuOutput) ToPublicIPPrefixSkuPtrOutputWithContext(ctx context.Context) PublicIPPrefixSkuPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixSku) *PublicIPPrefixSku {
		return &v
	}).(PublicIPPrefixSkuPtrOutput)
}

// Name of a public IP prefix SKU.
func (o PublicIPPrefixSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PublicIPPrefixSkuPtrOutput struct{ *pulumi.OutputState }

func (PublicIPPrefixSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPPrefixSku)(nil)).Elem()
}

func (o PublicIPPrefixSkuPtrOutput) ToPublicIPPrefixSkuPtrOutput() PublicIPPrefixSkuPtrOutput {
	return o
}

func (o PublicIPPrefixSkuPtrOutput) ToPublicIPPrefixSkuPtrOutputWithContext(ctx context.Context) PublicIPPrefixSkuPtrOutput {
	return o
}

func (o PublicIPPrefixSkuPtrOutput) Elem() PublicIPPrefixSkuOutput {
	return o.ApplyT(func(v *PublicIPPrefixSku) PublicIPPrefixSku { return *v }).(PublicIPPrefixSkuOutput)
}

// Name of a public IP prefix SKU.
func (o PublicIPPrefixSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPPrefixSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// SKU of a public IP prefix
type PublicIPPrefixSkuResponse struct {
	// Name of a public IP prefix SKU.
	Name *string `pulumi:"name"`
}

// PublicIPPrefixSkuResponseInput is an input type that accepts PublicIPPrefixSkuResponseArgs and PublicIPPrefixSkuResponseOutput values.
// You can construct a concrete instance of `PublicIPPrefixSkuResponseInput` via:
//
//          PublicIPPrefixSkuResponseArgs{...}
type PublicIPPrefixSkuResponseInput interface {
	pulumi.Input

	ToPublicIPPrefixSkuResponseOutput() PublicIPPrefixSkuResponseOutput
	ToPublicIPPrefixSkuResponseOutputWithContext(context.Context) PublicIPPrefixSkuResponseOutput
}

// SKU of a public IP prefix
type PublicIPPrefixSkuResponseArgs struct {
	// Name of a public IP prefix SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PublicIPPrefixSkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPPrefixSkuResponse)(nil)).Elem()
}

func (i PublicIPPrefixSkuResponseArgs) ToPublicIPPrefixSkuResponseOutput() PublicIPPrefixSkuResponseOutput {
	return i.ToPublicIPPrefixSkuResponseOutputWithContext(context.Background())
}

func (i PublicIPPrefixSkuResponseArgs) ToPublicIPPrefixSkuResponseOutputWithContext(ctx context.Context) PublicIPPrefixSkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPPrefixSkuResponseOutput)
}

func (i PublicIPPrefixSkuResponseArgs) ToPublicIPPrefixSkuResponsePtrOutput() PublicIPPrefixSkuResponsePtrOutput {
	return i.ToPublicIPPrefixSkuResponsePtrOutputWithContext(context.Background())
}

func (i PublicIPPrefixSkuResponseArgs) ToPublicIPPrefixSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPPrefixSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPPrefixSkuResponseOutput).ToPublicIPPrefixSkuResponsePtrOutputWithContext(ctx)
}

// PublicIPPrefixSkuResponsePtrInput is an input type that accepts PublicIPPrefixSkuResponseArgs, PublicIPPrefixSkuResponsePtr and PublicIPPrefixSkuResponsePtrOutput values.
// You can construct a concrete instance of `PublicIPPrefixSkuResponsePtrInput` via:
//
//          PublicIPPrefixSkuResponseArgs{...}
//
//  or:
//
//          nil
type PublicIPPrefixSkuResponsePtrInput interface {
	pulumi.Input

	ToPublicIPPrefixSkuResponsePtrOutput() PublicIPPrefixSkuResponsePtrOutput
	ToPublicIPPrefixSkuResponsePtrOutputWithContext(context.Context) PublicIPPrefixSkuResponsePtrOutput
}

type publicIPPrefixSkuResponsePtrType PublicIPPrefixSkuResponseArgs

func PublicIPPrefixSkuResponsePtr(v *PublicIPPrefixSkuResponseArgs) PublicIPPrefixSkuResponsePtrInput {
	return (*publicIPPrefixSkuResponsePtrType)(v)
}

func (*publicIPPrefixSkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPPrefixSkuResponse)(nil)).Elem()
}

func (i *publicIPPrefixSkuResponsePtrType) ToPublicIPPrefixSkuResponsePtrOutput() PublicIPPrefixSkuResponsePtrOutput {
	return i.ToPublicIPPrefixSkuResponsePtrOutputWithContext(context.Background())
}

func (i *publicIPPrefixSkuResponsePtrType) ToPublicIPPrefixSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPPrefixSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPPrefixSkuResponsePtrOutput)
}

// SKU of a public IP prefix
type PublicIPPrefixSkuResponseOutput struct{ *pulumi.OutputState }

func (PublicIPPrefixSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPPrefixSkuResponse)(nil)).Elem()
}

func (o PublicIPPrefixSkuResponseOutput) ToPublicIPPrefixSkuResponseOutput() PublicIPPrefixSkuResponseOutput {
	return o
}

func (o PublicIPPrefixSkuResponseOutput) ToPublicIPPrefixSkuResponseOutputWithContext(ctx context.Context) PublicIPPrefixSkuResponseOutput {
	return o
}

func (o PublicIPPrefixSkuResponseOutput) ToPublicIPPrefixSkuResponsePtrOutput() PublicIPPrefixSkuResponsePtrOutput {
	return o.ToPublicIPPrefixSkuResponsePtrOutputWithContext(context.Background())
}

func (o PublicIPPrefixSkuResponseOutput) ToPublicIPPrefixSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPPrefixSkuResponsePtrOutput {
	return o.ApplyT(func(v PublicIPPrefixSkuResponse) *PublicIPPrefixSkuResponse {
		return &v
	}).(PublicIPPrefixSkuResponsePtrOutput)
}

// Name of a public IP prefix SKU.
func (o PublicIPPrefixSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PublicIPPrefixSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPPrefixSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPPrefixSkuResponse)(nil)).Elem()
}

func (o PublicIPPrefixSkuResponsePtrOutput) ToPublicIPPrefixSkuResponsePtrOutput() PublicIPPrefixSkuResponsePtrOutput {
	return o
}

func (o PublicIPPrefixSkuResponsePtrOutput) ToPublicIPPrefixSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPPrefixSkuResponsePtrOutput {
	return o
}

func (o PublicIPPrefixSkuResponsePtrOutput) Elem() PublicIPPrefixSkuResponseOutput {
	return o.ApplyT(func(v *PublicIPPrefixSkuResponse) PublicIPPrefixSkuResponse { return *v }).(PublicIPPrefixSkuResponseOutput)
}

// Name of a public IP prefix SKU.
func (o PublicIPPrefixSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPPrefixSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type ReferencedPublicIpAddress struct {
	// The PublicIPAddress Reference
	Id *string `pulumi:"id"`
}

// ReferencedPublicIpAddressInput is an input type that accepts ReferencedPublicIpAddressArgs and ReferencedPublicIpAddressOutput values.
// You can construct a concrete instance of `ReferencedPublicIpAddressInput` via:
//
//          ReferencedPublicIpAddressArgs{...}
type ReferencedPublicIpAddressInput interface {
	pulumi.Input

	ToReferencedPublicIpAddressOutput() ReferencedPublicIpAddressOutput
	ToReferencedPublicIpAddressOutputWithContext(context.Context) ReferencedPublicIpAddressOutput
}

type ReferencedPublicIpAddressArgs struct {
	// The PublicIPAddress Reference
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ReferencedPublicIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferencedPublicIpAddress)(nil)).Elem()
}

func (i ReferencedPublicIpAddressArgs) ToReferencedPublicIpAddressOutput() ReferencedPublicIpAddressOutput {
	return i.ToReferencedPublicIpAddressOutputWithContext(context.Background())
}

func (i ReferencedPublicIpAddressArgs) ToReferencedPublicIpAddressOutputWithContext(ctx context.Context) ReferencedPublicIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferencedPublicIpAddressOutput)
}

// ReferencedPublicIpAddressArrayInput is an input type that accepts ReferencedPublicIpAddressArray and ReferencedPublicIpAddressArrayOutput values.
// You can construct a concrete instance of `ReferencedPublicIpAddressArrayInput` via:
//
//          ReferencedPublicIpAddressArray{ ReferencedPublicIpAddressArgs{...} }
type ReferencedPublicIpAddressArrayInput interface {
	pulumi.Input

	ToReferencedPublicIpAddressArrayOutput() ReferencedPublicIpAddressArrayOutput
	ToReferencedPublicIpAddressArrayOutputWithContext(context.Context) ReferencedPublicIpAddressArrayOutput
}

type ReferencedPublicIpAddressArray []ReferencedPublicIpAddressInput

func (ReferencedPublicIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferencedPublicIpAddress)(nil)).Elem()
}

func (i ReferencedPublicIpAddressArray) ToReferencedPublicIpAddressArrayOutput() ReferencedPublicIpAddressArrayOutput {
	return i.ToReferencedPublicIpAddressArrayOutputWithContext(context.Background())
}

func (i ReferencedPublicIpAddressArray) ToReferencedPublicIpAddressArrayOutputWithContext(ctx context.Context) ReferencedPublicIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferencedPublicIpAddressArrayOutput)
}

type ReferencedPublicIpAddressOutput struct{ *pulumi.OutputState }

func (ReferencedPublicIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferencedPublicIpAddress)(nil)).Elem()
}

func (o ReferencedPublicIpAddressOutput) ToReferencedPublicIpAddressOutput() ReferencedPublicIpAddressOutput {
	return o
}

func (o ReferencedPublicIpAddressOutput) ToReferencedPublicIpAddressOutputWithContext(ctx context.Context) ReferencedPublicIpAddressOutput {
	return o
}

// The PublicIPAddress Reference
func (o ReferencedPublicIpAddressOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferencedPublicIpAddress) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ReferencedPublicIpAddressArrayOutput struct{ *pulumi.OutputState }

func (ReferencedPublicIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferencedPublicIpAddress)(nil)).Elem()
}

func (o ReferencedPublicIpAddressArrayOutput) ToReferencedPublicIpAddressArrayOutput() ReferencedPublicIpAddressArrayOutput {
	return o
}

func (o ReferencedPublicIpAddressArrayOutput) ToReferencedPublicIpAddressArrayOutputWithContext(ctx context.Context) ReferencedPublicIpAddressArrayOutput {
	return o
}

func (o ReferencedPublicIpAddressArrayOutput) Index(i pulumi.IntInput) ReferencedPublicIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReferencedPublicIpAddress {
		return vs[0].([]ReferencedPublicIpAddress)[vs[1].(int)]
	}).(ReferencedPublicIpAddressOutput)
}

type ReferencedPublicIpAddressResponse struct {
	// The PublicIPAddress Reference
	Id *string `pulumi:"id"`
}

// ReferencedPublicIpAddressResponseInput is an input type that accepts ReferencedPublicIpAddressResponseArgs and ReferencedPublicIpAddressResponseOutput values.
// You can construct a concrete instance of `ReferencedPublicIpAddressResponseInput` via:
//
//          ReferencedPublicIpAddressResponseArgs{...}
type ReferencedPublicIpAddressResponseInput interface {
	pulumi.Input

	ToReferencedPublicIpAddressResponseOutput() ReferencedPublicIpAddressResponseOutput
	ToReferencedPublicIpAddressResponseOutputWithContext(context.Context) ReferencedPublicIpAddressResponseOutput
}

type ReferencedPublicIpAddressResponseArgs struct {
	// The PublicIPAddress Reference
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ReferencedPublicIpAddressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferencedPublicIpAddressResponse)(nil)).Elem()
}

func (i ReferencedPublicIpAddressResponseArgs) ToReferencedPublicIpAddressResponseOutput() ReferencedPublicIpAddressResponseOutput {
	return i.ToReferencedPublicIpAddressResponseOutputWithContext(context.Background())
}

func (i ReferencedPublicIpAddressResponseArgs) ToReferencedPublicIpAddressResponseOutputWithContext(ctx context.Context) ReferencedPublicIpAddressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferencedPublicIpAddressResponseOutput)
}

// ReferencedPublicIpAddressResponseArrayInput is an input type that accepts ReferencedPublicIpAddressResponseArray and ReferencedPublicIpAddressResponseArrayOutput values.
// You can construct a concrete instance of `ReferencedPublicIpAddressResponseArrayInput` via:
//
//          ReferencedPublicIpAddressResponseArray{ ReferencedPublicIpAddressResponseArgs{...} }
type ReferencedPublicIpAddressResponseArrayInput interface {
	pulumi.Input

	ToReferencedPublicIpAddressResponseArrayOutput() ReferencedPublicIpAddressResponseArrayOutput
	ToReferencedPublicIpAddressResponseArrayOutputWithContext(context.Context) ReferencedPublicIpAddressResponseArrayOutput
}

type ReferencedPublicIpAddressResponseArray []ReferencedPublicIpAddressResponseInput

func (ReferencedPublicIpAddressResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferencedPublicIpAddressResponse)(nil)).Elem()
}

func (i ReferencedPublicIpAddressResponseArray) ToReferencedPublicIpAddressResponseArrayOutput() ReferencedPublicIpAddressResponseArrayOutput {
	return i.ToReferencedPublicIpAddressResponseArrayOutputWithContext(context.Background())
}

func (i ReferencedPublicIpAddressResponseArray) ToReferencedPublicIpAddressResponseArrayOutputWithContext(ctx context.Context) ReferencedPublicIpAddressResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferencedPublicIpAddressResponseArrayOutput)
}

type ReferencedPublicIpAddressResponseOutput struct{ *pulumi.OutputState }

func (ReferencedPublicIpAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferencedPublicIpAddressResponse)(nil)).Elem()
}

func (o ReferencedPublicIpAddressResponseOutput) ToReferencedPublicIpAddressResponseOutput() ReferencedPublicIpAddressResponseOutput {
	return o
}

func (o ReferencedPublicIpAddressResponseOutput) ToReferencedPublicIpAddressResponseOutputWithContext(ctx context.Context) ReferencedPublicIpAddressResponseOutput {
	return o
}

// The PublicIPAddress Reference
func (o ReferencedPublicIpAddressResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferencedPublicIpAddressResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ReferencedPublicIpAddressResponseArrayOutput struct{ *pulumi.OutputState }

func (ReferencedPublicIpAddressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferencedPublicIpAddressResponse)(nil)).Elem()
}

func (o ReferencedPublicIpAddressResponseArrayOutput) ToReferencedPublicIpAddressResponseArrayOutput() ReferencedPublicIpAddressResponseArrayOutput {
	return o
}

func (o ReferencedPublicIpAddressResponseArrayOutput) ToReferencedPublicIpAddressResponseArrayOutputWithContext(ctx context.Context) ReferencedPublicIpAddressResponseArrayOutput {
	return o
}

func (o ReferencedPublicIpAddressResponseArrayOutput) Index(i pulumi.IntInput) ReferencedPublicIpAddressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReferencedPublicIpAddressResponse {
		return vs[0].([]ReferencedPublicIpAddressResponse)[vs[1].(int)]
	}).(ReferencedPublicIpAddressResponseOutput)
}

// ResourceNavigationLink resource.
type ResourceNavigationLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Resource navigation link properties format.
	Properties *ResourceNavigationLinkFormat `pulumi:"properties"`
}

// ResourceNavigationLinkInput is an input type that accepts ResourceNavigationLinkArgs and ResourceNavigationLinkOutput values.
// You can construct a concrete instance of `ResourceNavigationLinkInput` via:
//
//          ResourceNavigationLinkArgs{...}
type ResourceNavigationLinkInput interface {
	pulumi.Input

	ToResourceNavigationLinkOutput() ResourceNavigationLinkOutput
	ToResourceNavigationLinkOutputWithContext(context.Context) ResourceNavigationLinkOutput
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Resource navigation link properties format.
	Properties ResourceNavigationLinkFormatPtrInput `pulumi:"properties"`
}

func (ResourceNavigationLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLink)(nil)).Elem()
}

func (i ResourceNavigationLinkArgs) ToResourceNavigationLinkOutput() ResourceNavigationLinkOutput {
	return i.ToResourceNavigationLinkOutputWithContext(context.Background())
}

func (i ResourceNavigationLinkArgs) ToResourceNavigationLinkOutputWithContext(ctx context.Context) ResourceNavigationLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceNavigationLinkOutput)
}

// ResourceNavigationLinkArrayInput is an input type that accepts ResourceNavigationLinkArray and ResourceNavigationLinkArrayOutput values.
// You can construct a concrete instance of `ResourceNavigationLinkArrayInput` via:
//
//          ResourceNavigationLinkArray{ ResourceNavigationLinkArgs{...} }
type ResourceNavigationLinkArrayInput interface {
	pulumi.Input

	ToResourceNavigationLinkArrayOutput() ResourceNavigationLinkArrayOutput
	ToResourceNavigationLinkArrayOutputWithContext(context.Context) ResourceNavigationLinkArrayOutput
}

type ResourceNavigationLinkArray []ResourceNavigationLinkInput

func (ResourceNavigationLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceNavigationLink)(nil)).Elem()
}

func (i ResourceNavigationLinkArray) ToResourceNavigationLinkArrayOutput() ResourceNavigationLinkArrayOutput {
	return i.ToResourceNavigationLinkArrayOutputWithContext(context.Background())
}

func (i ResourceNavigationLinkArray) ToResourceNavigationLinkArrayOutputWithContext(ctx context.Context) ResourceNavigationLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceNavigationLinkArrayOutput)
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLink)(nil)).Elem()
}

func (o ResourceNavigationLinkOutput) ToResourceNavigationLinkOutput() ResourceNavigationLinkOutput {
	return o
}

func (o ResourceNavigationLinkOutput) ToResourceNavigationLinkOutputWithContext(ctx context.Context) ResourceNavigationLinkOutput {
	return o
}

// Resource ID.
func (o ResourceNavigationLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ResourceNavigationLinkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLink) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Resource navigation link properties format.
func (o ResourceNavigationLinkOutput) Properties() ResourceNavigationLinkFormatPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLink) *ResourceNavigationLinkFormat { return v.Properties }).(ResourceNavigationLinkFormatPtrOutput)
}

type ResourceNavigationLinkArrayOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceNavigationLink)(nil)).Elem()
}

func (o ResourceNavigationLinkArrayOutput) ToResourceNavigationLinkArrayOutput() ResourceNavigationLinkArrayOutput {
	return o
}

func (o ResourceNavigationLinkArrayOutput) ToResourceNavigationLinkArrayOutputWithContext(ctx context.Context) ResourceNavigationLinkArrayOutput {
	return o
}

func (o ResourceNavigationLinkArrayOutput) Index(i pulumi.IntInput) ResourceNavigationLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceNavigationLink {
		return vs[0].([]ResourceNavigationLink)[vs[1].(int)]
	}).(ResourceNavigationLinkOutput)
}

// Properties of ResourceNavigationLink.
type ResourceNavigationLinkFormat struct {
	// Link to the external resource
	Link *string `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType *string `pulumi:"linkedResourceType"`
}

// ResourceNavigationLinkFormatInput is an input type that accepts ResourceNavigationLinkFormatArgs and ResourceNavigationLinkFormatOutput values.
// You can construct a concrete instance of `ResourceNavigationLinkFormatInput` via:
//
//          ResourceNavigationLinkFormatArgs{...}
type ResourceNavigationLinkFormatInput interface {
	pulumi.Input

	ToResourceNavigationLinkFormatOutput() ResourceNavigationLinkFormatOutput
	ToResourceNavigationLinkFormatOutputWithContext(context.Context) ResourceNavigationLinkFormatOutput
}

// Properties of ResourceNavigationLink.
type ResourceNavigationLinkFormatArgs struct {
	// Link to the external resource
	Link pulumi.StringPtrInput `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType pulumi.StringPtrInput `pulumi:"linkedResourceType"`
}

func (ResourceNavigationLinkFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLinkFormat)(nil)).Elem()
}

func (i ResourceNavigationLinkFormatArgs) ToResourceNavigationLinkFormatOutput() ResourceNavigationLinkFormatOutput {
	return i.ToResourceNavigationLinkFormatOutputWithContext(context.Background())
}

func (i ResourceNavigationLinkFormatArgs) ToResourceNavigationLinkFormatOutputWithContext(ctx context.Context) ResourceNavigationLinkFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceNavigationLinkFormatOutput)
}

func (i ResourceNavigationLinkFormatArgs) ToResourceNavigationLinkFormatPtrOutput() ResourceNavigationLinkFormatPtrOutput {
	return i.ToResourceNavigationLinkFormatPtrOutputWithContext(context.Background())
}

func (i ResourceNavigationLinkFormatArgs) ToResourceNavigationLinkFormatPtrOutputWithContext(ctx context.Context) ResourceNavigationLinkFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceNavigationLinkFormatOutput).ToResourceNavigationLinkFormatPtrOutputWithContext(ctx)
}

// ResourceNavigationLinkFormatPtrInput is an input type that accepts ResourceNavigationLinkFormatArgs, ResourceNavigationLinkFormatPtr and ResourceNavigationLinkFormatPtrOutput values.
// You can construct a concrete instance of `ResourceNavigationLinkFormatPtrInput` via:
//
//          ResourceNavigationLinkFormatArgs{...}
//
//  or:
//
//          nil
type ResourceNavigationLinkFormatPtrInput interface {
	pulumi.Input

	ToResourceNavigationLinkFormatPtrOutput() ResourceNavigationLinkFormatPtrOutput
	ToResourceNavigationLinkFormatPtrOutputWithContext(context.Context) ResourceNavigationLinkFormatPtrOutput
}

type resourceNavigationLinkFormatPtrType ResourceNavigationLinkFormatArgs

func ResourceNavigationLinkFormatPtr(v *ResourceNavigationLinkFormatArgs) ResourceNavigationLinkFormatPtrInput {
	return (*resourceNavigationLinkFormatPtrType)(v)
}

func (*resourceNavigationLinkFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceNavigationLinkFormat)(nil)).Elem()
}

func (i *resourceNavigationLinkFormatPtrType) ToResourceNavigationLinkFormatPtrOutput() ResourceNavigationLinkFormatPtrOutput {
	return i.ToResourceNavigationLinkFormatPtrOutputWithContext(context.Background())
}

func (i *resourceNavigationLinkFormatPtrType) ToResourceNavigationLinkFormatPtrOutputWithContext(ctx context.Context) ResourceNavigationLinkFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceNavigationLinkFormatPtrOutput)
}

// Properties of ResourceNavigationLink.
type ResourceNavigationLinkFormatOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLinkFormat)(nil)).Elem()
}

func (o ResourceNavigationLinkFormatOutput) ToResourceNavigationLinkFormatOutput() ResourceNavigationLinkFormatOutput {
	return o
}

func (o ResourceNavigationLinkFormatOutput) ToResourceNavigationLinkFormatOutputWithContext(ctx context.Context) ResourceNavigationLinkFormatOutput {
	return o
}

func (o ResourceNavigationLinkFormatOutput) ToResourceNavigationLinkFormatPtrOutput() ResourceNavigationLinkFormatPtrOutput {
	return o.ToResourceNavigationLinkFormatPtrOutputWithContext(context.Background())
}

func (o ResourceNavigationLinkFormatOutput) ToResourceNavigationLinkFormatPtrOutputWithContext(ctx context.Context) ResourceNavigationLinkFormatPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkFormat) *ResourceNavigationLinkFormat {
		return &v
	}).(ResourceNavigationLinkFormatPtrOutput)
}

// Link to the external resource
func (o ResourceNavigationLinkFormatOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkFormat) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ResourceNavigationLinkFormatOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkFormat) *string { return v.LinkedResourceType }).(pulumi.StringPtrOutput)
}

type ResourceNavigationLinkFormatPtrOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceNavigationLinkFormat)(nil)).Elem()
}

func (o ResourceNavigationLinkFormatPtrOutput) ToResourceNavigationLinkFormatPtrOutput() ResourceNavigationLinkFormatPtrOutput {
	return o
}

func (o ResourceNavigationLinkFormatPtrOutput) ToResourceNavigationLinkFormatPtrOutputWithContext(ctx context.Context) ResourceNavigationLinkFormatPtrOutput {
	return o
}

func (o ResourceNavigationLinkFormatPtrOutput) Elem() ResourceNavigationLinkFormatOutput {
	return o.ApplyT(func(v *ResourceNavigationLinkFormat) ResourceNavigationLinkFormat { return *v }).(ResourceNavigationLinkFormatOutput)
}

// Link to the external resource
func (o ResourceNavigationLinkFormatPtrOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceNavigationLinkFormat) *string {
		if v == nil {
			return nil
		}
		return v.Link
	}).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ResourceNavigationLinkFormatPtrOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceNavigationLinkFormat) *string {
		if v == nil {
			return nil
		}
		return v.LinkedResourceType
	}).(pulumi.StringPtrOutput)
}

// Properties of ResourceNavigationLink.
type ResourceNavigationLinkFormatResponse struct {
	// Link to the external resource
	Link *string `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType *string `pulumi:"linkedResourceType"`
	// Provisioning state of the ResourceNavigationLink resource.
	ProvisioningState string `pulumi:"provisioningState"`
}

// ResourceNavigationLinkFormatResponseInput is an input type that accepts ResourceNavigationLinkFormatResponseArgs and ResourceNavigationLinkFormatResponseOutput values.
// You can construct a concrete instance of `ResourceNavigationLinkFormatResponseInput` via:
//
//          ResourceNavigationLinkFormatResponseArgs{...}
type ResourceNavigationLinkFormatResponseInput interface {
	pulumi.Input

	ToResourceNavigationLinkFormatResponseOutput() ResourceNavigationLinkFormatResponseOutput
	ToResourceNavigationLinkFormatResponseOutputWithContext(context.Context) ResourceNavigationLinkFormatResponseOutput
}

// Properties of ResourceNavigationLink.
type ResourceNavigationLinkFormatResponseArgs struct {
	// Link to the external resource
	Link pulumi.StringPtrInput `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType pulumi.StringPtrInput `pulumi:"linkedResourceType"`
	// Provisioning state of the ResourceNavigationLink resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (ResourceNavigationLinkFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLinkFormatResponse)(nil)).Elem()
}

func (i ResourceNavigationLinkFormatResponseArgs) ToResourceNavigationLinkFormatResponseOutput() ResourceNavigationLinkFormatResponseOutput {
	return i.ToResourceNavigationLinkFormatResponseOutputWithContext(context.Background())
}

func (i ResourceNavigationLinkFormatResponseArgs) ToResourceNavigationLinkFormatResponseOutputWithContext(ctx context.Context) ResourceNavigationLinkFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceNavigationLinkFormatResponseOutput)
}

func (i ResourceNavigationLinkFormatResponseArgs) ToResourceNavigationLinkFormatResponsePtrOutput() ResourceNavigationLinkFormatResponsePtrOutput {
	return i.ToResourceNavigationLinkFormatResponsePtrOutputWithContext(context.Background())
}

func (i ResourceNavigationLinkFormatResponseArgs) ToResourceNavigationLinkFormatResponsePtrOutputWithContext(ctx context.Context) ResourceNavigationLinkFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceNavigationLinkFormatResponseOutput).ToResourceNavigationLinkFormatResponsePtrOutputWithContext(ctx)
}

// ResourceNavigationLinkFormatResponsePtrInput is an input type that accepts ResourceNavigationLinkFormatResponseArgs, ResourceNavigationLinkFormatResponsePtr and ResourceNavigationLinkFormatResponsePtrOutput values.
// You can construct a concrete instance of `ResourceNavigationLinkFormatResponsePtrInput` via:
//
//          ResourceNavigationLinkFormatResponseArgs{...}
//
//  or:
//
//          nil
type ResourceNavigationLinkFormatResponsePtrInput interface {
	pulumi.Input

	ToResourceNavigationLinkFormatResponsePtrOutput() ResourceNavigationLinkFormatResponsePtrOutput
	ToResourceNavigationLinkFormatResponsePtrOutputWithContext(context.Context) ResourceNavigationLinkFormatResponsePtrOutput
}

type resourceNavigationLinkFormatResponsePtrType ResourceNavigationLinkFormatResponseArgs

func ResourceNavigationLinkFormatResponsePtr(v *ResourceNavigationLinkFormatResponseArgs) ResourceNavigationLinkFormatResponsePtrInput {
	return (*resourceNavigationLinkFormatResponsePtrType)(v)
}

func (*resourceNavigationLinkFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceNavigationLinkFormatResponse)(nil)).Elem()
}

func (i *resourceNavigationLinkFormatResponsePtrType) ToResourceNavigationLinkFormatResponsePtrOutput() ResourceNavigationLinkFormatResponsePtrOutput {
	return i.ToResourceNavigationLinkFormatResponsePtrOutputWithContext(context.Background())
}

func (i *resourceNavigationLinkFormatResponsePtrType) ToResourceNavigationLinkFormatResponsePtrOutputWithContext(ctx context.Context) ResourceNavigationLinkFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceNavigationLinkFormatResponsePtrOutput)
}

// Properties of ResourceNavigationLink.
type ResourceNavigationLinkFormatResponseOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLinkFormatResponse)(nil)).Elem()
}

func (o ResourceNavigationLinkFormatResponseOutput) ToResourceNavigationLinkFormatResponseOutput() ResourceNavigationLinkFormatResponseOutput {
	return o
}

func (o ResourceNavigationLinkFormatResponseOutput) ToResourceNavigationLinkFormatResponseOutputWithContext(ctx context.Context) ResourceNavigationLinkFormatResponseOutput {
	return o
}

func (o ResourceNavigationLinkFormatResponseOutput) ToResourceNavigationLinkFormatResponsePtrOutput() ResourceNavigationLinkFormatResponsePtrOutput {
	return o.ToResourceNavigationLinkFormatResponsePtrOutputWithContext(context.Background())
}

func (o ResourceNavigationLinkFormatResponseOutput) ToResourceNavigationLinkFormatResponsePtrOutputWithContext(ctx context.Context) ResourceNavigationLinkFormatResponsePtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkFormatResponse) *ResourceNavigationLinkFormatResponse {
		return &v
	}).(ResourceNavigationLinkFormatResponsePtrOutput)
}

// Link to the external resource
func (o ResourceNavigationLinkFormatResponseOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkFormatResponse) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ResourceNavigationLinkFormatResponseOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkFormatResponse) *string { return v.LinkedResourceType }).(pulumi.StringPtrOutput)
}

// Provisioning state of the ResourceNavigationLink resource.
func (o ResourceNavigationLinkFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type ResourceNavigationLinkFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceNavigationLinkFormatResponse)(nil)).Elem()
}

func (o ResourceNavigationLinkFormatResponsePtrOutput) ToResourceNavigationLinkFormatResponsePtrOutput() ResourceNavigationLinkFormatResponsePtrOutput {
	return o
}

func (o ResourceNavigationLinkFormatResponsePtrOutput) ToResourceNavigationLinkFormatResponsePtrOutputWithContext(ctx context.Context) ResourceNavigationLinkFormatResponsePtrOutput {
	return o
}

func (o ResourceNavigationLinkFormatResponsePtrOutput) Elem() ResourceNavigationLinkFormatResponseOutput {
	return o.ApplyT(func(v *ResourceNavigationLinkFormatResponse) ResourceNavigationLinkFormatResponse { return *v }).(ResourceNavigationLinkFormatResponseOutput)
}

// Link to the external resource
func (o ResourceNavigationLinkFormatResponsePtrOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceNavigationLinkFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.Link
	}).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ResourceNavigationLinkFormatResponsePtrOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceNavigationLinkFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.LinkedResourceType
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the ResourceNavigationLink resource.
func (o ResourceNavigationLinkFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceNavigationLinkFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Resource navigation link properties format.
	Properties *ResourceNavigationLinkFormatResponse `pulumi:"properties"`
}

// ResourceNavigationLinkResponseInput is an input type that accepts ResourceNavigationLinkResponseArgs and ResourceNavigationLinkResponseOutput values.
// You can construct a concrete instance of `ResourceNavigationLinkResponseInput` via:
//
//          ResourceNavigationLinkResponseArgs{...}
type ResourceNavigationLinkResponseInput interface {
	pulumi.Input

	ToResourceNavigationLinkResponseOutput() ResourceNavigationLinkResponseOutput
	ToResourceNavigationLinkResponseOutputWithContext(context.Context) ResourceNavigationLinkResponseOutput
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Resource navigation link properties format.
	Properties ResourceNavigationLinkFormatResponsePtrInput `pulumi:"properties"`
}

func (ResourceNavigationLinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLinkResponse)(nil)).Elem()
}

func (i ResourceNavigationLinkResponseArgs) ToResourceNavigationLinkResponseOutput() ResourceNavigationLinkResponseOutput {
	return i.ToResourceNavigationLinkResponseOutputWithContext(context.Background())
}

func (i ResourceNavigationLinkResponseArgs) ToResourceNavigationLinkResponseOutputWithContext(ctx context.Context) ResourceNavigationLinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceNavigationLinkResponseOutput)
}

// ResourceNavigationLinkResponseArrayInput is an input type that accepts ResourceNavigationLinkResponseArray and ResourceNavigationLinkResponseArrayOutput values.
// You can construct a concrete instance of `ResourceNavigationLinkResponseArrayInput` via:
//
//          ResourceNavigationLinkResponseArray{ ResourceNavigationLinkResponseArgs{...} }
type ResourceNavigationLinkResponseArrayInput interface {
	pulumi.Input

	ToResourceNavigationLinkResponseArrayOutput() ResourceNavigationLinkResponseArrayOutput
	ToResourceNavigationLinkResponseArrayOutputWithContext(context.Context) ResourceNavigationLinkResponseArrayOutput
}

type ResourceNavigationLinkResponseArray []ResourceNavigationLinkResponseInput

func (ResourceNavigationLinkResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceNavigationLinkResponse)(nil)).Elem()
}

func (i ResourceNavigationLinkResponseArray) ToResourceNavigationLinkResponseArrayOutput() ResourceNavigationLinkResponseArrayOutput {
	return i.ToResourceNavigationLinkResponseArrayOutputWithContext(context.Background())
}

func (i ResourceNavigationLinkResponseArray) ToResourceNavigationLinkResponseArrayOutputWithContext(ctx context.Context) ResourceNavigationLinkResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceNavigationLinkResponseArrayOutput)
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkResponseOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLinkResponse)(nil)).Elem()
}

func (o ResourceNavigationLinkResponseOutput) ToResourceNavigationLinkResponseOutput() ResourceNavigationLinkResponseOutput {
	return o
}

func (o ResourceNavigationLinkResponseOutput) ToResourceNavigationLinkResponseOutputWithContext(ctx context.Context) ResourceNavigationLinkResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ResourceNavigationLinkResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ResourceNavigationLinkResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ResourceNavigationLinkResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Resource navigation link properties format.
func (o ResourceNavigationLinkResponseOutput) Properties() ResourceNavigationLinkFormatResponsePtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) *ResourceNavigationLinkFormatResponse { return v.Properties }).(ResourceNavigationLinkFormatResponsePtrOutput)
}

type ResourceNavigationLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceNavigationLinkResponse)(nil)).Elem()
}

func (o ResourceNavigationLinkResponseArrayOutput) ToResourceNavigationLinkResponseArrayOutput() ResourceNavigationLinkResponseArrayOutput {
	return o
}

func (o ResourceNavigationLinkResponseArrayOutput) ToResourceNavigationLinkResponseArrayOutputWithContext(ctx context.Context) ResourceNavigationLinkResponseArrayOutput {
	return o
}

func (o ResourceNavigationLinkResponseArrayOutput) Index(i pulumi.IntInput) ResourceNavigationLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceNavigationLinkResponse {
		return vs[0].([]ResourceNavigationLinkResponse)[vs[1].(int)]
	}).(ResourceNavigationLinkResponseOutput)
}

// Route resource
type RouteType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the route.
	Properties *RoutePropertiesFormat `pulumi:"properties"`
}

// RouteTypeInput is an input type that accepts RouteTypeArgs and RouteTypeOutput values.
// You can construct a concrete instance of `RouteTypeInput` via:
//
//          RouteTypeArgs{...}
type RouteTypeInput interface {
	pulumi.Input

	ToRouteTypeOutput() RouteTypeOutput
	ToRouteTypeOutputWithContext(context.Context) RouteTypeOutput
}

// Route resource
type RouteTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the route.
	Properties RoutePropertiesFormatPtrInput `pulumi:"properties"`
}

func (RouteTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteType)(nil)).Elem()
}

func (i RouteTypeArgs) ToRouteTypeOutput() RouteTypeOutput {
	return i.ToRouteTypeOutputWithContext(context.Background())
}

func (i RouteTypeArgs) ToRouteTypeOutputWithContext(ctx context.Context) RouteTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTypeOutput)
}

// RouteTypeArrayInput is an input type that accepts RouteTypeArray and RouteTypeArrayOutput values.
// You can construct a concrete instance of `RouteTypeArrayInput` via:
//
//          RouteTypeArray{ RouteTypeArgs{...} }
type RouteTypeArrayInput interface {
	pulumi.Input

	ToRouteTypeArrayOutput() RouteTypeArrayOutput
	ToRouteTypeArrayOutputWithContext(context.Context) RouteTypeArrayOutput
}

type RouteTypeArray []RouteTypeInput

func (RouteTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteType)(nil)).Elem()
}

func (i RouteTypeArray) ToRouteTypeArrayOutput() RouteTypeArrayOutput {
	return i.ToRouteTypeArrayOutputWithContext(context.Background())
}

func (i RouteTypeArray) ToRouteTypeArrayOutputWithContext(ctx context.Context) RouteTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTypeArrayOutput)
}

// Route resource
type RouteTypeOutput struct{ *pulumi.OutputState }

func (RouteTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteType)(nil)).Elem()
}

func (o RouteTypeOutput) ToRouteTypeOutput() RouteTypeOutput {
	return o
}

func (o RouteTypeOutput) ToRouteTypeOutputWithContext(ctx context.Context) RouteTypeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the route.
func (o RouteTypeOutput) Properties() RoutePropertiesFormatPtrOutput {
	return o.ApplyT(func(v RouteType) *RoutePropertiesFormat { return v.Properties }).(RoutePropertiesFormatPtrOutput)
}

type RouteTypeArrayOutput struct{ *pulumi.OutputState }

func (RouteTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteType)(nil)).Elem()
}

func (o RouteTypeArrayOutput) ToRouteTypeArrayOutput() RouteTypeArrayOutput {
	return o
}

func (o RouteTypeArrayOutput) ToRouteTypeArrayOutputWithContext(ctx context.Context) RouteTypeArrayOutput {
	return o
}

func (o RouteTypeArrayOutput) Index(i pulumi.IntInput) RouteTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteType {
		return vs[0].([]RouteType)[vs[1].(int)]
	}).(RouteTypeOutput)
}

// Route Filter Resource.
type RouteFilterType struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource location.
	Location string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Route Filter Resource
	Properties RouteFilterPropertiesFormatResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// RouteFilterTypeInput is an input type that accepts RouteFilterTypeArgs and RouteFilterTypeOutput values.
// You can construct a concrete instance of `RouteFilterTypeInput` via:
//
//          RouteFilterTypeArgs{...}
type RouteFilterTypeInput interface {
	pulumi.Input

	ToRouteFilterTypeOutput() RouteFilterTypeOutput
	ToRouteFilterTypeOutputWithContext(context.Context) RouteFilterTypeOutput
}

// Route Filter Resource.
type RouteFilterTypeArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Route Filter Resource
	Properties RouteFilterPropertiesFormatResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RouteFilterTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterType)(nil)).Elem()
}

func (i RouteFilterTypeArgs) ToRouteFilterTypeOutput() RouteFilterTypeOutput {
	return i.ToRouteFilterTypeOutputWithContext(context.Background())
}

func (i RouteFilterTypeArgs) ToRouteFilterTypeOutputWithContext(ctx context.Context) RouteFilterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterTypeOutput)
}

// Route Filter Resource.
type RouteFilterTypeOutput struct{ *pulumi.OutputState }

func (RouteFilterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterType)(nil)).Elem()
}

func (o RouteFilterTypeOutput) ToRouteFilterTypeOutput() RouteFilterTypeOutput {
	return o
}

func (o RouteFilterTypeOutput) ToRouteFilterTypeOutputWithContext(ctx context.Context) RouteFilterTypeOutput {
	return o
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteFilterTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterType) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource location.
func (o RouteFilterTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name.
func (o RouteFilterTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterType) string { return v.Name }).(pulumi.StringOutput)
}

// Route Filter Resource
func (o RouteFilterTypeOutput) Properties() RouteFilterPropertiesFormatResponseOutput {
	return o.ApplyT(func(v RouteFilterType) RouteFilterPropertiesFormatResponse { return v.Properties }).(RouteFilterPropertiesFormatResponseOutput)
}

// Resource tags.
func (o RouteFilterTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteFilterType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteFilterTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterType) string { return v.Type }).(pulumi.StringOutput)
}

// Route Filter Resource.
type RouteFilterDefinition struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location string `pulumi:"location"`
	// Route Filter Resource
	Properties *RouteFilterPropertiesFormat `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// RouteFilterDefinitionInput is an input type that accepts RouteFilterDefinitionArgs and RouteFilterDefinitionOutput values.
// You can construct a concrete instance of `RouteFilterDefinitionInput` via:
//
//          RouteFilterDefinitionArgs{...}
type RouteFilterDefinitionInput interface {
	pulumi.Input

	ToRouteFilterDefinitionOutput() RouteFilterDefinitionOutput
	ToRouteFilterDefinitionOutputWithContext(context.Context) RouteFilterDefinitionOutput
}

// Route Filter Resource.
type RouteFilterDefinitionArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringInput `pulumi:"location"`
	// Route Filter Resource
	Properties RouteFilterPropertiesFormatPtrInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (RouteFilterDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterDefinition)(nil)).Elem()
}

func (i RouteFilterDefinitionArgs) ToRouteFilterDefinitionOutput() RouteFilterDefinitionOutput {
	return i.ToRouteFilterDefinitionOutputWithContext(context.Background())
}

func (i RouteFilterDefinitionArgs) ToRouteFilterDefinitionOutputWithContext(ctx context.Context) RouteFilterDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterDefinitionOutput)
}

func (i RouteFilterDefinitionArgs) ToRouteFilterDefinitionPtrOutput() RouteFilterDefinitionPtrOutput {
	return i.ToRouteFilterDefinitionPtrOutputWithContext(context.Background())
}

func (i RouteFilterDefinitionArgs) ToRouteFilterDefinitionPtrOutputWithContext(ctx context.Context) RouteFilterDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterDefinitionOutput).ToRouteFilterDefinitionPtrOutputWithContext(ctx)
}

// RouteFilterDefinitionPtrInput is an input type that accepts RouteFilterDefinitionArgs, RouteFilterDefinitionPtr and RouteFilterDefinitionPtrOutput values.
// You can construct a concrete instance of `RouteFilterDefinitionPtrInput` via:
//
//          RouteFilterDefinitionArgs{...}
//
//  or:
//
//          nil
type RouteFilterDefinitionPtrInput interface {
	pulumi.Input

	ToRouteFilterDefinitionPtrOutput() RouteFilterDefinitionPtrOutput
	ToRouteFilterDefinitionPtrOutputWithContext(context.Context) RouteFilterDefinitionPtrOutput
}

type routeFilterDefinitionPtrType RouteFilterDefinitionArgs

func RouteFilterDefinitionPtr(v *RouteFilterDefinitionArgs) RouteFilterDefinitionPtrInput {
	return (*routeFilterDefinitionPtrType)(v)
}

func (*routeFilterDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteFilterDefinition)(nil)).Elem()
}

func (i *routeFilterDefinitionPtrType) ToRouteFilterDefinitionPtrOutput() RouteFilterDefinitionPtrOutput {
	return i.ToRouteFilterDefinitionPtrOutputWithContext(context.Background())
}

func (i *routeFilterDefinitionPtrType) ToRouteFilterDefinitionPtrOutputWithContext(ctx context.Context) RouteFilterDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterDefinitionPtrOutput)
}

// Route Filter Resource.
type RouteFilterDefinitionOutput struct{ *pulumi.OutputState }

func (RouteFilterDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterDefinition)(nil)).Elem()
}

func (o RouteFilterDefinitionOutput) ToRouteFilterDefinitionOutput() RouteFilterDefinitionOutput {
	return o
}

func (o RouteFilterDefinitionOutput) ToRouteFilterDefinitionOutputWithContext(ctx context.Context) RouteFilterDefinitionOutput {
	return o
}

func (o RouteFilterDefinitionOutput) ToRouteFilterDefinitionPtrOutput() RouteFilterDefinitionPtrOutput {
	return o.ToRouteFilterDefinitionPtrOutputWithContext(context.Background())
}

func (o RouteFilterDefinitionOutput) ToRouteFilterDefinitionPtrOutputWithContext(ctx context.Context) RouteFilterDefinitionPtrOutput {
	return o.ApplyT(func(v RouteFilterDefinition) *RouteFilterDefinition {
		return &v
	}).(RouteFilterDefinitionPtrOutput)
}

// Resource ID.
func (o RouteFilterDefinitionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterDefinition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteFilterDefinitionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterDefinition) string { return v.Location }).(pulumi.StringOutput)
}

// Route Filter Resource
func (o RouteFilterDefinitionOutput) Properties() RouteFilterPropertiesFormatPtrOutput {
	return o.ApplyT(func(v RouteFilterDefinition) *RouteFilterPropertiesFormat { return v.Properties }).(RouteFilterPropertiesFormatPtrOutput)
}

// Resource tags.
func (o RouteFilterDefinitionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteFilterDefinition) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type RouteFilterDefinitionPtrOutput struct{ *pulumi.OutputState }

func (RouteFilterDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteFilterDefinition)(nil)).Elem()
}

func (o RouteFilterDefinitionPtrOutput) ToRouteFilterDefinitionPtrOutput() RouteFilterDefinitionPtrOutput {
	return o
}

func (o RouteFilterDefinitionPtrOutput) ToRouteFilterDefinitionPtrOutputWithContext(ctx context.Context) RouteFilterDefinitionPtrOutput {
	return o
}

func (o RouteFilterDefinitionPtrOutput) Elem() RouteFilterDefinitionOutput {
	return o.ApplyT(func(v *RouteFilterDefinition) RouteFilterDefinition { return *v }).(RouteFilterDefinitionOutput)
}

// Resource ID.
func (o RouteFilterDefinitionPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteFilterDefinitionPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

// Route Filter Resource
func (o RouteFilterDefinitionPtrOutput) Properties() RouteFilterPropertiesFormatPtrOutput {
	return o.ApplyT(func(v *RouteFilterDefinition) *RouteFilterPropertiesFormat {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(RouteFilterPropertiesFormatPtrOutput)
}

// Resource tags.
func (o RouteFilterDefinitionPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RouteFilterDefinition) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Route Filter Resource
type RouteFilterPropertiesFormat struct {
	// A collection of references to express route circuit peerings.
	Peerings []ExpressRouteCircuitPeeringType `pulumi:"peerings"`
	// Collection of RouteFilterRules contained within a route filter.
	Rules []RouteFilterRuleType `pulumi:"rules"`
}

// RouteFilterPropertiesFormatInput is an input type that accepts RouteFilterPropertiesFormatArgs and RouteFilterPropertiesFormatOutput values.
// You can construct a concrete instance of `RouteFilterPropertiesFormatInput` via:
//
//          RouteFilterPropertiesFormatArgs{...}
type RouteFilterPropertiesFormatInput interface {
	pulumi.Input

	ToRouteFilterPropertiesFormatOutput() RouteFilterPropertiesFormatOutput
	ToRouteFilterPropertiesFormatOutputWithContext(context.Context) RouteFilterPropertiesFormatOutput
}

// Route Filter Resource
type RouteFilterPropertiesFormatArgs struct {
	// A collection of references to express route circuit peerings.
	Peerings ExpressRouteCircuitPeeringTypeArrayInput `pulumi:"peerings"`
	// Collection of RouteFilterRules contained within a route filter.
	Rules RouteFilterRuleTypeArrayInput `pulumi:"rules"`
}

func (RouteFilterPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterPropertiesFormat)(nil)).Elem()
}

func (i RouteFilterPropertiesFormatArgs) ToRouteFilterPropertiesFormatOutput() RouteFilterPropertiesFormatOutput {
	return i.ToRouteFilterPropertiesFormatOutputWithContext(context.Background())
}

func (i RouteFilterPropertiesFormatArgs) ToRouteFilterPropertiesFormatOutputWithContext(ctx context.Context) RouteFilterPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterPropertiesFormatOutput)
}

func (i RouteFilterPropertiesFormatArgs) ToRouteFilterPropertiesFormatPtrOutput() RouteFilterPropertiesFormatPtrOutput {
	return i.ToRouteFilterPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i RouteFilterPropertiesFormatArgs) ToRouteFilterPropertiesFormatPtrOutputWithContext(ctx context.Context) RouteFilterPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterPropertiesFormatOutput).ToRouteFilterPropertiesFormatPtrOutputWithContext(ctx)
}

// RouteFilterPropertiesFormatPtrInput is an input type that accepts RouteFilterPropertiesFormatArgs, RouteFilterPropertiesFormatPtr and RouteFilterPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `RouteFilterPropertiesFormatPtrInput` via:
//
//          RouteFilterPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type RouteFilterPropertiesFormatPtrInput interface {
	pulumi.Input

	ToRouteFilterPropertiesFormatPtrOutput() RouteFilterPropertiesFormatPtrOutput
	ToRouteFilterPropertiesFormatPtrOutputWithContext(context.Context) RouteFilterPropertiesFormatPtrOutput
}

type routeFilterPropertiesFormatPtrType RouteFilterPropertiesFormatArgs

func RouteFilterPropertiesFormatPtr(v *RouteFilterPropertiesFormatArgs) RouteFilterPropertiesFormatPtrInput {
	return (*routeFilterPropertiesFormatPtrType)(v)
}

func (*routeFilterPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteFilterPropertiesFormat)(nil)).Elem()
}

func (i *routeFilterPropertiesFormatPtrType) ToRouteFilterPropertiesFormatPtrOutput() RouteFilterPropertiesFormatPtrOutput {
	return i.ToRouteFilterPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *routeFilterPropertiesFormatPtrType) ToRouteFilterPropertiesFormatPtrOutputWithContext(ctx context.Context) RouteFilterPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterPropertiesFormatPtrOutput)
}

// Route Filter Resource
type RouteFilterPropertiesFormatOutput struct{ *pulumi.OutputState }

func (RouteFilterPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterPropertiesFormat)(nil)).Elem()
}

func (o RouteFilterPropertiesFormatOutput) ToRouteFilterPropertiesFormatOutput() RouteFilterPropertiesFormatOutput {
	return o
}

func (o RouteFilterPropertiesFormatOutput) ToRouteFilterPropertiesFormatOutputWithContext(ctx context.Context) RouteFilterPropertiesFormatOutput {
	return o
}

func (o RouteFilterPropertiesFormatOutput) ToRouteFilterPropertiesFormatPtrOutput() RouteFilterPropertiesFormatPtrOutput {
	return o.ToRouteFilterPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o RouteFilterPropertiesFormatOutput) ToRouteFilterPropertiesFormatPtrOutputWithContext(ctx context.Context) RouteFilterPropertiesFormatPtrOutput {
	return o.ApplyT(func(v RouteFilterPropertiesFormat) *RouteFilterPropertiesFormat {
		return &v
	}).(RouteFilterPropertiesFormatPtrOutput)
}

// A collection of references to express route circuit peerings.
func (o RouteFilterPropertiesFormatOutput) Peerings() ExpressRouteCircuitPeeringTypeArrayOutput {
	return o.ApplyT(func(v RouteFilterPropertiesFormat) []ExpressRouteCircuitPeeringType { return v.Peerings }).(ExpressRouteCircuitPeeringTypeArrayOutput)
}

// Collection of RouteFilterRules contained within a route filter.
func (o RouteFilterPropertiesFormatOutput) Rules() RouteFilterRuleTypeArrayOutput {
	return o.ApplyT(func(v RouteFilterPropertiesFormat) []RouteFilterRuleType { return v.Rules }).(RouteFilterRuleTypeArrayOutput)
}

type RouteFilterPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (RouteFilterPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteFilterPropertiesFormat)(nil)).Elem()
}

func (o RouteFilterPropertiesFormatPtrOutput) ToRouteFilterPropertiesFormatPtrOutput() RouteFilterPropertiesFormatPtrOutput {
	return o
}

func (o RouteFilterPropertiesFormatPtrOutput) ToRouteFilterPropertiesFormatPtrOutputWithContext(ctx context.Context) RouteFilterPropertiesFormatPtrOutput {
	return o
}

func (o RouteFilterPropertiesFormatPtrOutput) Elem() RouteFilterPropertiesFormatOutput {
	return o.ApplyT(func(v *RouteFilterPropertiesFormat) RouteFilterPropertiesFormat { return *v }).(RouteFilterPropertiesFormatOutput)
}

// A collection of references to express route circuit peerings.
func (o RouteFilterPropertiesFormatPtrOutput) Peerings() ExpressRouteCircuitPeeringTypeArrayOutput {
	return o.ApplyT(func(v *RouteFilterPropertiesFormat) []ExpressRouteCircuitPeeringType {
		if v == nil {
			return nil
		}
		return v.Peerings
	}).(ExpressRouteCircuitPeeringTypeArrayOutput)
}

// Collection of RouteFilterRules contained within a route filter.
func (o RouteFilterPropertiesFormatPtrOutput) Rules() RouteFilterRuleTypeArrayOutput {
	return o.ApplyT(func(v *RouteFilterPropertiesFormat) []RouteFilterRuleType {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(RouteFilterRuleTypeArrayOutput)
}

// Route Filter Resource
type RouteFilterPropertiesFormatResponse struct {
	// A collection of references to express route circuit peerings.
	Peerings []ExpressRouteCircuitPeeringResponse `pulumi:"peerings"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// Collection of RouteFilterRules contained within a route filter.
	Rules []RouteFilterRuleResponse `pulumi:"rules"`
}

// RouteFilterPropertiesFormatResponseInput is an input type that accepts RouteFilterPropertiesFormatResponseArgs and RouteFilterPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `RouteFilterPropertiesFormatResponseInput` via:
//
//          RouteFilterPropertiesFormatResponseArgs{...}
type RouteFilterPropertiesFormatResponseInput interface {
	pulumi.Input

	ToRouteFilterPropertiesFormatResponseOutput() RouteFilterPropertiesFormatResponseOutput
	ToRouteFilterPropertiesFormatResponseOutputWithContext(context.Context) RouteFilterPropertiesFormatResponseOutput
}

// Route Filter Resource
type RouteFilterPropertiesFormatResponseArgs struct {
	// A collection of references to express route circuit peerings.
	Peerings ExpressRouteCircuitPeeringResponseArrayInput `pulumi:"peerings"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Collection of RouteFilterRules contained within a route filter.
	Rules RouteFilterRuleResponseArrayInput `pulumi:"rules"`
}

func (RouteFilterPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterPropertiesFormatResponse)(nil)).Elem()
}

func (i RouteFilterPropertiesFormatResponseArgs) ToRouteFilterPropertiesFormatResponseOutput() RouteFilterPropertiesFormatResponseOutput {
	return i.ToRouteFilterPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i RouteFilterPropertiesFormatResponseArgs) ToRouteFilterPropertiesFormatResponseOutputWithContext(ctx context.Context) RouteFilterPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterPropertiesFormatResponseOutput)
}

func (i RouteFilterPropertiesFormatResponseArgs) ToRouteFilterPropertiesFormatResponsePtrOutput() RouteFilterPropertiesFormatResponsePtrOutput {
	return i.ToRouteFilterPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i RouteFilterPropertiesFormatResponseArgs) ToRouteFilterPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) RouteFilterPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterPropertiesFormatResponseOutput).ToRouteFilterPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// RouteFilterPropertiesFormatResponsePtrInput is an input type that accepts RouteFilterPropertiesFormatResponseArgs, RouteFilterPropertiesFormatResponsePtr and RouteFilterPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `RouteFilterPropertiesFormatResponsePtrInput` via:
//
//          RouteFilterPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type RouteFilterPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToRouteFilterPropertiesFormatResponsePtrOutput() RouteFilterPropertiesFormatResponsePtrOutput
	ToRouteFilterPropertiesFormatResponsePtrOutputWithContext(context.Context) RouteFilterPropertiesFormatResponsePtrOutput
}

type routeFilterPropertiesFormatResponsePtrType RouteFilterPropertiesFormatResponseArgs

func RouteFilterPropertiesFormatResponsePtr(v *RouteFilterPropertiesFormatResponseArgs) RouteFilterPropertiesFormatResponsePtrInput {
	return (*routeFilterPropertiesFormatResponsePtrType)(v)
}

func (*routeFilterPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteFilterPropertiesFormatResponse)(nil)).Elem()
}

func (i *routeFilterPropertiesFormatResponsePtrType) ToRouteFilterPropertiesFormatResponsePtrOutput() RouteFilterPropertiesFormatResponsePtrOutput {
	return i.ToRouteFilterPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *routeFilterPropertiesFormatResponsePtrType) ToRouteFilterPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) RouteFilterPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterPropertiesFormatResponsePtrOutput)
}

// Route Filter Resource
type RouteFilterPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (RouteFilterPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterPropertiesFormatResponse)(nil)).Elem()
}

func (o RouteFilterPropertiesFormatResponseOutput) ToRouteFilterPropertiesFormatResponseOutput() RouteFilterPropertiesFormatResponseOutput {
	return o
}

func (o RouteFilterPropertiesFormatResponseOutput) ToRouteFilterPropertiesFormatResponseOutputWithContext(ctx context.Context) RouteFilterPropertiesFormatResponseOutput {
	return o
}

func (o RouteFilterPropertiesFormatResponseOutput) ToRouteFilterPropertiesFormatResponsePtrOutput() RouteFilterPropertiesFormatResponsePtrOutput {
	return o.ToRouteFilterPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o RouteFilterPropertiesFormatResponseOutput) ToRouteFilterPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) RouteFilterPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v RouteFilterPropertiesFormatResponse) *RouteFilterPropertiesFormatResponse {
		return &v
	}).(RouteFilterPropertiesFormatResponsePtrOutput)
}

// A collection of references to express route circuit peerings.
func (o RouteFilterPropertiesFormatResponseOutput) Peerings() ExpressRouteCircuitPeeringResponseArrayOutput {
	return o.ApplyT(func(v RouteFilterPropertiesFormatResponse) []ExpressRouteCircuitPeeringResponse { return v.Peerings }).(ExpressRouteCircuitPeeringResponseArrayOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.
func (o RouteFilterPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Collection of RouteFilterRules contained within a route filter.
func (o RouteFilterPropertiesFormatResponseOutput) Rules() RouteFilterRuleResponseArrayOutput {
	return o.ApplyT(func(v RouteFilterPropertiesFormatResponse) []RouteFilterRuleResponse { return v.Rules }).(RouteFilterRuleResponseArrayOutput)
}

type RouteFilterPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (RouteFilterPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteFilterPropertiesFormatResponse)(nil)).Elem()
}

func (o RouteFilterPropertiesFormatResponsePtrOutput) ToRouteFilterPropertiesFormatResponsePtrOutput() RouteFilterPropertiesFormatResponsePtrOutput {
	return o
}

func (o RouteFilterPropertiesFormatResponsePtrOutput) ToRouteFilterPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) RouteFilterPropertiesFormatResponsePtrOutput {
	return o
}

func (o RouteFilterPropertiesFormatResponsePtrOutput) Elem() RouteFilterPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *RouteFilterPropertiesFormatResponse) RouteFilterPropertiesFormatResponse { return *v }).(RouteFilterPropertiesFormatResponseOutput)
}

// A collection of references to express route circuit peerings.
func (o RouteFilterPropertiesFormatResponsePtrOutput) Peerings() ExpressRouteCircuitPeeringResponseArrayOutput {
	return o.ApplyT(func(v *RouteFilterPropertiesFormatResponse) []ExpressRouteCircuitPeeringResponse {
		if v == nil {
			return nil
		}
		return v.Peerings
	}).(ExpressRouteCircuitPeeringResponseArrayOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.
func (o RouteFilterPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Collection of RouteFilterRules contained within a route filter.
func (o RouteFilterPropertiesFormatResponsePtrOutput) Rules() RouteFilterRuleResponseArrayOutput {
	return o.ApplyT(func(v *RouteFilterPropertiesFormatResponse) []RouteFilterRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(RouteFilterRuleResponseArrayOutput)
}

// Route Filter Resource.
type RouteFilterResponse struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Route Filter Resource
	Properties *RouteFilterPropertiesFormatResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// RouteFilterResponseInput is an input type that accepts RouteFilterResponseArgs and RouteFilterResponseOutput values.
// You can construct a concrete instance of `RouteFilterResponseInput` via:
//
//          RouteFilterResponseArgs{...}
type RouteFilterResponseInput interface {
	pulumi.Input

	ToRouteFilterResponseOutput() RouteFilterResponseOutput
	ToRouteFilterResponseOutputWithContext(context.Context) RouteFilterResponseOutput
}

// Route Filter Resource.
type RouteFilterResponseArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Route Filter Resource
	Properties RouteFilterPropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RouteFilterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterResponse)(nil)).Elem()
}

func (i RouteFilterResponseArgs) ToRouteFilterResponseOutput() RouteFilterResponseOutput {
	return i.ToRouteFilterResponseOutputWithContext(context.Background())
}

func (i RouteFilterResponseArgs) ToRouteFilterResponseOutputWithContext(ctx context.Context) RouteFilterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterResponseOutput)
}

func (i RouteFilterResponseArgs) ToRouteFilterResponsePtrOutput() RouteFilterResponsePtrOutput {
	return i.ToRouteFilterResponsePtrOutputWithContext(context.Background())
}

func (i RouteFilterResponseArgs) ToRouteFilterResponsePtrOutputWithContext(ctx context.Context) RouteFilterResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterResponseOutput).ToRouteFilterResponsePtrOutputWithContext(ctx)
}

// RouteFilterResponsePtrInput is an input type that accepts RouteFilterResponseArgs, RouteFilterResponsePtr and RouteFilterResponsePtrOutput values.
// You can construct a concrete instance of `RouteFilterResponsePtrInput` via:
//
//          RouteFilterResponseArgs{...}
//
//  or:
//
//          nil
type RouteFilterResponsePtrInput interface {
	pulumi.Input

	ToRouteFilterResponsePtrOutput() RouteFilterResponsePtrOutput
	ToRouteFilterResponsePtrOutputWithContext(context.Context) RouteFilterResponsePtrOutput
}

type routeFilterResponsePtrType RouteFilterResponseArgs

func RouteFilterResponsePtr(v *RouteFilterResponseArgs) RouteFilterResponsePtrInput {
	return (*routeFilterResponsePtrType)(v)
}

func (*routeFilterResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteFilterResponse)(nil)).Elem()
}

func (i *routeFilterResponsePtrType) ToRouteFilterResponsePtrOutput() RouteFilterResponsePtrOutput {
	return i.ToRouteFilterResponsePtrOutputWithContext(context.Background())
}

func (i *routeFilterResponsePtrType) ToRouteFilterResponsePtrOutputWithContext(ctx context.Context) RouteFilterResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterResponsePtrOutput)
}

// Route Filter Resource.
type RouteFilterResponseOutput struct{ *pulumi.OutputState }

func (RouteFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterResponse)(nil)).Elem()
}

func (o RouteFilterResponseOutput) ToRouteFilterResponseOutput() RouteFilterResponseOutput {
	return o
}

func (o RouteFilterResponseOutput) ToRouteFilterResponseOutputWithContext(ctx context.Context) RouteFilterResponseOutput {
	return o
}

func (o RouteFilterResponseOutput) ToRouteFilterResponsePtrOutput() RouteFilterResponsePtrOutput {
	return o.ToRouteFilterResponsePtrOutputWithContext(context.Background())
}

func (o RouteFilterResponseOutput) ToRouteFilterResponsePtrOutputWithContext(ctx context.Context) RouteFilterResponsePtrOutput {
	return o.ApplyT(func(v RouteFilterResponse) *RouteFilterResponse {
		return &v
	}).(RouteFilterResponsePtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteFilterResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o RouteFilterResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteFilterResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name.
func (o RouteFilterResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Route Filter Resource
func (o RouteFilterResponseOutput) Properties() RouteFilterPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v RouteFilterResponse) *RouteFilterPropertiesFormatResponse { return v.Properties }).(RouteFilterPropertiesFormatResponsePtrOutput)
}

// Resource tags.
func (o RouteFilterResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteFilterResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteFilterResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterResponse) string { return v.Type }).(pulumi.StringOutput)
}

type RouteFilterResponsePtrOutput struct{ *pulumi.OutputState }

func (RouteFilterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteFilterResponse)(nil)).Elem()
}

func (o RouteFilterResponsePtrOutput) ToRouteFilterResponsePtrOutput() RouteFilterResponsePtrOutput {
	return o
}

func (o RouteFilterResponsePtrOutput) ToRouteFilterResponsePtrOutputWithContext(ctx context.Context) RouteFilterResponsePtrOutput {
	return o
}

func (o RouteFilterResponsePtrOutput) Elem() RouteFilterResponseOutput {
	return o.ApplyT(func(v *RouteFilterResponse) RouteFilterResponse { return *v }).(RouteFilterResponseOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteFilterResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteFilterResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteFilterResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RouteFilterResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Route Filter Resource
func (o RouteFilterResponsePtrOutput) Properties() RouteFilterPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v *RouteFilterResponse) *RouteFilterPropertiesFormatResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(RouteFilterPropertiesFormatResponsePtrOutput)
}

// Resource tags.
func (o RouteFilterResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RouteFilterResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteFilterResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Route Filter Rule Resource
type RouteFilterRuleType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Route Filter Rule Resource
	Properties RouteFilterRulePropertiesFormatResponse `pulumi:"properties"`
}

// RouteFilterRuleTypeInput is an input type that accepts RouteFilterRuleTypeArgs and RouteFilterRuleTypeOutput values.
// You can construct a concrete instance of `RouteFilterRuleTypeInput` via:
//
//          RouteFilterRuleTypeArgs{...}
type RouteFilterRuleTypeInput interface {
	pulumi.Input

	ToRouteFilterRuleTypeOutput() RouteFilterRuleTypeOutput
	ToRouteFilterRuleTypeOutputWithContext(context.Context) RouteFilterRuleTypeOutput
}

// Route Filter Rule Resource
type RouteFilterRuleTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Route Filter Rule Resource
	Properties RouteFilterRulePropertiesFormatResponseInput `pulumi:"properties"`
}

func (RouteFilterRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRuleType)(nil)).Elem()
}

func (i RouteFilterRuleTypeArgs) ToRouteFilterRuleTypeOutput() RouteFilterRuleTypeOutput {
	return i.ToRouteFilterRuleTypeOutputWithContext(context.Background())
}

func (i RouteFilterRuleTypeArgs) ToRouteFilterRuleTypeOutputWithContext(ctx context.Context) RouteFilterRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRuleTypeOutput)
}

// RouteFilterRuleTypeArrayInput is an input type that accepts RouteFilterRuleTypeArray and RouteFilterRuleTypeArrayOutput values.
// You can construct a concrete instance of `RouteFilterRuleTypeArrayInput` via:
//
//          RouteFilterRuleTypeArray{ RouteFilterRuleTypeArgs{...} }
type RouteFilterRuleTypeArrayInput interface {
	pulumi.Input

	ToRouteFilterRuleTypeArrayOutput() RouteFilterRuleTypeArrayOutput
	ToRouteFilterRuleTypeArrayOutputWithContext(context.Context) RouteFilterRuleTypeArrayOutput
}

type RouteFilterRuleTypeArray []RouteFilterRuleTypeInput

func (RouteFilterRuleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteFilterRuleType)(nil)).Elem()
}

func (i RouteFilterRuleTypeArray) ToRouteFilterRuleTypeArrayOutput() RouteFilterRuleTypeArrayOutput {
	return i.ToRouteFilterRuleTypeArrayOutputWithContext(context.Background())
}

func (i RouteFilterRuleTypeArray) ToRouteFilterRuleTypeArrayOutputWithContext(ctx context.Context) RouteFilterRuleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRuleTypeArrayOutput)
}

// Route Filter Rule Resource
type RouteFilterRuleTypeOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRuleType)(nil)).Elem()
}

func (o RouteFilterRuleTypeOutput) ToRouteFilterRuleTypeOutput() RouteFilterRuleTypeOutput {
	return o
}

func (o RouteFilterRuleTypeOutput) ToRouteFilterRuleTypeOutputWithContext(ctx context.Context) RouteFilterRuleTypeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteFilterRuleTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleType) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource location.
func (o RouteFilterRuleTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteFilterRuleTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Route Filter Rule Resource
func (o RouteFilterRuleTypeOutput) Properties() RouteFilterRulePropertiesFormatResponseOutput {
	return o.ApplyT(func(v RouteFilterRuleType) RouteFilterRulePropertiesFormatResponse { return v.Properties }).(RouteFilterRulePropertiesFormatResponseOutput)
}

type RouteFilterRuleTypeArrayOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteFilterRuleType)(nil)).Elem()
}

func (o RouteFilterRuleTypeArrayOutput) ToRouteFilterRuleTypeArrayOutput() RouteFilterRuleTypeArrayOutput {
	return o
}

func (o RouteFilterRuleTypeArrayOutput) ToRouteFilterRuleTypeArrayOutputWithContext(ctx context.Context) RouteFilterRuleTypeArrayOutput {
	return o
}

func (o RouteFilterRuleTypeArrayOutput) Index(i pulumi.IntInput) RouteFilterRuleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteFilterRuleType {
		return vs[0].([]RouteFilterRuleType)[vs[1].(int)]
	}).(RouteFilterRuleTypeOutput)
}

// Route Filter Rule Resource
type RouteFilterRulePropertiesFormat struct {
	// The access type of the rule. Valid values are: 'Allow', 'Deny'
	Access string `pulumi:"access"`
	// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']
	Communities []string `pulumi:"communities"`
	// The rule type of the rule. Valid value is: 'Community'
	RouteFilterRuleType string `pulumi:"routeFilterRuleType"`
}

// RouteFilterRulePropertiesFormatInput is an input type that accepts RouteFilterRulePropertiesFormatArgs and RouteFilterRulePropertiesFormatOutput values.
// You can construct a concrete instance of `RouteFilterRulePropertiesFormatInput` via:
//
//          RouteFilterRulePropertiesFormatArgs{...}
type RouteFilterRulePropertiesFormatInput interface {
	pulumi.Input

	ToRouteFilterRulePropertiesFormatOutput() RouteFilterRulePropertiesFormatOutput
	ToRouteFilterRulePropertiesFormatOutputWithContext(context.Context) RouteFilterRulePropertiesFormatOutput
}

// Route Filter Rule Resource
type RouteFilterRulePropertiesFormatArgs struct {
	// The access type of the rule. Valid values are: 'Allow', 'Deny'
	Access pulumi.StringInput `pulumi:"access"`
	// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']
	Communities pulumi.StringArrayInput `pulumi:"communities"`
	// The rule type of the rule. Valid value is: 'Community'
	RouteFilterRuleType pulumi.StringInput `pulumi:"routeFilterRuleType"`
}

func (RouteFilterRulePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRulePropertiesFormat)(nil)).Elem()
}

func (i RouteFilterRulePropertiesFormatArgs) ToRouteFilterRulePropertiesFormatOutput() RouteFilterRulePropertiesFormatOutput {
	return i.ToRouteFilterRulePropertiesFormatOutputWithContext(context.Background())
}

func (i RouteFilterRulePropertiesFormatArgs) ToRouteFilterRulePropertiesFormatOutputWithContext(ctx context.Context) RouteFilterRulePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRulePropertiesFormatOutput)
}

func (i RouteFilterRulePropertiesFormatArgs) ToRouteFilterRulePropertiesFormatPtrOutput() RouteFilterRulePropertiesFormatPtrOutput {
	return i.ToRouteFilterRulePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i RouteFilterRulePropertiesFormatArgs) ToRouteFilterRulePropertiesFormatPtrOutputWithContext(ctx context.Context) RouteFilterRulePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRulePropertiesFormatOutput).ToRouteFilterRulePropertiesFormatPtrOutputWithContext(ctx)
}

// RouteFilterRulePropertiesFormatPtrInput is an input type that accepts RouteFilterRulePropertiesFormatArgs, RouteFilterRulePropertiesFormatPtr and RouteFilterRulePropertiesFormatPtrOutput values.
// You can construct a concrete instance of `RouteFilterRulePropertiesFormatPtrInput` via:
//
//          RouteFilterRulePropertiesFormatArgs{...}
//
//  or:
//
//          nil
type RouteFilterRulePropertiesFormatPtrInput interface {
	pulumi.Input

	ToRouteFilterRulePropertiesFormatPtrOutput() RouteFilterRulePropertiesFormatPtrOutput
	ToRouteFilterRulePropertiesFormatPtrOutputWithContext(context.Context) RouteFilterRulePropertiesFormatPtrOutput
}

type routeFilterRulePropertiesFormatPtrType RouteFilterRulePropertiesFormatArgs

func RouteFilterRulePropertiesFormatPtr(v *RouteFilterRulePropertiesFormatArgs) RouteFilterRulePropertiesFormatPtrInput {
	return (*routeFilterRulePropertiesFormatPtrType)(v)
}

func (*routeFilterRulePropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteFilterRulePropertiesFormat)(nil)).Elem()
}

func (i *routeFilterRulePropertiesFormatPtrType) ToRouteFilterRulePropertiesFormatPtrOutput() RouteFilterRulePropertiesFormatPtrOutput {
	return i.ToRouteFilterRulePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *routeFilterRulePropertiesFormatPtrType) ToRouteFilterRulePropertiesFormatPtrOutputWithContext(ctx context.Context) RouteFilterRulePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRulePropertiesFormatPtrOutput)
}

// Route Filter Rule Resource
type RouteFilterRulePropertiesFormatOutput struct{ *pulumi.OutputState }

func (RouteFilterRulePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRulePropertiesFormat)(nil)).Elem()
}

func (o RouteFilterRulePropertiesFormatOutput) ToRouteFilterRulePropertiesFormatOutput() RouteFilterRulePropertiesFormatOutput {
	return o
}

func (o RouteFilterRulePropertiesFormatOutput) ToRouteFilterRulePropertiesFormatOutputWithContext(ctx context.Context) RouteFilterRulePropertiesFormatOutput {
	return o
}

func (o RouteFilterRulePropertiesFormatOutput) ToRouteFilterRulePropertiesFormatPtrOutput() RouteFilterRulePropertiesFormatPtrOutput {
	return o.ToRouteFilterRulePropertiesFormatPtrOutputWithContext(context.Background())
}

func (o RouteFilterRulePropertiesFormatOutput) ToRouteFilterRulePropertiesFormatPtrOutputWithContext(ctx context.Context) RouteFilterRulePropertiesFormatPtrOutput {
	return o.ApplyT(func(v RouteFilterRulePropertiesFormat) *RouteFilterRulePropertiesFormat {
		return &v
	}).(RouteFilterRulePropertiesFormatPtrOutput)
}

// The access type of the rule. Valid values are: 'Allow', 'Deny'
func (o RouteFilterRulePropertiesFormatOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRulePropertiesFormat) string { return v.Access }).(pulumi.StringOutput)
}

// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']
func (o RouteFilterRulePropertiesFormatOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteFilterRulePropertiesFormat) []string { return v.Communities }).(pulumi.StringArrayOutput)
}

// The rule type of the rule. Valid value is: 'Community'
func (o RouteFilterRulePropertiesFormatOutput) RouteFilterRuleType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRulePropertiesFormat) string { return v.RouteFilterRuleType }).(pulumi.StringOutput)
}

type RouteFilterRulePropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (RouteFilterRulePropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteFilterRulePropertiesFormat)(nil)).Elem()
}

func (o RouteFilterRulePropertiesFormatPtrOutput) ToRouteFilterRulePropertiesFormatPtrOutput() RouteFilterRulePropertiesFormatPtrOutput {
	return o
}

func (o RouteFilterRulePropertiesFormatPtrOutput) ToRouteFilterRulePropertiesFormatPtrOutputWithContext(ctx context.Context) RouteFilterRulePropertiesFormatPtrOutput {
	return o
}

func (o RouteFilterRulePropertiesFormatPtrOutput) Elem() RouteFilterRulePropertiesFormatOutput {
	return o.ApplyT(func(v *RouteFilterRulePropertiesFormat) RouteFilterRulePropertiesFormat { return *v }).(RouteFilterRulePropertiesFormatOutput)
}

// The access type of the rule. Valid values are: 'Allow', 'Deny'
func (o RouteFilterRulePropertiesFormatPtrOutput) Access() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterRulePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return &v.Access
	}).(pulumi.StringPtrOutput)
}

// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']
func (o RouteFilterRulePropertiesFormatPtrOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouteFilterRulePropertiesFormat) []string {
		if v == nil {
			return nil
		}
		return v.Communities
	}).(pulumi.StringArrayOutput)
}

// The rule type of the rule. Valid value is: 'Community'
func (o RouteFilterRulePropertiesFormatPtrOutput) RouteFilterRuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterRulePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return &v.RouteFilterRuleType
	}).(pulumi.StringPtrOutput)
}

// Route Filter Rule Resource
type RouteFilterRulePropertiesFormatResponse struct {
	// The access type of the rule. Valid values are: 'Allow', 'Deny'
	Access string `pulumi:"access"`
	// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']
	Communities []string `pulumi:"communities"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The rule type of the rule. Valid value is: 'Community'
	RouteFilterRuleType string `pulumi:"routeFilterRuleType"`
}

// RouteFilterRulePropertiesFormatResponseInput is an input type that accepts RouteFilterRulePropertiesFormatResponseArgs and RouteFilterRulePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `RouteFilterRulePropertiesFormatResponseInput` via:
//
//          RouteFilterRulePropertiesFormatResponseArgs{...}
type RouteFilterRulePropertiesFormatResponseInput interface {
	pulumi.Input

	ToRouteFilterRulePropertiesFormatResponseOutput() RouteFilterRulePropertiesFormatResponseOutput
	ToRouteFilterRulePropertiesFormatResponseOutputWithContext(context.Context) RouteFilterRulePropertiesFormatResponseOutput
}

// Route Filter Rule Resource
type RouteFilterRulePropertiesFormatResponseArgs struct {
	// The access type of the rule. Valid values are: 'Allow', 'Deny'
	Access pulumi.StringInput `pulumi:"access"`
	// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']
	Communities pulumi.StringArrayInput `pulumi:"communities"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The rule type of the rule. Valid value is: 'Community'
	RouteFilterRuleType pulumi.StringInput `pulumi:"routeFilterRuleType"`
}

func (RouteFilterRulePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRulePropertiesFormatResponse)(nil)).Elem()
}

func (i RouteFilterRulePropertiesFormatResponseArgs) ToRouteFilterRulePropertiesFormatResponseOutput() RouteFilterRulePropertiesFormatResponseOutput {
	return i.ToRouteFilterRulePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i RouteFilterRulePropertiesFormatResponseArgs) ToRouteFilterRulePropertiesFormatResponseOutputWithContext(ctx context.Context) RouteFilterRulePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRulePropertiesFormatResponseOutput)
}

func (i RouteFilterRulePropertiesFormatResponseArgs) ToRouteFilterRulePropertiesFormatResponsePtrOutput() RouteFilterRulePropertiesFormatResponsePtrOutput {
	return i.ToRouteFilterRulePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i RouteFilterRulePropertiesFormatResponseArgs) ToRouteFilterRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) RouteFilterRulePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRulePropertiesFormatResponseOutput).ToRouteFilterRulePropertiesFormatResponsePtrOutputWithContext(ctx)
}

// RouteFilterRulePropertiesFormatResponsePtrInput is an input type that accepts RouteFilterRulePropertiesFormatResponseArgs, RouteFilterRulePropertiesFormatResponsePtr and RouteFilterRulePropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `RouteFilterRulePropertiesFormatResponsePtrInput` via:
//
//          RouteFilterRulePropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type RouteFilterRulePropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToRouteFilterRulePropertiesFormatResponsePtrOutput() RouteFilterRulePropertiesFormatResponsePtrOutput
	ToRouteFilterRulePropertiesFormatResponsePtrOutputWithContext(context.Context) RouteFilterRulePropertiesFormatResponsePtrOutput
}

type routeFilterRulePropertiesFormatResponsePtrType RouteFilterRulePropertiesFormatResponseArgs

func RouteFilterRulePropertiesFormatResponsePtr(v *RouteFilterRulePropertiesFormatResponseArgs) RouteFilterRulePropertiesFormatResponsePtrInput {
	return (*routeFilterRulePropertiesFormatResponsePtrType)(v)
}

func (*routeFilterRulePropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteFilterRulePropertiesFormatResponse)(nil)).Elem()
}

func (i *routeFilterRulePropertiesFormatResponsePtrType) ToRouteFilterRulePropertiesFormatResponsePtrOutput() RouteFilterRulePropertiesFormatResponsePtrOutput {
	return i.ToRouteFilterRulePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *routeFilterRulePropertiesFormatResponsePtrType) ToRouteFilterRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) RouteFilterRulePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRulePropertiesFormatResponsePtrOutput)
}

// Route Filter Rule Resource
type RouteFilterRulePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (RouteFilterRulePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRulePropertiesFormatResponse)(nil)).Elem()
}

func (o RouteFilterRulePropertiesFormatResponseOutput) ToRouteFilterRulePropertiesFormatResponseOutput() RouteFilterRulePropertiesFormatResponseOutput {
	return o
}

func (o RouteFilterRulePropertiesFormatResponseOutput) ToRouteFilterRulePropertiesFormatResponseOutputWithContext(ctx context.Context) RouteFilterRulePropertiesFormatResponseOutput {
	return o
}

func (o RouteFilterRulePropertiesFormatResponseOutput) ToRouteFilterRulePropertiesFormatResponsePtrOutput() RouteFilterRulePropertiesFormatResponsePtrOutput {
	return o.ToRouteFilterRulePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o RouteFilterRulePropertiesFormatResponseOutput) ToRouteFilterRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) RouteFilterRulePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v RouteFilterRulePropertiesFormatResponse) *RouteFilterRulePropertiesFormatResponse {
		return &v
	}).(RouteFilterRulePropertiesFormatResponsePtrOutput)
}

// The access type of the rule. Valid values are: 'Allow', 'Deny'
func (o RouteFilterRulePropertiesFormatResponseOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRulePropertiesFormatResponse) string { return v.Access }).(pulumi.StringOutput)
}

// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']
func (o RouteFilterRulePropertiesFormatResponseOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteFilterRulePropertiesFormatResponse) []string { return v.Communities }).(pulumi.StringArrayOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.
func (o RouteFilterRulePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRulePropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The rule type of the rule. Valid value is: 'Community'
func (o RouteFilterRulePropertiesFormatResponseOutput) RouteFilterRuleType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRulePropertiesFormatResponse) string { return v.RouteFilterRuleType }).(pulumi.StringOutput)
}

type RouteFilterRulePropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (RouteFilterRulePropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteFilterRulePropertiesFormatResponse)(nil)).Elem()
}

func (o RouteFilterRulePropertiesFormatResponsePtrOutput) ToRouteFilterRulePropertiesFormatResponsePtrOutput() RouteFilterRulePropertiesFormatResponsePtrOutput {
	return o
}

func (o RouteFilterRulePropertiesFormatResponsePtrOutput) ToRouteFilterRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) RouteFilterRulePropertiesFormatResponsePtrOutput {
	return o
}

func (o RouteFilterRulePropertiesFormatResponsePtrOutput) Elem() RouteFilterRulePropertiesFormatResponseOutput {
	return o.ApplyT(func(v *RouteFilterRulePropertiesFormatResponse) RouteFilterRulePropertiesFormatResponse { return *v }).(RouteFilterRulePropertiesFormatResponseOutput)
}

// The access type of the rule. Valid values are: 'Allow', 'Deny'
func (o RouteFilterRulePropertiesFormatResponsePtrOutput) Access() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterRulePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Access
	}).(pulumi.StringPtrOutput)
}

// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']
func (o RouteFilterRulePropertiesFormatResponsePtrOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouteFilterRulePropertiesFormatResponse) []string {
		if v == nil {
			return nil
		}
		return v.Communities
	}).(pulumi.StringArrayOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.
func (o RouteFilterRulePropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterRulePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The rule type of the rule. Valid value is: 'Community'
func (o RouteFilterRulePropertiesFormatResponsePtrOutput) RouteFilterRuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterRulePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RouteFilterRuleType
	}).(pulumi.StringPtrOutput)
}

// Route Filter Rule Resource
type RouteFilterRuleResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Route Filter Rule Resource
	Properties *RouteFilterRulePropertiesFormatResponse `pulumi:"properties"`
}

// RouteFilterRuleResponseInput is an input type that accepts RouteFilterRuleResponseArgs and RouteFilterRuleResponseOutput values.
// You can construct a concrete instance of `RouteFilterRuleResponseInput` via:
//
//          RouteFilterRuleResponseArgs{...}
type RouteFilterRuleResponseInput interface {
	pulumi.Input

	ToRouteFilterRuleResponseOutput() RouteFilterRuleResponseOutput
	ToRouteFilterRuleResponseOutputWithContext(context.Context) RouteFilterRuleResponseOutput
}

// Route Filter Rule Resource
type RouteFilterRuleResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Route Filter Rule Resource
	Properties RouteFilterRulePropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (RouteFilterRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRuleResponse)(nil)).Elem()
}

func (i RouteFilterRuleResponseArgs) ToRouteFilterRuleResponseOutput() RouteFilterRuleResponseOutput {
	return i.ToRouteFilterRuleResponseOutputWithContext(context.Background())
}

func (i RouteFilterRuleResponseArgs) ToRouteFilterRuleResponseOutputWithContext(ctx context.Context) RouteFilterRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRuleResponseOutput)
}

// RouteFilterRuleResponseArrayInput is an input type that accepts RouteFilterRuleResponseArray and RouteFilterRuleResponseArrayOutput values.
// You can construct a concrete instance of `RouteFilterRuleResponseArrayInput` via:
//
//          RouteFilterRuleResponseArray{ RouteFilterRuleResponseArgs{...} }
type RouteFilterRuleResponseArrayInput interface {
	pulumi.Input

	ToRouteFilterRuleResponseArrayOutput() RouteFilterRuleResponseArrayOutput
	ToRouteFilterRuleResponseArrayOutputWithContext(context.Context) RouteFilterRuleResponseArrayOutput
}

type RouteFilterRuleResponseArray []RouteFilterRuleResponseInput

func (RouteFilterRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteFilterRuleResponse)(nil)).Elem()
}

func (i RouteFilterRuleResponseArray) ToRouteFilterRuleResponseArrayOutput() RouteFilterRuleResponseArrayOutput {
	return i.ToRouteFilterRuleResponseArrayOutputWithContext(context.Background())
}

func (i RouteFilterRuleResponseArray) ToRouteFilterRuleResponseArrayOutputWithContext(ctx context.Context) RouteFilterRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRuleResponseArrayOutput)
}

// Route Filter Rule Resource
type RouteFilterRuleResponseOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRuleResponse)(nil)).Elem()
}

func (o RouteFilterRuleResponseOutput) ToRouteFilterRuleResponseOutput() RouteFilterRuleResponseOutput {
	return o
}

func (o RouteFilterRuleResponseOutput) ToRouteFilterRuleResponseOutputWithContext(ctx context.Context) RouteFilterRuleResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteFilterRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o RouteFilterRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteFilterRuleResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteFilterRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Route Filter Rule Resource
func (o RouteFilterRuleResponseOutput) Properties() RouteFilterRulePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) *RouteFilterRulePropertiesFormatResponse { return v.Properties }).(RouteFilterRulePropertiesFormatResponsePtrOutput)
}

type RouteFilterRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteFilterRuleResponse)(nil)).Elem()
}

func (o RouteFilterRuleResponseArrayOutput) ToRouteFilterRuleResponseArrayOutput() RouteFilterRuleResponseArrayOutput {
	return o
}

func (o RouteFilterRuleResponseArrayOutput) ToRouteFilterRuleResponseArrayOutputWithContext(ctx context.Context) RouteFilterRuleResponseArrayOutput {
	return o
}

func (o RouteFilterRuleResponseArrayOutput) Index(i pulumi.IntInput) RouteFilterRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteFilterRuleResponse {
		return vs[0].([]RouteFilterRuleResponse)[vs[1].(int)]
	}).(RouteFilterRuleResponseOutput)
}

// Route resource
type RoutePropertiesFormat struct {
	// The destination CIDR to which the route applies.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
	NextHopType string `pulumi:"nextHopType"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// RoutePropertiesFormatInput is an input type that accepts RoutePropertiesFormatArgs and RoutePropertiesFormatOutput values.
// You can construct a concrete instance of `RoutePropertiesFormatInput` via:
//
//          RoutePropertiesFormatArgs{...}
type RoutePropertiesFormatInput interface {
	pulumi.Input

	ToRoutePropertiesFormatOutput() RoutePropertiesFormatOutput
	ToRoutePropertiesFormatOutputWithContext(context.Context) RoutePropertiesFormatOutput
}

// Route resource
type RoutePropertiesFormatArgs struct {
	// The destination CIDR to which the route applies.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (RoutePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutePropertiesFormat)(nil)).Elem()
}

func (i RoutePropertiesFormatArgs) ToRoutePropertiesFormatOutput() RoutePropertiesFormatOutput {
	return i.ToRoutePropertiesFormatOutputWithContext(context.Background())
}

func (i RoutePropertiesFormatArgs) ToRoutePropertiesFormatOutputWithContext(ctx context.Context) RoutePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutePropertiesFormatOutput)
}

func (i RoutePropertiesFormatArgs) ToRoutePropertiesFormatPtrOutput() RoutePropertiesFormatPtrOutput {
	return i.ToRoutePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i RoutePropertiesFormatArgs) ToRoutePropertiesFormatPtrOutputWithContext(ctx context.Context) RoutePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutePropertiesFormatOutput).ToRoutePropertiesFormatPtrOutputWithContext(ctx)
}

// RoutePropertiesFormatPtrInput is an input type that accepts RoutePropertiesFormatArgs, RoutePropertiesFormatPtr and RoutePropertiesFormatPtrOutput values.
// You can construct a concrete instance of `RoutePropertiesFormatPtrInput` via:
//
//          RoutePropertiesFormatArgs{...}
//
//  or:
//
//          nil
type RoutePropertiesFormatPtrInput interface {
	pulumi.Input

	ToRoutePropertiesFormatPtrOutput() RoutePropertiesFormatPtrOutput
	ToRoutePropertiesFormatPtrOutputWithContext(context.Context) RoutePropertiesFormatPtrOutput
}

type routePropertiesFormatPtrType RoutePropertiesFormatArgs

func RoutePropertiesFormatPtr(v *RoutePropertiesFormatArgs) RoutePropertiesFormatPtrInput {
	return (*routePropertiesFormatPtrType)(v)
}

func (*routePropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutePropertiesFormat)(nil)).Elem()
}

func (i *routePropertiesFormatPtrType) ToRoutePropertiesFormatPtrOutput() RoutePropertiesFormatPtrOutput {
	return i.ToRoutePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *routePropertiesFormatPtrType) ToRoutePropertiesFormatPtrOutputWithContext(ctx context.Context) RoutePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutePropertiesFormatPtrOutput)
}

// Route resource
type RoutePropertiesFormatOutput struct{ *pulumi.OutputState }

func (RoutePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutePropertiesFormat)(nil)).Elem()
}

func (o RoutePropertiesFormatOutput) ToRoutePropertiesFormatOutput() RoutePropertiesFormatOutput {
	return o
}

func (o RoutePropertiesFormatOutput) ToRoutePropertiesFormatOutputWithContext(ctx context.Context) RoutePropertiesFormatOutput {
	return o
}

func (o RoutePropertiesFormatOutput) ToRoutePropertiesFormatPtrOutput() RoutePropertiesFormatPtrOutput {
	return o.ToRoutePropertiesFormatPtrOutputWithContext(context.Background())
}

func (o RoutePropertiesFormatOutput) ToRoutePropertiesFormatPtrOutputWithContext(ctx context.Context) RoutePropertiesFormatPtrOutput {
	return o.ApplyT(func(v RoutePropertiesFormat) *RoutePropertiesFormat {
		return &v
	}).(RoutePropertiesFormatPtrOutput)
}

// The destination CIDR to which the route applies.
func (o RoutePropertiesFormatOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutePropertiesFormat) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
func (o RoutePropertiesFormatOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutePropertiesFormat) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
func (o RoutePropertiesFormatOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RoutePropertiesFormat) string { return v.NextHopType }).(pulumi.StringOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RoutePropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutePropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type RoutePropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (RoutePropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutePropertiesFormat)(nil)).Elem()
}

func (o RoutePropertiesFormatPtrOutput) ToRoutePropertiesFormatPtrOutput() RoutePropertiesFormatPtrOutput {
	return o
}

func (o RoutePropertiesFormatPtrOutput) ToRoutePropertiesFormatPtrOutputWithContext(ctx context.Context) RoutePropertiesFormatPtrOutput {
	return o
}

func (o RoutePropertiesFormatPtrOutput) Elem() RoutePropertiesFormatOutput {
	return o.ApplyT(func(v *RoutePropertiesFormat) RoutePropertiesFormat { return *v }).(RoutePropertiesFormatOutput)
}

// The destination CIDR to which the route applies.
func (o RoutePropertiesFormatPtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
func (o RoutePropertiesFormatPtrOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.NextHopIpAddress
	}).(pulumi.StringPtrOutput)
}

// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
func (o RoutePropertiesFormatPtrOutput) NextHopType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return &v.NextHopType
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RoutePropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Route resource
type RoutePropertiesFormatResponse struct {
	// The destination CIDR to which the route applies.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
	NextHopType string `pulumi:"nextHopType"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// RoutePropertiesFormatResponseInput is an input type that accepts RoutePropertiesFormatResponseArgs and RoutePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `RoutePropertiesFormatResponseInput` via:
//
//          RoutePropertiesFormatResponseArgs{...}
type RoutePropertiesFormatResponseInput interface {
	pulumi.Input

	ToRoutePropertiesFormatResponseOutput() RoutePropertiesFormatResponseOutput
	ToRoutePropertiesFormatResponseOutputWithContext(context.Context) RoutePropertiesFormatResponseOutput
}

// Route resource
type RoutePropertiesFormatResponseArgs struct {
	// The destination CIDR to which the route applies.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (RoutePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutePropertiesFormatResponse)(nil)).Elem()
}

func (i RoutePropertiesFormatResponseArgs) ToRoutePropertiesFormatResponseOutput() RoutePropertiesFormatResponseOutput {
	return i.ToRoutePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i RoutePropertiesFormatResponseArgs) ToRoutePropertiesFormatResponseOutputWithContext(ctx context.Context) RoutePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutePropertiesFormatResponseOutput)
}

func (i RoutePropertiesFormatResponseArgs) ToRoutePropertiesFormatResponsePtrOutput() RoutePropertiesFormatResponsePtrOutput {
	return i.ToRoutePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i RoutePropertiesFormatResponseArgs) ToRoutePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) RoutePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutePropertiesFormatResponseOutput).ToRoutePropertiesFormatResponsePtrOutputWithContext(ctx)
}

// RoutePropertiesFormatResponsePtrInput is an input type that accepts RoutePropertiesFormatResponseArgs, RoutePropertiesFormatResponsePtr and RoutePropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `RoutePropertiesFormatResponsePtrInput` via:
//
//          RoutePropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type RoutePropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToRoutePropertiesFormatResponsePtrOutput() RoutePropertiesFormatResponsePtrOutput
	ToRoutePropertiesFormatResponsePtrOutputWithContext(context.Context) RoutePropertiesFormatResponsePtrOutput
}

type routePropertiesFormatResponsePtrType RoutePropertiesFormatResponseArgs

func RoutePropertiesFormatResponsePtr(v *RoutePropertiesFormatResponseArgs) RoutePropertiesFormatResponsePtrInput {
	return (*routePropertiesFormatResponsePtrType)(v)
}

func (*routePropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutePropertiesFormatResponse)(nil)).Elem()
}

func (i *routePropertiesFormatResponsePtrType) ToRoutePropertiesFormatResponsePtrOutput() RoutePropertiesFormatResponsePtrOutput {
	return i.ToRoutePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *routePropertiesFormatResponsePtrType) ToRoutePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) RoutePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutePropertiesFormatResponsePtrOutput)
}

// Route resource
type RoutePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (RoutePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutePropertiesFormatResponse)(nil)).Elem()
}

func (o RoutePropertiesFormatResponseOutput) ToRoutePropertiesFormatResponseOutput() RoutePropertiesFormatResponseOutput {
	return o
}

func (o RoutePropertiesFormatResponseOutput) ToRoutePropertiesFormatResponseOutputWithContext(ctx context.Context) RoutePropertiesFormatResponseOutput {
	return o
}

func (o RoutePropertiesFormatResponseOutput) ToRoutePropertiesFormatResponsePtrOutput() RoutePropertiesFormatResponsePtrOutput {
	return o.ToRoutePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o RoutePropertiesFormatResponseOutput) ToRoutePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) RoutePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v RoutePropertiesFormatResponse) *RoutePropertiesFormatResponse {
		return &v
	}).(RoutePropertiesFormatResponsePtrOutput)
}

// The destination CIDR to which the route applies.
func (o RoutePropertiesFormatResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutePropertiesFormatResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
func (o RoutePropertiesFormatResponseOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutePropertiesFormatResponse) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
func (o RoutePropertiesFormatResponseOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RoutePropertiesFormatResponse) string { return v.NextHopType }).(pulumi.StringOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RoutePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutePropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type RoutePropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (RoutePropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutePropertiesFormatResponse)(nil)).Elem()
}

func (o RoutePropertiesFormatResponsePtrOutput) ToRoutePropertiesFormatResponsePtrOutput() RoutePropertiesFormatResponsePtrOutput {
	return o
}

func (o RoutePropertiesFormatResponsePtrOutput) ToRoutePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) RoutePropertiesFormatResponsePtrOutput {
	return o
}

func (o RoutePropertiesFormatResponsePtrOutput) Elem() RoutePropertiesFormatResponseOutput {
	return o.ApplyT(func(v *RoutePropertiesFormatResponse) RoutePropertiesFormatResponse { return *v }).(RoutePropertiesFormatResponseOutput)
}

// The destination CIDR to which the route applies.
func (o RoutePropertiesFormatResponsePtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
func (o RoutePropertiesFormatResponsePtrOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.NextHopIpAddress
	}).(pulumi.StringPtrOutput)
}

// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
func (o RoutePropertiesFormatResponsePtrOutput) NextHopType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.NextHopType
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RoutePropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Route resource
type RouteResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the route.
	Properties *RoutePropertiesFormatResponse `pulumi:"properties"`
}

// RouteResponseInput is an input type that accepts RouteResponseArgs and RouteResponseOutput values.
// You can construct a concrete instance of `RouteResponseInput` via:
//
//          RouteResponseArgs{...}
type RouteResponseInput interface {
	pulumi.Input

	ToRouteResponseOutput() RouteResponseOutput
	ToRouteResponseOutputWithContext(context.Context) RouteResponseOutput
}

// Route resource
type RouteResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the route.
	Properties RoutePropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (RouteResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteResponse)(nil)).Elem()
}

func (i RouteResponseArgs) ToRouteResponseOutput() RouteResponseOutput {
	return i.ToRouteResponseOutputWithContext(context.Background())
}

func (i RouteResponseArgs) ToRouteResponseOutputWithContext(ctx context.Context) RouteResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteResponseOutput)
}

// RouteResponseArrayInput is an input type that accepts RouteResponseArray and RouteResponseArrayOutput values.
// You can construct a concrete instance of `RouteResponseArrayInput` via:
//
//          RouteResponseArray{ RouteResponseArgs{...} }
type RouteResponseArrayInput interface {
	pulumi.Input

	ToRouteResponseArrayOutput() RouteResponseArrayOutput
	ToRouteResponseArrayOutputWithContext(context.Context) RouteResponseArrayOutput
}

type RouteResponseArray []RouteResponseInput

func (RouteResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteResponse)(nil)).Elem()
}

func (i RouteResponseArray) ToRouteResponseArrayOutput() RouteResponseArrayOutput {
	return i.ToRouteResponseArrayOutputWithContext(context.Background())
}

func (i RouteResponseArray) ToRouteResponseArrayOutputWithContext(ctx context.Context) RouteResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteResponseArrayOutput)
}

// Route resource
type RouteResponseOutput struct{ *pulumi.OutputState }

func (RouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteResponse)(nil)).Elem()
}

func (o RouteResponseOutput) ToRouteResponseOutput() RouteResponseOutput {
	return o
}

func (o RouteResponseOutput) ToRouteResponseOutputWithContext(ctx context.Context) RouteResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the route.
func (o RouteResponseOutput) Properties() RoutePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v RouteResponse) *RoutePropertiesFormatResponse { return v.Properties }).(RoutePropertiesFormatResponsePtrOutput)
}

type RouteResponseArrayOutput struct{ *pulumi.OutputState }

func (RouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteResponse)(nil)).Elem()
}

func (o RouteResponseArrayOutput) ToRouteResponseArrayOutput() RouteResponseArrayOutput {
	return o
}

func (o RouteResponseArrayOutput) ToRouteResponseArrayOutputWithContext(ctx context.Context) RouteResponseArrayOutput {
	return o
}

func (o RouteResponseArrayOutput) Index(i pulumi.IntInput) RouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteResponse {
		return vs[0].([]RouteResponse)[vs[1].(int)]
	}).(RouteResponseOutput)
}

// Route table resource.
type RouteTableType struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Properties of the route table.
	Properties *RouteTablePropertiesFormat `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// RouteTableTypeInput is an input type that accepts RouteTableTypeArgs and RouteTableTypeOutput values.
// You can construct a concrete instance of `RouteTableTypeInput` via:
//
//          RouteTableTypeArgs{...}
type RouteTableTypeInput interface {
	pulumi.Input

	ToRouteTableTypeOutput() RouteTableTypeOutput
	ToRouteTableTypeOutputWithContext(context.Context) RouteTableTypeOutput
}

// Route table resource.
type RouteTableTypeArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Properties of the route table.
	Properties RouteTablePropertiesFormatPtrInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (RouteTableTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableType)(nil)).Elem()
}

func (i RouteTableTypeArgs) ToRouteTableTypeOutput() RouteTableTypeOutput {
	return i.ToRouteTableTypeOutputWithContext(context.Background())
}

func (i RouteTableTypeArgs) ToRouteTableTypeOutputWithContext(ctx context.Context) RouteTableTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTypeOutput)
}

func (i RouteTableTypeArgs) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return i.ToRouteTableTypePtrOutputWithContext(context.Background())
}

func (i RouteTableTypeArgs) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTypeOutput).ToRouteTableTypePtrOutputWithContext(ctx)
}

// RouteTableTypePtrInput is an input type that accepts RouteTableTypeArgs, RouteTableTypePtr and RouteTableTypePtrOutput values.
// You can construct a concrete instance of `RouteTableTypePtrInput` via:
//
//          RouteTableTypeArgs{...}
//
//  or:
//
//          nil
type RouteTableTypePtrInput interface {
	pulumi.Input

	ToRouteTableTypePtrOutput() RouteTableTypePtrOutput
	ToRouteTableTypePtrOutputWithContext(context.Context) RouteTableTypePtrOutput
}

type routeTableTypePtrType RouteTableTypeArgs

func RouteTableTypePtr(v *RouteTableTypeArgs) RouteTableTypePtrInput {
	return (*routeTableTypePtrType)(v)
}

func (*routeTableTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableType)(nil)).Elem()
}

func (i *routeTableTypePtrType) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return i.ToRouteTableTypePtrOutputWithContext(context.Background())
}

func (i *routeTableTypePtrType) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTypePtrOutput)
}

// Route table resource.
type RouteTableTypeOutput struct{ *pulumi.OutputState }

func (RouteTableTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableType)(nil)).Elem()
}

func (o RouteTableTypeOutput) ToRouteTableTypeOutput() RouteTableTypeOutput {
	return o
}

func (o RouteTableTypeOutput) ToRouteTableTypeOutputWithContext(ctx context.Context) RouteTableTypeOutput {
	return o
}

func (o RouteTableTypeOutput) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return o.ToRouteTableTypePtrOutputWithContext(context.Background())
}

func (o RouteTableTypeOutput) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return o.ApplyT(func(v RouteTableType) *RouteTableType {
		return &v
	}).(RouteTableTypePtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteTableTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteTableTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Properties of the route table.
func (o RouteTableTypeOutput) Properties() RouteTablePropertiesFormatPtrOutput {
	return o.ApplyT(func(v RouteTableType) *RouteTablePropertiesFormat { return v.Properties }).(RouteTablePropertiesFormatPtrOutput)
}

// Resource tags.
func (o RouteTableTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteTableType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type RouteTableTypePtrOutput struct{ *pulumi.OutputState }

func (RouteTableTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableType)(nil)).Elem()
}

func (o RouteTableTypePtrOutput) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return o
}

func (o RouteTableTypePtrOutput) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return o
}

func (o RouteTableTypePtrOutput) Elem() RouteTableTypeOutput {
	return o.ApplyT(func(v *RouteTableType) RouteTableType { return *v }).(RouteTableTypeOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteTableTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteTableTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Properties of the route table.
func (o RouteTableTypePtrOutput) Properties() RouteTablePropertiesFormatPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *RouteTablePropertiesFormat {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(RouteTablePropertiesFormatPtrOutput)
}

// Resource tags.
func (o RouteTableTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RouteTableType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Route table resource.
type RouteTableDefinition struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Properties of the route table.
	Properties *RouteTablePropertiesFormat `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// RouteTableDefinitionInput is an input type that accepts RouteTableDefinitionArgs and RouteTableDefinitionOutput values.
// You can construct a concrete instance of `RouteTableDefinitionInput` via:
//
//          RouteTableDefinitionArgs{...}
type RouteTableDefinitionInput interface {
	pulumi.Input

	ToRouteTableDefinitionOutput() RouteTableDefinitionOutput
	ToRouteTableDefinitionOutputWithContext(context.Context) RouteTableDefinitionOutput
}

// Route table resource.
type RouteTableDefinitionArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Properties of the route table.
	Properties RouteTablePropertiesFormatPtrInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (RouteTableDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableDefinition)(nil)).Elem()
}

func (i RouteTableDefinitionArgs) ToRouteTableDefinitionOutput() RouteTableDefinitionOutput {
	return i.ToRouteTableDefinitionOutputWithContext(context.Background())
}

func (i RouteTableDefinitionArgs) ToRouteTableDefinitionOutputWithContext(ctx context.Context) RouteTableDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableDefinitionOutput)
}

// Route table resource.
type RouteTableDefinitionOutput struct{ *pulumi.OutputState }

func (RouteTableDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableDefinition)(nil)).Elem()
}

func (o RouteTableDefinitionOutput) ToRouteTableDefinitionOutput() RouteTableDefinitionOutput {
	return o
}

func (o RouteTableDefinitionOutput) ToRouteTableDefinitionOutputWithContext(ctx context.Context) RouteTableDefinitionOutput {
	return o
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteTableDefinitionOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableDefinition) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteTableDefinitionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableDefinition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableDefinitionOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableDefinition) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Properties of the route table.
func (o RouteTableDefinitionOutput) Properties() RouteTablePropertiesFormatPtrOutput {
	return o.ApplyT(func(v RouteTableDefinition) *RouteTablePropertiesFormat { return v.Properties }).(RouteTablePropertiesFormatPtrOutput)
}

// Resource tags.
func (o RouteTableDefinitionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteTableDefinition) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Route Table resource
type RouteTablePropertiesFormat struct {
	// Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation *bool `pulumi:"disableBgpRoutePropagation"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Collection of routes contained within a route table.
	Routes []RouteType `pulumi:"routes"`
}

// RouteTablePropertiesFormatInput is an input type that accepts RouteTablePropertiesFormatArgs and RouteTablePropertiesFormatOutput values.
// You can construct a concrete instance of `RouteTablePropertiesFormatInput` via:
//
//          RouteTablePropertiesFormatArgs{...}
type RouteTablePropertiesFormatInput interface {
	pulumi.Input

	ToRouteTablePropertiesFormatOutput() RouteTablePropertiesFormatOutput
	ToRouteTablePropertiesFormatOutputWithContext(context.Context) RouteTablePropertiesFormatOutput
}

// Route Table resource
type RouteTablePropertiesFormatArgs struct {
	// Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation pulumi.BoolPtrInput `pulumi:"disableBgpRoutePropagation"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Collection of routes contained within a route table.
	Routes RouteTypeArrayInput `pulumi:"routes"`
}

func (RouteTablePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablePropertiesFormat)(nil)).Elem()
}

func (i RouteTablePropertiesFormatArgs) ToRouteTablePropertiesFormatOutput() RouteTablePropertiesFormatOutput {
	return i.ToRouteTablePropertiesFormatOutputWithContext(context.Background())
}

func (i RouteTablePropertiesFormatArgs) ToRouteTablePropertiesFormatOutputWithContext(ctx context.Context) RouteTablePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablePropertiesFormatOutput)
}

func (i RouteTablePropertiesFormatArgs) ToRouteTablePropertiesFormatPtrOutput() RouteTablePropertiesFormatPtrOutput {
	return i.ToRouteTablePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i RouteTablePropertiesFormatArgs) ToRouteTablePropertiesFormatPtrOutputWithContext(ctx context.Context) RouteTablePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablePropertiesFormatOutput).ToRouteTablePropertiesFormatPtrOutputWithContext(ctx)
}

// RouteTablePropertiesFormatPtrInput is an input type that accepts RouteTablePropertiesFormatArgs, RouteTablePropertiesFormatPtr and RouteTablePropertiesFormatPtrOutput values.
// You can construct a concrete instance of `RouteTablePropertiesFormatPtrInput` via:
//
//          RouteTablePropertiesFormatArgs{...}
//
//  or:
//
//          nil
type RouteTablePropertiesFormatPtrInput interface {
	pulumi.Input

	ToRouteTablePropertiesFormatPtrOutput() RouteTablePropertiesFormatPtrOutput
	ToRouteTablePropertiesFormatPtrOutputWithContext(context.Context) RouteTablePropertiesFormatPtrOutput
}

type routeTablePropertiesFormatPtrType RouteTablePropertiesFormatArgs

func RouteTablePropertiesFormatPtr(v *RouteTablePropertiesFormatArgs) RouteTablePropertiesFormatPtrInput {
	return (*routeTablePropertiesFormatPtrType)(v)
}

func (*routeTablePropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTablePropertiesFormat)(nil)).Elem()
}

func (i *routeTablePropertiesFormatPtrType) ToRouteTablePropertiesFormatPtrOutput() RouteTablePropertiesFormatPtrOutput {
	return i.ToRouteTablePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *routeTablePropertiesFormatPtrType) ToRouteTablePropertiesFormatPtrOutputWithContext(ctx context.Context) RouteTablePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablePropertiesFormatPtrOutput)
}

// Route Table resource
type RouteTablePropertiesFormatOutput struct{ *pulumi.OutputState }

func (RouteTablePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablePropertiesFormat)(nil)).Elem()
}

func (o RouteTablePropertiesFormatOutput) ToRouteTablePropertiesFormatOutput() RouteTablePropertiesFormatOutput {
	return o
}

func (o RouteTablePropertiesFormatOutput) ToRouteTablePropertiesFormatOutputWithContext(ctx context.Context) RouteTablePropertiesFormatOutput {
	return o
}

func (o RouteTablePropertiesFormatOutput) ToRouteTablePropertiesFormatPtrOutput() RouteTablePropertiesFormatPtrOutput {
	return o.ToRouteTablePropertiesFormatPtrOutputWithContext(context.Background())
}

func (o RouteTablePropertiesFormatOutput) ToRouteTablePropertiesFormatPtrOutputWithContext(ctx context.Context) RouteTablePropertiesFormatPtrOutput {
	return o.ApplyT(func(v RouteTablePropertiesFormat) *RouteTablePropertiesFormat {
		return &v
	}).(RouteTablePropertiesFormatPtrOutput)
}

// Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTablePropertiesFormatOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteTablePropertiesFormat) *bool { return v.DisableBgpRoutePropagation }).(pulumi.BoolPtrOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteTablePropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTablePropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTablePropertiesFormatOutput) Routes() RouteTypeArrayOutput {
	return o.ApplyT(func(v RouteTablePropertiesFormat) []RouteType { return v.Routes }).(RouteTypeArrayOutput)
}

type RouteTablePropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (RouteTablePropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTablePropertiesFormat)(nil)).Elem()
}

func (o RouteTablePropertiesFormatPtrOutput) ToRouteTablePropertiesFormatPtrOutput() RouteTablePropertiesFormatPtrOutput {
	return o
}

func (o RouteTablePropertiesFormatPtrOutput) ToRouteTablePropertiesFormatPtrOutputWithContext(ctx context.Context) RouteTablePropertiesFormatPtrOutput {
	return o
}

func (o RouteTablePropertiesFormatPtrOutput) Elem() RouteTablePropertiesFormatOutput {
	return o.ApplyT(func(v *RouteTablePropertiesFormat) RouteTablePropertiesFormat { return *v }).(RouteTablePropertiesFormatOutput)
}

// Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTablePropertiesFormatPtrOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RouteTablePropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.DisableBgpRoutePropagation
	}).(pulumi.BoolPtrOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteTablePropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTablePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTablePropertiesFormatPtrOutput) Routes() RouteTypeArrayOutput {
	return o.ApplyT(func(v *RouteTablePropertiesFormat) []RouteType {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RouteTypeArrayOutput)
}

// Route Table resource
type RouteTablePropertiesFormatResponse struct {
	// Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation *bool `pulumi:"disableBgpRoutePropagation"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Collection of routes contained within a route table.
	Routes []RouteResponse `pulumi:"routes"`
	// A collection of references to subnets.
	Subnets []SubnetResponse `pulumi:"subnets"`
}

// RouteTablePropertiesFormatResponseInput is an input type that accepts RouteTablePropertiesFormatResponseArgs and RouteTablePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `RouteTablePropertiesFormatResponseInput` via:
//
//          RouteTablePropertiesFormatResponseArgs{...}
type RouteTablePropertiesFormatResponseInput interface {
	pulumi.Input

	ToRouteTablePropertiesFormatResponseOutput() RouteTablePropertiesFormatResponseOutput
	ToRouteTablePropertiesFormatResponseOutputWithContext(context.Context) RouteTablePropertiesFormatResponseOutput
}

// Route Table resource
type RouteTablePropertiesFormatResponseArgs struct {
	// Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation pulumi.BoolPtrInput `pulumi:"disableBgpRoutePropagation"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Collection of routes contained within a route table.
	Routes RouteResponseArrayInput `pulumi:"routes"`
	// A collection of references to subnets.
	Subnets SubnetResponseArrayInput `pulumi:"subnets"`
}

func (RouteTablePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablePropertiesFormatResponse)(nil)).Elem()
}

func (i RouteTablePropertiesFormatResponseArgs) ToRouteTablePropertiesFormatResponseOutput() RouteTablePropertiesFormatResponseOutput {
	return i.ToRouteTablePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i RouteTablePropertiesFormatResponseArgs) ToRouteTablePropertiesFormatResponseOutputWithContext(ctx context.Context) RouteTablePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablePropertiesFormatResponseOutput)
}

func (i RouteTablePropertiesFormatResponseArgs) ToRouteTablePropertiesFormatResponsePtrOutput() RouteTablePropertiesFormatResponsePtrOutput {
	return i.ToRouteTablePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i RouteTablePropertiesFormatResponseArgs) ToRouteTablePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) RouteTablePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablePropertiesFormatResponseOutput).ToRouteTablePropertiesFormatResponsePtrOutputWithContext(ctx)
}

// RouteTablePropertiesFormatResponsePtrInput is an input type that accepts RouteTablePropertiesFormatResponseArgs, RouteTablePropertiesFormatResponsePtr and RouteTablePropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `RouteTablePropertiesFormatResponsePtrInput` via:
//
//          RouteTablePropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type RouteTablePropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToRouteTablePropertiesFormatResponsePtrOutput() RouteTablePropertiesFormatResponsePtrOutput
	ToRouteTablePropertiesFormatResponsePtrOutputWithContext(context.Context) RouteTablePropertiesFormatResponsePtrOutput
}

type routeTablePropertiesFormatResponsePtrType RouteTablePropertiesFormatResponseArgs

func RouteTablePropertiesFormatResponsePtr(v *RouteTablePropertiesFormatResponseArgs) RouteTablePropertiesFormatResponsePtrInput {
	return (*routeTablePropertiesFormatResponsePtrType)(v)
}

func (*routeTablePropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTablePropertiesFormatResponse)(nil)).Elem()
}

func (i *routeTablePropertiesFormatResponsePtrType) ToRouteTablePropertiesFormatResponsePtrOutput() RouteTablePropertiesFormatResponsePtrOutput {
	return i.ToRouteTablePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *routeTablePropertiesFormatResponsePtrType) ToRouteTablePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) RouteTablePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablePropertiesFormatResponsePtrOutput)
}

// Route Table resource
type RouteTablePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (RouteTablePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablePropertiesFormatResponse)(nil)).Elem()
}

func (o RouteTablePropertiesFormatResponseOutput) ToRouteTablePropertiesFormatResponseOutput() RouteTablePropertiesFormatResponseOutput {
	return o
}

func (o RouteTablePropertiesFormatResponseOutput) ToRouteTablePropertiesFormatResponseOutputWithContext(ctx context.Context) RouteTablePropertiesFormatResponseOutput {
	return o
}

func (o RouteTablePropertiesFormatResponseOutput) ToRouteTablePropertiesFormatResponsePtrOutput() RouteTablePropertiesFormatResponsePtrOutput {
	return o.ToRouteTablePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o RouteTablePropertiesFormatResponseOutput) ToRouteTablePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) RouteTablePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v RouteTablePropertiesFormatResponse) *RouteTablePropertiesFormatResponse {
		return &v
	}).(RouteTablePropertiesFormatResponsePtrOutput)
}

// Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTablePropertiesFormatResponseOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteTablePropertiesFormatResponse) *bool { return v.DisableBgpRoutePropagation }).(pulumi.BoolPtrOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteTablePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTablePropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTablePropertiesFormatResponseOutput) Routes() RouteResponseArrayOutput {
	return o.ApplyT(func(v RouteTablePropertiesFormatResponse) []RouteResponse { return v.Routes }).(RouteResponseArrayOutput)
}

// A collection of references to subnets.
func (o RouteTablePropertiesFormatResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v RouteTablePropertiesFormatResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

type RouteTablePropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (RouteTablePropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTablePropertiesFormatResponse)(nil)).Elem()
}

func (o RouteTablePropertiesFormatResponsePtrOutput) ToRouteTablePropertiesFormatResponsePtrOutput() RouteTablePropertiesFormatResponsePtrOutput {
	return o
}

func (o RouteTablePropertiesFormatResponsePtrOutput) ToRouteTablePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) RouteTablePropertiesFormatResponsePtrOutput {
	return o
}

func (o RouteTablePropertiesFormatResponsePtrOutput) Elem() RouteTablePropertiesFormatResponseOutput {
	return o.ApplyT(func(v *RouteTablePropertiesFormatResponse) RouteTablePropertiesFormatResponse { return *v }).(RouteTablePropertiesFormatResponseOutput)
}

// Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTablePropertiesFormatResponsePtrOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RouteTablePropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableBgpRoutePropagation
	}).(pulumi.BoolPtrOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteTablePropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTablePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTablePropertiesFormatResponsePtrOutput) Routes() RouteResponseArrayOutput {
	return o.ApplyT(func(v *RouteTablePropertiesFormatResponse) []RouteResponse {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RouteResponseArrayOutput)
}

// A collection of references to subnets.
func (o RouteTablePropertiesFormatResponsePtrOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v *RouteTablePropertiesFormatResponse) []SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetResponseArrayOutput)
}

// Route table resource.
type RouteTableResponse struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the route table.
	Properties *RouteTablePropertiesFormatResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// RouteTableResponseInput is an input type that accepts RouteTableResponseArgs and RouteTableResponseOutput values.
// You can construct a concrete instance of `RouteTableResponseInput` via:
//
//          RouteTableResponseArgs{...}
type RouteTableResponseInput interface {
	pulumi.Input

	ToRouteTableResponseOutput() RouteTableResponseOutput
	ToRouteTableResponseOutputWithContext(context.Context) RouteTableResponseOutput
}

// Route table resource.
type RouteTableResponseArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the route table.
	Properties RouteTablePropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RouteTableResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableResponse)(nil)).Elem()
}

func (i RouteTableResponseArgs) ToRouteTableResponseOutput() RouteTableResponseOutput {
	return i.ToRouteTableResponseOutputWithContext(context.Background())
}

func (i RouteTableResponseArgs) ToRouteTableResponseOutputWithContext(ctx context.Context) RouteTableResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableResponseOutput)
}

func (i RouteTableResponseArgs) ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput {
	return i.ToRouteTableResponsePtrOutputWithContext(context.Background())
}

func (i RouteTableResponseArgs) ToRouteTableResponsePtrOutputWithContext(ctx context.Context) RouteTableResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableResponseOutput).ToRouteTableResponsePtrOutputWithContext(ctx)
}

// RouteTableResponsePtrInput is an input type that accepts RouteTableResponseArgs, RouteTableResponsePtr and RouteTableResponsePtrOutput values.
// You can construct a concrete instance of `RouteTableResponsePtrInput` via:
//
//          RouteTableResponseArgs{...}
//
//  or:
//
//          nil
type RouteTableResponsePtrInput interface {
	pulumi.Input

	ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput
	ToRouteTableResponsePtrOutputWithContext(context.Context) RouteTableResponsePtrOutput
}

type routeTableResponsePtrType RouteTableResponseArgs

func RouteTableResponsePtr(v *RouteTableResponseArgs) RouteTableResponsePtrInput {
	return (*routeTableResponsePtrType)(v)
}

func (*routeTableResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableResponse)(nil)).Elem()
}

func (i *routeTableResponsePtrType) ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput {
	return i.ToRouteTableResponsePtrOutputWithContext(context.Background())
}

func (i *routeTableResponsePtrType) ToRouteTableResponsePtrOutputWithContext(ctx context.Context) RouteTableResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableResponsePtrOutput)
}

// Route table resource.
type RouteTableResponseOutput struct{ *pulumi.OutputState }

func (RouteTableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableResponse)(nil)).Elem()
}

func (o RouteTableResponseOutput) ToRouteTableResponseOutput() RouteTableResponseOutput {
	return o
}

func (o RouteTableResponseOutput) ToRouteTableResponseOutputWithContext(ctx context.Context) RouteTableResponseOutput {
	return o
}

func (o RouteTableResponseOutput) ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput {
	return o.ToRouteTableResponsePtrOutputWithContext(context.Background())
}

func (o RouteTableResponseOutput) ToRouteTableResponsePtrOutputWithContext(ctx context.Context) RouteTableResponsePtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *RouteTableResponse {
		return &v
	}).(RouteTableResponsePtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteTableResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteTableResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RouteTableResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the route table.
func (o RouteTableResponseOutput) Properties() RouteTablePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *RouteTablePropertiesFormatResponse { return v.Properties }).(RouteTablePropertiesFormatResponsePtrOutput)
}

// Resource tags.
func (o RouteTableResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteTableResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteTableResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Type }).(pulumi.StringOutput)
}

type RouteTableResponsePtrOutput struct{ *pulumi.OutputState }

func (RouteTableResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableResponse)(nil)).Elem()
}

func (o RouteTableResponsePtrOutput) ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput {
	return o
}

func (o RouteTableResponsePtrOutput) ToRouteTableResponsePtrOutputWithContext(ctx context.Context) RouteTableResponsePtrOutput {
	return o
}

func (o RouteTableResponsePtrOutput) Elem() RouteTableResponseOutput {
	return o.ApplyT(func(v *RouteTableResponse) RouteTableResponse { return *v }).(RouteTableResponseOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteTableResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteTableResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RouteTableResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Properties of the route table.
func (o RouteTableResponsePtrOutput) Properties() RouteTablePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *RouteTablePropertiesFormatResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(RouteTablePropertiesFormatResponsePtrOutput)
}

// Resource tags.
func (o RouteTableResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RouteTableResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteTableResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Network security rule.
type SecurityRuleType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the security rule
	Properties *SecurityRulePropertiesFormat `pulumi:"properties"`
}

// SecurityRuleTypeInput is an input type that accepts SecurityRuleTypeArgs and SecurityRuleTypeOutput values.
// You can construct a concrete instance of `SecurityRuleTypeInput` via:
//
//          SecurityRuleTypeArgs{...}
type SecurityRuleTypeInput interface {
	pulumi.Input

	ToSecurityRuleTypeOutput() SecurityRuleTypeOutput
	ToSecurityRuleTypeOutputWithContext(context.Context) SecurityRuleTypeOutput
}

// Network security rule.
type SecurityRuleTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the security rule
	Properties SecurityRulePropertiesFormatPtrInput `pulumi:"properties"`
}

func (SecurityRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleType)(nil)).Elem()
}

func (i SecurityRuleTypeArgs) ToSecurityRuleTypeOutput() SecurityRuleTypeOutput {
	return i.ToSecurityRuleTypeOutputWithContext(context.Background())
}

func (i SecurityRuleTypeArgs) ToSecurityRuleTypeOutputWithContext(ctx context.Context) SecurityRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleTypeOutput)
}

// SecurityRuleTypeArrayInput is an input type that accepts SecurityRuleTypeArray and SecurityRuleTypeArrayOutput values.
// You can construct a concrete instance of `SecurityRuleTypeArrayInput` via:
//
//          SecurityRuleTypeArray{ SecurityRuleTypeArgs{...} }
type SecurityRuleTypeArrayInput interface {
	pulumi.Input

	ToSecurityRuleTypeArrayOutput() SecurityRuleTypeArrayOutput
	ToSecurityRuleTypeArrayOutputWithContext(context.Context) SecurityRuleTypeArrayOutput
}

type SecurityRuleTypeArray []SecurityRuleTypeInput

func (SecurityRuleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleType)(nil)).Elem()
}

func (i SecurityRuleTypeArray) ToSecurityRuleTypeArrayOutput() SecurityRuleTypeArrayOutput {
	return i.ToSecurityRuleTypeArrayOutputWithContext(context.Background())
}

func (i SecurityRuleTypeArray) ToSecurityRuleTypeArrayOutputWithContext(ctx context.Context) SecurityRuleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleTypeArrayOutput)
}

// Network security rule.
type SecurityRuleTypeOutput struct{ *pulumi.OutputState }

func (SecurityRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleType)(nil)).Elem()
}

func (o SecurityRuleTypeOutput) ToSecurityRuleTypeOutput() SecurityRuleTypeOutput {
	return o
}

func (o SecurityRuleTypeOutput) ToSecurityRuleTypeOutputWithContext(ctx context.Context) SecurityRuleTypeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o SecurityRuleTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SecurityRuleTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SecurityRuleTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the security rule
func (o SecurityRuleTypeOutput) Properties() SecurityRulePropertiesFormatPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *SecurityRulePropertiesFormat { return v.Properties }).(SecurityRulePropertiesFormatPtrOutput)
}

type SecurityRuleTypeArrayOutput struct{ *pulumi.OutputState }

func (SecurityRuleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleType)(nil)).Elem()
}

func (o SecurityRuleTypeArrayOutput) ToSecurityRuleTypeArrayOutput() SecurityRuleTypeArrayOutput {
	return o
}

func (o SecurityRuleTypeArrayOutput) ToSecurityRuleTypeArrayOutputWithContext(ctx context.Context) SecurityRuleTypeArrayOutput {
	return o
}

func (o SecurityRuleTypeArrayOutput) Index(i pulumi.IntInput) SecurityRuleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityRuleType {
		return vs[0].([]SecurityRuleType)[vs[1].(int)]
	}).(SecurityRuleTypeOutput)
}

// Security rule resource.
type SecurityRulePropertiesFormat struct {
	// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
	Access string `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix *string `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes []string `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups []ApplicationSecurityGroupType `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
	Direction string `pulumi:"direction"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix *string `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes []string `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups []ApplicationSecurityGroupType `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports.
	SourcePortRange *string `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
}

// SecurityRulePropertiesFormatInput is an input type that accepts SecurityRulePropertiesFormatArgs and SecurityRulePropertiesFormatOutput values.
// You can construct a concrete instance of `SecurityRulePropertiesFormatInput` via:
//
//          SecurityRulePropertiesFormatArgs{...}
type SecurityRulePropertiesFormatInput interface {
	pulumi.Input

	ToSecurityRulePropertiesFormatOutput() SecurityRulePropertiesFormatOutput
	ToSecurityRulePropertiesFormatOutputWithContext(context.Context) SecurityRulePropertiesFormatOutput
}

// Security rule resource.
type SecurityRulePropertiesFormatArgs struct {
	// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
	Access pulumi.StringInput `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix pulumi.StringPtrInput `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes pulumi.StringArrayInput `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups ApplicationSecurityGroupTypeArrayInput `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports.
	DestinationPortRange pulumi.StringPtrInput `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges pulumi.StringArrayInput `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix pulumi.StringPtrInput `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes pulumi.StringArrayInput `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups ApplicationSecurityGroupTypeArrayInput `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports.
	SourcePortRange pulumi.StringPtrInput `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges pulumi.StringArrayInput `pulumi:"sourcePortRanges"`
}

func (SecurityRulePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRulePropertiesFormat)(nil)).Elem()
}

func (i SecurityRulePropertiesFormatArgs) ToSecurityRulePropertiesFormatOutput() SecurityRulePropertiesFormatOutput {
	return i.ToSecurityRulePropertiesFormatOutputWithContext(context.Background())
}

func (i SecurityRulePropertiesFormatArgs) ToSecurityRulePropertiesFormatOutputWithContext(ctx context.Context) SecurityRulePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRulePropertiesFormatOutput)
}

func (i SecurityRulePropertiesFormatArgs) ToSecurityRulePropertiesFormatPtrOutput() SecurityRulePropertiesFormatPtrOutput {
	return i.ToSecurityRulePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i SecurityRulePropertiesFormatArgs) ToSecurityRulePropertiesFormatPtrOutputWithContext(ctx context.Context) SecurityRulePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRulePropertiesFormatOutput).ToSecurityRulePropertiesFormatPtrOutputWithContext(ctx)
}

// SecurityRulePropertiesFormatPtrInput is an input type that accepts SecurityRulePropertiesFormatArgs, SecurityRulePropertiesFormatPtr and SecurityRulePropertiesFormatPtrOutput values.
// You can construct a concrete instance of `SecurityRulePropertiesFormatPtrInput` via:
//
//          SecurityRulePropertiesFormatArgs{...}
//
//  or:
//
//          nil
type SecurityRulePropertiesFormatPtrInput interface {
	pulumi.Input

	ToSecurityRulePropertiesFormatPtrOutput() SecurityRulePropertiesFormatPtrOutput
	ToSecurityRulePropertiesFormatPtrOutputWithContext(context.Context) SecurityRulePropertiesFormatPtrOutput
}

type securityRulePropertiesFormatPtrType SecurityRulePropertiesFormatArgs

func SecurityRulePropertiesFormatPtr(v *SecurityRulePropertiesFormatArgs) SecurityRulePropertiesFormatPtrInput {
	return (*securityRulePropertiesFormatPtrType)(v)
}

func (*securityRulePropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityRulePropertiesFormat)(nil)).Elem()
}

func (i *securityRulePropertiesFormatPtrType) ToSecurityRulePropertiesFormatPtrOutput() SecurityRulePropertiesFormatPtrOutput {
	return i.ToSecurityRulePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *securityRulePropertiesFormatPtrType) ToSecurityRulePropertiesFormatPtrOutputWithContext(ctx context.Context) SecurityRulePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRulePropertiesFormatPtrOutput)
}

// Security rule resource.
type SecurityRulePropertiesFormatOutput struct{ *pulumi.OutputState }

func (SecurityRulePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRulePropertiesFormat)(nil)).Elem()
}

func (o SecurityRulePropertiesFormatOutput) ToSecurityRulePropertiesFormatOutput() SecurityRulePropertiesFormatOutput {
	return o
}

func (o SecurityRulePropertiesFormatOutput) ToSecurityRulePropertiesFormatOutputWithContext(ctx context.Context) SecurityRulePropertiesFormatOutput {
	return o
}

func (o SecurityRulePropertiesFormatOutput) ToSecurityRulePropertiesFormatPtrOutput() SecurityRulePropertiesFormatPtrOutput {
	return o.ToSecurityRulePropertiesFormatPtrOutputWithContext(context.Background())
}

func (o SecurityRulePropertiesFormatOutput) ToSecurityRulePropertiesFormatPtrOutputWithContext(ctx context.Context) SecurityRulePropertiesFormatPtrOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormat) *SecurityRulePropertiesFormat {
		return &v
	}).(SecurityRulePropertiesFormatPtrOutput)
}

// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
func (o SecurityRulePropertiesFormatOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormat) string { return v.Access }).(pulumi.StringOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o SecurityRulePropertiesFormatOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormat) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination address prefix. CIDR or destination IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
func (o SecurityRulePropertiesFormatOutput) DestinationAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormat) *string { return v.DestinationAddressPrefix }).(pulumi.StringPtrOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o SecurityRulePropertiesFormatOutput) DestinationAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormat) []string { return v.DestinationAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as destination.
func (o SecurityRulePropertiesFormatOutput) DestinationApplicationSecurityGroups() ApplicationSecurityGroupTypeArrayOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormat) []ApplicationSecurityGroupType {
		return v.DestinationApplicationSecurityGroups
	}).(ApplicationSecurityGroupTypeArrayOutput)
}

// The destination port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports.
func (o SecurityRulePropertiesFormatOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormat) *string { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// The destination port ranges.
func (o SecurityRulePropertiesFormatOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormat) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
func (o SecurityRulePropertiesFormatOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormat) string { return v.Direction }).(pulumi.StringOutput)
}

// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o SecurityRulePropertiesFormatOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormat) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
func (o SecurityRulePropertiesFormatOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormat) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o SecurityRulePropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
func (o SecurityRulePropertiesFormatOutput) SourceAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormat) *string { return v.SourceAddressPrefix }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP ranges.
func (o SecurityRulePropertiesFormatOutput) SourceAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormat) []string { return v.SourceAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as source.
func (o SecurityRulePropertiesFormatOutput) SourceApplicationSecurityGroups() ApplicationSecurityGroupTypeArrayOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormat) []ApplicationSecurityGroupType {
		return v.SourceApplicationSecurityGroups
	}).(ApplicationSecurityGroupTypeArrayOutput)
}

// The source port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports.
func (o SecurityRulePropertiesFormatOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormat) *string { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

// The source port ranges.
func (o SecurityRulePropertiesFormatOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormat) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

type SecurityRulePropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (SecurityRulePropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityRulePropertiesFormat)(nil)).Elem()
}

func (o SecurityRulePropertiesFormatPtrOutput) ToSecurityRulePropertiesFormatPtrOutput() SecurityRulePropertiesFormatPtrOutput {
	return o
}

func (o SecurityRulePropertiesFormatPtrOutput) ToSecurityRulePropertiesFormatPtrOutputWithContext(ctx context.Context) SecurityRulePropertiesFormatPtrOutput {
	return o
}

func (o SecurityRulePropertiesFormatPtrOutput) Elem() SecurityRulePropertiesFormatOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormat) SecurityRulePropertiesFormat { return *v }).(SecurityRulePropertiesFormatOutput)
}

// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
func (o SecurityRulePropertiesFormatPtrOutput) Access() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return &v.Access
	}).(pulumi.StringPtrOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o SecurityRulePropertiesFormatPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The destination address prefix. CIDR or destination IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
func (o SecurityRulePropertiesFormatPtrOutput) DestinationAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.DestinationAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o SecurityRulePropertiesFormatPtrOutput) DestinationAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormat) []string {
		if v == nil {
			return nil
		}
		return v.DestinationAddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// The application security group specified as destination.
func (o SecurityRulePropertiesFormatPtrOutput) DestinationApplicationSecurityGroups() ApplicationSecurityGroupTypeArrayOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormat) []ApplicationSecurityGroupType {
		if v == nil {
			return nil
		}
		return v.DestinationApplicationSecurityGroups
	}).(ApplicationSecurityGroupTypeArrayOutput)
}

// The destination port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports.
func (o SecurityRulePropertiesFormatPtrOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.DestinationPortRange
	}).(pulumi.StringPtrOutput)
}

// The destination port ranges.
func (o SecurityRulePropertiesFormatPtrOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormat) []string {
		if v == nil {
			return nil
		}
		return v.DestinationPortRanges
	}).(pulumi.StringArrayOutput)
}

// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
func (o SecurityRulePropertiesFormatPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(pulumi.StringPtrOutput)
}

// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o SecurityRulePropertiesFormatPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
func (o SecurityRulePropertiesFormatPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o SecurityRulePropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The CIDR or source IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
func (o SecurityRulePropertiesFormatPtrOutput) SourceAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.SourceAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The CIDR or source IP ranges.
func (o SecurityRulePropertiesFormatPtrOutput) SourceAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormat) []string {
		if v == nil {
			return nil
		}
		return v.SourceAddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// The application security group specified as source.
func (o SecurityRulePropertiesFormatPtrOutput) SourceApplicationSecurityGroups() ApplicationSecurityGroupTypeArrayOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormat) []ApplicationSecurityGroupType {
		if v == nil {
			return nil
		}
		return v.SourceApplicationSecurityGroups
	}).(ApplicationSecurityGroupTypeArrayOutput)
}

// The source port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports.
func (o SecurityRulePropertiesFormatPtrOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.SourcePortRange
	}).(pulumi.StringPtrOutput)
}

// The source port ranges.
func (o SecurityRulePropertiesFormatPtrOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormat) []string {
		if v == nil {
			return nil
		}
		return v.SourcePortRanges
	}).(pulumi.StringArrayOutput)
}

// Security rule resource.
type SecurityRulePropertiesFormatResponse struct {
	// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
	Access string `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix *string `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes []string `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups []ApplicationSecurityGroupResponse `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
	Direction string `pulumi:"direction"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix *string `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes []string `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups []ApplicationSecurityGroupResponse `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports.
	SourcePortRange *string `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
}

// SecurityRulePropertiesFormatResponseInput is an input type that accepts SecurityRulePropertiesFormatResponseArgs and SecurityRulePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `SecurityRulePropertiesFormatResponseInput` via:
//
//          SecurityRulePropertiesFormatResponseArgs{...}
type SecurityRulePropertiesFormatResponseInput interface {
	pulumi.Input

	ToSecurityRulePropertiesFormatResponseOutput() SecurityRulePropertiesFormatResponseOutput
	ToSecurityRulePropertiesFormatResponseOutputWithContext(context.Context) SecurityRulePropertiesFormatResponseOutput
}

// Security rule resource.
type SecurityRulePropertiesFormatResponseArgs struct {
	// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
	Access pulumi.StringInput `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix pulumi.StringPtrInput `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes pulumi.StringArrayInput `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups ApplicationSecurityGroupResponseArrayInput `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports.
	DestinationPortRange pulumi.StringPtrInput `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges pulumi.StringArrayInput `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix pulumi.StringPtrInput `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes pulumi.StringArrayInput `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups ApplicationSecurityGroupResponseArrayInput `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports.
	SourcePortRange pulumi.StringPtrInput `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges pulumi.StringArrayInput `pulumi:"sourcePortRanges"`
}

func (SecurityRulePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRulePropertiesFormatResponse)(nil)).Elem()
}

func (i SecurityRulePropertiesFormatResponseArgs) ToSecurityRulePropertiesFormatResponseOutput() SecurityRulePropertiesFormatResponseOutput {
	return i.ToSecurityRulePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i SecurityRulePropertiesFormatResponseArgs) ToSecurityRulePropertiesFormatResponseOutputWithContext(ctx context.Context) SecurityRulePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRulePropertiesFormatResponseOutput)
}

func (i SecurityRulePropertiesFormatResponseArgs) ToSecurityRulePropertiesFormatResponsePtrOutput() SecurityRulePropertiesFormatResponsePtrOutput {
	return i.ToSecurityRulePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i SecurityRulePropertiesFormatResponseArgs) ToSecurityRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) SecurityRulePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRulePropertiesFormatResponseOutput).ToSecurityRulePropertiesFormatResponsePtrOutputWithContext(ctx)
}

// SecurityRulePropertiesFormatResponsePtrInput is an input type that accepts SecurityRulePropertiesFormatResponseArgs, SecurityRulePropertiesFormatResponsePtr and SecurityRulePropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `SecurityRulePropertiesFormatResponsePtrInput` via:
//
//          SecurityRulePropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type SecurityRulePropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToSecurityRulePropertiesFormatResponsePtrOutput() SecurityRulePropertiesFormatResponsePtrOutput
	ToSecurityRulePropertiesFormatResponsePtrOutputWithContext(context.Context) SecurityRulePropertiesFormatResponsePtrOutput
}

type securityRulePropertiesFormatResponsePtrType SecurityRulePropertiesFormatResponseArgs

func SecurityRulePropertiesFormatResponsePtr(v *SecurityRulePropertiesFormatResponseArgs) SecurityRulePropertiesFormatResponsePtrInput {
	return (*securityRulePropertiesFormatResponsePtrType)(v)
}

func (*securityRulePropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityRulePropertiesFormatResponse)(nil)).Elem()
}

func (i *securityRulePropertiesFormatResponsePtrType) ToSecurityRulePropertiesFormatResponsePtrOutput() SecurityRulePropertiesFormatResponsePtrOutput {
	return i.ToSecurityRulePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *securityRulePropertiesFormatResponsePtrType) ToSecurityRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) SecurityRulePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRulePropertiesFormatResponsePtrOutput)
}

// Security rule resource.
type SecurityRulePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (SecurityRulePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRulePropertiesFormatResponse)(nil)).Elem()
}

func (o SecurityRulePropertiesFormatResponseOutput) ToSecurityRulePropertiesFormatResponseOutput() SecurityRulePropertiesFormatResponseOutput {
	return o
}

func (o SecurityRulePropertiesFormatResponseOutput) ToSecurityRulePropertiesFormatResponseOutputWithContext(ctx context.Context) SecurityRulePropertiesFormatResponseOutput {
	return o
}

func (o SecurityRulePropertiesFormatResponseOutput) ToSecurityRulePropertiesFormatResponsePtrOutput() SecurityRulePropertiesFormatResponsePtrOutput {
	return o.ToSecurityRulePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o SecurityRulePropertiesFormatResponseOutput) ToSecurityRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) SecurityRulePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormatResponse) *SecurityRulePropertiesFormatResponse {
		return &v
	}).(SecurityRulePropertiesFormatResponsePtrOutput)
}

// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
func (o SecurityRulePropertiesFormatResponseOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormatResponse) string { return v.Access }).(pulumi.StringOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o SecurityRulePropertiesFormatResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormatResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination address prefix. CIDR or destination IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
func (o SecurityRulePropertiesFormatResponseOutput) DestinationAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormatResponse) *string { return v.DestinationAddressPrefix }).(pulumi.StringPtrOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o SecurityRulePropertiesFormatResponseOutput) DestinationAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormatResponse) []string { return v.DestinationAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as destination.
func (o SecurityRulePropertiesFormatResponseOutput) DestinationApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormatResponse) []ApplicationSecurityGroupResponse {
		return v.DestinationApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// The destination port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports.
func (o SecurityRulePropertiesFormatResponseOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormatResponse) *string { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// The destination port ranges.
func (o SecurityRulePropertiesFormatResponseOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormatResponse) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
func (o SecurityRulePropertiesFormatResponseOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormatResponse) string { return v.Direction }).(pulumi.StringOutput)
}

// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o SecurityRulePropertiesFormatResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormatResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
func (o SecurityRulePropertiesFormatResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormatResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o SecurityRulePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
func (o SecurityRulePropertiesFormatResponseOutput) SourceAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormatResponse) *string { return v.SourceAddressPrefix }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP ranges.
func (o SecurityRulePropertiesFormatResponseOutput) SourceAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormatResponse) []string { return v.SourceAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as source.
func (o SecurityRulePropertiesFormatResponseOutput) SourceApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormatResponse) []ApplicationSecurityGroupResponse {
		return v.SourceApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// The source port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports.
func (o SecurityRulePropertiesFormatResponseOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormatResponse) *string { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

// The source port ranges.
func (o SecurityRulePropertiesFormatResponseOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRulePropertiesFormatResponse) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

type SecurityRulePropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (SecurityRulePropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityRulePropertiesFormatResponse)(nil)).Elem()
}

func (o SecurityRulePropertiesFormatResponsePtrOutput) ToSecurityRulePropertiesFormatResponsePtrOutput() SecurityRulePropertiesFormatResponsePtrOutput {
	return o
}

func (o SecurityRulePropertiesFormatResponsePtrOutput) ToSecurityRulePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) SecurityRulePropertiesFormatResponsePtrOutput {
	return o
}

func (o SecurityRulePropertiesFormatResponsePtrOutput) Elem() SecurityRulePropertiesFormatResponseOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormatResponse) SecurityRulePropertiesFormatResponse { return *v }).(SecurityRulePropertiesFormatResponseOutput)
}

// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
func (o SecurityRulePropertiesFormatResponsePtrOutput) Access() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Access
	}).(pulumi.StringPtrOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o SecurityRulePropertiesFormatResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The destination address prefix. CIDR or destination IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
func (o SecurityRulePropertiesFormatResponsePtrOutput) DestinationAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.DestinationAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o SecurityRulePropertiesFormatResponsePtrOutput) DestinationAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormatResponse) []string {
		if v == nil {
			return nil
		}
		return v.DestinationAddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// The application security group specified as destination.
func (o SecurityRulePropertiesFormatResponsePtrOutput) DestinationApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormatResponse) []ApplicationSecurityGroupResponse {
		if v == nil {
			return nil
		}
		return v.DestinationApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// The destination port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports.
func (o SecurityRulePropertiesFormatResponsePtrOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.DestinationPortRange
	}).(pulumi.StringPtrOutput)
}

// The destination port ranges.
func (o SecurityRulePropertiesFormatResponsePtrOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormatResponse) []string {
		if v == nil {
			return nil
		}
		return v.DestinationPortRanges
	}).(pulumi.StringArrayOutput)
}

// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
func (o SecurityRulePropertiesFormatResponsePtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(pulumi.StringPtrOutput)
}

// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o SecurityRulePropertiesFormatResponsePtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
func (o SecurityRulePropertiesFormatResponsePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o SecurityRulePropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The CIDR or source IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
func (o SecurityRulePropertiesFormatResponsePtrOutput) SourceAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.SourceAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The CIDR or source IP ranges.
func (o SecurityRulePropertiesFormatResponsePtrOutput) SourceAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormatResponse) []string {
		if v == nil {
			return nil
		}
		return v.SourceAddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// The application security group specified as source.
func (o SecurityRulePropertiesFormatResponsePtrOutput) SourceApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormatResponse) []ApplicationSecurityGroupResponse {
		if v == nil {
			return nil
		}
		return v.SourceApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// The source port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports.
func (o SecurityRulePropertiesFormatResponsePtrOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.SourcePortRange
	}).(pulumi.StringPtrOutput)
}

// The source port ranges.
func (o SecurityRulePropertiesFormatResponsePtrOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityRulePropertiesFormatResponse) []string {
		if v == nil {
			return nil
		}
		return v.SourcePortRanges
	}).(pulumi.StringArrayOutput)
}

// Network security rule.
type SecurityRuleResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the security rule
	Properties *SecurityRulePropertiesFormatResponse `pulumi:"properties"`
}

// SecurityRuleResponseInput is an input type that accepts SecurityRuleResponseArgs and SecurityRuleResponseOutput values.
// You can construct a concrete instance of `SecurityRuleResponseInput` via:
//
//          SecurityRuleResponseArgs{...}
type SecurityRuleResponseInput interface {
	pulumi.Input

	ToSecurityRuleResponseOutput() SecurityRuleResponseOutput
	ToSecurityRuleResponseOutputWithContext(context.Context) SecurityRuleResponseOutput
}

// Network security rule.
type SecurityRuleResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the security rule
	Properties SecurityRulePropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (SecurityRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleResponse)(nil)).Elem()
}

func (i SecurityRuleResponseArgs) ToSecurityRuleResponseOutput() SecurityRuleResponseOutput {
	return i.ToSecurityRuleResponseOutputWithContext(context.Background())
}

func (i SecurityRuleResponseArgs) ToSecurityRuleResponseOutputWithContext(ctx context.Context) SecurityRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleResponseOutput)
}

// SecurityRuleResponseArrayInput is an input type that accepts SecurityRuleResponseArray and SecurityRuleResponseArrayOutput values.
// You can construct a concrete instance of `SecurityRuleResponseArrayInput` via:
//
//          SecurityRuleResponseArray{ SecurityRuleResponseArgs{...} }
type SecurityRuleResponseArrayInput interface {
	pulumi.Input

	ToSecurityRuleResponseArrayOutput() SecurityRuleResponseArrayOutput
	ToSecurityRuleResponseArrayOutputWithContext(context.Context) SecurityRuleResponseArrayOutput
}

type SecurityRuleResponseArray []SecurityRuleResponseInput

func (SecurityRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleResponse)(nil)).Elem()
}

func (i SecurityRuleResponseArray) ToSecurityRuleResponseArrayOutput() SecurityRuleResponseArrayOutput {
	return i.ToSecurityRuleResponseArrayOutputWithContext(context.Background())
}

func (i SecurityRuleResponseArray) ToSecurityRuleResponseArrayOutputWithContext(ctx context.Context) SecurityRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleResponseArrayOutput)
}

// Network security rule.
type SecurityRuleResponseOutput struct{ *pulumi.OutputState }

func (SecurityRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleResponse)(nil)).Elem()
}

func (o SecurityRuleResponseOutput) ToSecurityRuleResponseOutput() SecurityRuleResponseOutput {
	return o
}

func (o SecurityRuleResponseOutput) ToSecurityRuleResponseOutputWithContext(ctx context.Context) SecurityRuleResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o SecurityRuleResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SecurityRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SecurityRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the security rule
func (o SecurityRuleResponseOutput) Properties() SecurityRulePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *SecurityRulePropertiesFormatResponse { return v.Properties }).(SecurityRulePropertiesFormatResponsePtrOutput)
}

type SecurityRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleResponse)(nil)).Elem()
}

func (o SecurityRuleResponseArrayOutput) ToSecurityRuleResponseArrayOutput() SecurityRuleResponseArrayOutput {
	return o
}

func (o SecurityRuleResponseArrayOutput) ToSecurityRuleResponseArrayOutputWithContext(ctx context.Context) SecurityRuleResponseArrayOutput {
	return o
}

func (o SecurityRuleResponseArrayOutput) Index(i pulumi.IntInput) SecurityRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityRuleResponse {
		return vs[0].([]SecurityRuleResponse)[vs[1].(int)]
	}).(SecurityRuleResponseOutput)
}

// ServiceAssociationLink resource.
type ServiceAssociationLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Resource navigation link properties format.
	Properties *ServiceAssociationLinkPropertiesFormat `pulumi:"properties"`
}

// ServiceAssociationLinkInput is an input type that accepts ServiceAssociationLinkArgs and ServiceAssociationLinkOutput values.
// You can construct a concrete instance of `ServiceAssociationLinkInput` via:
//
//          ServiceAssociationLinkArgs{...}
type ServiceAssociationLinkInput interface {
	pulumi.Input

	ToServiceAssociationLinkOutput() ServiceAssociationLinkOutput
	ToServiceAssociationLinkOutputWithContext(context.Context) ServiceAssociationLinkOutput
}

// ServiceAssociationLink resource.
type ServiceAssociationLinkArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Resource navigation link properties format.
	Properties ServiceAssociationLinkPropertiesFormatPtrInput `pulumi:"properties"`
}

func (ServiceAssociationLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAssociationLink)(nil)).Elem()
}

func (i ServiceAssociationLinkArgs) ToServiceAssociationLinkOutput() ServiceAssociationLinkOutput {
	return i.ToServiceAssociationLinkOutputWithContext(context.Background())
}

func (i ServiceAssociationLinkArgs) ToServiceAssociationLinkOutputWithContext(ctx context.Context) ServiceAssociationLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAssociationLinkOutput)
}

// ServiceAssociationLinkArrayInput is an input type that accepts ServiceAssociationLinkArray and ServiceAssociationLinkArrayOutput values.
// You can construct a concrete instance of `ServiceAssociationLinkArrayInput` via:
//
//          ServiceAssociationLinkArray{ ServiceAssociationLinkArgs{...} }
type ServiceAssociationLinkArrayInput interface {
	pulumi.Input

	ToServiceAssociationLinkArrayOutput() ServiceAssociationLinkArrayOutput
	ToServiceAssociationLinkArrayOutputWithContext(context.Context) ServiceAssociationLinkArrayOutput
}

type ServiceAssociationLinkArray []ServiceAssociationLinkInput

func (ServiceAssociationLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAssociationLink)(nil)).Elem()
}

func (i ServiceAssociationLinkArray) ToServiceAssociationLinkArrayOutput() ServiceAssociationLinkArrayOutput {
	return i.ToServiceAssociationLinkArrayOutputWithContext(context.Background())
}

func (i ServiceAssociationLinkArray) ToServiceAssociationLinkArrayOutputWithContext(ctx context.Context) ServiceAssociationLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAssociationLinkArrayOutput)
}

// ServiceAssociationLink resource.
type ServiceAssociationLinkOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAssociationLink)(nil)).Elem()
}

func (o ServiceAssociationLinkOutput) ToServiceAssociationLinkOutput() ServiceAssociationLinkOutput {
	return o
}

func (o ServiceAssociationLinkOutput) ToServiceAssociationLinkOutputWithContext(ctx context.Context) ServiceAssociationLinkOutput {
	return o
}

// Resource ID.
func (o ServiceAssociationLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ServiceAssociationLinkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLink) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Resource navigation link properties format.
func (o ServiceAssociationLinkOutput) Properties() ServiceAssociationLinkPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLink) *ServiceAssociationLinkPropertiesFormat { return v.Properties }).(ServiceAssociationLinkPropertiesFormatPtrOutput)
}

type ServiceAssociationLinkArrayOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAssociationLink)(nil)).Elem()
}

func (o ServiceAssociationLinkArrayOutput) ToServiceAssociationLinkArrayOutput() ServiceAssociationLinkArrayOutput {
	return o
}

func (o ServiceAssociationLinkArrayOutput) ToServiceAssociationLinkArrayOutputWithContext(ctx context.Context) ServiceAssociationLinkArrayOutput {
	return o
}

func (o ServiceAssociationLinkArrayOutput) Index(i pulumi.IntInput) ServiceAssociationLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceAssociationLink {
		return vs[0].([]ServiceAssociationLink)[vs[1].(int)]
	}).(ServiceAssociationLinkOutput)
}

// Properties of ServiceAssociationLink.
type ServiceAssociationLinkPropertiesFormat struct {
	// Link to the external resource.
	Link *string `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType *string `pulumi:"linkedResourceType"`
}

// ServiceAssociationLinkPropertiesFormatInput is an input type that accepts ServiceAssociationLinkPropertiesFormatArgs and ServiceAssociationLinkPropertiesFormatOutput values.
// You can construct a concrete instance of `ServiceAssociationLinkPropertiesFormatInput` via:
//
//          ServiceAssociationLinkPropertiesFormatArgs{...}
type ServiceAssociationLinkPropertiesFormatInput interface {
	pulumi.Input

	ToServiceAssociationLinkPropertiesFormatOutput() ServiceAssociationLinkPropertiesFormatOutput
	ToServiceAssociationLinkPropertiesFormatOutputWithContext(context.Context) ServiceAssociationLinkPropertiesFormatOutput
}

// Properties of ServiceAssociationLink.
type ServiceAssociationLinkPropertiesFormatArgs struct {
	// Link to the external resource.
	Link pulumi.StringPtrInput `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType pulumi.StringPtrInput `pulumi:"linkedResourceType"`
}

func (ServiceAssociationLinkPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAssociationLinkPropertiesFormat)(nil)).Elem()
}

func (i ServiceAssociationLinkPropertiesFormatArgs) ToServiceAssociationLinkPropertiesFormatOutput() ServiceAssociationLinkPropertiesFormatOutput {
	return i.ToServiceAssociationLinkPropertiesFormatOutputWithContext(context.Background())
}

func (i ServiceAssociationLinkPropertiesFormatArgs) ToServiceAssociationLinkPropertiesFormatOutputWithContext(ctx context.Context) ServiceAssociationLinkPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAssociationLinkPropertiesFormatOutput)
}

func (i ServiceAssociationLinkPropertiesFormatArgs) ToServiceAssociationLinkPropertiesFormatPtrOutput() ServiceAssociationLinkPropertiesFormatPtrOutput {
	return i.ToServiceAssociationLinkPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ServiceAssociationLinkPropertiesFormatArgs) ToServiceAssociationLinkPropertiesFormatPtrOutputWithContext(ctx context.Context) ServiceAssociationLinkPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAssociationLinkPropertiesFormatOutput).ToServiceAssociationLinkPropertiesFormatPtrOutputWithContext(ctx)
}

// ServiceAssociationLinkPropertiesFormatPtrInput is an input type that accepts ServiceAssociationLinkPropertiesFormatArgs, ServiceAssociationLinkPropertiesFormatPtr and ServiceAssociationLinkPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ServiceAssociationLinkPropertiesFormatPtrInput` via:
//
//          ServiceAssociationLinkPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ServiceAssociationLinkPropertiesFormatPtrInput interface {
	pulumi.Input

	ToServiceAssociationLinkPropertiesFormatPtrOutput() ServiceAssociationLinkPropertiesFormatPtrOutput
	ToServiceAssociationLinkPropertiesFormatPtrOutputWithContext(context.Context) ServiceAssociationLinkPropertiesFormatPtrOutput
}

type serviceAssociationLinkPropertiesFormatPtrType ServiceAssociationLinkPropertiesFormatArgs

func ServiceAssociationLinkPropertiesFormatPtr(v *ServiceAssociationLinkPropertiesFormatArgs) ServiceAssociationLinkPropertiesFormatPtrInput {
	return (*serviceAssociationLinkPropertiesFormatPtrType)(v)
}

func (*serviceAssociationLinkPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAssociationLinkPropertiesFormat)(nil)).Elem()
}

func (i *serviceAssociationLinkPropertiesFormatPtrType) ToServiceAssociationLinkPropertiesFormatPtrOutput() ServiceAssociationLinkPropertiesFormatPtrOutput {
	return i.ToServiceAssociationLinkPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *serviceAssociationLinkPropertiesFormatPtrType) ToServiceAssociationLinkPropertiesFormatPtrOutputWithContext(ctx context.Context) ServiceAssociationLinkPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAssociationLinkPropertiesFormatPtrOutput)
}

// Properties of ServiceAssociationLink.
type ServiceAssociationLinkPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAssociationLinkPropertiesFormat)(nil)).Elem()
}

func (o ServiceAssociationLinkPropertiesFormatOutput) ToServiceAssociationLinkPropertiesFormatOutput() ServiceAssociationLinkPropertiesFormatOutput {
	return o
}

func (o ServiceAssociationLinkPropertiesFormatOutput) ToServiceAssociationLinkPropertiesFormatOutputWithContext(ctx context.Context) ServiceAssociationLinkPropertiesFormatOutput {
	return o
}

func (o ServiceAssociationLinkPropertiesFormatOutput) ToServiceAssociationLinkPropertiesFormatPtrOutput() ServiceAssociationLinkPropertiesFormatPtrOutput {
	return o.ToServiceAssociationLinkPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ServiceAssociationLinkPropertiesFormatOutput) ToServiceAssociationLinkPropertiesFormatPtrOutputWithContext(ctx context.Context) ServiceAssociationLinkPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkPropertiesFormat) *ServiceAssociationLinkPropertiesFormat {
		return &v
	}).(ServiceAssociationLinkPropertiesFormatPtrOutput)
}

// Link to the external resource.
func (o ServiceAssociationLinkPropertiesFormatOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkPropertiesFormat) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ServiceAssociationLinkPropertiesFormatOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkPropertiesFormat) *string { return v.LinkedResourceType }).(pulumi.StringPtrOutput)
}

type ServiceAssociationLinkPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAssociationLinkPropertiesFormat)(nil)).Elem()
}

func (o ServiceAssociationLinkPropertiesFormatPtrOutput) ToServiceAssociationLinkPropertiesFormatPtrOutput() ServiceAssociationLinkPropertiesFormatPtrOutput {
	return o
}

func (o ServiceAssociationLinkPropertiesFormatPtrOutput) ToServiceAssociationLinkPropertiesFormatPtrOutputWithContext(ctx context.Context) ServiceAssociationLinkPropertiesFormatPtrOutput {
	return o
}

func (o ServiceAssociationLinkPropertiesFormatPtrOutput) Elem() ServiceAssociationLinkPropertiesFormatOutput {
	return o.ApplyT(func(v *ServiceAssociationLinkPropertiesFormat) ServiceAssociationLinkPropertiesFormat { return *v }).(ServiceAssociationLinkPropertiesFormatOutput)
}

// Link to the external resource.
func (o ServiceAssociationLinkPropertiesFormatPtrOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAssociationLinkPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.Link
	}).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ServiceAssociationLinkPropertiesFormatPtrOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAssociationLinkPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.LinkedResourceType
	}).(pulumi.StringPtrOutput)
}

// Properties of ServiceAssociationLink.
type ServiceAssociationLinkPropertiesFormatResponse struct {
	// Link to the external resource.
	Link *string `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType *string `pulumi:"linkedResourceType"`
	// Provisioning state of the ServiceAssociationLink resource.
	ProvisioningState string `pulumi:"provisioningState"`
}

// ServiceAssociationLinkPropertiesFormatResponseInput is an input type that accepts ServiceAssociationLinkPropertiesFormatResponseArgs and ServiceAssociationLinkPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ServiceAssociationLinkPropertiesFormatResponseInput` via:
//
//          ServiceAssociationLinkPropertiesFormatResponseArgs{...}
type ServiceAssociationLinkPropertiesFormatResponseInput interface {
	pulumi.Input

	ToServiceAssociationLinkPropertiesFormatResponseOutput() ServiceAssociationLinkPropertiesFormatResponseOutput
	ToServiceAssociationLinkPropertiesFormatResponseOutputWithContext(context.Context) ServiceAssociationLinkPropertiesFormatResponseOutput
}

// Properties of ServiceAssociationLink.
type ServiceAssociationLinkPropertiesFormatResponseArgs struct {
	// Link to the external resource.
	Link pulumi.StringPtrInput `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType pulumi.StringPtrInput `pulumi:"linkedResourceType"`
	// Provisioning state of the ServiceAssociationLink resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (ServiceAssociationLinkPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAssociationLinkPropertiesFormatResponse)(nil)).Elem()
}

func (i ServiceAssociationLinkPropertiesFormatResponseArgs) ToServiceAssociationLinkPropertiesFormatResponseOutput() ServiceAssociationLinkPropertiesFormatResponseOutput {
	return i.ToServiceAssociationLinkPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ServiceAssociationLinkPropertiesFormatResponseArgs) ToServiceAssociationLinkPropertiesFormatResponseOutputWithContext(ctx context.Context) ServiceAssociationLinkPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAssociationLinkPropertiesFormatResponseOutput)
}

func (i ServiceAssociationLinkPropertiesFormatResponseArgs) ToServiceAssociationLinkPropertiesFormatResponsePtrOutput() ServiceAssociationLinkPropertiesFormatResponsePtrOutput {
	return i.ToServiceAssociationLinkPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ServiceAssociationLinkPropertiesFormatResponseArgs) ToServiceAssociationLinkPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ServiceAssociationLinkPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAssociationLinkPropertiesFormatResponseOutput).ToServiceAssociationLinkPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ServiceAssociationLinkPropertiesFormatResponsePtrInput is an input type that accepts ServiceAssociationLinkPropertiesFormatResponseArgs, ServiceAssociationLinkPropertiesFormatResponsePtr and ServiceAssociationLinkPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ServiceAssociationLinkPropertiesFormatResponsePtrInput` via:
//
//          ServiceAssociationLinkPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ServiceAssociationLinkPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToServiceAssociationLinkPropertiesFormatResponsePtrOutput() ServiceAssociationLinkPropertiesFormatResponsePtrOutput
	ToServiceAssociationLinkPropertiesFormatResponsePtrOutputWithContext(context.Context) ServiceAssociationLinkPropertiesFormatResponsePtrOutput
}

type serviceAssociationLinkPropertiesFormatResponsePtrType ServiceAssociationLinkPropertiesFormatResponseArgs

func ServiceAssociationLinkPropertiesFormatResponsePtr(v *ServiceAssociationLinkPropertiesFormatResponseArgs) ServiceAssociationLinkPropertiesFormatResponsePtrInput {
	return (*serviceAssociationLinkPropertiesFormatResponsePtrType)(v)
}

func (*serviceAssociationLinkPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAssociationLinkPropertiesFormatResponse)(nil)).Elem()
}

func (i *serviceAssociationLinkPropertiesFormatResponsePtrType) ToServiceAssociationLinkPropertiesFormatResponsePtrOutput() ServiceAssociationLinkPropertiesFormatResponsePtrOutput {
	return i.ToServiceAssociationLinkPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *serviceAssociationLinkPropertiesFormatResponsePtrType) ToServiceAssociationLinkPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ServiceAssociationLinkPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAssociationLinkPropertiesFormatResponsePtrOutput)
}

// Properties of ServiceAssociationLink.
type ServiceAssociationLinkPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAssociationLinkPropertiesFormatResponse)(nil)).Elem()
}

func (o ServiceAssociationLinkPropertiesFormatResponseOutput) ToServiceAssociationLinkPropertiesFormatResponseOutput() ServiceAssociationLinkPropertiesFormatResponseOutput {
	return o
}

func (o ServiceAssociationLinkPropertiesFormatResponseOutput) ToServiceAssociationLinkPropertiesFormatResponseOutputWithContext(ctx context.Context) ServiceAssociationLinkPropertiesFormatResponseOutput {
	return o
}

func (o ServiceAssociationLinkPropertiesFormatResponseOutput) ToServiceAssociationLinkPropertiesFormatResponsePtrOutput() ServiceAssociationLinkPropertiesFormatResponsePtrOutput {
	return o.ToServiceAssociationLinkPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ServiceAssociationLinkPropertiesFormatResponseOutput) ToServiceAssociationLinkPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ServiceAssociationLinkPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkPropertiesFormatResponse) *ServiceAssociationLinkPropertiesFormatResponse {
		return &v
	}).(ServiceAssociationLinkPropertiesFormatResponsePtrOutput)
}

// Link to the external resource.
func (o ServiceAssociationLinkPropertiesFormatResponseOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkPropertiesFormatResponse) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ServiceAssociationLinkPropertiesFormatResponseOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkPropertiesFormatResponse) *string { return v.LinkedResourceType }).(pulumi.StringPtrOutput)
}

// Provisioning state of the ServiceAssociationLink resource.
func (o ServiceAssociationLinkPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAssociationLinkPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type ServiceAssociationLinkPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAssociationLinkPropertiesFormatResponse)(nil)).Elem()
}

func (o ServiceAssociationLinkPropertiesFormatResponsePtrOutput) ToServiceAssociationLinkPropertiesFormatResponsePtrOutput() ServiceAssociationLinkPropertiesFormatResponsePtrOutput {
	return o
}

func (o ServiceAssociationLinkPropertiesFormatResponsePtrOutput) ToServiceAssociationLinkPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ServiceAssociationLinkPropertiesFormatResponsePtrOutput {
	return o
}

func (o ServiceAssociationLinkPropertiesFormatResponsePtrOutput) Elem() ServiceAssociationLinkPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ServiceAssociationLinkPropertiesFormatResponse) ServiceAssociationLinkPropertiesFormatResponse {
		return *v
	}).(ServiceAssociationLinkPropertiesFormatResponseOutput)
}

// Link to the external resource.
func (o ServiceAssociationLinkPropertiesFormatResponsePtrOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAssociationLinkPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.Link
	}).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ServiceAssociationLinkPropertiesFormatResponsePtrOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAssociationLinkPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.LinkedResourceType
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the ServiceAssociationLink resource.
func (o ServiceAssociationLinkPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAssociationLinkPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// ServiceAssociationLink resource.
type ServiceAssociationLinkResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Resource navigation link properties format.
	Properties *ServiceAssociationLinkPropertiesFormatResponse `pulumi:"properties"`
}

// ServiceAssociationLinkResponseInput is an input type that accepts ServiceAssociationLinkResponseArgs and ServiceAssociationLinkResponseOutput values.
// You can construct a concrete instance of `ServiceAssociationLinkResponseInput` via:
//
//          ServiceAssociationLinkResponseArgs{...}
type ServiceAssociationLinkResponseInput interface {
	pulumi.Input

	ToServiceAssociationLinkResponseOutput() ServiceAssociationLinkResponseOutput
	ToServiceAssociationLinkResponseOutputWithContext(context.Context) ServiceAssociationLinkResponseOutput
}

// ServiceAssociationLink resource.
type ServiceAssociationLinkResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Resource navigation link properties format.
	Properties ServiceAssociationLinkPropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (ServiceAssociationLinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAssociationLinkResponse)(nil)).Elem()
}

func (i ServiceAssociationLinkResponseArgs) ToServiceAssociationLinkResponseOutput() ServiceAssociationLinkResponseOutput {
	return i.ToServiceAssociationLinkResponseOutputWithContext(context.Background())
}

func (i ServiceAssociationLinkResponseArgs) ToServiceAssociationLinkResponseOutputWithContext(ctx context.Context) ServiceAssociationLinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAssociationLinkResponseOutput)
}

// ServiceAssociationLinkResponseArrayInput is an input type that accepts ServiceAssociationLinkResponseArray and ServiceAssociationLinkResponseArrayOutput values.
// You can construct a concrete instance of `ServiceAssociationLinkResponseArrayInput` via:
//
//          ServiceAssociationLinkResponseArray{ ServiceAssociationLinkResponseArgs{...} }
type ServiceAssociationLinkResponseArrayInput interface {
	pulumi.Input

	ToServiceAssociationLinkResponseArrayOutput() ServiceAssociationLinkResponseArrayOutput
	ToServiceAssociationLinkResponseArrayOutputWithContext(context.Context) ServiceAssociationLinkResponseArrayOutput
}

type ServiceAssociationLinkResponseArray []ServiceAssociationLinkResponseInput

func (ServiceAssociationLinkResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAssociationLinkResponse)(nil)).Elem()
}

func (i ServiceAssociationLinkResponseArray) ToServiceAssociationLinkResponseArrayOutput() ServiceAssociationLinkResponseArrayOutput {
	return i.ToServiceAssociationLinkResponseArrayOutputWithContext(context.Background())
}

func (i ServiceAssociationLinkResponseArray) ToServiceAssociationLinkResponseArrayOutputWithContext(ctx context.Context) ServiceAssociationLinkResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAssociationLinkResponseArrayOutput)
}

// ServiceAssociationLink resource.
type ServiceAssociationLinkResponseOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAssociationLinkResponse)(nil)).Elem()
}

func (o ServiceAssociationLinkResponseOutput) ToServiceAssociationLinkResponseOutput() ServiceAssociationLinkResponseOutput {
	return o
}

func (o ServiceAssociationLinkResponseOutput) ToServiceAssociationLinkResponseOutputWithContext(ctx context.Context) ServiceAssociationLinkResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceAssociationLinkResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ServiceAssociationLinkResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ServiceAssociationLinkResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Resource navigation link properties format.
func (o ServiceAssociationLinkResponseOutput) Properties() ServiceAssociationLinkPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *ServiceAssociationLinkPropertiesFormatResponse {
		return v.Properties
	}).(ServiceAssociationLinkPropertiesFormatResponsePtrOutput)
}

type ServiceAssociationLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAssociationLinkResponse)(nil)).Elem()
}

func (o ServiceAssociationLinkResponseArrayOutput) ToServiceAssociationLinkResponseArrayOutput() ServiceAssociationLinkResponseArrayOutput {
	return o
}

func (o ServiceAssociationLinkResponseArrayOutput) ToServiceAssociationLinkResponseArrayOutputWithContext(ctx context.Context) ServiceAssociationLinkResponseArrayOutput {
	return o
}

func (o ServiceAssociationLinkResponseArrayOutput) Index(i pulumi.IntInput) ServiceAssociationLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceAssociationLinkResponse {
		return vs[0].([]ServiceAssociationLinkResponse)[vs[1].(int)]
	}).(ServiceAssociationLinkResponseOutput)
}

// Properties of a service delegation.
type ServiceDelegationPropertiesFormat struct {
	// Describes the actions permitted to the service upon delegation
	Actions []string `pulumi:"actions"`
	// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers)
	ServiceName *string `pulumi:"serviceName"`
}

// ServiceDelegationPropertiesFormatInput is an input type that accepts ServiceDelegationPropertiesFormatArgs and ServiceDelegationPropertiesFormatOutput values.
// You can construct a concrete instance of `ServiceDelegationPropertiesFormatInput` via:
//
//          ServiceDelegationPropertiesFormatArgs{...}
type ServiceDelegationPropertiesFormatInput interface {
	pulumi.Input

	ToServiceDelegationPropertiesFormatOutput() ServiceDelegationPropertiesFormatOutput
	ToServiceDelegationPropertiesFormatOutputWithContext(context.Context) ServiceDelegationPropertiesFormatOutput
}

// Properties of a service delegation.
type ServiceDelegationPropertiesFormatArgs struct {
	// Describes the actions permitted to the service upon delegation
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers)
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (ServiceDelegationPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDelegationPropertiesFormat)(nil)).Elem()
}

func (i ServiceDelegationPropertiesFormatArgs) ToServiceDelegationPropertiesFormatOutput() ServiceDelegationPropertiesFormatOutput {
	return i.ToServiceDelegationPropertiesFormatOutputWithContext(context.Background())
}

func (i ServiceDelegationPropertiesFormatArgs) ToServiceDelegationPropertiesFormatOutputWithContext(ctx context.Context) ServiceDelegationPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDelegationPropertiesFormatOutput)
}

func (i ServiceDelegationPropertiesFormatArgs) ToServiceDelegationPropertiesFormatPtrOutput() ServiceDelegationPropertiesFormatPtrOutput {
	return i.ToServiceDelegationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ServiceDelegationPropertiesFormatArgs) ToServiceDelegationPropertiesFormatPtrOutputWithContext(ctx context.Context) ServiceDelegationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDelegationPropertiesFormatOutput).ToServiceDelegationPropertiesFormatPtrOutputWithContext(ctx)
}

// ServiceDelegationPropertiesFormatPtrInput is an input type that accepts ServiceDelegationPropertiesFormatArgs, ServiceDelegationPropertiesFormatPtr and ServiceDelegationPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ServiceDelegationPropertiesFormatPtrInput` via:
//
//          ServiceDelegationPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ServiceDelegationPropertiesFormatPtrInput interface {
	pulumi.Input

	ToServiceDelegationPropertiesFormatPtrOutput() ServiceDelegationPropertiesFormatPtrOutput
	ToServiceDelegationPropertiesFormatPtrOutputWithContext(context.Context) ServiceDelegationPropertiesFormatPtrOutput
}

type serviceDelegationPropertiesFormatPtrType ServiceDelegationPropertiesFormatArgs

func ServiceDelegationPropertiesFormatPtr(v *ServiceDelegationPropertiesFormatArgs) ServiceDelegationPropertiesFormatPtrInput {
	return (*serviceDelegationPropertiesFormatPtrType)(v)
}

func (*serviceDelegationPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDelegationPropertiesFormat)(nil)).Elem()
}

func (i *serviceDelegationPropertiesFormatPtrType) ToServiceDelegationPropertiesFormatPtrOutput() ServiceDelegationPropertiesFormatPtrOutput {
	return i.ToServiceDelegationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *serviceDelegationPropertiesFormatPtrType) ToServiceDelegationPropertiesFormatPtrOutputWithContext(ctx context.Context) ServiceDelegationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDelegationPropertiesFormatPtrOutput)
}

// Properties of a service delegation.
type ServiceDelegationPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ServiceDelegationPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDelegationPropertiesFormat)(nil)).Elem()
}

func (o ServiceDelegationPropertiesFormatOutput) ToServiceDelegationPropertiesFormatOutput() ServiceDelegationPropertiesFormatOutput {
	return o
}

func (o ServiceDelegationPropertiesFormatOutput) ToServiceDelegationPropertiesFormatOutputWithContext(ctx context.Context) ServiceDelegationPropertiesFormatOutput {
	return o
}

func (o ServiceDelegationPropertiesFormatOutput) ToServiceDelegationPropertiesFormatPtrOutput() ServiceDelegationPropertiesFormatPtrOutput {
	return o.ToServiceDelegationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ServiceDelegationPropertiesFormatOutput) ToServiceDelegationPropertiesFormatPtrOutputWithContext(ctx context.Context) ServiceDelegationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ServiceDelegationPropertiesFormat) *ServiceDelegationPropertiesFormat {
		return &v
	}).(ServiceDelegationPropertiesFormatPtrOutput)
}

// Describes the actions permitted to the service upon delegation
func (o ServiceDelegationPropertiesFormatOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceDelegationPropertiesFormat) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers)
func (o ServiceDelegationPropertiesFormatOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDelegationPropertiesFormat) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type ServiceDelegationPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ServiceDelegationPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDelegationPropertiesFormat)(nil)).Elem()
}

func (o ServiceDelegationPropertiesFormatPtrOutput) ToServiceDelegationPropertiesFormatPtrOutput() ServiceDelegationPropertiesFormatPtrOutput {
	return o
}

func (o ServiceDelegationPropertiesFormatPtrOutput) ToServiceDelegationPropertiesFormatPtrOutputWithContext(ctx context.Context) ServiceDelegationPropertiesFormatPtrOutput {
	return o
}

func (o ServiceDelegationPropertiesFormatPtrOutput) Elem() ServiceDelegationPropertiesFormatOutput {
	return o.ApplyT(func(v *ServiceDelegationPropertiesFormat) ServiceDelegationPropertiesFormat { return *v }).(ServiceDelegationPropertiesFormatOutput)
}

// Describes the actions permitted to the service upon delegation
func (o ServiceDelegationPropertiesFormatPtrOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceDelegationPropertiesFormat) []string {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(pulumi.StringArrayOutput)
}

// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers)
func (o ServiceDelegationPropertiesFormatPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDelegationPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// Properties of a service delegation.
type ServiceDelegationPropertiesFormatResponse struct {
	// Describes the actions permitted to the service upon delegation
	Actions []string `pulumi:"actions"`
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers)
	ServiceName *string `pulumi:"serviceName"`
}

// ServiceDelegationPropertiesFormatResponseInput is an input type that accepts ServiceDelegationPropertiesFormatResponseArgs and ServiceDelegationPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ServiceDelegationPropertiesFormatResponseInput` via:
//
//          ServiceDelegationPropertiesFormatResponseArgs{...}
type ServiceDelegationPropertiesFormatResponseInput interface {
	pulumi.Input

	ToServiceDelegationPropertiesFormatResponseOutput() ServiceDelegationPropertiesFormatResponseOutput
	ToServiceDelegationPropertiesFormatResponseOutputWithContext(context.Context) ServiceDelegationPropertiesFormatResponseOutput
}

// Properties of a service delegation.
type ServiceDelegationPropertiesFormatResponseArgs struct {
	// Describes the actions permitted to the service upon delegation
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers)
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (ServiceDelegationPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDelegationPropertiesFormatResponse)(nil)).Elem()
}

func (i ServiceDelegationPropertiesFormatResponseArgs) ToServiceDelegationPropertiesFormatResponseOutput() ServiceDelegationPropertiesFormatResponseOutput {
	return i.ToServiceDelegationPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ServiceDelegationPropertiesFormatResponseArgs) ToServiceDelegationPropertiesFormatResponseOutputWithContext(ctx context.Context) ServiceDelegationPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDelegationPropertiesFormatResponseOutput)
}

func (i ServiceDelegationPropertiesFormatResponseArgs) ToServiceDelegationPropertiesFormatResponsePtrOutput() ServiceDelegationPropertiesFormatResponsePtrOutput {
	return i.ToServiceDelegationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ServiceDelegationPropertiesFormatResponseArgs) ToServiceDelegationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ServiceDelegationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDelegationPropertiesFormatResponseOutput).ToServiceDelegationPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ServiceDelegationPropertiesFormatResponsePtrInput is an input type that accepts ServiceDelegationPropertiesFormatResponseArgs, ServiceDelegationPropertiesFormatResponsePtr and ServiceDelegationPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ServiceDelegationPropertiesFormatResponsePtrInput` via:
//
//          ServiceDelegationPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ServiceDelegationPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToServiceDelegationPropertiesFormatResponsePtrOutput() ServiceDelegationPropertiesFormatResponsePtrOutput
	ToServiceDelegationPropertiesFormatResponsePtrOutputWithContext(context.Context) ServiceDelegationPropertiesFormatResponsePtrOutput
}

type serviceDelegationPropertiesFormatResponsePtrType ServiceDelegationPropertiesFormatResponseArgs

func ServiceDelegationPropertiesFormatResponsePtr(v *ServiceDelegationPropertiesFormatResponseArgs) ServiceDelegationPropertiesFormatResponsePtrInput {
	return (*serviceDelegationPropertiesFormatResponsePtrType)(v)
}

func (*serviceDelegationPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDelegationPropertiesFormatResponse)(nil)).Elem()
}

func (i *serviceDelegationPropertiesFormatResponsePtrType) ToServiceDelegationPropertiesFormatResponsePtrOutput() ServiceDelegationPropertiesFormatResponsePtrOutput {
	return i.ToServiceDelegationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *serviceDelegationPropertiesFormatResponsePtrType) ToServiceDelegationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ServiceDelegationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDelegationPropertiesFormatResponsePtrOutput)
}

// Properties of a service delegation.
type ServiceDelegationPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ServiceDelegationPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDelegationPropertiesFormatResponse)(nil)).Elem()
}

func (o ServiceDelegationPropertiesFormatResponseOutput) ToServiceDelegationPropertiesFormatResponseOutput() ServiceDelegationPropertiesFormatResponseOutput {
	return o
}

func (o ServiceDelegationPropertiesFormatResponseOutput) ToServiceDelegationPropertiesFormatResponseOutputWithContext(ctx context.Context) ServiceDelegationPropertiesFormatResponseOutput {
	return o
}

func (o ServiceDelegationPropertiesFormatResponseOutput) ToServiceDelegationPropertiesFormatResponsePtrOutput() ServiceDelegationPropertiesFormatResponsePtrOutput {
	return o.ToServiceDelegationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ServiceDelegationPropertiesFormatResponseOutput) ToServiceDelegationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ServiceDelegationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ServiceDelegationPropertiesFormatResponse) *ServiceDelegationPropertiesFormatResponse {
		return &v
	}).(ServiceDelegationPropertiesFormatResponsePtrOutput)
}

// Describes the actions permitted to the service upon delegation
func (o ServiceDelegationPropertiesFormatResponseOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceDelegationPropertiesFormatResponse) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// The provisioning state of the resource.
func (o ServiceDelegationPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDelegationPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers)
func (o ServiceDelegationPropertiesFormatResponseOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDelegationPropertiesFormatResponse) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type ServiceDelegationPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceDelegationPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDelegationPropertiesFormatResponse)(nil)).Elem()
}

func (o ServiceDelegationPropertiesFormatResponsePtrOutput) ToServiceDelegationPropertiesFormatResponsePtrOutput() ServiceDelegationPropertiesFormatResponsePtrOutput {
	return o
}

func (o ServiceDelegationPropertiesFormatResponsePtrOutput) ToServiceDelegationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ServiceDelegationPropertiesFormatResponsePtrOutput {
	return o
}

func (o ServiceDelegationPropertiesFormatResponsePtrOutput) Elem() ServiceDelegationPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ServiceDelegationPropertiesFormatResponse) ServiceDelegationPropertiesFormatResponse {
		return *v
	}).(ServiceDelegationPropertiesFormatResponseOutput)
}

// Describes the actions permitted to the service upon delegation
func (o ServiceDelegationPropertiesFormatResponsePtrOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceDelegationPropertiesFormatResponse) []string {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(pulumi.StringArrayOutput)
}

// The provisioning state of the resource.
func (o ServiceDelegationPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDelegationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers)
func (o ServiceDelegationPropertiesFormatResponsePtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDelegationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// Service End point policy resource.
type ServiceEndpointPolicyType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Properties of the service end point policy
	Properties *ServiceEndpointPolicyPropertiesFormat `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// ServiceEndpointPolicyTypeInput is an input type that accepts ServiceEndpointPolicyTypeArgs and ServiceEndpointPolicyTypeOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyTypeInput` via:
//
//          ServiceEndpointPolicyTypeArgs{...}
type ServiceEndpointPolicyTypeInput interface {
	pulumi.Input

	ToServiceEndpointPolicyTypeOutput() ServiceEndpointPolicyTypeOutput
	ToServiceEndpointPolicyTypeOutputWithContext(context.Context) ServiceEndpointPolicyTypeOutput
}

// Service End point policy resource.
type ServiceEndpointPolicyTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Properties of the service end point policy
	Properties ServiceEndpointPolicyPropertiesFormatPtrInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (ServiceEndpointPolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyType)(nil)).Elem()
}

func (i ServiceEndpointPolicyTypeArgs) ToServiceEndpointPolicyTypeOutput() ServiceEndpointPolicyTypeOutput {
	return i.ToServiceEndpointPolicyTypeOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyTypeArgs) ToServiceEndpointPolicyTypeOutputWithContext(ctx context.Context) ServiceEndpointPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyTypeOutput)
}

// ServiceEndpointPolicyTypeArrayInput is an input type that accepts ServiceEndpointPolicyTypeArray and ServiceEndpointPolicyTypeArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyTypeArrayInput` via:
//
//          ServiceEndpointPolicyTypeArray{ ServiceEndpointPolicyTypeArgs{...} }
type ServiceEndpointPolicyTypeArrayInput interface {
	pulumi.Input

	ToServiceEndpointPolicyTypeArrayOutput() ServiceEndpointPolicyTypeArrayOutput
	ToServiceEndpointPolicyTypeArrayOutputWithContext(context.Context) ServiceEndpointPolicyTypeArrayOutput
}

type ServiceEndpointPolicyTypeArray []ServiceEndpointPolicyTypeInput

func (ServiceEndpointPolicyTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyType)(nil)).Elem()
}

func (i ServiceEndpointPolicyTypeArray) ToServiceEndpointPolicyTypeArrayOutput() ServiceEndpointPolicyTypeArrayOutput {
	return i.ToServiceEndpointPolicyTypeArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyTypeArray) ToServiceEndpointPolicyTypeArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyTypeArrayOutput)
}

// Service End point policy resource.
type ServiceEndpointPolicyTypeOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyType)(nil)).Elem()
}

func (o ServiceEndpointPolicyTypeOutput) ToServiceEndpointPolicyTypeOutput() ServiceEndpointPolicyTypeOutput {
	return o
}

func (o ServiceEndpointPolicyTypeOutput) ToServiceEndpointPolicyTypeOutputWithContext(ctx context.Context) ServiceEndpointPolicyTypeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceEndpointPolicyTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ServiceEndpointPolicyTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o ServiceEndpointPolicyTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Properties of the service end point policy
func (o ServiceEndpointPolicyTypeOutput) Properties() ServiceEndpointPolicyPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) *ServiceEndpointPolicyPropertiesFormat { return v.Properties }).(ServiceEndpointPolicyPropertiesFormatPtrOutput)
}

// Resource tags.
func (o ServiceEndpointPolicyTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type ServiceEndpointPolicyTypeArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyType)(nil)).Elem()
}

func (o ServiceEndpointPolicyTypeArrayOutput) ToServiceEndpointPolicyTypeArrayOutput() ServiceEndpointPolicyTypeArrayOutput {
	return o
}

func (o ServiceEndpointPolicyTypeArrayOutput) ToServiceEndpointPolicyTypeArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyTypeArrayOutput {
	return o
}

func (o ServiceEndpointPolicyTypeArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicyType {
		return vs[0].([]ServiceEndpointPolicyType)[vs[1].(int)]
	}).(ServiceEndpointPolicyTypeOutput)
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the service endpoint policy definition
	Properties *ServiceEndpointPolicyDefinitionPropertiesFormat `pulumi:"properties"`
}

// ServiceEndpointPolicyDefinitionTypeInput is an input type that accepts ServiceEndpointPolicyDefinitionTypeArgs and ServiceEndpointPolicyDefinitionTypeOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyDefinitionTypeInput` via:
//
//          ServiceEndpointPolicyDefinitionTypeArgs{...}
type ServiceEndpointPolicyDefinitionTypeInput interface {
	pulumi.Input

	ToServiceEndpointPolicyDefinitionTypeOutput() ServiceEndpointPolicyDefinitionTypeOutput
	ToServiceEndpointPolicyDefinitionTypeOutputWithContext(context.Context) ServiceEndpointPolicyDefinitionTypeOutput
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the service endpoint policy definition
	Properties ServiceEndpointPolicyDefinitionPropertiesFormatPtrInput `pulumi:"properties"`
}

func (ServiceEndpointPolicyDefinitionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinitionType)(nil)).Elem()
}

func (i ServiceEndpointPolicyDefinitionTypeArgs) ToServiceEndpointPolicyDefinitionTypeOutput() ServiceEndpointPolicyDefinitionTypeOutput {
	return i.ToServiceEndpointPolicyDefinitionTypeOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyDefinitionTypeArgs) ToServiceEndpointPolicyDefinitionTypeOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyDefinitionTypeOutput)
}

// ServiceEndpointPolicyDefinitionTypeArrayInput is an input type that accepts ServiceEndpointPolicyDefinitionTypeArray and ServiceEndpointPolicyDefinitionTypeArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyDefinitionTypeArrayInput` via:
//
//          ServiceEndpointPolicyDefinitionTypeArray{ ServiceEndpointPolicyDefinitionTypeArgs{...} }
type ServiceEndpointPolicyDefinitionTypeArrayInput interface {
	pulumi.Input

	ToServiceEndpointPolicyDefinitionTypeArrayOutput() ServiceEndpointPolicyDefinitionTypeArrayOutput
	ToServiceEndpointPolicyDefinitionTypeArrayOutputWithContext(context.Context) ServiceEndpointPolicyDefinitionTypeArrayOutput
}

type ServiceEndpointPolicyDefinitionTypeArray []ServiceEndpointPolicyDefinitionTypeInput

func (ServiceEndpointPolicyDefinitionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyDefinitionType)(nil)).Elem()
}

func (i ServiceEndpointPolicyDefinitionTypeArray) ToServiceEndpointPolicyDefinitionTypeArrayOutput() ServiceEndpointPolicyDefinitionTypeArrayOutput {
	return i.ToServiceEndpointPolicyDefinitionTypeArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyDefinitionTypeArray) ToServiceEndpointPolicyDefinitionTypeArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyDefinitionTypeArrayOutput)
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionTypeOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinitionType)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionTypeOutput) ToServiceEndpointPolicyDefinitionTypeOutput() ServiceEndpointPolicyDefinitionTypeOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionTypeOutput) ToServiceEndpointPolicyDefinitionTypeOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionTypeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceEndpointPolicyDefinitionTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ServiceEndpointPolicyDefinitionTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ServiceEndpointPolicyDefinitionTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the service endpoint policy definition
func (o ServiceEndpointPolicyDefinitionTypeOutput) Properties() ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) *ServiceEndpointPolicyDefinitionPropertiesFormat {
		return v.Properties
	}).(ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput)
}

type ServiceEndpointPolicyDefinitionTypeArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyDefinitionType)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionTypeArrayOutput) ToServiceEndpointPolicyDefinitionTypeArrayOutput() ServiceEndpointPolicyDefinitionTypeArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionTypeArrayOutput) ToServiceEndpointPolicyDefinitionTypeArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionTypeArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionTypeArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyDefinitionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicyDefinitionType {
		return vs[0].([]ServiceEndpointPolicyDefinitionType)[vs[1].(int)]
	}).(ServiceEndpointPolicyDefinitionTypeOutput)
}

// Service Endpoint policy definition resource.
type ServiceEndpointPolicyDefinitionPropertiesFormat struct {
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// service endpoint name.
	Service *string `pulumi:"service"`
	// A list of service resources.
	ServiceResources []string `pulumi:"serviceResources"`
}

// ServiceEndpointPolicyDefinitionPropertiesFormatInput is an input type that accepts ServiceEndpointPolicyDefinitionPropertiesFormatArgs and ServiceEndpointPolicyDefinitionPropertiesFormatOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyDefinitionPropertiesFormatInput` via:
//
//          ServiceEndpointPolicyDefinitionPropertiesFormatArgs{...}
type ServiceEndpointPolicyDefinitionPropertiesFormatInput interface {
	pulumi.Input

	ToServiceEndpointPolicyDefinitionPropertiesFormatOutput() ServiceEndpointPolicyDefinitionPropertiesFormatOutput
	ToServiceEndpointPolicyDefinitionPropertiesFormatOutputWithContext(context.Context) ServiceEndpointPolicyDefinitionPropertiesFormatOutput
}

// Service Endpoint policy definition resource.
type ServiceEndpointPolicyDefinitionPropertiesFormatArgs struct {
	// A description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// service endpoint name.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// A list of service resources.
	ServiceResources pulumi.StringArrayInput `pulumi:"serviceResources"`
}

func (ServiceEndpointPolicyDefinitionPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinitionPropertiesFormat)(nil)).Elem()
}

func (i ServiceEndpointPolicyDefinitionPropertiesFormatArgs) ToServiceEndpointPolicyDefinitionPropertiesFormatOutput() ServiceEndpointPolicyDefinitionPropertiesFormatOutput {
	return i.ToServiceEndpointPolicyDefinitionPropertiesFormatOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyDefinitionPropertiesFormatArgs) ToServiceEndpointPolicyDefinitionPropertiesFormatOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyDefinitionPropertiesFormatOutput)
}

func (i ServiceEndpointPolicyDefinitionPropertiesFormatArgs) ToServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput() ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput {
	return i.ToServiceEndpointPolicyDefinitionPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyDefinitionPropertiesFormatArgs) ToServiceEndpointPolicyDefinitionPropertiesFormatPtrOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyDefinitionPropertiesFormatOutput).ToServiceEndpointPolicyDefinitionPropertiesFormatPtrOutputWithContext(ctx)
}

// ServiceEndpointPolicyDefinitionPropertiesFormatPtrInput is an input type that accepts ServiceEndpointPolicyDefinitionPropertiesFormatArgs, ServiceEndpointPolicyDefinitionPropertiesFormatPtr and ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyDefinitionPropertiesFormatPtrInput` via:
//
//          ServiceEndpointPolicyDefinitionPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ServiceEndpointPolicyDefinitionPropertiesFormatPtrInput interface {
	pulumi.Input

	ToServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput() ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput
	ToServiceEndpointPolicyDefinitionPropertiesFormatPtrOutputWithContext(context.Context) ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput
}

type serviceEndpointPolicyDefinitionPropertiesFormatPtrType ServiceEndpointPolicyDefinitionPropertiesFormatArgs

func ServiceEndpointPolicyDefinitionPropertiesFormatPtr(v *ServiceEndpointPolicyDefinitionPropertiesFormatArgs) ServiceEndpointPolicyDefinitionPropertiesFormatPtrInput {
	return (*serviceEndpointPolicyDefinitionPropertiesFormatPtrType)(v)
}

func (*serviceEndpointPolicyDefinitionPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEndpointPolicyDefinitionPropertiesFormat)(nil)).Elem()
}

func (i *serviceEndpointPolicyDefinitionPropertiesFormatPtrType) ToServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput() ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput {
	return i.ToServiceEndpointPolicyDefinitionPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *serviceEndpointPolicyDefinitionPropertiesFormatPtrType) ToServiceEndpointPolicyDefinitionPropertiesFormatPtrOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput)
}

// Service Endpoint policy definition resource.
type ServiceEndpointPolicyDefinitionPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinitionPropertiesFormat)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionPropertiesFormatOutput) ToServiceEndpointPolicyDefinitionPropertiesFormatOutput() ServiceEndpointPolicyDefinitionPropertiesFormatOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionPropertiesFormatOutput) ToServiceEndpointPolicyDefinitionPropertiesFormatOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionPropertiesFormatOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionPropertiesFormatOutput) ToServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput() ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput {
	return o.ToServiceEndpointPolicyDefinitionPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ServiceEndpointPolicyDefinitionPropertiesFormatOutput) ToServiceEndpointPolicyDefinitionPropertiesFormatPtrOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionPropertiesFormat) *ServiceEndpointPolicyDefinitionPropertiesFormat {
		return &v
	}).(ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o ServiceEndpointPolicyDefinitionPropertiesFormatOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionPropertiesFormat) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// service endpoint name.
func (o ServiceEndpointPolicyDefinitionPropertiesFormatOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionPropertiesFormat) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// A list of service resources.
func (o ServiceEndpointPolicyDefinitionPropertiesFormatOutput) ServiceResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionPropertiesFormat) []string { return v.ServiceResources }).(pulumi.StringArrayOutput)
}

type ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEndpointPolicyDefinitionPropertiesFormat)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput) ToServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput() ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput) ToServiceEndpointPolicyDefinitionPropertiesFormatPtrOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput) Elem() ServiceEndpointPolicyDefinitionPropertiesFormatOutput {
	return o.ApplyT(func(v *ServiceEndpointPolicyDefinitionPropertiesFormat) ServiceEndpointPolicyDefinitionPropertiesFormat {
		return *v
	}).(ServiceEndpointPolicyDefinitionPropertiesFormatOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceEndpointPolicyDefinitionPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// service endpoint name.
func (o ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceEndpointPolicyDefinitionPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

// A list of service resources.
func (o ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput) ServiceResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceEndpointPolicyDefinitionPropertiesFormat) []string {
		if v == nil {
			return nil
		}
		return v.ServiceResources
	}).(pulumi.StringArrayOutput)
}

// Service Endpoint policy definition resource.
type ServiceEndpointPolicyDefinitionPropertiesFormatResponse struct {
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// The provisioning state of the service end point policy definition. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// service endpoint name.
	Service *string `pulumi:"service"`
	// A list of service resources.
	ServiceResources []string `pulumi:"serviceResources"`
}

// ServiceEndpointPolicyDefinitionPropertiesFormatResponseInput is an input type that accepts ServiceEndpointPolicyDefinitionPropertiesFormatResponseArgs and ServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyDefinitionPropertiesFormatResponseInput` via:
//
//          ServiceEndpointPolicyDefinitionPropertiesFormatResponseArgs{...}
type ServiceEndpointPolicyDefinitionPropertiesFormatResponseInput interface {
	pulumi.Input

	ToServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput() ServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput
	ToServiceEndpointPolicyDefinitionPropertiesFormatResponseOutputWithContext(context.Context) ServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput
}

// Service Endpoint policy definition resource.
type ServiceEndpointPolicyDefinitionPropertiesFormatResponseArgs struct {
	// A description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The provisioning state of the service end point policy definition. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// service endpoint name.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// A list of service resources.
	ServiceResources pulumi.StringArrayInput `pulumi:"serviceResources"`
}

func (ServiceEndpointPolicyDefinitionPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinitionPropertiesFormatResponse)(nil)).Elem()
}

func (i ServiceEndpointPolicyDefinitionPropertiesFormatResponseArgs) ToServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput() ServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput {
	return i.ToServiceEndpointPolicyDefinitionPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyDefinitionPropertiesFormatResponseArgs) ToServiceEndpointPolicyDefinitionPropertiesFormatResponseOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput)
}

func (i ServiceEndpointPolicyDefinitionPropertiesFormatResponseArgs) ToServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput() ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput {
	return i.ToServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyDefinitionPropertiesFormatResponseArgs) ToServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput).ToServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrInput is an input type that accepts ServiceEndpointPolicyDefinitionPropertiesFormatResponseArgs, ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtr and ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrInput` via:
//
//          ServiceEndpointPolicyDefinitionPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput() ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput
	ToServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutputWithContext(context.Context) ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput
}

type serviceEndpointPolicyDefinitionPropertiesFormatResponsePtrType ServiceEndpointPolicyDefinitionPropertiesFormatResponseArgs

func ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtr(v *ServiceEndpointPolicyDefinitionPropertiesFormatResponseArgs) ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrInput {
	return (*serviceEndpointPolicyDefinitionPropertiesFormatResponsePtrType)(v)
}

func (*serviceEndpointPolicyDefinitionPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEndpointPolicyDefinitionPropertiesFormatResponse)(nil)).Elem()
}

func (i *serviceEndpointPolicyDefinitionPropertiesFormatResponsePtrType) ToServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput() ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput {
	return i.ToServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *serviceEndpointPolicyDefinitionPropertiesFormatResponsePtrType) ToServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput)
}

// Service Endpoint policy definition resource.
type ServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinitionPropertiesFormatResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput) ToServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput() ServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput) ToServiceEndpointPolicyDefinitionPropertiesFormatResponseOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput) ToServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput() ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput {
	return o.ToServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput) ToServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionPropertiesFormatResponse) *ServiceEndpointPolicyDefinitionPropertiesFormatResponse {
		return &v
	}).(ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o ServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionPropertiesFormatResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The provisioning state of the service end point policy definition. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// service endpoint name.
func (o ServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionPropertiesFormatResponse) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// A list of service resources.
func (o ServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput) ServiceResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionPropertiesFormatResponse) []string { return v.ServiceResources }).(pulumi.StringArrayOutput)
}

type ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEndpointPolicyDefinitionPropertiesFormatResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput) ToServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput() ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput) ToServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput) Elem() ServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ServiceEndpointPolicyDefinitionPropertiesFormatResponse) ServiceEndpointPolicyDefinitionPropertiesFormatResponse {
		return *v
	}).(ServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceEndpointPolicyDefinitionPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the service end point policy definition. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceEndpointPolicyDefinitionPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// service endpoint name.
func (o ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceEndpointPolicyDefinitionPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

// A list of service resources.
func (o ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput) ServiceResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceEndpointPolicyDefinitionPropertiesFormatResponse) []string {
		if v == nil {
			return nil
		}
		return v.ServiceResources
	}).(pulumi.StringArrayOutput)
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the service endpoint policy definition
	Properties *ServiceEndpointPolicyDefinitionPropertiesFormatResponse `pulumi:"properties"`
}

// ServiceEndpointPolicyDefinitionResponseInput is an input type that accepts ServiceEndpointPolicyDefinitionResponseArgs and ServiceEndpointPolicyDefinitionResponseOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyDefinitionResponseInput` via:
//
//          ServiceEndpointPolicyDefinitionResponseArgs{...}
type ServiceEndpointPolicyDefinitionResponseInput interface {
	pulumi.Input

	ToServiceEndpointPolicyDefinitionResponseOutput() ServiceEndpointPolicyDefinitionResponseOutput
	ToServiceEndpointPolicyDefinitionResponseOutputWithContext(context.Context) ServiceEndpointPolicyDefinitionResponseOutput
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the service endpoint policy definition
	Properties ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (ServiceEndpointPolicyDefinitionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinitionResponse)(nil)).Elem()
}

func (i ServiceEndpointPolicyDefinitionResponseArgs) ToServiceEndpointPolicyDefinitionResponseOutput() ServiceEndpointPolicyDefinitionResponseOutput {
	return i.ToServiceEndpointPolicyDefinitionResponseOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyDefinitionResponseArgs) ToServiceEndpointPolicyDefinitionResponseOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyDefinitionResponseOutput)
}

// ServiceEndpointPolicyDefinitionResponseArrayInput is an input type that accepts ServiceEndpointPolicyDefinitionResponseArray and ServiceEndpointPolicyDefinitionResponseArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyDefinitionResponseArrayInput` via:
//
//          ServiceEndpointPolicyDefinitionResponseArray{ ServiceEndpointPolicyDefinitionResponseArgs{...} }
type ServiceEndpointPolicyDefinitionResponseArrayInput interface {
	pulumi.Input

	ToServiceEndpointPolicyDefinitionResponseArrayOutput() ServiceEndpointPolicyDefinitionResponseArrayOutput
	ToServiceEndpointPolicyDefinitionResponseArrayOutputWithContext(context.Context) ServiceEndpointPolicyDefinitionResponseArrayOutput
}

type ServiceEndpointPolicyDefinitionResponseArray []ServiceEndpointPolicyDefinitionResponseInput

func (ServiceEndpointPolicyDefinitionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyDefinitionResponse)(nil)).Elem()
}

func (i ServiceEndpointPolicyDefinitionResponseArray) ToServiceEndpointPolicyDefinitionResponseArrayOutput() ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return i.ToServiceEndpointPolicyDefinitionResponseArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyDefinitionResponseArray) ToServiceEndpointPolicyDefinitionResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyDefinitionResponseArrayOutput)
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionResponseOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinitionResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionResponseOutput) ToServiceEndpointPolicyDefinitionResponseOutput() ServiceEndpointPolicyDefinitionResponseOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionResponseOutput) ToServiceEndpointPolicyDefinitionResponseOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the service endpoint policy definition
func (o ServiceEndpointPolicyDefinitionResponseOutput) Properties() ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *ServiceEndpointPolicyDefinitionPropertiesFormatResponse {
		return v.Properties
	}).(ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput)
}

type ServiceEndpointPolicyDefinitionResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyDefinitionResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionResponseArrayOutput) ToServiceEndpointPolicyDefinitionResponseArrayOutput() ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionResponseArrayOutput) ToServiceEndpointPolicyDefinitionResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionResponseArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyDefinitionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicyDefinitionResponse {
		return vs[0].([]ServiceEndpointPolicyDefinitionResponse)[vs[1].(int)]
	}).(ServiceEndpointPolicyDefinitionResponseOutput)
}

// Service Endpoint Policy resource.
type ServiceEndpointPolicyPropertiesFormat struct {
	// A collection of service endpoint policy definitions of the service endpoint policy.
	ServiceEndpointPolicyDefinitions []ServiceEndpointPolicyDefinitionType `pulumi:"serviceEndpointPolicyDefinitions"`
}

// ServiceEndpointPolicyPropertiesFormatInput is an input type that accepts ServiceEndpointPolicyPropertiesFormatArgs and ServiceEndpointPolicyPropertiesFormatOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyPropertiesFormatInput` via:
//
//          ServiceEndpointPolicyPropertiesFormatArgs{...}
type ServiceEndpointPolicyPropertiesFormatInput interface {
	pulumi.Input

	ToServiceEndpointPolicyPropertiesFormatOutput() ServiceEndpointPolicyPropertiesFormatOutput
	ToServiceEndpointPolicyPropertiesFormatOutputWithContext(context.Context) ServiceEndpointPolicyPropertiesFormatOutput
}

// Service Endpoint Policy resource.
type ServiceEndpointPolicyPropertiesFormatArgs struct {
	// A collection of service endpoint policy definitions of the service endpoint policy.
	ServiceEndpointPolicyDefinitions ServiceEndpointPolicyDefinitionTypeArrayInput `pulumi:"serviceEndpointPolicyDefinitions"`
}

func (ServiceEndpointPolicyPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyPropertiesFormat)(nil)).Elem()
}

func (i ServiceEndpointPolicyPropertiesFormatArgs) ToServiceEndpointPolicyPropertiesFormatOutput() ServiceEndpointPolicyPropertiesFormatOutput {
	return i.ToServiceEndpointPolicyPropertiesFormatOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyPropertiesFormatArgs) ToServiceEndpointPolicyPropertiesFormatOutputWithContext(ctx context.Context) ServiceEndpointPolicyPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyPropertiesFormatOutput)
}

func (i ServiceEndpointPolicyPropertiesFormatArgs) ToServiceEndpointPolicyPropertiesFormatPtrOutput() ServiceEndpointPolicyPropertiesFormatPtrOutput {
	return i.ToServiceEndpointPolicyPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyPropertiesFormatArgs) ToServiceEndpointPolicyPropertiesFormatPtrOutputWithContext(ctx context.Context) ServiceEndpointPolicyPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyPropertiesFormatOutput).ToServiceEndpointPolicyPropertiesFormatPtrOutputWithContext(ctx)
}

// ServiceEndpointPolicyPropertiesFormatPtrInput is an input type that accepts ServiceEndpointPolicyPropertiesFormatArgs, ServiceEndpointPolicyPropertiesFormatPtr and ServiceEndpointPolicyPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyPropertiesFormatPtrInput` via:
//
//          ServiceEndpointPolicyPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type ServiceEndpointPolicyPropertiesFormatPtrInput interface {
	pulumi.Input

	ToServiceEndpointPolicyPropertiesFormatPtrOutput() ServiceEndpointPolicyPropertiesFormatPtrOutput
	ToServiceEndpointPolicyPropertiesFormatPtrOutputWithContext(context.Context) ServiceEndpointPolicyPropertiesFormatPtrOutput
}

type serviceEndpointPolicyPropertiesFormatPtrType ServiceEndpointPolicyPropertiesFormatArgs

func ServiceEndpointPolicyPropertiesFormatPtr(v *ServiceEndpointPolicyPropertiesFormatArgs) ServiceEndpointPolicyPropertiesFormatPtrInput {
	return (*serviceEndpointPolicyPropertiesFormatPtrType)(v)
}

func (*serviceEndpointPolicyPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEndpointPolicyPropertiesFormat)(nil)).Elem()
}

func (i *serviceEndpointPolicyPropertiesFormatPtrType) ToServiceEndpointPolicyPropertiesFormatPtrOutput() ServiceEndpointPolicyPropertiesFormatPtrOutput {
	return i.ToServiceEndpointPolicyPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *serviceEndpointPolicyPropertiesFormatPtrType) ToServiceEndpointPolicyPropertiesFormatPtrOutputWithContext(ctx context.Context) ServiceEndpointPolicyPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyPropertiesFormatPtrOutput)
}

// Service Endpoint Policy resource.
type ServiceEndpointPolicyPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyPropertiesFormat)(nil)).Elem()
}

func (o ServiceEndpointPolicyPropertiesFormatOutput) ToServiceEndpointPolicyPropertiesFormatOutput() ServiceEndpointPolicyPropertiesFormatOutput {
	return o
}

func (o ServiceEndpointPolicyPropertiesFormatOutput) ToServiceEndpointPolicyPropertiesFormatOutputWithContext(ctx context.Context) ServiceEndpointPolicyPropertiesFormatOutput {
	return o
}

func (o ServiceEndpointPolicyPropertiesFormatOutput) ToServiceEndpointPolicyPropertiesFormatPtrOutput() ServiceEndpointPolicyPropertiesFormatPtrOutput {
	return o.ToServiceEndpointPolicyPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o ServiceEndpointPolicyPropertiesFormatOutput) ToServiceEndpointPolicyPropertiesFormatPtrOutputWithContext(ctx context.Context) ServiceEndpointPolicyPropertiesFormatPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyPropertiesFormat) *ServiceEndpointPolicyPropertiesFormat {
		return &v
	}).(ServiceEndpointPolicyPropertiesFormatPtrOutput)
}

// A collection of service endpoint policy definitions of the service endpoint policy.
func (o ServiceEndpointPolicyPropertiesFormatOutput) ServiceEndpointPolicyDefinitions() ServiceEndpointPolicyDefinitionTypeArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyPropertiesFormat) []ServiceEndpointPolicyDefinitionType {
		return v.ServiceEndpointPolicyDefinitions
	}).(ServiceEndpointPolicyDefinitionTypeArrayOutput)
}

type ServiceEndpointPolicyPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEndpointPolicyPropertiesFormat)(nil)).Elem()
}

func (o ServiceEndpointPolicyPropertiesFormatPtrOutput) ToServiceEndpointPolicyPropertiesFormatPtrOutput() ServiceEndpointPolicyPropertiesFormatPtrOutput {
	return o
}

func (o ServiceEndpointPolicyPropertiesFormatPtrOutput) ToServiceEndpointPolicyPropertiesFormatPtrOutputWithContext(ctx context.Context) ServiceEndpointPolicyPropertiesFormatPtrOutput {
	return o
}

func (o ServiceEndpointPolicyPropertiesFormatPtrOutput) Elem() ServiceEndpointPolicyPropertiesFormatOutput {
	return o.ApplyT(func(v *ServiceEndpointPolicyPropertiesFormat) ServiceEndpointPolicyPropertiesFormat { return *v }).(ServiceEndpointPolicyPropertiesFormatOutput)
}

// A collection of service endpoint policy definitions of the service endpoint policy.
func (o ServiceEndpointPolicyPropertiesFormatPtrOutput) ServiceEndpointPolicyDefinitions() ServiceEndpointPolicyDefinitionTypeArrayOutput {
	return o.ApplyT(func(v *ServiceEndpointPolicyPropertiesFormat) []ServiceEndpointPolicyDefinitionType {
		if v == nil {
			return nil
		}
		return v.ServiceEndpointPolicyDefinitions
	}).(ServiceEndpointPolicyDefinitionTypeArrayOutput)
}

// Service Endpoint Policy resource.
type ServiceEndpointPolicyPropertiesFormatResponse struct {
	// The provisioning state of the service endpoint policy. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the service endpoint policy resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// A collection of service endpoint policy definitions of the service endpoint policy.
	ServiceEndpointPolicyDefinitions []ServiceEndpointPolicyDefinitionResponse `pulumi:"serviceEndpointPolicyDefinitions"`
	// A collection of references to subnets.
	Subnets []SubnetResponse `pulumi:"subnets"`
}

// ServiceEndpointPolicyPropertiesFormatResponseInput is an input type that accepts ServiceEndpointPolicyPropertiesFormatResponseArgs and ServiceEndpointPolicyPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyPropertiesFormatResponseInput` via:
//
//          ServiceEndpointPolicyPropertiesFormatResponseArgs{...}
type ServiceEndpointPolicyPropertiesFormatResponseInput interface {
	pulumi.Input

	ToServiceEndpointPolicyPropertiesFormatResponseOutput() ServiceEndpointPolicyPropertiesFormatResponseOutput
	ToServiceEndpointPolicyPropertiesFormatResponseOutputWithContext(context.Context) ServiceEndpointPolicyPropertiesFormatResponseOutput
}

// Service Endpoint Policy resource.
type ServiceEndpointPolicyPropertiesFormatResponseArgs struct {
	// The provisioning state of the service endpoint policy. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The resource GUID property of the service endpoint policy resource.
	ResourceGuid pulumi.StringInput `pulumi:"resourceGuid"`
	// A collection of service endpoint policy definitions of the service endpoint policy.
	ServiceEndpointPolicyDefinitions ServiceEndpointPolicyDefinitionResponseArrayInput `pulumi:"serviceEndpointPolicyDefinitions"`
	// A collection of references to subnets.
	Subnets SubnetResponseArrayInput `pulumi:"subnets"`
}

func (ServiceEndpointPolicyPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyPropertiesFormatResponse)(nil)).Elem()
}

func (i ServiceEndpointPolicyPropertiesFormatResponseArgs) ToServiceEndpointPolicyPropertiesFormatResponseOutput() ServiceEndpointPolicyPropertiesFormatResponseOutput {
	return i.ToServiceEndpointPolicyPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyPropertiesFormatResponseArgs) ToServiceEndpointPolicyPropertiesFormatResponseOutputWithContext(ctx context.Context) ServiceEndpointPolicyPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyPropertiesFormatResponseOutput)
}

func (i ServiceEndpointPolicyPropertiesFormatResponseArgs) ToServiceEndpointPolicyPropertiesFormatResponsePtrOutput() ServiceEndpointPolicyPropertiesFormatResponsePtrOutput {
	return i.ToServiceEndpointPolicyPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyPropertiesFormatResponseArgs) ToServiceEndpointPolicyPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ServiceEndpointPolicyPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyPropertiesFormatResponseOutput).ToServiceEndpointPolicyPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// ServiceEndpointPolicyPropertiesFormatResponsePtrInput is an input type that accepts ServiceEndpointPolicyPropertiesFormatResponseArgs, ServiceEndpointPolicyPropertiesFormatResponsePtr and ServiceEndpointPolicyPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyPropertiesFormatResponsePtrInput` via:
//
//          ServiceEndpointPolicyPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type ServiceEndpointPolicyPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToServiceEndpointPolicyPropertiesFormatResponsePtrOutput() ServiceEndpointPolicyPropertiesFormatResponsePtrOutput
	ToServiceEndpointPolicyPropertiesFormatResponsePtrOutputWithContext(context.Context) ServiceEndpointPolicyPropertiesFormatResponsePtrOutput
}

type serviceEndpointPolicyPropertiesFormatResponsePtrType ServiceEndpointPolicyPropertiesFormatResponseArgs

func ServiceEndpointPolicyPropertiesFormatResponsePtr(v *ServiceEndpointPolicyPropertiesFormatResponseArgs) ServiceEndpointPolicyPropertiesFormatResponsePtrInput {
	return (*serviceEndpointPolicyPropertiesFormatResponsePtrType)(v)
}

func (*serviceEndpointPolicyPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEndpointPolicyPropertiesFormatResponse)(nil)).Elem()
}

func (i *serviceEndpointPolicyPropertiesFormatResponsePtrType) ToServiceEndpointPolicyPropertiesFormatResponsePtrOutput() ServiceEndpointPolicyPropertiesFormatResponsePtrOutput {
	return i.ToServiceEndpointPolicyPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *serviceEndpointPolicyPropertiesFormatResponsePtrType) ToServiceEndpointPolicyPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ServiceEndpointPolicyPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyPropertiesFormatResponsePtrOutput)
}

// Service Endpoint Policy resource.
type ServiceEndpointPolicyPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyPropertiesFormatResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyPropertiesFormatResponseOutput) ToServiceEndpointPolicyPropertiesFormatResponseOutput() ServiceEndpointPolicyPropertiesFormatResponseOutput {
	return o
}

func (o ServiceEndpointPolicyPropertiesFormatResponseOutput) ToServiceEndpointPolicyPropertiesFormatResponseOutputWithContext(ctx context.Context) ServiceEndpointPolicyPropertiesFormatResponseOutput {
	return o
}

func (o ServiceEndpointPolicyPropertiesFormatResponseOutput) ToServiceEndpointPolicyPropertiesFormatResponsePtrOutput() ServiceEndpointPolicyPropertiesFormatResponsePtrOutput {
	return o.ToServiceEndpointPolicyPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o ServiceEndpointPolicyPropertiesFormatResponseOutput) ToServiceEndpointPolicyPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ServiceEndpointPolicyPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyPropertiesFormatResponse) *ServiceEndpointPolicyPropertiesFormatResponse {
		return &v
	}).(ServiceEndpointPolicyPropertiesFormatResponsePtrOutput)
}

// The provisioning state of the service endpoint policy. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ServiceEndpointPolicyPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the service endpoint policy resource.
func (o ServiceEndpointPolicyPropertiesFormatResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyPropertiesFormatResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// A collection of service endpoint policy definitions of the service endpoint policy.
func (o ServiceEndpointPolicyPropertiesFormatResponseOutput) ServiceEndpointPolicyDefinitions() ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyPropertiesFormatResponse) []ServiceEndpointPolicyDefinitionResponse {
		return v.ServiceEndpointPolicyDefinitions
	}).(ServiceEndpointPolicyDefinitionResponseArrayOutput)
}

// A collection of references to subnets.
func (o ServiceEndpointPolicyPropertiesFormatResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyPropertiesFormatResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

type ServiceEndpointPolicyPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEndpointPolicyPropertiesFormatResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyPropertiesFormatResponsePtrOutput) ToServiceEndpointPolicyPropertiesFormatResponsePtrOutput() ServiceEndpointPolicyPropertiesFormatResponsePtrOutput {
	return o
}

func (o ServiceEndpointPolicyPropertiesFormatResponsePtrOutput) ToServiceEndpointPolicyPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) ServiceEndpointPolicyPropertiesFormatResponsePtrOutput {
	return o
}

func (o ServiceEndpointPolicyPropertiesFormatResponsePtrOutput) Elem() ServiceEndpointPolicyPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *ServiceEndpointPolicyPropertiesFormatResponse) ServiceEndpointPolicyPropertiesFormatResponse {
		return *v
	}).(ServiceEndpointPolicyPropertiesFormatResponseOutput)
}

// The provisioning state of the service endpoint policy. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ServiceEndpointPolicyPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceEndpointPolicyPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the service endpoint policy resource.
func (o ServiceEndpointPolicyPropertiesFormatResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceEndpointPolicyPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// A collection of service endpoint policy definitions of the service endpoint policy.
func (o ServiceEndpointPolicyPropertiesFormatResponsePtrOutput) ServiceEndpointPolicyDefinitions() ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return o.ApplyT(func(v *ServiceEndpointPolicyPropertiesFormatResponse) []ServiceEndpointPolicyDefinitionResponse {
		if v == nil {
			return nil
		}
		return v.ServiceEndpointPolicyDefinitions
	}).(ServiceEndpointPolicyDefinitionResponseArrayOutput)
}

// A collection of references to subnets.
func (o ServiceEndpointPolicyPropertiesFormatResponsePtrOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v *ServiceEndpointPolicyPropertiesFormatResponse) []SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetResponseArrayOutput)
}

// Service End point policy resource.
type ServiceEndpointPolicyResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the service end point policy
	Properties *ServiceEndpointPolicyPropertiesFormatResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// ServiceEndpointPolicyResponseInput is an input type that accepts ServiceEndpointPolicyResponseArgs and ServiceEndpointPolicyResponseOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyResponseInput` via:
//
//          ServiceEndpointPolicyResponseArgs{...}
type ServiceEndpointPolicyResponseInput interface {
	pulumi.Input

	ToServiceEndpointPolicyResponseOutput() ServiceEndpointPolicyResponseOutput
	ToServiceEndpointPolicyResponseOutputWithContext(context.Context) ServiceEndpointPolicyResponseOutput
}

// Service End point policy resource.
type ServiceEndpointPolicyResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the service end point policy
	Properties ServiceEndpointPolicyPropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ServiceEndpointPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyResponse)(nil)).Elem()
}

func (i ServiceEndpointPolicyResponseArgs) ToServiceEndpointPolicyResponseOutput() ServiceEndpointPolicyResponseOutput {
	return i.ToServiceEndpointPolicyResponseOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyResponseArgs) ToServiceEndpointPolicyResponseOutputWithContext(ctx context.Context) ServiceEndpointPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyResponseOutput)
}

// ServiceEndpointPolicyResponseArrayInput is an input type that accepts ServiceEndpointPolicyResponseArray and ServiceEndpointPolicyResponseArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyResponseArrayInput` via:
//
//          ServiceEndpointPolicyResponseArray{ ServiceEndpointPolicyResponseArgs{...} }
type ServiceEndpointPolicyResponseArrayInput interface {
	pulumi.Input

	ToServiceEndpointPolicyResponseArrayOutput() ServiceEndpointPolicyResponseArrayOutput
	ToServiceEndpointPolicyResponseArrayOutputWithContext(context.Context) ServiceEndpointPolicyResponseArrayOutput
}

type ServiceEndpointPolicyResponseArray []ServiceEndpointPolicyResponseInput

func (ServiceEndpointPolicyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyResponse)(nil)).Elem()
}

func (i ServiceEndpointPolicyResponseArray) ToServiceEndpointPolicyResponseArrayOutput() ServiceEndpointPolicyResponseArrayOutput {
	return i.ToServiceEndpointPolicyResponseArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyResponseArray) ToServiceEndpointPolicyResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyResponseArrayOutput)
}

// Service End point policy resource.
type ServiceEndpointPolicyResponseOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyResponseOutput) ToServiceEndpointPolicyResponseOutput() ServiceEndpointPolicyResponseOutput {
	return o
}

func (o ServiceEndpointPolicyResponseOutput) ToServiceEndpointPolicyResponseOutputWithContext(ctx context.Context) ServiceEndpointPolicyResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceEndpointPolicyResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ServiceEndpointPolicyResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o ServiceEndpointPolicyResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o ServiceEndpointPolicyResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the service end point policy
func (o ServiceEndpointPolicyResponseOutput) Properties() ServiceEndpointPolicyPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) *ServiceEndpointPolicyPropertiesFormatResponse {
		return v.Properties
	}).(ServiceEndpointPolicyPropertiesFormatResponsePtrOutput)
}

// Resource tags.
func (o ServiceEndpointPolicyResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o ServiceEndpointPolicyResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ServiceEndpointPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyResponseArrayOutput) ToServiceEndpointPolicyResponseArrayOutput() ServiceEndpointPolicyResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyResponseArrayOutput) ToServiceEndpointPolicyResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyResponseArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicyResponse {
		return vs[0].([]ServiceEndpointPolicyResponse)[vs[1].(int)]
	}).(ServiceEndpointPolicyResponseOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormat struct {
	// A list of locations.
	Locations []string `pulumi:"locations"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The type of the endpoint service.
	Service *string `pulumi:"service"`
}

// ServiceEndpointPropertiesFormatInput is an input type that accepts ServiceEndpointPropertiesFormatArgs and ServiceEndpointPropertiesFormatOutput values.
// You can construct a concrete instance of `ServiceEndpointPropertiesFormatInput` via:
//
//          ServiceEndpointPropertiesFormatArgs{...}
type ServiceEndpointPropertiesFormatInput interface {
	pulumi.Input

	ToServiceEndpointPropertiesFormatOutput() ServiceEndpointPropertiesFormatOutput
	ToServiceEndpointPropertiesFormatOutputWithContext(context.Context) ServiceEndpointPropertiesFormatOutput
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatArgs struct {
	// A list of locations.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The type of the endpoint service.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (ServiceEndpointPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (i ServiceEndpointPropertiesFormatArgs) ToServiceEndpointPropertiesFormatOutput() ServiceEndpointPropertiesFormatOutput {
	return i.ToServiceEndpointPropertiesFormatOutputWithContext(context.Background())
}

func (i ServiceEndpointPropertiesFormatArgs) ToServiceEndpointPropertiesFormatOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPropertiesFormatOutput)
}

// ServiceEndpointPropertiesFormatArrayInput is an input type that accepts ServiceEndpointPropertiesFormatArray and ServiceEndpointPropertiesFormatArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPropertiesFormatArrayInput` via:
//
//          ServiceEndpointPropertiesFormatArray{ ServiceEndpointPropertiesFormatArgs{...} }
type ServiceEndpointPropertiesFormatArrayInput interface {
	pulumi.Input

	ToServiceEndpointPropertiesFormatArrayOutput() ServiceEndpointPropertiesFormatArrayOutput
	ToServiceEndpointPropertiesFormatArrayOutputWithContext(context.Context) ServiceEndpointPropertiesFormatArrayOutput
}

type ServiceEndpointPropertiesFormatArray []ServiceEndpointPropertiesFormatInput

func (ServiceEndpointPropertiesFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (i ServiceEndpointPropertiesFormatArray) ToServiceEndpointPropertiesFormatArrayOutput() ServiceEndpointPropertiesFormatArrayOutput {
	return i.ToServiceEndpointPropertiesFormatArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPropertiesFormatArray) ToServiceEndpointPropertiesFormatArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPropertiesFormatArrayOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatOutput) ToServiceEndpointPropertiesFormatOutput() ServiceEndpointPropertiesFormatOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatOutput) ToServiceEndpointPropertiesFormatOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatOutput {
	return o
}

// A list of locations.
func (o ServiceEndpointPropertiesFormatOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormat) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// The provisioning state of the resource.
func (o ServiceEndpointPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The type of the endpoint service.
func (o ServiceEndpointPropertiesFormatOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormat) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type ServiceEndpointPropertiesFormatArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatArrayOutput) ToServiceEndpointPropertiesFormatArrayOutput() ServiceEndpointPropertiesFormatArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatArrayOutput) ToServiceEndpointPropertiesFormatArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPropertiesFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPropertiesFormat {
		return vs[0].([]ServiceEndpointPropertiesFormat)[vs[1].(int)]
	}).(ServiceEndpointPropertiesFormatOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatResponse struct {
	// A list of locations.
	Locations []string `pulumi:"locations"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The type of the endpoint service.
	Service *string `pulumi:"service"`
}

// ServiceEndpointPropertiesFormatResponseInput is an input type that accepts ServiceEndpointPropertiesFormatResponseArgs and ServiceEndpointPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ServiceEndpointPropertiesFormatResponseInput` via:
//
//          ServiceEndpointPropertiesFormatResponseArgs{...}
type ServiceEndpointPropertiesFormatResponseInput interface {
	pulumi.Input

	ToServiceEndpointPropertiesFormatResponseOutput() ServiceEndpointPropertiesFormatResponseOutput
	ToServiceEndpointPropertiesFormatResponseOutputWithContext(context.Context) ServiceEndpointPropertiesFormatResponseOutput
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatResponseArgs struct {
	// A list of locations.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The type of the endpoint service.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (ServiceEndpointPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormatResponse)(nil)).Elem()
}

func (i ServiceEndpointPropertiesFormatResponseArgs) ToServiceEndpointPropertiesFormatResponseOutput() ServiceEndpointPropertiesFormatResponseOutput {
	return i.ToServiceEndpointPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ServiceEndpointPropertiesFormatResponseArgs) ToServiceEndpointPropertiesFormatResponseOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPropertiesFormatResponseOutput)
}

// ServiceEndpointPropertiesFormatResponseArrayInput is an input type that accepts ServiceEndpointPropertiesFormatResponseArray and ServiceEndpointPropertiesFormatResponseArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPropertiesFormatResponseArrayInput` via:
//
//          ServiceEndpointPropertiesFormatResponseArray{ ServiceEndpointPropertiesFormatResponseArgs{...} }
type ServiceEndpointPropertiesFormatResponseArrayInput interface {
	pulumi.Input

	ToServiceEndpointPropertiesFormatResponseArrayOutput() ServiceEndpointPropertiesFormatResponseArrayOutput
	ToServiceEndpointPropertiesFormatResponseArrayOutputWithContext(context.Context) ServiceEndpointPropertiesFormatResponseArrayOutput
}

type ServiceEndpointPropertiesFormatResponseArray []ServiceEndpointPropertiesFormatResponseInput

func (ServiceEndpointPropertiesFormatResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormatResponse)(nil)).Elem()
}

func (i ServiceEndpointPropertiesFormatResponseArray) ToServiceEndpointPropertiesFormatResponseArrayOutput() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return i.ToServiceEndpointPropertiesFormatResponseArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPropertiesFormatResponseArray) ToServiceEndpointPropertiesFormatResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPropertiesFormatResponseArrayOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormatResponse)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatResponseOutput) ToServiceEndpointPropertiesFormatResponseOutput() ServiceEndpointPropertiesFormatResponseOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatResponseOutput) ToServiceEndpointPropertiesFormatResponseOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatResponseOutput {
	return o
}

// A list of locations.
func (o ServiceEndpointPropertiesFormatResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormatResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// The provisioning state of the resource.
func (o ServiceEndpointPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The type of the endpoint service.
func (o ServiceEndpointPropertiesFormatResponseOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormatResponse) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type ServiceEndpointPropertiesFormatResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormatResponse)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatResponseArrayOutput) ToServiceEndpointPropertiesFormatResponseArrayOutput() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatResponseArrayOutput) ToServiceEndpointPropertiesFormatResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatResponseArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPropertiesFormatResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPropertiesFormatResponse {
		return vs[0].([]ServiceEndpointPropertiesFormatResponse)[vs[1].(int)]
	}).(ServiceEndpointPropertiesFormatResponseOutput)
}

// Reference to another subresource.
type SubResource struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// SubResourceInput is an input type that accepts SubResourceArgs and SubResourceOutput values.
// You can construct a concrete instance of `SubResourceInput` via:
//
//          SubResourceArgs{...}
type SubResourceInput interface {
	pulumi.Input

	ToSubResourceOutput() SubResourceOutput
	ToSubResourceOutputWithContext(context.Context) SubResourceOutput
}

// Reference to another subresource.
type SubResourceArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SubResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (i SubResourceArgs) ToSubResourceOutput() SubResourceOutput {
	return i.ToSubResourceOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput)
}

func (i SubResourceArgs) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput).ToSubResourcePtrOutputWithContext(ctx)
}

// SubResourcePtrInput is an input type that accepts SubResourceArgs, SubResourcePtr and SubResourcePtrOutput values.
// You can construct a concrete instance of `SubResourcePtrInput` via:
//
//          SubResourceArgs{...}
//
//  or:
//
//          nil
type SubResourcePtrInput interface {
	pulumi.Input

	ToSubResourcePtrOutput() SubResourcePtrOutput
	ToSubResourcePtrOutputWithContext(context.Context) SubResourcePtrOutput
}

type subResourcePtrType SubResourceArgs

func SubResourcePtr(v *SubResourceArgs) SubResourcePtrInput {
	return (*subResourcePtrType)(v)
}

func (*subResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (i *subResourcePtrType) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i *subResourcePtrType) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourcePtrOutput)
}

// SubResourceArrayInput is an input type that accepts SubResourceArray and SubResourceArrayOutput values.
// You can construct a concrete instance of `SubResourceArrayInput` via:
//
//          SubResourceArray{ SubResourceArgs{...} }
type SubResourceArrayInput interface {
	pulumi.Input

	ToSubResourceArrayOutput() SubResourceArrayOutput
	ToSubResourceArrayOutputWithContext(context.Context) SubResourceArrayOutput
}

type SubResourceArray []SubResourceInput

func (SubResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResource)(nil)).Elem()
}

func (i SubResourceArray) ToSubResourceArrayOutput() SubResourceArrayOutput {
	return i.ToSubResourceArrayOutputWithContext(context.Background())
}

func (i SubResourceArray) ToSubResourceArrayOutputWithContext(ctx context.Context) SubResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceArrayOutput)
}

// Reference to another subresource.
type SubResourceOutput struct{ *pulumi.OutputState }

func (SubResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (o SubResourceOutput) ToSubResourceOutput() SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o.ToSubResourcePtrOutputWithContext(context.Background())
}

func (o SubResourceOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o.ApplyT(func(v SubResource) *SubResource {
		return &v
	}).(SubResourcePtrOutput)
}

// Resource ID.
func (o SubResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourcePtrOutput struct{ *pulumi.OutputState }

func (SubResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) Elem() SubResourceOutput {
	return o.ApplyT(func(v *SubResource) SubResource { return *v }).(SubResourceOutput)
}

// Resource ID.
func (o SubResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceArrayOutput struct{ *pulumi.OutputState }

func (SubResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResource)(nil)).Elem()
}

func (o SubResourceArrayOutput) ToSubResourceArrayOutput() SubResourceArrayOutput {
	return o
}

func (o SubResourceArrayOutput) ToSubResourceArrayOutputWithContext(ctx context.Context) SubResourceArrayOutput {
	return o
}

func (o SubResourceArrayOutput) Index(i pulumi.IntInput) SubResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResource {
		return vs[0].([]SubResource)[vs[1].(int)]
	}).(SubResourceOutput)
}

// Reference to another subresource.
type SubResourceResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// SubResourceResponseInput is an input type that accepts SubResourceResponseArgs and SubResourceResponseOutput values.
// You can construct a concrete instance of `SubResourceResponseInput` via:
//
//          SubResourceResponseArgs{...}
type SubResourceResponseInput interface {
	pulumi.Input

	ToSubResourceResponseOutput() SubResourceResponseOutput
	ToSubResourceResponseOutputWithContext(context.Context) SubResourceResponseOutput
}

// Reference to another subresource.
type SubResourceResponseArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SubResourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResourceResponse)(nil)).Elem()
}

func (i SubResourceResponseArgs) ToSubResourceResponseOutput() SubResourceResponseOutput {
	return i.ToSubResourceResponseOutputWithContext(context.Background())
}

func (i SubResourceResponseArgs) ToSubResourceResponseOutputWithContext(ctx context.Context) SubResourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceResponseOutput)
}

func (i SubResourceResponseArgs) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return i.ToSubResourceResponsePtrOutputWithContext(context.Background())
}

func (i SubResourceResponseArgs) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceResponseOutput).ToSubResourceResponsePtrOutputWithContext(ctx)
}

// SubResourceResponsePtrInput is an input type that accepts SubResourceResponseArgs, SubResourceResponsePtr and SubResourceResponsePtrOutput values.
// You can construct a concrete instance of `SubResourceResponsePtrInput` via:
//
//          SubResourceResponseArgs{...}
//
//  or:
//
//          nil
type SubResourceResponsePtrInput interface {
	pulumi.Input

	ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput
	ToSubResourceResponsePtrOutputWithContext(context.Context) SubResourceResponsePtrOutput
}

type subResourceResponsePtrType SubResourceResponseArgs

func SubResourceResponsePtr(v *SubResourceResponseArgs) SubResourceResponsePtrInput {
	return (*subResourceResponsePtrType)(v)
}

func (*subResourceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResourceResponse)(nil)).Elem()
}

func (i *subResourceResponsePtrType) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return i.ToSubResourceResponsePtrOutputWithContext(context.Background())
}

func (i *subResourceResponsePtrType) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceResponsePtrOutput)
}

// SubResourceResponseArrayInput is an input type that accepts SubResourceResponseArray and SubResourceResponseArrayOutput values.
// You can construct a concrete instance of `SubResourceResponseArrayInput` via:
//
//          SubResourceResponseArray{ SubResourceResponseArgs{...} }
type SubResourceResponseArrayInput interface {
	pulumi.Input

	ToSubResourceResponseArrayOutput() SubResourceResponseArrayOutput
	ToSubResourceResponseArrayOutputWithContext(context.Context) SubResourceResponseArrayOutput
}

type SubResourceResponseArray []SubResourceResponseInput

func (SubResourceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResourceResponse)(nil)).Elem()
}

func (i SubResourceResponseArray) ToSubResourceResponseArrayOutput() SubResourceResponseArrayOutput {
	return i.ToSubResourceResponseArrayOutputWithContext(context.Background())
}

func (i SubResourceResponseArray) ToSubResourceResponseArrayOutputWithContext(ctx context.Context) SubResourceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceResponseArrayOutput)
}

// Reference to another subresource.
type SubResourceResponseOutput struct{ *pulumi.OutputState }

func (SubResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutput() SubResourceResponseOutput {
	return o
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutputWithContext(ctx context.Context) SubResourceResponseOutput {
	return o
}

func (o SubResourceResponseOutput) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return o.ToSubResourceResponsePtrOutputWithContext(context.Background())
}

func (o SubResourceResponseOutput) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return o.ApplyT(func(v SubResourceResponse) *SubResourceResponse {
		return &v
	}).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o SubResourceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResourceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourceResponsePtrOutput struct{ *pulumi.OutputState }

func (SubResourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) Elem() SubResourceResponseOutput {
	return o.ApplyT(func(v *SubResourceResponse) SubResourceResponse { return *v }).(SubResourceResponseOutput)
}

// Resource ID.
func (o SubResourceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (SubResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseArrayOutput) ToSubResourceResponseArrayOutput() SubResourceResponseArrayOutput {
	return o
}

func (o SubResourceResponseArrayOutput) ToSubResourceResponseArrayOutputWithContext(ctx context.Context) SubResourceResponseArrayOutput {
	return o
}

func (o SubResourceResponseArrayOutput) Index(i pulumi.IntInput) SubResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResourceResponse {
		return vs[0].([]SubResourceResponse)[vs[1].(int)]
	}).(SubResourceResponseOutput)
}

// Subnet in a virtual network resource.
type SubnetType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the subnet.
	Properties *SubnetPropertiesFormat `pulumi:"properties"`
}

// SubnetTypeInput is an input type that accepts SubnetTypeArgs and SubnetTypeOutput values.
// You can construct a concrete instance of `SubnetTypeInput` via:
//
//          SubnetTypeArgs{...}
type SubnetTypeInput interface {
	pulumi.Input

	ToSubnetTypeOutput() SubnetTypeOutput
	ToSubnetTypeOutputWithContext(context.Context) SubnetTypeOutput
}

// Subnet in a virtual network resource.
type SubnetTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the subnet.
	Properties SubnetPropertiesFormatPtrInput `pulumi:"properties"`
}

func (SubnetTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetType)(nil)).Elem()
}

func (i SubnetTypeArgs) ToSubnetTypeOutput() SubnetTypeOutput {
	return i.ToSubnetTypeOutputWithContext(context.Background())
}

func (i SubnetTypeArgs) ToSubnetTypeOutputWithContext(ctx context.Context) SubnetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypeOutput)
}

func (i SubnetTypeArgs) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return i.ToSubnetTypePtrOutputWithContext(context.Background())
}

func (i SubnetTypeArgs) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypeOutput).ToSubnetTypePtrOutputWithContext(ctx)
}

// SubnetTypePtrInput is an input type that accepts SubnetTypeArgs, SubnetTypePtr and SubnetTypePtrOutput values.
// You can construct a concrete instance of `SubnetTypePtrInput` via:
//
//          SubnetTypeArgs{...}
//
//  or:
//
//          nil
type SubnetTypePtrInput interface {
	pulumi.Input

	ToSubnetTypePtrOutput() SubnetTypePtrOutput
	ToSubnetTypePtrOutputWithContext(context.Context) SubnetTypePtrOutput
}

type subnetTypePtrType SubnetTypeArgs

func SubnetTypePtr(v *SubnetTypeArgs) SubnetTypePtrInput {
	return (*subnetTypePtrType)(v)
}

func (*subnetTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetType)(nil)).Elem()
}

func (i *subnetTypePtrType) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return i.ToSubnetTypePtrOutputWithContext(context.Background())
}

func (i *subnetTypePtrType) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypePtrOutput)
}

// SubnetTypeArrayInput is an input type that accepts SubnetTypeArray and SubnetTypeArrayOutput values.
// You can construct a concrete instance of `SubnetTypeArrayInput` via:
//
//          SubnetTypeArray{ SubnetTypeArgs{...} }
type SubnetTypeArrayInput interface {
	pulumi.Input

	ToSubnetTypeArrayOutput() SubnetTypeArrayOutput
	ToSubnetTypeArrayOutputWithContext(context.Context) SubnetTypeArrayOutput
}

type SubnetTypeArray []SubnetTypeInput

func (SubnetTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetType)(nil)).Elem()
}

func (i SubnetTypeArray) ToSubnetTypeArrayOutput() SubnetTypeArrayOutput {
	return i.ToSubnetTypeArrayOutputWithContext(context.Background())
}

func (i SubnetTypeArray) ToSubnetTypeArrayOutputWithContext(ctx context.Context) SubnetTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypeArrayOutput)
}

// Subnet in a virtual network resource.
type SubnetTypeOutput struct{ *pulumi.OutputState }

func (SubnetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetType)(nil)).Elem()
}

func (o SubnetTypeOutput) ToSubnetTypeOutput() SubnetTypeOutput {
	return o
}

func (o SubnetTypeOutput) ToSubnetTypeOutputWithContext(ctx context.Context) SubnetTypeOutput {
	return o
}

func (o SubnetTypeOutput) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return o.ToSubnetTypePtrOutputWithContext(context.Background())
}

func (o SubnetTypeOutput) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return o.ApplyT(func(v SubnetType) *SubnetType {
		return &v
	}).(SubnetTypePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SubnetTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the subnet.
func (o SubnetTypeOutput) Properties() SubnetPropertiesFormatPtrOutput {
	return o.ApplyT(func(v SubnetType) *SubnetPropertiesFormat { return v.Properties }).(SubnetPropertiesFormatPtrOutput)
}

type SubnetTypePtrOutput struct{ *pulumi.OutputState }

func (SubnetTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetType)(nil)).Elem()
}

func (o SubnetTypePtrOutput) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return o
}

func (o SubnetTypePtrOutput) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return o
}

func (o SubnetTypePtrOutput) Elem() SubnetTypeOutput {
	return o.ApplyT(func(v *SubnetType) SubnetType { return *v }).(SubnetTypeOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SubnetTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Properties of the subnet.
func (o SubnetTypePtrOutput) Properties() SubnetPropertiesFormatPtrOutput {
	return o.ApplyT(func(v *SubnetType) *SubnetPropertiesFormat {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(SubnetPropertiesFormatPtrOutput)
}

type SubnetTypeArrayOutput struct{ *pulumi.OutputState }

func (SubnetTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetType)(nil)).Elem()
}

func (o SubnetTypeArrayOutput) ToSubnetTypeArrayOutput() SubnetTypeArrayOutput {
	return o
}

func (o SubnetTypeArrayOutput) ToSubnetTypeArrayOutputWithContext(ctx context.Context) SubnetTypeArrayOutput {
	return o
}

func (o SubnetTypeArrayOutput) Index(i pulumi.IntInput) SubnetTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetType {
		return vs[0].([]SubnetType)[vs[1].(int)]
	}).(SubnetTypeOutput)
}

// Subnet in a virtual network resource.
type SubnetDefinition struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the subnet.
	Properties *SubnetPropertiesFormat `pulumi:"properties"`
}

// SubnetDefinitionInput is an input type that accepts SubnetDefinitionArgs and SubnetDefinitionOutput values.
// You can construct a concrete instance of `SubnetDefinitionInput` via:
//
//          SubnetDefinitionArgs{...}
type SubnetDefinitionInput interface {
	pulumi.Input

	ToSubnetDefinitionOutput() SubnetDefinitionOutput
	ToSubnetDefinitionOutputWithContext(context.Context) SubnetDefinitionOutput
}

// Subnet in a virtual network resource.
type SubnetDefinitionArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the subnet.
	Properties SubnetPropertiesFormatPtrInput `pulumi:"properties"`
}

func (SubnetDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetDefinition)(nil)).Elem()
}

func (i SubnetDefinitionArgs) ToSubnetDefinitionOutput() SubnetDefinitionOutput {
	return i.ToSubnetDefinitionOutputWithContext(context.Background())
}

func (i SubnetDefinitionArgs) ToSubnetDefinitionOutputWithContext(ctx context.Context) SubnetDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetDefinitionOutput)
}

// Subnet in a virtual network resource.
type SubnetDefinitionOutput struct{ *pulumi.OutputState }

func (SubnetDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetDefinition)(nil)).Elem()
}

func (o SubnetDefinitionOutput) ToSubnetDefinitionOutput() SubnetDefinitionOutput {
	return o
}

func (o SubnetDefinitionOutput) ToSubnetDefinitionOutputWithContext(ctx context.Context) SubnetDefinitionOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetDefinitionOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetDefinition) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SubnetDefinitionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetDefinition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetDefinitionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetDefinition) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the subnet.
func (o SubnetDefinitionOutput) Properties() SubnetPropertiesFormatPtrOutput {
	return o.ApplyT(func(v SubnetDefinition) *SubnetPropertiesFormat { return v.Properties }).(SubnetPropertiesFormatPtrOutput)
}

// Properties of the subnet.
type SubnetPropertiesFormat struct {
	// The address prefix for the subnet.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// List of  address prefixes for the subnet.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// Gets an array of references to the delegations on the subnet.
	Delegations []Delegation `pulumi:"delegations"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupType `pulumi:"networkSecurityGroup"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Gets an array of references to the external resources using subnet.
	ResourceNavigationLinks []ResourceNavigationLink `pulumi:"resourceNavigationLinks"`
	// The reference of the RouteTable resource.
	RouteTable *RouteTableType `pulumi:"routeTable"`
	// Gets an array of references to services injecting into this subnet.
	ServiceAssociationLinks []ServiceAssociationLink `pulumi:"serviceAssociationLinks"`
	// An array of service endpoint policies.
	ServiceEndpointPolicies []ServiceEndpointPolicyType `pulumi:"serviceEndpointPolicies"`
	// An array of service endpoints.
	ServiceEndpoints []ServiceEndpointPropertiesFormat `pulumi:"serviceEndpoints"`
}

// SubnetPropertiesFormatInput is an input type that accepts SubnetPropertiesFormatArgs and SubnetPropertiesFormatOutput values.
// You can construct a concrete instance of `SubnetPropertiesFormatInput` via:
//
//          SubnetPropertiesFormatArgs{...}
type SubnetPropertiesFormatInput interface {
	pulumi.Input

	ToSubnetPropertiesFormatOutput() SubnetPropertiesFormatOutput
	ToSubnetPropertiesFormatOutputWithContext(context.Context) SubnetPropertiesFormatOutput
}

// Properties of the subnet.
type SubnetPropertiesFormatArgs struct {
	// The address prefix for the subnet.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// List of  address prefixes for the subnet.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// Gets an array of references to the delegations on the subnet.
	Delegations DelegationArrayInput `pulumi:"delegations"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup NetworkSecurityGroupTypePtrInput `pulumi:"networkSecurityGroup"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Gets an array of references to the external resources using subnet.
	ResourceNavigationLinks ResourceNavigationLinkArrayInput `pulumi:"resourceNavigationLinks"`
	// The reference of the RouteTable resource.
	RouteTable RouteTableTypePtrInput `pulumi:"routeTable"`
	// Gets an array of references to services injecting into this subnet.
	ServiceAssociationLinks ServiceAssociationLinkArrayInput `pulumi:"serviceAssociationLinks"`
	// An array of service endpoint policies.
	ServiceEndpointPolicies ServiceEndpointPolicyTypeArrayInput `pulumi:"serviceEndpointPolicies"`
	// An array of service endpoints.
	ServiceEndpoints ServiceEndpointPropertiesFormatArrayInput `pulumi:"serviceEndpoints"`
}

func (SubnetPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetPropertiesFormat)(nil)).Elem()
}

func (i SubnetPropertiesFormatArgs) ToSubnetPropertiesFormatOutput() SubnetPropertiesFormatOutput {
	return i.ToSubnetPropertiesFormatOutputWithContext(context.Background())
}

func (i SubnetPropertiesFormatArgs) ToSubnetPropertiesFormatOutputWithContext(ctx context.Context) SubnetPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetPropertiesFormatOutput)
}

func (i SubnetPropertiesFormatArgs) ToSubnetPropertiesFormatPtrOutput() SubnetPropertiesFormatPtrOutput {
	return i.ToSubnetPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i SubnetPropertiesFormatArgs) ToSubnetPropertiesFormatPtrOutputWithContext(ctx context.Context) SubnetPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetPropertiesFormatOutput).ToSubnetPropertiesFormatPtrOutputWithContext(ctx)
}

// SubnetPropertiesFormatPtrInput is an input type that accepts SubnetPropertiesFormatArgs, SubnetPropertiesFormatPtr and SubnetPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `SubnetPropertiesFormatPtrInput` via:
//
//          SubnetPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type SubnetPropertiesFormatPtrInput interface {
	pulumi.Input

	ToSubnetPropertiesFormatPtrOutput() SubnetPropertiesFormatPtrOutput
	ToSubnetPropertiesFormatPtrOutputWithContext(context.Context) SubnetPropertiesFormatPtrOutput
}

type subnetPropertiesFormatPtrType SubnetPropertiesFormatArgs

func SubnetPropertiesFormatPtr(v *SubnetPropertiesFormatArgs) SubnetPropertiesFormatPtrInput {
	return (*subnetPropertiesFormatPtrType)(v)
}

func (*subnetPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetPropertiesFormat)(nil)).Elem()
}

func (i *subnetPropertiesFormatPtrType) ToSubnetPropertiesFormatPtrOutput() SubnetPropertiesFormatPtrOutput {
	return i.ToSubnetPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *subnetPropertiesFormatPtrType) ToSubnetPropertiesFormatPtrOutputWithContext(ctx context.Context) SubnetPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetPropertiesFormatPtrOutput)
}

// Properties of the subnet.
type SubnetPropertiesFormatOutput struct{ *pulumi.OutputState }

func (SubnetPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetPropertiesFormat)(nil)).Elem()
}

func (o SubnetPropertiesFormatOutput) ToSubnetPropertiesFormatOutput() SubnetPropertiesFormatOutput {
	return o
}

func (o SubnetPropertiesFormatOutput) ToSubnetPropertiesFormatOutputWithContext(ctx context.Context) SubnetPropertiesFormatOutput {
	return o
}

func (o SubnetPropertiesFormatOutput) ToSubnetPropertiesFormatPtrOutput() SubnetPropertiesFormatPtrOutput {
	return o.ToSubnetPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o SubnetPropertiesFormatOutput) ToSubnetPropertiesFormatPtrOutputWithContext(ctx context.Context) SubnetPropertiesFormatPtrOutput {
	return o.ApplyT(func(v SubnetPropertiesFormat) *SubnetPropertiesFormat {
		return &v
	}).(SubnetPropertiesFormatPtrOutput)
}

// The address prefix for the subnet.
func (o SubnetPropertiesFormatOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetPropertiesFormat) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// List of  address prefixes for the subnet.
func (o SubnetPropertiesFormatOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubnetPropertiesFormat) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// Gets an array of references to the delegations on the subnet.
func (o SubnetPropertiesFormatOutput) Delegations() DelegationArrayOutput {
	return o.ApplyT(func(v SubnetPropertiesFormat) []Delegation { return v.Delegations }).(DelegationArrayOutput)
}

// The reference of the NetworkSecurityGroup resource.
func (o SubnetPropertiesFormatOutput) NetworkSecurityGroup() NetworkSecurityGroupTypePtrOutput {
	return o.ApplyT(func(v SubnetPropertiesFormat) *NetworkSecurityGroupType { return v.NetworkSecurityGroup }).(NetworkSecurityGroupTypePtrOutput)
}

// The provisioning state of the resource.
func (o SubnetPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Gets an array of references to the external resources using subnet.
func (o SubnetPropertiesFormatOutput) ResourceNavigationLinks() ResourceNavigationLinkArrayOutput {
	return o.ApplyT(func(v SubnetPropertiesFormat) []ResourceNavigationLink { return v.ResourceNavigationLinks }).(ResourceNavigationLinkArrayOutput)
}

// The reference of the RouteTable resource.
func (o SubnetPropertiesFormatOutput) RouteTable() RouteTableTypePtrOutput {
	return o.ApplyT(func(v SubnetPropertiesFormat) *RouteTableType { return v.RouteTable }).(RouteTableTypePtrOutput)
}

// Gets an array of references to services injecting into this subnet.
func (o SubnetPropertiesFormatOutput) ServiceAssociationLinks() ServiceAssociationLinkArrayOutput {
	return o.ApplyT(func(v SubnetPropertiesFormat) []ServiceAssociationLink { return v.ServiceAssociationLinks }).(ServiceAssociationLinkArrayOutput)
}

// An array of service endpoint policies.
func (o SubnetPropertiesFormatOutput) ServiceEndpointPolicies() ServiceEndpointPolicyTypeArrayOutput {
	return o.ApplyT(func(v SubnetPropertiesFormat) []ServiceEndpointPolicyType { return v.ServiceEndpointPolicies }).(ServiceEndpointPolicyTypeArrayOutput)
}

// An array of service endpoints.
func (o SubnetPropertiesFormatOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatArrayOutput {
	return o.ApplyT(func(v SubnetPropertiesFormat) []ServiceEndpointPropertiesFormat { return v.ServiceEndpoints }).(ServiceEndpointPropertiesFormatArrayOutput)
}

type SubnetPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (SubnetPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetPropertiesFormat)(nil)).Elem()
}

func (o SubnetPropertiesFormatPtrOutput) ToSubnetPropertiesFormatPtrOutput() SubnetPropertiesFormatPtrOutput {
	return o
}

func (o SubnetPropertiesFormatPtrOutput) ToSubnetPropertiesFormatPtrOutputWithContext(ctx context.Context) SubnetPropertiesFormatPtrOutput {
	return o
}

func (o SubnetPropertiesFormatPtrOutput) Elem() SubnetPropertiesFormatOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormat) SubnetPropertiesFormat { return *v }).(SubnetPropertiesFormatOutput)
}

// The address prefix for the subnet.
func (o SubnetPropertiesFormatPtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// List of  address prefixes for the subnet.
func (o SubnetPropertiesFormatPtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormat) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// Gets an array of references to the delegations on the subnet.
func (o SubnetPropertiesFormatPtrOutput) Delegations() DelegationArrayOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormat) []Delegation {
		if v == nil {
			return nil
		}
		return v.Delegations
	}).(DelegationArrayOutput)
}

// The reference of the NetworkSecurityGroup resource.
func (o SubnetPropertiesFormatPtrOutput) NetworkSecurityGroup() NetworkSecurityGroupTypePtrOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormat) *NetworkSecurityGroupType {
		if v == nil {
			return nil
		}
		return v.NetworkSecurityGroup
	}).(NetworkSecurityGroupTypePtrOutput)
}

// The provisioning state of the resource.
func (o SubnetPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Gets an array of references to the external resources using subnet.
func (o SubnetPropertiesFormatPtrOutput) ResourceNavigationLinks() ResourceNavigationLinkArrayOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormat) []ResourceNavigationLink {
		if v == nil {
			return nil
		}
		return v.ResourceNavigationLinks
	}).(ResourceNavigationLinkArrayOutput)
}

// The reference of the RouteTable resource.
func (o SubnetPropertiesFormatPtrOutput) RouteTable() RouteTableTypePtrOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormat) *RouteTableType {
		if v == nil {
			return nil
		}
		return v.RouteTable
	}).(RouteTableTypePtrOutput)
}

// Gets an array of references to services injecting into this subnet.
func (o SubnetPropertiesFormatPtrOutput) ServiceAssociationLinks() ServiceAssociationLinkArrayOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormat) []ServiceAssociationLink {
		if v == nil {
			return nil
		}
		return v.ServiceAssociationLinks
	}).(ServiceAssociationLinkArrayOutput)
}

// An array of service endpoint policies.
func (o SubnetPropertiesFormatPtrOutput) ServiceEndpointPolicies() ServiceEndpointPolicyTypeArrayOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormat) []ServiceEndpointPolicyType {
		if v == nil {
			return nil
		}
		return v.ServiceEndpointPolicies
	}).(ServiceEndpointPolicyTypeArrayOutput)
}

// An array of service endpoints.
func (o SubnetPropertiesFormatPtrOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatArrayOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormat) []ServiceEndpointPropertiesFormat {
		if v == nil {
			return nil
		}
		return v.ServiceEndpoints
	}).(ServiceEndpointPropertiesFormatArrayOutput)
}

// Properties of the subnet.
type SubnetPropertiesFormatResponse struct {
	// The address prefix for the subnet.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// List of  address prefixes for the subnet.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// Gets an array of references to the delegations on the subnet.
	Delegations []DelegationResponse `pulumi:"delegations"`
	// An array of references to interface endpoints
	InterfaceEndpoints []InterfaceEndpointResponse `pulumi:"interfaceEndpoints"`
	// Array of IP configuration profiles which reference this subnet.
	IpConfigurationProfiles []IPConfigurationProfileResponse `pulumi:"ipConfigurationProfiles"`
	// Gets an array of references to the network interface IP configurations using subnet.
	IpConfigurations []IPConfigurationResponse `pulumi:"ipConfigurations"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupResponse `pulumi:"networkSecurityGroup"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
	Purpose string `pulumi:"purpose"`
	// Gets an array of references to the external resources using subnet.
	ResourceNavigationLinks []ResourceNavigationLinkResponse `pulumi:"resourceNavigationLinks"`
	// The reference of the RouteTable resource.
	RouteTable *RouteTableResponse `pulumi:"routeTable"`
	// Gets an array of references to services injecting into this subnet.
	ServiceAssociationLinks []ServiceAssociationLinkResponse `pulumi:"serviceAssociationLinks"`
	// An array of service endpoint policies.
	ServiceEndpointPolicies []ServiceEndpointPolicyResponse `pulumi:"serviceEndpointPolicies"`
	// An array of service endpoints.
	ServiceEndpoints []ServiceEndpointPropertiesFormatResponse `pulumi:"serviceEndpoints"`
}

// SubnetPropertiesFormatResponseInput is an input type that accepts SubnetPropertiesFormatResponseArgs and SubnetPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `SubnetPropertiesFormatResponseInput` via:
//
//          SubnetPropertiesFormatResponseArgs{...}
type SubnetPropertiesFormatResponseInput interface {
	pulumi.Input

	ToSubnetPropertiesFormatResponseOutput() SubnetPropertiesFormatResponseOutput
	ToSubnetPropertiesFormatResponseOutputWithContext(context.Context) SubnetPropertiesFormatResponseOutput
}

// Properties of the subnet.
type SubnetPropertiesFormatResponseArgs struct {
	// The address prefix for the subnet.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// List of  address prefixes for the subnet.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// Gets an array of references to the delegations on the subnet.
	Delegations DelegationResponseArrayInput `pulumi:"delegations"`
	// An array of references to interface endpoints
	InterfaceEndpoints InterfaceEndpointResponseArrayInput `pulumi:"interfaceEndpoints"`
	// Array of IP configuration profiles which reference this subnet.
	IpConfigurationProfiles IPConfigurationProfileResponseArrayInput `pulumi:"ipConfigurationProfiles"`
	// Gets an array of references to the network interface IP configurations using subnet.
	IpConfigurations IPConfigurationResponseArrayInput `pulumi:"ipConfigurations"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup NetworkSecurityGroupResponsePtrInput `pulumi:"networkSecurityGroup"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
	Purpose pulumi.StringInput `pulumi:"purpose"`
	// Gets an array of references to the external resources using subnet.
	ResourceNavigationLinks ResourceNavigationLinkResponseArrayInput `pulumi:"resourceNavigationLinks"`
	// The reference of the RouteTable resource.
	RouteTable RouteTableResponsePtrInput `pulumi:"routeTable"`
	// Gets an array of references to services injecting into this subnet.
	ServiceAssociationLinks ServiceAssociationLinkResponseArrayInput `pulumi:"serviceAssociationLinks"`
	// An array of service endpoint policies.
	ServiceEndpointPolicies ServiceEndpointPolicyResponseArrayInput `pulumi:"serviceEndpointPolicies"`
	// An array of service endpoints.
	ServiceEndpoints ServiceEndpointPropertiesFormatResponseArrayInput `pulumi:"serviceEndpoints"`
}

func (SubnetPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetPropertiesFormatResponse)(nil)).Elem()
}

func (i SubnetPropertiesFormatResponseArgs) ToSubnetPropertiesFormatResponseOutput() SubnetPropertiesFormatResponseOutput {
	return i.ToSubnetPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i SubnetPropertiesFormatResponseArgs) ToSubnetPropertiesFormatResponseOutputWithContext(ctx context.Context) SubnetPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetPropertiesFormatResponseOutput)
}

func (i SubnetPropertiesFormatResponseArgs) ToSubnetPropertiesFormatResponsePtrOutput() SubnetPropertiesFormatResponsePtrOutput {
	return i.ToSubnetPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i SubnetPropertiesFormatResponseArgs) ToSubnetPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) SubnetPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetPropertiesFormatResponseOutput).ToSubnetPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// SubnetPropertiesFormatResponsePtrInput is an input type that accepts SubnetPropertiesFormatResponseArgs, SubnetPropertiesFormatResponsePtr and SubnetPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `SubnetPropertiesFormatResponsePtrInput` via:
//
//          SubnetPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type SubnetPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToSubnetPropertiesFormatResponsePtrOutput() SubnetPropertiesFormatResponsePtrOutput
	ToSubnetPropertiesFormatResponsePtrOutputWithContext(context.Context) SubnetPropertiesFormatResponsePtrOutput
}

type subnetPropertiesFormatResponsePtrType SubnetPropertiesFormatResponseArgs

func SubnetPropertiesFormatResponsePtr(v *SubnetPropertiesFormatResponseArgs) SubnetPropertiesFormatResponsePtrInput {
	return (*subnetPropertiesFormatResponsePtrType)(v)
}

func (*subnetPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetPropertiesFormatResponse)(nil)).Elem()
}

func (i *subnetPropertiesFormatResponsePtrType) ToSubnetPropertiesFormatResponsePtrOutput() SubnetPropertiesFormatResponsePtrOutput {
	return i.ToSubnetPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *subnetPropertiesFormatResponsePtrType) ToSubnetPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) SubnetPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetPropertiesFormatResponsePtrOutput)
}

// Properties of the subnet.
type SubnetPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (SubnetPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetPropertiesFormatResponse)(nil)).Elem()
}

func (o SubnetPropertiesFormatResponseOutput) ToSubnetPropertiesFormatResponseOutput() SubnetPropertiesFormatResponseOutput {
	return o
}

func (o SubnetPropertiesFormatResponseOutput) ToSubnetPropertiesFormatResponseOutputWithContext(ctx context.Context) SubnetPropertiesFormatResponseOutput {
	return o
}

func (o SubnetPropertiesFormatResponseOutput) ToSubnetPropertiesFormatResponsePtrOutput() SubnetPropertiesFormatResponsePtrOutput {
	return o.ToSubnetPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o SubnetPropertiesFormatResponseOutput) ToSubnetPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) SubnetPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v SubnetPropertiesFormatResponse) *SubnetPropertiesFormatResponse {
		return &v
	}).(SubnetPropertiesFormatResponsePtrOutput)
}

// The address prefix for the subnet.
func (o SubnetPropertiesFormatResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetPropertiesFormatResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// List of  address prefixes for the subnet.
func (o SubnetPropertiesFormatResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubnetPropertiesFormatResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// Gets an array of references to the delegations on the subnet.
func (o SubnetPropertiesFormatResponseOutput) Delegations() DelegationResponseArrayOutput {
	return o.ApplyT(func(v SubnetPropertiesFormatResponse) []DelegationResponse { return v.Delegations }).(DelegationResponseArrayOutput)
}

// An array of references to interface endpoints
func (o SubnetPropertiesFormatResponseOutput) InterfaceEndpoints() InterfaceEndpointResponseArrayOutput {
	return o.ApplyT(func(v SubnetPropertiesFormatResponse) []InterfaceEndpointResponse { return v.InterfaceEndpoints }).(InterfaceEndpointResponseArrayOutput)
}

// Array of IP configuration profiles which reference this subnet.
func (o SubnetPropertiesFormatResponseOutput) IpConfigurationProfiles() IPConfigurationProfileResponseArrayOutput {
	return o.ApplyT(func(v SubnetPropertiesFormatResponse) []IPConfigurationProfileResponse {
		return v.IpConfigurationProfiles
	}).(IPConfigurationProfileResponseArrayOutput)
}

// Gets an array of references to the network interface IP configurations using subnet.
func (o SubnetPropertiesFormatResponseOutput) IpConfigurations() IPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v SubnetPropertiesFormatResponse) []IPConfigurationResponse { return v.IpConfigurations }).(IPConfigurationResponseArrayOutput)
}

// The reference of the NetworkSecurityGroup resource.
func (o SubnetPropertiesFormatResponseOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v SubnetPropertiesFormatResponse) *NetworkSecurityGroupResponse { return v.NetworkSecurityGroup }).(NetworkSecurityGroupResponsePtrOutput)
}

// The provisioning state of the resource.
func (o SubnetPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
func (o SubnetPropertiesFormatResponseOutput) Purpose() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetPropertiesFormatResponse) string { return v.Purpose }).(pulumi.StringOutput)
}

// Gets an array of references to the external resources using subnet.
func (o SubnetPropertiesFormatResponseOutput) ResourceNavigationLinks() ResourceNavigationLinkResponseArrayOutput {
	return o.ApplyT(func(v SubnetPropertiesFormatResponse) []ResourceNavigationLinkResponse {
		return v.ResourceNavigationLinks
	}).(ResourceNavigationLinkResponseArrayOutput)
}

// The reference of the RouteTable resource.
func (o SubnetPropertiesFormatResponseOutput) RouteTable() RouteTableResponsePtrOutput {
	return o.ApplyT(func(v SubnetPropertiesFormatResponse) *RouteTableResponse { return v.RouteTable }).(RouteTableResponsePtrOutput)
}

// Gets an array of references to services injecting into this subnet.
func (o SubnetPropertiesFormatResponseOutput) ServiceAssociationLinks() ServiceAssociationLinkResponseArrayOutput {
	return o.ApplyT(func(v SubnetPropertiesFormatResponse) []ServiceAssociationLinkResponse {
		return v.ServiceAssociationLinks
	}).(ServiceAssociationLinkResponseArrayOutput)
}

// An array of service endpoint policies.
func (o SubnetPropertiesFormatResponseOutput) ServiceEndpointPolicies() ServiceEndpointPolicyResponseArrayOutput {
	return o.ApplyT(func(v SubnetPropertiesFormatResponse) []ServiceEndpointPolicyResponse {
		return v.ServiceEndpointPolicies
	}).(ServiceEndpointPolicyResponseArrayOutput)
}

// An array of service endpoints.
func (o SubnetPropertiesFormatResponseOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o.ApplyT(func(v SubnetPropertiesFormatResponse) []ServiceEndpointPropertiesFormatResponse {
		return v.ServiceEndpoints
	}).(ServiceEndpointPropertiesFormatResponseArrayOutput)
}

type SubnetPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (SubnetPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetPropertiesFormatResponse)(nil)).Elem()
}

func (o SubnetPropertiesFormatResponsePtrOutput) ToSubnetPropertiesFormatResponsePtrOutput() SubnetPropertiesFormatResponsePtrOutput {
	return o
}

func (o SubnetPropertiesFormatResponsePtrOutput) ToSubnetPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) SubnetPropertiesFormatResponsePtrOutput {
	return o
}

func (o SubnetPropertiesFormatResponsePtrOutput) Elem() SubnetPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormatResponse) SubnetPropertiesFormatResponse { return *v }).(SubnetPropertiesFormatResponseOutput)
}

// The address prefix for the subnet.
func (o SubnetPropertiesFormatResponsePtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// List of  address prefixes for the subnet.
func (o SubnetPropertiesFormatResponsePtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormatResponse) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// Gets an array of references to the delegations on the subnet.
func (o SubnetPropertiesFormatResponsePtrOutput) Delegations() DelegationResponseArrayOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormatResponse) []DelegationResponse {
		if v == nil {
			return nil
		}
		return v.Delegations
	}).(DelegationResponseArrayOutput)
}

// An array of references to interface endpoints
func (o SubnetPropertiesFormatResponsePtrOutput) InterfaceEndpoints() InterfaceEndpointResponseArrayOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormatResponse) []InterfaceEndpointResponse {
		if v == nil {
			return nil
		}
		return v.InterfaceEndpoints
	}).(InterfaceEndpointResponseArrayOutput)
}

// Array of IP configuration profiles which reference this subnet.
func (o SubnetPropertiesFormatResponsePtrOutput) IpConfigurationProfiles() IPConfigurationProfileResponseArrayOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormatResponse) []IPConfigurationProfileResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurationProfiles
	}).(IPConfigurationProfileResponseArrayOutput)
}

// Gets an array of references to the network interface IP configurations using subnet.
func (o SubnetPropertiesFormatResponsePtrOutput) IpConfigurations() IPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormatResponse) []IPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(IPConfigurationResponseArrayOutput)
}

// The reference of the NetworkSecurityGroup resource.
func (o SubnetPropertiesFormatResponsePtrOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormatResponse) *NetworkSecurityGroupResponse {
		if v == nil {
			return nil
		}
		return v.NetworkSecurityGroup
	}).(NetworkSecurityGroupResponsePtrOutput)
}

// The provisioning state of the resource.
func (o SubnetPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
func (o SubnetPropertiesFormatResponsePtrOutput) Purpose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Purpose
	}).(pulumi.StringPtrOutput)
}

// Gets an array of references to the external resources using subnet.
func (o SubnetPropertiesFormatResponsePtrOutput) ResourceNavigationLinks() ResourceNavigationLinkResponseArrayOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormatResponse) []ResourceNavigationLinkResponse {
		if v == nil {
			return nil
		}
		return v.ResourceNavigationLinks
	}).(ResourceNavigationLinkResponseArrayOutput)
}

// The reference of the RouteTable resource.
func (o SubnetPropertiesFormatResponsePtrOutput) RouteTable() RouteTableResponsePtrOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormatResponse) *RouteTableResponse {
		if v == nil {
			return nil
		}
		return v.RouteTable
	}).(RouteTableResponsePtrOutput)
}

// Gets an array of references to services injecting into this subnet.
func (o SubnetPropertiesFormatResponsePtrOutput) ServiceAssociationLinks() ServiceAssociationLinkResponseArrayOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormatResponse) []ServiceAssociationLinkResponse {
		if v == nil {
			return nil
		}
		return v.ServiceAssociationLinks
	}).(ServiceAssociationLinkResponseArrayOutput)
}

// An array of service endpoint policies.
func (o SubnetPropertiesFormatResponsePtrOutput) ServiceEndpointPolicies() ServiceEndpointPolicyResponseArrayOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormatResponse) []ServiceEndpointPolicyResponse {
		if v == nil {
			return nil
		}
		return v.ServiceEndpointPolicies
	}).(ServiceEndpointPolicyResponseArrayOutput)
}

// An array of service endpoints.
func (o SubnetPropertiesFormatResponsePtrOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o.ApplyT(func(v *SubnetPropertiesFormatResponse) []ServiceEndpointPropertiesFormatResponse {
		if v == nil {
			return nil
		}
		return v.ServiceEndpoints
	}).(ServiceEndpointPropertiesFormatResponseArrayOutput)
}

// Subnet in a virtual network resource.
type SubnetResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the subnet.
	Properties *SubnetPropertiesFormatResponse `pulumi:"properties"`
}

// SubnetResponseInput is an input type that accepts SubnetResponseArgs and SubnetResponseOutput values.
// You can construct a concrete instance of `SubnetResponseInput` via:
//
//          SubnetResponseArgs{...}
type SubnetResponseInput interface {
	pulumi.Input

	ToSubnetResponseOutput() SubnetResponseOutput
	ToSubnetResponseOutputWithContext(context.Context) SubnetResponseOutput
}

// Subnet in a virtual network resource.
type SubnetResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the subnet.
	Properties SubnetPropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (SubnetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResponse)(nil)).Elem()
}

func (i SubnetResponseArgs) ToSubnetResponseOutput() SubnetResponseOutput {
	return i.ToSubnetResponseOutputWithContext(context.Background())
}

func (i SubnetResponseArgs) ToSubnetResponseOutputWithContext(ctx context.Context) SubnetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResponseOutput)
}

func (i SubnetResponseArgs) ToSubnetResponsePtrOutput() SubnetResponsePtrOutput {
	return i.ToSubnetResponsePtrOutputWithContext(context.Background())
}

func (i SubnetResponseArgs) ToSubnetResponsePtrOutputWithContext(ctx context.Context) SubnetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResponseOutput).ToSubnetResponsePtrOutputWithContext(ctx)
}

// SubnetResponsePtrInput is an input type that accepts SubnetResponseArgs, SubnetResponsePtr and SubnetResponsePtrOutput values.
// You can construct a concrete instance of `SubnetResponsePtrInput` via:
//
//          SubnetResponseArgs{...}
//
//  or:
//
//          nil
type SubnetResponsePtrInput interface {
	pulumi.Input

	ToSubnetResponsePtrOutput() SubnetResponsePtrOutput
	ToSubnetResponsePtrOutputWithContext(context.Context) SubnetResponsePtrOutput
}

type subnetResponsePtrType SubnetResponseArgs

func SubnetResponsePtr(v *SubnetResponseArgs) SubnetResponsePtrInput {
	return (*subnetResponsePtrType)(v)
}

func (*subnetResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetResponse)(nil)).Elem()
}

func (i *subnetResponsePtrType) ToSubnetResponsePtrOutput() SubnetResponsePtrOutput {
	return i.ToSubnetResponsePtrOutputWithContext(context.Background())
}

func (i *subnetResponsePtrType) ToSubnetResponsePtrOutputWithContext(ctx context.Context) SubnetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResponsePtrOutput)
}

// SubnetResponseArrayInput is an input type that accepts SubnetResponseArray and SubnetResponseArrayOutput values.
// You can construct a concrete instance of `SubnetResponseArrayInput` via:
//
//          SubnetResponseArray{ SubnetResponseArgs{...} }
type SubnetResponseArrayInput interface {
	pulumi.Input

	ToSubnetResponseArrayOutput() SubnetResponseArrayOutput
	ToSubnetResponseArrayOutputWithContext(context.Context) SubnetResponseArrayOutput
}

type SubnetResponseArray []SubnetResponseInput

func (SubnetResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResponse)(nil)).Elem()
}

func (i SubnetResponseArray) ToSubnetResponseArrayOutput() SubnetResponseArrayOutput {
	return i.ToSubnetResponseArrayOutputWithContext(context.Background())
}

func (i SubnetResponseArray) ToSubnetResponseArrayOutputWithContext(ctx context.Context) SubnetResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResponseArrayOutput)
}

// Subnet in a virtual network resource.
type SubnetResponseOutput struct{ *pulumi.OutputState }

func (SubnetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseOutput) ToSubnetResponseOutput() SubnetResponseOutput {
	return o
}

func (o SubnetResponseOutput) ToSubnetResponseOutputWithContext(ctx context.Context) SubnetResponseOutput {
	return o
}

func (o SubnetResponseOutput) ToSubnetResponsePtrOutput() SubnetResponsePtrOutput {
	return o.ToSubnetResponsePtrOutputWithContext(context.Background())
}

func (o SubnetResponseOutput) ToSubnetResponsePtrOutputWithContext(ctx context.Context) SubnetResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *SubnetResponse {
		return &v
	}).(SubnetResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SubnetResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the subnet.
func (o SubnetResponseOutput) Properties() SubnetPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *SubnetPropertiesFormatResponse { return v.Properties }).(SubnetPropertiesFormatResponsePtrOutput)
}

type SubnetResponsePtrOutput struct{ *pulumi.OutputState }

func (SubnetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetResponse)(nil)).Elem()
}

func (o SubnetResponsePtrOutput) ToSubnetResponsePtrOutput() SubnetResponsePtrOutput {
	return o
}

func (o SubnetResponsePtrOutput) ToSubnetResponsePtrOutputWithContext(ctx context.Context) SubnetResponsePtrOutput {
	return o
}

func (o SubnetResponsePtrOutput) Elem() SubnetResponseOutput {
	return o.ApplyT(func(v *SubnetResponse) SubnetResponse { return *v }).(SubnetResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SubnetResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Properties of the subnet.
func (o SubnetResponsePtrOutput) Properties() SubnetPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *SubnetPropertiesFormatResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(SubnetPropertiesFormatResponsePtrOutput)
}

type SubnetResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutput() SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutputWithContext(ctx context.Context) SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) Index(i pulumi.IntInput) SubnetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetResponse {
		return vs[0].([]SubnetResponse)[vs[1].(int)]
	}).(SubnetResponseOutput)
}

// VirtualNetworkGatewayConnection properties
type TunnelConnectionHealth struct {
}

// TunnelConnectionHealthInput is an input type that accepts TunnelConnectionHealthArgs and TunnelConnectionHealthOutput values.
// You can construct a concrete instance of `TunnelConnectionHealthInput` via:
//
//          TunnelConnectionHealthArgs{...}
type TunnelConnectionHealthInput interface {
	pulumi.Input

	ToTunnelConnectionHealthOutput() TunnelConnectionHealthOutput
	ToTunnelConnectionHealthOutputWithContext(context.Context) TunnelConnectionHealthOutput
}

// VirtualNetworkGatewayConnection properties
type TunnelConnectionHealthArgs struct {
}

func (TunnelConnectionHealthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelConnectionHealth)(nil)).Elem()
}

func (i TunnelConnectionHealthArgs) ToTunnelConnectionHealthOutput() TunnelConnectionHealthOutput {
	return i.ToTunnelConnectionHealthOutputWithContext(context.Background())
}

func (i TunnelConnectionHealthArgs) ToTunnelConnectionHealthOutputWithContext(ctx context.Context) TunnelConnectionHealthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelConnectionHealthOutput)
}

// VirtualNetworkGatewayConnection properties
type TunnelConnectionHealthOutput struct{ *pulumi.OutputState }

func (TunnelConnectionHealthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelConnectionHealth)(nil)).Elem()
}

func (o TunnelConnectionHealthOutput) ToTunnelConnectionHealthOutput() TunnelConnectionHealthOutput {
	return o
}

func (o TunnelConnectionHealthOutput) ToTunnelConnectionHealthOutputWithContext(ctx context.Context) TunnelConnectionHealthOutput {
	return o
}

// VirtualNetworkGatewayConnection properties
type TunnelConnectionHealthResponse struct {
	// Virtual network Gateway connection status
	ConnectionStatus string `pulumi:"connectionStatus"`
	// The Egress Bytes Transferred in this connection
	EgressBytesTransferred int `pulumi:"egressBytesTransferred"`
	// The Ingress Bytes Transferred in this connection
	IngressBytesTransferred int `pulumi:"ingressBytesTransferred"`
	// The time at which connection was established in Utc format.
	LastConnectionEstablishedUtcTime string `pulumi:"lastConnectionEstablishedUtcTime"`
	// Tunnel name.
	Tunnel string `pulumi:"tunnel"`
}

// TunnelConnectionHealthResponseInput is an input type that accepts TunnelConnectionHealthResponseArgs and TunnelConnectionHealthResponseOutput values.
// You can construct a concrete instance of `TunnelConnectionHealthResponseInput` via:
//
//          TunnelConnectionHealthResponseArgs{...}
type TunnelConnectionHealthResponseInput interface {
	pulumi.Input

	ToTunnelConnectionHealthResponseOutput() TunnelConnectionHealthResponseOutput
	ToTunnelConnectionHealthResponseOutputWithContext(context.Context) TunnelConnectionHealthResponseOutput
}

// VirtualNetworkGatewayConnection properties
type TunnelConnectionHealthResponseArgs struct {
	// Virtual network Gateway connection status
	ConnectionStatus pulumi.StringInput `pulumi:"connectionStatus"`
	// The Egress Bytes Transferred in this connection
	EgressBytesTransferred pulumi.IntInput `pulumi:"egressBytesTransferred"`
	// The Ingress Bytes Transferred in this connection
	IngressBytesTransferred pulumi.IntInput `pulumi:"ingressBytesTransferred"`
	// The time at which connection was established in Utc format.
	LastConnectionEstablishedUtcTime pulumi.StringInput `pulumi:"lastConnectionEstablishedUtcTime"`
	// Tunnel name.
	Tunnel pulumi.StringInput `pulumi:"tunnel"`
}

func (TunnelConnectionHealthResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelConnectionHealthResponse)(nil)).Elem()
}

func (i TunnelConnectionHealthResponseArgs) ToTunnelConnectionHealthResponseOutput() TunnelConnectionHealthResponseOutput {
	return i.ToTunnelConnectionHealthResponseOutputWithContext(context.Background())
}

func (i TunnelConnectionHealthResponseArgs) ToTunnelConnectionHealthResponseOutputWithContext(ctx context.Context) TunnelConnectionHealthResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelConnectionHealthResponseOutput)
}

// TunnelConnectionHealthResponseArrayInput is an input type that accepts TunnelConnectionHealthResponseArray and TunnelConnectionHealthResponseArrayOutput values.
// You can construct a concrete instance of `TunnelConnectionHealthResponseArrayInput` via:
//
//          TunnelConnectionHealthResponseArray{ TunnelConnectionHealthResponseArgs{...} }
type TunnelConnectionHealthResponseArrayInput interface {
	pulumi.Input

	ToTunnelConnectionHealthResponseArrayOutput() TunnelConnectionHealthResponseArrayOutput
	ToTunnelConnectionHealthResponseArrayOutputWithContext(context.Context) TunnelConnectionHealthResponseArrayOutput
}

type TunnelConnectionHealthResponseArray []TunnelConnectionHealthResponseInput

func (TunnelConnectionHealthResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TunnelConnectionHealthResponse)(nil)).Elem()
}

func (i TunnelConnectionHealthResponseArray) ToTunnelConnectionHealthResponseArrayOutput() TunnelConnectionHealthResponseArrayOutput {
	return i.ToTunnelConnectionHealthResponseArrayOutputWithContext(context.Background())
}

func (i TunnelConnectionHealthResponseArray) ToTunnelConnectionHealthResponseArrayOutputWithContext(ctx context.Context) TunnelConnectionHealthResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelConnectionHealthResponseArrayOutput)
}

// VirtualNetworkGatewayConnection properties
type TunnelConnectionHealthResponseOutput struct{ *pulumi.OutputState }

func (TunnelConnectionHealthResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelConnectionHealthResponse)(nil)).Elem()
}

func (o TunnelConnectionHealthResponseOutput) ToTunnelConnectionHealthResponseOutput() TunnelConnectionHealthResponseOutput {
	return o
}

func (o TunnelConnectionHealthResponseOutput) ToTunnelConnectionHealthResponseOutputWithContext(ctx context.Context) TunnelConnectionHealthResponseOutput {
	return o
}

// Virtual network Gateway connection status
func (o TunnelConnectionHealthResponseOutput) ConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) string { return v.ConnectionStatus }).(pulumi.StringOutput)
}

// The Egress Bytes Transferred in this connection
func (o TunnelConnectionHealthResponseOutput) EgressBytesTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) int { return v.EgressBytesTransferred }).(pulumi.IntOutput)
}

// The Ingress Bytes Transferred in this connection
func (o TunnelConnectionHealthResponseOutput) IngressBytesTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) int { return v.IngressBytesTransferred }).(pulumi.IntOutput)
}

// The time at which connection was established in Utc format.
func (o TunnelConnectionHealthResponseOutput) LastConnectionEstablishedUtcTime() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) string { return v.LastConnectionEstablishedUtcTime }).(pulumi.StringOutput)
}

// Tunnel name.
func (o TunnelConnectionHealthResponseOutput) Tunnel() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) string { return v.Tunnel }).(pulumi.StringOutput)
}

type TunnelConnectionHealthResponseArrayOutput struct{ *pulumi.OutputState }

func (TunnelConnectionHealthResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TunnelConnectionHealthResponse)(nil)).Elem()
}

func (o TunnelConnectionHealthResponseArrayOutput) ToTunnelConnectionHealthResponseArrayOutput() TunnelConnectionHealthResponseArrayOutput {
	return o
}

func (o TunnelConnectionHealthResponseArrayOutput) ToTunnelConnectionHealthResponseArrayOutputWithContext(ctx context.Context) TunnelConnectionHealthResponseArrayOutput {
	return o
}

func (o TunnelConnectionHealthResponseArrayOutput) Index(i pulumi.IntInput) TunnelConnectionHealthResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TunnelConnectionHealthResponse {
		return vs[0].([]TunnelConnectionHealthResponse)[vs[1].(int)]
	}).(TunnelConnectionHealthResponseOutput)
}

// VirtualHub Resource.
type VirtualHubType struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource location.
	Location string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Parameters for VirtualHub
	Properties VirtualHubPropertiesResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VirtualHubTypeInput is an input type that accepts VirtualHubTypeArgs and VirtualHubTypeOutput values.
// You can construct a concrete instance of `VirtualHubTypeInput` via:
//
//          VirtualHubTypeArgs{...}
type VirtualHubTypeInput interface {
	pulumi.Input

	ToVirtualHubTypeOutput() VirtualHubTypeOutput
	ToVirtualHubTypeOutputWithContext(context.Context) VirtualHubTypeOutput
}

// VirtualHub Resource.
type VirtualHubTypeArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Parameters for VirtualHub
	Properties VirtualHubPropertiesResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VirtualHubTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubType)(nil)).Elem()
}

func (i VirtualHubTypeArgs) ToVirtualHubTypeOutput() VirtualHubTypeOutput {
	return i.ToVirtualHubTypeOutputWithContext(context.Background())
}

func (i VirtualHubTypeArgs) ToVirtualHubTypeOutputWithContext(ctx context.Context) VirtualHubTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubTypeOutput)
}

// VirtualHub Resource.
type VirtualHubTypeOutput struct{ *pulumi.OutputState }

func (VirtualHubTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubType)(nil)).Elem()
}

func (o VirtualHubTypeOutput) ToVirtualHubTypeOutput() VirtualHubTypeOutput {
	return o
}

func (o VirtualHubTypeOutput) ToVirtualHubTypeOutputWithContext(ctx context.Context) VirtualHubTypeOutput {
	return o
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VirtualHubTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualHubType) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource location.
func (o VirtualHubTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualHubType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name.
func (o VirtualHubTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualHubType) string { return v.Name }).(pulumi.StringOutput)
}

// Parameters for VirtualHub
func (o VirtualHubTypeOutput) Properties() VirtualHubPropertiesResponseOutput {
	return o.ApplyT(func(v VirtualHubType) VirtualHubPropertiesResponse { return v.Properties }).(VirtualHubPropertiesResponseOutput)
}

// Resource tags.
func (o VirtualHubTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualHubType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualHubTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualHubType) string { return v.Type }).(pulumi.StringOutput)
}

// Virtual Hub identifier.
type VirtualHubId struct {
	// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
	Id *string `pulumi:"id"`
}

// VirtualHubIdInput is an input type that accepts VirtualHubIdArgs and VirtualHubIdOutput values.
// You can construct a concrete instance of `VirtualHubIdInput` via:
//
//          VirtualHubIdArgs{...}
type VirtualHubIdInput interface {
	pulumi.Input

	ToVirtualHubIdOutput() VirtualHubIdOutput
	ToVirtualHubIdOutputWithContext(context.Context) VirtualHubIdOutput
}

// Virtual Hub identifier.
type VirtualHubIdArgs struct {
	// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (VirtualHubIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubId)(nil)).Elem()
}

func (i VirtualHubIdArgs) ToVirtualHubIdOutput() VirtualHubIdOutput {
	return i.ToVirtualHubIdOutputWithContext(context.Background())
}

func (i VirtualHubIdArgs) ToVirtualHubIdOutputWithContext(ctx context.Context) VirtualHubIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubIdOutput)
}

func (i VirtualHubIdArgs) ToVirtualHubIdPtrOutput() VirtualHubIdPtrOutput {
	return i.ToVirtualHubIdPtrOutputWithContext(context.Background())
}

func (i VirtualHubIdArgs) ToVirtualHubIdPtrOutputWithContext(ctx context.Context) VirtualHubIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubIdOutput).ToVirtualHubIdPtrOutputWithContext(ctx)
}

// VirtualHubIdPtrInput is an input type that accepts VirtualHubIdArgs, VirtualHubIdPtr and VirtualHubIdPtrOutput values.
// You can construct a concrete instance of `VirtualHubIdPtrInput` via:
//
//          VirtualHubIdArgs{...}
//
//  or:
//
//          nil
type VirtualHubIdPtrInput interface {
	pulumi.Input

	ToVirtualHubIdPtrOutput() VirtualHubIdPtrOutput
	ToVirtualHubIdPtrOutputWithContext(context.Context) VirtualHubIdPtrOutput
}

type virtualHubIdPtrType VirtualHubIdArgs

func VirtualHubIdPtr(v *VirtualHubIdArgs) VirtualHubIdPtrInput {
	return (*virtualHubIdPtrType)(v)
}

func (*virtualHubIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubId)(nil)).Elem()
}

func (i *virtualHubIdPtrType) ToVirtualHubIdPtrOutput() VirtualHubIdPtrOutput {
	return i.ToVirtualHubIdPtrOutputWithContext(context.Background())
}

func (i *virtualHubIdPtrType) ToVirtualHubIdPtrOutputWithContext(ctx context.Context) VirtualHubIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubIdPtrOutput)
}

// Virtual Hub identifier.
type VirtualHubIdOutput struct{ *pulumi.OutputState }

func (VirtualHubIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubId)(nil)).Elem()
}

func (o VirtualHubIdOutput) ToVirtualHubIdOutput() VirtualHubIdOutput {
	return o
}

func (o VirtualHubIdOutput) ToVirtualHubIdOutputWithContext(ctx context.Context) VirtualHubIdOutput {
	return o
}

func (o VirtualHubIdOutput) ToVirtualHubIdPtrOutput() VirtualHubIdPtrOutput {
	return o.ToVirtualHubIdPtrOutputWithContext(context.Background())
}

func (o VirtualHubIdOutput) ToVirtualHubIdPtrOutputWithContext(ctx context.Context) VirtualHubIdPtrOutput {
	return o.ApplyT(func(v VirtualHubId) *VirtualHubId {
		return &v
	}).(VirtualHubIdPtrOutput)
}

// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
func (o VirtualHubIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubId) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type VirtualHubIdPtrOutput struct{ *pulumi.OutputState }

func (VirtualHubIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubId)(nil)).Elem()
}

func (o VirtualHubIdPtrOutput) ToVirtualHubIdPtrOutput() VirtualHubIdPtrOutput {
	return o
}

func (o VirtualHubIdPtrOutput) ToVirtualHubIdPtrOutputWithContext(ctx context.Context) VirtualHubIdPtrOutput {
	return o
}

func (o VirtualHubIdPtrOutput) Elem() VirtualHubIdOutput {
	return o.ApplyT(func(v *VirtualHubId) VirtualHubId { return *v }).(VirtualHubIdOutput)
}

// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
func (o VirtualHubIdPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualHubId) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Virtual Hub identifier.
type VirtualHubIdResponse struct {
	// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
	Id *string `pulumi:"id"`
}

// VirtualHubIdResponseInput is an input type that accepts VirtualHubIdResponseArgs and VirtualHubIdResponseOutput values.
// You can construct a concrete instance of `VirtualHubIdResponseInput` via:
//
//          VirtualHubIdResponseArgs{...}
type VirtualHubIdResponseInput interface {
	pulumi.Input

	ToVirtualHubIdResponseOutput() VirtualHubIdResponseOutput
	ToVirtualHubIdResponseOutputWithContext(context.Context) VirtualHubIdResponseOutput
}

// Virtual Hub identifier.
type VirtualHubIdResponseArgs struct {
	// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (VirtualHubIdResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubIdResponse)(nil)).Elem()
}

func (i VirtualHubIdResponseArgs) ToVirtualHubIdResponseOutput() VirtualHubIdResponseOutput {
	return i.ToVirtualHubIdResponseOutputWithContext(context.Background())
}

func (i VirtualHubIdResponseArgs) ToVirtualHubIdResponseOutputWithContext(ctx context.Context) VirtualHubIdResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubIdResponseOutput)
}

func (i VirtualHubIdResponseArgs) ToVirtualHubIdResponsePtrOutput() VirtualHubIdResponsePtrOutput {
	return i.ToVirtualHubIdResponsePtrOutputWithContext(context.Background())
}

func (i VirtualHubIdResponseArgs) ToVirtualHubIdResponsePtrOutputWithContext(ctx context.Context) VirtualHubIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubIdResponseOutput).ToVirtualHubIdResponsePtrOutputWithContext(ctx)
}

// VirtualHubIdResponsePtrInput is an input type that accepts VirtualHubIdResponseArgs, VirtualHubIdResponsePtr and VirtualHubIdResponsePtrOutput values.
// You can construct a concrete instance of `VirtualHubIdResponsePtrInput` via:
//
//          VirtualHubIdResponseArgs{...}
//
//  or:
//
//          nil
type VirtualHubIdResponsePtrInput interface {
	pulumi.Input

	ToVirtualHubIdResponsePtrOutput() VirtualHubIdResponsePtrOutput
	ToVirtualHubIdResponsePtrOutputWithContext(context.Context) VirtualHubIdResponsePtrOutput
}

type virtualHubIdResponsePtrType VirtualHubIdResponseArgs

func VirtualHubIdResponsePtr(v *VirtualHubIdResponseArgs) VirtualHubIdResponsePtrInput {
	return (*virtualHubIdResponsePtrType)(v)
}

func (*virtualHubIdResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubIdResponse)(nil)).Elem()
}

func (i *virtualHubIdResponsePtrType) ToVirtualHubIdResponsePtrOutput() VirtualHubIdResponsePtrOutput {
	return i.ToVirtualHubIdResponsePtrOutputWithContext(context.Background())
}

func (i *virtualHubIdResponsePtrType) ToVirtualHubIdResponsePtrOutputWithContext(ctx context.Context) VirtualHubIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubIdResponsePtrOutput)
}

// Virtual Hub identifier.
type VirtualHubIdResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubIdResponse)(nil)).Elem()
}

func (o VirtualHubIdResponseOutput) ToVirtualHubIdResponseOutput() VirtualHubIdResponseOutput {
	return o
}

func (o VirtualHubIdResponseOutput) ToVirtualHubIdResponseOutputWithContext(ctx context.Context) VirtualHubIdResponseOutput {
	return o
}

func (o VirtualHubIdResponseOutput) ToVirtualHubIdResponsePtrOutput() VirtualHubIdResponsePtrOutput {
	return o.ToVirtualHubIdResponsePtrOutputWithContext(context.Background())
}

func (o VirtualHubIdResponseOutput) ToVirtualHubIdResponsePtrOutputWithContext(ctx context.Context) VirtualHubIdResponsePtrOutput {
	return o.ApplyT(func(v VirtualHubIdResponse) *VirtualHubIdResponse {
		return &v
	}).(VirtualHubIdResponsePtrOutput)
}

// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
func (o VirtualHubIdResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubIdResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type VirtualHubIdResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualHubIdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubIdResponse)(nil)).Elem()
}

func (o VirtualHubIdResponsePtrOutput) ToVirtualHubIdResponsePtrOutput() VirtualHubIdResponsePtrOutput {
	return o
}

func (o VirtualHubIdResponsePtrOutput) ToVirtualHubIdResponsePtrOutputWithContext(ctx context.Context) VirtualHubIdResponsePtrOutput {
	return o
}

func (o VirtualHubIdResponsePtrOutput) Elem() VirtualHubIdResponseOutput {
	return o.ApplyT(func(v *VirtualHubIdResponse) VirtualHubIdResponse { return *v }).(VirtualHubIdResponseOutput)
}

// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
func (o VirtualHubIdResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualHubIdResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Parameters for VirtualHub
type VirtualHubProperties struct {
	// Address-prefix for this VirtualHub.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// The expressRouteGateway associated with this VirtualHub
	ExpressRouteGateway *SubResource `pulumi:"expressRouteGateway"`
	// The P2SVpnGateway associated with this VirtualHub
	P2SVpnGateway *SubResource `pulumi:"p2SVpnGateway"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The routeTable associated with this virtual hub.
	RouteTable *VirtualHubRouteTable `pulumi:"routeTable"`
	// list of all vnet connections with this VirtualHub.
	VirtualNetworkConnections []HubVirtualNetworkConnection `pulumi:"virtualNetworkConnections"`
	// The VirtualWAN to which the VirtualHub belongs
	VirtualWan *SubResource `pulumi:"virtualWan"`
	// The VpnGateway associated with this VirtualHub
	VpnGateway *SubResource `pulumi:"vpnGateway"`
}

// VirtualHubPropertiesInput is an input type that accepts VirtualHubPropertiesArgs and VirtualHubPropertiesOutput values.
// You can construct a concrete instance of `VirtualHubPropertiesInput` via:
//
//          VirtualHubPropertiesArgs{...}
type VirtualHubPropertiesInput interface {
	pulumi.Input

	ToVirtualHubPropertiesOutput() VirtualHubPropertiesOutput
	ToVirtualHubPropertiesOutputWithContext(context.Context) VirtualHubPropertiesOutput
}

// Parameters for VirtualHub
type VirtualHubPropertiesArgs struct {
	// Address-prefix for this VirtualHub.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// The expressRouteGateway associated with this VirtualHub
	ExpressRouteGateway SubResourcePtrInput `pulumi:"expressRouteGateway"`
	// The P2SVpnGateway associated with this VirtualHub
	P2SVpnGateway SubResourcePtrInput `pulumi:"p2SVpnGateway"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The routeTable associated with this virtual hub.
	RouteTable VirtualHubRouteTablePtrInput `pulumi:"routeTable"`
	// list of all vnet connections with this VirtualHub.
	VirtualNetworkConnections HubVirtualNetworkConnectionArrayInput `pulumi:"virtualNetworkConnections"`
	// The VirtualWAN to which the VirtualHub belongs
	VirtualWan SubResourcePtrInput `pulumi:"virtualWan"`
	// The VpnGateway associated with this VirtualHub
	VpnGateway SubResourcePtrInput `pulumi:"vpnGateway"`
}

func (VirtualHubPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubProperties)(nil)).Elem()
}

func (i VirtualHubPropertiesArgs) ToVirtualHubPropertiesOutput() VirtualHubPropertiesOutput {
	return i.ToVirtualHubPropertiesOutputWithContext(context.Background())
}

func (i VirtualHubPropertiesArgs) ToVirtualHubPropertiesOutputWithContext(ctx context.Context) VirtualHubPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubPropertiesOutput)
}

func (i VirtualHubPropertiesArgs) ToVirtualHubPropertiesPtrOutput() VirtualHubPropertiesPtrOutput {
	return i.ToVirtualHubPropertiesPtrOutputWithContext(context.Background())
}

func (i VirtualHubPropertiesArgs) ToVirtualHubPropertiesPtrOutputWithContext(ctx context.Context) VirtualHubPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubPropertiesOutput).ToVirtualHubPropertiesPtrOutputWithContext(ctx)
}

// VirtualHubPropertiesPtrInput is an input type that accepts VirtualHubPropertiesArgs, VirtualHubPropertiesPtr and VirtualHubPropertiesPtrOutput values.
// You can construct a concrete instance of `VirtualHubPropertiesPtrInput` via:
//
//          VirtualHubPropertiesArgs{...}
//
//  or:
//
//          nil
type VirtualHubPropertiesPtrInput interface {
	pulumi.Input

	ToVirtualHubPropertiesPtrOutput() VirtualHubPropertiesPtrOutput
	ToVirtualHubPropertiesPtrOutputWithContext(context.Context) VirtualHubPropertiesPtrOutput
}

type virtualHubPropertiesPtrType VirtualHubPropertiesArgs

func VirtualHubPropertiesPtr(v *VirtualHubPropertiesArgs) VirtualHubPropertiesPtrInput {
	return (*virtualHubPropertiesPtrType)(v)
}

func (*virtualHubPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubProperties)(nil)).Elem()
}

func (i *virtualHubPropertiesPtrType) ToVirtualHubPropertiesPtrOutput() VirtualHubPropertiesPtrOutput {
	return i.ToVirtualHubPropertiesPtrOutputWithContext(context.Background())
}

func (i *virtualHubPropertiesPtrType) ToVirtualHubPropertiesPtrOutputWithContext(ctx context.Context) VirtualHubPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubPropertiesPtrOutput)
}

// Parameters for VirtualHub
type VirtualHubPropertiesOutput struct{ *pulumi.OutputState }

func (VirtualHubPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubProperties)(nil)).Elem()
}

func (o VirtualHubPropertiesOutput) ToVirtualHubPropertiesOutput() VirtualHubPropertiesOutput {
	return o
}

func (o VirtualHubPropertiesOutput) ToVirtualHubPropertiesOutputWithContext(ctx context.Context) VirtualHubPropertiesOutput {
	return o
}

func (o VirtualHubPropertiesOutput) ToVirtualHubPropertiesPtrOutput() VirtualHubPropertiesPtrOutput {
	return o.ToVirtualHubPropertiesPtrOutputWithContext(context.Background())
}

func (o VirtualHubPropertiesOutput) ToVirtualHubPropertiesPtrOutputWithContext(ctx context.Context) VirtualHubPropertiesPtrOutput {
	return o.ApplyT(func(v VirtualHubProperties) *VirtualHubProperties {
		return &v
	}).(VirtualHubPropertiesPtrOutput)
}

// Address-prefix for this VirtualHub.
func (o VirtualHubPropertiesOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubProperties) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// The expressRouteGateway associated with this VirtualHub
func (o VirtualHubPropertiesOutput) ExpressRouteGateway() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualHubProperties) *SubResource { return v.ExpressRouteGateway }).(SubResourcePtrOutput)
}

// The P2SVpnGateway associated with this VirtualHub
func (o VirtualHubPropertiesOutput) P2SVpnGateway() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualHubProperties) *SubResource { return v.P2SVpnGateway }).(SubResourcePtrOutput)
}

// The provisioning state of the resource.
func (o VirtualHubPropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The routeTable associated with this virtual hub.
func (o VirtualHubPropertiesOutput) RouteTable() VirtualHubRouteTablePtrOutput {
	return o.ApplyT(func(v VirtualHubProperties) *VirtualHubRouteTable { return v.RouteTable }).(VirtualHubRouteTablePtrOutput)
}

// list of all vnet connections with this VirtualHub.
func (o VirtualHubPropertiesOutput) VirtualNetworkConnections() HubVirtualNetworkConnectionArrayOutput {
	return o.ApplyT(func(v VirtualHubProperties) []HubVirtualNetworkConnection { return v.VirtualNetworkConnections }).(HubVirtualNetworkConnectionArrayOutput)
}

// The VirtualWAN to which the VirtualHub belongs
func (o VirtualHubPropertiesOutput) VirtualWan() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualHubProperties) *SubResource { return v.VirtualWan }).(SubResourcePtrOutput)
}

// The VpnGateway associated with this VirtualHub
func (o VirtualHubPropertiesOutput) VpnGateway() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualHubProperties) *SubResource { return v.VpnGateway }).(SubResourcePtrOutput)
}

type VirtualHubPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualHubPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubProperties)(nil)).Elem()
}

func (o VirtualHubPropertiesPtrOutput) ToVirtualHubPropertiesPtrOutput() VirtualHubPropertiesPtrOutput {
	return o
}

func (o VirtualHubPropertiesPtrOutput) ToVirtualHubPropertiesPtrOutputWithContext(ctx context.Context) VirtualHubPropertiesPtrOutput {
	return o
}

func (o VirtualHubPropertiesPtrOutput) Elem() VirtualHubPropertiesOutput {
	return o.ApplyT(func(v *VirtualHubProperties) VirtualHubProperties { return *v }).(VirtualHubPropertiesOutput)
}

// Address-prefix for this VirtualHub.
func (o VirtualHubPropertiesPtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualHubProperties) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The expressRouteGateway associated with this VirtualHub
func (o VirtualHubPropertiesPtrOutput) ExpressRouteGateway() SubResourcePtrOutput {
	return o.ApplyT(func(v *VirtualHubProperties) *SubResource {
		if v == nil {
			return nil
		}
		return v.ExpressRouteGateway
	}).(SubResourcePtrOutput)
}

// The P2SVpnGateway associated with this VirtualHub
func (o VirtualHubPropertiesPtrOutput) P2SVpnGateway() SubResourcePtrOutput {
	return o.ApplyT(func(v *VirtualHubProperties) *SubResource {
		if v == nil {
			return nil
		}
		return v.P2SVpnGateway
	}).(SubResourcePtrOutput)
}

// The provisioning state of the resource.
func (o VirtualHubPropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualHubProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The routeTable associated with this virtual hub.
func (o VirtualHubPropertiesPtrOutput) RouteTable() VirtualHubRouteTablePtrOutput {
	return o.ApplyT(func(v *VirtualHubProperties) *VirtualHubRouteTable {
		if v == nil {
			return nil
		}
		return v.RouteTable
	}).(VirtualHubRouteTablePtrOutput)
}

// list of all vnet connections with this VirtualHub.
func (o VirtualHubPropertiesPtrOutput) VirtualNetworkConnections() HubVirtualNetworkConnectionArrayOutput {
	return o.ApplyT(func(v *VirtualHubProperties) []HubVirtualNetworkConnection {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkConnections
	}).(HubVirtualNetworkConnectionArrayOutput)
}

// The VirtualWAN to which the VirtualHub belongs
func (o VirtualHubPropertiesPtrOutput) VirtualWan() SubResourcePtrOutput {
	return o.ApplyT(func(v *VirtualHubProperties) *SubResource {
		if v == nil {
			return nil
		}
		return v.VirtualWan
	}).(SubResourcePtrOutput)
}

// The VpnGateway associated with this VirtualHub
func (o VirtualHubPropertiesPtrOutput) VpnGateway() SubResourcePtrOutput {
	return o.ApplyT(func(v *VirtualHubProperties) *SubResource {
		if v == nil {
			return nil
		}
		return v.VpnGateway
	}).(SubResourcePtrOutput)
}

// Parameters for VirtualHub
type VirtualHubPropertiesResponse struct {
	// Address-prefix for this VirtualHub.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// The expressRouteGateway associated with this VirtualHub
	ExpressRouteGateway *SubResourceResponse `pulumi:"expressRouteGateway"`
	// The P2SVpnGateway associated with this VirtualHub
	P2SVpnGateway *SubResourceResponse `pulumi:"p2SVpnGateway"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The routeTable associated with this virtual hub.
	RouteTable *VirtualHubRouteTableResponse `pulumi:"routeTable"`
	// list of all vnet connections with this VirtualHub.
	VirtualNetworkConnections []HubVirtualNetworkConnectionResponse `pulumi:"virtualNetworkConnections"`
	// The VirtualWAN to which the VirtualHub belongs
	VirtualWan *SubResourceResponse `pulumi:"virtualWan"`
	// The VpnGateway associated with this VirtualHub
	VpnGateway *SubResourceResponse `pulumi:"vpnGateway"`
}

// VirtualHubPropertiesResponseInput is an input type that accepts VirtualHubPropertiesResponseArgs and VirtualHubPropertiesResponseOutput values.
// You can construct a concrete instance of `VirtualHubPropertiesResponseInput` via:
//
//          VirtualHubPropertiesResponseArgs{...}
type VirtualHubPropertiesResponseInput interface {
	pulumi.Input

	ToVirtualHubPropertiesResponseOutput() VirtualHubPropertiesResponseOutput
	ToVirtualHubPropertiesResponseOutputWithContext(context.Context) VirtualHubPropertiesResponseOutput
}

// Parameters for VirtualHub
type VirtualHubPropertiesResponseArgs struct {
	// Address-prefix for this VirtualHub.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// The expressRouteGateway associated with this VirtualHub
	ExpressRouteGateway SubResourceResponsePtrInput `pulumi:"expressRouteGateway"`
	// The P2SVpnGateway associated with this VirtualHub
	P2SVpnGateway SubResourceResponsePtrInput `pulumi:"p2SVpnGateway"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The routeTable associated with this virtual hub.
	RouteTable VirtualHubRouteTableResponsePtrInput `pulumi:"routeTable"`
	// list of all vnet connections with this VirtualHub.
	VirtualNetworkConnections HubVirtualNetworkConnectionResponseArrayInput `pulumi:"virtualNetworkConnections"`
	// The VirtualWAN to which the VirtualHub belongs
	VirtualWan SubResourceResponsePtrInput `pulumi:"virtualWan"`
	// The VpnGateway associated with this VirtualHub
	VpnGateway SubResourceResponsePtrInput `pulumi:"vpnGateway"`
}

func (VirtualHubPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubPropertiesResponse)(nil)).Elem()
}

func (i VirtualHubPropertiesResponseArgs) ToVirtualHubPropertiesResponseOutput() VirtualHubPropertiesResponseOutput {
	return i.ToVirtualHubPropertiesResponseOutputWithContext(context.Background())
}

func (i VirtualHubPropertiesResponseArgs) ToVirtualHubPropertiesResponseOutputWithContext(ctx context.Context) VirtualHubPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubPropertiesResponseOutput)
}

func (i VirtualHubPropertiesResponseArgs) ToVirtualHubPropertiesResponsePtrOutput() VirtualHubPropertiesResponsePtrOutput {
	return i.ToVirtualHubPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i VirtualHubPropertiesResponseArgs) ToVirtualHubPropertiesResponsePtrOutputWithContext(ctx context.Context) VirtualHubPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubPropertiesResponseOutput).ToVirtualHubPropertiesResponsePtrOutputWithContext(ctx)
}

// VirtualHubPropertiesResponsePtrInput is an input type that accepts VirtualHubPropertiesResponseArgs, VirtualHubPropertiesResponsePtr and VirtualHubPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `VirtualHubPropertiesResponsePtrInput` via:
//
//          VirtualHubPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type VirtualHubPropertiesResponsePtrInput interface {
	pulumi.Input

	ToVirtualHubPropertiesResponsePtrOutput() VirtualHubPropertiesResponsePtrOutput
	ToVirtualHubPropertiesResponsePtrOutputWithContext(context.Context) VirtualHubPropertiesResponsePtrOutput
}

type virtualHubPropertiesResponsePtrType VirtualHubPropertiesResponseArgs

func VirtualHubPropertiesResponsePtr(v *VirtualHubPropertiesResponseArgs) VirtualHubPropertiesResponsePtrInput {
	return (*virtualHubPropertiesResponsePtrType)(v)
}

func (*virtualHubPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubPropertiesResponse)(nil)).Elem()
}

func (i *virtualHubPropertiesResponsePtrType) ToVirtualHubPropertiesResponsePtrOutput() VirtualHubPropertiesResponsePtrOutput {
	return i.ToVirtualHubPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *virtualHubPropertiesResponsePtrType) ToVirtualHubPropertiesResponsePtrOutputWithContext(ctx context.Context) VirtualHubPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubPropertiesResponsePtrOutput)
}

// Parameters for VirtualHub
type VirtualHubPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubPropertiesResponse)(nil)).Elem()
}

func (o VirtualHubPropertiesResponseOutput) ToVirtualHubPropertiesResponseOutput() VirtualHubPropertiesResponseOutput {
	return o
}

func (o VirtualHubPropertiesResponseOutput) ToVirtualHubPropertiesResponseOutputWithContext(ctx context.Context) VirtualHubPropertiesResponseOutput {
	return o
}

func (o VirtualHubPropertiesResponseOutput) ToVirtualHubPropertiesResponsePtrOutput() VirtualHubPropertiesResponsePtrOutput {
	return o.ToVirtualHubPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o VirtualHubPropertiesResponseOutput) ToVirtualHubPropertiesResponsePtrOutputWithContext(ctx context.Context) VirtualHubPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VirtualHubPropertiesResponse) *VirtualHubPropertiesResponse {
		return &v
	}).(VirtualHubPropertiesResponsePtrOutput)
}

// Address-prefix for this VirtualHub.
func (o VirtualHubPropertiesResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubPropertiesResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// The expressRouteGateway associated with this VirtualHub
func (o VirtualHubPropertiesResponseOutput) ExpressRouteGateway() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualHubPropertiesResponse) *SubResourceResponse { return v.ExpressRouteGateway }).(SubResourceResponsePtrOutput)
}

// The P2SVpnGateway associated with this VirtualHub
func (o VirtualHubPropertiesResponseOutput) P2SVpnGateway() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualHubPropertiesResponse) *SubResourceResponse { return v.P2SVpnGateway }).(SubResourceResponsePtrOutput)
}

// The provisioning state of the resource.
func (o VirtualHubPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The routeTable associated with this virtual hub.
func (o VirtualHubPropertiesResponseOutput) RouteTable() VirtualHubRouteTableResponsePtrOutput {
	return o.ApplyT(func(v VirtualHubPropertiesResponse) *VirtualHubRouteTableResponse { return v.RouteTable }).(VirtualHubRouteTableResponsePtrOutput)
}

// list of all vnet connections with this VirtualHub.
func (o VirtualHubPropertiesResponseOutput) VirtualNetworkConnections() HubVirtualNetworkConnectionResponseArrayOutput {
	return o.ApplyT(func(v VirtualHubPropertiesResponse) []HubVirtualNetworkConnectionResponse {
		return v.VirtualNetworkConnections
	}).(HubVirtualNetworkConnectionResponseArrayOutput)
}

// The VirtualWAN to which the VirtualHub belongs
func (o VirtualHubPropertiesResponseOutput) VirtualWan() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualHubPropertiesResponse) *SubResourceResponse { return v.VirtualWan }).(SubResourceResponsePtrOutput)
}

// The VpnGateway associated with this VirtualHub
func (o VirtualHubPropertiesResponseOutput) VpnGateway() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualHubPropertiesResponse) *SubResourceResponse { return v.VpnGateway }).(SubResourceResponsePtrOutput)
}

type VirtualHubPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualHubPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubPropertiesResponse)(nil)).Elem()
}

func (o VirtualHubPropertiesResponsePtrOutput) ToVirtualHubPropertiesResponsePtrOutput() VirtualHubPropertiesResponsePtrOutput {
	return o
}

func (o VirtualHubPropertiesResponsePtrOutput) ToVirtualHubPropertiesResponsePtrOutputWithContext(ctx context.Context) VirtualHubPropertiesResponsePtrOutput {
	return o
}

func (o VirtualHubPropertiesResponsePtrOutput) Elem() VirtualHubPropertiesResponseOutput {
	return o.ApplyT(func(v *VirtualHubPropertiesResponse) VirtualHubPropertiesResponse { return *v }).(VirtualHubPropertiesResponseOutput)
}

// Address-prefix for this VirtualHub.
func (o VirtualHubPropertiesResponsePtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualHubPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The expressRouteGateway associated with this VirtualHub
func (o VirtualHubPropertiesResponsePtrOutput) ExpressRouteGateway() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualHubPropertiesResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.ExpressRouteGateway
	}).(SubResourceResponsePtrOutput)
}

// The P2SVpnGateway associated with this VirtualHub
func (o VirtualHubPropertiesResponsePtrOutput) P2SVpnGateway() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualHubPropertiesResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.P2SVpnGateway
	}).(SubResourceResponsePtrOutput)
}

// The provisioning state of the resource.
func (o VirtualHubPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualHubPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The routeTable associated with this virtual hub.
func (o VirtualHubPropertiesResponsePtrOutput) RouteTable() VirtualHubRouteTableResponsePtrOutput {
	return o.ApplyT(func(v *VirtualHubPropertiesResponse) *VirtualHubRouteTableResponse {
		if v == nil {
			return nil
		}
		return v.RouteTable
	}).(VirtualHubRouteTableResponsePtrOutput)
}

// list of all vnet connections with this VirtualHub.
func (o VirtualHubPropertiesResponsePtrOutput) VirtualNetworkConnections() HubVirtualNetworkConnectionResponseArrayOutput {
	return o.ApplyT(func(v *VirtualHubPropertiesResponse) []HubVirtualNetworkConnectionResponse {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkConnections
	}).(HubVirtualNetworkConnectionResponseArrayOutput)
}

// The VirtualWAN to which the VirtualHub belongs
func (o VirtualHubPropertiesResponsePtrOutput) VirtualWan() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualHubPropertiesResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.VirtualWan
	}).(SubResourceResponsePtrOutput)
}

// The VpnGateway associated with this VirtualHub
func (o VirtualHubPropertiesResponsePtrOutput) VpnGateway() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualHubPropertiesResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.VpnGateway
	}).(SubResourceResponsePtrOutput)
}

// VirtualHub route
type VirtualHubRoute struct {
	// list of all addressPrefixes.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// NextHop ip address.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
}

// VirtualHubRouteInput is an input type that accepts VirtualHubRouteArgs and VirtualHubRouteOutput values.
// You can construct a concrete instance of `VirtualHubRouteInput` via:
//
//          VirtualHubRouteArgs{...}
type VirtualHubRouteInput interface {
	pulumi.Input

	ToVirtualHubRouteOutput() VirtualHubRouteOutput
	ToVirtualHubRouteOutputWithContext(context.Context) VirtualHubRouteOutput
}

// VirtualHub route
type VirtualHubRouteArgs struct {
	// list of all addressPrefixes.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// NextHop ip address.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
}

func (VirtualHubRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRoute)(nil)).Elem()
}

func (i VirtualHubRouteArgs) ToVirtualHubRouteOutput() VirtualHubRouteOutput {
	return i.ToVirtualHubRouteOutputWithContext(context.Background())
}

func (i VirtualHubRouteArgs) ToVirtualHubRouteOutputWithContext(ctx context.Context) VirtualHubRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteOutput)
}

// VirtualHubRouteArrayInput is an input type that accepts VirtualHubRouteArray and VirtualHubRouteArrayOutput values.
// You can construct a concrete instance of `VirtualHubRouteArrayInput` via:
//
//          VirtualHubRouteArray{ VirtualHubRouteArgs{...} }
type VirtualHubRouteArrayInput interface {
	pulumi.Input

	ToVirtualHubRouteArrayOutput() VirtualHubRouteArrayOutput
	ToVirtualHubRouteArrayOutputWithContext(context.Context) VirtualHubRouteArrayOutput
}

type VirtualHubRouteArray []VirtualHubRouteInput

func (VirtualHubRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRoute)(nil)).Elem()
}

func (i VirtualHubRouteArray) ToVirtualHubRouteArrayOutput() VirtualHubRouteArrayOutput {
	return i.ToVirtualHubRouteArrayOutputWithContext(context.Background())
}

func (i VirtualHubRouteArray) ToVirtualHubRouteArrayOutputWithContext(ctx context.Context) VirtualHubRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteArrayOutput)
}

// VirtualHub route
type VirtualHubRouteOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRoute)(nil)).Elem()
}

func (o VirtualHubRouteOutput) ToVirtualHubRouteOutput() VirtualHubRouteOutput {
	return o
}

func (o VirtualHubRouteOutput) ToVirtualHubRouteOutputWithContext(ctx context.Context) VirtualHubRouteOutput {
	return o
}

// list of all addressPrefixes.
func (o VirtualHubRouteOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRoute) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// NextHop ip address.
func (o VirtualHubRouteOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRoute) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

type VirtualHubRouteArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRoute)(nil)).Elem()
}

func (o VirtualHubRouteArrayOutput) ToVirtualHubRouteArrayOutput() VirtualHubRouteArrayOutput {
	return o
}

func (o VirtualHubRouteArrayOutput) ToVirtualHubRouteArrayOutputWithContext(ctx context.Context) VirtualHubRouteArrayOutput {
	return o
}

func (o VirtualHubRouteArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRoute {
		return vs[0].([]VirtualHubRoute)[vs[1].(int)]
	}).(VirtualHubRouteOutput)
}

// VirtualHub route
type VirtualHubRouteResponse struct {
	// list of all addressPrefixes.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// NextHop ip address.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
}

// VirtualHubRouteResponseInput is an input type that accepts VirtualHubRouteResponseArgs and VirtualHubRouteResponseOutput values.
// You can construct a concrete instance of `VirtualHubRouteResponseInput` via:
//
//          VirtualHubRouteResponseArgs{...}
type VirtualHubRouteResponseInput interface {
	pulumi.Input

	ToVirtualHubRouteResponseOutput() VirtualHubRouteResponseOutput
	ToVirtualHubRouteResponseOutputWithContext(context.Context) VirtualHubRouteResponseOutput
}

// VirtualHub route
type VirtualHubRouteResponseArgs struct {
	// list of all addressPrefixes.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// NextHop ip address.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
}

func (VirtualHubRouteResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteResponse)(nil)).Elem()
}

func (i VirtualHubRouteResponseArgs) ToVirtualHubRouteResponseOutput() VirtualHubRouteResponseOutput {
	return i.ToVirtualHubRouteResponseOutputWithContext(context.Background())
}

func (i VirtualHubRouteResponseArgs) ToVirtualHubRouteResponseOutputWithContext(ctx context.Context) VirtualHubRouteResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteResponseOutput)
}

// VirtualHubRouteResponseArrayInput is an input type that accepts VirtualHubRouteResponseArray and VirtualHubRouteResponseArrayOutput values.
// You can construct a concrete instance of `VirtualHubRouteResponseArrayInput` via:
//
//          VirtualHubRouteResponseArray{ VirtualHubRouteResponseArgs{...} }
type VirtualHubRouteResponseArrayInput interface {
	pulumi.Input

	ToVirtualHubRouteResponseArrayOutput() VirtualHubRouteResponseArrayOutput
	ToVirtualHubRouteResponseArrayOutputWithContext(context.Context) VirtualHubRouteResponseArrayOutput
}

type VirtualHubRouteResponseArray []VirtualHubRouteResponseInput

func (VirtualHubRouteResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteResponse)(nil)).Elem()
}

func (i VirtualHubRouteResponseArray) ToVirtualHubRouteResponseArrayOutput() VirtualHubRouteResponseArrayOutput {
	return i.ToVirtualHubRouteResponseArrayOutputWithContext(context.Background())
}

func (i VirtualHubRouteResponseArray) ToVirtualHubRouteResponseArrayOutputWithContext(ctx context.Context) VirtualHubRouteResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteResponseArrayOutput)
}

// VirtualHub route
type VirtualHubRouteResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteResponse)(nil)).Elem()
}

func (o VirtualHubRouteResponseOutput) ToVirtualHubRouteResponseOutput() VirtualHubRouteResponseOutput {
	return o
}

func (o VirtualHubRouteResponseOutput) ToVirtualHubRouteResponseOutputWithContext(ctx context.Context) VirtualHubRouteResponseOutput {
	return o
}

// list of all addressPrefixes.
func (o VirtualHubRouteResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// NextHop ip address.
func (o VirtualHubRouteResponseOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteResponse) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

type VirtualHubRouteResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteResponse)(nil)).Elem()
}

func (o VirtualHubRouteResponseArrayOutput) ToVirtualHubRouteResponseArrayOutput() VirtualHubRouteResponseArrayOutput {
	return o
}

func (o VirtualHubRouteResponseArrayOutput) ToVirtualHubRouteResponseArrayOutputWithContext(ctx context.Context) VirtualHubRouteResponseArrayOutput {
	return o
}

func (o VirtualHubRouteResponseArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRouteResponse {
		return vs[0].([]VirtualHubRouteResponse)[vs[1].(int)]
	}).(VirtualHubRouteResponseOutput)
}

// VirtualHub route table
type VirtualHubRouteTable struct {
	// list of all routes.
	Routes []VirtualHubRoute `pulumi:"routes"`
}

// VirtualHubRouteTableInput is an input type that accepts VirtualHubRouteTableArgs and VirtualHubRouteTableOutput values.
// You can construct a concrete instance of `VirtualHubRouteTableInput` via:
//
//          VirtualHubRouteTableArgs{...}
type VirtualHubRouteTableInput interface {
	pulumi.Input

	ToVirtualHubRouteTableOutput() VirtualHubRouteTableOutput
	ToVirtualHubRouteTableOutputWithContext(context.Context) VirtualHubRouteTableOutput
}

// VirtualHub route table
type VirtualHubRouteTableArgs struct {
	// list of all routes.
	Routes VirtualHubRouteArrayInput `pulumi:"routes"`
}

func (VirtualHubRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTable)(nil)).Elem()
}

func (i VirtualHubRouteTableArgs) ToVirtualHubRouteTableOutput() VirtualHubRouteTableOutput {
	return i.ToVirtualHubRouteTableOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableArgs) ToVirtualHubRouteTableOutputWithContext(ctx context.Context) VirtualHubRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableOutput)
}

func (i VirtualHubRouteTableArgs) ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput {
	return i.ToVirtualHubRouteTablePtrOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableArgs) ToVirtualHubRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableOutput).ToVirtualHubRouteTablePtrOutputWithContext(ctx)
}

// VirtualHubRouteTablePtrInput is an input type that accepts VirtualHubRouteTableArgs, VirtualHubRouteTablePtr and VirtualHubRouteTablePtrOutput values.
// You can construct a concrete instance of `VirtualHubRouteTablePtrInput` via:
//
//          VirtualHubRouteTableArgs{...}
//
//  or:
//
//          nil
type VirtualHubRouteTablePtrInput interface {
	pulumi.Input

	ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput
	ToVirtualHubRouteTablePtrOutputWithContext(context.Context) VirtualHubRouteTablePtrOutput
}

type virtualHubRouteTablePtrType VirtualHubRouteTableArgs

func VirtualHubRouteTablePtr(v *VirtualHubRouteTableArgs) VirtualHubRouteTablePtrInput {
	return (*virtualHubRouteTablePtrType)(v)
}

func (*virtualHubRouteTablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubRouteTable)(nil)).Elem()
}

func (i *virtualHubRouteTablePtrType) ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput {
	return i.ToVirtualHubRouteTablePtrOutputWithContext(context.Background())
}

func (i *virtualHubRouteTablePtrType) ToVirtualHubRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTablePtrOutput)
}

// VirtualHub route table
type VirtualHubRouteTableOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTable)(nil)).Elem()
}

func (o VirtualHubRouteTableOutput) ToVirtualHubRouteTableOutput() VirtualHubRouteTableOutput {
	return o
}

func (o VirtualHubRouteTableOutput) ToVirtualHubRouteTableOutputWithContext(ctx context.Context) VirtualHubRouteTableOutput {
	return o
}

func (o VirtualHubRouteTableOutput) ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput {
	return o.ToVirtualHubRouteTablePtrOutputWithContext(context.Background())
}

func (o VirtualHubRouteTableOutput) ToVirtualHubRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubRouteTablePtrOutput {
	return o.ApplyT(func(v VirtualHubRouteTable) *VirtualHubRouteTable {
		return &v
	}).(VirtualHubRouteTablePtrOutput)
}

// list of all routes.
func (o VirtualHubRouteTableOutput) Routes() VirtualHubRouteArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTable) []VirtualHubRoute { return v.Routes }).(VirtualHubRouteArrayOutput)
}

type VirtualHubRouteTablePtrOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubRouteTable)(nil)).Elem()
}

func (o VirtualHubRouteTablePtrOutput) ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput {
	return o
}

func (o VirtualHubRouteTablePtrOutput) ToVirtualHubRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubRouteTablePtrOutput {
	return o
}

func (o VirtualHubRouteTablePtrOutput) Elem() VirtualHubRouteTableOutput {
	return o.ApplyT(func(v *VirtualHubRouteTable) VirtualHubRouteTable { return *v }).(VirtualHubRouteTableOutput)
}

// list of all routes.
func (o VirtualHubRouteTablePtrOutput) Routes() VirtualHubRouteArrayOutput {
	return o.ApplyT(func(v *VirtualHubRouteTable) []VirtualHubRoute {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(VirtualHubRouteArrayOutput)
}

// VirtualHub route table
type VirtualHubRouteTableResponse struct {
	// list of all routes.
	Routes []VirtualHubRouteResponse `pulumi:"routes"`
}

// VirtualHubRouteTableResponseInput is an input type that accepts VirtualHubRouteTableResponseArgs and VirtualHubRouteTableResponseOutput values.
// You can construct a concrete instance of `VirtualHubRouteTableResponseInput` via:
//
//          VirtualHubRouteTableResponseArgs{...}
type VirtualHubRouteTableResponseInput interface {
	pulumi.Input

	ToVirtualHubRouteTableResponseOutput() VirtualHubRouteTableResponseOutput
	ToVirtualHubRouteTableResponseOutputWithContext(context.Context) VirtualHubRouteTableResponseOutput
}

// VirtualHub route table
type VirtualHubRouteTableResponseArgs struct {
	// list of all routes.
	Routes VirtualHubRouteResponseArrayInput `pulumi:"routes"`
}

func (VirtualHubRouteTableResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTableResponse)(nil)).Elem()
}

func (i VirtualHubRouteTableResponseArgs) ToVirtualHubRouteTableResponseOutput() VirtualHubRouteTableResponseOutput {
	return i.ToVirtualHubRouteTableResponseOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableResponseArgs) ToVirtualHubRouteTableResponseOutputWithContext(ctx context.Context) VirtualHubRouteTableResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableResponseOutput)
}

func (i VirtualHubRouteTableResponseArgs) ToVirtualHubRouteTableResponsePtrOutput() VirtualHubRouteTableResponsePtrOutput {
	return i.ToVirtualHubRouteTableResponsePtrOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableResponseArgs) ToVirtualHubRouteTableResponsePtrOutputWithContext(ctx context.Context) VirtualHubRouteTableResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableResponseOutput).ToVirtualHubRouteTableResponsePtrOutputWithContext(ctx)
}

// VirtualHubRouteTableResponsePtrInput is an input type that accepts VirtualHubRouteTableResponseArgs, VirtualHubRouteTableResponsePtr and VirtualHubRouteTableResponsePtrOutput values.
// You can construct a concrete instance of `VirtualHubRouteTableResponsePtrInput` via:
//
//          VirtualHubRouteTableResponseArgs{...}
//
//  or:
//
//          nil
type VirtualHubRouteTableResponsePtrInput interface {
	pulumi.Input

	ToVirtualHubRouteTableResponsePtrOutput() VirtualHubRouteTableResponsePtrOutput
	ToVirtualHubRouteTableResponsePtrOutputWithContext(context.Context) VirtualHubRouteTableResponsePtrOutput
}

type virtualHubRouteTableResponsePtrType VirtualHubRouteTableResponseArgs

func VirtualHubRouteTableResponsePtr(v *VirtualHubRouteTableResponseArgs) VirtualHubRouteTableResponsePtrInput {
	return (*virtualHubRouteTableResponsePtrType)(v)
}

func (*virtualHubRouteTableResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubRouteTableResponse)(nil)).Elem()
}

func (i *virtualHubRouteTableResponsePtrType) ToVirtualHubRouteTableResponsePtrOutput() VirtualHubRouteTableResponsePtrOutput {
	return i.ToVirtualHubRouteTableResponsePtrOutputWithContext(context.Background())
}

func (i *virtualHubRouteTableResponsePtrType) ToVirtualHubRouteTableResponsePtrOutputWithContext(ctx context.Context) VirtualHubRouteTableResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableResponsePtrOutput)
}

// VirtualHub route table
type VirtualHubRouteTableResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTableResponse)(nil)).Elem()
}

func (o VirtualHubRouteTableResponseOutput) ToVirtualHubRouteTableResponseOutput() VirtualHubRouteTableResponseOutput {
	return o
}

func (o VirtualHubRouteTableResponseOutput) ToVirtualHubRouteTableResponseOutputWithContext(ctx context.Context) VirtualHubRouteTableResponseOutput {
	return o
}

func (o VirtualHubRouteTableResponseOutput) ToVirtualHubRouteTableResponsePtrOutput() VirtualHubRouteTableResponsePtrOutput {
	return o.ToVirtualHubRouteTableResponsePtrOutputWithContext(context.Background())
}

func (o VirtualHubRouteTableResponseOutput) ToVirtualHubRouteTableResponsePtrOutputWithContext(ctx context.Context) VirtualHubRouteTableResponsePtrOutput {
	return o.ApplyT(func(v VirtualHubRouteTableResponse) *VirtualHubRouteTableResponse {
		return &v
	}).(VirtualHubRouteTableResponsePtrOutput)
}

// list of all routes.
func (o VirtualHubRouteTableResponseOutput) Routes() VirtualHubRouteResponseArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTableResponse) []VirtualHubRouteResponse { return v.Routes }).(VirtualHubRouteResponseArrayOutput)
}

type VirtualHubRouteTableResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubRouteTableResponse)(nil)).Elem()
}

func (o VirtualHubRouteTableResponsePtrOutput) ToVirtualHubRouteTableResponsePtrOutput() VirtualHubRouteTableResponsePtrOutput {
	return o
}

func (o VirtualHubRouteTableResponsePtrOutput) ToVirtualHubRouteTableResponsePtrOutputWithContext(ctx context.Context) VirtualHubRouteTableResponsePtrOutput {
	return o
}

func (o VirtualHubRouteTableResponsePtrOutput) Elem() VirtualHubRouteTableResponseOutput {
	return o.ApplyT(func(v *VirtualHubRouteTableResponse) VirtualHubRouteTableResponse { return *v }).(VirtualHubRouteTableResponseOutput)
}

// list of all routes.
func (o VirtualHubRouteTableResponsePtrOutput) Routes() VirtualHubRouteResponseArrayOutput {
	return o.ApplyT(func(v *VirtualHubRouteTableResponse) []VirtualHubRouteResponse {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(VirtualHubRouteResponseArrayOutput)
}

// Virtual Network resource.
type VirtualNetworkType struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the virtual network.
	Properties VirtualNetworkPropertiesFormatResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VirtualNetworkTypeInput is an input type that accepts VirtualNetworkTypeArgs and VirtualNetworkTypeOutput values.
// You can construct a concrete instance of `VirtualNetworkTypeInput` via:
//
//          VirtualNetworkTypeArgs{...}
type VirtualNetworkTypeInput interface {
	pulumi.Input

	ToVirtualNetworkTypeOutput() VirtualNetworkTypeOutput
	ToVirtualNetworkTypeOutputWithContext(context.Context) VirtualNetworkTypeOutput
}

// Virtual Network resource.
type VirtualNetworkTypeArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the virtual network.
	Properties VirtualNetworkPropertiesFormatResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VirtualNetworkTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkType)(nil)).Elem()
}

func (i VirtualNetworkTypeArgs) ToVirtualNetworkTypeOutput() VirtualNetworkTypeOutput {
	return i.ToVirtualNetworkTypeOutputWithContext(context.Background())
}

func (i VirtualNetworkTypeArgs) ToVirtualNetworkTypeOutputWithContext(ctx context.Context) VirtualNetworkTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTypeOutput)
}

// Virtual Network resource.
type VirtualNetworkTypeOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkType)(nil)).Elem()
}

func (o VirtualNetworkTypeOutput) ToVirtualNetworkTypeOutput() VirtualNetworkTypeOutput {
	return o
}

func (o VirtualNetworkTypeOutput) ToVirtualNetworkTypeOutputWithContext(ctx context.Context) VirtualNetworkTypeOutput {
	return o
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the virtual network.
func (o VirtualNetworkTypeOutput) Properties() VirtualNetworkPropertiesFormatResponseOutput {
	return o.ApplyT(func(v VirtualNetworkType) VirtualNetworkPropertiesFormatResponse { return v.Properties }).(VirtualNetworkPropertiesFormatResponseOutput)
}

// Resource tags.
func (o VirtualNetworkTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkType) string { return v.Type }).(pulumi.StringOutput)
}

// A common class for general resource information
type VirtualNetworkGatewayType struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the virtual network gateway.
	Properties VirtualNetworkGatewayPropertiesFormatResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VirtualNetworkGatewayTypeInput is an input type that accepts VirtualNetworkGatewayTypeArgs and VirtualNetworkGatewayTypeOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayTypeInput` via:
//
//          VirtualNetworkGatewayTypeArgs{...}
type VirtualNetworkGatewayTypeInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayTypeOutput() VirtualNetworkGatewayTypeOutput
	ToVirtualNetworkGatewayTypeOutputWithContext(context.Context) VirtualNetworkGatewayTypeOutput
}

// A common class for general resource information
type VirtualNetworkGatewayTypeArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the virtual network gateway.
	Properties VirtualNetworkGatewayPropertiesFormatResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VirtualNetworkGatewayTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayType)(nil)).Elem()
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypeOutput() VirtualNetworkGatewayTypeOutput {
	return i.ToVirtualNetworkGatewayTypeOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypeOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayTypeOutput)
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return i.ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayTypeOutput).ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayTypePtrInput is an input type that accepts VirtualNetworkGatewayTypeArgs, VirtualNetworkGatewayTypePtr and VirtualNetworkGatewayTypePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayTypePtrInput` via:
//
//          VirtualNetworkGatewayTypeArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewayTypePtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput
	ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Context) VirtualNetworkGatewayTypePtrOutput
}

type virtualNetworkGatewayTypePtrType VirtualNetworkGatewayTypeArgs

func VirtualNetworkGatewayTypePtr(v *VirtualNetworkGatewayTypeArgs) VirtualNetworkGatewayTypePtrInput {
	return (*virtualNetworkGatewayTypePtrType)(v)
}

func (*virtualNetworkGatewayTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayType)(nil)).Elem()
}

func (i *virtualNetworkGatewayTypePtrType) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return i.ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayTypePtrType) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayTypePtrOutput)
}

// A common class for general resource information
type VirtualNetworkGatewayTypeOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayType)(nil)).Elem()
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypeOutput() VirtualNetworkGatewayTypeOutput {
	return o
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypeOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypeOutput {
	return o
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return o.ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *VirtualNetworkGatewayType {
		return &v
	}).(VirtualNetworkGatewayTypePtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkGatewayTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkGatewayTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the virtual network gateway.
func (o VirtualNetworkGatewayTypeOutput) Properties() VirtualNetworkGatewayPropertiesFormatResponseOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) VirtualNetworkGatewayPropertiesFormatResponse { return v.Properties }).(VirtualNetworkGatewayPropertiesFormatResponseOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkGatewayTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) string { return v.Type }).(pulumi.StringOutput)
}

type VirtualNetworkGatewayTypePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayType)(nil)).Elem()
}

func (o VirtualNetworkGatewayTypePtrOutput) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return o
}

func (o VirtualNetworkGatewayTypePtrOutput) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return o
}

func (o VirtualNetworkGatewayTypePtrOutput) Elem() VirtualNetworkGatewayTypeOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) VirtualNetworkGatewayType { return *v }).(VirtualNetworkGatewayTypeOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkGatewayTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkGatewayTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Properties of the virtual network gateway.
func (o VirtualNetworkGatewayTypePtrOutput) Properties() VirtualNetworkGatewayPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *VirtualNetworkGatewayPropertiesFormatResponse {
		if v == nil {
			return nil
		}
		return &v.Properties
	}).(VirtualNetworkGatewayPropertiesFormatResponsePtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkGatewayTypePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// A common class for general resource information
type VirtualNetworkGatewayConnectionType struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the virtual network gateway connection.
	Properties VirtualNetworkGatewayConnectionPropertiesFormatResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VirtualNetworkGatewayConnectionTypeInput is an input type that accepts VirtualNetworkGatewayConnectionTypeArgs and VirtualNetworkGatewayConnectionTypeOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayConnectionTypeInput` via:
//
//          VirtualNetworkGatewayConnectionTypeArgs{...}
type VirtualNetworkGatewayConnectionTypeInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayConnectionTypeOutput() VirtualNetworkGatewayConnectionTypeOutput
	ToVirtualNetworkGatewayConnectionTypeOutputWithContext(context.Context) VirtualNetworkGatewayConnectionTypeOutput
}

// A common class for general resource information
type VirtualNetworkGatewayConnectionTypeArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the virtual network gateway connection.
	Properties VirtualNetworkGatewayConnectionPropertiesFormatResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VirtualNetworkGatewayConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayConnectionType)(nil)).Elem()
}

func (i VirtualNetworkGatewayConnectionTypeArgs) ToVirtualNetworkGatewayConnectionTypeOutput() VirtualNetworkGatewayConnectionTypeOutput {
	return i.ToVirtualNetworkGatewayConnectionTypeOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayConnectionTypeArgs) ToVirtualNetworkGatewayConnectionTypeOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayConnectionTypeOutput)
}

// A common class for general resource information
type VirtualNetworkGatewayConnectionTypeOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayConnectionType)(nil)).Elem()
}

func (o VirtualNetworkGatewayConnectionTypeOutput) ToVirtualNetworkGatewayConnectionTypeOutput() VirtualNetworkGatewayConnectionTypeOutput {
	return o
}

func (o VirtualNetworkGatewayConnectionTypeOutput) ToVirtualNetworkGatewayConnectionTypeOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionTypeOutput {
	return o
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayConnectionTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkGatewayConnectionTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkGatewayConnectionTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the virtual network gateway connection.
func (o VirtualNetworkGatewayConnectionTypeOutput) Properties() VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionType) VirtualNetworkGatewayConnectionPropertiesFormatResponse {
		return v.Properties
	}).(VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayConnectionTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkGatewayConnectionTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionType) string { return v.Type }).(pulumi.StringOutput)
}

// VirtualNetworkGatewayConnection properties
type VirtualNetworkGatewayConnectionPropertiesFormat struct {
	// The authorizationKey.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// Connection protocol used for this connection
	ConnectionProtocol *string `pulumi:"connectionProtocol"`
	// Gateway connection type. Possible values are: 'Ipsec','Vnet2Vnet','ExpressRoute', and 'VPNClient.
	ConnectionType string `pulumi:"connectionType"`
	// EnableBgp flag
	EnableBgp *bool `pulumi:"enableBgp"`
	// Bypass ExpressRoute Gateway for data forwarding
	ExpressRouteGatewayBypass *bool `pulumi:"expressRouteGatewayBypass"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies []IpsecPolicy `pulumi:"ipsecPolicies"`
	// The reference to local network gateway resource.
	LocalNetworkGateway2 *LocalNetworkGatewayType `pulumi:"localNetworkGateway2"`
	// The reference to peerings resource.
	Peer *SubResource `pulumi:"peer"`
	// The resource GUID property of the VirtualNetworkGatewayConnection resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// The routing weight.
	RoutingWeight *int `pulumi:"routingWeight"`
	// The IPSec shared key.
	SharedKey *string `pulumi:"sharedKey"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors *bool `pulumi:"usePolicyBasedTrafficSelectors"`
	// The reference to virtual network gateway resource.
	VirtualNetworkGateway1 VirtualNetworkGatewayType `pulumi:"virtualNetworkGateway1"`
	// The reference to virtual network gateway resource.
	VirtualNetworkGateway2 *VirtualNetworkGatewayType `pulumi:"virtualNetworkGateway2"`
}

// VirtualNetworkGatewayConnectionPropertiesFormatInput is an input type that accepts VirtualNetworkGatewayConnectionPropertiesFormatArgs and VirtualNetworkGatewayConnectionPropertiesFormatOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayConnectionPropertiesFormatInput` via:
//
//          VirtualNetworkGatewayConnectionPropertiesFormatArgs{...}
type VirtualNetworkGatewayConnectionPropertiesFormatInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayConnectionPropertiesFormatOutput() VirtualNetworkGatewayConnectionPropertiesFormatOutput
	ToVirtualNetworkGatewayConnectionPropertiesFormatOutputWithContext(context.Context) VirtualNetworkGatewayConnectionPropertiesFormatOutput
}

// VirtualNetworkGatewayConnection properties
type VirtualNetworkGatewayConnectionPropertiesFormatArgs struct {
	// The authorizationKey.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// Connection protocol used for this connection
	ConnectionProtocol pulumi.StringPtrInput `pulumi:"connectionProtocol"`
	// Gateway connection type. Possible values are: 'Ipsec','Vnet2Vnet','ExpressRoute', and 'VPNClient.
	ConnectionType pulumi.StringInput `pulumi:"connectionType"`
	// EnableBgp flag
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// Bypass ExpressRoute Gateway for data forwarding
	ExpressRouteGatewayBypass pulumi.BoolPtrInput `pulumi:"expressRouteGatewayBypass"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies IpsecPolicyArrayInput `pulumi:"ipsecPolicies"`
	// The reference to local network gateway resource.
	LocalNetworkGateway2 LocalNetworkGatewayTypePtrInput `pulumi:"localNetworkGateway2"`
	// The reference to peerings resource.
	Peer SubResourcePtrInput `pulumi:"peer"`
	// The resource GUID property of the VirtualNetworkGatewayConnection resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// The routing weight.
	RoutingWeight pulumi.IntPtrInput `pulumi:"routingWeight"`
	// The IPSec shared key.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors pulumi.BoolPtrInput `pulumi:"usePolicyBasedTrafficSelectors"`
	// The reference to virtual network gateway resource.
	VirtualNetworkGateway1 VirtualNetworkGatewayTypeInput `pulumi:"virtualNetworkGateway1"`
	// The reference to virtual network gateway resource.
	VirtualNetworkGateway2 VirtualNetworkGatewayTypePtrInput `pulumi:"virtualNetworkGateway2"`
}

func (VirtualNetworkGatewayConnectionPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayConnectionPropertiesFormat)(nil)).Elem()
}

func (i VirtualNetworkGatewayConnectionPropertiesFormatArgs) ToVirtualNetworkGatewayConnectionPropertiesFormatOutput() VirtualNetworkGatewayConnectionPropertiesFormatOutput {
	return i.ToVirtualNetworkGatewayConnectionPropertiesFormatOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayConnectionPropertiesFormatArgs) ToVirtualNetworkGatewayConnectionPropertiesFormatOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayConnectionPropertiesFormatOutput)
}

func (i VirtualNetworkGatewayConnectionPropertiesFormatArgs) ToVirtualNetworkGatewayConnectionPropertiesFormatPtrOutput() VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput {
	return i.ToVirtualNetworkGatewayConnectionPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayConnectionPropertiesFormatArgs) ToVirtualNetworkGatewayConnectionPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayConnectionPropertiesFormatOutput).ToVirtualNetworkGatewayConnectionPropertiesFormatPtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayConnectionPropertiesFormatPtrInput is an input type that accepts VirtualNetworkGatewayConnectionPropertiesFormatArgs, VirtualNetworkGatewayConnectionPropertiesFormatPtr and VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayConnectionPropertiesFormatPtrInput` via:
//
//          VirtualNetworkGatewayConnectionPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewayConnectionPropertiesFormatPtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayConnectionPropertiesFormatPtrOutput() VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput
	ToVirtualNetworkGatewayConnectionPropertiesFormatPtrOutputWithContext(context.Context) VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput
}

type virtualNetworkGatewayConnectionPropertiesFormatPtrType VirtualNetworkGatewayConnectionPropertiesFormatArgs

func VirtualNetworkGatewayConnectionPropertiesFormatPtr(v *VirtualNetworkGatewayConnectionPropertiesFormatArgs) VirtualNetworkGatewayConnectionPropertiesFormatPtrInput {
	return (*virtualNetworkGatewayConnectionPropertiesFormatPtrType)(v)
}

func (*virtualNetworkGatewayConnectionPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayConnectionPropertiesFormat)(nil)).Elem()
}

func (i *virtualNetworkGatewayConnectionPropertiesFormatPtrType) ToVirtualNetworkGatewayConnectionPropertiesFormatPtrOutput() VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput {
	return i.ToVirtualNetworkGatewayConnectionPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayConnectionPropertiesFormatPtrType) ToVirtualNetworkGatewayConnectionPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput)
}

// VirtualNetworkGatewayConnection properties
type VirtualNetworkGatewayConnectionPropertiesFormatOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayConnectionPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayConnectionPropertiesFormat)(nil)).Elem()
}

func (o VirtualNetworkGatewayConnectionPropertiesFormatOutput) ToVirtualNetworkGatewayConnectionPropertiesFormatOutput() VirtualNetworkGatewayConnectionPropertiesFormatOutput {
	return o
}

func (o VirtualNetworkGatewayConnectionPropertiesFormatOutput) ToVirtualNetworkGatewayConnectionPropertiesFormatOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionPropertiesFormatOutput {
	return o
}

func (o VirtualNetworkGatewayConnectionPropertiesFormatOutput) ToVirtualNetworkGatewayConnectionPropertiesFormatPtrOutput() VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput {
	return o.ToVirtualNetworkGatewayConnectionPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayConnectionPropertiesFormatOutput) ToVirtualNetworkGatewayConnectionPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormat) *VirtualNetworkGatewayConnectionPropertiesFormat {
		return &v
	}).(VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput)
}

// The authorizationKey.
func (o VirtualNetworkGatewayConnectionPropertiesFormatOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormat) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// Connection protocol used for this connection
func (o VirtualNetworkGatewayConnectionPropertiesFormatOutput) ConnectionProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormat) *string { return v.ConnectionProtocol }).(pulumi.StringPtrOutput)
}

// Gateway connection type. Possible values are: 'Ipsec','Vnet2Vnet','ExpressRoute', and 'VPNClient.
func (o VirtualNetworkGatewayConnectionPropertiesFormatOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormat) string { return v.ConnectionType }).(pulumi.StringOutput)
}

// EnableBgp flag
func (o VirtualNetworkGatewayConnectionPropertiesFormatOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormat) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// Bypass ExpressRoute Gateway for data forwarding
func (o VirtualNetworkGatewayConnectionPropertiesFormatOutput) ExpressRouteGatewayBypass() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormat) *bool { return v.ExpressRouteGatewayBypass }).(pulumi.BoolPtrOutput)
}

// The IPSec Policies to be considered by this connection.
func (o VirtualNetworkGatewayConnectionPropertiesFormatOutput) IpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormat) []IpsecPolicy { return v.IpsecPolicies }).(IpsecPolicyArrayOutput)
}

// The reference to local network gateway resource.
func (o VirtualNetworkGatewayConnectionPropertiesFormatOutput) LocalNetworkGateway2() LocalNetworkGatewayTypePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormat) *LocalNetworkGatewayType {
		return v.LocalNetworkGateway2
	}).(LocalNetworkGatewayTypePtrOutput)
}

// The reference to peerings resource.
func (o VirtualNetworkGatewayConnectionPropertiesFormatOutput) Peer() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormat) *SubResource { return v.Peer }).(SubResourcePtrOutput)
}

// The resource GUID property of the VirtualNetworkGatewayConnection resource.
func (o VirtualNetworkGatewayConnectionPropertiesFormatOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormat) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// The routing weight.
func (o VirtualNetworkGatewayConnectionPropertiesFormatOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormat) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

// The IPSec shared key.
func (o VirtualNetworkGatewayConnectionPropertiesFormatOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormat) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// Enable policy-based traffic selectors.
func (o VirtualNetworkGatewayConnectionPropertiesFormatOutput) UsePolicyBasedTrafficSelectors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormat) *bool { return v.UsePolicyBasedTrafficSelectors }).(pulumi.BoolPtrOutput)
}

// The reference to virtual network gateway resource.
func (o VirtualNetworkGatewayConnectionPropertiesFormatOutput) VirtualNetworkGateway1() VirtualNetworkGatewayTypeOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormat) VirtualNetworkGatewayType {
		return v.VirtualNetworkGateway1
	}).(VirtualNetworkGatewayTypeOutput)
}

// The reference to virtual network gateway resource.
func (o VirtualNetworkGatewayConnectionPropertiesFormatOutput) VirtualNetworkGateway2() VirtualNetworkGatewayTypePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormat) *VirtualNetworkGatewayType {
		return v.VirtualNetworkGateway2
	}).(VirtualNetworkGatewayTypePtrOutput)
}

type VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayConnectionPropertiesFormat)(nil)).Elem()
}

func (o VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput) ToVirtualNetworkGatewayConnectionPropertiesFormatPtrOutput() VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput {
	return o
}

func (o VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput) ToVirtualNetworkGatewayConnectionPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput {
	return o
}

func (o VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput) Elem() VirtualNetworkGatewayConnectionPropertiesFormatOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormat) VirtualNetworkGatewayConnectionPropertiesFormat {
		return *v
	}).(VirtualNetworkGatewayConnectionPropertiesFormatOutput)
}

// The authorizationKey.
func (o VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationKey
	}).(pulumi.StringPtrOutput)
}

// Connection protocol used for this connection
func (o VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput) ConnectionProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionProtocol
	}).(pulumi.StringPtrOutput)
}

// Gateway connection type. Possible values are: 'Ipsec','Vnet2Vnet','ExpressRoute', and 'VPNClient.
func (o VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput) ConnectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectionType
	}).(pulumi.StringPtrOutput)
}

// EnableBgp flag
func (o VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBgp
	}).(pulumi.BoolPtrOutput)
}

// Bypass ExpressRoute Gateway for data forwarding
func (o VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput) ExpressRouteGatewayBypass() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.ExpressRouteGatewayBypass
	}).(pulumi.BoolPtrOutput)
}

// The IPSec Policies to be considered by this connection.
func (o VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput) IpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormat) []IpsecPolicy {
		if v == nil {
			return nil
		}
		return v.IpsecPolicies
	}).(IpsecPolicyArrayOutput)
}

// The reference to local network gateway resource.
func (o VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput) LocalNetworkGateway2() LocalNetworkGatewayTypePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormat) *LocalNetworkGatewayType {
		if v == nil {
			return nil
		}
		return v.LocalNetworkGateway2
	}).(LocalNetworkGatewayTypePtrOutput)
}

// The reference to peerings resource.
func (o VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput) Peer() SubResourcePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.Peer
	}).(SubResourcePtrOutput)
}

// The resource GUID property of the VirtualNetworkGatewayConnection resource.
func (o VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// The routing weight.
func (o VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.RoutingWeight
	}).(pulumi.IntPtrOutput)
}

// The IPSec shared key.
func (o VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.SharedKey
	}).(pulumi.StringPtrOutput)
}

// Enable policy-based traffic selectors.
func (o VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput) UsePolicyBasedTrafficSelectors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.UsePolicyBasedTrafficSelectors
	}).(pulumi.BoolPtrOutput)
}

// The reference to virtual network gateway resource.
func (o VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput) VirtualNetworkGateway1() VirtualNetworkGatewayTypePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormat) *VirtualNetworkGatewayType {
		if v == nil {
			return nil
		}
		return &v.VirtualNetworkGateway1
	}).(VirtualNetworkGatewayTypePtrOutput)
}

// The reference to virtual network gateway resource.
func (o VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput) VirtualNetworkGateway2() VirtualNetworkGatewayTypePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormat) *VirtualNetworkGatewayType {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkGateway2
	}).(VirtualNetworkGatewayTypePtrOutput)
}

// VirtualNetworkGatewayConnection properties
type VirtualNetworkGatewayConnectionPropertiesFormatResponse struct {
	// The authorizationKey.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// Connection protocol used for this connection
	ConnectionProtocol *string `pulumi:"connectionProtocol"`
	// Virtual network Gateway connection status. Possible values are 'Unknown', 'Connecting', 'Connected' and 'NotConnected'.
	ConnectionStatus string `pulumi:"connectionStatus"`
	// Gateway connection type. Possible values are: 'Ipsec','Vnet2Vnet','ExpressRoute', and 'VPNClient.
	ConnectionType string `pulumi:"connectionType"`
	// The egress bytes transferred in this connection.
	EgressBytesTransferred int `pulumi:"egressBytesTransferred"`
	// EnableBgp flag
	EnableBgp *bool `pulumi:"enableBgp"`
	// Bypass ExpressRoute Gateway for data forwarding
	ExpressRouteGatewayBypass *bool `pulumi:"expressRouteGatewayBypass"`
	// The ingress bytes transferred in this connection.
	IngressBytesTransferred int `pulumi:"ingressBytesTransferred"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies []IpsecPolicyResponse `pulumi:"ipsecPolicies"`
	// The reference to local network gateway resource.
	LocalNetworkGateway2 *LocalNetworkGatewayResponse `pulumi:"localNetworkGateway2"`
	// The reference to peerings resource.
	Peer *SubResourceResponse `pulumi:"peer"`
	// The provisioning state of the VirtualNetworkGatewayConnection resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the VirtualNetworkGatewayConnection resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// The routing weight.
	RoutingWeight *int `pulumi:"routingWeight"`
	// The IPSec shared key.
	SharedKey *string `pulumi:"sharedKey"`
	// Collection of all tunnels' connection health status.
	TunnelConnectionStatus []TunnelConnectionHealthResponse `pulumi:"tunnelConnectionStatus"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors *bool `pulumi:"usePolicyBasedTrafficSelectors"`
	// The reference to virtual network gateway resource.
	VirtualNetworkGateway1 VirtualNetworkGatewayResponse `pulumi:"virtualNetworkGateway1"`
	// The reference to virtual network gateway resource.
	VirtualNetworkGateway2 *VirtualNetworkGatewayResponse `pulumi:"virtualNetworkGateway2"`
}

// VirtualNetworkGatewayConnectionPropertiesFormatResponseInput is an input type that accepts VirtualNetworkGatewayConnectionPropertiesFormatResponseArgs and VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayConnectionPropertiesFormatResponseInput` via:
//
//          VirtualNetworkGatewayConnectionPropertiesFormatResponseArgs{...}
type VirtualNetworkGatewayConnectionPropertiesFormatResponseInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayConnectionPropertiesFormatResponseOutput() VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput
	ToVirtualNetworkGatewayConnectionPropertiesFormatResponseOutputWithContext(context.Context) VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput
}

// VirtualNetworkGatewayConnection properties
type VirtualNetworkGatewayConnectionPropertiesFormatResponseArgs struct {
	// The authorizationKey.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// Connection protocol used for this connection
	ConnectionProtocol pulumi.StringPtrInput `pulumi:"connectionProtocol"`
	// Virtual network Gateway connection status. Possible values are 'Unknown', 'Connecting', 'Connected' and 'NotConnected'.
	ConnectionStatus pulumi.StringInput `pulumi:"connectionStatus"`
	// Gateway connection type. Possible values are: 'Ipsec','Vnet2Vnet','ExpressRoute', and 'VPNClient.
	ConnectionType pulumi.StringInput `pulumi:"connectionType"`
	// The egress bytes transferred in this connection.
	EgressBytesTransferred pulumi.IntInput `pulumi:"egressBytesTransferred"`
	// EnableBgp flag
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// Bypass ExpressRoute Gateway for data forwarding
	ExpressRouteGatewayBypass pulumi.BoolPtrInput `pulumi:"expressRouteGatewayBypass"`
	// The ingress bytes transferred in this connection.
	IngressBytesTransferred pulumi.IntInput `pulumi:"ingressBytesTransferred"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies IpsecPolicyResponseArrayInput `pulumi:"ipsecPolicies"`
	// The reference to local network gateway resource.
	LocalNetworkGateway2 LocalNetworkGatewayResponsePtrInput `pulumi:"localNetworkGateway2"`
	// The reference to peerings resource.
	Peer SubResourceResponsePtrInput `pulumi:"peer"`
	// The provisioning state of the VirtualNetworkGatewayConnection resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The resource GUID property of the VirtualNetworkGatewayConnection resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// The routing weight.
	RoutingWeight pulumi.IntPtrInput `pulumi:"routingWeight"`
	// The IPSec shared key.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// Collection of all tunnels' connection health status.
	TunnelConnectionStatus TunnelConnectionHealthResponseArrayInput `pulumi:"tunnelConnectionStatus"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors pulumi.BoolPtrInput `pulumi:"usePolicyBasedTrafficSelectors"`
	// The reference to virtual network gateway resource.
	VirtualNetworkGateway1 VirtualNetworkGatewayResponseInput `pulumi:"virtualNetworkGateway1"`
	// The reference to virtual network gateway resource.
	VirtualNetworkGateway2 VirtualNetworkGatewayResponsePtrInput `pulumi:"virtualNetworkGateway2"`
}

func (VirtualNetworkGatewayConnectionPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayConnectionPropertiesFormatResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewayConnectionPropertiesFormatResponseArgs) ToVirtualNetworkGatewayConnectionPropertiesFormatResponseOutput() VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput {
	return i.ToVirtualNetworkGatewayConnectionPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayConnectionPropertiesFormatResponseArgs) ToVirtualNetworkGatewayConnectionPropertiesFormatResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput)
}

func (i VirtualNetworkGatewayConnectionPropertiesFormatResponseArgs) ToVirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput() VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput {
	return i.ToVirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayConnectionPropertiesFormatResponseArgs) ToVirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput).ToVirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrInput is an input type that accepts VirtualNetworkGatewayConnectionPropertiesFormatResponseArgs, VirtualNetworkGatewayConnectionPropertiesFormatResponsePtr and VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrInput` via:
//
//          VirtualNetworkGatewayConnectionPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput() VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput
	ToVirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutputWithContext(context.Context) VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput
}

type virtualNetworkGatewayConnectionPropertiesFormatResponsePtrType VirtualNetworkGatewayConnectionPropertiesFormatResponseArgs

func VirtualNetworkGatewayConnectionPropertiesFormatResponsePtr(v *VirtualNetworkGatewayConnectionPropertiesFormatResponseArgs) VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrInput {
	return (*virtualNetworkGatewayConnectionPropertiesFormatResponsePtrType)(v)
}

func (*virtualNetworkGatewayConnectionPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayConnectionPropertiesFormatResponse)(nil)).Elem()
}

func (i *virtualNetworkGatewayConnectionPropertiesFormatResponsePtrType) ToVirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput() VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput {
	return i.ToVirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayConnectionPropertiesFormatResponsePtrType) ToVirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput)
}

// VirtualNetworkGatewayConnection properties
type VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayConnectionPropertiesFormatResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) ToVirtualNetworkGatewayConnectionPropertiesFormatResponseOutput() VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput {
	return o
}

func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) ToVirtualNetworkGatewayConnectionPropertiesFormatResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput {
	return o
}

func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) ToVirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput() VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput {
	return o.ToVirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) ToVirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormatResponse) *VirtualNetworkGatewayConnectionPropertiesFormatResponse {
		return &v
	}).(VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput)
}

// The authorizationKey.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormatResponse) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// Connection protocol used for this connection
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) ConnectionProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormatResponse) *string { return v.ConnectionProtocol }).(pulumi.StringPtrOutput)
}

// Virtual network Gateway connection status. Possible values are 'Unknown', 'Connecting', 'Connected' and 'NotConnected'.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) ConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormatResponse) string { return v.ConnectionStatus }).(pulumi.StringOutput)
}

// Gateway connection type. Possible values are: 'Ipsec','Vnet2Vnet','ExpressRoute', and 'VPNClient.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormatResponse) string { return v.ConnectionType }).(pulumi.StringOutput)
}

// The egress bytes transferred in this connection.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) EgressBytesTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormatResponse) int { return v.EgressBytesTransferred }).(pulumi.IntOutput)
}

// EnableBgp flag
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormatResponse) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// Bypass ExpressRoute Gateway for data forwarding
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) ExpressRouteGatewayBypass() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormatResponse) *bool {
		return v.ExpressRouteGatewayBypass
	}).(pulumi.BoolPtrOutput)
}

// The ingress bytes transferred in this connection.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) IngressBytesTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormatResponse) int { return v.IngressBytesTransferred }).(pulumi.IntOutput)
}

// The IPSec Policies to be considered by this connection.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) IpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormatResponse) []IpsecPolicyResponse {
		return v.IpsecPolicies
	}).(IpsecPolicyResponseArrayOutput)
}

// The reference to local network gateway resource.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) LocalNetworkGateway2() LocalNetworkGatewayResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormatResponse) *LocalNetworkGatewayResponse {
		return v.LocalNetworkGateway2
	}).(LocalNetworkGatewayResponsePtrOutput)
}

// The reference to peerings resource.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) Peer() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormatResponse) *SubResourceResponse { return v.Peer }).(SubResourceResponsePtrOutput)
}

// The provisioning state of the VirtualNetworkGatewayConnection resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the VirtualNetworkGatewayConnection resource.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormatResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// The routing weight.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormatResponse) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

// The IPSec shared key.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormatResponse) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// Collection of all tunnels' connection health status.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) TunnelConnectionStatus() TunnelConnectionHealthResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormatResponse) []TunnelConnectionHealthResponse {
		return v.TunnelConnectionStatus
	}).(TunnelConnectionHealthResponseArrayOutput)
}

// Enable policy-based traffic selectors.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) UsePolicyBasedTrafficSelectors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormatResponse) *bool {
		return v.UsePolicyBasedTrafficSelectors
	}).(pulumi.BoolPtrOutput)
}

// The reference to virtual network gateway resource.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) VirtualNetworkGateway1() VirtualNetworkGatewayResponseOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormatResponse) VirtualNetworkGatewayResponse {
		return v.VirtualNetworkGateway1
	}).(VirtualNetworkGatewayResponseOutput)
}

// The reference to virtual network gateway resource.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput) VirtualNetworkGateway2() VirtualNetworkGatewayResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionPropertiesFormatResponse) *VirtualNetworkGatewayResponse {
		return v.VirtualNetworkGateway2
	}).(VirtualNetworkGatewayResponsePtrOutput)
}

type VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayConnectionPropertiesFormatResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) ToVirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput() VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) ToVirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) Elem() VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormatResponse) VirtualNetworkGatewayConnectionPropertiesFormatResponse {
		return *v
	}).(VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput)
}

// The authorizationKey.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationKey
	}).(pulumi.StringPtrOutput)
}

// Connection protocol used for this connection
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) ConnectionProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionProtocol
	}).(pulumi.StringPtrOutput)
}

// Virtual network Gateway connection status. Possible values are 'Unknown', 'Connecting', 'Connected' and 'NotConnected'.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) ConnectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectionStatus
	}).(pulumi.StringPtrOutput)
}

// Gateway connection type. Possible values are: 'Ipsec','Vnet2Vnet','ExpressRoute', and 'VPNClient.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) ConnectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectionType
	}).(pulumi.StringPtrOutput)
}

// The egress bytes transferred in this connection.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) EgressBytesTransferred() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return &v.EgressBytesTransferred
	}).(pulumi.IntPtrOutput)
}

// EnableBgp flag
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBgp
	}).(pulumi.BoolPtrOutput)
}

// Bypass ExpressRoute Gateway for data forwarding
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) ExpressRouteGatewayBypass() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ExpressRouteGatewayBypass
	}).(pulumi.BoolPtrOutput)
}

// The ingress bytes transferred in this connection.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) IngressBytesTransferred() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return &v.IngressBytesTransferred
	}).(pulumi.IntPtrOutput)
}

// The IPSec Policies to be considered by this connection.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) IpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormatResponse) []IpsecPolicyResponse {
		if v == nil {
			return nil
		}
		return v.IpsecPolicies
	}).(IpsecPolicyResponseArrayOutput)
}

// The reference to local network gateway resource.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) LocalNetworkGateway2() LocalNetworkGatewayResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormatResponse) *LocalNetworkGatewayResponse {
		if v == nil {
			return nil
		}
		return v.LocalNetworkGateway2
	}).(LocalNetworkGatewayResponsePtrOutput)
}

// The reference to peerings resource.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) Peer() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.Peer
	}).(SubResourceResponsePtrOutput)
}

// The provisioning state of the VirtualNetworkGatewayConnection resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the VirtualNetworkGatewayConnection resource.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// The routing weight.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.RoutingWeight
	}).(pulumi.IntPtrOutput)
}

// The IPSec shared key.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.SharedKey
	}).(pulumi.StringPtrOutput)
}

// Collection of all tunnels' connection health status.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) TunnelConnectionStatus() TunnelConnectionHealthResponseArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormatResponse) []TunnelConnectionHealthResponse {
		if v == nil {
			return nil
		}
		return v.TunnelConnectionStatus
	}).(TunnelConnectionHealthResponseArrayOutput)
}

// Enable policy-based traffic selectors.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) UsePolicyBasedTrafficSelectors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.UsePolicyBasedTrafficSelectors
	}).(pulumi.BoolPtrOutput)
}

// The reference to virtual network gateway resource.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) VirtualNetworkGateway1() VirtualNetworkGatewayResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormatResponse) *VirtualNetworkGatewayResponse {
		if v == nil {
			return nil
		}
		return &v.VirtualNetworkGateway1
	}).(VirtualNetworkGatewayResponsePtrOutput)
}

// The reference to virtual network gateway resource.
func (o VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput) VirtualNetworkGateway2() VirtualNetworkGatewayResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionPropertiesFormatResponse) *VirtualNetworkGatewayResponse {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkGateway2
	}).(VirtualNetworkGatewayResponsePtrOutput)
}

// IP configuration for virtual network gateway
type VirtualNetworkGatewayIPConfiguration struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the virtual network gateway ip configuration.
	Properties *VirtualNetworkGatewayIPConfigurationPropertiesFormat `pulumi:"properties"`
}

// VirtualNetworkGatewayIPConfigurationInput is an input type that accepts VirtualNetworkGatewayIPConfigurationArgs and VirtualNetworkGatewayIPConfigurationOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationInput` via:
//
//          VirtualNetworkGatewayIPConfigurationArgs{...}
type VirtualNetworkGatewayIPConfigurationInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationOutput() VirtualNetworkGatewayIPConfigurationOutput
	ToVirtualNetworkGatewayIPConfigurationOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationOutput
}

// IP configuration for virtual network gateway
type VirtualNetworkGatewayIPConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the virtual network gateway ip configuration.
	Properties VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrInput `pulumi:"properties"`
}

func (VirtualNetworkGatewayIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationArgs) ToVirtualNetworkGatewayIPConfigurationOutput() VirtualNetworkGatewayIPConfigurationOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationArgs) ToVirtualNetworkGatewayIPConfigurationOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationOutput)
}

// VirtualNetworkGatewayIPConfigurationArrayInput is an input type that accepts VirtualNetworkGatewayIPConfigurationArray and VirtualNetworkGatewayIPConfigurationArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationArrayInput` via:
//
//          VirtualNetworkGatewayIPConfigurationArray{ VirtualNetworkGatewayIPConfigurationArgs{...} }
type VirtualNetworkGatewayIPConfigurationArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationArrayOutput() VirtualNetworkGatewayIPConfigurationArrayOutput
	ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationArrayOutput
}

type VirtualNetworkGatewayIPConfigurationArray []VirtualNetworkGatewayIPConfigurationInput

func (VirtualNetworkGatewayIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationArray) ToVirtualNetworkGatewayIPConfigurationArrayOutput() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationArray) ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationArrayOutput)
}

// IP configuration for virtual network gateway
type VirtualNetworkGatewayIPConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationOutput) ToVirtualNetworkGatewayIPConfigurationOutput() VirtualNetworkGatewayIPConfigurationOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationOutput) ToVirtualNetworkGatewayIPConfigurationOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayIPConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkGatewayIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the virtual network gateway ip configuration.
func (o VirtualNetworkGatewayIPConfigurationOutput) Properties() VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *VirtualNetworkGatewayIPConfigurationPropertiesFormat {
		return v.Properties
	}).(VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput)
}

type VirtualNetworkGatewayIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationArrayOutput) ToVirtualNetworkGatewayIPConfigurationArrayOutput() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationArrayOutput) ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayIPConfiguration {
		return vs[0].([]VirtualNetworkGatewayIPConfiguration)[vs[1].(int)]
	}).(VirtualNetworkGatewayIPConfigurationOutput)
}

// Properties of VirtualNetworkGatewayIPConfiguration
type VirtualNetworkGatewayIPConfigurationPropertiesFormat struct {
	// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The reference of the public IP resource.
	PublicIPAddress *SubResource `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet *SubResource `pulumi:"subnet"`
}

// VirtualNetworkGatewayIPConfigurationPropertiesFormatInput is an input type that accepts VirtualNetworkGatewayIPConfigurationPropertiesFormatArgs and VirtualNetworkGatewayIPConfigurationPropertiesFormatOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationPropertiesFormatInput` via:
//
//          VirtualNetworkGatewayIPConfigurationPropertiesFormatArgs{...}
type VirtualNetworkGatewayIPConfigurationPropertiesFormatInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationPropertiesFormatOutput() VirtualNetworkGatewayIPConfigurationPropertiesFormatOutput
	ToVirtualNetworkGatewayIPConfigurationPropertiesFormatOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationPropertiesFormatOutput
}

// Properties of VirtualNetworkGatewayIPConfiguration
type VirtualNetworkGatewayIPConfigurationPropertiesFormatArgs struct {
	// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The reference of the public IP resource.
	PublicIPAddress SubResourcePtrInput `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
}

func (VirtualNetworkGatewayIPConfigurationPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationPropertiesFormatArgs) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatOutput() VirtualNetworkGatewayIPConfigurationPropertiesFormatOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationPropertiesFormatOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationPropertiesFormatArgs) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationPropertiesFormatOutput)
}

func (i VirtualNetworkGatewayIPConfigurationPropertiesFormatArgs) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput() VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationPropertiesFormatArgs) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationPropertiesFormatOutput).ToVirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrInput is an input type that accepts VirtualNetworkGatewayIPConfigurationPropertiesFormatArgs, VirtualNetworkGatewayIPConfigurationPropertiesFormatPtr and VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrInput` via:
//
//          VirtualNetworkGatewayIPConfigurationPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput() VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput
	ToVirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput
}

type virtualNetworkGatewayIPConfigurationPropertiesFormatPtrType VirtualNetworkGatewayIPConfigurationPropertiesFormatArgs

func VirtualNetworkGatewayIPConfigurationPropertiesFormatPtr(v *VirtualNetworkGatewayIPConfigurationPropertiesFormatArgs) VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrInput {
	return (*virtualNetworkGatewayIPConfigurationPropertiesFormatPtrType)(v)
}

func (*virtualNetworkGatewayIPConfigurationPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (i *virtualNetworkGatewayIPConfigurationPropertiesFormatPtrType) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput() VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayIPConfigurationPropertiesFormatPtrType) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput)
}

// Properties of VirtualNetworkGatewayIPConfiguration
type VirtualNetworkGatewayIPConfigurationPropertiesFormatOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatOutput) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatOutput() VirtualNetworkGatewayIPConfigurationPropertiesFormatOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatOutput) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationPropertiesFormatOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatOutput) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput() VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput {
	return o.ToVirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatOutput) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationPropertiesFormat) *VirtualNetworkGatewayIPConfigurationPropertiesFormat {
		return &v
	}).(VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput)
}

// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationPropertiesFormat) *string {
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The reference of the public IP resource.
func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatOutput) PublicIPAddress() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationPropertiesFormat) *SubResource { return v.PublicIPAddress }).(SubResourcePtrOutput)
}

// The reference of the subnet resource.
func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationPropertiesFormat) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

type VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayIPConfigurationPropertiesFormat)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput() VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput) Elem() VirtualNetworkGatewayIPConfigurationPropertiesFormatOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayIPConfigurationPropertiesFormat) VirtualNetworkGatewayIPConfigurationPropertiesFormat {
		return *v
	}).(VirtualNetworkGatewayIPConfigurationPropertiesFormatOutput)
}

// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayIPConfigurationPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The reference of the public IP resource.
func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput) PublicIPAddress() SubResourcePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayIPConfigurationPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(SubResourcePtrOutput)
}

// The reference of the subnet resource.
func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayIPConfigurationPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubResourcePtrOutput)
}

// Properties of VirtualNetworkGatewayIPConfiguration
type VirtualNetworkGatewayIPConfigurationPropertiesFormatResponse struct {
	// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference of the public IP resource.
	PublicIPAddress *SubResourceResponse `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet *SubResourceResponse `pulumi:"subnet"`
}

// VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseInput is an input type that accepts VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseArgs and VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseInput` via:
//
//          VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseArgs{...}
type VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput() VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput
	ToVirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput
}

// Properties of VirtualNetworkGatewayIPConfiguration
type VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseArgs struct {
	// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The reference of the public IP resource.
	PublicIPAddress SubResourceResponsePtrInput `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet SubResourceResponsePtrInput `pulumi:"subnet"`
}

func (VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseArgs) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput() VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseArgs) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput)
}

func (i VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseArgs) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput() VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseArgs) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput).ToVirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrInput is an input type that accepts VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseArgs, VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtr and VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrInput` via:
//
//          VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput() VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput
	ToVirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput
}

type virtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrType VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseArgs

func VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtr(v *VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseArgs) VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrInput {
	return (*virtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrType)(v)
}

func (*virtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (i *virtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrType) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput() VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrType) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput)
}

// Properties of VirtualNetworkGatewayIPConfiguration
type VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput() VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput() VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ToVirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationPropertiesFormatResponse) *VirtualNetworkGatewayIPConfigurationPropertiesFormatResponse {
		return &v
	}).(VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput)
}

// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationPropertiesFormatResponse) *string {
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationPropertiesFormatResponse) string {
		return v.ProvisioningState
	}).(pulumi.StringOutput)
}

// The reference of the public IP resource.
func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput) PublicIPAddress() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationPropertiesFormatResponse) *SubResourceResponse {
		return v.PublicIPAddress
	}).(SubResourceResponsePtrOutput)
}

// The reference of the subnet resource.
func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationPropertiesFormatResponse) *SubResourceResponse {
		return v.Subnet
	}).(SubResourceResponsePtrOutput)
}

type VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayIPConfigurationPropertiesFormatResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput() VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput) ToVirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput) Elem() VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayIPConfigurationPropertiesFormatResponse) VirtualNetworkGatewayIPConfigurationPropertiesFormatResponse {
		return *v
	}).(VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput)
}

// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayIPConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayIPConfigurationPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference of the public IP resource.
func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput) PublicIPAddress() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayIPConfigurationPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(SubResourceResponsePtrOutput)
}

// The reference of the subnet resource.
func (o VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayIPConfigurationPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubResourceResponsePtrOutput)
}

// IP configuration for virtual network gateway
type VirtualNetworkGatewayIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the virtual network gateway ip configuration.
	Properties *VirtualNetworkGatewayIPConfigurationPropertiesFormatResponse `pulumi:"properties"`
}

// VirtualNetworkGatewayIPConfigurationResponseInput is an input type that accepts VirtualNetworkGatewayIPConfigurationResponseArgs and VirtualNetworkGatewayIPConfigurationResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationResponseInput` via:
//
//          VirtualNetworkGatewayIPConfigurationResponseArgs{...}
type VirtualNetworkGatewayIPConfigurationResponseInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationResponseOutput() VirtualNetworkGatewayIPConfigurationResponseOutput
	ToVirtualNetworkGatewayIPConfigurationResponseOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationResponseOutput
}

// IP configuration for virtual network gateway
type VirtualNetworkGatewayIPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the virtual network gateway ip configuration.
	Properties VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (VirtualNetworkGatewayIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfigurationResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationResponseArgs) ToVirtualNetworkGatewayIPConfigurationResponseOutput() VirtualNetworkGatewayIPConfigurationResponseOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationResponseArgs) ToVirtualNetworkGatewayIPConfigurationResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationResponseOutput)
}

// VirtualNetworkGatewayIPConfigurationResponseArrayInput is an input type that accepts VirtualNetworkGatewayIPConfigurationResponseArray and VirtualNetworkGatewayIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationResponseArrayInput` via:
//
//          VirtualNetworkGatewayIPConfigurationResponseArray{ VirtualNetworkGatewayIPConfigurationResponseArgs{...} }
type VirtualNetworkGatewayIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationResponseArrayOutput() VirtualNetworkGatewayIPConfigurationResponseArrayOutput
	ToVirtualNetworkGatewayIPConfigurationResponseArrayOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationResponseArrayOutput
}

type VirtualNetworkGatewayIPConfigurationResponseArray []VirtualNetworkGatewayIPConfigurationResponseInput

func (VirtualNetworkGatewayIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfigurationResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationResponseArray) ToVirtualNetworkGatewayIPConfigurationResponseArrayOutput() VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationResponseArray) ToVirtualNetworkGatewayIPConfigurationResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationResponseArrayOutput)
}

// IP configuration for virtual network gateway
type VirtualNetworkGatewayIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationResponseOutput) ToVirtualNetworkGatewayIPConfigurationResponseOutput() VirtualNetworkGatewayIPConfigurationResponseOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationResponseOutput) ToVirtualNetworkGatewayIPConfigurationResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the virtual network gateway ip configuration.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Properties() VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *VirtualNetworkGatewayIPConfigurationPropertiesFormatResponse {
		return v.Properties
	}).(VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput)
}

type VirtualNetworkGatewayIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationResponseArrayOutput) ToVirtualNetworkGatewayIPConfigurationResponseArrayOutput() VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationResponseArrayOutput) ToVirtualNetworkGatewayIPConfigurationResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayIPConfigurationResponse {
		return vs[0].([]VirtualNetworkGatewayIPConfigurationResponse)[vs[1].(int)]
	}).(VirtualNetworkGatewayIPConfigurationResponseOutput)
}

// VirtualNetworkGateway properties
type VirtualNetworkGatewayPropertiesFormat struct {
	// ActiveActive flag
	ActiveActive *bool `pulumi:"activeActive"`
	// Virtual network gateway's BGP speaker settings.
	BgpSettings *BgpSettings `pulumi:"bgpSettings"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp *bool `pulumi:"enableBgp"`
	// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite *SubResource `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
	GatewayType *string `pulumi:"gatewayType"`
	// IP configurations for virtual network gateway.
	IpConfigurations []VirtualNetworkGatewayIPConfiguration `pulumi:"ipConfigurations"`
	// The resource GUID property of the VirtualNetworkGateway resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku *VirtualNetworkGatewaySku `pulumi:"sku"`
	// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration *VpnClientConfiguration `pulumi:"vpnClientConfiguration"`
	// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
	VpnType *string `pulumi:"vpnType"`
}

// VirtualNetworkGatewayPropertiesFormatInput is an input type that accepts VirtualNetworkGatewayPropertiesFormatArgs and VirtualNetworkGatewayPropertiesFormatOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayPropertiesFormatInput` via:
//
//          VirtualNetworkGatewayPropertiesFormatArgs{...}
type VirtualNetworkGatewayPropertiesFormatInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayPropertiesFormatOutput() VirtualNetworkGatewayPropertiesFormatOutput
	ToVirtualNetworkGatewayPropertiesFormatOutputWithContext(context.Context) VirtualNetworkGatewayPropertiesFormatOutput
}

// VirtualNetworkGateway properties
type VirtualNetworkGatewayPropertiesFormatArgs struct {
	// ActiveActive flag
	ActiveActive pulumi.BoolPtrInput `pulumi:"activeActive"`
	// Virtual network gateway's BGP speaker settings.
	BgpSettings BgpSettingsPtrInput `pulumi:"bgpSettings"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite SubResourcePtrInput `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
	GatewayType pulumi.StringPtrInput `pulumi:"gatewayType"`
	// IP configurations for virtual network gateway.
	IpConfigurations VirtualNetworkGatewayIPConfigurationArrayInput `pulumi:"ipConfigurations"`
	// The resource GUID property of the VirtualNetworkGateway resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku VirtualNetworkGatewaySkuPtrInput `pulumi:"sku"`
	// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration VpnClientConfigurationPtrInput `pulumi:"vpnClientConfiguration"`
	// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
	VpnType pulumi.StringPtrInput `pulumi:"vpnType"`
}

func (VirtualNetworkGatewayPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayPropertiesFormat)(nil)).Elem()
}

func (i VirtualNetworkGatewayPropertiesFormatArgs) ToVirtualNetworkGatewayPropertiesFormatOutput() VirtualNetworkGatewayPropertiesFormatOutput {
	return i.ToVirtualNetworkGatewayPropertiesFormatOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayPropertiesFormatArgs) ToVirtualNetworkGatewayPropertiesFormatOutputWithContext(ctx context.Context) VirtualNetworkGatewayPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayPropertiesFormatOutput)
}

func (i VirtualNetworkGatewayPropertiesFormatArgs) ToVirtualNetworkGatewayPropertiesFormatPtrOutput() VirtualNetworkGatewayPropertiesFormatPtrOutput {
	return i.ToVirtualNetworkGatewayPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayPropertiesFormatArgs) ToVirtualNetworkGatewayPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayPropertiesFormatOutput).ToVirtualNetworkGatewayPropertiesFormatPtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayPropertiesFormatPtrInput is an input type that accepts VirtualNetworkGatewayPropertiesFormatArgs, VirtualNetworkGatewayPropertiesFormatPtr and VirtualNetworkGatewayPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayPropertiesFormatPtrInput` via:
//
//          VirtualNetworkGatewayPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewayPropertiesFormatPtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayPropertiesFormatPtrOutput() VirtualNetworkGatewayPropertiesFormatPtrOutput
	ToVirtualNetworkGatewayPropertiesFormatPtrOutputWithContext(context.Context) VirtualNetworkGatewayPropertiesFormatPtrOutput
}

type virtualNetworkGatewayPropertiesFormatPtrType VirtualNetworkGatewayPropertiesFormatArgs

func VirtualNetworkGatewayPropertiesFormatPtr(v *VirtualNetworkGatewayPropertiesFormatArgs) VirtualNetworkGatewayPropertiesFormatPtrInput {
	return (*virtualNetworkGatewayPropertiesFormatPtrType)(v)
}

func (*virtualNetworkGatewayPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayPropertiesFormat)(nil)).Elem()
}

func (i *virtualNetworkGatewayPropertiesFormatPtrType) ToVirtualNetworkGatewayPropertiesFormatPtrOutput() VirtualNetworkGatewayPropertiesFormatPtrOutput {
	return i.ToVirtualNetworkGatewayPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayPropertiesFormatPtrType) ToVirtualNetworkGatewayPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayPropertiesFormatPtrOutput)
}

// VirtualNetworkGateway properties
type VirtualNetworkGatewayPropertiesFormatOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayPropertiesFormat)(nil)).Elem()
}

func (o VirtualNetworkGatewayPropertiesFormatOutput) ToVirtualNetworkGatewayPropertiesFormatOutput() VirtualNetworkGatewayPropertiesFormatOutput {
	return o
}

func (o VirtualNetworkGatewayPropertiesFormatOutput) ToVirtualNetworkGatewayPropertiesFormatOutputWithContext(ctx context.Context) VirtualNetworkGatewayPropertiesFormatOutput {
	return o
}

func (o VirtualNetworkGatewayPropertiesFormatOutput) ToVirtualNetworkGatewayPropertiesFormatPtrOutput() VirtualNetworkGatewayPropertiesFormatPtrOutput {
	return o.ToVirtualNetworkGatewayPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayPropertiesFormatOutput) ToVirtualNetworkGatewayPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayPropertiesFormatPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormat) *VirtualNetworkGatewayPropertiesFormat {
		return &v
	}).(VirtualNetworkGatewayPropertiesFormatPtrOutput)
}

// ActiveActive flag
func (o VirtualNetworkGatewayPropertiesFormatOutput) ActiveActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormat) *bool { return v.ActiveActive }).(pulumi.BoolPtrOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayPropertiesFormatOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormat) *BgpSettings { return v.BgpSettings }).(BgpSettingsPtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayPropertiesFormatOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormat) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayPropertiesFormatOutput) GatewayDefaultSite() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormat) *SubResource { return v.GatewayDefaultSite }).(SubResourcePtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
func (o VirtualNetworkGatewayPropertiesFormatOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormat) *string { return v.GatewayType }).(pulumi.StringPtrOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayPropertiesFormatOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormat) []VirtualNetworkGatewayIPConfiguration {
		return v.IpConfigurations
	}).(VirtualNetworkGatewayIPConfigurationArrayOutput)
}

// The resource GUID property of the VirtualNetworkGateway resource.
func (o VirtualNetworkGatewayPropertiesFormatOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormat) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayPropertiesFormatOutput) Sku() VirtualNetworkGatewaySkuPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormat) *VirtualNetworkGatewaySku { return v.Sku }).(VirtualNetworkGatewaySkuPtrOutput)
}

// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayPropertiesFormatOutput) VpnClientConfiguration() VpnClientConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormat) *VpnClientConfiguration { return v.VpnClientConfiguration }).(VpnClientConfigurationPtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
func (o VirtualNetworkGatewayPropertiesFormatOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormat) *string { return v.VpnType }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayPropertiesFormat)(nil)).Elem()
}

func (o VirtualNetworkGatewayPropertiesFormatPtrOutput) ToVirtualNetworkGatewayPropertiesFormatPtrOutput() VirtualNetworkGatewayPropertiesFormatPtrOutput {
	return o
}

func (o VirtualNetworkGatewayPropertiesFormatPtrOutput) ToVirtualNetworkGatewayPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayPropertiesFormatPtrOutput {
	return o
}

func (o VirtualNetworkGatewayPropertiesFormatPtrOutput) Elem() VirtualNetworkGatewayPropertiesFormatOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormat) VirtualNetworkGatewayPropertiesFormat { return *v }).(VirtualNetworkGatewayPropertiesFormatOutput)
}

// ActiveActive flag
func (o VirtualNetworkGatewayPropertiesFormatPtrOutput) ActiveActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.ActiveActive
	}).(pulumi.BoolPtrOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayPropertiesFormatPtrOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormat) *BgpSettings {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsPtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayPropertiesFormatPtrOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBgp
	}).(pulumi.BoolPtrOutput)
}

// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayPropertiesFormatPtrOutput) GatewayDefaultSite() SubResourcePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.GatewayDefaultSite
	}).(SubResourcePtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
func (o VirtualNetworkGatewayPropertiesFormatPtrOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.GatewayType
	}).(pulumi.StringPtrOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayPropertiesFormatPtrOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormat) []VirtualNetworkGatewayIPConfiguration {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(VirtualNetworkGatewayIPConfigurationArrayOutput)
}

// The resource GUID property of the VirtualNetworkGateway resource.
func (o VirtualNetworkGatewayPropertiesFormatPtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayPropertiesFormatPtrOutput) Sku() VirtualNetworkGatewaySkuPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormat) *VirtualNetworkGatewaySku {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(VirtualNetworkGatewaySkuPtrOutput)
}

// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayPropertiesFormatPtrOutput) VpnClientConfiguration() VpnClientConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormat) *VpnClientConfiguration {
		if v == nil {
			return nil
		}
		return v.VpnClientConfiguration
	}).(VpnClientConfigurationPtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
func (o VirtualNetworkGatewayPropertiesFormatPtrOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.VpnType
	}).(pulumi.StringPtrOutput)
}

// VirtualNetworkGateway properties
type VirtualNetworkGatewayPropertiesFormatResponse struct {
	// ActiveActive flag
	ActiveActive *bool `pulumi:"activeActive"`
	// Virtual network gateway's BGP speaker settings.
	BgpSettings *BgpSettingsResponse `pulumi:"bgpSettings"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp *bool `pulumi:"enableBgp"`
	// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite *SubResourceResponse `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
	GatewayType *string `pulumi:"gatewayType"`
	// IP configurations for virtual network gateway.
	IpConfigurations []VirtualNetworkGatewayIPConfigurationResponse `pulumi:"ipConfigurations"`
	// The provisioning state of the VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the VirtualNetworkGateway resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku *VirtualNetworkGatewaySkuResponse `pulumi:"sku"`
	// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration *VpnClientConfigurationResponse `pulumi:"vpnClientConfiguration"`
	// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
	VpnType *string `pulumi:"vpnType"`
}

// VirtualNetworkGatewayPropertiesFormatResponseInput is an input type that accepts VirtualNetworkGatewayPropertiesFormatResponseArgs and VirtualNetworkGatewayPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayPropertiesFormatResponseInput` via:
//
//          VirtualNetworkGatewayPropertiesFormatResponseArgs{...}
type VirtualNetworkGatewayPropertiesFormatResponseInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayPropertiesFormatResponseOutput() VirtualNetworkGatewayPropertiesFormatResponseOutput
	ToVirtualNetworkGatewayPropertiesFormatResponseOutputWithContext(context.Context) VirtualNetworkGatewayPropertiesFormatResponseOutput
}

// VirtualNetworkGateway properties
type VirtualNetworkGatewayPropertiesFormatResponseArgs struct {
	// ActiveActive flag
	ActiveActive pulumi.BoolPtrInput `pulumi:"activeActive"`
	// Virtual network gateway's BGP speaker settings.
	BgpSettings BgpSettingsResponsePtrInput `pulumi:"bgpSettings"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite SubResourceResponsePtrInput `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
	GatewayType pulumi.StringPtrInput `pulumi:"gatewayType"`
	// IP configurations for virtual network gateway.
	IpConfigurations VirtualNetworkGatewayIPConfigurationResponseArrayInput `pulumi:"ipConfigurations"`
	// The provisioning state of the VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The resource GUID property of the VirtualNetworkGateway resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku VirtualNetworkGatewaySkuResponsePtrInput `pulumi:"sku"`
	// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration VpnClientConfigurationResponsePtrInput `pulumi:"vpnClientConfiguration"`
	// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
	VpnType pulumi.StringPtrInput `pulumi:"vpnType"`
}

func (VirtualNetworkGatewayPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayPropertiesFormatResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewayPropertiesFormatResponseArgs) ToVirtualNetworkGatewayPropertiesFormatResponseOutput() VirtualNetworkGatewayPropertiesFormatResponseOutput {
	return i.ToVirtualNetworkGatewayPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayPropertiesFormatResponseArgs) ToVirtualNetworkGatewayPropertiesFormatResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayPropertiesFormatResponseOutput)
}

func (i VirtualNetworkGatewayPropertiesFormatResponseArgs) ToVirtualNetworkGatewayPropertiesFormatResponsePtrOutput() VirtualNetworkGatewayPropertiesFormatResponsePtrOutput {
	return i.ToVirtualNetworkGatewayPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayPropertiesFormatResponseArgs) ToVirtualNetworkGatewayPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayPropertiesFormatResponseOutput).ToVirtualNetworkGatewayPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayPropertiesFormatResponsePtrInput is an input type that accepts VirtualNetworkGatewayPropertiesFormatResponseArgs, VirtualNetworkGatewayPropertiesFormatResponsePtr and VirtualNetworkGatewayPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayPropertiesFormatResponsePtrInput` via:
//
//          VirtualNetworkGatewayPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewayPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayPropertiesFormatResponsePtrOutput() VirtualNetworkGatewayPropertiesFormatResponsePtrOutput
	ToVirtualNetworkGatewayPropertiesFormatResponsePtrOutputWithContext(context.Context) VirtualNetworkGatewayPropertiesFormatResponsePtrOutput
}

type virtualNetworkGatewayPropertiesFormatResponsePtrType VirtualNetworkGatewayPropertiesFormatResponseArgs

func VirtualNetworkGatewayPropertiesFormatResponsePtr(v *VirtualNetworkGatewayPropertiesFormatResponseArgs) VirtualNetworkGatewayPropertiesFormatResponsePtrInput {
	return (*virtualNetworkGatewayPropertiesFormatResponsePtrType)(v)
}

func (*virtualNetworkGatewayPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayPropertiesFormatResponse)(nil)).Elem()
}

func (i *virtualNetworkGatewayPropertiesFormatResponsePtrType) ToVirtualNetworkGatewayPropertiesFormatResponsePtrOutput() VirtualNetworkGatewayPropertiesFormatResponsePtrOutput {
	return i.ToVirtualNetworkGatewayPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayPropertiesFormatResponsePtrType) ToVirtualNetworkGatewayPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayPropertiesFormatResponsePtrOutput)
}

// VirtualNetworkGateway properties
type VirtualNetworkGatewayPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayPropertiesFormatResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayPropertiesFormatResponseOutput) ToVirtualNetworkGatewayPropertiesFormatResponseOutput() VirtualNetworkGatewayPropertiesFormatResponseOutput {
	return o
}

func (o VirtualNetworkGatewayPropertiesFormatResponseOutput) ToVirtualNetworkGatewayPropertiesFormatResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayPropertiesFormatResponseOutput {
	return o
}

func (o VirtualNetworkGatewayPropertiesFormatResponseOutput) ToVirtualNetworkGatewayPropertiesFormatResponsePtrOutput() VirtualNetworkGatewayPropertiesFormatResponsePtrOutput {
	return o.ToVirtualNetworkGatewayPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayPropertiesFormatResponseOutput) ToVirtualNetworkGatewayPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormatResponse) *VirtualNetworkGatewayPropertiesFormatResponse {
		return &v
	}).(VirtualNetworkGatewayPropertiesFormatResponsePtrOutput)
}

// ActiveActive flag
func (o VirtualNetworkGatewayPropertiesFormatResponseOutput) ActiveActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormatResponse) *bool { return v.ActiveActive }).(pulumi.BoolPtrOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayPropertiesFormatResponseOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormatResponse) *BgpSettingsResponse { return v.BgpSettings }).(BgpSettingsResponsePtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayPropertiesFormatResponseOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormatResponse) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayPropertiesFormatResponseOutput) GatewayDefaultSite() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormatResponse) *SubResourceResponse {
		return v.GatewayDefaultSite
	}).(SubResourceResponsePtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
func (o VirtualNetworkGatewayPropertiesFormatResponseOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormatResponse) *string { return v.GatewayType }).(pulumi.StringPtrOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayPropertiesFormatResponseOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormatResponse) []VirtualNetworkGatewayIPConfigurationResponse {
		return v.IpConfigurations
	}).(VirtualNetworkGatewayIPConfigurationResponseArrayOutput)
}

// The provisioning state of the VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkGatewayPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the VirtualNetworkGateway resource.
func (o VirtualNetworkGatewayPropertiesFormatResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormatResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayPropertiesFormatResponseOutput) Sku() VirtualNetworkGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormatResponse) *VirtualNetworkGatewaySkuResponse { return v.Sku }).(VirtualNetworkGatewaySkuResponsePtrOutput)
}

// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayPropertiesFormatResponseOutput) VpnClientConfiguration() VpnClientConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormatResponse) *VpnClientConfigurationResponse {
		return v.VpnClientConfiguration
	}).(VpnClientConfigurationResponsePtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
func (o VirtualNetworkGatewayPropertiesFormatResponseOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPropertiesFormatResponse) *string { return v.VpnType }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayPropertiesFormatResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayPropertiesFormatResponsePtrOutput) ToVirtualNetworkGatewayPropertiesFormatResponsePtrOutput() VirtualNetworkGatewayPropertiesFormatResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewayPropertiesFormatResponsePtrOutput) ToVirtualNetworkGatewayPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayPropertiesFormatResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewayPropertiesFormatResponsePtrOutput) Elem() VirtualNetworkGatewayPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormatResponse) VirtualNetworkGatewayPropertiesFormatResponse {
		return *v
	}).(VirtualNetworkGatewayPropertiesFormatResponseOutput)
}

// ActiveActive flag
func (o VirtualNetworkGatewayPropertiesFormatResponsePtrOutput) ActiveActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ActiveActive
	}).(pulumi.BoolPtrOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayPropertiesFormatResponsePtrOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormatResponse) *BgpSettingsResponse {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsResponsePtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayPropertiesFormatResponsePtrOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBgp
	}).(pulumi.BoolPtrOutput)
}

// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayPropertiesFormatResponsePtrOutput) GatewayDefaultSite() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.GatewayDefaultSite
	}).(SubResourceResponsePtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
func (o VirtualNetworkGatewayPropertiesFormatResponsePtrOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.GatewayType
	}).(pulumi.StringPtrOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayPropertiesFormatResponsePtrOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormatResponse) []VirtualNetworkGatewayIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(VirtualNetworkGatewayIPConfigurationResponseArrayOutput)
}

// The provisioning state of the VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkGatewayPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the VirtualNetworkGateway resource.
func (o VirtualNetworkGatewayPropertiesFormatResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayPropertiesFormatResponsePtrOutput) Sku() VirtualNetworkGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormatResponse) *VirtualNetworkGatewaySkuResponse {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(VirtualNetworkGatewaySkuResponsePtrOutput)
}

// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayPropertiesFormatResponsePtrOutput) VpnClientConfiguration() VpnClientConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormatResponse) *VpnClientConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientConfiguration
	}).(VpnClientConfigurationResponsePtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
func (o VirtualNetworkGatewayPropertiesFormatResponsePtrOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.VpnType
	}).(pulumi.StringPtrOutput)
}

// A common class for general resource information
type VirtualNetworkGatewayResponse struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the virtual network gateway.
	Properties VirtualNetworkGatewayPropertiesFormatResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VirtualNetworkGatewayResponseInput is an input type that accepts VirtualNetworkGatewayResponseArgs and VirtualNetworkGatewayResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayResponseInput` via:
//
//          VirtualNetworkGatewayResponseArgs{...}
type VirtualNetworkGatewayResponseInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayResponseOutput() VirtualNetworkGatewayResponseOutput
	ToVirtualNetworkGatewayResponseOutputWithContext(context.Context) VirtualNetworkGatewayResponseOutput
}

// A common class for general resource information
type VirtualNetworkGatewayResponseArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the virtual network gateway.
	Properties VirtualNetworkGatewayPropertiesFormatResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VirtualNetworkGatewayResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewayResponseArgs) ToVirtualNetworkGatewayResponseOutput() VirtualNetworkGatewayResponseOutput {
	return i.ToVirtualNetworkGatewayResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayResponseArgs) ToVirtualNetworkGatewayResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayResponseOutput)
}

func (i VirtualNetworkGatewayResponseArgs) ToVirtualNetworkGatewayResponsePtrOutput() VirtualNetworkGatewayResponsePtrOutput {
	return i.ToVirtualNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayResponseArgs) ToVirtualNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayResponseOutput).ToVirtualNetworkGatewayResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayResponsePtrInput is an input type that accepts VirtualNetworkGatewayResponseArgs, VirtualNetworkGatewayResponsePtr and VirtualNetworkGatewayResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayResponsePtrInput` via:
//
//          VirtualNetworkGatewayResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewayResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayResponsePtrOutput() VirtualNetworkGatewayResponsePtrOutput
	ToVirtualNetworkGatewayResponsePtrOutputWithContext(context.Context) VirtualNetworkGatewayResponsePtrOutput
}

type virtualNetworkGatewayResponsePtrType VirtualNetworkGatewayResponseArgs

func VirtualNetworkGatewayResponsePtr(v *VirtualNetworkGatewayResponseArgs) VirtualNetworkGatewayResponsePtrInput {
	return (*virtualNetworkGatewayResponsePtrType)(v)
}

func (*virtualNetworkGatewayResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayResponse)(nil)).Elem()
}

func (i *virtualNetworkGatewayResponsePtrType) ToVirtualNetworkGatewayResponsePtrOutput() VirtualNetworkGatewayResponsePtrOutput {
	return i.ToVirtualNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayResponsePtrType) ToVirtualNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayResponsePtrOutput)
}

// A common class for general resource information
type VirtualNetworkGatewayResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayResponseOutput) ToVirtualNetworkGatewayResponseOutput() VirtualNetworkGatewayResponseOutput {
	return o
}

func (o VirtualNetworkGatewayResponseOutput) ToVirtualNetworkGatewayResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponseOutput {
	return o
}

func (o VirtualNetworkGatewayResponseOutput) ToVirtualNetworkGatewayResponsePtrOutput() VirtualNetworkGatewayResponsePtrOutput {
	return o.ToVirtualNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayResponseOutput) ToVirtualNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *VirtualNetworkGatewayResponse {
		return &v
	}).(VirtualNetworkGatewayResponsePtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkGatewayResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkGatewayResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the virtual network gateway.
func (o VirtualNetworkGatewayResponseOutput) Properties() VirtualNetworkGatewayPropertiesFormatResponseOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) VirtualNetworkGatewayPropertiesFormatResponse {
		return v.Properties
	}).(VirtualNetworkGatewayPropertiesFormatResponseOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkGatewayResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VirtualNetworkGatewayResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayResponsePtrOutput) ToVirtualNetworkGatewayResponsePtrOutput() VirtualNetworkGatewayResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewayResponsePtrOutput) ToVirtualNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewayResponsePtrOutput) Elem() VirtualNetworkGatewayResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) VirtualNetworkGatewayResponse { return *v }).(VirtualNetworkGatewayResponseOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkGatewayResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkGatewayResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Properties of the virtual network gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) Properties() VirtualNetworkGatewayPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *VirtualNetworkGatewayPropertiesFormatResponse {
		if v == nil {
			return nil
		}
		return &v.Properties
	}).(VirtualNetworkGatewayPropertiesFormatResponsePtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkGatewayResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// VirtualNetworkGatewaySku details
type VirtualNetworkGatewaySku struct {
	// The capacity.
	Capacity *int `pulumi:"capacity"`
	// Gateway SKU name.
	Name *string `pulumi:"name"`
	// Gateway SKU tier.
	Tier *string `pulumi:"tier"`
}

// VirtualNetworkGatewaySkuInput is an input type that accepts VirtualNetworkGatewaySkuArgs and VirtualNetworkGatewaySkuOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewaySkuInput` via:
//
//          VirtualNetworkGatewaySkuArgs{...}
type VirtualNetworkGatewaySkuInput interface {
	pulumi.Input

	ToVirtualNetworkGatewaySkuOutput() VirtualNetworkGatewaySkuOutput
	ToVirtualNetworkGatewaySkuOutputWithContext(context.Context) VirtualNetworkGatewaySkuOutput
}

// VirtualNetworkGatewaySku details
type VirtualNetworkGatewaySkuArgs struct {
	// The capacity.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Gateway SKU name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gateway SKU tier.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (VirtualNetworkGatewaySkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySku)(nil)).Elem()
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuOutput() VirtualNetworkGatewaySkuOutput {
	return i.ToVirtualNetworkGatewaySkuOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuOutput)
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return i.ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuOutput).ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx)
}

// VirtualNetworkGatewaySkuPtrInput is an input type that accepts VirtualNetworkGatewaySkuArgs, VirtualNetworkGatewaySkuPtr and VirtualNetworkGatewaySkuPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewaySkuPtrInput` via:
//
//          VirtualNetworkGatewaySkuArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewaySkuPtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput
	ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Context) VirtualNetworkGatewaySkuPtrOutput
}

type virtualNetworkGatewaySkuPtrType VirtualNetworkGatewaySkuArgs

func VirtualNetworkGatewaySkuPtr(v *VirtualNetworkGatewaySkuArgs) VirtualNetworkGatewaySkuPtrInput {
	return (*virtualNetworkGatewaySkuPtrType)(v)
}

func (*virtualNetworkGatewaySkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySku)(nil)).Elem()
}

func (i *virtualNetworkGatewaySkuPtrType) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return i.ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewaySkuPtrType) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuPtrOutput)
}

// VirtualNetworkGatewaySku details
type VirtualNetworkGatewaySkuOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySku)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuOutput() VirtualNetworkGatewaySkuOutput {
	return o
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuOutput {
	return o
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return o.ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySku) *VirtualNetworkGatewaySku {
		return &v
	}).(VirtualNetworkGatewaySkuPtrOutput)
}

// The capacity.
func (o VirtualNetworkGatewaySkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Gateway SKU name.
func (o VirtualNetworkGatewaySkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gateway SKU tier.
func (o VirtualNetworkGatewaySkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewaySkuPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySku)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuPtrOutput) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuPtrOutput) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuPtrOutput) Elem() VirtualNetworkGatewaySkuOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySku) VirtualNetworkGatewaySku { return *v }).(VirtualNetworkGatewaySkuOutput)
}

// The capacity.
func (o VirtualNetworkGatewaySkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Gateway SKU name.
func (o VirtualNetworkGatewaySkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gateway SKU tier.
func (o VirtualNetworkGatewaySkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// VirtualNetworkGatewaySku details
type VirtualNetworkGatewaySkuResponse struct {
	// The capacity.
	Capacity *int `pulumi:"capacity"`
	// Gateway SKU name.
	Name *string `pulumi:"name"`
	// Gateway SKU tier.
	Tier *string `pulumi:"tier"`
}

// VirtualNetworkGatewaySkuResponseInput is an input type that accepts VirtualNetworkGatewaySkuResponseArgs and VirtualNetworkGatewaySkuResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewaySkuResponseInput` via:
//
//          VirtualNetworkGatewaySkuResponseArgs{...}
type VirtualNetworkGatewaySkuResponseInput interface {
	pulumi.Input

	ToVirtualNetworkGatewaySkuResponseOutput() VirtualNetworkGatewaySkuResponseOutput
	ToVirtualNetworkGatewaySkuResponseOutputWithContext(context.Context) VirtualNetworkGatewaySkuResponseOutput
}

// VirtualNetworkGatewaySku details
type VirtualNetworkGatewaySkuResponseArgs struct {
	// The capacity.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Gateway SKU name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gateway SKU tier.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (VirtualNetworkGatewaySkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySkuResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewaySkuResponseArgs) ToVirtualNetworkGatewaySkuResponseOutput() VirtualNetworkGatewaySkuResponseOutput {
	return i.ToVirtualNetworkGatewaySkuResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewaySkuResponseArgs) ToVirtualNetworkGatewaySkuResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuResponseOutput)
}

func (i VirtualNetworkGatewaySkuResponseArgs) ToVirtualNetworkGatewaySkuResponsePtrOutput() VirtualNetworkGatewaySkuResponsePtrOutput {
	return i.ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewaySkuResponseArgs) ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuResponseOutput).ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkGatewaySkuResponsePtrInput is an input type that accepts VirtualNetworkGatewaySkuResponseArgs, VirtualNetworkGatewaySkuResponsePtr and VirtualNetworkGatewaySkuResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewaySkuResponsePtrInput` via:
//
//          VirtualNetworkGatewaySkuResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewaySkuResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewaySkuResponsePtrOutput() VirtualNetworkGatewaySkuResponsePtrOutput
	ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(context.Context) VirtualNetworkGatewaySkuResponsePtrOutput
}

type virtualNetworkGatewaySkuResponsePtrType VirtualNetworkGatewaySkuResponseArgs

func VirtualNetworkGatewaySkuResponsePtr(v *VirtualNetworkGatewaySkuResponseArgs) VirtualNetworkGatewaySkuResponsePtrInput {
	return (*virtualNetworkGatewaySkuResponsePtrType)(v)
}

func (*virtualNetworkGatewaySkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySkuResponse)(nil)).Elem()
}

func (i *virtualNetworkGatewaySkuResponsePtrType) ToVirtualNetworkGatewaySkuResponsePtrOutput() VirtualNetworkGatewaySkuResponsePtrOutput {
	return i.ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewaySkuResponsePtrType) ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuResponsePtrOutput)
}

// VirtualNetworkGatewaySku details
type VirtualNetworkGatewaySkuResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySkuResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuResponseOutput) ToVirtualNetworkGatewaySkuResponseOutput() VirtualNetworkGatewaySkuResponseOutput {
	return o
}

func (o VirtualNetworkGatewaySkuResponseOutput) ToVirtualNetworkGatewaySkuResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponseOutput {
	return o
}

func (o VirtualNetworkGatewaySkuResponseOutput) ToVirtualNetworkGatewaySkuResponsePtrOutput() VirtualNetworkGatewaySkuResponsePtrOutput {
	return o.ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewaySkuResponseOutput) ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuResponse) *VirtualNetworkGatewaySkuResponse {
		return &v
	}).(VirtualNetworkGatewaySkuResponsePtrOutput)
}

// The capacity.
func (o VirtualNetworkGatewaySkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Gateway SKU name.
func (o VirtualNetworkGatewaySkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gateway SKU tier.
func (o VirtualNetworkGatewaySkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewaySkuResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySkuResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuResponsePtrOutput) ToVirtualNetworkGatewaySkuResponsePtrOutput() VirtualNetworkGatewaySkuResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuResponsePtrOutput) ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuResponsePtrOutput) Elem() VirtualNetworkGatewaySkuResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) VirtualNetworkGatewaySkuResponse { return *v }).(VirtualNetworkGatewaySkuResponseOutput)
}

// The capacity.
func (o VirtualNetworkGatewaySkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Gateway SKU name.
func (o VirtualNetworkGatewaySkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gateway SKU tier.
func (o VirtualNetworkGatewaySkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringType struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the virtual network peering.
	Properties VirtualNetworkPeeringPropertiesFormatResponse `pulumi:"properties"`
}

// VirtualNetworkPeeringTypeInput is an input type that accepts VirtualNetworkPeeringTypeArgs and VirtualNetworkPeeringTypeOutput values.
// You can construct a concrete instance of `VirtualNetworkPeeringTypeInput` via:
//
//          VirtualNetworkPeeringTypeArgs{...}
type VirtualNetworkPeeringTypeInput interface {
	pulumi.Input

	ToVirtualNetworkPeeringTypeOutput() VirtualNetworkPeeringTypeOutput
	ToVirtualNetworkPeeringTypeOutputWithContext(context.Context) VirtualNetworkPeeringTypeOutput
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringTypeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the virtual network peering.
	Properties VirtualNetworkPeeringPropertiesFormatResponseInput `pulumi:"properties"`
}

func (VirtualNetworkPeeringTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPeeringType)(nil)).Elem()
}

func (i VirtualNetworkPeeringTypeArgs) ToVirtualNetworkPeeringTypeOutput() VirtualNetworkPeeringTypeOutput {
	return i.ToVirtualNetworkPeeringTypeOutputWithContext(context.Background())
}

func (i VirtualNetworkPeeringTypeArgs) ToVirtualNetworkPeeringTypeOutputWithContext(ctx context.Context) VirtualNetworkPeeringTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPeeringTypeOutput)
}

// VirtualNetworkPeeringTypeArrayInput is an input type that accepts VirtualNetworkPeeringTypeArray and VirtualNetworkPeeringTypeArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkPeeringTypeArrayInput` via:
//
//          VirtualNetworkPeeringTypeArray{ VirtualNetworkPeeringTypeArgs{...} }
type VirtualNetworkPeeringTypeArrayInput interface {
	pulumi.Input

	ToVirtualNetworkPeeringTypeArrayOutput() VirtualNetworkPeeringTypeArrayOutput
	ToVirtualNetworkPeeringTypeArrayOutputWithContext(context.Context) VirtualNetworkPeeringTypeArrayOutput
}

type VirtualNetworkPeeringTypeArray []VirtualNetworkPeeringTypeInput

func (VirtualNetworkPeeringTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPeeringType)(nil)).Elem()
}

func (i VirtualNetworkPeeringTypeArray) ToVirtualNetworkPeeringTypeArrayOutput() VirtualNetworkPeeringTypeArrayOutput {
	return i.ToVirtualNetworkPeeringTypeArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkPeeringTypeArray) ToVirtualNetworkPeeringTypeArrayOutputWithContext(ctx context.Context) VirtualNetworkPeeringTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPeeringTypeArrayOutput)
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringTypeOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPeeringType)(nil)).Elem()
}

func (o VirtualNetworkPeeringTypeOutput) ToVirtualNetworkPeeringTypeOutput() VirtualNetworkPeeringTypeOutput {
	return o
}

func (o VirtualNetworkPeeringTypeOutput) ToVirtualNetworkPeeringTypeOutputWithContext(ctx context.Context) VirtualNetworkPeeringTypeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkPeeringTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkPeeringTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the virtual network peering.
func (o VirtualNetworkPeeringTypeOutput) Properties() VirtualNetworkPeeringPropertiesFormatResponseOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) VirtualNetworkPeeringPropertiesFormatResponse { return v.Properties }).(VirtualNetworkPeeringPropertiesFormatResponseOutput)
}

type VirtualNetworkPeeringTypeArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPeeringType)(nil)).Elem()
}

func (o VirtualNetworkPeeringTypeArrayOutput) ToVirtualNetworkPeeringTypeArrayOutput() VirtualNetworkPeeringTypeArrayOutput {
	return o
}

func (o VirtualNetworkPeeringTypeArrayOutput) ToVirtualNetworkPeeringTypeArrayOutputWithContext(ctx context.Context) VirtualNetworkPeeringTypeArrayOutput {
	return o
}

func (o VirtualNetworkPeeringTypeArrayOutput) Index(i pulumi.IntInput) VirtualNetworkPeeringTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkPeeringType {
		return vs[0].([]VirtualNetworkPeeringType)[vs[1].(int)]
	}).(VirtualNetworkPeeringTypeOutput)
}

// Properties of the virtual network peering.
type VirtualNetworkPeeringPropertiesFormat struct {
	// Whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed.
	AllowForwardedTraffic *bool `pulumi:"allowForwardedTraffic"`
	// If gateway links can be used in remote virtual networking to link to this virtual network.
	AllowGatewayTransit *bool `pulumi:"allowGatewayTransit"`
	// Whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space.
	AllowVirtualNetworkAccess *bool `pulumi:"allowVirtualNetworkAccess"`
	// The status of the virtual network peering. Possible values are 'Initiated', 'Connected', and 'Disconnected'.
	PeeringState *string `pulumi:"peeringState"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the remote virtual network address space.
	RemoteAddressSpace *AddressSpace `pulumi:"remoteAddressSpace"`
	// The reference of the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
	RemoteVirtualNetwork *SubResource `pulumi:"remoteVirtualNetwork"`
	// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
	UseRemoteGateways *bool `pulumi:"useRemoteGateways"`
}

// VirtualNetworkPeeringPropertiesFormatInput is an input type that accepts VirtualNetworkPeeringPropertiesFormatArgs and VirtualNetworkPeeringPropertiesFormatOutput values.
// You can construct a concrete instance of `VirtualNetworkPeeringPropertiesFormatInput` via:
//
//          VirtualNetworkPeeringPropertiesFormatArgs{...}
type VirtualNetworkPeeringPropertiesFormatInput interface {
	pulumi.Input

	ToVirtualNetworkPeeringPropertiesFormatOutput() VirtualNetworkPeeringPropertiesFormatOutput
	ToVirtualNetworkPeeringPropertiesFormatOutputWithContext(context.Context) VirtualNetworkPeeringPropertiesFormatOutput
}

// Properties of the virtual network peering.
type VirtualNetworkPeeringPropertiesFormatArgs struct {
	// Whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed.
	AllowForwardedTraffic pulumi.BoolPtrInput `pulumi:"allowForwardedTraffic"`
	// If gateway links can be used in remote virtual networking to link to this virtual network.
	AllowGatewayTransit pulumi.BoolPtrInput `pulumi:"allowGatewayTransit"`
	// Whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space.
	AllowVirtualNetworkAccess pulumi.BoolPtrInput `pulumi:"allowVirtualNetworkAccess"`
	// The status of the virtual network peering. Possible values are 'Initiated', 'Connected', and 'Disconnected'.
	PeeringState pulumi.StringPtrInput `pulumi:"peeringState"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the remote virtual network address space.
	RemoteAddressSpace AddressSpacePtrInput `pulumi:"remoteAddressSpace"`
	// The reference of the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
	RemoteVirtualNetwork SubResourcePtrInput `pulumi:"remoteVirtualNetwork"`
	// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
	UseRemoteGateways pulumi.BoolPtrInput `pulumi:"useRemoteGateways"`
}

func (VirtualNetworkPeeringPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPeeringPropertiesFormat)(nil)).Elem()
}

func (i VirtualNetworkPeeringPropertiesFormatArgs) ToVirtualNetworkPeeringPropertiesFormatOutput() VirtualNetworkPeeringPropertiesFormatOutput {
	return i.ToVirtualNetworkPeeringPropertiesFormatOutputWithContext(context.Background())
}

func (i VirtualNetworkPeeringPropertiesFormatArgs) ToVirtualNetworkPeeringPropertiesFormatOutputWithContext(ctx context.Context) VirtualNetworkPeeringPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPeeringPropertiesFormatOutput)
}

func (i VirtualNetworkPeeringPropertiesFormatArgs) ToVirtualNetworkPeeringPropertiesFormatPtrOutput() VirtualNetworkPeeringPropertiesFormatPtrOutput {
	return i.ToVirtualNetworkPeeringPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkPeeringPropertiesFormatArgs) ToVirtualNetworkPeeringPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkPeeringPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPeeringPropertiesFormatOutput).ToVirtualNetworkPeeringPropertiesFormatPtrOutputWithContext(ctx)
}

// VirtualNetworkPeeringPropertiesFormatPtrInput is an input type that accepts VirtualNetworkPeeringPropertiesFormatArgs, VirtualNetworkPeeringPropertiesFormatPtr and VirtualNetworkPeeringPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkPeeringPropertiesFormatPtrInput` via:
//
//          VirtualNetworkPeeringPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkPeeringPropertiesFormatPtrInput interface {
	pulumi.Input

	ToVirtualNetworkPeeringPropertiesFormatPtrOutput() VirtualNetworkPeeringPropertiesFormatPtrOutput
	ToVirtualNetworkPeeringPropertiesFormatPtrOutputWithContext(context.Context) VirtualNetworkPeeringPropertiesFormatPtrOutput
}

type virtualNetworkPeeringPropertiesFormatPtrType VirtualNetworkPeeringPropertiesFormatArgs

func VirtualNetworkPeeringPropertiesFormatPtr(v *VirtualNetworkPeeringPropertiesFormatArgs) VirtualNetworkPeeringPropertiesFormatPtrInput {
	return (*virtualNetworkPeeringPropertiesFormatPtrType)(v)
}

func (*virtualNetworkPeeringPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkPeeringPropertiesFormat)(nil)).Elem()
}

func (i *virtualNetworkPeeringPropertiesFormatPtrType) ToVirtualNetworkPeeringPropertiesFormatPtrOutput() VirtualNetworkPeeringPropertiesFormatPtrOutput {
	return i.ToVirtualNetworkPeeringPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkPeeringPropertiesFormatPtrType) ToVirtualNetworkPeeringPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkPeeringPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPeeringPropertiesFormatPtrOutput)
}

// Properties of the virtual network peering.
type VirtualNetworkPeeringPropertiesFormatOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPeeringPropertiesFormat)(nil)).Elem()
}

func (o VirtualNetworkPeeringPropertiesFormatOutput) ToVirtualNetworkPeeringPropertiesFormatOutput() VirtualNetworkPeeringPropertiesFormatOutput {
	return o
}

func (o VirtualNetworkPeeringPropertiesFormatOutput) ToVirtualNetworkPeeringPropertiesFormatOutputWithContext(ctx context.Context) VirtualNetworkPeeringPropertiesFormatOutput {
	return o
}

func (o VirtualNetworkPeeringPropertiesFormatOutput) ToVirtualNetworkPeeringPropertiesFormatPtrOutput() VirtualNetworkPeeringPropertiesFormatPtrOutput {
	return o.ToVirtualNetworkPeeringPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkPeeringPropertiesFormatOutput) ToVirtualNetworkPeeringPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkPeeringPropertiesFormatPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringPropertiesFormat) *VirtualNetworkPeeringPropertiesFormat {
		return &v
	}).(VirtualNetworkPeeringPropertiesFormatPtrOutput)
}

// Whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed.
func (o VirtualNetworkPeeringPropertiesFormatOutput) AllowForwardedTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringPropertiesFormat) *bool { return v.AllowForwardedTraffic }).(pulumi.BoolPtrOutput)
}

// If gateway links can be used in remote virtual networking to link to this virtual network.
func (o VirtualNetworkPeeringPropertiesFormatOutput) AllowGatewayTransit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringPropertiesFormat) *bool { return v.AllowGatewayTransit }).(pulumi.BoolPtrOutput)
}

// Whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space.
func (o VirtualNetworkPeeringPropertiesFormatOutput) AllowVirtualNetworkAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringPropertiesFormat) *bool { return v.AllowVirtualNetworkAccess }).(pulumi.BoolPtrOutput)
}

// The status of the virtual network peering. Possible values are 'Initiated', 'Connected', and 'Disconnected'.
func (o VirtualNetworkPeeringPropertiesFormatOutput) PeeringState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringPropertiesFormat) *string { return v.PeeringState }).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource.
func (o VirtualNetworkPeeringPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the remote virtual network address space.
func (o VirtualNetworkPeeringPropertiesFormatOutput) RemoteAddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringPropertiesFormat) *AddressSpace { return v.RemoteAddressSpace }).(AddressSpacePtrOutput)
}

// The reference of the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
func (o VirtualNetworkPeeringPropertiesFormatOutput) RemoteVirtualNetwork() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringPropertiesFormat) *SubResource { return v.RemoteVirtualNetwork }).(SubResourcePtrOutput)
}

// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
func (o VirtualNetworkPeeringPropertiesFormatOutput) UseRemoteGateways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringPropertiesFormat) *bool { return v.UseRemoteGateways }).(pulumi.BoolPtrOutput)
}

type VirtualNetworkPeeringPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkPeeringPropertiesFormat)(nil)).Elem()
}

func (o VirtualNetworkPeeringPropertiesFormatPtrOutput) ToVirtualNetworkPeeringPropertiesFormatPtrOutput() VirtualNetworkPeeringPropertiesFormatPtrOutput {
	return o
}

func (o VirtualNetworkPeeringPropertiesFormatPtrOutput) ToVirtualNetworkPeeringPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkPeeringPropertiesFormatPtrOutput {
	return o
}

func (o VirtualNetworkPeeringPropertiesFormatPtrOutput) Elem() VirtualNetworkPeeringPropertiesFormatOutput {
	return o.ApplyT(func(v *VirtualNetworkPeeringPropertiesFormat) VirtualNetworkPeeringPropertiesFormat { return *v }).(VirtualNetworkPeeringPropertiesFormatOutput)
}

// Whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed.
func (o VirtualNetworkPeeringPropertiesFormatPtrOutput) AllowForwardedTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPeeringPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.AllowForwardedTraffic
	}).(pulumi.BoolPtrOutput)
}

// If gateway links can be used in remote virtual networking to link to this virtual network.
func (o VirtualNetworkPeeringPropertiesFormatPtrOutput) AllowGatewayTransit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPeeringPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.AllowGatewayTransit
	}).(pulumi.BoolPtrOutput)
}

// Whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space.
func (o VirtualNetworkPeeringPropertiesFormatPtrOutput) AllowVirtualNetworkAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPeeringPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.AllowVirtualNetworkAccess
	}).(pulumi.BoolPtrOutput)
}

// The status of the virtual network peering. Possible values are 'Initiated', 'Connected', and 'Disconnected'.
func (o VirtualNetworkPeeringPropertiesFormatPtrOutput) PeeringState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPeeringPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.PeeringState
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource.
func (o VirtualNetworkPeeringPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPeeringPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference of the remote virtual network address space.
func (o VirtualNetworkPeeringPropertiesFormatPtrOutput) RemoteAddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPeeringPropertiesFormat) *AddressSpace {
		if v == nil {
			return nil
		}
		return v.RemoteAddressSpace
	}).(AddressSpacePtrOutput)
}

// The reference of the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
func (o VirtualNetworkPeeringPropertiesFormatPtrOutput) RemoteVirtualNetwork() SubResourcePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPeeringPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.RemoteVirtualNetwork
	}).(SubResourcePtrOutput)
}

// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
func (o VirtualNetworkPeeringPropertiesFormatPtrOutput) UseRemoteGateways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPeeringPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.UseRemoteGateways
	}).(pulumi.BoolPtrOutput)
}

// Properties of the virtual network peering.
type VirtualNetworkPeeringPropertiesFormatResponse struct {
	// Whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed.
	AllowForwardedTraffic *bool `pulumi:"allowForwardedTraffic"`
	// If gateway links can be used in remote virtual networking to link to this virtual network.
	AllowGatewayTransit *bool `pulumi:"allowGatewayTransit"`
	// Whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space.
	AllowVirtualNetworkAccess *bool `pulumi:"allowVirtualNetworkAccess"`
	// The status of the virtual network peering. Possible values are 'Initiated', 'Connected', and 'Disconnected'.
	PeeringState *string `pulumi:"peeringState"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the remote virtual network address space.
	RemoteAddressSpace *AddressSpaceResponse `pulumi:"remoteAddressSpace"`
	// The reference of the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
	RemoteVirtualNetwork *SubResourceResponse `pulumi:"remoteVirtualNetwork"`
	// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
	UseRemoteGateways *bool `pulumi:"useRemoteGateways"`
}

// VirtualNetworkPeeringPropertiesFormatResponseInput is an input type that accepts VirtualNetworkPeeringPropertiesFormatResponseArgs and VirtualNetworkPeeringPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkPeeringPropertiesFormatResponseInput` via:
//
//          VirtualNetworkPeeringPropertiesFormatResponseArgs{...}
type VirtualNetworkPeeringPropertiesFormatResponseInput interface {
	pulumi.Input

	ToVirtualNetworkPeeringPropertiesFormatResponseOutput() VirtualNetworkPeeringPropertiesFormatResponseOutput
	ToVirtualNetworkPeeringPropertiesFormatResponseOutputWithContext(context.Context) VirtualNetworkPeeringPropertiesFormatResponseOutput
}

// Properties of the virtual network peering.
type VirtualNetworkPeeringPropertiesFormatResponseArgs struct {
	// Whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed.
	AllowForwardedTraffic pulumi.BoolPtrInput `pulumi:"allowForwardedTraffic"`
	// If gateway links can be used in remote virtual networking to link to this virtual network.
	AllowGatewayTransit pulumi.BoolPtrInput `pulumi:"allowGatewayTransit"`
	// Whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space.
	AllowVirtualNetworkAccess pulumi.BoolPtrInput `pulumi:"allowVirtualNetworkAccess"`
	// The status of the virtual network peering. Possible values are 'Initiated', 'Connected', and 'Disconnected'.
	PeeringState pulumi.StringPtrInput `pulumi:"peeringState"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the remote virtual network address space.
	RemoteAddressSpace AddressSpaceResponsePtrInput `pulumi:"remoteAddressSpace"`
	// The reference of the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
	RemoteVirtualNetwork SubResourceResponsePtrInput `pulumi:"remoteVirtualNetwork"`
	// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
	UseRemoteGateways pulumi.BoolPtrInput `pulumi:"useRemoteGateways"`
}

func (VirtualNetworkPeeringPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPeeringPropertiesFormatResponse)(nil)).Elem()
}

func (i VirtualNetworkPeeringPropertiesFormatResponseArgs) ToVirtualNetworkPeeringPropertiesFormatResponseOutput() VirtualNetworkPeeringPropertiesFormatResponseOutput {
	return i.ToVirtualNetworkPeeringPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkPeeringPropertiesFormatResponseArgs) ToVirtualNetworkPeeringPropertiesFormatResponseOutputWithContext(ctx context.Context) VirtualNetworkPeeringPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPeeringPropertiesFormatResponseOutput)
}

func (i VirtualNetworkPeeringPropertiesFormatResponseArgs) ToVirtualNetworkPeeringPropertiesFormatResponsePtrOutput() VirtualNetworkPeeringPropertiesFormatResponsePtrOutput {
	return i.ToVirtualNetworkPeeringPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkPeeringPropertiesFormatResponseArgs) ToVirtualNetworkPeeringPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkPeeringPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPeeringPropertiesFormatResponseOutput).ToVirtualNetworkPeeringPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkPeeringPropertiesFormatResponsePtrInput is an input type that accepts VirtualNetworkPeeringPropertiesFormatResponseArgs, VirtualNetworkPeeringPropertiesFormatResponsePtr and VirtualNetworkPeeringPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkPeeringPropertiesFormatResponsePtrInput` via:
//
//          VirtualNetworkPeeringPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkPeeringPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkPeeringPropertiesFormatResponsePtrOutput() VirtualNetworkPeeringPropertiesFormatResponsePtrOutput
	ToVirtualNetworkPeeringPropertiesFormatResponsePtrOutputWithContext(context.Context) VirtualNetworkPeeringPropertiesFormatResponsePtrOutput
}

type virtualNetworkPeeringPropertiesFormatResponsePtrType VirtualNetworkPeeringPropertiesFormatResponseArgs

func VirtualNetworkPeeringPropertiesFormatResponsePtr(v *VirtualNetworkPeeringPropertiesFormatResponseArgs) VirtualNetworkPeeringPropertiesFormatResponsePtrInput {
	return (*virtualNetworkPeeringPropertiesFormatResponsePtrType)(v)
}

func (*virtualNetworkPeeringPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkPeeringPropertiesFormatResponse)(nil)).Elem()
}

func (i *virtualNetworkPeeringPropertiesFormatResponsePtrType) ToVirtualNetworkPeeringPropertiesFormatResponsePtrOutput() VirtualNetworkPeeringPropertiesFormatResponsePtrOutput {
	return i.ToVirtualNetworkPeeringPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkPeeringPropertiesFormatResponsePtrType) ToVirtualNetworkPeeringPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkPeeringPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPeeringPropertiesFormatResponsePtrOutput)
}

// Properties of the virtual network peering.
type VirtualNetworkPeeringPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPeeringPropertiesFormatResponse)(nil)).Elem()
}

func (o VirtualNetworkPeeringPropertiesFormatResponseOutput) ToVirtualNetworkPeeringPropertiesFormatResponseOutput() VirtualNetworkPeeringPropertiesFormatResponseOutput {
	return o
}

func (o VirtualNetworkPeeringPropertiesFormatResponseOutput) ToVirtualNetworkPeeringPropertiesFormatResponseOutputWithContext(ctx context.Context) VirtualNetworkPeeringPropertiesFormatResponseOutput {
	return o
}

func (o VirtualNetworkPeeringPropertiesFormatResponseOutput) ToVirtualNetworkPeeringPropertiesFormatResponsePtrOutput() VirtualNetworkPeeringPropertiesFormatResponsePtrOutput {
	return o.ToVirtualNetworkPeeringPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkPeeringPropertiesFormatResponseOutput) ToVirtualNetworkPeeringPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkPeeringPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringPropertiesFormatResponse) *VirtualNetworkPeeringPropertiesFormatResponse {
		return &v
	}).(VirtualNetworkPeeringPropertiesFormatResponsePtrOutput)
}

// Whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed.
func (o VirtualNetworkPeeringPropertiesFormatResponseOutput) AllowForwardedTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringPropertiesFormatResponse) *bool { return v.AllowForwardedTraffic }).(pulumi.BoolPtrOutput)
}

// If gateway links can be used in remote virtual networking to link to this virtual network.
func (o VirtualNetworkPeeringPropertiesFormatResponseOutput) AllowGatewayTransit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringPropertiesFormatResponse) *bool { return v.AllowGatewayTransit }).(pulumi.BoolPtrOutput)
}

// Whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space.
func (o VirtualNetworkPeeringPropertiesFormatResponseOutput) AllowVirtualNetworkAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringPropertiesFormatResponse) *bool { return v.AllowVirtualNetworkAccess }).(pulumi.BoolPtrOutput)
}

// The status of the virtual network peering. Possible values are 'Initiated', 'Connected', and 'Disconnected'.
func (o VirtualNetworkPeeringPropertiesFormatResponseOutput) PeeringState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringPropertiesFormatResponse) *string { return v.PeeringState }).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource.
func (o VirtualNetworkPeeringPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the remote virtual network address space.
func (o VirtualNetworkPeeringPropertiesFormatResponseOutput) RemoteAddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringPropertiesFormatResponse) *AddressSpaceResponse {
		return v.RemoteAddressSpace
	}).(AddressSpaceResponsePtrOutput)
}

// The reference of the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
func (o VirtualNetworkPeeringPropertiesFormatResponseOutput) RemoteVirtualNetwork() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringPropertiesFormatResponse) *SubResourceResponse {
		return v.RemoteVirtualNetwork
	}).(SubResourceResponsePtrOutput)
}

// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
func (o VirtualNetworkPeeringPropertiesFormatResponseOutput) UseRemoteGateways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringPropertiesFormatResponse) *bool { return v.UseRemoteGateways }).(pulumi.BoolPtrOutput)
}

type VirtualNetworkPeeringPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkPeeringPropertiesFormatResponse)(nil)).Elem()
}

func (o VirtualNetworkPeeringPropertiesFormatResponsePtrOutput) ToVirtualNetworkPeeringPropertiesFormatResponsePtrOutput() VirtualNetworkPeeringPropertiesFormatResponsePtrOutput {
	return o
}

func (o VirtualNetworkPeeringPropertiesFormatResponsePtrOutput) ToVirtualNetworkPeeringPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkPeeringPropertiesFormatResponsePtrOutput {
	return o
}

func (o VirtualNetworkPeeringPropertiesFormatResponsePtrOutput) Elem() VirtualNetworkPeeringPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkPeeringPropertiesFormatResponse) VirtualNetworkPeeringPropertiesFormatResponse {
		return *v
	}).(VirtualNetworkPeeringPropertiesFormatResponseOutput)
}

// Whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed.
func (o VirtualNetworkPeeringPropertiesFormatResponsePtrOutput) AllowForwardedTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPeeringPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowForwardedTraffic
	}).(pulumi.BoolPtrOutput)
}

// If gateway links can be used in remote virtual networking to link to this virtual network.
func (o VirtualNetworkPeeringPropertiesFormatResponsePtrOutput) AllowGatewayTransit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPeeringPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowGatewayTransit
	}).(pulumi.BoolPtrOutput)
}

// Whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space.
func (o VirtualNetworkPeeringPropertiesFormatResponsePtrOutput) AllowVirtualNetworkAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPeeringPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowVirtualNetworkAccess
	}).(pulumi.BoolPtrOutput)
}

// The status of the virtual network peering. Possible values are 'Initiated', 'Connected', and 'Disconnected'.
func (o VirtualNetworkPeeringPropertiesFormatResponsePtrOutput) PeeringState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPeeringPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.PeeringState
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource.
func (o VirtualNetworkPeeringPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPeeringPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference of the remote virtual network address space.
func (o VirtualNetworkPeeringPropertiesFormatResponsePtrOutput) RemoteAddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPeeringPropertiesFormatResponse) *AddressSpaceResponse {
		if v == nil {
			return nil
		}
		return v.RemoteAddressSpace
	}).(AddressSpaceResponsePtrOutput)
}

// The reference of the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
func (o VirtualNetworkPeeringPropertiesFormatResponsePtrOutput) RemoteVirtualNetwork() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPeeringPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.RemoteVirtualNetwork
	}).(SubResourceResponsePtrOutput)
}

// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
func (o VirtualNetworkPeeringPropertiesFormatResponsePtrOutput) UseRemoteGateways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPeeringPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.UseRemoteGateways
	}).(pulumi.BoolPtrOutput)
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the virtual network peering.
	Properties *VirtualNetworkPeeringPropertiesFormatResponse `pulumi:"properties"`
}

// VirtualNetworkPeeringResponseInput is an input type that accepts VirtualNetworkPeeringResponseArgs and VirtualNetworkPeeringResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkPeeringResponseInput` via:
//
//          VirtualNetworkPeeringResponseArgs{...}
type VirtualNetworkPeeringResponseInput interface {
	pulumi.Input

	ToVirtualNetworkPeeringResponseOutput() VirtualNetworkPeeringResponseOutput
	ToVirtualNetworkPeeringResponseOutputWithContext(context.Context) VirtualNetworkPeeringResponseOutput
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the virtual network peering.
	Properties VirtualNetworkPeeringPropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (VirtualNetworkPeeringResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPeeringResponse)(nil)).Elem()
}

func (i VirtualNetworkPeeringResponseArgs) ToVirtualNetworkPeeringResponseOutput() VirtualNetworkPeeringResponseOutput {
	return i.ToVirtualNetworkPeeringResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkPeeringResponseArgs) ToVirtualNetworkPeeringResponseOutputWithContext(ctx context.Context) VirtualNetworkPeeringResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPeeringResponseOutput)
}

// VirtualNetworkPeeringResponseArrayInput is an input type that accepts VirtualNetworkPeeringResponseArray and VirtualNetworkPeeringResponseArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkPeeringResponseArrayInput` via:
//
//          VirtualNetworkPeeringResponseArray{ VirtualNetworkPeeringResponseArgs{...} }
type VirtualNetworkPeeringResponseArrayInput interface {
	pulumi.Input

	ToVirtualNetworkPeeringResponseArrayOutput() VirtualNetworkPeeringResponseArrayOutput
	ToVirtualNetworkPeeringResponseArrayOutputWithContext(context.Context) VirtualNetworkPeeringResponseArrayOutput
}

type VirtualNetworkPeeringResponseArray []VirtualNetworkPeeringResponseInput

func (VirtualNetworkPeeringResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPeeringResponse)(nil)).Elem()
}

func (i VirtualNetworkPeeringResponseArray) ToVirtualNetworkPeeringResponseArrayOutput() VirtualNetworkPeeringResponseArrayOutput {
	return i.ToVirtualNetworkPeeringResponseArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkPeeringResponseArray) ToVirtualNetworkPeeringResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkPeeringResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPeeringResponseArrayOutput)
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPeeringResponse)(nil)).Elem()
}

func (o VirtualNetworkPeeringResponseOutput) ToVirtualNetworkPeeringResponseOutput() VirtualNetworkPeeringResponseOutput {
	return o
}

func (o VirtualNetworkPeeringResponseOutput) ToVirtualNetworkPeeringResponseOutputWithContext(ctx context.Context) VirtualNetworkPeeringResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkPeeringResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkPeeringResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkPeeringResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the virtual network peering.
func (o VirtualNetworkPeeringResponseOutput) Properties() VirtualNetworkPeeringPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *VirtualNetworkPeeringPropertiesFormatResponse {
		return v.Properties
	}).(VirtualNetworkPeeringPropertiesFormatResponsePtrOutput)
}

type VirtualNetworkPeeringResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPeeringResponse)(nil)).Elem()
}

func (o VirtualNetworkPeeringResponseArrayOutput) ToVirtualNetworkPeeringResponseArrayOutput() VirtualNetworkPeeringResponseArrayOutput {
	return o
}

func (o VirtualNetworkPeeringResponseArrayOutput) ToVirtualNetworkPeeringResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkPeeringResponseArrayOutput {
	return o
}

func (o VirtualNetworkPeeringResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkPeeringResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkPeeringResponse {
		return vs[0].([]VirtualNetworkPeeringResponse)[vs[1].(int)]
	}).(VirtualNetworkPeeringResponseOutput)
}

// Properties of the virtual network.
type VirtualNetworkPropertiesFormat struct {
	// The AddressSpace that contains an array of IP address ranges that can be used by subnets.
	AddressSpace *AddressSpace `pulumi:"addressSpace"`
	// The DDoS protection plan associated with the virtual network.
	DdosProtectionPlan *SubResource `pulumi:"ddosProtectionPlan"`
	// The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.
	DhcpOptions *DhcpOptions `pulumi:"dhcpOptions"`
	// Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.
	EnableDdosProtection *bool `pulumi:"enableDdosProtection"`
	// Indicates if VM protection is enabled for all the subnets in the virtual network.
	EnableVmProtection *bool `pulumi:"enableVmProtection"`
	// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resourceGuid property of the Virtual Network resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// A list of subnets in a Virtual Network.
	Subnets []SubnetType `pulumi:"subnets"`
	// A list of peerings in a Virtual Network.
	VirtualNetworkPeerings []VirtualNetworkPeeringType `pulumi:"virtualNetworkPeerings"`
}

// VirtualNetworkPropertiesFormatInput is an input type that accepts VirtualNetworkPropertiesFormatArgs and VirtualNetworkPropertiesFormatOutput values.
// You can construct a concrete instance of `VirtualNetworkPropertiesFormatInput` via:
//
//          VirtualNetworkPropertiesFormatArgs{...}
type VirtualNetworkPropertiesFormatInput interface {
	pulumi.Input

	ToVirtualNetworkPropertiesFormatOutput() VirtualNetworkPropertiesFormatOutput
	ToVirtualNetworkPropertiesFormatOutputWithContext(context.Context) VirtualNetworkPropertiesFormatOutput
}

// Properties of the virtual network.
type VirtualNetworkPropertiesFormatArgs struct {
	// The AddressSpace that contains an array of IP address ranges that can be used by subnets.
	AddressSpace AddressSpacePtrInput `pulumi:"addressSpace"`
	// The DDoS protection plan associated with the virtual network.
	DdosProtectionPlan SubResourcePtrInput `pulumi:"ddosProtectionPlan"`
	// The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.
	DhcpOptions DhcpOptionsPtrInput `pulumi:"dhcpOptions"`
	// Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.
	EnableDdosProtection pulumi.BoolPtrInput `pulumi:"enableDdosProtection"`
	// Indicates if VM protection is enabled for all the subnets in the virtual network.
	EnableVmProtection pulumi.BoolPtrInput `pulumi:"enableVmProtection"`
	// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resourceGuid property of the Virtual Network resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// A list of subnets in a Virtual Network.
	Subnets SubnetTypeArrayInput `pulumi:"subnets"`
	// A list of peerings in a Virtual Network.
	VirtualNetworkPeerings VirtualNetworkPeeringTypeArrayInput `pulumi:"virtualNetworkPeerings"`
}

func (VirtualNetworkPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesFormat)(nil)).Elem()
}

func (i VirtualNetworkPropertiesFormatArgs) ToVirtualNetworkPropertiesFormatOutput() VirtualNetworkPropertiesFormatOutput {
	return i.ToVirtualNetworkPropertiesFormatOutputWithContext(context.Background())
}

func (i VirtualNetworkPropertiesFormatArgs) ToVirtualNetworkPropertiesFormatOutputWithContext(ctx context.Context) VirtualNetworkPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPropertiesFormatOutput)
}

func (i VirtualNetworkPropertiesFormatArgs) ToVirtualNetworkPropertiesFormatPtrOutput() VirtualNetworkPropertiesFormatPtrOutput {
	return i.ToVirtualNetworkPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkPropertiesFormatArgs) ToVirtualNetworkPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPropertiesFormatOutput).ToVirtualNetworkPropertiesFormatPtrOutputWithContext(ctx)
}

// VirtualNetworkPropertiesFormatPtrInput is an input type that accepts VirtualNetworkPropertiesFormatArgs, VirtualNetworkPropertiesFormatPtr and VirtualNetworkPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkPropertiesFormatPtrInput` via:
//
//          VirtualNetworkPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkPropertiesFormatPtrInput interface {
	pulumi.Input

	ToVirtualNetworkPropertiesFormatPtrOutput() VirtualNetworkPropertiesFormatPtrOutput
	ToVirtualNetworkPropertiesFormatPtrOutputWithContext(context.Context) VirtualNetworkPropertiesFormatPtrOutput
}

type virtualNetworkPropertiesFormatPtrType VirtualNetworkPropertiesFormatArgs

func VirtualNetworkPropertiesFormatPtr(v *VirtualNetworkPropertiesFormatArgs) VirtualNetworkPropertiesFormatPtrInput {
	return (*virtualNetworkPropertiesFormatPtrType)(v)
}

func (*virtualNetworkPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkPropertiesFormat)(nil)).Elem()
}

func (i *virtualNetworkPropertiesFormatPtrType) ToVirtualNetworkPropertiesFormatPtrOutput() VirtualNetworkPropertiesFormatPtrOutput {
	return i.ToVirtualNetworkPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkPropertiesFormatPtrType) ToVirtualNetworkPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPropertiesFormatPtrOutput)
}

// Properties of the virtual network.
type VirtualNetworkPropertiesFormatOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesFormat)(nil)).Elem()
}

func (o VirtualNetworkPropertiesFormatOutput) ToVirtualNetworkPropertiesFormatOutput() VirtualNetworkPropertiesFormatOutput {
	return o
}

func (o VirtualNetworkPropertiesFormatOutput) ToVirtualNetworkPropertiesFormatOutputWithContext(ctx context.Context) VirtualNetworkPropertiesFormatOutput {
	return o
}

func (o VirtualNetworkPropertiesFormatOutput) ToVirtualNetworkPropertiesFormatPtrOutput() VirtualNetworkPropertiesFormatPtrOutput {
	return o.ToVirtualNetworkPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkPropertiesFormatOutput) ToVirtualNetworkPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesFormatPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesFormat) *VirtualNetworkPropertiesFormat {
		return &v
	}).(VirtualNetworkPropertiesFormatPtrOutput)
}

// The AddressSpace that contains an array of IP address ranges that can be used by subnets.
func (o VirtualNetworkPropertiesFormatOutput) AddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesFormat) *AddressSpace { return v.AddressSpace }).(AddressSpacePtrOutput)
}

// The DDoS protection plan associated with the virtual network.
func (o VirtualNetworkPropertiesFormatOutput) DdosProtectionPlan() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesFormat) *SubResource { return v.DdosProtectionPlan }).(SubResourcePtrOutput)
}

// The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.
func (o VirtualNetworkPropertiesFormatOutput) DhcpOptions() DhcpOptionsPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesFormat) *DhcpOptions { return v.DhcpOptions }).(DhcpOptionsPtrOutput)
}

// Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.
func (o VirtualNetworkPropertiesFormatOutput) EnableDdosProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesFormat) *bool { return v.EnableDdosProtection }).(pulumi.BoolPtrOutput)
}

// Indicates if VM protection is enabled for all the subnets in the virtual network.
func (o VirtualNetworkPropertiesFormatOutput) EnableVmProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesFormat) *bool { return v.EnableVmProtection }).(pulumi.BoolPtrOutput)
}

// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resourceGuid property of the Virtual Network resource.
func (o VirtualNetworkPropertiesFormatOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesFormat) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// A list of subnets in a Virtual Network.
func (o VirtualNetworkPropertiesFormatOutput) Subnets() SubnetTypeArrayOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesFormat) []SubnetType { return v.Subnets }).(SubnetTypeArrayOutput)
}

// A list of peerings in a Virtual Network.
func (o VirtualNetworkPropertiesFormatOutput) VirtualNetworkPeerings() VirtualNetworkPeeringTypeArrayOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesFormat) []VirtualNetworkPeeringType { return v.VirtualNetworkPeerings }).(VirtualNetworkPeeringTypeArrayOutput)
}

type VirtualNetworkPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkPropertiesFormat)(nil)).Elem()
}

func (o VirtualNetworkPropertiesFormatPtrOutput) ToVirtualNetworkPropertiesFormatPtrOutput() VirtualNetworkPropertiesFormatPtrOutput {
	return o
}

func (o VirtualNetworkPropertiesFormatPtrOutput) ToVirtualNetworkPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesFormatPtrOutput {
	return o
}

func (o VirtualNetworkPropertiesFormatPtrOutput) Elem() VirtualNetworkPropertiesFormatOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesFormat) VirtualNetworkPropertiesFormat { return *v }).(VirtualNetworkPropertiesFormatOutput)
}

// The AddressSpace that contains an array of IP address ranges that can be used by subnets.
func (o VirtualNetworkPropertiesFormatPtrOutput) AddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesFormat) *AddressSpace {
		if v == nil {
			return nil
		}
		return v.AddressSpace
	}).(AddressSpacePtrOutput)
}

// The DDoS protection plan associated with the virtual network.
func (o VirtualNetworkPropertiesFormatPtrOutput) DdosProtectionPlan() SubResourcePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesFormat) *SubResource {
		if v == nil {
			return nil
		}
		return v.DdosProtectionPlan
	}).(SubResourcePtrOutput)
}

// The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.
func (o VirtualNetworkPropertiesFormatPtrOutput) DhcpOptions() DhcpOptionsPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesFormat) *DhcpOptions {
		if v == nil {
			return nil
		}
		return v.DhcpOptions
	}).(DhcpOptionsPtrOutput)
}

// Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.
func (o VirtualNetworkPropertiesFormatPtrOutput) EnableDdosProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDdosProtection
	}).(pulumi.BoolPtrOutput)
}

// Indicates if VM protection is enabled for all the subnets in the virtual network.
func (o VirtualNetworkPropertiesFormatPtrOutput) EnableVmProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesFormat) *bool {
		if v == nil {
			return nil
		}
		return v.EnableVmProtection
	}).(pulumi.BoolPtrOutput)
}

// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkPropertiesFormatPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resourceGuid property of the Virtual Network resource.
func (o VirtualNetworkPropertiesFormatPtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// A list of subnets in a Virtual Network.
func (o VirtualNetworkPropertiesFormatPtrOutput) Subnets() SubnetTypeArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesFormat) []SubnetType {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetTypeArrayOutput)
}

// A list of peerings in a Virtual Network.
func (o VirtualNetworkPropertiesFormatPtrOutput) VirtualNetworkPeerings() VirtualNetworkPeeringTypeArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesFormat) []VirtualNetworkPeeringType {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkPeerings
	}).(VirtualNetworkPeeringTypeArrayOutput)
}

// Properties of the virtual network.
type VirtualNetworkPropertiesFormatResponse struct {
	// The AddressSpace that contains an array of IP address ranges that can be used by subnets.
	AddressSpace *AddressSpaceResponse `pulumi:"addressSpace"`
	// The DDoS protection plan associated with the virtual network.
	DdosProtectionPlan *SubResourceResponse `pulumi:"ddosProtectionPlan"`
	// The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.
	DhcpOptions *DhcpOptionsResponse `pulumi:"dhcpOptions"`
	// Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.
	EnableDdosProtection *bool `pulumi:"enableDdosProtection"`
	// Indicates if VM protection is enabled for all the subnets in the virtual network.
	EnableVmProtection *bool `pulumi:"enableVmProtection"`
	// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resourceGuid property of the Virtual Network resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// A list of subnets in a Virtual Network.
	Subnets []SubnetResponse `pulumi:"subnets"`
	// A list of peerings in a Virtual Network.
	VirtualNetworkPeerings []VirtualNetworkPeeringResponse `pulumi:"virtualNetworkPeerings"`
}

// VirtualNetworkPropertiesFormatResponseInput is an input type that accepts VirtualNetworkPropertiesFormatResponseArgs and VirtualNetworkPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkPropertiesFormatResponseInput` via:
//
//          VirtualNetworkPropertiesFormatResponseArgs{...}
type VirtualNetworkPropertiesFormatResponseInput interface {
	pulumi.Input

	ToVirtualNetworkPropertiesFormatResponseOutput() VirtualNetworkPropertiesFormatResponseOutput
	ToVirtualNetworkPropertiesFormatResponseOutputWithContext(context.Context) VirtualNetworkPropertiesFormatResponseOutput
}

// Properties of the virtual network.
type VirtualNetworkPropertiesFormatResponseArgs struct {
	// The AddressSpace that contains an array of IP address ranges that can be used by subnets.
	AddressSpace AddressSpaceResponsePtrInput `pulumi:"addressSpace"`
	// The DDoS protection plan associated with the virtual network.
	DdosProtectionPlan SubResourceResponsePtrInput `pulumi:"ddosProtectionPlan"`
	// The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.
	DhcpOptions DhcpOptionsResponsePtrInput `pulumi:"dhcpOptions"`
	// Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.
	EnableDdosProtection pulumi.BoolPtrInput `pulumi:"enableDdosProtection"`
	// Indicates if VM protection is enabled for all the subnets in the virtual network.
	EnableVmProtection pulumi.BoolPtrInput `pulumi:"enableVmProtection"`
	// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resourceGuid property of the Virtual Network resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// A list of subnets in a Virtual Network.
	Subnets SubnetResponseArrayInput `pulumi:"subnets"`
	// A list of peerings in a Virtual Network.
	VirtualNetworkPeerings VirtualNetworkPeeringResponseArrayInput `pulumi:"virtualNetworkPeerings"`
}

func (VirtualNetworkPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesFormatResponse)(nil)).Elem()
}

func (i VirtualNetworkPropertiesFormatResponseArgs) ToVirtualNetworkPropertiesFormatResponseOutput() VirtualNetworkPropertiesFormatResponseOutput {
	return i.ToVirtualNetworkPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkPropertiesFormatResponseArgs) ToVirtualNetworkPropertiesFormatResponseOutputWithContext(ctx context.Context) VirtualNetworkPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPropertiesFormatResponseOutput)
}

func (i VirtualNetworkPropertiesFormatResponseArgs) ToVirtualNetworkPropertiesFormatResponsePtrOutput() VirtualNetworkPropertiesFormatResponsePtrOutput {
	return i.ToVirtualNetworkPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkPropertiesFormatResponseArgs) ToVirtualNetworkPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPropertiesFormatResponseOutput).ToVirtualNetworkPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkPropertiesFormatResponsePtrInput is an input type that accepts VirtualNetworkPropertiesFormatResponseArgs, VirtualNetworkPropertiesFormatResponsePtr and VirtualNetworkPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkPropertiesFormatResponsePtrInput` via:
//
//          VirtualNetworkPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkPropertiesFormatResponsePtrOutput() VirtualNetworkPropertiesFormatResponsePtrOutput
	ToVirtualNetworkPropertiesFormatResponsePtrOutputWithContext(context.Context) VirtualNetworkPropertiesFormatResponsePtrOutput
}

type virtualNetworkPropertiesFormatResponsePtrType VirtualNetworkPropertiesFormatResponseArgs

func VirtualNetworkPropertiesFormatResponsePtr(v *VirtualNetworkPropertiesFormatResponseArgs) VirtualNetworkPropertiesFormatResponsePtrInput {
	return (*virtualNetworkPropertiesFormatResponsePtrType)(v)
}

func (*virtualNetworkPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkPropertiesFormatResponse)(nil)).Elem()
}

func (i *virtualNetworkPropertiesFormatResponsePtrType) ToVirtualNetworkPropertiesFormatResponsePtrOutput() VirtualNetworkPropertiesFormatResponsePtrOutput {
	return i.ToVirtualNetworkPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkPropertiesFormatResponsePtrType) ToVirtualNetworkPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPropertiesFormatResponsePtrOutput)
}

// Properties of the virtual network.
type VirtualNetworkPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPropertiesFormatResponse)(nil)).Elem()
}

func (o VirtualNetworkPropertiesFormatResponseOutput) ToVirtualNetworkPropertiesFormatResponseOutput() VirtualNetworkPropertiesFormatResponseOutput {
	return o
}

func (o VirtualNetworkPropertiesFormatResponseOutput) ToVirtualNetworkPropertiesFormatResponseOutputWithContext(ctx context.Context) VirtualNetworkPropertiesFormatResponseOutput {
	return o
}

func (o VirtualNetworkPropertiesFormatResponseOutput) ToVirtualNetworkPropertiesFormatResponsePtrOutput() VirtualNetworkPropertiesFormatResponsePtrOutput {
	return o.ToVirtualNetworkPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkPropertiesFormatResponseOutput) ToVirtualNetworkPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesFormatResponse) *VirtualNetworkPropertiesFormatResponse {
		return &v
	}).(VirtualNetworkPropertiesFormatResponsePtrOutput)
}

// The AddressSpace that contains an array of IP address ranges that can be used by subnets.
func (o VirtualNetworkPropertiesFormatResponseOutput) AddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesFormatResponse) *AddressSpaceResponse { return v.AddressSpace }).(AddressSpaceResponsePtrOutput)
}

// The DDoS protection plan associated with the virtual network.
func (o VirtualNetworkPropertiesFormatResponseOutput) DdosProtectionPlan() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesFormatResponse) *SubResourceResponse { return v.DdosProtectionPlan }).(SubResourceResponsePtrOutput)
}

// The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.
func (o VirtualNetworkPropertiesFormatResponseOutput) DhcpOptions() DhcpOptionsResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesFormatResponse) *DhcpOptionsResponse { return v.DhcpOptions }).(DhcpOptionsResponsePtrOutput)
}

// Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.
func (o VirtualNetworkPropertiesFormatResponseOutput) EnableDdosProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesFormatResponse) *bool { return v.EnableDdosProtection }).(pulumi.BoolPtrOutput)
}

// Indicates if VM protection is enabled for all the subnets in the virtual network.
func (o VirtualNetworkPropertiesFormatResponseOutput) EnableVmProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesFormatResponse) *bool { return v.EnableVmProtection }).(pulumi.BoolPtrOutput)
}

// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resourceGuid property of the Virtual Network resource.
func (o VirtualNetworkPropertiesFormatResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesFormatResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// A list of subnets in a Virtual Network.
func (o VirtualNetworkPropertiesFormatResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesFormatResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

// A list of peerings in a Virtual Network.
func (o VirtualNetworkPropertiesFormatResponseOutput) VirtualNetworkPeerings() VirtualNetworkPeeringResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkPropertiesFormatResponse) []VirtualNetworkPeeringResponse {
		return v.VirtualNetworkPeerings
	}).(VirtualNetworkPeeringResponseArrayOutput)
}

type VirtualNetworkPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkPropertiesFormatResponse)(nil)).Elem()
}

func (o VirtualNetworkPropertiesFormatResponsePtrOutput) ToVirtualNetworkPropertiesFormatResponsePtrOutput() VirtualNetworkPropertiesFormatResponsePtrOutput {
	return o
}

func (o VirtualNetworkPropertiesFormatResponsePtrOutput) ToVirtualNetworkPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkPropertiesFormatResponsePtrOutput {
	return o
}

func (o VirtualNetworkPropertiesFormatResponsePtrOutput) Elem() VirtualNetworkPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesFormatResponse) VirtualNetworkPropertiesFormatResponse { return *v }).(VirtualNetworkPropertiesFormatResponseOutput)
}

// The AddressSpace that contains an array of IP address ranges that can be used by subnets.
func (o VirtualNetworkPropertiesFormatResponsePtrOutput) AddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesFormatResponse) *AddressSpaceResponse {
		if v == nil {
			return nil
		}
		return v.AddressSpace
	}).(AddressSpaceResponsePtrOutput)
}

// The DDoS protection plan associated with the virtual network.
func (o VirtualNetworkPropertiesFormatResponsePtrOutput) DdosProtectionPlan() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesFormatResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.DdosProtectionPlan
	}).(SubResourceResponsePtrOutput)
}

// The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network.
func (o VirtualNetworkPropertiesFormatResponsePtrOutput) DhcpOptions() DhcpOptionsResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesFormatResponse) *DhcpOptionsResponse {
		if v == nil {
			return nil
		}
		return v.DhcpOptions
	}).(DhcpOptionsResponsePtrOutput)
}

// Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.
func (o VirtualNetworkPropertiesFormatResponsePtrOutput) EnableDdosProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDdosProtection
	}).(pulumi.BoolPtrOutput)
}

// Indicates if VM protection is enabled for all the subnets in the virtual network.
func (o VirtualNetworkPropertiesFormatResponsePtrOutput) EnableVmProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesFormatResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableVmProtection
	}).(pulumi.BoolPtrOutput)
}

// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resourceGuid property of the Virtual Network resource.
func (o VirtualNetworkPropertiesFormatResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// A list of subnets in a Virtual Network.
func (o VirtualNetworkPropertiesFormatResponsePtrOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesFormatResponse) []SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetResponseArrayOutput)
}

// A list of peerings in a Virtual Network.
func (o VirtualNetworkPropertiesFormatResponsePtrOutput) VirtualNetworkPeerings() VirtualNetworkPeeringResponseArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkPropertiesFormatResponse) []VirtualNetworkPeeringResponse {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkPeerings
	}).(VirtualNetworkPeeringResponseArrayOutput)
}

// Virtual Network Tap resource
type VirtualNetworkTapType struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Virtual Network Tap Properties.
	Properties VirtualNetworkTapPropertiesFormatResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VirtualNetworkTapTypeInput is an input type that accepts VirtualNetworkTapTypeArgs and VirtualNetworkTapTypeOutput values.
// You can construct a concrete instance of `VirtualNetworkTapTypeInput` via:
//
//          VirtualNetworkTapTypeArgs{...}
type VirtualNetworkTapTypeInput interface {
	pulumi.Input

	ToVirtualNetworkTapTypeOutput() VirtualNetworkTapTypeOutput
	ToVirtualNetworkTapTypeOutputWithContext(context.Context) VirtualNetworkTapTypeOutput
}

// Virtual Network Tap resource
type VirtualNetworkTapTypeArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Virtual Network Tap Properties.
	Properties VirtualNetworkTapPropertiesFormatResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VirtualNetworkTapTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkTapType)(nil)).Elem()
}

func (i VirtualNetworkTapTypeArgs) ToVirtualNetworkTapTypeOutput() VirtualNetworkTapTypeOutput {
	return i.ToVirtualNetworkTapTypeOutputWithContext(context.Background())
}

func (i VirtualNetworkTapTypeArgs) ToVirtualNetworkTapTypeOutputWithContext(ctx context.Context) VirtualNetworkTapTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapTypeOutput)
}

// Virtual Network Tap resource
type VirtualNetworkTapTypeOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkTapType)(nil)).Elem()
}

func (o VirtualNetworkTapTypeOutput) ToVirtualNetworkTapTypeOutput() VirtualNetworkTapTypeOutput {
	return o
}

func (o VirtualNetworkTapTypeOutput) ToVirtualNetworkTapTypeOutputWithContext(ctx context.Context) VirtualNetworkTapTypeOutput {
	return o
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkTapTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkTapTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkTapTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) string { return v.Name }).(pulumi.StringOutput)
}

// Virtual Network Tap Properties.
func (o VirtualNetworkTapTypeOutput) Properties() VirtualNetworkTapPropertiesFormatResponseOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) VirtualNetworkTapPropertiesFormatResponse { return v.Properties }).(VirtualNetworkTapPropertiesFormatResponseOutput)
}

// Resource tags.
func (o VirtualNetworkTapTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkTapTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) string { return v.Type }).(pulumi.StringOutput)
}

// Virtual Network Tap resource
type VirtualNetworkTapDefinition struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Virtual Network Tap Properties.
	Properties *VirtualNetworkTapPropertiesFormat `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// VirtualNetworkTapDefinitionInput is an input type that accepts VirtualNetworkTapDefinitionArgs and VirtualNetworkTapDefinitionOutput values.
// You can construct a concrete instance of `VirtualNetworkTapDefinitionInput` via:
//
//          VirtualNetworkTapDefinitionArgs{...}
type VirtualNetworkTapDefinitionInput interface {
	pulumi.Input

	ToVirtualNetworkTapDefinitionOutput() VirtualNetworkTapDefinitionOutput
	ToVirtualNetworkTapDefinitionOutputWithContext(context.Context) VirtualNetworkTapDefinitionOutput
}

// Virtual Network Tap resource
type VirtualNetworkTapDefinitionArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Virtual Network Tap Properties.
	Properties VirtualNetworkTapPropertiesFormatPtrInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (VirtualNetworkTapDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkTapDefinition)(nil)).Elem()
}

func (i VirtualNetworkTapDefinitionArgs) ToVirtualNetworkTapDefinitionOutput() VirtualNetworkTapDefinitionOutput {
	return i.ToVirtualNetworkTapDefinitionOutputWithContext(context.Background())
}

func (i VirtualNetworkTapDefinitionArgs) ToVirtualNetworkTapDefinitionOutputWithContext(ctx context.Context) VirtualNetworkTapDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapDefinitionOutput)
}

func (i VirtualNetworkTapDefinitionArgs) ToVirtualNetworkTapDefinitionPtrOutput() VirtualNetworkTapDefinitionPtrOutput {
	return i.ToVirtualNetworkTapDefinitionPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkTapDefinitionArgs) ToVirtualNetworkTapDefinitionPtrOutputWithContext(ctx context.Context) VirtualNetworkTapDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapDefinitionOutput).ToVirtualNetworkTapDefinitionPtrOutputWithContext(ctx)
}

// VirtualNetworkTapDefinitionPtrInput is an input type that accepts VirtualNetworkTapDefinitionArgs, VirtualNetworkTapDefinitionPtr and VirtualNetworkTapDefinitionPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkTapDefinitionPtrInput` via:
//
//          VirtualNetworkTapDefinitionArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkTapDefinitionPtrInput interface {
	pulumi.Input

	ToVirtualNetworkTapDefinitionPtrOutput() VirtualNetworkTapDefinitionPtrOutput
	ToVirtualNetworkTapDefinitionPtrOutputWithContext(context.Context) VirtualNetworkTapDefinitionPtrOutput
}

type virtualNetworkTapDefinitionPtrType VirtualNetworkTapDefinitionArgs

func VirtualNetworkTapDefinitionPtr(v *VirtualNetworkTapDefinitionArgs) VirtualNetworkTapDefinitionPtrInput {
	return (*virtualNetworkTapDefinitionPtrType)(v)
}

func (*virtualNetworkTapDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkTapDefinition)(nil)).Elem()
}

func (i *virtualNetworkTapDefinitionPtrType) ToVirtualNetworkTapDefinitionPtrOutput() VirtualNetworkTapDefinitionPtrOutput {
	return i.ToVirtualNetworkTapDefinitionPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkTapDefinitionPtrType) ToVirtualNetworkTapDefinitionPtrOutputWithContext(ctx context.Context) VirtualNetworkTapDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapDefinitionPtrOutput)
}

// VirtualNetworkTapDefinitionArrayInput is an input type that accepts VirtualNetworkTapDefinitionArray and VirtualNetworkTapDefinitionArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkTapDefinitionArrayInput` via:
//
//          VirtualNetworkTapDefinitionArray{ VirtualNetworkTapDefinitionArgs{...} }
type VirtualNetworkTapDefinitionArrayInput interface {
	pulumi.Input

	ToVirtualNetworkTapDefinitionArrayOutput() VirtualNetworkTapDefinitionArrayOutput
	ToVirtualNetworkTapDefinitionArrayOutputWithContext(context.Context) VirtualNetworkTapDefinitionArrayOutput
}

type VirtualNetworkTapDefinitionArray []VirtualNetworkTapDefinitionInput

func (VirtualNetworkTapDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkTapDefinition)(nil)).Elem()
}

func (i VirtualNetworkTapDefinitionArray) ToVirtualNetworkTapDefinitionArrayOutput() VirtualNetworkTapDefinitionArrayOutput {
	return i.ToVirtualNetworkTapDefinitionArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkTapDefinitionArray) ToVirtualNetworkTapDefinitionArrayOutputWithContext(ctx context.Context) VirtualNetworkTapDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapDefinitionArrayOutput)
}

// Virtual Network Tap resource
type VirtualNetworkTapDefinitionOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkTapDefinition)(nil)).Elem()
}

func (o VirtualNetworkTapDefinitionOutput) ToVirtualNetworkTapDefinitionOutput() VirtualNetworkTapDefinitionOutput {
	return o
}

func (o VirtualNetworkTapDefinitionOutput) ToVirtualNetworkTapDefinitionOutputWithContext(ctx context.Context) VirtualNetworkTapDefinitionOutput {
	return o
}

func (o VirtualNetworkTapDefinitionOutput) ToVirtualNetworkTapDefinitionPtrOutput() VirtualNetworkTapDefinitionPtrOutput {
	return o.ToVirtualNetworkTapDefinitionPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkTapDefinitionOutput) ToVirtualNetworkTapDefinitionPtrOutputWithContext(ctx context.Context) VirtualNetworkTapDefinitionPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapDefinition) *VirtualNetworkTapDefinition {
		return &v
	}).(VirtualNetworkTapDefinitionPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkTapDefinitionOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapDefinition) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkTapDefinitionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapDefinition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkTapDefinitionOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapDefinition) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Virtual Network Tap Properties.
func (o VirtualNetworkTapDefinitionOutput) Properties() VirtualNetworkTapPropertiesFormatPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapDefinition) *VirtualNetworkTapPropertiesFormat { return v.Properties }).(VirtualNetworkTapPropertiesFormatPtrOutput)
}

// Resource tags.
func (o VirtualNetworkTapDefinitionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkTapDefinition) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type VirtualNetworkTapDefinitionPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkTapDefinition)(nil)).Elem()
}

func (o VirtualNetworkTapDefinitionPtrOutput) ToVirtualNetworkTapDefinitionPtrOutput() VirtualNetworkTapDefinitionPtrOutput {
	return o
}

func (o VirtualNetworkTapDefinitionPtrOutput) ToVirtualNetworkTapDefinitionPtrOutputWithContext(ctx context.Context) VirtualNetworkTapDefinitionPtrOutput {
	return o
}

func (o VirtualNetworkTapDefinitionPtrOutput) Elem() VirtualNetworkTapDefinitionOutput {
	return o.ApplyT(func(v *VirtualNetworkTapDefinition) VirtualNetworkTapDefinition { return *v }).(VirtualNetworkTapDefinitionOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkTapDefinitionPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkTapDefinitionPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkTapDefinitionPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Virtual Network Tap Properties.
func (o VirtualNetworkTapDefinitionPtrOutput) Properties() VirtualNetworkTapPropertiesFormatPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapDefinition) *VirtualNetworkTapPropertiesFormat {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(VirtualNetworkTapPropertiesFormatPtrOutput)
}

// Resource tags.
func (o VirtualNetworkTapDefinitionPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkTapDefinition) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type VirtualNetworkTapDefinitionArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkTapDefinition)(nil)).Elem()
}

func (o VirtualNetworkTapDefinitionArrayOutput) ToVirtualNetworkTapDefinitionArrayOutput() VirtualNetworkTapDefinitionArrayOutput {
	return o
}

func (o VirtualNetworkTapDefinitionArrayOutput) ToVirtualNetworkTapDefinitionArrayOutputWithContext(ctx context.Context) VirtualNetworkTapDefinitionArrayOutput {
	return o
}

func (o VirtualNetworkTapDefinitionArrayOutput) Index(i pulumi.IntInput) VirtualNetworkTapDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkTapDefinition {
		return vs[0].([]VirtualNetworkTapDefinition)[vs[1].(int)]
	}).(VirtualNetworkTapDefinitionOutput)
}

// Virtual Network Tap properties.
type VirtualNetworkTapPropertiesFormat struct {
	// The reference to the private IP address on the internal Load Balancer that will receive the tap
	DestinationLoadBalancerFrontEndIPConfiguration *FrontendIPConfiguration `pulumi:"destinationLoadBalancerFrontEndIPConfiguration"`
	// The reference to the private IP Address of the collector nic that will receive the tap
	DestinationNetworkInterfaceIPConfiguration *NetworkInterfaceIPConfiguration `pulumi:"destinationNetworkInterfaceIPConfiguration"`
	// The VXLAN destination port that will receive the tapped traffic.
	DestinationPort *int `pulumi:"destinationPort"`
}

// VirtualNetworkTapPropertiesFormatInput is an input type that accepts VirtualNetworkTapPropertiesFormatArgs and VirtualNetworkTapPropertiesFormatOutput values.
// You can construct a concrete instance of `VirtualNetworkTapPropertiesFormatInput` via:
//
//          VirtualNetworkTapPropertiesFormatArgs{...}
type VirtualNetworkTapPropertiesFormatInput interface {
	pulumi.Input

	ToVirtualNetworkTapPropertiesFormatOutput() VirtualNetworkTapPropertiesFormatOutput
	ToVirtualNetworkTapPropertiesFormatOutputWithContext(context.Context) VirtualNetworkTapPropertiesFormatOutput
}

// Virtual Network Tap properties.
type VirtualNetworkTapPropertiesFormatArgs struct {
	// The reference to the private IP address on the internal Load Balancer that will receive the tap
	DestinationLoadBalancerFrontEndIPConfiguration FrontendIPConfigurationPtrInput `pulumi:"destinationLoadBalancerFrontEndIPConfiguration"`
	// The reference to the private IP Address of the collector nic that will receive the tap
	DestinationNetworkInterfaceIPConfiguration NetworkInterfaceIPConfigurationPtrInput `pulumi:"destinationNetworkInterfaceIPConfiguration"`
	// The VXLAN destination port that will receive the tapped traffic.
	DestinationPort pulumi.IntPtrInput `pulumi:"destinationPort"`
}

func (VirtualNetworkTapPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkTapPropertiesFormat)(nil)).Elem()
}

func (i VirtualNetworkTapPropertiesFormatArgs) ToVirtualNetworkTapPropertiesFormatOutput() VirtualNetworkTapPropertiesFormatOutput {
	return i.ToVirtualNetworkTapPropertiesFormatOutputWithContext(context.Background())
}

func (i VirtualNetworkTapPropertiesFormatArgs) ToVirtualNetworkTapPropertiesFormatOutputWithContext(ctx context.Context) VirtualNetworkTapPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapPropertiesFormatOutput)
}

func (i VirtualNetworkTapPropertiesFormatArgs) ToVirtualNetworkTapPropertiesFormatPtrOutput() VirtualNetworkTapPropertiesFormatPtrOutput {
	return i.ToVirtualNetworkTapPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkTapPropertiesFormatArgs) ToVirtualNetworkTapPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkTapPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapPropertiesFormatOutput).ToVirtualNetworkTapPropertiesFormatPtrOutputWithContext(ctx)
}

// VirtualNetworkTapPropertiesFormatPtrInput is an input type that accepts VirtualNetworkTapPropertiesFormatArgs, VirtualNetworkTapPropertiesFormatPtr and VirtualNetworkTapPropertiesFormatPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkTapPropertiesFormatPtrInput` via:
//
//          VirtualNetworkTapPropertiesFormatArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkTapPropertiesFormatPtrInput interface {
	pulumi.Input

	ToVirtualNetworkTapPropertiesFormatPtrOutput() VirtualNetworkTapPropertiesFormatPtrOutput
	ToVirtualNetworkTapPropertiesFormatPtrOutputWithContext(context.Context) VirtualNetworkTapPropertiesFormatPtrOutput
}

type virtualNetworkTapPropertiesFormatPtrType VirtualNetworkTapPropertiesFormatArgs

func VirtualNetworkTapPropertiesFormatPtr(v *VirtualNetworkTapPropertiesFormatArgs) VirtualNetworkTapPropertiesFormatPtrInput {
	return (*virtualNetworkTapPropertiesFormatPtrType)(v)
}

func (*virtualNetworkTapPropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkTapPropertiesFormat)(nil)).Elem()
}

func (i *virtualNetworkTapPropertiesFormatPtrType) ToVirtualNetworkTapPropertiesFormatPtrOutput() VirtualNetworkTapPropertiesFormatPtrOutput {
	return i.ToVirtualNetworkTapPropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkTapPropertiesFormatPtrType) ToVirtualNetworkTapPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkTapPropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapPropertiesFormatPtrOutput)
}

// Virtual Network Tap properties.
type VirtualNetworkTapPropertiesFormatOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkTapPropertiesFormat)(nil)).Elem()
}

func (o VirtualNetworkTapPropertiesFormatOutput) ToVirtualNetworkTapPropertiesFormatOutput() VirtualNetworkTapPropertiesFormatOutput {
	return o
}

func (o VirtualNetworkTapPropertiesFormatOutput) ToVirtualNetworkTapPropertiesFormatOutputWithContext(ctx context.Context) VirtualNetworkTapPropertiesFormatOutput {
	return o
}

func (o VirtualNetworkTapPropertiesFormatOutput) ToVirtualNetworkTapPropertiesFormatPtrOutput() VirtualNetworkTapPropertiesFormatPtrOutput {
	return o.ToVirtualNetworkTapPropertiesFormatPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkTapPropertiesFormatOutput) ToVirtualNetworkTapPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkTapPropertiesFormatPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapPropertiesFormat) *VirtualNetworkTapPropertiesFormat {
		return &v
	}).(VirtualNetworkTapPropertiesFormatPtrOutput)
}

// The reference to the private IP address on the internal Load Balancer that will receive the tap
func (o VirtualNetworkTapPropertiesFormatOutput) DestinationLoadBalancerFrontEndIPConfiguration() FrontendIPConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapPropertiesFormat) *FrontendIPConfiguration {
		return v.DestinationLoadBalancerFrontEndIPConfiguration
	}).(FrontendIPConfigurationPtrOutput)
}

// The reference to the private IP Address of the collector nic that will receive the tap
func (o VirtualNetworkTapPropertiesFormatOutput) DestinationNetworkInterfaceIPConfiguration() NetworkInterfaceIPConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapPropertiesFormat) *NetworkInterfaceIPConfiguration {
		return v.DestinationNetworkInterfaceIPConfiguration
	}).(NetworkInterfaceIPConfigurationPtrOutput)
}

// The VXLAN destination port that will receive the tapped traffic.
func (o VirtualNetworkTapPropertiesFormatOutput) DestinationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapPropertiesFormat) *int { return v.DestinationPort }).(pulumi.IntPtrOutput)
}

type VirtualNetworkTapPropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapPropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkTapPropertiesFormat)(nil)).Elem()
}

func (o VirtualNetworkTapPropertiesFormatPtrOutput) ToVirtualNetworkTapPropertiesFormatPtrOutput() VirtualNetworkTapPropertiesFormatPtrOutput {
	return o
}

func (o VirtualNetworkTapPropertiesFormatPtrOutput) ToVirtualNetworkTapPropertiesFormatPtrOutputWithContext(ctx context.Context) VirtualNetworkTapPropertiesFormatPtrOutput {
	return o
}

func (o VirtualNetworkTapPropertiesFormatPtrOutput) Elem() VirtualNetworkTapPropertiesFormatOutput {
	return o.ApplyT(func(v *VirtualNetworkTapPropertiesFormat) VirtualNetworkTapPropertiesFormat { return *v }).(VirtualNetworkTapPropertiesFormatOutput)
}

// The reference to the private IP address on the internal Load Balancer that will receive the tap
func (o VirtualNetworkTapPropertiesFormatPtrOutput) DestinationLoadBalancerFrontEndIPConfiguration() FrontendIPConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapPropertiesFormat) *FrontendIPConfiguration {
		if v == nil {
			return nil
		}
		return v.DestinationLoadBalancerFrontEndIPConfiguration
	}).(FrontendIPConfigurationPtrOutput)
}

// The reference to the private IP Address of the collector nic that will receive the tap
func (o VirtualNetworkTapPropertiesFormatPtrOutput) DestinationNetworkInterfaceIPConfiguration() NetworkInterfaceIPConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapPropertiesFormat) *NetworkInterfaceIPConfiguration {
		if v == nil {
			return nil
		}
		return v.DestinationNetworkInterfaceIPConfiguration
	}).(NetworkInterfaceIPConfigurationPtrOutput)
}

// The VXLAN destination port that will receive the tapped traffic.
func (o VirtualNetworkTapPropertiesFormatPtrOutput) DestinationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapPropertiesFormat) *int {
		if v == nil {
			return nil
		}
		return v.DestinationPort
	}).(pulumi.IntPtrOutput)
}

// Virtual Network Tap properties.
type VirtualNetworkTapPropertiesFormatResponse struct {
	// The reference to the private IP address on the internal Load Balancer that will receive the tap
	DestinationLoadBalancerFrontEndIPConfiguration *FrontendIPConfigurationResponse `pulumi:"destinationLoadBalancerFrontEndIPConfiguration"`
	// The reference to the private IP Address of the collector nic that will receive the tap
	DestinationNetworkInterfaceIPConfiguration *NetworkInterfaceIPConfigurationResponse `pulumi:"destinationNetworkInterfaceIPConfiguration"`
	// The VXLAN destination port that will receive the tapped traffic.
	DestinationPort *int `pulumi:"destinationPort"`
	// Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
	NetworkInterfaceTapConfigurations []NetworkInterfaceTapConfigurationResponse `pulumi:"networkInterfaceTapConfigurations"`
	// The provisioning state of the virtual network tap. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resourceGuid property of the virtual network tap.
	ResourceGuid string `pulumi:"resourceGuid"`
}

// VirtualNetworkTapPropertiesFormatResponseInput is an input type that accepts VirtualNetworkTapPropertiesFormatResponseArgs and VirtualNetworkTapPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkTapPropertiesFormatResponseInput` via:
//
//          VirtualNetworkTapPropertiesFormatResponseArgs{...}
type VirtualNetworkTapPropertiesFormatResponseInput interface {
	pulumi.Input

	ToVirtualNetworkTapPropertiesFormatResponseOutput() VirtualNetworkTapPropertiesFormatResponseOutput
	ToVirtualNetworkTapPropertiesFormatResponseOutputWithContext(context.Context) VirtualNetworkTapPropertiesFormatResponseOutput
}

// Virtual Network Tap properties.
type VirtualNetworkTapPropertiesFormatResponseArgs struct {
	// The reference to the private IP address on the internal Load Balancer that will receive the tap
	DestinationLoadBalancerFrontEndIPConfiguration FrontendIPConfigurationResponsePtrInput `pulumi:"destinationLoadBalancerFrontEndIPConfiguration"`
	// The reference to the private IP Address of the collector nic that will receive the tap
	DestinationNetworkInterfaceIPConfiguration NetworkInterfaceIPConfigurationResponsePtrInput `pulumi:"destinationNetworkInterfaceIPConfiguration"`
	// The VXLAN destination port that will receive the tapped traffic.
	DestinationPort pulumi.IntPtrInput `pulumi:"destinationPort"`
	// Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
	NetworkInterfaceTapConfigurations NetworkInterfaceTapConfigurationResponseArrayInput `pulumi:"networkInterfaceTapConfigurations"`
	// The provisioning state of the virtual network tap. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The resourceGuid property of the virtual network tap.
	ResourceGuid pulumi.StringInput `pulumi:"resourceGuid"`
}

func (VirtualNetworkTapPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkTapPropertiesFormatResponse)(nil)).Elem()
}

func (i VirtualNetworkTapPropertiesFormatResponseArgs) ToVirtualNetworkTapPropertiesFormatResponseOutput() VirtualNetworkTapPropertiesFormatResponseOutput {
	return i.ToVirtualNetworkTapPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkTapPropertiesFormatResponseArgs) ToVirtualNetworkTapPropertiesFormatResponseOutputWithContext(ctx context.Context) VirtualNetworkTapPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapPropertiesFormatResponseOutput)
}

func (i VirtualNetworkTapPropertiesFormatResponseArgs) ToVirtualNetworkTapPropertiesFormatResponsePtrOutput() VirtualNetworkTapPropertiesFormatResponsePtrOutput {
	return i.ToVirtualNetworkTapPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkTapPropertiesFormatResponseArgs) ToVirtualNetworkTapPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkTapPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapPropertiesFormatResponseOutput).ToVirtualNetworkTapPropertiesFormatResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkTapPropertiesFormatResponsePtrInput is an input type that accepts VirtualNetworkTapPropertiesFormatResponseArgs, VirtualNetworkTapPropertiesFormatResponsePtr and VirtualNetworkTapPropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkTapPropertiesFormatResponsePtrInput` via:
//
//          VirtualNetworkTapPropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkTapPropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkTapPropertiesFormatResponsePtrOutput() VirtualNetworkTapPropertiesFormatResponsePtrOutput
	ToVirtualNetworkTapPropertiesFormatResponsePtrOutputWithContext(context.Context) VirtualNetworkTapPropertiesFormatResponsePtrOutput
}

type virtualNetworkTapPropertiesFormatResponsePtrType VirtualNetworkTapPropertiesFormatResponseArgs

func VirtualNetworkTapPropertiesFormatResponsePtr(v *VirtualNetworkTapPropertiesFormatResponseArgs) VirtualNetworkTapPropertiesFormatResponsePtrInput {
	return (*virtualNetworkTapPropertiesFormatResponsePtrType)(v)
}

func (*virtualNetworkTapPropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkTapPropertiesFormatResponse)(nil)).Elem()
}

func (i *virtualNetworkTapPropertiesFormatResponsePtrType) ToVirtualNetworkTapPropertiesFormatResponsePtrOutput() VirtualNetworkTapPropertiesFormatResponsePtrOutput {
	return i.ToVirtualNetworkTapPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkTapPropertiesFormatResponsePtrType) ToVirtualNetworkTapPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkTapPropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapPropertiesFormatResponsePtrOutput)
}

// Virtual Network Tap properties.
type VirtualNetworkTapPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkTapPropertiesFormatResponse)(nil)).Elem()
}

func (o VirtualNetworkTapPropertiesFormatResponseOutput) ToVirtualNetworkTapPropertiesFormatResponseOutput() VirtualNetworkTapPropertiesFormatResponseOutput {
	return o
}

func (o VirtualNetworkTapPropertiesFormatResponseOutput) ToVirtualNetworkTapPropertiesFormatResponseOutputWithContext(ctx context.Context) VirtualNetworkTapPropertiesFormatResponseOutput {
	return o
}

func (o VirtualNetworkTapPropertiesFormatResponseOutput) ToVirtualNetworkTapPropertiesFormatResponsePtrOutput() VirtualNetworkTapPropertiesFormatResponsePtrOutput {
	return o.ToVirtualNetworkTapPropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkTapPropertiesFormatResponseOutput) ToVirtualNetworkTapPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkTapPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapPropertiesFormatResponse) *VirtualNetworkTapPropertiesFormatResponse {
		return &v
	}).(VirtualNetworkTapPropertiesFormatResponsePtrOutput)
}

// The reference to the private IP address on the internal Load Balancer that will receive the tap
func (o VirtualNetworkTapPropertiesFormatResponseOutput) DestinationLoadBalancerFrontEndIPConfiguration() FrontendIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapPropertiesFormatResponse) *FrontendIPConfigurationResponse {
		return v.DestinationLoadBalancerFrontEndIPConfiguration
	}).(FrontendIPConfigurationResponsePtrOutput)
}

// The reference to the private IP Address of the collector nic that will receive the tap
func (o VirtualNetworkTapPropertiesFormatResponseOutput) DestinationNetworkInterfaceIPConfiguration() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapPropertiesFormatResponse) *NetworkInterfaceIPConfigurationResponse {
		return v.DestinationNetworkInterfaceIPConfiguration
	}).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

// The VXLAN destination port that will receive the tapped traffic.
func (o VirtualNetworkTapPropertiesFormatResponseOutput) DestinationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapPropertiesFormatResponse) *int { return v.DestinationPort }).(pulumi.IntPtrOutput)
}

// Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
func (o VirtualNetworkTapPropertiesFormatResponseOutput) NetworkInterfaceTapConfigurations() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkTapPropertiesFormatResponse) []NetworkInterfaceTapConfigurationResponse {
		return v.NetworkInterfaceTapConfigurations
	}).(NetworkInterfaceTapConfigurationResponseArrayOutput)
}

// The provisioning state of the virtual network tap. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkTapPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resourceGuid property of the virtual network tap.
func (o VirtualNetworkTapPropertiesFormatResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapPropertiesFormatResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

type VirtualNetworkTapPropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapPropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkTapPropertiesFormatResponse)(nil)).Elem()
}

func (o VirtualNetworkTapPropertiesFormatResponsePtrOutput) ToVirtualNetworkTapPropertiesFormatResponsePtrOutput() VirtualNetworkTapPropertiesFormatResponsePtrOutput {
	return o
}

func (o VirtualNetworkTapPropertiesFormatResponsePtrOutput) ToVirtualNetworkTapPropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkTapPropertiesFormatResponsePtrOutput {
	return o
}

func (o VirtualNetworkTapPropertiesFormatResponsePtrOutput) Elem() VirtualNetworkTapPropertiesFormatResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkTapPropertiesFormatResponse) VirtualNetworkTapPropertiesFormatResponse {
		return *v
	}).(VirtualNetworkTapPropertiesFormatResponseOutput)
}

// The reference to the private IP address on the internal Load Balancer that will receive the tap
func (o VirtualNetworkTapPropertiesFormatResponsePtrOutput) DestinationLoadBalancerFrontEndIPConfiguration() FrontendIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapPropertiesFormatResponse) *FrontendIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.DestinationLoadBalancerFrontEndIPConfiguration
	}).(FrontendIPConfigurationResponsePtrOutput)
}

// The reference to the private IP Address of the collector nic that will receive the tap
func (o VirtualNetworkTapPropertiesFormatResponsePtrOutput) DestinationNetworkInterfaceIPConfiguration() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapPropertiesFormatResponse) *NetworkInterfaceIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.DestinationNetworkInterfaceIPConfiguration
	}).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

// The VXLAN destination port that will receive the tapped traffic.
func (o VirtualNetworkTapPropertiesFormatResponsePtrOutput) DestinationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapPropertiesFormatResponse) *int {
		if v == nil {
			return nil
		}
		return v.DestinationPort
	}).(pulumi.IntPtrOutput)
}

// Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
func (o VirtualNetworkTapPropertiesFormatResponsePtrOutput) NetworkInterfaceTapConfigurations() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkTapPropertiesFormatResponse) []NetworkInterfaceTapConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaceTapConfigurations
	}).(NetworkInterfaceTapConfigurationResponseArrayOutput)
}

// The provisioning state of the virtual network tap. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkTapPropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resourceGuid property of the virtual network tap.
func (o VirtualNetworkTapPropertiesFormatResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapPropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Virtual Network Tap resource
type VirtualNetworkTapResponse struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Virtual Network Tap Properties.
	Properties *VirtualNetworkTapPropertiesFormatResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VirtualNetworkTapResponseInput is an input type that accepts VirtualNetworkTapResponseArgs and VirtualNetworkTapResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkTapResponseInput` via:
//
//          VirtualNetworkTapResponseArgs{...}
type VirtualNetworkTapResponseInput interface {
	pulumi.Input

	ToVirtualNetworkTapResponseOutput() VirtualNetworkTapResponseOutput
	ToVirtualNetworkTapResponseOutputWithContext(context.Context) VirtualNetworkTapResponseOutput
}

// Virtual Network Tap resource
type VirtualNetworkTapResponseArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Virtual Network Tap Properties.
	Properties VirtualNetworkTapPropertiesFormatResponsePtrInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VirtualNetworkTapResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkTapResponse)(nil)).Elem()
}

func (i VirtualNetworkTapResponseArgs) ToVirtualNetworkTapResponseOutput() VirtualNetworkTapResponseOutput {
	return i.ToVirtualNetworkTapResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkTapResponseArgs) ToVirtualNetworkTapResponseOutputWithContext(ctx context.Context) VirtualNetworkTapResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapResponseOutput)
}

func (i VirtualNetworkTapResponseArgs) ToVirtualNetworkTapResponsePtrOutput() VirtualNetworkTapResponsePtrOutput {
	return i.ToVirtualNetworkTapResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkTapResponseArgs) ToVirtualNetworkTapResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkTapResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapResponseOutput).ToVirtualNetworkTapResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkTapResponsePtrInput is an input type that accepts VirtualNetworkTapResponseArgs, VirtualNetworkTapResponsePtr and VirtualNetworkTapResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkTapResponsePtrInput` via:
//
//          VirtualNetworkTapResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkTapResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkTapResponsePtrOutput() VirtualNetworkTapResponsePtrOutput
	ToVirtualNetworkTapResponsePtrOutputWithContext(context.Context) VirtualNetworkTapResponsePtrOutput
}

type virtualNetworkTapResponsePtrType VirtualNetworkTapResponseArgs

func VirtualNetworkTapResponsePtr(v *VirtualNetworkTapResponseArgs) VirtualNetworkTapResponsePtrInput {
	return (*virtualNetworkTapResponsePtrType)(v)
}

func (*virtualNetworkTapResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkTapResponse)(nil)).Elem()
}

func (i *virtualNetworkTapResponsePtrType) ToVirtualNetworkTapResponsePtrOutput() VirtualNetworkTapResponsePtrOutput {
	return i.ToVirtualNetworkTapResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkTapResponsePtrType) ToVirtualNetworkTapResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkTapResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapResponsePtrOutput)
}

// VirtualNetworkTapResponseArrayInput is an input type that accepts VirtualNetworkTapResponseArray and VirtualNetworkTapResponseArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkTapResponseArrayInput` via:
//
//          VirtualNetworkTapResponseArray{ VirtualNetworkTapResponseArgs{...} }
type VirtualNetworkTapResponseArrayInput interface {
	pulumi.Input

	ToVirtualNetworkTapResponseArrayOutput() VirtualNetworkTapResponseArrayOutput
	ToVirtualNetworkTapResponseArrayOutputWithContext(context.Context) VirtualNetworkTapResponseArrayOutput
}

type VirtualNetworkTapResponseArray []VirtualNetworkTapResponseInput

func (VirtualNetworkTapResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkTapResponse)(nil)).Elem()
}

func (i VirtualNetworkTapResponseArray) ToVirtualNetworkTapResponseArrayOutput() VirtualNetworkTapResponseArrayOutput {
	return i.ToVirtualNetworkTapResponseArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkTapResponseArray) ToVirtualNetworkTapResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkTapResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapResponseArrayOutput)
}

// Virtual Network Tap resource
type VirtualNetworkTapResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkTapResponse)(nil)).Elem()
}

func (o VirtualNetworkTapResponseOutput) ToVirtualNetworkTapResponseOutput() VirtualNetworkTapResponseOutput {
	return o
}

func (o VirtualNetworkTapResponseOutput) ToVirtualNetworkTapResponseOutputWithContext(ctx context.Context) VirtualNetworkTapResponseOutput {
	return o
}

func (o VirtualNetworkTapResponseOutput) ToVirtualNetworkTapResponsePtrOutput() VirtualNetworkTapResponsePtrOutput {
	return o.ToVirtualNetworkTapResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkTapResponseOutput) ToVirtualNetworkTapResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkTapResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *VirtualNetworkTapResponse {
		return &v
	}).(VirtualNetworkTapResponsePtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkTapResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkTapResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkTapResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkTapResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Virtual Network Tap Properties.
func (o VirtualNetworkTapResponseOutput) Properties() VirtualNetworkTapPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *VirtualNetworkTapPropertiesFormatResponse { return v.Properties }).(VirtualNetworkTapPropertiesFormatResponsePtrOutput)
}

// Resource tags.
func (o VirtualNetworkTapResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkTapResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VirtualNetworkTapResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkTapResponse)(nil)).Elem()
}

func (o VirtualNetworkTapResponsePtrOutput) ToVirtualNetworkTapResponsePtrOutput() VirtualNetworkTapResponsePtrOutput {
	return o
}

func (o VirtualNetworkTapResponsePtrOutput) ToVirtualNetworkTapResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkTapResponsePtrOutput {
	return o
}

func (o VirtualNetworkTapResponsePtrOutput) Elem() VirtualNetworkTapResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) VirtualNetworkTapResponse { return *v }).(VirtualNetworkTapResponseOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkTapResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkTapResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkTapResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkTapResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Virtual Network Tap Properties.
func (o VirtualNetworkTapResponsePtrOutput) Properties() VirtualNetworkTapPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *VirtualNetworkTapPropertiesFormatResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(VirtualNetworkTapPropertiesFormatResponsePtrOutput)
}

// Resource tags.
func (o VirtualNetworkTapResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkTapResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type VirtualNetworkTapResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkTapResponse)(nil)).Elem()
}

func (o VirtualNetworkTapResponseArrayOutput) ToVirtualNetworkTapResponseArrayOutput() VirtualNetworkTapResponseArrayOutput {
	return o
}

func (o VirtualNetworkTapResponseArrayOutput) ToVirtualNetworkTapResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkTapResponseArrayOutput {
	return o
}

func (o VirtualNetworkTapResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkTapResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkTapResponse {
		return vs[0].([]VirtualNetworkTapResponse)[vs[1].(int)]
	}).(VirtualNetworkTapResponseOutput)
}

// VirtualWAN Resource.
type VirtualWanType struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource location.
	Location string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Parameters for VirtualWAN
	Properties VirtualWanPropertiesResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VirtualWanTypeInput is an input type that accepts VirtualWanTypeArgs and VirtualWanTypeOutput values.
// You can construct a concrete instance of `VirtualWanTypeInput` via:
//
//          VirtualWanTypeArgs{...}
type VirtualWanTypeInput interface {
	pulumi.Input

	ToVirtualWanTypeOutput() VirtualWanTypeOutput
	ToVirtualWanTypeOutputWithContext(context.Context) VirtualWanTypeOutput
}

// VirtualWAN Resource.
type VirtualWanTypeArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Parameters for VirtualWAN
	Properties VirtualWanPropertiesResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VirtualWanTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualWanType)(nil)).Elem()
}

func (i VirtualWanTypeArgs) ToVirtualWanTypeOutput() VirtualWanTypeOutput {
	return i.ToVirtualWanTypeOutputWithContext(context.Background())
}

func (i VirtualWanTypeArgs) ToVirtualWanTypeOutputWithContext(ctx context.Context) VirtualWanTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualWanTypeOutput)
}

// VirtualWAN Resource.
type VirtualWanTypeOutput struct{ *pulumi.OutputState }

func (VirtualWanTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualWanType)(nil)).Elem()
}

func (o VirtualWanTypeOutput) ToVirtualWanTypeOutput() VirtualWanTypeOutput {
	return o
}

func (o VirtualWanTypeOutput) ToVirtualWanTypeOutputWithContext(ctx context.Context) VirtualWanTypeOutput {
	return o
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VirtualWanTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualWanType) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource location.
func (o VirtualWanTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualWanType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name.
func (o VirtualWanTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualWanType) string { return v.Name }).(pulumi.StringOutput)
}

// Parameters for VirtualWAN
func (o VirtualWanTypeOutput) Properties() VirtualWanPropertiesResponseOutput {
	return o.ApplyT(func(v VirtualWanType) VirtualWanPropertiesResponse { return v.Properties }).(VirtualWanPropertiesResponseOutput)
}

// Resource tags.
func (o VirtualWanTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualWanType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualWanTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualWanType) string { return v.Type }).(pulumi.StringOutput)
}

// Parameters for VirtualWAN
type VirtualWanProperties struct {
	// True if branch to branch traffic is allowed.
	AllowBranchToBranchTraffic *bool `pulumi:"allowBranchToBranchTraffic"`
	// True if Vnet to Vnet traffic is allowed.
	AllowVnetToVnetTraffic *bool `pulumi:"allowVnetToVnetTraffic"`
	// Vpn encryption to be disabled or not.
	DisableVpnEncryption *bool `pulumi:"disableVpnEncryption"`
	// The office local breakout category.
	Office365LocalBreakoutCategory *string `pulumi:"office365LocalBreakoutCategory"`
	// list of all P2SVpnServerConfigurations associated with the virtual wan.
	P2SVpnServerConfigurations []P2SVpnServerConfiguration `pulumi:"p2SVpnServerConfigurations"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The Security Provider name.
	SecurityProviderName *string `pulumi:"securityProviderName"`
}

// VirtualWanPropertiesInput is an input type that accepts VirtualWanPropertiesArgs and VirtualWanPropertiesOutput values.
// You can construct a concrete instance of `VirtualWanPropertiesInput` via:
//
//          VirtualWanPropertiesArgs{...}
type VirtualWanPropertiesInput interface {
	pulumi.Input

	ToVirtualWanPropertiesOutput() VirtualWanPropertiesOutput
	ToVirtualWanPropertiesOutputWithContext(context.Context) VirtualWanPropertiesOutput
}

// Parameters for VirtualWAN
type VirtualWanPropertiesArgs struct {
	// True if branch to branch traffic is allowed.
	AllowBranchToBranchTraffic pulumi.BoolPtrInput `pulumi:"allowBranchToBranchTraffic"`
	// True if Vnet to Vnet traffic is allowed.
	AllowVnetToVnetTraffic pulumi.BoolPtrInput `pulumi:"allowVnetToVnetTraffic"`
	// Vpn encryption to be disabled or not.
	DisableVpnEncryption pulumi.BoolPtrInput `pulumi:"disableVpnEncryption"`
	// The office local breakout category.
	Office365LocalBreakoutCategory pulumi.StringPtrInput `pulumi:"office365LocalBreakoutCategory"`
	// list of all P2SVpnServerConfigurations associated with the virtual wan.
	P2SVpnServerConfigurations P2SVpnServerConfigurationArrayInput `pulumi:"p2SVpnServerConfigurations"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The Security Provider name.
	SecurityProviderName pulumi.StringPtrInput `pulumi:"securityProviderName"`
}

func (VirtualWanPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualWanProperties)(nil)).Elem()
}

func (i VirtualWanPropertiesArgs) ToVirtualWanPropertiesOutput() VirtualWanPropertiesOutput {
	return i.ToVirtualWanPropertiesOutputWithContext(context.Background())
}

func (i VirtualWanPropertiesArgs) ToVirtualWanPropertiesOutputWithContext(ctx context.Context) VirtualWanPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualWanPropertiesOutput)
}

func (i VirtualWanPropertiesArgs) ToVirtualWanPropertiesPtrOutput() VirtualWanPropertiesPtrOutput {
	return i.ToVirtualWanPropertiesPtrOutputWithContext(context.Background())
}

func (i VirtualWanPropertiesArgs) ToVirtualWanPropertiesPtrOutputWithContext(ctx context.Context) VirtualWanPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualWanPropertiesOutput).ToVirtualWanPropertiesPtrOutputWithContext(ctx)
}

// VirtualWanPropertiesPtrInput is an input type that accepts VirtualWanPropertiesArgs, VirtualWanPropertiesPtr and VirtualWanPropertiesPtrOutput values.
// You can construct a concrete instance of `VirtualWanPropertiesPtrInput` via:
//
//          VirtualWanPropertiesArgs{...}
//
//  or:
//
//          nil
type VirtualWanPropertiesPtrInput interface {
	pulumi.Input

	ToVirtualWanPropertiesPtrOutput() VirtualWanPropertiesPtrOutput
	ToVirtualWanPropertiesPtrOutputWithContext(context.Context) VirtualWanPropertiesPtrOutput
}

type virtualWanPropertiesPtrType VirtualWanPropertiesArgs

func VirtualWanPropertiesPtr(v *VirtualWanPropertiesArgs) VirtualWanPropertiesPtrInput {
	return (*virtualWanPropertiesPtrType)(v)
}

func (*virtualWanPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualWanProperties)(nil)).Elem()
}

func (i *virtualWanPropertiesPtrType) ToVirtualWanPropertiesPtrOutput() VirtualWanPropertiesPtrOutput {
	return i.ToVirtualWanPropertiesPtrOutputWithContext(context.Background())
}

func (i *virtualWanPropertiesPtrType) ToVirtualWanPropertiesPtrOutputWithContext(ctx context.Context) VirtualWanPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualWanPropertiesPtrOutput)
}

// Parameters for VirtualWAN
type VirtualWanPropertiesOutput struct{ *pulumi.OutputState }

func (VirtualWanPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualWanProperties)(nil)).Elem()
}

func (o VirtualWanPropertiesOutput) ToVirtualWanPropertiesOutput() VirtualWanPropertiesOutput {
	return o
}

func (o VirtualWanPropertiesOutput) ToVirtualWanPropertiesOutputWithContext(ctx context.Context) VirtualWanPropertiesOutput {
	return o
}

func (o VirtualWanPropertiesOutput) ToVirtualWanPropertiesPtrOutput() VirtualWanPropertiesPtrOutput {
	return o.ToVirtualWanPropertiesPtrOutputWithContext(context.Background())
}

func (o VirtualWanPropertiesOutput) ToVirtualWanPropertiesPtrOutputWithContext(ctx context.Context) VirtualWanPropertiesPtrOutput {
	return o.ApplyT(func(v VirtualWanProperties) *VirtualWanProperties {
		return &v
	}).(VirtualWanPropertiesPtrOutput)
}

// True if branch to branch traffic is allowed.
func (o VirtualWanPropertiesOutput) AllowBranchToBranchTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualWanProperties) *bool { return v.AllowBranchToBranchTraffic }).(pulumi.BoolPtrOutput)
}

// True if Vnet to Vnet traffic is allowed.
func (o VirtualWanPropertiesOutput) AllowVnetToVnetTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualWanProperties) *bool { return v.AllowVnetToVnetTraffic }).(pulumi.BoolPtrOutput)
}

// Vpn encryption to be disabled or not.
func (o VirtualWanPropertiesOutput) DisableVpnEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualWanProperties) *bool { return v.DisableVpnEncryption }).(pulumi.BoolPtrOutput)
}

// The office local breakout category.
func (o VirtualWanPropertiesOutput) Office365LocalBreakoutCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualWanProperties) *string { return v.Office365LocalBreakoutCategory }).(pulumi.StringPtrOutput)
}

// list of all P2SVpnServerConfigurations associated with the virtual wan.
func (o VirtualWanPropertiesOutput) P2SVpnServerConfigurations() P2SVpnServerConfigurationArrayOutput {
	return o.ApplyT(func(v VirtualWanProperties) []P2SVpnServerConfiguration { return v.P2SVpnServerConfigurations }).(P2SVpnServerConfigurationArrayOutput)
}

// The provisioning state of the resource.
func (o VirtualWanPropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualWanProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The Security Provider name.
func (o VirtualWanPropertiesOutput) SecurityProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualWanProperties) *string { return v.SecurityProviderName }).(pulumi.StringPtrOutput)
}

type VirtualWanPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualWanPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualWanProperties)(nil)).Elem()
}

func (o VirtualWanPropertiesPtrOutput) ToVirtualWanPropertiesPtrOutput() VirtualWanPropertiesPtrOutput {
	return o
}

func (o VirtualWanPropertiesPtrOutput) ToVirtualWanPropertiesPtrOutputWithContext(ctx context.Context) VirtualWanPropertiesPtrOutput {
	return o
}

func (o VirtualWanPropertiesPtrOutput) Elem() VirtualWanPropertiesOutput {
	return o.ApplyT(func(v *VirtualWanProperties) VirtualWanProperties { return *v }).(VirtualWanPropertiesOutput)
}

// True if branch to branch traffic is allowed.
func (o VirtualWanPropertiesPtrOutput) AllowBranchToBranchTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualWanProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AllowBranchToBranchTraffic
	}).(pulumi.BoolPtrOutput)
}

// True if Vnet to Vnet traffic is allowed.
func (o VirtualWanPropertiesPtrOutput) AllowVnetToVnetTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualWanProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AllowVnetToVnetTraffic
	}).(pulumi.BoolPtrOutput)
}

// Vpn encryption to be disabled or not.
func (o VirtualWanPropertiesPtrOutput) DisableVpnEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualWanProperties) *bool {
		if v == nil {
			return nil
		}
		return v.DisableVpnEncryption
	}).(pulumi.BoolPtrOutput)
}

// The office local breakout category.
func (o VirtualWanPropertiesPtrOutput) Office365LocalBreakoutCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualWanProperties) *string {
		if v == nil {
			return nil
		}
		return v.Office365LocalBreakoutCategory
	}).(pulumi.StringPtrOutput)
}

// list of all P2SVpnServerConfigurations associated with the virtual wan.
func (o VirtualWanPropertiesPtrOutput) P2SVpnServerConfigurations() P2SVpnServerConfigurationArrayOutput {
	return o.ApplyT(func(v *VirtualWanProperties) []P2SVpnServerConfiguration {
		if v == nil {
			return nil
		}
		return v.P2SVpnServerConfigurations
	}).(P2SVpnServerConfigurationArrayOutput)
}

// The provisioning state of the resource.
func (o VirtualWanPropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualWanProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The Security Provider name.
func (o VirtualWanPropertiesPtrOutput) SecurityProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualWanProperties) *string {
		if v == nil {
			return nil
		}
		return v.SecurityProviderName
	}).(pulumi.StringPtrOutput)
}

// Parameters for VirtualWAN
type VirtualWanPropertiesResponse struct {
	// True if branch to branch traffic is allowed.
	AllowBranchToBranchTraffic *bool `pulumi:"allowBranchToBranchTraffic"`
	// True if Vnet to Vnet traffic is allowed.
	AllowVnetToVnetTraffic *bool `pulumi:"allowVnetToVnetTraffic"`
	// Vpn encryption to be disabled or not.
	DisableVpnEncryption *bool `pulumi:"disableVpnEncryption"`
	// The office local breakout category.
	Office365LocalBreakoutCategory *string `pulumi:"office365LocalBreakoutCategory"`
	// list of all P2SVpnServerConfigurations associated with the virtual wan.
	P2SVpnServerConfigurations []P2SVpnServerConfigurationResponse `pulumi:"p2SVpnServerConfigurations"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The Security Provider name.
	SecurityProviderName *string `pulumi:"securityProviderName"`
	// List of VirtualHubs in the VirtualWAN.
	VirtualHubs []SubResourceResponse `pulumi:"virtualHubs"`
	VpnSites    []SubResourceResponse `pulumi:"vpnSites"`
}

// VirtualWanPropertiesResponseInput is an input type that accepts VirtualWanPropertiesResponseArgs and VirtualWanPropertiesResponseOutput values.
// You can construct a concrete instance of `VirtualWanPropertiesResponseInput` via:
//
//          VirtualWanPropertiesResponseArgs{...}
type VirtualWanPropertiesResponseInput interface {
	pulumi.Input

	ToVirtualWanPropertiesResponseOutput() VirtualWanPropertiesResponseOutput
	ToVirtualWanPropertiesResponseOutputWithContext(context.Context) VirtualWanPropertiesResponseOutput
}

// Parameters for VirtualWAN
type VirtualWanPropertiesResponseArgs struct {
	// True if branch to branch traffic is allowed.
	AllowBranchToBranchTraffic pulumi.BoolPtrInput `pulumi:"allowBranchToBranchTraffic"`
	// True if Vnet to Vnet traffic is allowed.
	AllowVnetToVnetTraffic pulumi.BoolPtrInput `pulumi:"allowVnetToVnetTraffic"`
	// Vpn encryption to be disabled or not.
	DisableVpnEncryption pulumi.BoolPtrInput `pulumi:"disableVpnEncryption"`
	// The office local breakout category.
	Office365LocalBreakoutCategory pulumi.StringPtrInput `pulumi:"office365LocalBreakoutCategory"`
	// list of all P2SVpnServerConfigurations associated with the virtual wan.
	P2SVpnServerConfigurations P2SVpnServerConfigurationResponseArrayInput `pulumi:"p2SVpnServerConfigurations"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The Security Provider name.
	SecurityProviderName pulumi.StringPtrInput `pulumi:"securityProviderName"`
	// List of VirtualHubs in the VirtualWAN.
	VirtualHubs SubResourceResponseArrayInput `pulumi:"virtualHubs"`
	VpnSites    SubResourceResponseArrayInput `pulumi:"vpnSites"`
}

func (VirtualWanPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualWanPropertiesResponse)(nil)).Elem()
}

func (i VirtualWanPropertiesResponseArgs) ToVirtualWanPropertiesResponseOutput() VirtualWanPropertiesResponseOutput {
	return i.ToVirtualWanPropertiesResponseOutputWithContext(context.Background())
}

func (i VirtualWanPropertiesResponseArgs) ToVirtualWanPropertiesResponseOutputWithContext(ctx context.Context) VirtualWanPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualWanPropertiesResponseOutput)
}

func (i VirtualWanPropertiesResponseArgs) ToVirtualWanPropertiesResponsePtrOutput() VirtualWanPropertiesResponsePtrOutput {
	return i.ToVirtualWanPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i VirtualWanPropertiesResponseArgs) ToVirtualWanPropertiesResponsePtrOutputWithContext(ctx context.Context) VirtualWanPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualWanPropertiesResponseOutput).ToVirtualWanPropertiesResponsePtrOutputWithContext(ctx)
}

// VirtualWanPropertiesResponsePtrInput is an input type that accepts VirtualWanPropertiesResponseArgs, VirtualWanPropertiesResponsePtr and VirtualWanPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `VirtualWanPropertiesResponsePtrInput` via:
//
//          VirtualWanPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type VirtualWanPropertiesResponsePtrInput interface {
	pulumi.Input

	ToVirtualWanPropertiesResponsePtrOutput() VirtualWanPropertiesResponsePtrOutput
	ToVirtualWanPropertiesResponsePtrOutputWithContext(context.Context) VirtualWanPropertiesResponsePtrOutput
}

type virtualWanPropertiesResponsePtrType VirtualWanPropertiesResponseArgs

func VirtualWanPropertiesResponsePtr(v *VirtualWanPropertiesResponseArgs) VirtualWanPropertiesResponsePtrInput {
	return (*virtualWanPropertiesResponsePtrType)(v)
}

func (*virtualWanPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualWanPropertiesResponse)(nil)).Elem()
}

func (i *virtualWanPropertiesResponsePtrType) ToVirtualWanPropertiesResponsePtrOutput() VirtualWanPropertiesResponsePtrOutput {
	return i.ToVirtualWanPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *virtualWanPropertiesResponsePtrType) ToVirtualWanPropertiesResponsePtrOutputWithContext(ctx context.Context) VirtualWanPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualWanPropertiesResponsePtrOutput)
}

// Parameters for VirtualWAN
type VirtualWanPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VirtualWanPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualWanPropertiesResponse)(nil)).Elem()
}

func (o VirtualWanPropertiesResponseOutput) ToVirtualWanPropertiesResponseOutput() VirtualWanPropertiesResponseOutput {
	return o
}

func (o VirtualWanPropertiesResponseOutput) ToVirtualWanPropertiesResponseOutputWithContext(ctx context.Context) VirtualWanPropertiesResponseOutput {
	return o
}

func (o VirtualWanPropertiesResponseOutput) ToVirtualWanPropertiesResponsePtrOutput() VirtualWanPropertiesResponsePtrOutput {
	return o.ToVirtualWanPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o VirtualWanPropertiesResponseOutput) ToVirtualWanPropertiesResponsePtrOutputWithContext(ctx context.Context) VirtualWanPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VirtualWanPropertiesResponse) *VirtualWanPropertiesResponse {
		return &v
	}).(VirtualWanPropertiesResponsePtrOutput)
}

// True if branch to branch traffic is allowed.
func (o VirtualWanPropertiesResponseOutput) AllowBranchToBranchTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualWanPropertiesResponse) *bool { return v.AllowBranchToBranchTraffic }).(pulumi.BoolPtrOutput)
}

// True if Vnet to Vnet traffic is allowed.
func (o VirtualWanPropertiesResponseOutput) AllowVnetToVnetTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualWanPropertiesResponse) *bool { return v.AllowVnetToVnetTraffic }).(pulumi.BoolPtrOutput)
}

// Vpn encryption to be disabled or not.
func (o VirtualWanPropertiesResponseOutput) DisableVpnEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualWanPropertiesResponse) *bool { return v.DisableVpnEncryption }).(pulumi.BoolPtrOutput)
}

// The office local breakout category.
func (o VirtualWanPropertiesResponseOutput) Office365LocalBreakoutCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualWanPropertiesResponse) *string { return v.Office365LocalBreakoutCategory }).(pulumi.StringPtrOutput)
}

// list of all P2SVpnServerConfigurations associated with the virtual wan.
func (o VirtualWanPropertiesResponseOutput) P2SVpnServerConfigurations() P2SVpnServerConfigurationResponseArrayOutput {
	return o.ApplyT(func(v VirtualWanPropertiesResponse) []P2SVpnServerConfigurationResponse {
		return v.P2SVpnServerConfigurations
	}).(P2SVpnServerConfigurationResponseArrayOutput)
}

// The provisioning state of the resource.
func (o VirtualWanPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualWanPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The Security Provider name.
func (o VirtualWanPropertiesResponseOutput) SecurityProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualWanPropertiesResponse) *string { return v.SecurityProviderName }).(pulumi.StringPtrOutput)
}

// List of VirtualHubs in the VirtualWAN.
func (o VirtualWanPropertiesResponseOutput) VirtualHubs() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VirtualWanPropertiesResponse) []SubResourceResponse { return v.VirtualHubs }).(SubResourceResponseArrayOutput)
}

func (o VirtualWanPropertiesResponseOutput) VpnSites() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VirtualWanPropertiesResponse) []SubResourceResponse { return v.VpnSites }).(SubResourceResponseArrayOutput)
}

type VirtualWanPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualWanPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualWanPropertiesResponse)(nil)).Elem()
}

func (o VirtualWanPropertiesResponsePtrOutput) ToVirtualWanPropertiesResponsePtrOutput() VirtualWanPropertiesResponsePtrOutput {
	return o
}

func (o VirtualWanPropertiesResponsePtrOutput) ToVirtualWanPropertiesResponsePtrOutputWithContext(ctx context.Context) VirtualWanPropertiesResponsePtrOutput {
	return o
}

func (o VirtualWanPropertiesResponsePtrOutput) Elem() VirtualWanPropertiesResponseOutput {
	return o.ApplyT(func(v *VirtualWanPropertiesResponse) VirtualWanPropertiesResponse { return *v }).(VirtualWanPropertiesResponseOutput)
}

// True if branch to branch traffic is allowed.
func (o VirtualWanPropertiesResponsePtrOutput) AllowBranchToBranchTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualWanPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowBranchToBranchTraffic
	}).(pulumi.BoolPtrOutput)
}

// True if Vnet to Vnet traffic is allowed.
func (o VirtualWanPropertiesResponsePtrOutput) AllowVnetToVnetTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualWanPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowVnetToVnetTraffic
	}).(pulumi.BoolPtrOutput)
}

// Vpn encryption to be disabled or not.
func (o VirtualWanPropertiesResponsePtrOutput) DisableVpnEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualWanPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableVpnEncryption
	}).(pulumi.BoolPtrOutput)
}

// The office local breakout category.
func (o VirtualWanPropertiesResponsePtrOutput) Office365LocalBreakoutCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualWanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Office365LocalBreakoutCategory
	}).(pulumi.StringPtrOutput)
}

// list of all P2SVpnServerConfigurations associated with the virtual wan.
func (o VirtualWanPropertiesResponsePtrOutput) P2SVpnServerConfigurations() P2SVpnServerConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *VirtualWanPropertiesResponse) []P2SVpnServerConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.P2SVpnServerConfigurations
	}).(P2SVpnServerConfigurationResponseArrayOutput)
}

// The provisioning state of the resource.
func (o VirtualWanPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualWanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The Security Provider name.
func (o VirtualWanPropertiesResponsePtrOutput) SecurityProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualWanPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecurityProviderName
	}).(pulumi.StringPtrOutput)
}

// List of VirtualHubs in the VirtualWAN.
func (o VirtualWanPropertiesResponsePtrOutput) VirtualHubs() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *VirtualWanPropertiesResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.VirtualHubs
	}).(SubResourceResponseArrayOutput)
}

func (o VirtualWanPropertiesResponsePtrOutput) VpnSites() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *VirtualWanPropertiesResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.VpnSites
	}).(SubResourceResponseArrayOutput)
}

// VpnClientConfiguration for P2S client.
type VpnClientConfiguration struct {
	// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerAddress *string `pulumi:"radiusServerAddress"`
	// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerSecret *string `pulumi:"radiusServerSecret"`
	// The reference of the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool *AddressSpace `pulumi:"vpnClientAddressPool"`
	// VpnClientIpsecPolicies for virtual network gateway P2S client.
	VpnClientIpsecPolicies []IpsecPolicy `pulumi:"vpnClientIpsecPolicies"`
	// VpnClientProtocols for Virtual network gateway.
	VpnClientProtocols []string `pulumi:"vpnClientProtocols"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates []VpnClientRevokedCertificate `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for virtual network gateway.
	VpnClientRootCertificates []VpnClientRootCertificate `pulumi:"vpnClientRootCertificates"`
}

// VpnClientConfigurationInput is an input type that accepts VpnClientConfigurationArgs and VpnClientConfigurationOutput values.
// You can construct a concrete instance of `VpnClientConfigurationInput` via:
//
//          VpnClientConfigurationArgs{...}
type VpnClientConfigurationInput interface {
	pulumi.Input

	ToVpnClientConfigurationOutput() VpnClientConfigurationOutput
	ToVpnClientConfigurationOutputWithContext(context.Context) VpnClientConfigurationOutput
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationArgs struct {
	// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerAddress pulumi.StringPtrInput `pulumi:"radiusServerAddress"`
	// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerSecret pulumi.StringPtrInput `pulumi:"radiusServerSecret"`
	// The reference of the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool AddressSpacePtrInput `pulumi:"vpnClientAddressPool"`
	// VpnClientIpsecPolicies for virtual network gateway P2S client.
	VpnClientIpsecPolicies IpsecPolicyArrayInput `pulumi:"vpnClientIpsecPolicies"`
	// VpnClientProtocols for Virtual network gateway.
	VpnClientProtocols pulumi.StringArrayInput `pulumi:"vpnClientProtocols"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates VpnClientRevokedCertificateArrayInput `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for virtual network gateway.
	VpnClientRootCertificates VpnClientRootCertificateArrayInput `pulumi:"vpnClientRootCertificates"`
}

func (VpnClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfiguration)(nil)).Elem()
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationOutput() VpnClientConfigurationOutput {
	return i.ToVpnClientConfigurationOutputWithContext(context.Background())
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationOutputWithContext(ctx context.Context) VpnClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationOutput)
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return i.ToVpnClientConfigurationPtrOutputWithContext(context.Background())
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationOutput).ToVpnClientConfigurationPtrOutputWithContext(ctx)
}

// VpnClientConfigurationPtrInput is an input type that accepts VpnClientConfigurationArgs, VpnClientConfigurationPtr and VpnClientConfigurationPtrOutput values.
// You can construct a concrete instance of `VpnClientConfigurationPtrInput` via:
//
//          VpnClientConfigurationArgs{...}
//
//  or:
//
//          nil
type VpnClientConfigurationPtrInput interface {
	pulumi.Input

	ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput
	ToVpnClientConfigurationPtrOutputWithContext(context.Context) VpnClientConfigurationPtrOutput
}

type vpnClientConfigurationPtrType VpnClientConfigurationArgs

func VpnClientConfigurationPtr(v *VpnClientConfigurationArgs) VpnClientConfigurationPtrInput {
	return (*vpnClientConfigurationPtrType)(v)
}

func (*vpnClientConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfiguration)(nil)).Elem()
}

func (i *vpnClientConfigurationPtrType) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return i.ToVpnClientConfigurationPtrOutputWithContext(context.Background())
}

func (i *vpnClientConfigurationPtrType) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationPtrOutput)
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfiguration)(nil)).Elem()
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationOutput() VpnClientConfigurationOutput {
	return o
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationOutputWithContext(ctx context.Context) VpnClientConfigurationOutput {
	return o
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return o.ToVpnClientConfigurationPtrOutputWithContext(context.Background())
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *VpnClientConfiguration {
		return &v
	}).(VpnClientConfigurationPtrOutput)
}

// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *string { return v.RadiusServerAddress }).(pulumi.StringPtrOutput)
}

// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *string { return v.RadiusServerSecret }).(pulumi.StringPtrOutput)
}

// The reference of the address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationOutput) VpnClientAddressPool() AddressSpacePtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *AddressSpace { return v.VpnClientAddressPool }).(AddressSpacePtrOutput)
}

// VpnClientIpsecPolicies for virtual network gateway P2S client.
func (o VpnClientConfigurationOutput) VpnClientIpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []IpsecPolicy { return v.VpnClientIpsecPolicies }).(IpsecPolicyArrayOutput)
}

// VpnClientProtocols for Virtual network gateway.
func (o VpnClientConfigurationOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []string { return v.VpnClientProtocols }).(pulumi.StringArrayOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []VpnClientRevokedCertificate { return v.VpnClientRevokedCertificates }).(VpnClientRevokedCertificateArrayOutput)
}

// VpnClientRootCertificate for virtual network gateway.
func (o VpnClientConfigurationOutput) VpnClientRootCertificates() VpnClientRootCertificateArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []VpnClientRootCertificate { return v.VpnClientRootCertificates }).(VpnClientRootCertificateArrayOutput)
}

type VpnClientConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfiguration)(nil)).Elem()
}

func (o VpnClientConfigurationPtrOutput) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return o
}

func (o VpnClientConfigurationPtrOutput) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return o
}

func (o VpnClientConfigurationPtrOutput) Elem() VpnClientConfigurationOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) VpnClientConfiguration { return *v }).(VpnClientConfigurationOutput)
}

// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationPtrOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerAddress
	}).(pulumi.StringPtrOutput)
}

// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationPtrOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerSecret
	}).(pulumi.StringPtrOutput)
}

// The reference of the address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationPtrOutput) VpnClientAddressPool() AddressSpacePtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *AddressSpace {
		if v == nil {
			return nil
		}
		return v.VpnClientAddressPool
	}).(AddressSpacePtrOutput)
}

// VpnClientIpsecPolicies for virtual network gateway P2S client.
func (o VpnClientConfigurationPtrOutput) VpnClientIpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []IpsecPolicy {
		if v == nil {
			return nil
		}
		return v.VpnClientIpsecPolicies
	}).(IpsecPolicyArrayOutput)
}

// VpnClientProtocols for Virtual network gateway.
func (o VpnClientConfigurationPtrOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.VpnClientProtocols
	}).(pulumi.StringArrayOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationPtrOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []VpnClientRevokedCertificate {
		if v == nil {
			return nil
		}
		return v.VpnClientRevokedCertificates
	}).(VpnClientRevokedCertificateArrayOutput)
}

// VpnClientRootCertificate for virtual network gateway.
func (o VpnClientConfigurationPtrOutput) VpnClientRootCertificates() VpnClientRootCertificateArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []VpnClientRootCertificate {
		if v == nil {
			return nil
		}
		return v.VpnClientRootCertificates
	}).(VpnClientRootCertificateArrayOutput)
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationResponse struct {
	// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerAddress *string `pulumi:"radiusServerAddress"`
	// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerSecret *string `pulumi:"radiusServerSecret"`
	// The reference of the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool *AddressSpaceResponse `pulumi:"vpnClientAddressPool"`
	// VpnClientIpsecPolicies for virtual network gateway P2S client.
	VpnClientIpsecPolicies []IpsecPolicyResponse `pulumi:"vpnClientIpsecPolicies"`
	// VpnClientProtocols for Virtual network gateway.
	VpnClientProtocols []string `pulumi:"vpnClientProtocols"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates []VpnClientRevokedCertificateResponse `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for virtual network gateway.
	VpnClientRootCertificates []VpnClientRootCertificateResponse `pulumi:"vpnClientRootCertificates"`
}

// VpnClientConfigurationResponseInput is an input type that accepts VpnClientConfigurationResponseArgs and VpnClientConfigurationResponseOutput values.
// You can construct a concrete instance of `VpnClientConfigurationResponseInput` via:
//
//          VpnClientConfigurationResponseArgs{...}
type VpnClientConfigurationResponseInput interface {
	pulumi.Input

	ToVpnClientConfigurationResponseOutput() VpnClientConfigurationResponseOutput
	ToVpnClientConfigurationResponseOutputWithContext(context.Context) VpnClientConfigurationResponseOutput
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationResponseArgs struct {
	// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerAddress pulumi.StringPtrInput `pulumi:"radiusServerAddress"`
	// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerSecret pulumi.StringPtrInput `pulumi:"radiusServerSecret"`
	// The reference of the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool AddressSpaceResponsePtrInput `pulumi:"vpnClientAddressPool"`
	// VpnClientIpsecPolicies for virtual network gateway P2S client.
	VpnClientIpsecPolicies IpsecPolicyResponseArrayInput `pulumi:"vpnClientIpsecPolicies"`
	// VpnClientProtocols for Virtual network gateway.
	VpnClientProtocols pulumi.StringArrayInput `pulumi:"vpnClientProtocols"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates VpnClientRevokedCertificateResponseArrayInput `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for virtual network gateway.
	VpnClientRootCertificates VpnClientRootCertificateResponseArrayInput `pulumi:"vpnClientRootCertificates"`
}

func (VpnClientConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfigurationResponse)(nil)).Elem()
}

func (i VpnClientConfigurationResponseArgs) ToVpnClientConfigurationResponseOutput() VpnClientConfigurationResponseOutput {
	return i.ToVpnClientConfigurationResponseOutputWithContext(context.Background())
}

func (i VpnClientConfigurationResponseArgs) ToVpnClientConfigurationResponseOutputWithContext(ctx context.Context) VpnClientConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationResponseOutput)
}

func (i VpnClientConfigurationResponseArgs) ToVpnClientConfigurationResponsePtrOutput() VpnClientConfigurationResponsePtrOutput {
	return i.ToVpnClientConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i VpnClientConfigurationResponseArgs) ToVpnClientConfigurationResponsePtrOutputWithContext(ctx context.Context) VpnClientConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationResponseOutput).ToVpnClientConfigurationResponsePtrOutputWithContext(ctx)
}

// VpnClientConfigurationResponsePtrInput is an input type that accepts VpnClientConfigurationResponseArgs, VpnClientConfigurationResponsePtr and VpnClientConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `VpnClientConfigurationResponsePtrInput` via:
//
//          VpnClientConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type VpnClientConfigurationResponsePtrInput interface {
	pulumi.Input

	ToVpnClientConfigurationResponsePtrOutput() VpnClientConfigurationResponsePtrOutput
	ToVpnClientConfigurationResponsePtrOutputWithContext(context.Context) VpnClientConfigurationResponsePtrOutput
}

type vpnClientConfigurationResponsePtrType VpnClientConfigurationResponseArgs

func VpnClientConfigurationResponsePtr(v *VpnClientConfigurationResponseArgs) VpnClientConfigurationResponsePtrInput {
	return (*vpnClientConfigurationResponsePtrType)(v)
}

func (*vpnClientConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfigurationResponse)(nil)).Elem()
}

func (i *vpnClientConfigurationResponsePtrType) ToVpnClientConfigurationResponsePtrOutput() VpnClientConfigurationResponsePtrOutput {
	return i.ToVpnClientConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *vpnClientConfigurationResponsePtrType) ToVpnClientConfigurationResponsePtrOutputWithContext(ctx context.Context) VpnClientConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationResponsePtrOutput)
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfigurationResponse)(nil)).Elem()
}

func (o VpnClientConfigurationResponseOutput) ToVpnClientConfigurationResponseOutput() VpnClientConfigurationResponseOutput {
	return o
}

func (o VpnClientConfigurationResponseOutput) ToVpnClientConfigurationResponseOutputWithContext(ctx context.Context) VpnClientConfigurationResponseOutput {
	return o
}

func (o VpnClientConfigurationResponseOutput) ToVpnClientConfigurationResponsePtrOutput() VpnClientConfigurationResponsePtrOutput {
	return o.ToVpnClientConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o VpnClientConfigurationResponseOutput) ToVpnClientConfigurationResponsePtrOutputWithContext(ctx context.Context) VpnClientConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *VpnClientConfigurationResponse {
		return &v
	}).(VpnClientConfigurationResponsePtrOutput)
}

// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationResponseOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *string { return v.RadiusServerAddress }).(pulumi.StringPtrOutput)
}

// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationResponseOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *string { return v.RadiusServerSecret }).(pulumi.StringPtrOutput)
}

// The reference of the address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationResponseOutput) VpnClientAddressPool() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *AddressSpaceResponse { return v.VpnClientAddressPool }).(AddressSpaceResponsePtrOutput)
}

// VpnClientIpsecPolicies for virtual network gateway P2S client.
func (o VpnClientConfigurationResponseOutput) VpnClientIpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []IpsecPolicyResponse { return v.VpnClientIpsecPolicies }).(IpsecPolicyResponseArrayOutput)
}

// VpnClientProtocols for Virtual network gateway.
func (o VpnClientConfigurationResponseOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []string { return v.VpnClientProtocols }).(pulumi.StringArrayOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationResponseOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []VpnClientRevokedCertificateResponse {
		return v.VpnClientRevokedCertificates
	}).(VpnClientRevokedCertificateResponseArrayOutput)
}

// VpnClientRootCertificate for virtual network gateway.
func (o VpnClientConfigurationResponseOutput) VpnClientRootCertificates() VpnClientRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []VpnClientRootCertificateResponse {
		return v.VpnClientRootCertificates
	}).(VpnClientRootCertificateResponseArrayOutput)
}

type VpnClientConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfigurationResponse)(nil)).Elem()
}

func (o VpnClientConfigurationResponsePtrOutput) ToVpnClientConfigurationResponsePtrOutput() VpnClientConfigurationResponsePtrOutput {
	return o
}

func (o VpnClientConfigurationResponsePtrOutput) ToVpnClientConfigurationResponsePtrOutputWithContext(ctx context.Context) VpnClientConfigurationResponsePtrOutput {
	return o
}

func (o VpnClientConfigurationResponsePtrOutput) Elem() VpnClientConfigurationResponseOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) VpnClientConfigurationResponse { return *v }).(VpnClientConfigurationResponseOutput)
}

// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationResponsePtrOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerAddress
	}).(pulumi.StringPtrOutput)
}

// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationResponsePtrOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerSecret
	}).(pulumi.StringPtrOutput)
}

// The reference of the address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientAddressPool() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *AddressSpaceResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientAddressPool
	}).(AddressSpaceResponsePtrOutput)
}

// VpnClientIpsecPolicies for virtual network gateway P2S client.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientIpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []IpsecPolicyResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientIpsecPolicies
	}).(IpsecPolicyResponseArrayOutput)
}

// VpnClientProtocols for Virtual network gateway.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.VpnClientProtocols
	}).(pulumi.StringArrayOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []VpnClientRevokedCertificateResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientRevokedCertificates
	}).(VpnClientRevokedCertificateResponseArrayOutput)
}

// VpnClientRootCertificate for virtual network gateway.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientRootCertificates() VpnClientRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []VpnClientRootCertificateResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientRootCertificates
	}).(VpnClientRootCertificateResponseArrayOutput)
}

// VpnClientConnectionHealth properties
type VpnClientConnectionHealth struct {
	// List of allocated ip addresses to the connected p2s vpn clients.
	AllocatedIpAddresses []string `pulumi:"allocatedIpAddresses"`
	// The total of p2s vpn clients connected at this time to this P2SVpnGateway.
	VpnClientConnectionsCount *int `pulumi:"vpnClientConnectionsCount"`
}

// VpnClientConnectionHealthInput is an input type that accepts VpnClientConnectionHealthArgs and VpnClientConnectionHealthOutput values.
// You can construct a concrete instance of `VpnClientConnectionHealthInput` via:
//
//          VpnClientConnectionHealthArgs{...}
type VpnClientConnectionHealthInput interface {
	pulumi.Input

	ToVpnClientConnectionHealthOutput() VpnClientConnectionHealthOutput
	ToVpnClientConnectionHealthOutputWithContext(context.Context) VpnClientConnectionHealthOutput
}

// VpnClientConnectionHealth properties
type VpnClientConnectionHealthArgs struct {
	// List of allocated ip addresses to the connected p2s vpn clients.
	AllocatedIpAddresses pulumi.StringArrayInput `pulumi:"allocatedIpAddresses"`
	// The total of p2s vpn clients connected at this time to this P2SVpnGateway.
	VpnClientConnectionsCount pulumi.IntPtrInput `pulumi:"vpnClientConnectionsCount"`
}

func (VpnClientConnectionHealthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConnectionHealth)(nil)).Elem()
}

func (i VpnClientConnectionHealthArgs) ToVpnClientConnectionHealthOutput() VpnClientConnectionHealthOutput {
	return i.ToVpnClientConnectionHealthOutputWithContext(context.Background())
}

func (i VpnClientConnectionHealthArgs) ToVpnClientConnectionHealthOutputWithContext(ctx context.Context) VpnClientConnectionHealthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConnectionHealthOutput)
}

// VpnClientConnectionHealth properties
type VpnClientConnectionHealthOutput struct{ *pulumi.OutputState }

func (VpnClientConnectionHealthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConnectionHealth)(nil)).Elem()
}

func (o VpnClientConnectionHealthOutput) ToVpnClientConnectionHealthOutput() VpnClientConnectionHealthOutput {
	return o
}

func (o VpnClientConnectionHealthOutput) ToVpnClientConnectionHealthOutputWithContext(ctx context.Context) VpnClientConnectionHealthOutput {
	return o
}

// List of allocated ip addresses to the connected p2s vpn clients.
func (o VpnClientConnectionHealthOutput) AllocatedIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnClientConnectionHealth) []string { return v.AllocatedIpAddresses }).(pulumi.StringArrayOutput)
}

// The total of p2s vpn clients connected at this time to this P2SVpnGateway.
func (o VpnClientConnectionHealthOutput) VpnClientConnectionsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnClientConnectionHealth) *int { return v.VpnClientConnectionsCount }).(pulumi.IntPtrOutput)
}

// VpnClientConnectionHealth properties
type VpnClientConnectionHealthResponse struct {
	// List of allocated ip addresses to the connected p2s vpn clients.
	AllocatedIpAddresses []string `pulumi:"allocatedIpAddresses"`
	// Total of the Egress Bytes Transferred in this connection
	TotalEgressBytesTransferred int `pulumi:"totalEgressBytesTransferred"`
	// Total of the Ingress Bytes Transferred in this P2S Vpn connection
	TotalIngressBytesTransferred int `pulumi:"totalIngressBytesTransferred"`
	// The total of p2s vpn clients connected at this time to this P2SVpnGateway.
	VpnClientConnectionsCount *int `pulumi:"vpnClientConnectionsCount"`
}

// VpnClientConnectionHealthResponseInput is an input type that accepts VpnClientConnectionHealthResponseArgs and VpnClientConnectionHealthResponseOutput values.
// You can construct a concrete instance of `VpnClientConnectionHealthResponseInput` via:
//
//          VpnClientConnectionHealthResponseArgs{...}
type VpnClientConnectionHealthResponseInput interface {
	pulumi.Input

	ToVpnClientConnectionHealthResponseOutput() VpnClientConnectionHealthResponseOutput
	ToVpnClientConnectionHealthResponseOutputWithContext(context.Context) VpnClientConnectionHealthResponseOutput
}

// VpnClientConnectionHealth properties
type VpnClientConnectionHealthResponseArgs struct {
	// List of allocated ip addresses to the connected p2s vpn clients.
	AllocatedIpAddresses pulumi.StringArrayInput `pulumi:"allocatedIpAddresses"`
	// Total of the Egress Bytes Transferred in this connection
	TotalEgressBytesTransferred pulumi.IntInput `pulumi:"totalEgressBytesTransferred"`
	// Total of the Ingress Bytes Transferred in this P2S Vpn connection
	TotalIngressBytesTransferred pulumi.IntInput `pulumi:"totalIngressBytesTransferred"`
	// The total of p2s vpn clients connected at this time to this P2SVpnGateway.
	VpnClientConnectionsCount pulumi.IntPtrInput `pulumi:"vpnClientConnectionsCount"`
}

func (VpnClientConnectionHealthResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConnectionHealthResponse)(nil)).Elem()
}

func (i VpnClientConnectionHealthResponseArgs) ToVpnClientConnectionHealthResponseOutput() VpnClientConnectionHealthResponseOutput {
	return i.ToVpnClientConnectionHealthResponseOutputWithContext(context.Background())
}

func (i VpnClientConnectionHealthResponseArgs) ToVpnClientConnectionHealthResponseOutputWithContext(ctx context.Context) VpnClientConnectionHealthResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConnectionHealthResponseOutput)
}

func (i VpnClientConnectionHealthResponseArgs) ToVpnClientConnectionHealthResponsePtrOutput() VpnClientConnectionHealthResponsePtrOutput {
	return i.ToVpnClientConnectionHealthResponsePtrOutputWithContext(context.Background())
}

func (i VpnClientConnectionHealthResponseArgs) ToVpnClientConnectionHealthResponsePtrOutputWithContext(ctx context.Context) VpnClientConnectionHealthResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConnectionHealthResponseOutput).ToVpnClientConnectionHealthResponsePtrOutputWithContext(ctx)
}

// VpnClientConnectionHealthResponsePtrInput is an input type that accepts VpnClientConnectionHealthResponseArgs, VpnClientConnectionHealthResponsePtr and VpnClientConnectionHealthResponsePtrOutput values.
// You can construct a concrete instance of `VpnClientConnectionHealthResponsePtrInput` via:
//
//          VpnClientConnectionHealthResponseArgs{...}
//
//  or:
//
//          nil
type VpnClientConnectionHealthResponsePtrInput interface {
	pulumi.Input

	ToVpnClientConnectionHealthResponsePtrOutput() VpnClientConnectionHealthResponsePtrOutput
	ToVpnClientConnectionHealthResponsePtrOutputWithContext(context.Context) VpnClientConnectionHealthResponsePtrOutput
}

type vpnClientConnectionHealthResponsePtrType VpnClientConnectionHealthResponseArgs

func VpnClientConnectionHealthResponsePtr(v *VpnClientConnectionHealthResponseArgs) VpnClientConnectionHealthResponsePtrInput {
	return (*vpnClientConnectionHealthResponsePtrType)(v)
}

func (*vpnClientConnectionHealthResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConnectionHealthResponse)(nil)).Elem()
}

func (i *vpnClientConnectionHealthResponsePtrType) ToVpnClientConnectionHealthResponsePtrOutput() VpnClientConnectionHealthResponsePtrOutput {
	return i.ToVpnClientConnectionHealthResponsePtrOutputWithContext(context.Background())
}

func (i *vpnClientConnectionHealthResponsePtrType) ToVpnClientConnectionHealthResponsePtrOutputWithContext(ctx context.Context) VpnClientConnectionHealthResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConnectionHealthResponsePtrOutput)
}

// VpnClientConnectionHealth properties
type VpnClientConnectionHealthResponseOutput struct{ *pulumi.OutputState }

func (VpnClientConnectionHealthResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConnectionHealthResponse)(nil)).Elem()
}

func (o VpnClientConnectionHealthResponseOutput) ToVpnClientConnectionHealthResponseOutput() VpnClientConnectionHealthResponseOutput {
	return o
}

func (o VpnClientConnectionHealthResponseOutput) ToVpnClientConnectionHealthResponseOutputWithContext(ctx context.Context) VpnClientConnectionHealthResponseOutput {
	return o
}

func (o VpnClientConnectionHealthResponseOutput) ToVpnClientConnectionHealthResponsePtrOutput() VpnClientConnectionHealthResponsePtrOutput {
	return o.ToVpnClientConnectionHealthResponsePtrOutputWithContext(context.Background())
}

func (o VpnClientConnectionHealthResponseOutput) ToVpnClientConnectionHealthResponsePtrOutputWithContext(ctx context.Context) VpnClientConnectionHealthResponsePtrOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthResponse) *VpnClientConnectionHealthResponse {
		return &v
	}).(VpnClientConnectionHealthResponsePtrOutput)
}

// List of allocated ip addresses to the connected p2s vpn clients.
func (o VpnClientConnectionHealthResponseOutput) AllocatedIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthResponse) []string { return v.AllocatedIpAddresses }).(pulumi.StringArrayOutput)
}

// Total of the Egress Bytes Transferred in this connection
func (o VpnClientConnectionHealthResponseOutput) TotalEgressBytesTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthResponse) int { return v.TotalEgressBytesTransferred }).(pulumi.IntOutput)
}

// Total of the Ingress Bytes Transferred in this P2S Vpn connection
func (o VpnClientConnectionHealthResponseOutput) TotalIngressBytesTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthResponse) int { return v.TotalIngressBytesTransferred }).(pulumi.IntOutput)
}

// The total of p2s vpn clients connected at this time to this P2SVpnGateway.
func (o VpnClientConnectionHealthResponseOutput) VpnClientConnectionsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthResponse) *int { return v.VpnClientConnectionsCount }).(pulumi.IntPtrOutput)
}

type VpnClientConnectionHealthResponsePtrOutput struct{ *pulumi.OutputState }

func (VpnClientConnectionHealthResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConnectionHealthResponse)(nil)).Elem()
}

func (o VpnClientConnectionHealthResponsePtrOutput) ToVpnClientConnectionHealthResponsePtrOutput() VpnClientConnectionHealthResponsePtrOutput {
	return o
}

func (o VpnClientConnectionHealthResponsePtrOutput) ToVpnClientConnectionHealthResponsePtrOutputWithContext(ctx context.Context) VpnClientConnectionHealthResponsePtrOutput {
	return o
}

func (o VpnClientConnectionHealthResponsePtrOutput) Elem() VpnClientConnectionHealthResponseOutput {
	return o.ApplyT(func(v *VpnClientConnectionHealthResponse) VpnClientConnectionHealthResponse { return *v }).(VpnClientConnectionHealthResponseOutput)
}

// List of allocated ip addresses to the connected p2s vpn clients.
func (o VpnClientConnectionHealthResponsePtrOutput) AllocatedIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnClientConnectionHealthResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllocatedIpAddresses
	}).(pulumi.StringArrayOutput)
}

// Total of the Egress Bytes Transferred in this connection
func (o VpnClientConnectionHealthResponsePtrOutput) TotalEgressBytesTransferred() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnClientConnectionHealthResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TotalEgressBytesTransferred
	}).(pulumi.IntPtrOutput)
}

// Total of the Ingress Bytes Transferred in this P2S Vpn connection
func (o VpnClientConnectionHealthResponsePtrOutput) TotalIngressBytesTransferred() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnClientConnectionHealthResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TotalIngressBytesTransferred
	}).(pulumi.IntPtrOutput)
}

// The total of p2s vpn clients connected at this time to this P2SVpnGateway.
func (o VpnClientConnectionHealthResponsePtrOutput) VpnClientConnectionsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnClientConnectionHealthResponse) *int {
		if v == nil {
			return nil
		}
		return v.VpnClientConnectionsCount
	}).(pulumi.IntPtrOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificate struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the vpn client revoked certificate.
	Properties *VpnClientRevokedCertificatePropertiesFormat `pulumi:"properties"`
}

// VpnClientRevokedCertificateInput is an input type that accepts VpnClientRevokedCertificateArgs and VpnClientRevokedCertificateOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificateInput` via:
//
//          VpnClientRevokedCertificateArgs{...}
type VpnClientRevokedCertificateInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificateOutput() VpnClientRevokedCertificateOutput
	ToVpnClientRevokedCertificateOutputWithContext(context.Context) VpnClientRevokedCertificateOutput
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the vpn client revoked certificate.
	Properties VpnClientRevokedCertificatePropertiesFormatPtrInput `pulumi:"properties"`
}

func (VpnClientRevokedCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificate)(nil)).Elem()
}

func (i VpnClientRevokedCertificateArgs) ToVpnClientRevokedCertificateOutput() VpnClientRevokedCertificateOutput {
	return i.ToVpnClientRevokedCertificateOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificateArgs) ToVpnClientRevokedCertificateOutputWithContext(ctx context.Context) VpnClientRevokedCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificateOutput)
}

// VpnClientRevokedCertificateArrayInput is an input type that accepts VpnClientRevokedCertificateArray and VpnClientRevokedCertificateArrayOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificateArrayInput` via:
//
//          VpnClientRevokedCertificateArray{ VpnClientRevokedCertificateArgs{...} }
type VpnClientRevokedCertificateArrayInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificateArrayOutput() VpnClientRevokedCertificateArrayOutput
	ToVpnClientRevokedCertificateArrayOutputWithContext(context.Context) VpnClientRevokedCertificateArrayOutput
}

type VpnClientRevokedCertificateArray []VpnClientRevokedCertificateInput

func (VpnClientRevokedCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificate)(nil)).Elem()
}

func (i VpnClientRevokedCertificateArray) ToVpnClientRevokedCertificateArrayOutput() VpnClientRevokedCertificateArrayOutput {
	return i.ToVpnClientRevokedCertificateArrayOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificateArray) ToVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificateArrayOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificate)(nil)).Elem()
}

func (o VpnClientRevokedCertificateOutput) ToVpnClientRevokedCertificateOutput() VpnClientRevokedCertificateOutput {
	return o
}

func (o VpnClientRevokedCertificateOutput) ToVpnClientRevokedCertificateOutputWithContext(ctx context.Context) VpnClientRevokedCertificateOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnClientRevokedCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VpnClientRevokedCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRevokedCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the vpn client revoked certificate.
func (o VpnClientRevokedCertificateOutput) Properties() VpnClientRevokedCertificatePropertiesFormatPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificate) *VpnClientRevokedCertificatePropertiesFormat { return v.Properties }).(VpnClientRevokedCertificatePropertiesFormatPtrOutput)
}

type VpnClientRevokedCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificate)(nil)).Elem()
}

func (o VpnClientRevokedCertificateArrayOutput) ToVpnClientRevokedCertificateArrayOutput() VpnClientRevokedCertificateArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateArrayOutput) ToVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateArrayOutput) Index(i pulumi.IntInput) VpnClientRevokedCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRevokedCertificate {
		return vs[0].([]VpnClientRevokedCertificate)[vs[1].(int)]
	}).(VpnClientRevokedCertificateOutput)
}

// Properties of the revoked VPN client certificate of virtual network gateway.
type VpnClientRevokedCertificatePropertiesFormat struct {
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// VpnClientRevokedCertificatePropertiesFormatInput is an input type that accepts VpnClientRevokedCertificatePropertiesFormatArgs and VpnClientRevokedCertificatePropertiesFormatOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificatePropertiesFormatInput` via:
//
//          VpnClientRevokedCertificatePropertiesFormatArgs{...}
type VpnClientRevokedCertificatePropertiesFormatInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificatePropertiesFormatOutput() VpnClientRevokedCertificatePropertiesFormatOutput
	ToVpnClientRevokedCertificatePropertiesFormatOutputWithContext(context.Context) VpnClientRevokedCertificatePropertiesFormatOutput
}

// Properties of the revoked VPN client certificate of virtual network gateway.
type VpnClientRevokedCertificatePropertiesFormatArgs struct {
	// The revoked VPN client certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (VpnClientRevokedCertificatePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificatePropertiesFormat)(nil)).Elem()
}

func (i VpnClientRevokedCertificatePropertiesFormatArgs) ToVpnClientRevokedCertificatePropertiesFormatOutput() VpnClientRevokedCertificatePropertiesFormatOutput {
	return i.ToVpnClientRevokedCertificatePropertiesFormatOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificatePropertiesFormatArgs) ToVpnClientRevokedCertificatePropertiesFormatOutputWithContext(ctx context.Context) VpnClientRevokedCertificatePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificatePropertiesFormatOutput)
}

func (i VpnClientRevokedCertificatePropertiesFormatArgs) ToVpnClientRevokedCertificatePropertiesFormatPtrOutput() VpnClientRevokedCertificatePropertiesFormatPtrOutput {
	return i.ToVpnClientRevokedCertificatePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificatePropertiesFormatArgs) ToVpnClientRevokedCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) VpnClientRevokedCertificatePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificatePropertiesFormatOutput).ToVpnClientRevokedCertificatePropertiesFormatPtrOutputWithContext(ctx)
}

// VpnClientRevokedCertificatePropertiesFormatPtrInput is an input type that accepts VpnClientRevokedCertificatePropertiesFormatArgs, VpnClientRevokedCertificatePropertiesFormatPtr and VpnClientRevokedCertificatePropertiesFormatPtrOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificatePropertiesFormatPtrInput` via:
//
//          VpnClientRevokedCertificatePropertiesFormatArgs{...}
//
//  or:
//
//          nil
type VpnClientRevokedCertificatePropertiesFormatPtrInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificatePropertiesFormatPtrOutput() VpnClientRevokedCertificatePropertiesFormatPtrOutput
	ToVpnClientRevokedCertificatePropertiesFormatPtrOutputWithContext(context.Context) VpnClientRevokedCertificatePropertiesFormatPtrOutput
}

type vpnClientRevokedCertificatePropertiesFormatPtrType VpnClientRevokedCertificatePropertiesFormatArgs

func VpnClientRevokedCertificatePropertiesFormatPtr(v *VpnClientRevokedCertificatePropertiesFormatArgs) VpnClientRevokedCertificatePropertiesFormatPtrInput {
	return (*vpnClientRevokedCertificatePropertiesFormatPtrType)(v)
}

func (*vpnClientRevokedCertificatePropertiesFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientRevokedCertificatePropertiesFormat)(nil)).Elem()
}

func (i *vpnClientRevokedCertificatePropertiesFormatPtrType) ToVpnClientRevokedCertificatePropertiesFormatPtrOutput() VpnClientRevokedCertificatePropertiesFormatPtrOutput {
	return i.ToVpnClientRevokedCertificatePropertiesFormatPtrOutputWithContext(context.Background())
}

func (i *vpnClientRevokedCertificatePropertiesFormatPtrType) ToVpnClientRevokedCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) VpnClientRevokedCertificatePropertiesFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificatePropertiesFormatPtrOutput)
}

// Properties of the revoked VPN client certificate of virtual network gateway.
type VpnClientRevokedCertificatePropertiesFormatOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificatePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificatePropertiesFormat)(nil)).Elem()
}

func (o VpnClientRevokedCertificatePropertiesFormatOutput) ToVpnClientRevokedCertificatePropertiesFormatOutput() VpnClientRevokedCertificatePropertiesFormatOutput {
	return o
}

func (o VpnClientRevokedCertificatePropertiesFormatOutput) ToVpnClientRevokedCertificatePropertiesFormatOutputWithContext(ctx context.Context) VpnClientRevokedCertificatePropertiesFormatOutput {
	return o
}

func (o VpnClientRevokedCertificatePropertiesFormatOutput) ToVpnClientRevokedCertificatePropertiesFormatPtrOutput() VpnClientRevokedCertificatePropertiesFormatPtrOutput {
	return o.ToVpnClientRevokedCertificatePropertiesFormatPtrOutputWithContext(context.Background())
}

func (o VpnClientRevokedCertificatePropertiesFormatOutput) ToVpnClientRevokedCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) VpnClientRevokedCertificatePropertiesFormatPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificatePropertiesFormat) *VpnClientRevokedCertificatePropertiesFormat {
		return &v
	}).(VpnClientRevokedCertificatePropertiesFormatPtrOutput)
}

// The revoked VPN client certificate thumbprint.
func (o VpnClientRevokedCertificatePropertiesFormatOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificatePropertiesFormat) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnClientRevokedCertificatePropertiesFormatPtrOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificatePropertiesFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientRevokedCertificatePropertiesFormat)(nil)).Elem()
}

func (o VpnClientRevokedCertificatePropertiesFormatPtrOutput) ToVpnClientRevokedCertificatePropertiesFormatPtrOutput() VpnClientRevokedCertificatePropertiesFormatPtrOutput {
	return o
}

func (o VpnClientRevokedCertificatePropertiesFormatPtrOutput) ToVpnClientRevokedCertificatePropertiesFormatPtrOutputWithContext(ctx context.Context) VpnClientRevokedCertificatePropertiesFormatPtrOutput {
	return o
}

func (o VpnClientRevokedCertificatePropertiesFormatPtrOutput) Elem() VpnClientRevokedCertificatePropertiesFormatOutput {
	return o.ApplyT(func(v *VpnClientRevokedCertificatePropertiesFormat) VpnClientRevokedCertificatePropertiesFormat {
		return *v
	}).(VpnClientRevokedCertificatePropertiesFormatOutput)
}

// The revoked VPN client certificate thumbprint.
func (o VpnClientRevokedCertificatePropertiesFormatPtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientRevokedCertificatePropertiesFormat) *string {
		if v == nil {
			return nil
		}
		return v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// Properties of the revoked VPN client certificate of virtual network gateway.
type VpnClientRevokedCertificatePropertiesFormatResponse struct {
	// The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// VpnClientRevokedCertificatePropertiesFormatResponseInput is an input type that accepts VpnClientRevokedCertificatePropertiesFormatResponseArgs and VpnClientRevokedCertificatePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificatePropertiesFormatResponseInput` via:
//
//          VpnClientRevokedCertificatePropertiesFormatResponseArgs{...}
type VpnClientRevokedCertificatePropertiesFormatResponseInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificatePropertiesFormatResponseOutput() VpnClientRevokedCertificatePropertiesFormatResponseOutput
	ToVpnClientRevokedCertificatePropertiesFormatResponseOutputWithContext(context.Context) VpnClientRevokedCertificatePropertiesFormatResponseOutput
}

// Properties of the revoked VPN client certificate of virtual network gateway.
type VpnClientRevokedCertificatePropertiesFormatResponseArgs struct {
	// The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (VpnClientRevokedCertificatePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (i VpnClientRevokedCertificatePropertiesFormatResponseArgs) ToVpnClientRevokedCertificatePropertiesFormatResponseOutput() VpnClientRevokedCertificatePropertiesFormatResponseOutput {
	return i.ToVpnClientRevokedCertificatePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificatePropertiesFormatResponseArgs) ToVpnClientRevokedCertificatePropertiesFormatResponseOutputWithContext(ctx context.Context) VpnClientRevokedCertificatePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificatePropertiesFormatResponseOutput)
}

func (i VpnClientRevokedCertificatePropertiesFormatResponseArgs) ToVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput() VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput {
	return i.ToVpnClientRevokedCertificatePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificatePropertiesFormatResponseArgs) ToVpnClientRevokedCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificatePropertiesFormatResponseOutput).ToVpnClientRevokedCertificatePropertiesFormatResponsePtrOutputWithContext(ctx)
}

// VpnClientRevokedCertificatePropertiesFormatResponsePtrInput is an input type that accepts VpnClientRevokedCertificatePropertiesFormatResponseArgs, VpnClientRevokedCertificatePropertiesFormatResponsePtr and VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificatePropertiesFormatResponsePtrInput` via:
//
//          VpnClientRevokedCertificatePropertiesFormatResponseArgs{...}
//
//  or:
//
//          nil
type VpnClientRevokedCertificatePropertiesFormatResponsePtrInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput() VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput
	ToVpnClientRevokedCertificatePropertiesFormatResponsePtrOutputWithContext(context.Context) VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput
}

type vpnClientRevokedCertificatePropertiesFormatResponsePtrType VpnClientRevokedCertificatePropertiesFormatResponseArgs

func VpnClientRevokedCertificatePropertiesFormatResponsePtr(v *VpnClientRevokedCertificatePropertiesFormatResponseArgs) VpnClientRevokedCertificatePropertiesFormatResponsePtrInput {
	return (*vpnClientRevokedCertificatePropertiesFormatResponsePtrType)(v)
}

func (*vpnClientRevokedCertificatePropertiesFormatResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientRevokedCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (i *vpnClientRevokedCertificatePropertiesFormatResponsePtrType) ToVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput() VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput {
	return i.ToVpnClientRevokedCertificatePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (i *vpnClientRevokedCertificatePropertiesFormatResponsePtrType) ToVpnClientRevokedCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput)
}

// Properties of the revoked VPN client certificate of virtual network gateway.
type VpnClientRevokedCertificatePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificatePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (o VpnClientRevokedCertificatePropertiesFormatResponseOutput) ToVpnClientRevokedCertificatePropertiesFormatResponseOutput() VpnClientRevokedCertificatePropertiesFormatResponseOutput {
	return o
}

func (o VpnClientRevokedCertificatePropertiesFormatResponseOutput) ToVpnClientRevokedCertificatePropertiesFormatResponseOutputWithContext(ctx context.Context) VpnClientRevokedCertificatePropertiesFormatResponseOutput {
	return o
}

func (o VpnClientRevokedCertificatePropertiesFormatResponseOutput) ToVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput() VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput {
	return o.ToVpnClientRevokedCertificatePropertiesFormatResponsePtrOutputWithContext(context.Background())
}

func (o VpnClientRevokedCertificatePropertiesFormatResponseOutput) ToVpnClientRevokedCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificatePropertiesFormatResponse) *VpnClientRevokedCertificatePropertiesFormatResponse {
		return &v
	}).(VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput)
}

// The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VpnClientRevokedCertificatePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificatePropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The revoked VPN client certificate thumbprint.
func (o VpnClientRevokedCertificatePropertiesFormatResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificatePropertiesFormatResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientRevokedCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (o VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput) ToVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput() VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput {
	return o
}

func (o VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput) ToVpnClientRevokedCertificatePropertiesFormatResponsePtrOutputWithContext(ctx context.Context) VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput {
	return o
}

func (o VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput) Elem() VpnClientRevokedCertificatePropertiesFormatResponseOutput {
	return o.ApplyT(func(v *VpnClientRevokedCertificatePropertiesFormatResponse) VpnClientRevokedCertificatePropertiesFormatResponse {
		return *v
	}).(VpnClientRevokedCertificatePropertiesFormatResponseOutput)
}

// The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientRevokedCertificatePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The revoked VPN client certificate thumbprint.
func (o VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientRevokedCertificatePropertiesFormatResponse) *string {
		if v == nil {
			return nil
		}
		return v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the vpn client revoked certificate.
	Properties *VpnClientRevokedCertificatePropertiesFormatResponse `pulumi:"properties"`
}

// VpnClientRevokedCertificateResponseInput is an input type that accepts VpnClientRevokedCertificateResponseArgs and VpnClientRevokedCertificateResponseOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificateResponseInput` via:
//
//          VpnClientRevokedCertificateResponseArgs{...}
type VpnClientRevokedCertificateResponseInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificateResponseOutput() VpnClientRevokedCertificateResponseOutput
	ToVpnClientRevokedCertificateResponseOutputWithContext(context.Context) VpnClientRevokedCertificateResponseOutput
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the vpn client revoked certificate.
	Properties VpnClientRevokedCertificatePropertiesFormatResponsePtrInput `pulumi:"properties"`
}

func (VpnClientRevokedCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (i VpnClientRevokedCertificateResponseArgs) ToVpnClientRevokedCertificateResponseOutput() VpnClientRevokedCertificateResponseOutput {
	return i.ToVpnClientRevokedCertificateResponseOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificateResponseArgs) ToVpnClientRevokedCertificateResponseOutputWithContext(ctx context.Context) VpnClientRevokedCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificateResponseOutput)
}

// VpnClientRevokedCertificateResponseArrayInput is an input type that accepts VpnClientRevokedCertificateResponseArray and VpnClientRevokedCertificateResponseArrayOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificateResponseArrayInput` via:
//
//          VpnClientRevokedCertificateResponseArray{ VpnClientRevokedCertificateResponseArgs{...} }
type VpnClientRevokedCertificateResponseArrayInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificateResponseArrayOutput() VpnClientRevokedCertificateResponseArrayOutput
	ToVpnClientRevokedCertificateResponseArrayOutputWithContext(context.Context) VpnClientRevokedCertificateResponseArrayOutput
}

type VpnClientRevokedCertificateResponseArray []VpnClientRevokedCertificateResponseInput

func (VpnClientRevokedCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (i VpnClientRevokedCertificateResponseArray) ToVpnClientRevokedCertificateResponseArrayOutput() VpnClientRevokedCertificateResponseArrayOutput {
	return i.ToVpnClientRevokedCertificateResponseArrayOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificateResponseArray) ToVpnClientRevokedCertificateResponseArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificateResponseArrayOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o VpnClientRevokedCertificateResponseOutput) ToVpnClientRevokedCertificateResponseOutput() VpnClientRevokedCertificateResponseOutput {
	return o
}

func (o VpnClientRevokedCertificateResponseOutput) ToVpnClientRevokedCertificateResponseOutputWithContext(ctx context.Context) VpnClientRevokedCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnClientRevokedCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VpnClientRevokedCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRevokedCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the vpn client revoked certificate.
func (o VpnClientRevokedCertificateResponseOutput) Properties() VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) *VpnClientRevokedCertificatePropertiesFormatResponse {
		return v.Properties
	}).(VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput)
}

type VpnClientRevokedCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o VpnClientRevokedCertificateResponseArrayOutput) ToVpnClientRevokedCertificateResponseArrayOutput() VpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateResponseArrayOutput) ToVpnClientRevokedCertificateResponseArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnClientRevokedCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRevokedCertificateResponse {
		return vs[0].([]VpnClientRevokedCertificateResponse)[vs[1].(int)]
	}).(VpnClientRevokedCertificateResponseOutput)
}

// VPN client root certificate of virtual network gateway
type VpnClientRootCertificate struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the vpn client root certificate.
	Properties VpnClientRootCertificatePropertiesFormat `pulumi:"properties"`
}

// VpnClientRootCertificateInput is an input type that accepts VpnClientRootCertificateArgs and VpnClientRootCertificateOutput values.
// You can construct a concrete instance of `VpnClientRootCertificateInput` via:
//
//          VpnClientRootCertificateArgs{...}
type VpnClientRootCertificateInput interface {
	pulumi.Input

	ToVpnClientRootCertificateOutput() VpnClientRootCertificateOutput
	ToVpnClientRootCertificateOutputWithContext(context.Context) VpnClientRootCertificateOutput
}

// VPN client root certificate of virtual network gateway
type VpnClientRootCertificateArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the vpn client root certificate.
	Properties VpnClientRootCertificatePropertiesFormatInput `pulumi:"properties"`
}

func (VpnClientRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificate)(nil)).Elem()
}

func (i VpnClientRootCertificateArgs) ToVpnClientRootCertificateOutput() VpnClientRootCertificateOutput {
	return i.ToVpnClientRootCertificateOutputWithContext(context.Background())
}

func (i VpnClientRootCertificateArgs) ToVpnClientRootCertificateOutputWithContext(ctx context.Context) VpnClientRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificateOutput)
}

// VpnClientRootCertificateArrayInput is an input type that accepts VpnClientRootCertificateArray and VpnClientRootCertificateArrayOutput values.
// You can construct a concrete instance of `VpnClientRootCertificateArrayInput` via:
//
//          VpnClientRootCertificateArray{ VpnClientRootCertificateArgs{...} }
type VpnClientRootCertificateArrayInput interface {
	pulumi.Input

	ToVpnClientRootCertificateArrayOutput() VpnClientRootCertificateArrayOutput
	ToVpnClientRootCertificateArrayOutputWithContext(context.Context) VpnClientRootCertificateArrayOutput
}

type VpnClientRootCertificateArray []VpnClientRootCertificateInput

func (VpnClientRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificate)(nil)).Elem()
}

func (i VpnClientRootCertificateArray) ToVpnClientRootCertificateArrayOutput() VpnClientRootCertificateArrayOutput {
	return i.ToVpnClientRootCertificateArrayOutputWithContext(context.Background())
}

func (i VpnClientRootCertificateArray) ToVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificateArrayOutput)
}

// VPN client root certificate of virtual network gateway
type VpnClientRootCertificateOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificate)(nil)).Elem()
}

func (o VpnClientRootCertificateOutput) ToVpnClientRootCertificateOutput() VpnClientRootCertificateOutput {
	return o
}

func (o VpnClientRootCertificateOutput) ToVpnClientRootCertificateOutputWithContext(ctx context.Context) VpnClientRootCertificateOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnClientRootCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VpnClientRootCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the vpn client root certificate.
func (o VpnClientRootCertificateOutput) Properties() VpnClientRootCertificatePropertiesFormatOutput {
	return o.ApplyT(func(v VpnClientRootCertificate) VpnClientRootCertificatePropertiesFormat { return v.Properties }).(VpnClientRootCertificatePropertiesFormatOutput)
}

type VpnClientRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificate)(nil)).Elem()
}

func (o VpnClientRootCertificateArrayOutput) ToVpnClientRootCertificateArrayOutput() VpnClientRootCertificateArrayOutput {
	return o
}

func (o VpnClientRootCertificateArrayOutput) ToVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateArrayOutput {
	return o
}

func (o VpnClientRootCertificateArrayOutput) Index(i pulumi.IntInput) VpnClientRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRootCertificate {
		return vs[0].([]VpnClientRootCertificate)[vs[1].(int)]
	}).(VpnClientRootCertificateOutput)
}

// Properties of SSL certificates of application gateway
type VpnClientRootCertificatePropertiesFormat struct {
	// The certificate public data.
	PublicCertData string `pulumi:"publicCertData"`
}

// VpnClientRootCertificatePropertiesFormatInput is an input type that accepts VpnClientRootCertificatePropertiesFormatArgs and VpnClientRootCertificatePropertiesFormatOutput values.
// You can construct a concrete instance of `VpnClientRootCertificatePropertiesFormatInput` via:
//
//          VpnClientRootCertificatePropertiesFormatArgs{...}
type VpnClientRootCertificatePropertiesFormatInput interface {
	pulumi.Input

	ToVpnClientRootCertificatePropertiesFormatOutput() VpnClientRootCertificatePropertiesFormatOutput
	ToVpnClientRootCertificatePropertiesFormatOutputWithContext(context.Context) VpnClientRootCertificatePropertiesFormatOutput
}

// Properties of SSL certificates of application gateway
type VpnClientRootCertificatePropertiesFormatArgs struct {
	// The certificate public data.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (VpnClientRootCertificatePropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificatePropertiesFormat)(nil)).Elem()
}

func (i VpnClientRootCertificatePropertiesFormatArgs) ToVpnClientRootCertificatePropertiesFormatOutput() VpnClientRootCertificatePropertiesFormatOutput {
	return i.ToVpnClientRootCertificatePropertiesFormatOutputWithContext(context.Background())
}

func (i VpnClientRootCertificatePropertiesFormatArgs) ToVpnClientRootCertificatePropertiesFormatOutputWithContext(ctx context.Context) VpnClientRootCertificatePropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificatePropertiesFormatOutput)
}

// Properties of SSL certificates of application gateway
type VpnClientRootCertificatePropertiesFormatOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificatePropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificatePropertiesFormat)(nil)).Elem()
}

func (o VpnClientRootCertificatePropertiesFormatOutput) ToVpnClientRootCertificatePropertiesFormatOutput() VpnClientRootCertificatePropertiesFormatOutput {
	return o
}

func (o VpnClientRootCertificatePropertiesFormatOutput) ToVpnClientRootCertificatePropertiesFormatOutputWithContext(ctx context.Context) VpnClientRootCertificatePropertiesFormatOutput {
	return o
}

// The certificate public data.
func (o VpnClientRootCertificatePropertiesFormatOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRootCertificatePropertiesFormat) string { return v.PublicCertData }).(pulumi.StringOutput)
}

// Properties of SSL certificates of application gateway
type VpnClientRootCertificatePropertiesFormatResponse struct {
	// The provisioning state of the VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The certificate public data.
	PublicCertData string `pulumi:"publicCertData"`
}

// VpnClientRootCertificatePropertiesFormatResponseInput is an input type that accepts VpnClientRootCertificatePropertiesFormatResponseArgs and VpnClientRootCertificatePropertiesFormatResponseOutput values.
// You can construct a concrete instance of `VpnClientRootCertificatePropertiesFormatResponseInput` via:
//
//          VpnClientRootCertificatePropertiesFormatResponseArgs{...}
type VpnClientRootCertificatePropertiesFormatResponseInput interface {
	pulumi.Input

	ToVpnClientRootCertificatePropertiesFormatResponseOutput() VpnClientRootCertificatePropertiesFormatResponseOutput
	ToVpnClientRootCertificatePropertiesFormatResponseOutputWithContext(context.Context) VpnClientRootCertificatePropertiesFormatResponseOutput
}

// Properties of SSL certificates of application gateway
type VpnClientRootCertificatePropertiesFormatResponseArgs struct {
	// The provisioning state of the VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The certificate public data.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (VpnClientRootCertificatePropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (i VpnClientRootCertificatePropertiesFormatResponseArgs) ToVpnClientRootCertificatePropertiesFormatResponseOutput() VpnClientRootCertificatePropertiesFormatResponseOutput {
	return i.ToVpnClientRootCertificatePropertiesFormatResponseOutputWithContext(context.Background())
}

func (i VpnClientRootCertificatePropertiesFormatResponseArgs) ToVpnClientRootCertificatePropertiesFormatResponseOutputWithContext(ctx context.Context) VpnClientRootCertificatePropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificatePropertiesFormatResponseOutput)
}

// Properties of SSL certificates of application gateway
type VpnClientRootCertificatePropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificatePropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificatePropertiesFormatResponse)(nil)).Elem()
}

func (o VpnClientRootCertificatePropertiesFormatResponseOutput) ToVpnClientRootCertificatePropertiesFormatResponseOutput() VpnClientRootCertificatePropertiesFormatResponseOutput {
	return o
}

func (o VpnClientRootCertificatePropertiesFormatResponseOutput) ToVpnClientRootCertificatePropertiesFormatResponseOutputWithContext(ctx context.Context) VpnClientRootCertificatePropertiesFormatResponseOutput {
	return o
}

// The provisioning state of the VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VpnClientRootCertificatePropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRootCertificatePropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The certificate public data.
func (o VpnClientRootCertificatePropertiesFormatResponseOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRootCertificatePropertiesFormatResponse) string { return v.PublicCertData }).(pulumi.StringOutput)
}

// VPN client root certificate of virtual network gateway
type VpnClientRootCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the vpn client root certificate.
	Properties VpnClientRootCertificatePropertiesFormatResponse `pulumi:"properties"`
}

// VpnClientRootCertificateResponseInput is an input type that accepts VpnClientRootCertificateResponseArgs and VpnClientRootCertificateResponseOutput values.
// You can construct a concrete instance of `VpnClientRootCertificateResponseInput` via:
//
//          VpnClientRootCertificateResponseArgs{...}
type VpnClientRootCertificateResponseInput interface {
	pulumi.Input

	ToVpnClientRootCertificateResponseOutput() VpnClientRootCertificateResponseOutput
	ToVpnClientRootCertificateResponseOutputWithContext(context.Context) VpnClientRootCertificateResponseOutput
}

// VPN client root certificate of virtual network gateway
type VpnClientRootCertificateResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties of the vpn client root certificate.
	Properties VpnClientRootCertificatePropertiesFormatResponseInput `pulumi:"properties"`
}

func (VpnClientRootCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificateResponse)(nil)).Elem()
}

func (i VpnClientRootCertificateResponseArgs) ToVpnClientRootCertificateResponseOutput() VpnClientRootCertificateResponseOutput {
	return i.ToVpnClientRootCertificateResponseOutputWithContext(context.Background())
}

func (i VpnClientRootCertificateResponseArgs) ToVpnClientRootCertificateResponseOutputWithContext(ctx context.Context) VpnClientRootCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificateResponseOutput)
}

// VpnClientRootCertificateResponseArrayInput is an input type that accepts VpnClientRootCertificateResponseArray and VpnClientRootCertificateResponseArrayOutput values.
// You can construct a concrete instance of `VpnClientRootCertificateResponseArrayInput` via:
//
//          VpnClientRootCertificateResponseArray{ VpnClientRootCertificateResponseArgs{...} }
type VpnClientRootCertificateResponseArrayInput interface {
	pulumi.Input

	ToVpnClientRootCertificateResponseArrayOutput() VpnClientRootCertificateResponseArrayOutput
	ToVpnClientRootCertificateResponseArrayOutputWithContext(context.Context) VpnClientRootCertificateResponseArrayOutput
}

type VpnClientRootCertificateResponseArray []VpnClientRootCertificateResponseInput

func (VpnClientRootCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificateResponse)(nil)).Elem()
}

func (i VpnClientRootCertificateResponseArray) ToVpnClientRootCertificateResponseArrayOutput() VpnClientRootCertificateResponseArrayOutput {
	return i.ToVpnClientRootCertificateResponseArrayOutputWithContext(context.Background())
}

func (i VpnClientRootCertificateResponseArray) ToVpnClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificateResponseArrayOutput)
}

// VPN client root certificate of virtual network gateway
type VpnClientRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnClientRootCertificateResponseOutput) ToVpnClientRootCertificateResponseOutput() VpnClientRootCertificateResponseOutput {
	return o
}

func (o VpnClientRootCertificateResponseOutput) ToVpnClientRootCertificateResponseOutputWithContext(ctx context.Context) VpnClientRootCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnClientRootCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VpnClientRootCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties of the vpn client root certificate.
func (o VpnClientRootCertificateResponseOutput) Properties() VpnClientRootCertificatePropertiesFormatResponseOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) VpnClientRootCertificatePropertiesFormatResponse {
		return v.Properties
	}).(VpnClientRootCertificatePropertiesFormatResponseOutput)
}

type VpnClientRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnClientRootCertificateResponseArrayOutput) ToVpnClientRootCertificateResponseArrayOutput() VpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRootCertificateResponseArrayOutput) ToVpnClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnClientRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRootCertificateResponse {
		return vs[0].([]VpnClientRootCertificateResponse)[vs[1].(int)]
	}).(VpnClientRootCertificateResponseOutput)
}

// VpnConnection Resource.
type VpnConnectionType struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Parameters for VpnConnection
	Properties VpnConnectionPropertiesResponse `pulumi:"properties"`
}

// VpnConnectionTypeInput is an input type that accepts VpnConnectionTypeArgs and VpnConnectionTypeOutput values.
// You can construct a concrete instance of `VpnConnectionTypeInput` via:
//
//          VpnConnectionTypeArgs{...}
type VpnConnectionTypeInput interface {
	pulumi.Input

	ToVpnConnectionTypeOutput() VpnConnectionTypeOutput
	ToVpnConnectionTypeOutputWithContext(context.Context) VpnConnectionTypeOutput
}

// VpnConnection Resource.
type VpnConnectionTypeArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Parameters for VpnConnection
	Properties VpnConnectionPropertiesResponseInput `pulumi:"properties"`
}

func (VpnConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionType)(nil)).Elem()
}

func (i VpnConnectionTypeArgs) ToVpnConnectionTypeOutput() VpnConnectionTypeOutput {
	return i.ToVpnConnectionTypeOutputWithContext(context.Background())
}

func (i VpnConnectionTypeArgs) ToVpnConnectionTypeOutputWithContext(ctx context.Context) VpnConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionTypeOutput)
}

// VpnConnectionTypeArrayInput is an input type that accepts VpnConnectionTypeArray and VpnConnectionTypeArrayOutput values.
// You can construct a concrete instance of `VpnConnectionTypeArrayInput` via:
//
//          VpnConnectionTypeArray{ VpnConnectionTypeArgs{...} }
type VpnConnectionTypeArrayInput interface {
	pulumi.Input

	ToVpnConnectionTypeArrayOutput() VpnConnectionTypeArrayOutput
	ToVpnConnectionTypeArrayOutputWithContext(context.Context) VpnConnectionTypeArrayOutput
}

type VpnConnectionTypeArray []VpnConnectionTypeInput

func (VpnConnectionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionType)(nil)).Elem()
}

func (i VpnConnectionTypeArray) ToVpnConnectionTypeArrayOutput() VpnConnectionTypeArrayOutput {
	return i.ToVpnConnectionTypeArrayOutputWithContext(context.Background())
}

func (i VpnConnectionTypeArray) ToVpnConnectionTypeArrayOutputWithContext(ctx context.Context) VpnConnectionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionTypeArrayOutput)
}

// VpnConnection Resource.
type VpnConnectionTypeOutput struct{ *pulumi.OutputState }

func (VpnConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionType)(nil)).Elem()
}

func (o VpnConnectionTypeOutput) ToVpnConnectionTypeOutput() VpnConnectionTypeOutput {
	return o
}

func (o VpnConnectionTypeOutput) ToVpnConnectionTypeOutputWithContext(ctx context.Context) VpnConnectionTypeOutput {
	return o
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VpnConnectionTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionType) string { return v.Etag }).(pulumi.StringOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnConnectionTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Parameters for VpnConnection
func (o VpnConnectionTypeOutput) Properties() VpnConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v VpnConnectionType) VpnConnectionPropertiesResponse { return v.Properties }).(VpnConnectionPropertiesResponseOutput)
}

type VpnConnectionTypeArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionType)(nil)).Elem()
}

func (o VpnConnectionTypeArrayOutput) ToVpnConnectionTypeArrayOutput() VpnConnectionTypeArrayOutput {
	return o
}

func (o VpnConnectionTypeArrayOutput) ToVpnConnectionTypeArrayOutputWithContext(ctx context.Context) VpnConnectionTypeArrayOutput {
	return o
}

func (o VpnConnectionTypeArrayOutput) Index(i pulumi.IntInput) VpnConnectionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionType {
		return vs[0].([]VpnConnectionType)[vs[1].(int)]
	}).(VpnConnectionTypeOutput)
}

// Parameters for VpnConnection
type VpnConnectionProperties struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth *int `pulumi:"connectionBandwidth"`
	// The connection status.
	ConnectionStatus *string `pulumi:"connectionStatus"`
	// EnableBgp flag
	EnableBgp *bool `pulumi:"enableBgp"`
	// Enable internet security
	EnableInternetSecurity *bool `pulumi:"enableInternetSecurity"`
	// EnableBgp flag
	EnableRateLimiting *bool `pulumi:"enableRateLimiting"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies []IpsecPolicy `pulumi:"ipsecPolicies"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Id of the connected vpn site.
	RemoteVpnSite *SubResource `pulumi:"remoteVpnSite"`
	// routing weight for vpn connection.
	RoutingWeight *int `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey *string `pulumi:"sharedKey"`
	// Connection protocol used for this connection
	VpnConnectionProtocolType *string `pulumi:"vpnConnectionProtocolType"`
}

// VpnConnectionPropertiesInput is an input type that accepts VpnConnectionPropertiesArgs and VpnConnectionPropertiesOutput values.
// You can construct a concrete instance of `VpnConnectionPropertiesInput` via:
//
//          VpnConnectionPropertiesArgs{...}
type VpnConnectionPropertiesInput interface {
	pulumi.Input

	ToVpnConnectionPropertiesOutput() VpnConnectionPropertiesOutput
	ToVpnConnectionPropertiesOutputWithContext(context.Context) VpnConnectionPropertiesOutput
}

// Parameters for VpnConnection
type VpnConnectionPropertiesArgs struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth pulumi.IntPtrInput `pulumi:"connectionBandwidth"`
	// The connection status.
	ConnectionStatus pulumi.StringPtrInput `pulumi:"connectionStatus"`
	// EnableBgp flag
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// Enable internet security
	EnableInternetSecurity pulumi.BoolPtrInput `pulumi:"enableInternetSecurity"`
	// EnableBgp flag
	EnableRateLimiting pulumi.BoolPtrInput `pulumi:"enableRateLimiting"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies IpsecPolicyArrayInput `pulumi:"ipsecPolicies"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Id of the connected vpn site.
	RemoteVpnSite SubResourcePtrInput `pulumi:"remoteVpnSite"`
	// routing weight for vpn connection.
	RoutingWeight pulumi.IntPtrInput `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// Connection protocol used for this connection
	VpnConnectionProtocolType pulumi.StringPtrInput `pulumi:"vpnConnectionProtocolType"`
}

func (VpnConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionProperties)(nil)).Elem()
}

func (i VpnConnectionPropertiesArgs) ToVpnConnectionPropertiesOutput() VpnConnectionPropertiesOutput {
	return i.ToVpnConnectionPropertiesOutputWithContext(context.Background())
}

func (i VpnConnectionPropertiesArgs) ToVpnConnectionPropertiesOutputWithContext(ctx context.Context) VpnConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionPropertiesOutput)
}

func (i VpnConnectionPropertiesArgs) ToVpnConnectionPropertiesPtrOutput() VpnConnectionPropertiesPtrOutput {
	return i.ToVpnConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (i VpnConnectionPropertiesArgs) ToVpnConnectionPropertiesPtrOutputWithContext(ctx context.Context) VpnConnectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionPropertiesOutput).ToVpnConnectionPropertiesPtrOutputWithContext(ctx)
}

// VpnConnectionPropertiesPtrInput is an input type that accepts VpnConnectionPropertiesArgs, VpnConnectionPropertiesPtr and VpnConnectionPropertiesPtrOutput values.
// You can construct a concrete instance of `VpnConnectionPropertiesPtrInput` via:
//
//          VpnConnectionPropertiesArgs{...}
//
//  or:
//
//          nil
type VpnConnectionPropertiesPtrInput interface {
	pulumi.Input

	ToVpnConnectionPropertiesPtrOutput() VpnConnectionPropertiesPtrOutput
	ToVpnConnectionPropertiesPtrOutputWithContext(context.Context) VpnConnectionPropertiesPtrOutput
}

type vpnConnectionPropertiesPtrType VpnConnectionPropertiesArgs

func VpnConnectionPropertiesPtr(v *VpnConnectionPropertiesArgs) VpnConnectionPropertiesPtrInput {
	return (*vpnConnectionPropertiesPtrType)(v)
}

func (*vpnConnectionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnConnectionProperties)(nil)).Elem()
}

func (i *vpnConnectionPropertiesPtrType) ToVpnConnectionPropertiesPtrOutput() VpnConnectionPropertiesPtrOutput {
	return i.ToVpnConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (i *vpnConnectionPropertiesPtrType) ToVpnConnectionPropertiesPtrOutputWithContext(ctx context.Context) VpnConnectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionPropertiesPtrOutput)
}

// Parameters for VpnConnection
type VpnConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (VpnConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionProperties)(nil)).Elem()
}

func (o VpnConnectionPropertiesOutput) ToVpnConnectionPropertiesOutput() VpnConnectionPropertiesOutput {
	return o
}

func (o VpnConnectionPropertiesOutput) ToVpnConnectionPropertiesOutputWithContext(ctx context.Context) VpnConnectionPropertiesOutput {
	return o
}

func (o VpnConnectionPropertiesOutput) ToVpnConnectionPropertiesPtrOutput() VpnConnectionPropertiesPtrOutput {
	return o.ToVpnConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (o VpnConnectionPropertiesOutput) ToVpnConnectionPropertiesPtrOutputWithContext(ctx context.Context) VpnConnectionPropertiesPtrOutput {
	return o.ApplyT(func(v VpnConnectionProperties) *VpnConnectionProperties {
		return &v
	}).(VpnConnectionPropertiesPtrOutput)
}

// Expected bandwidth in MBPS.
func (o VpnConnectionPropertiesOutput) ConnectionBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionProperties) *int { return v.ConnectionBandwidth }).(pulumi.IntPtrOutput)
}

// The connection status.
func (o VpnConnectionPropertiesOutput) ConnectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionProperties) *string { return v.ConnectionStatus }).(pulumi.StringPtrOutput)
}

// EnableBgp flag
func (o VpnConnectionPropertiesOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionProperties) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// Enable internet security
func (o VpnConnectionPropertiesOutput) EnableInternetSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionProperties) *bool { return v.EnableInternetSecurity }).(pulumi.BoolPtrOutput)
}

// EnableBgp flag
func (o VpnConnectionPropertiesOutput) EnableRateLimiting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionProperties) *bool { return v.EnableRateLimiting }).(pulumi.BoolPtrOutput)
}

// The IPSec Policies to be considered by this connection.
func (o VpnConnectionPropertiesOutput) IpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v VpnConnectionProperties) []IpsecPolicy { return v.IpsecPolicies }).(IpsecPolicyArrayOutput)
}

// The provisioning state of the resource.
func (o VpnConnectionPropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Id of the connected vpn site.
func (o VpnConnectionPropertiesOutput) RemoteVpnSite() SubResourcePtrOutput {
	return o.ApplyT(func(v VpnConnectionProperties) *SubResource { return v.RemoteVpnSite }).(SubResourcePtrOutput)
}

// routing weight for vpn connection.
func (o VpnConnectionPropertiesOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionProperties) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

// SharedKey for the vpn connection.
func (o VpnConnectionPropertiesOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionProperties) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// Connection protocol used for this connection
func (o VpnConnectionPropertiesOutput) VpnConnectionProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionProperties) *string { return v.VpnConnectionProtocolType }).(pulumi.StringPtrOutput)
}

type VpnConnectionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VpnConnectionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnConnectionProperties)(nil)).Elem()
}

func (o VpnConnectionPropertiesPtrOutput) ToVpnConnectionPropertiesPtrOutput() VpnConnectionPropertiesPtrOutput {
	return o
}

func (o VpnConnectionPropertiesPtrOutput) ToVpnConnectionPropertiesPtrOutputWithContext(ctx context.Context) VpnConnectionPropertiesPtrOutput {
	return o
}

func (o VpnConnectionPropertiesPtrOutput) Elem() VpnConnectionPropertiesOutput {
	return o.ApplyT(func(v *VpnConnectionProperties) VpnConnectionProperties { return *v }).(VpnConnectionPropertiesOutput)
}

// Expected bandwidth in MBPS.
func (o VpnConnectionPropertiesPtrOutput) ConnectionBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnConnectionProperties) *int {
		if v == nil {
			return nil
		}
		return v.ConnectionBandwidth
	}).(pulumi.IntPtrOutput)
}

// The connection status.
func (o VpnConnectionPropertiesPtrOutput) ConnectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionProperties) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionStatus
	}).(pulumi.StringPtrOutput)
}

// EnableBgp flag
func (o VpnConnectionPropertiesPtrOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnConnectionProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBgp
	}).(pulumi.BoolPtrOutput)
}

// Enable internet security
func (o VpnConnectionPropertiesPtrOutput) EnableInternetSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnConnectionProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableInternetSecurity
	}).(pulumi.BoolPtrOutput)
}

// EnableBgp flag
func (o VpnConnectionPropertiesPtrOutput) EnableRateLimiting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnConnectionProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableRateLimiting
	}).(pulumi.BoolPtrOutput)
}

// The IPSec Policies to be considered by this connection.
func (o VpnConnectionPropertiesPtrOutput) IpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v *VpnConnectionProperties) []IpsecPolicy {
		if v == nil {
			return nil
		}
		return v.IpsecPolicies
	}).(IpsecPolicyArrayOutput)
}

// The provisioning state of the resource.
func (o VpnConnectionPropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Id of the connected vpn site.
func (o VpnConnectionPropertiesPtrOutput) RemoteVpnSite() SubResourcePtrOutput {
	return o.ApplyT(func(v *VpnConnectionProperties) *SubResource {
		if v == nil {
			return nil
		}
		return v.RemoteVpnSite
	}).(SubResourcePtrOutput)
}

// routing weight for vpn connection.
func (o VpnConnectionPropertiesPtrOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnConnectionProperties) *int {
		if v == nil {
			return nil
		}
		return v.RoutingWeight
	}).(pulumi.IntPtrOutput)
}

// SharedKey for the vpn connection.
func (o VpnConnectionPropertiesPtrOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionProperties) *string {
		if v == nil {
			return nil
		}
		return v.SharedKey
	}).(pulumi.StringPtrOutput)
}

// Connection protocol used for this connection
func (o VpnConnectionPropertiesPtrOutput) VpnConnectionProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionProperties) *string {
		if v == nil {
			return nil
		}
		return v.VpnConnectionProtocolType
	}).(pulumi.StringPtrOutput)
}

// Parameters for VpnConnection
type VpnConnectionPropertiesResponse struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth *int `pulumi:"connectionBandwidth"`
	// The connection status.
	ConnectionStatus *string `pulumi:"connectionStatus"`
	// Egress bytes transferred.
	EgressBytesTransferred int `pulumi:"egressBytesTransferred"`
	// EnableBgp flag
	EnableBgp *bool `pulumi:"enableBgp"`
	// Enable internet security
	EnableInternetSecurity *bool `pulumi:"enableInternetSecurity"`
	// EnableBgp flag
	EnableRateLimiting *bool `pulumi:"enableRateLimiting"`
	// Ingress bytes transferred.
	IngressBytesTransferred int `pulumi:"ingressBytesTransferred"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies []IpsecPolicyResponse `pulumi:"ipsecPolicies"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Id of the connected vpn site.
	RemoteVpnSite *SubResourceResponse `pulumi:"remoteVpnSite"`
	// routing weight for vpn connection.
	RoutingWeight *int `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey *string `pulumi:"sharedKey"`
	// Connection protocol used for this connection
	VpnConnectionProtocolType *string `pulumi:"vpnConnectionProtocolType"`
}

// VpnConnectionPropertiesResponseInput is an input type that accepts VpnConnectionPropertiesResponseArgs and VpnConnectionPropertiesResponseOutput values.
// You can construct a concrete instance of `VpnConnectionPropertiesResponseInput` via:
//
//          VpnConnectionPropertiesResponseArgs{...}
type VpnConnectionPropertiesResponseInput interface {
	pulumi.Input

	ToVpnConnectionPropertiesResponseOutput() VpnConnectionPropertiesResponseOutput
	ToVpnConnectionPropertiesResponseOutputWithContext(context.Context) VpnConnectionPropertiesResponseOutput
}

// Parameters for VpnConnection
type VpnConnectionPropertiesResponseArgs struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth pulumi.IntPtrInput `pulumi:"connectionBandwidth"`
	// The connection status.
	ConnectionStatus pulumi.StringPtrInput `pulumi:"connectionStatus"`
	// Egress bytes transferred.
	EgressBytesTransferred pulumi.IntInput `pulumi:"egressBytesTransferred"`
	// EnableBgp flag
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// Enable internet security
	EnableInternetSecurity pulumi.BoolPtrInput `pulumi:"enableInternetSecurity"`
	// EnableBgp flag
	EnableRateLimiting pulumi.BoolPtrInput `pulumi:"enableRateLimiting"`
	// Ingress bytes transferred.
	IngressBytesTransferred pulumi.IntInput `pulumi:"ingressBytesTransferred"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies IpsecPolicyResponseArrayInput `pulumi:"ipsecPolicies"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Id of the connected vpn site.
	RemoteVpnSite SubResourceResponsePtrInput `pulumi:"remoteVpnSite"`
	// routing weight for vpn connection.
	RoutingWeight pulumi.IntPtrInput `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// Connection protocol used for this connection
	VpnConnectionProtocolType pulumi.StringPtrInput `pulumi:"vpnConnectionProtocolType"`
}

func (VpnConnectionPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionPropertiesResponse)(nil)).Elem()
}

func (i VpnConnectionPropertiesResponseArgs) ToVpnConnectionPropertiesResponseOutput() VpnConnectionPropertiesResponseOutput {
	return i.ToVpnConnectionPropertiesResponseOutputWithContext(context.Background())
}

func (i VpnConnectionPropertiesResponseArgs) ToVpnConnectionPropertiesResponseOutputWithContext(ctx context.Context) VpnConnectionPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionPropertiesResponseOutput)
}

func (i VpnConnectionPropertiesResponseArgs) ToVpnConnectionPropertiesResponsePtrOutput() VpnConnectionPropertiesResponsePtrOutput {
	return i.ToVpnConnectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i VpnConnectionPropertiesResponseArgs) ToVpnConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) VpnConnectionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionPropertiesResponseOutput).ToVpnConnectionPropertiesResponsePtrOutputWithContext(ctx)
}

// VpnConnectionPropertiesResponsePtrInput is an input type that accepts VpnConnectionPropertiesResponseArgs, VpnConnectionPropertiesResponsePtr and VpnConnectionPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `VpnConnectionPropertiesResponsePtrInput` via:
//
//          VpnConnectionPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type VpnConnectionPropertiesResponsePtrInput interface {
	pulumi.Input

	ToVpnConnectionPropertiesResponsePtrOutput() VpnConnectionPropertiesResponsePtrOutput
	ToVpnConnectionPropertiesResponsePtrOutputWithContext(context.Context) VpnConnectionPropertiesResponsePtrOutput
}

type vpnConnectionPropertiesResponsePtrType VpnConnectionPropertiesResponseArgs

func VpnConnectionPropertiesResponsePtr(v *VpnConnectionPropertiesResponseArgs) VpnConnectionPropertiesResponsePtrInput {
	return (*vpnConnectionPropertiesResponsePtrType)(v)
}

func (*vpnConnectionPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnConnectionPropertiesResponse)(nil)).Elem()
}

func (i *vpnConnectionPropertiesResponsePtrType) ToVpnConnectionPropertiesResponsePtrOutput() VpnConnectionPropertiesResponsePtrOutput {
	return i.ToVpnConnectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *vpnConnectionPropertiesResponsePtrType) ToVpnConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) VpnConnectionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionPropertiesResponsePtrOutput)
}

// Parameters for VpnConnection
type VpnConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VpnConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionPropertiesResponse)(nil)).Elem()
}

func (o VpnConnectionPropertiesResponseOutput) ToVpnConnectionPropertiesResponseOutput() VpnConnectionPropertiesResponseOutput {
	return o
}

func (o VpnConnectionPropertiesResponseOutput) ToVpnConnectionPropertiesResponseOutputWithContext(ctx context.Context) VpnConnectionPropertiesResponseOutput {
	return o
}

func (o VpnConnectionPropertiesResponseOutput) ToVpnConnectionPropertiesResponsePtrOutput() VpnConnectionPropertiesResponsePtrOutput {
	return o.ToVpnConnectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o VpnConnectionPropertiesResponseOutput) ToVpnConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) VpnConnectionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VpnConnectionPropertiesResponse) *VpnConnectionPropertiesResponse {
		return &v
	}).(VpnConnectionPropertiesResponsePtrOutput)
}

// Expected bandwidth in MBPS.
func (o VpnConnectionPropertiesResponseOutput) ConnectionBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionPropertiesResponse) *int { return v.ConnectionBandwidth }).(pulumi.IntPtrOutput)
}

// The connection status.
func (o VpnConnectionPropertiesResponseOutput) ConnectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionPropertiesResponse) *string { return v.ConnectionStatus }).(pulumi.StringPtrOutput)
}

// Egress bytes transferred.
func (o VpnConnectionPropertiesResponseOutput) EgressBytesTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v VpnConnectionPropertiesResponse) int { return v.EgressBytesTransferred }).(pulumi.IntOutput)
}

// EnableBgp flag
func (o VpnConnectionPropertiesResponseOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionPropertiesResponse) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// Enable internet security
func (o VpnConnectionPropertiesResponseOutput) EnableInternetSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionPropertiesResponse) *bool { return v.EnableInternetSecurity }).(pulumi.BoolPtrOutput)
}

// EnableBgp flag
func (o VpnConnectionPropertiesResponseOutput) EnableRateLimiting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionPropertiesResponse) *bool { return v.EnableRateLimiting }).(pulumi.BoolPtrOutput)
}

// Ingress bytes transferred.
func (o VpnConnectionPropertiesResponseOutput) IngressBytesTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v VpnConnectionPropertiesResponse) int { return v.IngressBytesTransferred }).(pulumi.IntOutput)
}

// The IPSec Policies to be considered by this connection.
func (o VpnConnectionPropertiesResponseOutput) IpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v VpnConnectionPropertiesResponse) []IpsecPolicyResponse { return v.IpsecPolicies }).(IpsecPolicyResponseArrayOutput)
}

// The provisioning state of the resource.
func (o VpnConnectionPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Id of the connected vpn site.
func (o VpnConnectionPropertiesResponseOutput) RemoteVpnSite() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VpnConnectionPropertiesResponse) *SubResourceResponse { return v.RemoteVpnSite }).(SubResourceResponsePtrOutput)
}

// routing weight for vpn connection.
func (o VpnConnectionPropertiesResponseOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionPropertiesResponse) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

// SharedKey for the vpn connection.
func (o VpnConnectionPropertiesResponseOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionPropertiesResponse) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// Connection protocol used for this connection
func (o VpnConnectionPropertiesResponseOutput) VpnConnectionProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionPropertiesResponse) *string { return v.VpnConnectionProtocolType }).(pulumi.StringPtrOutput)
}

type VpnConnectionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VpnConnectionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnConnectionPropertiesResponse)(nil)).Elem()
}

func (o VpnConnectionPropertiesResponsePtrOutput) ToVpnConnectionPropertiesResponsePtrOutput() VpnConnectionPropertiesResponsePtrOutput {
	return o
}

func (o VpnConnectionPropertiesResponsePtrOutput) ToVpnConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) VpnConnectionPropertiesResponsePtrOutput {
	return o
}

func (o VpnConnectionPropertiesResponsePtrOutput) Elem() VpnConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v *VpnConnectionPropertiesResponse) VpnConnectionPropertiesResponse { return *v }).(VpnConnectionPropertiesResponseOutput)
}

// Expected bandwidth in MBPS.
func (o VpnConnectionPropertiesResponsePtrOutput) ConnectionBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnConnectionPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.ConnectionBandwidth
	}).(pulumi.IntPtrOutput)
}

// The connection status.
func (o VpnConnectionPropertiesResponsePtrOutput) ConnectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionStatus
	}).(pulumi.StringPtrOutput)
}

// Egress bytes transferred.
func (o VpnConnectionPropertiesResponsePtrOutput) EgressBytesTransferred() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnConnectionPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.EgressBytesTransferred
	}).(pulumi.IntPtrOutput)
}

// EnableBgp flag
func (o VpnConnectionPropertiesResponsePtrOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnConnectionPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBgp
	}).(pulumi.BoolPtrOutput)
}

// Enable internet security
func (o VpnConnectionPropertiesResponsePtrOutput) EnableInternetSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnConnectionPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableInternetSecurity
	}).(pulumi.BoolPtrOutput)
}

// EnableBgp flag
func (o VpnConnectionPropertiesResponsePtrOutput) EnableRateLimiting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnConnectionPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableRateLimiting
	}).(pulumi.BoolPtrOutput)
}

// Ingress bytes transferred.
func (o VpnConnectionPropertiesResponsePtrOutput) IngressBytesTransferred() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnConnectionPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.IngressBytesTransferred
	}).(pulumi.IntPtrOutput)
}

// The IPSec Policies to be considered by this connection.
func (o VpnConnectionPropertiesResponsePtrOutput) IpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v *VpnConnectionPropertiesResponse) []IpsecPolicyResponse {
		if v == nil {
			return nil
		}
		return v.IpsecPolicies
	}).(IpsecPolicyResponseArrayOutput)
}

// The provisioning state of the resource.
func (o VpnConnectionPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Id of the connected vpn site.
func (o VpnConnectionPropertiesResponsePtrOutput) RemoteVpnSite() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *VpnConnectionPropertiesResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.RemoteVpnSite
	}).(SubResourceResponsePtrOutput)
}

// routing weight for vpn connection.
func (o VpnConnectionPropertiesResponsePtrOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnConnectionPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.RoutingWeight
	}).(pulumi.IntPtrOutput)
}

// SharedKey for the vpn connection.
func (o VpnConnectionPropertiesResponsePtrOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SharedKey
	}).(pulumi.StringPtrOutput)
}

// Connection protocol used for this connection
func (o VpnConnectionPropertiesResponsePtrOutput) VpnConnectionProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnConnectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.VpnConnectionProtocolType
	}).(pulumi.StringPtrOutput)
}

// VpnConnection Resource.
type VpnConnectionResponse struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Parameters for VpnConnection
	Properties *VpnConnectionPropertiesResponse `pulumi:"properties"`
}

// VpnConnectionResponseInput is an input type that accepts VpnConnectionResponseArgs and VpnConnectionResponseOutput values.
// You can construct a concrete instance of `VpnConnectionResponseInput` via:
//
//          VpnConnectionResponseArgs{...}
type VpnConnectionResponseInput interface {
	pulumi.Input

	ToVpnConnectionResponseOutput() VpnConnectionResponseOutput
	ToVpnConnectionResponseOutputWithContext(context.Context) VpnConnectionResponseOutput
}

// VpnConnection Resource.
type VpnConnectionResponseArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Parameters for VpnConnection
	Properties VpnConnectionPropertiesResponsePtrInput `pulumi:"properties"`
}

func (VpnConnectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionResponse)(nil)).Elem()
}

func (i VpnConnectionResponseArgs) ToVpnConnectionResponseOutput() VpnConnectionResponseOutput {
	return i.ToVpnConnectionResponseOutputWithContext(context.Background())
}

func (i VpnConnectionResponseArgs) ToVpnConnectionResponseOutputWithContext(ctx context.Context) VpnConnectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionResponseOutput)
}

// VpnConnectionResponseArrayInput is an input type that accepts VpnConnectionResponseArray and VpnConnectionResponseArrayOutput values.
// You can construct a concrete instance of `VpnConnectionResponseArrayInput` via:
//
//          VpnConnectionResponseArray{ VpnConnectionResponseArgs{...} }
type VpnConnectionResponseArrayInput interface {
	pulumi.Input

	ToVpnConnectionResponseArrayOutput() VpnConnectionResponseArrayOutput
	ToVpnConnectionResponseArrayOutputWithContext(context.Context) VpnConnectionResponseArrayOutput
}

type VpnConnectionResponseArray []VpnConnectionResponseInput

func (VpnConnectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionResponse)(nil)).Elem()
}

func (i VpnConnectionResponseArray) ToVpnConnectionResponseArrayOutput() VpnConnectionResponseArrayOutput {
	return i.ToVpnConnectionResponseArrayOutputWithContext(context.Background())
}

func (i VpnConnectionResponseArray) ToVpnConnectionResponseArrayOutputWithContext(ctx context.Context) VpnConnectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionResponseArrayOutput)
}

// VpnConnection Resource.
type VpnConnectionResponseOutput struct{ *pulumi.OutputState }

func (VpnConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionResponse)(nil)).Elem()
}

func (o VpnConnectionResponseOutput) ToVpnConnectionResponseOutput() VpnConnectionResponseOutput {
	return o
}

func (o VpnConnectionResponseOutput) ToVpnConnectionResponseOutputWithContext(ctx context.Context) VpnConnectionResponseOutput {
	return o
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VpnConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VpnConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Parameters for VpnConnection
func (o VpnConnectionResponseOutput) Properties() VpnConnectionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *VpnConnectionPropertiesResponse { return v.Properties }).(VpnConnectionPropertiesResponsePtrOutput)
}

type VpnConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionResponse)(nil)).Elem()
}

func (o VpnConnectionResponseArrayOutput) ToVpnConnectionResponseArrayOutput() VpnConnectionResponseArrayOutput {
	return o
}

func (o VpnConnectionResponseArrayOutput) ToVpnConnectionResponseArrayOutputWithContext(ctx context.Context) VpnConnectionResponseArrayOutput {
	return o
}

func (o VpnConnectionResponseArrayOutput) Index(i pulumi.IntInput) VpnConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionResponse {
		return vs[0].([]VpnConnectionResponse)[vs[1].(int)]
	}).(VpnConnectionResponseOutput)
}

// VpnGateway Resource.
type VpnGatewayType struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource location.
	Location string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Parameters for VpnGateway
	Properties VpnGatewayPropertiesResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VpnGatewayTypeInput is an input type that accepts VpnGatewayTypeArgs and VpnGatewayTypeOutput values.
// You can construct a concrete instance of `VpnGatewayTypeInput` via:
//
//          VpnGatewayTypeArgs{...}
type VpnGatewayTypeInput interface {
	pulumi.Input

	ToVpnGatewayTypeOutput() VpnGatewayTypeOutput
	ToVpnGatewayTypeOutputWithContext(context.Context) VpnGatewayTypeOutput
}

// VpnGateway Resource.
type VpnGatewayTypeArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Parameters for VpnGateway
	Properties VpnGatewayPropertiesResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VpnGatewayTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayType)(nil)).Elem()
}

func (i VpnGatewayTypeArgs) ToVpnGatewayTypeOutput() VpnGatewayTypeOutput {
	return i.ToVpnGatewayTypeOutputWithContext(context.Background())
}

func (i VpnGatewayTypeArgs) ToVpnGatewayTypeOutputWithContext(ctx context.Context) VpnGatewayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayTypeOutput)
}

// VpnGateway Resource.
type VpnGatewayTypeOutput struct{ *pulumi.OutputState }

func (VpnGatewayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayType)(nil)).Elem()
}

func (o VpnGatewayTypeOutput) ToVpnGatewayTypeOutput() VpnGatewayTypeOutput {
	return o
}

func (o VpnGatewayTypeOutput) ToVpnGatewayTypeOutputWithContext(ctx context.Context) VpnGatewayTypeOutput {
	return o
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VpnGatewayTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayType) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource location.
func (o VpnGatewayTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name.
func (o VpnGatewayTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayType) string { return v.Name }).(pulumi.StringOutput)
}

// Parameters for VpnGateway
func (o VpnGatewayTypeOutput) Properties() VpnGatewayPropertiesResponseOutput {
	return o.ApplyT(func(v VpnGatewayType) VpnGatewayPropertiesResponse { return v.Properties }).(VpnGatewayPropertiesResponseOutput)
}

// Resource tags.
func (o VpnGatewayTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VpnGatewayType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VpnGatewayTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayType) string { return v.Type }).(pulumi.StringOutput)
}

// Parameters for VpnGateway
type VpnGatewayProperties struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings *BgpSettings `pulumi:"bgpSettings"`
	// list of all vpn connections to the gateway.
	Connections []VpnConnectionType `pulumi:"connections"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The VirtualHub to which the gateway belongs
	VirtualHub *SubResource `pulumi:"virtualHub"`
	// The scale unit for this vpn gateway.
	VpnGatewayScaleUnit *int `pulumi:"vpnGatewayScaleUnit"`
}

// VpnGatewayPropertiesInput is an input type that accepts VpnGatewayPropertiesArgs and VpnGatewayPropertiesOutput values.
// You can construct a concrete instance of `VpnGatewayPropertiesInput` via:
//
//          VpnGatewayPropertiesArgs{...}
type VpnGatewayPropertiesInput interface {
	pulumi.Input

	ToVpnGatewayPropertiesOutput() VpnGatewayPropertiesOutput
	ToVpnGatewayPropertiesOutputWithContext(context.Context) VpnGatewayPropertiesOutput
}

// Parameters for VpnGateway
type VpnGatewayPropertiesArgs struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings BgpSettingsPtrInput `pulumi:"bgpSettings"`
	// list of all vpn connections to the gateway.
	Connections VpnConnectionTypeArrayInput `pulumi:"connections"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The VirtualHub to which the gateway belongs
	VirtualHub SubResourcePtrInput `pulumi:"virtualHub"`
	// The scale unit for this vpn gateway.
	VpnGatewayScaleUnit pulumi.IntPtrInput `pulumi:"vpnGatewayScaleUnit"`
}

func (VpnGatewayPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayProperties)(nil)).Elem()
}

func (i VpnGatewayPropertiesArgs) ToVpnGatewayPropertiesOutput() VpnGatewayPropertiesOutput {
	return i.ToVpnGatewayPropertiesOutputWithContext(context.Background())
}

func (i VpnGatewayPropertiesArgs) ToVpnGatewayPropertiesOutputWithContext(ctx context.Context) VpnGatewayPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayPropertiesOutput)
}

func (i VpnGatewayPropertiesArgs) ToVpnGatewayPropertiesPtrOutput() VpnGatewayPropertiesPtrOutput {
	return i.ToVpnGatewayPropertiesPtrOutputWithContext(context.Background())
}

func (i VpnGatewayPropertiesArgs) ToVpnGatewayPropertiesPtrOutputWithContext(ctx context.Context) VpnGatewayPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayPropertiesOutput).ToVpnGatewayPropertiesPtrOutputWithContext(ctx)
}

// VpnGatewayPropertiesPtrInput is an input type that accepts VpnGatewayPropertiesArgs, VpnGatewayPropertiesPtr and VpnGatewayPropertiesPtrOutput values.
// You can construct a concrete instance of `VpnGatewayPropertiesPtrInput` via:
//
//          VpnGatewayPropertiesArgs{...}
//
//  or:
//
//          nil
type VpnGatewayPropertiesPtrInput interface {
	pulumi.Input

	ToVpnGatewayPropertiesPtrOutput() VpnGatewayPropertiesPtrOutput
	ToVpnGatewayPropertiesPtrOutputWithContext(context.Context) VpnGatewayPropertiesPtrOutput
}

type vpnGatewayPropertiesPtrType VpnGatewayPropertiesArgs

func VpnGatewayPropertiesPtr(v *VpnGatewayPropertiesArgs) VpnGatewayPropertiesPtrInput {
	return (*vpnGatewayPropertiesPtrType)(v)
}

func (*vpnGatewayPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayProperties)(nil)).Elem()
}

func (i *vpnGatewayPropertiesPtrType) ToVpnGatewayPropertiesPtrOutput() VpnGatewayPropertiesPtrOutput {
	return i.ToVpnGatewayPropertiesPtrOutputWithContext(context.Background())
}

func (i *vpnGatewayPropertiesPtrType) ToVpnGatewayPropertiesPtrOutputWithContext(ctx context.Context) VpnGatewayPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayPropertiesPtrOutput)
}

// Parameters for VpnGateway
type VpnGatewayPropertiesOutput struct{ *pulumi.OutputState }

func (VpnGatewayPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayProperties)(nil)).Elem()
}

func (o VpnGatewayPropertiesOutput) ToVpnGatewayPropertiesOutput() VpnGatewayPropertiesOutput {
	return o
}

func (o VpnGatewayPropertiesOutput) ToVpnGatewayPropertiesOutputWithContext(ctx context.Context) VpnGatewayPropertiesOutput {
	return o
}

func (o VpnGatewayPropertiesOutput) ToVpnGatewayPropertiesPtrOutput() VpnGatewayPropertiesPtrOutput {
	return o.ToVpnGatewayPropertiesPtrOutputWithContext(context.Background())
}

func (o VpnGatewayPropertiesOutput) ToVpnGatewayPropertiesPtrOutputWithContext(ctx context.Context) VpnGatewayPropertiesPtrOutput {
	return o.ApplyT(func(v VpnGatewayProperties) *VpnGatewayProperties {
		return &v
	}).(VpnGatewayPropertiesPtrOutput)
}

// Local network gateway's BGP speaker settings.
func (o VpnGatewayPropertiesOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v VpnGatewayProperties) *BgpSettings { return v.BgpSettings }).(BgpSettingsPtrOutput)
}

// list of all vpn connections to the gateway.
func (o VpnGatewayPropertiesOutput) Connections() VpnConnectionTypeArrayOutput {
	return o.ApplyT(func(v VpnGatewayProperties) []VpnConnectionType { return v.Connections }).(VpnConnectionTypeArrayOutput)
}

// The provisioning state of the resource.
func (o VpnGatewayPropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The VirtualHub to which the gateway belongs
func (o VpnGatewayPropertiesOutput) VirtualHub() SubResourcePtrOutput {
	return o.ApplyT(func(v VpnGatewayProperties) *SubResource { return v.VirtualHub }).(SubResourcePtrOutput)
}

// The scale unit for this vpn gateway.
func (o VpnGatewayPropertiesOutput) VpnGatewayScaleUnit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnGatewayProperties) *int { return v.VpnGatewayScaleUnit }).(pulumi.IntPtrOutput)
}

type VpnGatewayPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VpnGatewayPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayProperties)(nil)).Elem()
}

func (o VpnGatewayPropertiesPtrOutput) ToVpnGatewayPropertiesPtrOutput() VpnGatewayPropertiesPtrOutput {
	return o
}

func (o VpnGatewayPropertiesPtrOutput) ToVpnGatewayPropertiesPtrOutputWithContext(ctx context.Context) VpnGatewayPropertiesPtrOutput {
	return o
}

func (o VpnGatewayPropertiesPtrOutput) Elem() VpnGatewayPropertiesOutput {
	return o.ApplyT(func(v *VpnGatewayProperties) VpnGatewayProperties { return *v }).(VpnGatewayPropertiesOutput)
}

// Local network gateway's BGP speaker settings.
func (o VpnGatewayPropertiesPtrOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v *VpnGatewayProperties) *BgpSettings {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsPtrOutput)
}

// list of all vpn connections to the gateway.
func (o VpnGatewayPropertiesPtrOutput) Connections() VpnConnectionTypeArrayOutput {
	return o.ApplyT(func(v *VpnGatewayProperties) []VpnConnectionType {
		if v == nil {
			return nil
		}
		return v.Connections
	}).(VpnConnectionTypeArrayOutput)
}

// The provisioning state of the resource.
func (o VpnGatewayPropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The VirtualHub to which the gateway belongs
func (o VpnGatewayPropertiesPtrOutput) VirtualHub() SubResourcePtrOutput {
	return o.ApplyT(func(v *VpnGatewayProperties) *SubResource {
		if v == nil {
			return nil
		}
		return v.VirtualHub
	}).(SubResourcePtrOutput)
}

// The scale unit for this vpn gateway.
func (o VpnGatewayPropertiesPtrOutput) VpnGatewayScaleUnit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnGatewayProperties) *int {
		if v == nil {
			return nil
		}
		return v.VpnGatewayScaleUnit
	}).(pulumi.IntPtrOutput)
}

// Parameters for VpnGateway
type VpnGatewayPropertiesResponse struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings *BgpSettingsResponse `pulumi:"bgpSettings"`
	// list of all vpn connections to the gateway.
	Connections []VpnConnectionResponse `pulumi:"connections"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The VirtualHub to which the gateway belongs
	VirtualHub *SubResourceResponse `pulumi:"virtualHub"`
	// The scale unit for this vpn gateway.
	VpnGatewayScaleUnit *int `pulumi:"vpnGatewayScaleUnit"`
}

// VpnGatewayPropertiesResponseInput is an input type that accepts VpnGatewayPropertiesResponseArgs and VpnGatewayPropertiesResponseOutput values.
// You can construct a concrete instance of `VpnGatewayPropertiesResponseInput` via:
//
//          VpnGatewayPropertiesResponseArgs{...}
type VpnGatewayPropertiesResponseInput interface {
	pulumi.Input

	ToVpnGatewayPropertiesResponseOutput() VpnGatewayPropertiesResponseOutput
	ToVpnGatewayPropertiesResponseOutputWithContext(context.Context) VpnGatewayPropertiesResponseOutput
}

// Parameters for VpnGateway
type VpnGatewayPropertiesResponseArgs struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings BgpSettingsResponsePtrInput `pulumi:"bgpSettings"`
	// list of all vpn connections to the gateway.
	Connections VpnConnectionResponseArrayInput `pulumi:"connections"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The VirtualHub to which the gateway belongs
	VirtualHub SubResourceResponsePtrInput `pulumi:"virtualHub"`
	// The scale unit for this vpn gateway.
	VpnGatewayScaleUnit pulumi.IntPtrInput `pulumi:"vpnGatewayScaleUnit"`
}

func (VpnGatewayPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayPropertiesResponse)(nil)).Elem()
}

func (i VpnGatewayPropertiesResponseArgs) ToVpnGatewayPropertiesResponseOutput() VpnGatewayPropertiesResponseOutput {
	return i.ToVpnGatewayPropertiesResponseOutputWithContext(context.Background())
}

func (i VpnGatewayPropertiesResponseArgs) ToVpnGatewayPropertiesResponseOutputWithContext(ctx context.Context) VpnGatewayPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayPropertiesResponseOutput)
}

func (i VpnGatewayPropertiesResponseArgs) ToVpnGatewayPropertiesResponsePtrOutput() VpnGatewayPropertiesResponsePtrOutput {
	return i.ToVpnGatewayPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i VpnGatewayPropertiesResponseArgs) ToVpnGatewayPropertiesResponsePtrOutputWithContext(ctx context.Context) VpnGatewayPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayPropertiesResponseOutput).ToVpnGatewayPropertiesResponsePtrOutputWithContext(ctx)
}

// VpnGatewayPropertiesResponsePtrInput is an input type that accepts VpnGatewayPropertiesResponseArgs, VpnGatewayPropertiesResponsePtr and VpnGatewayPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `VpnGatewayPropertiesResponsePtrInput` via:
//
//          VpnGatewayPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type VpnGatewayPropertiesResponsePtrInput interface {
	pulumi.Input

	ToVpnGatewayPropertiesResponsePtrOutput() VpnGatewayPropertiesResponsePtrOutput
	ToVpnGatewayPropertiesResponsePtrOutputWithContext(context.Context) VpnGatewayPropertiesResponsePtrOutput
}

type vpnGatewayPropertiesResponsePtrType VpnGatewayPropertiesResponseArgs

func VpnGatewayPropertiesResponsePtr(v *VpnGatewayPropertiesResponseArgs) VpnGatewayPropertiesResponsePtrInput {
	return (*vpnGatewayPropertiesResponsePtrType)(v)
}

func (*vpnGatewayPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayPropertiesResponse)(nil)).Elem()
}

func (i *vpnGatewayPropertiesResponsePtrType) ToVpnGatewayPropertiesResponsePtrOutput() VpnGatewayPropertiesResponsePtrOutput {
	return i.ToVpnGatewayPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *vpnGatewayPropertiesResponsePtrType) ToVpnGatewayPropertiesResponsePtrOutputWithContext(ctx context.Context) VpnGatewayPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayPropertiesResponsePtrOutput)
}

// Parameters for VpnGateway
type VpnGatewayPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VpnGatewayPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayPropertiesResponse)(nil)).Elem()
}

func (o VpnGatewayPropertiesResponseOutput) ToVpnGatewayPropertiesResponseOutput() VpnGatewayPropertiesResponseOutput {
	return o
}

func (o VpnGatewayPropertiesResponseOutput) ToVpnGatewayPropertiesResponseOutputWithContext(ctx context.Context) VpnGatewayPropertiesResponseOutput {
	return o
}

func (o VpnGatewayPropertiesResponseOutput) ToVpnGatewayPropertiesResponsePtrOutput() VpnGatewayPropertiesResponsePtrOutput {
	return o.ToVpnGatewayPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o VpnGatewayPropertiesResponseOutput) ToVpnGatewayPropertiesResponsePtrOutputWithContext(ctx context.Context) VpnGatewayPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VpnGatewayPropertiesResponse) *VpnGatewayPropertiesResponse {
		return &v
	}).(VpnGatewayPropertiesResponsePtrOutput)
}

// Local network gateway's BGP speaker settings.
func (o VpnGatewayPropertiesResponseOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v VpnGatewayPropertiesResponse) *BgpSettingsResponse { return v.BgpSettings }).(BgpSettingsResponsePtrOutput)
}

// list of all vpn connections to the gateway.
func (o VpnGatewayPropertiesResponseOutput) Connections() VpnConnectionResponseArrayOutput {
	return o.ApplyT(func(v VpnGatewayPropertiesResponse) []VpnConnectionResponse { return v.Connections }).(VpnConnectionResponseArrayOutput)
}

// The provisioning state of the resource.
func (o VpnGatewayPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The VirtualHub to which the gateway belongs
func (o VpnGatewayPropertiesResponseOutput) VirtualHub() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VpnGatewayPropertiesResponse) *SubResourceResponse { return v.VirtualHub }).(SubResourceResponsePtrOutput)
}

// The scale unit for this vpn gateway.
func (o VpnGatewayPropertiesResponseOutput) VpnGatewayScaleUnit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnGatewayPropertiesResponse) *int { return v.VpnGatewayScaleUnit }).(pulumi.IntPtrOutput)
}

type VpnGatewayPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VpnGatewayPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayPropertiesResponse)(nil)).Elem()
}

func (o VpnGatewayPropertiesResponsePtrOutput) ToVpnGatewayPropertiesResponsePtrOutput() VpnGatewayPropertiesResponsePtrOutput {
	return o
}

func (o VpnGatewayPropertiesResponsePtrOutput) ToVpnGatewayPropertiesResponsePtrOutputWithContext(ctx context.Context) VpnGatewayPropertiesResponsePtrOutput {
	return o
}

func (o VpnGatewayPropertiesResponsePtrOutput) Elem() VpnGatewayPropertiesResponseOutput {
	return o.ApplyT(func(v *VpnGatewayPropertiesResponse) VpnGatewayPropertiesResponse { return *v }).(VpnGatewayPropertiesResponseOutput)
}

// Local network gateway's BGP speaker settings.
func (o VpnGatewayPropertiesResponsePtrOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v *VpnGatewayPropertiesResponse) *BgpSettingsResponse {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsResponsePtrOutput)
}

// list of all vpn connections to the gateway.
func (o VpnGatewayPropertiesResponsePtrOutput) Connections() VpnConnectionResponseArrayOutput {
	return o.ApplyT(func(v *VpnGatewayPropertiesResponse) []VpnConnectionResponse {
		if v == nil {
			return nil
		}
		return v.Connections
	}).(VpnConnectionResponseArrayOutput)
}

// The provisioning state of the resource.
func (o VpnGatewayPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The VirtualHub to which the gateway belongs
func (o VpnGatewayPropertiesResponsePtrOutput) VirtualHub() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *VpnGatewayPropertiesResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.VirtualHub
	}).(SubResourceResponsePtrOutput)
}

// The scale unit for this vpn gateway.
func (o VpnGatewayPropertiesResponsePtrOutput) VpnGatewayScaleUnit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnGatewayPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.VpnGatewayScaleUnit
	}).(pulumi.IntPtrOutput)
}

// VpnSite Resource.
type VpnSiteType struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource location.
	Location string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Parameters for VpnSite
	Properties VpnSitePropertiesResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VpnSiteTypeInput is an input type that accepts VpnSiteTypeArgs and VpnSiteTypeOutput values.
// You can construct a concrete instance of `VpnSiteTypeInput` via:
//
//          VpnSiteTypeArgs{...}
type VpnSiteTypeInput interface {
	pulumi.Input

	ToVpnSiteTypeOutput() VpnSiteTypeOutput
	ToVpnSiteTypeOutputWithContext(context.Context) VpnSiteTypeOutput
}

// VpnSite Resource.
type VpnSiteTypeArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Parameters for VpnSite
	Properties VpnSitePropertiesResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VpnSiteTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteType)(nil)).Elem()
}

func (i VpnSiteTypeArgs) ToVpnSiteTypeOutput() VpnSiteTypeOutput {
	return i.ToVpnSiteTypeOutputWithContext(context.Background())
}

func (i VpnSiteTypeArgs) ToVpnSiteTypeOutputWithContext(ctx context.Context) VpnSiteTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteTypeOutput)
}

// VpnSite Resource.
type VpnSiteTypeOutput struct{ *pulumi.OutputState }

func (VpnSiteTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteType)(nil)).Elem()
}

func (o VpnSiteTypeOutput) ToVpnSiteTypeOutput() VpnSiteTypeOutput {
	return o
}

func (o VpnSiteTypeOutput) ToVpnSiteTypeOutputWithContext(ctx context.Context) VpnSiteTypeOutput {
	return o
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VpnSiteTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteType) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource location.
func (o VpnSiteTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name.
func (o VpnSiteTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteType) string { return v.Name }).(pulumi.StringOutput)
}

// Parameters for VpnSite
func (o VpnSiteTypeOutput) Properties() VpnSitePropertiesResponseOutput {
	return o.ApplyT(func(v VpnSiteType) VpnSitePropertiesResponse { return v.Properties }).(VpnSitePropertiesResponseOutput)
}

// Resource tags.
func (o VpnSiteTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VpnSiteType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VpnSiteTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteType) string { return v.Type }).(pulumi.StringOutput)
}

// Parameters for VpnSite
type VpnSiteProperties struct {
	// The AddressSpace that contains an array of IP address ranges.
	AddressSpace *AddressSpace `pulumi:"addressSpace"`
	// The set of bgp properties.
	BgpProperties *BgpSettings `pulumi:"bgpProperties"`
	// The device properties
	DeviceProperties *DeviceProperties `pulumi:"deviceProperties"`
	// The ip-address for the vpn-site.
	IpAddress *string `pulumi:"ipAddress"`
	// IsSecuritySite flag
	IsSecuritySite *bool `pulumi:"isSecuritySite"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The key for vpn-site that can be used for connections.
	SiteKey *string `pulumi:"siteKey"`
	// The VirtualWAN to which the vpnSite belongs
	VirtualWan *SubResource `pulumi:"virtualWan"`
}

// VpnSitePropertiesInput is an input type that accepts VpnSitePropertiesArgs and VpnSitePropertiesOutput values.
// You can construct a concrete instance of `VpnSitePropertiesInput` via:
//
//          VpnSitePropertiesArgs{...}
type VpnSitePropertiesInput interface {
	pulumi.Input

	ToVpnSitePropertiesOutput() VpnSitePropertiesOutput
	ToVpnSitePropertiesOutputWithContext(context.Context) VpnSitePropertiesOutput
}

// Parameters for VpnSite
type VpnSitePropertiesArgs struct {
	// The AddressSpace that contains an array of IP address ranges.
	AddressSpace AddressSpacePtrInput `pulumi:"addressSpace"`
	// The set of bgp properties.
	BgpProperties BgpSettingsPtrInput `pulumi:"bgpProperties"`
	// The device properties
	DeviceProperties DevicePropertiesPtrInput `pulumi:"deviceProperties"`
	// The ip-address for the vpn-site.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// IsSecuritySite flag
	IsSecuritySite pulumi.BoolPtrInput `pulumi:"isSecuritySite"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The key for vpn-site that can be used for connections.
	SiteKey pulumi.StringPtrInput `pulumi:"siteKey"`
	// The VirtualWAN to which the vpnSite belongs
	VirtualWan SubResourcePtrInput `pulumi:"virtualWan"`
}

func (VpnSitePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteProperties)(nil)).Elem()
}

func (i VpnSitePropertiesArgs) ToVpnSitePropertiesOutput() VpnSitePropertiesOutput {
	return i.ToVpnSitePropertiesOutputWithContext(context.Background())
}

func (i VpnSitePropertiesArgs) ToVpnSitePropertiesOutputWithContext(ctx context.Context) VpnSitePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSitePropertiesOutput)
}

func (i VpnSitePropertiesArgs) ToVpnSitePropertiesPtrOutput() VpnSitePropertiesPtrOutput {
	return i.ToVpnSitePropertiesPtrOutputWithContext(context.Background())
}

func (i VpnSitePropertiesArgs) ToVpnSitePropertiesPtrOutputWithContext(ctx context.Context) VpnSitePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSitePropertiesOutput).ToVpnSitePropertiesPtrOutputWithContext(ctx)
}

// VpnSitePropertiesPtrInput is an input type that accepts VpnSitePropertiesArgs, VpnSitePropertiesPtr and VpnSitePropertiesPtrOutput values.
// You can construct a concrete instance of `VpnSitePropertiesPtrInput` via:
//
//          VpnSitePropertiesArgs{...}
//
//  or:
//
//          nil
type VpnSitePropertiesPtrInput interface {
	pulumi.Input

	ToVpnSitePropertiesPtrOutput() VpnSitePropertiesPtrOutput
	ToVpnSitePropertiesPtrOutputWithContext(context.Context) VpnSitePropertiesPtrOutput
}

type vpnSitePropertiesPtrType VpnSitePropertiesArgs

func VpnSitePropertiesPtr(v *VpnSitePropertiesArgs) VpnSitePropertiesPtrInput {
	return (*vpnSitePropertiesPtrType)(v)
}

func (*vpnSitePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnSiteProperties)(nil)).Elem()
}

func (i *vpnSitePropertiesPtrType) ToVpnSitePropertiesPtrOutput() VpnSitePropertiesPtrOutput {
	return i.ToVpnSitePropertiesPtrOutputWithContext(context.Background())
}

func (i *vpnSitePropertiesPtrType) ToVpnSitePropertiesPtrOutputWithContext(ctx context.Context) VpnSitePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSitePropertiesPtrOutput)
}

// Parameters for VpnSite
type VpnSitePropertiesOutput struct{ *pulumi.OutputState }

func (VpnSitePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteProperties)(nil)).Elem()
}

func (o VpnSitePropertiesOutput) ToVpnSitePropertiesOutput() VpnSitePropertiesOutput {
	return o
}

func (o VpnSitePropertiesOutput) ToVpnSitePropertiesOutputWithContext(ctx context.Context) VpnSitePropertiesOutput {
	return o
}

func (o VpnSitePropertiesOutput) ToVpnSitePropertiesPtrOutput() VpnSitePropertiesPtrOutput {
	return o.ToVpnSitePropertiesPtrOutputWithContext(context.Background())
}

func (o VpnSitePropertiesOutput) ToVpnSitePropertiesPtrOutputWithContext(ctx context.Context) VpnSitePropertiesPtrOutput {
	return o.ApplyT(func(v VpnSiteProperties) *VpnSiteProperties {
		return &v
	}).(VpnSitePropertiesPtrOutput)
}

// The AddressSpace that contains an array of IP address ranges.
func (o VpnSitePropertiesOutput) AddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v VpnSiteProperties) *AddressSpace { return v.AddressSpace }).(AddressSpacePtrOutput)
}

// The set of bgp properties.
func (o VpnSitePropertiesOutput) BgpProperties() BgpSettingsPtrOutput {
	return o.ApplyT(func(v VpnSiteProperties) *BgpSettings { return v.BgpProperties }).(BgpSettingsPtrOutput)
}

// The device properties
func (o VpnSitePropertiesOutput) DeviceProperties() DevicePropertiesPtrOutput {
	return o.ApplyT(func(v VpnSiteProperties) *DeviceProperties { return v.DeviceProperties }).(DevicePropertiesPtrOutput)
}

// The ip-address for the vpn-site.
func (o VpnSitePropertiesOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteProperties) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// IsSecuritySite flag
func (o VpnSitePropertiesOutput) IsSecuritySite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteProperties) *bool { return v.IsSecuritySite }).(pulumi.BoolPtrOutput)
}

// The provisioning state of the resource.
func (o VpnSitePropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The key for vpn-site that can be used for connections.
func (o VpnSitePropertiesOutput) SiteKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteProperties) *string { return v.SiteKey }).(pulumi.StringPtrOutput)
}

// The VirtualWAN to which the vpnSite belongs
func (o VpnSitePropertiesOutput) VirtualWan() SubResourcePtrOutput {
	return o.ApplyT(func(v VpnSiteProperties) *SubResource { return v.VirtualWan }).(SubResourcePtrOutput)
}

type VpnSitePropertiesPtrOutput struct{ *pulumi.OutputState }

func (VpnSitePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnSiteProperties)(nil)).Elem()
}

func (o VpnSitePropertiesPtrOutput) ToVpnSitePropertiesPtrOutput() VpnSitePropertiesPtrOutput {
	return o
}

func (o VpnSitePropertiesPtrOutput) ToVpnSitePropertiesPtrOutputWithContext(ctx context.Context) VpnSitePropertiesPtrOutput {
	return o
}

func (o VpnSitePropertiesPtrOutput) Elem() VpnSitePropertiesOutput {
	return o.ApplyT(func(v *VpnSiteProperties) VpnSiteProperties { return *v }).(VpnSitePropertiesOutput)
}

// The AddressSpace that contains an array of IP address ranges.
func (o VpnSitePropertiesPtrOutput) AddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v *VpnSiteProperties) *AddressSpace {
		if v == nil {
			return nil
		}
		return v.AddressSpace
	}).(AddressSpacePtrOutput)
}

// The set of bgp properties.
func (o VpnSitePropertiesPtrOutput) BgpProperties() BgpSettingsPtrOutput {
	return o.ApplyT(func(v *VpnSiteProperties) *BgpSettings {
		if v == nil {
			return nil
		}
		return v.BgpProperties
	}).(BgpSettingsPtrOutput)
}

// The device properties
func (o VpnSitePropertiesPtrOutput) DeviceProperties() DevicePropertiesPtrOutput {
	return o.ApplyT(func(v *VpnSiteProperties) *DeviceProperties {
		if v == nil {
			return nil
		}
		return v.DeviceProperties
	}).(DevicePropertiesPtrOutput)
}

// The ip-address for the vpn-site.
func (o VpnSitePropertiesPtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnSiteProperties) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// IsSecuritySite flag
func (o VpnSitePropertiesPtrOutput) IsSecuritySite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnSiteProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsSecuritySite
	}).(pulumi.BoolPtrOutput)
}

// The provisioning state of the resource.
func (o VpnSitePropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnSiteProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The key for vpn-site that can be used for connections.
func (o VpnSitePropertiesPtrOutput) SiteKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnSiteProperties) *string {
		if v == nil {
			return nil
		}
		return v.SiteKey
	}).(pulumi.StringPtrOutput)
}

// The VirtualWAN to which the vpnSite belongs
func (o VpnSitePropertiesPtrOutput) VirtualWan() SubResourcePtrOutput {
	return o.ApplyT(func(v *VpnSiteProperties) *SubResource {
		if v == nil {
			return nil
		}
		return v.VirtualWan
	}).(SubResourcePtrOutput)
}

// Parameters for VpnSite
type VpnSitePropertiesResponse struct {
	// The AddressSpace that contains an array of IP address ranges.
	AddressSpace *AddressSpaceResponse `pulumi:"addressSpace"`
	// The set of bgp properties.
	BgpProperties *BgpSettingsResponse `pulumi:"bgpProperties"`
	// The device properties
	DeviceProperties *DevicePropertiesResponse `pulumi:"deviceProperties"`
	// The ip-address for the vpn-site.
	IpAddress *string `pulumi:"ipAddress"`
	// IsSecuritySite flag
	IsSecuritySite *bool `pulumi:"isSecuritySite"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The key for vpn-site that can be used for connections.
	SiteKey *string `pulumi:"siteKey"`
	// The VirtualWAN to which the vpnSite belongs
	VirtualWan *SubResourceResponse `pulumi:"virtualWan"`
}

// VpnSitePropertiesResponseInput is an input type that accepts VpnSitePropertiesResponseArgs and VpnSitePropertiesResponseOutput values.
// You can construct a concrete instance of `VpnSitePropertiesResponseInput` via:
//
//          VpnSitePropertiesResponseArgs{...}
type VpnSitePropertiesResponseInput interface {
	pulumi.Input

	ToVpnSitePropertiesResponseOutput() VpnSitePropertiesResponseOutput
	ToVpnSitePropertiesResponseOutputWithContext(context.Context) VpnSitePropertiesResponseOutput
}

// Parameters for VpnSite
type VpnSitePropertiesResponseArgs struct {
	// The AddressSpace that contains an array of IP address ranges.
	AddressSpace AddressSpaceResponsePtrInput `pulumi:"addressSpace"`
	// The set of bgp properties.
	BgpProperties BgpSettingsResponsePtrInput `pulumi:"bgpProperties"`
	// The device properties
	DeviceProperties DevicePropertiesResponsePtrInput `pulumi:"deviceProperties"`
	// The ip-address for the vpn-site.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// IsSecuritySite flag
	IsSecuritySite pulumi.BoolPtrInput `pulumi:"isSecuritySite"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The key for vpn-site that can be used for connections.
	SiteKey pulumi.StringPtrInput `pulumi:"siteKey"`
	// The VirtualWAN to which the vpnSite belongs
	VirtualWan SubResourceResponsePtrInput `pulumi:"virtualWan"`
}

func (VpnSitePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSitePropertiesResponse)(nil)).Elem()
}

func (i VpnSitePropertiesResponseArgs) ToVpnSitePropertiesResponseOutput() VpnSitePropertiesResponseOutput {
	return i.ToVpnSitePropertiesResponseOutputWithContext(context.Background())
}

func (i VpnSitePropertiesResponseArgs) ToVpnSitePropertiesResponseOutputWithContext(ctx context.Context) VpnSitePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSitePropertiesResponseOutput)
}

func (i VpnSitePropertiesResponseArgs) ToVpnSitePropertiesResponsePtrOutput() VpnSitePropertiesResponsePtrOutput {
	return i.ToVpnSitePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i VpnSitePropertiesResponseArgs) ToVpnSitePropertiesResponsePtrOutputWithContext(ctx context.Context) VpnSitePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSitePropertiesResponseOutput).ToVpnSitePropertiesResponsePtrOutputWithContext(ctx)
}

// VpnSitePropertiesResponsePtrInput is an input type that accepts VpnSitePropertiesResponseArgs, VpnSitePropertiesResponsePtr and VpnSitePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `VpnSitePropertiesResponsePtrInput` via:
//
//          VpnSitePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type VpnSitePropertiesResponsePtrInput interface {
	pulumi.Input

	ToVpnSitePropertiesResponsePtrOutput() VpnSitePropertiesResponsePtrOutput
	ToVpnSitePropertiesResponsePtrOutputWithContext(context.Context) VpnSitePropertiesResponsePtrOutput
}

type vpnSitePropertiesResponsePtrType VpnSitePropertiesResponseArgs

func VpnSitePropertiesResponsePtr(v *VpnSitePropertiesResponseArgs) VpnSitePropertiesResponsePtrInput {
	return (*vpnSitePropertiesResponsePtrType)(v)
}

func (*vpnSitePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnSitePropertiesResponse)(nil)).Elem()
}

func (i *vpnSitePropertiesResponsePtrType) ToVpnSitePropertiesResponsePtrOutput() VpnSitePropertiesResponsePtrOutput {
	return i.ToVpnSitePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *vpnSitePropertiesResponsePtrType) ToVpnSitePropertiesResponsePtrOutputWithContext(ctx context.Context) VpnSitePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSitePropertiesResponsePtrOutput)
}

// Parameters for VpnSite
type VpnSitePropertiesResponseOutput struct{ *pulumi.OutputState }

func (VpnSitePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSitePropertiesResponse)(nil)).Elem()
}

func (o VpnSitePropertiesResponseOutput) ToVpnSitePropertiesResponseOutput() VpnSitePropertiesResponseOutput {
	return o
}

func (o VpnSitePropertiesResponseOutput) ToVpnSitePropertiesResponseOutputWithContext(ctx context.Context) VpnSitePropertiesResponseOutput {
	return o
}

func (o VpnSitePropertiesResponseOutput) ToVpnSitePropertiesResponsePtrOutput() VpnSitePropertiesResponsePtrOutput {
	return o.ToVpnSitePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o VpnSitePropertiesResponseOutput) ToVpnSitePropertiesResponsePtrOutputWithContext(ctx context.Context) VpnSitePropertiesResponsePtrOutput {
	return o.ApplyT(func(v VpnSitePropertiesResponse) *VpnSitePropertiesResponse {
		return &v
	}).(VpnSitePropertiesResponsePtrOutput)
}

// The AddressSpace that contains an array of IP address ranges.
func (o VpnSitePropertiesResponseOutput) AddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v VpnSitePropertiesResponse) *AddressSpaceResponse { return v.AddressSpace }).(AddressSpaceResponsePtrOutput)
}

// The set of bgp properties.
func (o VpnSitePropertiesResponseOutput) BgpProperties() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v VpnSitePropertiesResponse) *BgpSettingsResponse { return v.BgpProperties }).(BgpSettingsResponsePtrOutput)
}

// The device properties
func (o VpnSitePropertiesResponseOutput) DeviceProperties() DevicePropertiesResponsePtrOutput {
	return o.ApplyT(func(v VpnSitePropertiesResponse) *DevicePropertiesResponse { return v.DeviceProperties }).(DevicePropertiesResponsePtrOutput)
}

// The ip-address for the vpn-site.
func (o VpnSitePropertiesResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSitePropertiesResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// IsSecuritySite flag
func (o VpnSitePropertiesResponseOutput) IsSecuritySite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSitePropertiesResponse) *bool { return v.IsSecuritySite }).(pulumi.BoolPtrOutput)
}

// The provisioning state of the resource.
func (o VpnSitePropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSitePropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The key for vpn-site that can be used for connections.
func (o VpnSitePropertiesResponseOutput) SiteKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSitePropertiesResponse) *string { return v.SiteKey }).(pulumi.StringPtrOutput)
}

// The VirtualWAN to which the vpnSite belongs
func (o VpnSitePropertiesResponseOutput) VirtualWan() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VpnSitePropertiesResponse) *SubResourceResponse { return v.VirtualWan }).(SubResourceResponsePtrOutput)
}

type VpnSitePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VpnSitePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnSitePropertiesResponse)(nil)).Elem()
}

func (o VpnSitePropertiesResponsePtrOutput) ToVpnSitePropertiesResponsePtrOutput() VpnSitePropertiesResponsePtrOutput {
	return o
}

func (o VpnSitePropertiesResponsePtrOutput) ToVpnSitePropertiesResponsePtrOutputWithContext(ctx context.Context) VpnSitePropertiesResponsePtrOutput {
	return o
}

func (o VpnSitePropertiesResponsePtrOutput) Elem() VpnSitePropertiesResponseOutput {
	return o.ApplyT(func(v *VpnSitePropertiesResponse) VpnSitePropertiesResponse { return *v }).(VpnSitePropertiesResponseOutput)
}

// The AddressSpace that contains an array of IP address ranges.
func (o VpnSitePropertiesResponsePtrOutput) AddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v *VpnSitePropertiesResponse) *AddressSpaceResponse {
		if v == nil {
			return nil
		}
		return v.AddressSpace
	}).(AddressSpaceResponsePtrOutput)
}

// The set of bgp properties.
func (o VpnSitePropertiesResponsePtrOutput) BgpProperties() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v *VpnSitePropertiesResponse) *BgpSettingsResponse {
		if v == nil {
			return nil
		}
		return v.BgpProperties
	}).(BgpSettingsResponsePtrOutput)
}

// The device properties
func (o VpnSitePropertiesResponsePtrOutput) DeviceProperties() DevicePropertiesResponsePtrOutput {
	return o.ApplyT(func(v *VpnSitePropertiesResponse) *DevicePropertiesResponse {
		if v == nil {
			return nil
		}
		return v.DeviceProperties
	}).(DevicePropertiesResponsePtrOutput)
}

// The ip-address for the vpn-site.
func (o VpnSitePropertiesResponsePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnSitePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// IsSecuritySite flag
func (o VpnSitePropertiesResponsePtrOutput) IsSecuritySite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnSitePropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsSecuritySite
	}).(pulumi.BoolPtrOutput)
}

// The provisioning state of the resource.
func (o VpnSitePropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnSitePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The key for vpn-site that can be used for connections.
func (o VpnSitePropertiesResponsePtrOutput) SiteKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnSitePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SiteKey
	}).(pulumi.StringPtrOutput)
}

// The VirtualWAN to which the vpnSite belongs
func (o VpnSitePropertiesResponsePtrOutput) VirtualWan() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *VpnSitePropertiesResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.VirtualWan
	}).(SubResourceResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AddressSpaceOutput{})
	pulumi.RegisterOutputType(AddressSpacePtrOutput{})
	pulumi.RegisterOutputType(AddressSpaceResponseOutput{})
	pulumi.RegisterOutputType(AddressSpaceResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTypeOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAuthenticationCertificateOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAuthenticationCertificateArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAuthenticationCertificatePropertiesFormatOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAuthenticationCertificatePropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAuthenticationCertificatePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAuthenticationCertificatePropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAuthenticationCertificateResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAuthenticationCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAutoscaleConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAutoscaleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAutoscaleConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAutoscaleConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayConnectionDrainingOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayConnectionDrainingPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayConnectionDrainingResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayConnectionDrainingResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayCustomErrorOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayCustomErrorArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayCustomErrorResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayCustomErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallDisabledRuleGroupOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallDisabledRuleGroupArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallDisabledRuleGroupResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallExclusionOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallExclusionArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallExclusionResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallExclusionResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHeaderConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHeaderConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHeaderConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHeaderConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRuleOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRuleArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRulePropertiesFormatOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRulePropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRulePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRulePropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRuleResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeHealthResponseMatchOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeHealthResponseMatchPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeHealthResponseMatchResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbePropertiesFormatOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbePropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbePropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRedirectConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRedirectConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRedirectConfigurationPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRedirectConfigurationPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRedirectConfigurationPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRedirectConfigurationPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRedirectConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRedirectConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRulePropertiesFormatOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRulePropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRulePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRulePropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleActionSetOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleActionSetPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleActionSetResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleActionSetResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificatePropertiesFormatOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificatePropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificatePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificatePropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslPolicyOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslPolicyPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslPolicyResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedRootCertificateOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedRootCertificatePropertiesFormatOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedRootCertificatePropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedRootCertificatePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedRootCertificatePropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayWebApplicationFirewallConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupTypeOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupTypeArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupResponseOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(AuthorizationPropertiesFormatOutput{})
	pulumi.RegisterOutputType(AuthorizationPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(AuthorizationPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallTypeOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleCollectionOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleCollectionArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleCollectionPropertiesFormatOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleCollectionPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleCollectionPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleCollectionPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleCollectionResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleCollectionResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleProtocolOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleProtocolArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleProtocolResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleProtocolResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationPropertiesFormatOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRCActionOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRCActionPtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRCActionResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRCActionResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleCollectionOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleCollectionArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleCollectionPropertiesOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleCollectionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleCollectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleCollectionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleCollectionResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleCollectionResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleCollectionOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleCollectionArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleCollectionPropertiesFormatOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleCollectionPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleCollectionPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleCollectionPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleCollectionResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleCollectionResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallPropertiesFormatOutput{})
	pulumi.RegisterOutputType(AzureFirewallPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallRCActionOutput{})
	pulumi.RegisterOutputType(AzureFirewallRCActionPtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallRCActionResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallRCActionResponsePtrOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolArrayOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolPropertiesFormatOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolResponseOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(BgpSettingsOutput{})
	pulumi.RegisterOutputType(BgpSettingsPtrOutput{})
	pulumi.RegisterOutputType(BgpSettingsResponseOutput{})
	pulumi.RegisterOutputType(BgpSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTypeOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorDestinationOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorDestinationPtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorDestinationResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorDestinationResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorParametersOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorParametersPtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorResultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorResultPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSourceOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSourcePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSourceResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSourceResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerOutput{})
	pulumi.RegisterOutputType(ContainerPtrOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceConfigurationOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceConfigurationPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceConfigurationPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceConfigurationPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceConfigurationPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceIpConfigurationOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceIpConfigurationPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceIpConfigurationPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceIpConfigurationPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceIpConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceIpConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfacePropertiesFormatOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfacePropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfacePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfacePropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceResponseOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceResponseArrayOutput{})
	pulumi.RegisterOutputType(ContainerResponseOutput{})
	pulumi.RegisterOutputType(ContainerResponsePtrOutput{})
	pulumi.RegisterOutputType(DdosCustomPolicyTypeOutput{})
	pulumi.RegisterOutputType(DdosCustomPolicyPropertiesFormatOutput{})
	pulumi.RegisterOutputType(DdosCustomPolicyPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(DdosCustomPolicyPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(DdosCustomPolicyPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(DdosProtectionPlanTypeOutput{})
	pulumi.RegisterOutputType(DdosProtectionPlanPropertiesFormatOutput{})
	pulumi.RegisterOutputType(DdosProtectionPlanPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(DdosProtectionPlanPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(DdosProtectionPlanPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(DdosSettingsOutput{})
	pulumi.RegisterOutputType(DdosSettingsPtrOutput{})
	pulumi.RegisterOutputType(DdosSettingsResponseOutput{})
	pulumi.RegisterOutputType(DdosSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DelegationOutput{})
	pulumi.RegisterOutputType(DelegationArrayOutput{})
	pulumi.RegisterOutputType(DelegationResponseOutput{})
	pulumi.RegisterOutputType(DelegationResponseArrayOutput{})
	pulumi.RegisterOutputType(DevicePropertiesOutput{})
	pulumi.RegisterOutputType(DevicePropertiesPtrOutput{})
	pulumi.RegisterOutputType(DevicePropertiesResponseOutput{})
	pulumi.RegisterOutputType(DevicePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DhcpOptionsOutput{})
	pulumi.RegisterOutputType(DhcpOptionsPtrOutput{})
	pulumi.RegisterOutputType(DhcpOptionsResponseOutput{})
	pulumi.RegisterOutputType(DhcpOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(EndpointServiceOutput{})
	pulumi.RegisterOutputType(EndpointServicePtrOutput{})
	pulumi.RegisterOutputType(EndpointServiceResponseOutput{})
	pulumi.RegisterOutputType(EndpointServiceResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitTypeOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationTypeOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationTypeArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitConnectionTypeOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitConnectionTypeArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitConnectionPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitConnectionPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitConnectionPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitConnectionPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitConnectionResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringTypeOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringTypeArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringConfigOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringConfigPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringConfigResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringDefinitionOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringIdOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringIdPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringIdResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringIdResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitServiceProviderPropertiesOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitServiceProviderPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitServiceProviderPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitStatsOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitStatsPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitStatsResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitStatsResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionTypeOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionIdOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionIdPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionIdResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionIdResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCrossConnectionPeeringTypeOutput{})
	pulumi.RegisterOutputType(ExpressRouteCrossConnectionPeeringPropertiesOutput{})
	pulumi.RegisterOutputType(ExpressRouteCrossConnectionPeeringPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCrossConnectionPeeringPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCrossConnectionPeeringPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayTypeOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesPropertiesOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesResponsePropertiesOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressRoutePortTypeOutput{})
	pulumi.RegisterOutputType(ExpressRoutePortPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ExpressRoutePortPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ExpressRoutePortPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ExpressRoutePortPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationPropertiesFormatOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(HubVirtualNetworkConnectionOutput{})
	pulumi.RegisterOutputType(HubVirtualNetworkConnectionArrayOutput{})
	pulumi.RegisterOutputType(HubVirtualNetworkConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(HubVirtualNetworkConnectionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(HubVirtualNetworkConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(HubVirtualNetworkConnectionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(HubVirtualNetworkConnectionResponseOutput{})
	pulumi.RegisterOutputType(HubVirtualNetworkConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(IPConfigurationOutput{})
	pulumi.RegisterOutputType(IPConfigurationProfileOutput{})
	pulumi.RegisterOutputType(IPConfigurationProfileArrayOutput{})
	pulumi.RegisterOutputType(IPConfigurationProfilePropertiesFormatOutput{})
	pulumi.RegisterOutputType(IPConfigurationProfilePropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(IPConfigurationProfilePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(IPConfigurationProfilePropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(IPConfigurationProfileResponseOutput{})
	pulumi.RegisterOutputType(IPConfigurationProfileResponseArrayOutput{})
	pulumi.RegisterOutputType(IPConfigurationPropertiesFormatOutput{})
	pulumi.RegisterOutputType(IPConfigurationPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(IPConfigurationPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(IPConfigurationPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(InboundNatPoolOutput{})
	pulumi.RegisterOutputType(InboundNatPoolArrayOutput{})
	pulumi.RegisterOutputType(InboundNatPoolPropertiesFormatOutput{})
	pulumi.RegisterOutputType(InboundNatPoolPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(InboundNatPoolPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(InboundNatPoolPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(InboundNatPoolResponseOutput{})
	pulumi.RegisterOutputType(InboundNatPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(InboundNatRuleTypeOutput{})
	pulumi.RegisterOutputType(InboundNatRuleTypeArrayOutput{})
	pulumi.RegisterOutputType(InboundNatRuleDefinitionOutput{})
	pulumi.RegisterOutputType(InboundNatRulePropertiesFormatOutput{})
	pulumi.RegisterOutputType(InboundNatRulePropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(InboundNatRulePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(InboundNatRulePropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(InboundNatRuleResponseOutput{})
	pulumi.RegisterOutputType(InboundNatRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(InterfaceEndpointTypeOutput{})
	pulumi.RegisterOutputType(InterfaceEndpointDefinitionOutput{})
	pulumi.RegisterOutputType(InterfaceEndpointPropertiesOutput{})
	pulumi.RegisterOutputType(InterfaceEndpointPropertiesPtrOutput{})
	pulumi.RegisterOutputType(InterfaceEndpointPropertiesResponseOutput{})
	pulumi.RegisterOutputType(InterfaceEndpointPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(InterfaceEndpointResponseOutput{})
	pulumi.RegisterOutputType(InterfaceEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(InterfaceEndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(IpTagOutput{})
	pulumi.RegisterOutputType(IpTagArrayOutput{})
	pulumi.RegisterOutputType(IpTagResponseOutput{})
	pulumi.RegisterOutputType(IpTagResponseArrayOutput{})
	pulumi.RegisterOutputType(IpsecPolicyOutput{})
	pulumi.RegisterOutputType(IpsecPolicyArrayOutput{})
	pulumi.RegisterOutputType(IpsecPolicyResponseOutput{})
	pulumi.RegisterOutputType(IpsecPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(Ipv6ExpressRouteCircuitPeeringConfigOutput{})
	pulumi.RegisterOutputType(Ipv6ExpressRouteCircuitPeeringConfigPtrOutput{})
	pulumi.RegisterOutputType(Ipv6ExpressRouteCircuitPeeringConfigResponseOutput{})
	pulumi.RegisterOutputType(Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerTypeOutput{})
	pulumi.RegisterOutputType(LoadBalancerPropertiesFormatOutput{})
	pulumi.RegisterOutputType(LoadBalancerPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancerPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerSkuOutput{})
	pulumi.RegisterOutputType(LoadBalancerSkuPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerSkuResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancerSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(LoadBalancingRuleOutput{})
	pulumi.RegisterOutputType(LoadBalancingRuleArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancingRulePropertiesFormatOutput{})
	pulumi.RegisterOutputType(LoadBalancingRulePropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancingRulePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancingRulePropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(LoadBalancingRuleResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancingRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayTypeOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayTypePtrOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayPropertiesFormatOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayResponseOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTypeOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDefinitionOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsPtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationPtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationPropertiesFormatOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfacePropertiesFormatOutput{})
	pulumi.RegisterOutputType(NetworkInterfacePropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfacePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfacePropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTapConfigurationTypeOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTapConfigurationTypeArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTapConfigurationDefinitionOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTapConfigurationPropertiesFormatOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTapConfigurationPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTapConfigurationPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTapConfigurationPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTapConfigurationResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTapConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkProfileTypeOutput{})
	pulumi.RegisterOutputType(NetworkProfilePropertiesFormatOutput{})
	pulumi.RegisterOutputType(NetworkProfilePropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(NetworkProfilePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(NetworkProfilePropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupTypeOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupTypePtrOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupDefinitionOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupPropertiesFormatOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupResponseOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkWatcherTypeOutput{})
	pulumi.RegisterOutputType(NetworkWatcherPropertiesFormatOutput{})
	pulumi.RegisterOutputType(NetworkWatcherPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(NetworkWatcherPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(NetworkWatcherPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(OutboundRuleOutput{})
	pulumi.RegisterOutputType(OutboundRuleArrayOutput{})
	pulumi.RegisterOutputType(OutboundRulePropertiesFormatOutput{})
	pulumi.RegisterOutputType(OutboundRulePropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(OutboundRulePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(OutboundRulePropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(OutboundRuleResponseOutput{})
	pulumi.RegisterOutputType(OutboundRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnGatewayPropertiesOutput{})
	pulumi.RegisterOutputType(P2SVpnGatewayPropertiesPtrOutput{})
	pulumi.RegisterOutputType(P2SVpnGatewayPropertiesResponseOutput{})
	pulumi.RegisterOutputType(P2SVpnGatewayPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusClientRootCertificateOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusClientRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusClientRootCertificatePropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusClientRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusServerRootCertificateOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusServerRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusServerRootCertificatePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusServerRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRevokedCertificateOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRevokedCertificatePropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRootCertificateOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRootCertificatePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigurationOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigurationArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigurationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigurationResponseOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(P2sVpnGatewayTypeOutput{})
	pulumi.RegisterOutputType(P2sVpnServerConfigurationTypeOutput{})
	pulumi.RegisterOutputType(PacketCaptureTypeOutput{})
	pulumi.RegisterOutputType(PacketCaptureFilterOutput{})
	pulumi.RegisterOutputType(PacketCaptureFilterArrayOutput{})
	pulumi.RegisterOutputType(PacketCaptureFilterResponseOutput{})
	pulumi.RegisterOutputType(PacketCaptureFilterResponseArrayOutput{})
	pulumi.RegisterOutputType(PacketCaptureParametersOutput{})
	pulumi.RegisterOutputType(PacketCaptureParametersPtrOutput{})
	pulumi.RegisterOutputType(PacketCaptureResultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PacketCaptureResultPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(PacketCaptureStorageLocationOutput{})
	pulumi.RegisterOutputType(PacketCaptureStorageLocationPtrOutput{})
	pulumi.RegisterOutputType(PacketCaptureStorageLocationResponseOutput{})
	pulumi.RegisterOutputType(PacketCaptureStorageLocationResponsePtrOutput{})
	pulumi.RegisterOutputType(ProbeOutput{})
	pulumi.RegisterOutputType(ProbeArrayOutput{})
	pulumi.RegisterOutputType(ProbePropertiesFormatOutput{})
	pulumi.RegisterOutputType(ProbePropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ProbePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ProbePropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ProbeResponseOutput{})
	pulumi.RegisterOutputType(ProbeResponseArrayOutput{})
	pulumi.RegisterOutputType(ProtocolCustomSettingsFormatOutput{})
	pulumi.RegisterOutputType(ProtocolCustomSettingsFormatArrayOutput{})
	pulumi.RegisterOutputType(ProtocolCustomSettingsFormatResponseOutput{})
	pulumi.RegisterOutputType(ProtocolCustomSettingsFormatResponseArrayOutput{})
	pulumi.RegisterOutputType(PublicIPAddressTypeOutput{})
	pulumi.RegisterOutputType(PublicIPAddressTypePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDefinitionOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsPtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressPropertiesFormatOutput{})
	pulumi.RegisterOutputType(PublicIPAddressPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuPtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIPPrefixTypeOutput{})
	pulumi.RegisterOutputType(PublicIPPrefixPropertiesFormatOutput{})
	pulumi.RegisterOutputType(PublicIPPrefixPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(PublicIPPrefixPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(PublicIPPrefixPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIPPrefixSkuOutput{})
	pulumi.RegisterOutputType(PublicIPPrefixSkuPtrOutput{})
	pulumi.RegisterOutputType(PublicIPPrefixSkuResponseOutput{})
	pulumi.RegisterOutputType(PublicIPPrefixSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(ReferencedPublicIpAddressOutput{})
	pulumi.RegisterOutputType(ReferencedPublicIpAddressArrayOutput{})
	pulumi.RegisterOutputType(ReferencedPublicIpAddressResponseOutput{})
	pulumi.RegisterOutputType(ReferencedPublicIpAddressResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkArrayOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkFormatOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkFormatPtrOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkFormatResponseOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkResponseOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(RouteTypeOutput{})
	pulumi.RegisterOutputType(RouteTypeArrayOutput{})
	pulumi.RegisterOutputType(RouteFilterTypeOutput{})
	pulumi.RegisterOutputType(RouteFilterDefinitionOutput{})
	pulumi.RegisterOutputType(RouteFilterDefinitionPtrOutput{})
	pulumi.RegisterOutputType(RouteFilterPropertiesFormatOutput{})
	pulumi.RegisterOutputType(RouteFilterPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(RouteFilterPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(RouteFilterPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(RouteFilterResponseOutput{})
	pulumi.RegisterOutputType(RouteFilterResponsePtrOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleTypeOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleTypeArrayOutput{})
	pulumi.RegisterOutputType(RouteFilterRulePropertiesFormatOutput{})
	pulumi.RegisterOutputType(RouteFilterRulePropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(RouteFilterRulePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(RouteFilterRulePropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleResponseOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(RoutePropertiesFormatOutput{})
	pulumi.RegisterOutputType(RoutePropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(RoutePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(RoutePropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(RouteResponseOutput{})
	pulumi.RegisterOutputType(RouteResponseArrayOutput{})
	pulumi.RegisterOutputType(RouteTableTypeOutput{})
	pulumi.RegisterOutputType(RouteTableTypePtrOutput{})
	pulumi.RegisterOutputType(RouteTableDefinitionOutput{})
	pulumi.RegisterOutputType(RouteTablePropertiesFormatOutput{})
	pulumi.RegisterOutputType(RouteTablePropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(RouteTablePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(RouteTablePropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(RouteTableResponseOutput{})
	pulumi.RegisterOutputType(RouteTableResponsePtrOutput{})
	pulumi.RegisterOutputType(SecurityRuleTypeOutput{})
	pulumi.RegisterOutputType(SecurityRuleTypeArrayOutput{})
	pulumi.RegisterOutputType(SecurityRulePropertiesFormatOutput{})
	pulumi.RegisterOutputType(SecurityRulePropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(SecurityRulePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(SecurityRulePropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(SecurityRuleResponseOutput{})
	pulumi.RegisterOutputType(SecurityRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkArrayOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkResponseOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceDelegationPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ServiceDelegationPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ServiceDelegationPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ServiceDelegationPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyTypeOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionTypeOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionResponseOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyResponseOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatResponseArrayOutput{})
	pulumi.RegisterOutputType(SubResourceOutput{})
	pulumi.RegisterOutputType(SubResourcePtrOutput{})
	pulumi.RegisterOutputType(SubResourceArrayOutput{})
	pulumi.RegisterOutputType(SubResourceResponseOutput{})
	pulumi.RegisterOutputType(SubResourceResponsePtrOutput{})
	pulumi.RegisterOutputType(SubResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(SubnetTypeOutput{})
	pulumi.RegisterOutputType(SubnetTypePtrOutput{})
	pulumi.RegisterOutputType(SubnetTypeArrayOutput{})
	pulumi.RegisterOutputType(SubnetDefinitionOutput{})
	pulumi.RegisterOutputType(SubnetPropertiesFormatOutput{})
	pulumi.RegisterOutputType(SubnetPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(SubnetPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(SubnetPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(SubnetResponseOutput{})
	pulumi.RegisterOutputType(SubnetResponsePtrOutput{})
	pulumi.RegisterOutputType(SubnetResponseArrayOutput{})
	pulumi.RegisterOutputType(TunnelConnectionHealthOutput{})
	pulumi.RegisterOutputType(TunnelConnectionHealthResponseOutput{})
	pulumi.RegisterOutputType(TunnelConnectionHealthResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubTypeOutput{})
	pulumi.RegisterOutputType(VirtualHubIdOutput{})
	pulumi.RegisterOutputType(VirtualHubIdPtrOutput{})
	pulumi.RegisterOutputType(VirtualHubIdResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubIdResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualHubPropertiesOutput{})
	pulumi.RegisterOutputType(VirtualHubPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualHubPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTablePtrOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTypeOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayTypeOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayTypePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayConnectionTypeOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayConnectionPropertiesFormatOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayConnectionPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayConnectionPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayConnectionPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationPropertiesFormatOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPropertiesFormatOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringTypeOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringTypeArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringPropertiesFormatOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesFormatOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapTypeOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapDefinitionOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapDefinitionPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapDefinitionArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapPropertiesFormatOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapPropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapPropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualWanTypeOutput{})
	pulumi.RegisterOutputType(VirtualWanPropertiesOutput{})
	pulumi.RegisterOutputType(VirtualWanPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualWanPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualWanPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(VpnClientConnectionHealthOutput{})
	pulumi.RegisterOutputType(VpnClientConnectionHealthResponseOutput{})
	pulumi.RegisterOutputType(VpnClientConnectionHealthResponsePtrOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificatePropertiesFormatOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificatePropertiesFormatPtrOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificatePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificatePropertiesFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificatePropertiesFormatOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificatePropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionTypeOutput{})
	pulumi.RegisterOutputType(VpnConnectionTypeArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(VpnConnectionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VpnConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VpnConnectionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VpnConnectionResponseOutput{})
	pulumi.RegisterOutputType(VpnConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnGatewayTypeOutput{})
	pulumi.RegisterOutputType(VpnGatewayPropertiesOutput{})
	pulumi.RegisterOutputType(VpnGatewayPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VpnGatewayPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VpnGatewayPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VpnSiteTypeOutput{})
	pulumi.RegisterOutputType(VpnSitePropertiesOutput{})
	pulumi.RegisterOutputType(VpnSitePropertiesPtrOutput{})
	pulumi.RegisterOutputType(VpnSitePropertiesResponseOutput{})
	pulumi.RegisterOutputType(VpnSitePropertiesResponsePtrOutput{})
}
