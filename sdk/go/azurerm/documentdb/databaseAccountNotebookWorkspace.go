// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package documentdb

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A notebook workspace resource
type DatabaseAccountNotebookWorkspace struct {
	pulumi.CustomResourceState

	// The name of the database account.
	Name pulumi.StringOutput `pulumi:"name"`
	// Resource properties.
	Properties NotebookWorkspacePropertiesResponseOutput `pulumi:"properties"`
	// The type of Azure resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDatabaseAccountNotebookWorkspace registers a new resource with the given unique name, arguments, and options.
func NewDatabaseAccountNotebookWorkspace(ctx *pulumi.Context,
	name string, args *DatabaseAccountNotebookWorkspaceArgs, opts ...pulumi.ResourceOption) (*DatabaseAccountNotebookWorkspace, error) {
	if args == nil || args.AccountName == nil {
		return nil, errors.New("missing required argument 'AccountName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &DatabaseAccountNotebookWorkspaceArgs{}
	}
	var resource DatabaseAccountNotebookWorkspace
	err := ctx.RegisterResource("azurerm:documentdb:DatabaseAccountNotebookWorkspace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseAccountNotebookWorkspace gets an existing DatabaseAccountNotebookWorkspace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseAccountNotebookWorkspace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseAccountNotebookWorkspaceState, opts ...pulumi.ResourceOption) (*DatabaseAccountNotebookWorkspace, error) {
	var resource DatabaseAccountNotebookWorkspace
	err := ctx.ReadResource("azurerm:documentdb:DatabaseAccountNotebookWorkspace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseAccountNotebookWorkspace resources.
type databaseAccountNotebookWorkspaceState struct {
	// The name of the database account.
	Name *string `pulumi:"name"`
	// Resource properties.
	Properties *NotebookWorkspacePropertiesResponse `pulumi:"properties"`
	// The type of Azure resource.
	Type *string `pulumi:"type"`
}

type DatabaseAccountNotebookWorkspaceState struct {
	// The name of the database account.
	Name pulumi.StringPtrInput
	// Resource properties.
	Properties NotebookWorkspacePropertiesResponsePtrInput
	// The type of Azure resource.
	Type pulumi.StringPtrInput
}

func (DatabaseAccountNotebookWorkspaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseAccountNotebookWorkspaceState)(nil)).Elem()
}

type databaseAccountNotebookWorkspaceArgs struct {
	// Cosmos DB database account name.
	AccountName string `pulumi:"accountName"`
	// The name of the notebook workspace resource.
	Name string `pulumi:"name"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a DatabaseAccountNotebookWorkspace resource.
type DatabaseAccountNotebookWorkspaceArgs struct {
	// Cosmos DB database account name.
	AccountName pulumi.StringInput
	// The name of the notebook workspace resource.
	Name pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
}

func (DatabaseAccountNotebookWorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseAccountNotebookWorkspaceArgs)(nil)).Elem()
}
