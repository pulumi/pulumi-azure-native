// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ApiProperties struct {
	// Describes the ServerVersion of an a MongoDB account.
	ServerVersion *string `pulumi:"serverVersion"`
}

// ApiPropertiesInput is an input type that accepts ApiPropertiesArgs and ApiPropertiesOutput values.
// You can construct a concrete instance of `ApiPropertiesInput` via:
//
//          ApiPropertiesArgs{...}
type ApiPropertiesInput interface {
	pulumi.Input

	ToApiPropertiesOutput() ApiPropertiesOutput
	ToApiPropertiesOutputWithContext(context.Context) ApiPropertiesOutput
}

type ApiPropertiesArgs struct {
	// Describes the ServerVersion of an a MongoDB account.
	ServerVersion pulumi.StringPtrInput `pulumi:"serverVersion"`
}

func (ApiPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiProperties)(nil)).Elem()
}

func (i ApiPropertiesArgs) ToApiPropertiesOutput() ApiPropertiesOutput {
	return i.ToApiPropertiesOutputWithContext(context.Background())
}

func (i ApiPropertiesArgs) ToApiPropertiesOutputWithContext(ctx context.Context) ApiPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiPropertiesOutput)
}

func (i ApiPropertiesArgs) ToApiPropertiesPtrOutput() ApiPropertiesPtrOutput {
	return i.ToApiPropertiesPtrOutputWithContext(context.Background())
}

func (i ApiPropertiesArgs) ToApiPropertiesPtrOutputWithContext(ctx context.Context) ApiPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiPropertiesOutput).ToApiPropertiesPtrOutputWithContext(ctx)
}

// ApiPropertiesPtrInput is an input type that accepts ApiPropertiesArgs, ApiPropertiesPtr and ApiPropertiesPtrOutput values.
// You can construct a concrete instance of `ApiPropertiesPtrInput` via:
//
//          ApiPropertiesArgs{...}
//
//  or:
//
//          nil
type ApiPropertiesPtrInput interface {
	pulumi.Input

	ToApiPropertiesPtrOutput() ApiPropertiesPtrOutput
	ToApiPropertiesPtrOutputWithContext(context.Context) ApiPropertiesPtrOutput
}

type apiPropertiesPtrType ApiPropertiesArgs

func ApiPropertiesPtr(v *ApiPropertiesArgs) ApiPropertiesPtrInput {
	return (*apiPropertiesPtrType)(v)
}

func (*apiPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiProperties)(nil)).Elem()
}

func (i *apiPropertiesPtrType) ToApiPropertiesPtrOutput() ApiPropertiesPtrOutput {
	return i.ToApiPropertiesPtrOutputWithContext(context.Background())
}

func (i *apiPropertiesPtrType) ToApiPropertiesPtrOutputWithContext(ctx context.Context) ApiPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiPropertiesPtrOutput)
}

type ApiPropertiesResponse struct {
	// Describes the ServerVersion of an a MongoDB account.
	ServerVersion *string `pulumi:"serverVersion"`
}

type ApiPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApiPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiPropertiesResponse)(nil)).Elem()
}

func (o ApiPropertiesResponseOutput) ToApiPropertiesResponseOutput() ApiPropertiesResponseOutput {
	return o
}

func (o ApiPropertiesResponseOutput) ToApiPropertiesResponseOutputWithContext(ctx context.Context) ApiPropertiesResponseOutput {
	return o
}

func (o ApiPropertiesResponseOutput) ToApiPropertiesResponsePtrOutput() ApiPropertiesResponsePtrOutput {
	return o.ToApiPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ApiPropertiesResponseOutput) ToApiPropertiesResponsePtrOutputWithContext(ctx context.Context) ApiPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ApiPropertiesResponse) *ApiPropertiesResponse {
		return &v
	}).(ApiPropertiesResponsePtrOutput)
}

// Describes the ServerVersion of an a MongoDB account.
func (o ApiPropertiesResponseOutput) ServerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiPropertiesResponse) *string { return v.ServerVersion }).(pulumi.StringPtrOutput)
}

type ApiPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiPropertiesResponse)(nil)).Elem()
}

func (o ApiPropertiesResponsePtrOutput) ToApiPropertiesResponsePtrOutput() ApiPropertiesResponsePtrOutput {
	return o
}

func (o ApiPropertiesResponsePtrOutput) ToApiPropertiesResponsePtrOutputWithContext(ctx context.Context) ApiPropertiesResponsePtrOutput {
	return o
}

func (o ApiPropertiesResponsePtrOutput) Elem() ApiPropertiesResponseOutput {
	return o.ApplyT(func(v *ApiPropertiesResponse) ApiPropertiesResponse { return *v }).(ApiPropertiesResponseOutput)
}

// Describes the ServerVersion of an a MongoDB account.
func (o ApiPropertiesResponsePtrOutput) ServerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServerVersion
	}).(pulumi.StringPtrOutput)
}

type AutoscaleSettings struct {
	// Represents maximum throughput, the resource can scale up to.
	MaxThroughput *int `pulumi:"maxThroughput"`
}

// AutoscaleSettingsInput is an input type that accepts AutoscaleSettingsArgs and AutoscaleSettingsOutput values.
// You can construct a concrete instance of `AutoscaleSettingsInput` via:
//
//          AutoscaleSettingsArgs{...}
type AutoscaleSettingsInput interface {
	pulumi.Input

	ToAutoscaleSettingsOutput() AutoscaleSettingsOutput
	ToAutoscaleSettingsOutputWithContext(context.Context) AutoscaleSettingsOutput
}

type AutoscaleSettingsArgs struct {
	// Represents maximum throughput, the resource can scale up to.
	MaxThroughput pulumi.IntPtrInput `pulumi:"maxThroughput"`
}

func (AutoscaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscaleSettings)(nil)).Elem()
}

func (i AutoscaleSettingsArgs) ToAutoscaleSettingsOutput() AutoscaleSettingsOutput {
	return i.ToAutoscaleSettingsOutputWithContext(context.Background())
}

func (i AutoscaleSettingsArgs) ToAutoscaleSettingsOutputWithContext(ctx context.Context) AutoscaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscaleSettingsOutput)
}

func (i AutoscaleSettingsArgs) ToAutoscaleSettingsPtrOutput() AutoscaleSettingsPtrOutput {
	return i.ToAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i AutoscaleSettingsArgs) ToAutoscaleSettingsPtrOutputWithContext(ctx context.Context) AutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscaleSettingsOutput).ToAutoscaleSettingsPtrOutputWithContext(ctx)
}

// AutoscaleSettingsPtrInput is an input type that accepts AutoscaleSettingsArgs, AutoscaleSettingsPtr and AutoscaleSettingsPtrOutput values.
// You can construct a concrete instance of `AutoscaleSettingsPtrInput` via:
//
//          AutoscaleSettingsArgs{...}
//
//  or:
//
//          nil
type AutoscaleSettingsPtrInput interface {
	pulumi.Input

	ToAutoscaleSettingsPtrOutput() AutoscaleSettingsPtrOutput
	ToAutoscaleSettingsPtrOutputWithContext(context.Context) AutoscaleSettingsPtrOutput
}

type autoscaleSettingsPtrType AutoscaleSettingsArgs

func AutoscaleSettingsPtr(v *AutoscaleSettingsArgs) AutoscaleSettingsPtrInput {
	return (*autoscaleSettingsPtrType)(v)
}

func (*autoscaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscaleSettings)(nil)).Elem()
}

func (i *autoscaleSettingsPtrType) ToAutoscaleSettingsPtrOutput() AutoscaleSettingsPtrOutput {
	return i.ToAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i *autoscaleSettingsPtrType) ToAutoscaleSettingsPtrOutputWithContext(ctx context.Context) AutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscaleSettingsPtrOutput)
}

type AutoscaleSettingsResponse struct {
	// Represents maximum throughput, the resource can scale up to.
	MaxThroughput *int `pulumi:"maxThroughput"`
}

type AutoscaleSettingsResponseOutput struct{ *pulumi.OutputState }

func (AutoscaleSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscaleSettingsResponse)(nil)).Elem()
}

func (o AutoscaleSettingsResponseOutput) ToAutoscaleSettingsResponseOutput() AutoscaleSettingsResponseOutput {
	return o
}

func (o AutoscaleSettingsResponseOutput) ToAutoscaleSettingsResponseOutputWithContext(ctx context.Context) AutoscaleSettingsResponseOutput {
	return o
}

func (o AutoscaleSettingsResponseOutput) ToAutoscaleSettingsResponsePtrOutput() AutoscaleSettingsResponsePtrOutput {
	return o.ToAutoscaleSettingsResponsePtrOutputWithContext(context.Background())
}

func (o AutoscaleSettingsResponseOutput) ToAutoscaleSettingsResponsePtrOutputWithContext(ctx context.Context) AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v AutoscaleSettingsResponse) *AutoscaleSettingsResponse {
		return &v
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Represents maximum throughput, the resource can scale up to.
func (o AutoscaleSettingsResponseOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscaleSettingsResponse) *int { return v.MaxThroughput }).(pulumi.IntPtrOutput)
}

type AutoscaleSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoscaleSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscaleSettingsResponse)(nil)).Elem()
}

func (o AutoscaleSettingsResponsePtrOutput) ToAutoscaleSettingsResponsePtrOutput() AutoscaleSettingsResponsePtrOutput {
	return o
}

func (o AutoscaleSettingsResponsePtrOutput) ToAutoscaleSettingsResponsePtrOutputWithContext(ctx context.Context) AutoscaleSettingsResponsePtrOutput {
	return o
}

func (o AutoscaleSettingsResponsePtrOutput) Elem() AutoscaleSettingsResponseOutput {
	return o.ApplyT(func(v *AutoscaleSettingsResponse) AutoscaleSettingsResponse { return *v }).(AutoscaleSettingsResponseOutput)
}

// Represents maximum throughput, the resource can scale up to.
func (o AutoscaleSettingsResponsePtrOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxThroughput
	}).(pulumi.IntPtrOutput)
}

// Cosmos DB capability object
type Capability struct {
	// Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
	Name *string `pulumi:"name"`
}

// CapabilityInput is an input type that accepts CapabilityArgs and CapabilityOutput values.
// You can construct a concrete instance of `CapabilityInput` via:
//
//          CapabilityArgs{...}
type CapabilityInput interface {
	pulumi.Input

	ToCapabilityOutput() CapabilityOutput
	ToCapabilityOutputWithContext(context.Context) CapabilityOutput
}

// Cosmos DB capability object
type CapabilityArgs struct {
	// Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CapabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Capability)(nil)).Elem()
}

func (i CapabilityArgs) ToCapabilityOutput() CapabilityOutput {
	return i.ToCapabilityOutputWithContext(context.Background())
}

func (i CapabilityArgs) ToCapabilityOutputWithContext(ctx context.Context) CapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityOutput)
}

// CapabilityArrayInput is an input type that accepts CapabilityArray and CapabilityArrayOutput values.
// You can construct a concrete instance of `CapabilityArrayInput` via:
//
//          CapabilityArray{ CapabilityArgs{...} }
type CapabilityArrayInput interface {
	pulumi.Input

	ToCapabilityArrayOutput() CapabilityArrayOutput
	ToCapabilityArrayOutputWithContext(context.Context) CapabilityArrayOutput
}

type CapabilityArray []CapabilityInput

func (CapabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Capability)(nil)).Elem()
}

func (i CapabilityArray) ToCapabilityArrayOutput() CapabilityArrayOutput {
	return i.ToCapabilityArrayOutputWithContext(context.Background())
}

func (i CapabilityArray) ToCapabilityArrayOutputWithContext(ctx context.Context) CapabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityArrayOutput)
}

// Cosmos DB capability object
type CapabilityResponse struct {
	// Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
	Name *string `pulumi:"name"`
}

// Cosmos DB capability object
type CapabilityResponseOutput struct{ *pulumi.OutputState }

func (CapabilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityResponse)(nil)).Elem()
}

func (o CapabilityResponseOutput) ToCapabilityResponseOutput() CapabilityResponseOutput {
	return o
}

func (o CapabilityResponseOutput) ToCapabilityResponseOutputWithContext(ctx context.Context) CapabilityResponseOutput {
	return o
}

// Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
func (o CapabilityResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CapabilityResponseArrayOutput struct{ *pulumi.OutputState }

func (CapabilityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CapabilityResponse)(nil)).Elem()
}

func (o CapabilityResponseArrayOutput) ToCapabilityResponseArrayOutput() CapabilityResponseArrayOutput {
	return o
}

func (o CapabilityResponseArrayOutput) ToCapabilityResponseArrayOutputWithContext(ctx context.Context) CapabilityResponseArrayOutput {
	return o
}

func (o CapabilityResponseArrayOutput) Index(i pulumi.IntInput) CapabilityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CapabilityResponse {
		return vs[0].([]CapabilityResponse)[vs[1].(int)]
	}).(CapabilityResponseOutput)
}

type CassandraKeyspaceGetPropertiesResponseOptions struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings *AutoscaleSettingsResponse `pulumi:"autoscaleSettings"`
	// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
	Throughput *int `pulumi:"throughput"`
}

type CassandraKeyspaceGetPropertiesResponseOptionsOutput struct{ *pulumi.OutputState }

func (CassandraKeyspaceGetPropertiesResponseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraKeyspaceGetPropertiesResponseOptions)(nil)).Elem()
}

func (o CassandraKeyspaceGetPropertiesResponseOptionsOutput) ToCassandraKeyspaceGetPropertiesResponseOptionsOutput() CassandraKeyspaceGetPropertiesResponseOptionsOutput {
	return o
}

func (o CassandraKeyspaceGetPropertiesResponseOptionsOutput) ToCassandraKeyspaceGetPropertiesResponseOptionsOutputWithContext(ctx context.Context) CassandraKeyspaceGetPropertiesResponseOptionsOutput {
	return o
}

func (o CassandraKeyspaceGetPropertiesResponseOptionsOutput) ToCassandraKeyspaceGetPropertiesResponseOptionsPtrOutput() CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput {
	return o.ToCassandraKeyspaceGetPropertiesResponseOptionsPtrOutputWithContext(context.Background())
}

func (o CassandraKeyspaceGetPropertiesResponseOptionsOutput) ToCassandraKeyspaceGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesResponseOptions) *CassandraKeyspaceGetPropertiesResponseOptions {
		return &v
	}).(CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput)
}

// Specifies the Autoscale settings.
func (o CassandraKeyspaceGetPropertiesResponseOptionsOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o CassandraKeyspaceGetPropertiesResponseOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesResponseOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

type CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput struct{ *pulumi.OutputState }

func (CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraKeyspaceGetPropertiesResponseOptions)(nil)).Elem()
}

func (o CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput) ToCassandraKeyspaceGetPropertiesResponseOptionsPtrOutput() CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput) ToCassandraKeyspaceGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput) Elem() CassandraKeyspaceGetPropertiesResponseOptionsOutput {
	return o.ApplyT(func(v *CassandraKeyspaceGetPropertiesResponseOptions) CassandraKeyspaceGetPropertiesResponseOptions {
		return *v
	}).(CassandraKeyspaceGetPropertiesResponseOptionsOutput)
}

// Specifies the Autoscale settings.
func (o CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *CassandraKeyspaceGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CassandraKeyspaceGetPropertiesResponseOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

type CassandraKeyspaceGetPropertiesResponseResource struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB Cassandra keyspace
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts map[string]interface{} `pulumi:"ts"`
}

type CassandraKeyspaceGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (CassandraKeyspaceGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraKeyspaceGetPropertiesResponseResource)(nil)).Elem()
}

func (o CassandraKeyspaceGetPropertiesResponseResourceOutput) ToCassandraKeyspaceGetPropertiesResponseResourceOutput() CassandraKeyspaceGetPropertiesResponseResourceOutput {
	return o
}

func (o CassandraKeyspaceGetPropertiesResponseResourceOutput) ToCassandraKeyspaceGetPropertiesResponseResourceOutputWithContext(ctx context.Context) CassandraKeyspaceGetPropertiesResponseResourceOutput {
	return o
}

func (o CassandraKeyspaceGetPropertiesResponseResourceOutput) ToCassandraKeyspaceGetPropertiesResponseResourcePtrOutput() CassandraKeyspaceGetPropertiesResponseResourcePtrOutput {
	return o.ToCassandraKeyspaceGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o CassandraKeyspaceGetPropertiesResponseResourceOutput) ToCassandraKeyspaceGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) CassandraKeyspaceGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesResponseResource) *CassandraKeyspaceGetPropertiesResponseResource {
		return &v
	}).(CassandraKeyspaceGetPropertiesResponseResourcePtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o CassandraKeyspaceGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB Cassandra keyspace
func (o CassandraKeyspaceGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o CassandraKeyspaceGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o CassandraKeyspaceGetPropertiesResponseResourceOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesResponseResource) map[string]interface{} { return v.Ts }).(pulumi.MapOutput)
}

type CassandraKeyspaceGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraKeyspaceGetPropertiesResponseResource)(nil)).Elem()
}

func (o CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) ToCassandraKeyspaceGetPropertiesResponseResourcePtrOutput() CassandraKeyspaceGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) ToCassandraKeyspaceGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) CassandraKeyspaceGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) Elem() CassandraKeyspaceGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *CassandraKeyspaceGetPropertiesResponseResource) CassandraKeyspaceGetPropertiesResponseResource {
		return *v
	}).(CassandraKeyspaceGetPropertiesResponseResourceOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraKeyspaceGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB Cassandra keyspace
func (o CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraKeyspaceGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraKeyspaceGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v *CassandraKeyspaceGetPropertiesResponseResource) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.MapOutput)
}

// Cosmos DB Cassandra keyspace id object
type CassandraKeyspaceResource struct {
	// Name of the Cosmos DB Cassandra keyspace
	Id string `pulumi:"id"`
}

// CassandraKeyspaceResourceInput is an input type that accepts CassandraKeyspaceResourceArgs and CassandraKeyspaceResourceOutput values.
// You can construct a concrete instance of `CassandraKeyspaceResourceInput` via:
//
//          CassandraKeyspaceResourceArgs{...}
type CassandraKeyspaceResourceInput interface {
	pulumi.Input

	ToCassandraKeyspaceResourceOutput() CassandraKeyspaceResourceOutput
	ToCassandraKeyspaceResourceOutputWithContext(context.Context) CassandraKeyspaceResourceOutput
}

// Cosmos DB Cassandra keyspace id object
type CassandraKeyspaceResourceArgs struct {
	// Name of the Cosmos DB Cassandra keyspace
	Id pulumi.StringInput `pulumi:"id"`
}

func (CassandraKeyspaceResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraKeyspaceResource)(nil)).Elem()
}

func (i CassandraKeyspaceResourceArgs) ToCassandraKeyspaceResourceOutput() CassandraKeyspaceResourceOutput {
	return i.ToCassandraKeyspaceResourceOutputWithContext(context.Background())
}

func (i CassandraKeyspaceResourceArgs) ToCassandraKeyspaceResourceOutputWithContext(ctx context.Context) CassandraKeyspaceResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraKeyspaceResourceOutput)
}

func (i CassandraKeyspaceResourceArgs) ToCassandraKeyspaceResourcePtrOutput() CassandraKeyspaceResourcePtrOutput {
	return i.ToCassandraKeyspaceResourcePtrOutputWithContext(context.Background())
}

func (i CassandraKeyspaceResourceArgs) ToCassandraKeyspaceResourcePtrOutputWithContext(ctx context.Context) CassandraKeyspaceResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraKeyspaceResourceOutput).ToCassandraKeyspaceResourcePtrOutputWithContext(ctx)
}

// CassandraKeyspaceResourcePtrInput is an input type that accepts CassandraKeyspaceResourceArgs, CassandraKeyspaceResourcePtr and CassandraKeyspaceResourcePtrOutput values.
// You can construct a concrete instance of `CassandraKeyspaceResourcePtrInput` via:
//
//          CassandraKeyspaceResourceArgs{...}
//
//  or:
//
//          nil
type CassandraKeyspaceResourcePtrInput interface {
	pulumi.Input

	ToCassandraKeyspaceResourcePtrOutput() CassandraKeyspaceResourcePtrOutput
	ToCassandraKeyspaceResourcePtrOutputWithContext(context.Context) CassandraKeyspaceResourcePtrOutput
}

type cassandraKeyspaceResourcePtrType CassandraKeyspaceResourceArgs

func CassandraKeyspaceResourcePtr(v *CassandraKeyspaceResourceArgs) CassandraKeyspaceResourcePtrInput {
	return (*cassandraKeyspaceResourcePtrType)(v)
}

func (*cassandraKeyspaceResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraKeyspaceResource)(nil)).Elem()
}

func (i *cassandraKeyspaceResourcePtrType) ToCassandraKeyspaceResourcePtrOutput() CassandraKeyspaceResourcePtrOutput {
	return i.ToCassandraKeyspaceResourcePtrOutputWithContext(context.Background())
}

func (i *cassandraKeyspaceResourcePtrType) ToCassandraKeyspaceResourcePtrOutputWithContext(ctx context.Context) CassandraKeyspaceResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraKeyspaceResourcePtrOutput)
}

// Cosmos DB Cassandra table partition key
type CassandraPartitionKey struct {
	// Name of the Cosmos DB Cassandra table partition key
	Name *string `pulumi:"name"`
}

// CassandraPartitionKeyInput is an input type that accepts CassandraPartitionKeyArgs and CassandraPartitionKeyOutput values.
// You can construct a concrete instance of `CassandraPartitionKeyInput` via:
//
//          CassandraPartitionKeyArgs{...}
type CassandraPartitionKeyInput interface {
	pulumi.Input

	ToCassandraPartitionKeyOutput() CassandraPartitionKeyOutput
	ToCassandraPartitionKeyOutputWithContext(context.Context) CassandraPartitionKeyOutput
}

// Cosmos DB Cassandra table partition key
type CassandraPartitionKeyArgs struct {
	// Name of the Cosmos DB Cassandra table partition key
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CassandraPartitionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraPartitionKey)(nil)).Elem()
}

func (i CassandraPartitionKeyArgs) ToCassandraPartitionKeyOutput() CassandraPartitionKeyOutput {
	return i.ToCassandraPartitionKeyOutputWithContext(context.Background())
}

func (i CassandraPartitionKeyArgs) ToCassandraPartitionKeyOutputWithContext(ctx context.Context) CassandraPartitionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraPartitionKeyOutput)
}

// CassandraPartitionKeyArrayInput is an input type that accepts CassandraPartitionKeyArray and CassandraPartitionKeyArrayOutput values.
// You can construct a concrete instance of `CassandraPartitionKeyArrayInput` via:
//
//          CassandraPartitionKeyArray{ CassandraPartitionKeyArgs{...} }
type CassandraPartitionKeyArrayInput interface {
	pulumi.Input

	ToCassandraPartitionKeyArrayOutput() CassandraPartitionKeyArrayOutput
	ToCassandraPartitionKeyArrayOutputWithContext(context.Context) CassandraPartitionKeyArrayOutput
}

type CassandraPartitionKeyArray []CassandraPartitionKeyInput

func (CassandraPartitionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraPartitionKey)(nil)).Elem()
}

func (i CassandraPartitionKeyArray) ToCassandraPartitionKeyArrayOutput() CassandraPartitionKeyArrayOutput {
	return i.ToCassandraPartitionKeyArrayOutputWithContext(context.Background())
}

func (i CassandraPartitionKeyArray) ToCassandraPartitionKeyArrayOutputWithContext(ctx context.Context) CassandraPartitionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraPartitionKeyArrayOutput)
}

// Cosmos DB Cassandra table partition key
type CassandraPartitionKeyResponse struct {
	// Name of the Cosmos DB Cassandra table partition key
	Name *string `pulumi:"name"`
}

// Cosmos DB Cassandra table partition key
type CassandraPartitionKeyResponseOutput struct{ *pulumi.OutputState }

func (CassandraPartitionKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraPartitionKeyResponse)(nil)).Elem()
}

func (o CassandraPartitionKeyResponseOutput) ToCassandraPartitionKeyResponseOutput() CassandraPartitionKeyResponseOutput {
	return o
}

func (o CassandraPartitionKeyResponseOutput) ToCassandraPartitionKeyResponseOutputWithContext(ctx context.Context) CassandraPartitionKeyResponseOutput {
	return o
}

// Name of the Cosmos DB Cassandra table partition key
func (o CassandraPartitionKeyResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraPartitionKeyResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CassandraPartitionKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (CassandraPartitionKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraPartitionKeyResponse)(nil)).Elem()
}

func (o CassandraPartitionKeyResponseArrayOutput) ToCassandraPartitionKeyResponseArrayOutput() CassandraPartitionKeyResponseArrayOutput {
	return o
}

func (o CassandraPartitionKeyResponseArrayOutput) ToCassandraPartitionKeyResponseArrayOutputWithContext(ctx context.Context) CassandraPartitionKeyResponseArrayOutput {
	return o
}

func (o CassandraPartitionKeyResponseArrayOutput) Index(i pulumi.IntInput) CassandraPartitionKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CassandraPartitionKeyResponse {
		return vs[0].([]CassandraPartitionKeyResponse)[vs[1].(int)]
	}).(CassandraPartitionKeyResponseOutput)
}

// Cosmos DB Cassandra table schema
type CassandraSchema struct {
	// List of cluster key.
	ClusterKeys []ClusterKey `pulumi:"clusterKeys"`
	// List of Cassandra table columns.
	Columns []Column `pulumi:"columns"`
	// List of partition key.
	PartitionKeys []CassandraPartitionKey `pulumi:"partitionKeys"`
}

// CassandraSchemaInput is an input type that accepts CassandraSchemaArgs and CassandraSchemaOutput values.
// You can construct a concrete instance of `CassandraSchemaInput` via:
//
//          CassandraSchemaArgs{...}
type CassandraSchemaInput interface {
	pulumi.Input

	ToCassandraSchemaOutput() CassandraSchemaOutput
	ToCassandraSchemaOutputWithContext(context.Context) CassandraSchemaOutput
}

// Cosmos DB Cassandra table schema
type CassandraSchemaArgs struct {
	// List of cluster key.
	ClusterKeys ClusterKeyArrayInput `pulumi:"clusterKeys"`
	// List of Cassandra table columns.
	Columns ColumnArrayInput `pulumi:"columns"`
	// List of partition key.
	PartitionKeys CassandraPartitionKeyArrayInput `pulumi:"partitionKeys"`
}

func (CassandraSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraSchema)(nil)).Elem()
}

func (i CassandraSchemaArgs) ToCassandraSchemaOutput() CassandraSchemaOutput {
	return i.ToCassandraSchemaOutputWithContext(context.Background())
}

func (i CassandraSchemaArgs) ToCassandraSchemaOutputWithContext(ctx context.Context) CassandraSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraSchemaOutput)
}

func (i CassandraSchemaArgs) ToCassandraSchemaPtrOutput() CassandraSchemaPtrOutput {
	return i.ToCassandraSchemaPtrOutputWithContext(context.Background())
}

func (i CassandraSchemaArgs) ToCassandraSchemaPtrOutputWithContext(ctx context.Context) CassandraSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraSchemaOutput).ToCassandraSchemaPtrOutputWithContext(ctx)
}

// CassandraSchemaPtrInput is an input type that accepts CassandraSchemaArgs, CassandraSchemaPtr and CassandraSchemaPtrOutput values.
// You can construct a concrete instance of `CassandraSchemaPtrInput` via:
//
//          CassandraSchemaArgs{...}
//
//  or:
//
//          nil
type CassandraSchemaPtrInput interface {
	pulumi.Input

	ToCassandraSchemaPtrOutput() CassandraSchemaPtrOutput
	ToCassandraSchemaPtrOutputWithContext(context.Context) CassandraSchemaPtrOutput
}

type cassandraSchemaPtrType CassandraSchemaArgs

func CassandraSchemaPtr(v *CassandraSchemaArgs) CassandraSchemaPtrInput {
	return (*cassandraSchemaPtrType)(v)
}

func (*cassandraSchemaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraSchema)(nil)).Elem()
}

func (i *cassandraSchemaPtrType) ToCassandraSchemaPtrOutput() CassandraSchemaPtrOutput {
	return i.ToCassandraSchemaPtrOutputWithContext(context.Background())
}

func (i *cassandraSchemaPtrType) ToCassandraSchemaPtrOutputWithContext(ctx context.Context) CassandraSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraSchemaPtrOutput)
}

// Cosmos DB Cassandra table schema
type CassandraSchemaResponse struct {
	// List of cluster key.
	ClusterKeys []ClusterKeyResponse `pulumi:"clusterKeys"`
	// List of Cassandra table columns.
	Columns []ColumnResponse `pulumi:"columns"`
	// List of partition key.
	PartitionKeys []CassandraPartitionKeyResponse `pulumi:"partitionKeys"`
}

// Cosmos DB Cassandra table schema
type CassandraSchemaResponseOutput struct{ *pulumi.OutputState }

func (CassandraSchemaResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraSchemaResponse)(nil)).Elem()
}

func (o CassandraSchemaResponseOutput) ToCassandraSchemaResponseOutput() CassandraSchemaResponseOutput {
	return o
}

func (o CassandraSchemaResponseOutput) ToCassandraSchemaResponseOutputWithContext(ctx context.Context) CassandraSchemaResponseOutput {
	return o
}

func (o CassandraSchemaResponseOutput) ToCassandraSchemaResponsePtrOutput() CassandraSchemaResponsePtrOutput {
	return o.ToCassandraSchemaResponsePtrOutputWithContext(context.Background())
}

func (o CassandraSchemaResponseOutput) ToCassandraSchemaResponsePtrOutputWithContext(ctx context.Context) CassandraSchemaResponsePtrOutput {
	return o.ApplyT(func(v CassandraSchemaResponse) *CassandraSchemaResponse {
		return &v
	}).(CassandraSchemaResponsePtrOutput)
}

// List of cluster key.
func (o CassandraSchemaResponseOutput) ClusterKeys() ClusterKeyResponseArrayOutput {
	return o.ApplyT(func(v CassandraSchemaResponse) []ClusterKeyResponse { return v.ClusterKeys }).(ClusterKeyResponseArrayOutput)
}

// List of Cassandra table columns.
func (o CassandraSchemaResponseOutput) Columns() ColumnResponseArrayOutput {
	return o.ApplyT(func(v CassandraSchemaResponse) []ColumnResponse { return v.Columns }).(ColumnResponseArrayOutput)
}

// List of partition key.
func (o CassandraSchemaResponseOutput) PartitionKeys() CassandraPartitionKeyResponseArrayOutput {
	return o.ApplyT(func(v CassandraSchemaResponse) []CassandraPartitionKeyResponse { return v.PartitionKeys }).(CassandraPartitionKeyResponseArrayOutput)
}

type CassandraSchemaResponsePtrOutput struct{ *pulumi.OutputState }

func (CassandraSchemaResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraSchemaResponse)(nil)).Elem()
}

func (o CassandraSchemaResponsePtrOutput) ToCassandraSchemaResponsePtrOutput() CassandraSchemaResponsePtrOutput {
	return o
}

func (o CassandraSchemaResponsePtrOutput) ToCassandraSchemaResponsePtrOutputWithContext(ctx context.Context) CassandraSchemaResponsePtrOutput {
	return o
}

func (o CassandraSchemaResponsePtrOutput) Elem() CassandraSchemaResponseOutput {
	return o.ApplyT(func(v *CassandraSchemaResponse) CassandraSchemaResponse { return *v }).(CassandraSchemaResponseOutput)
}

// List of cluster key.
func (o CassandraSchemaResponsePtrOutput) ClusterKeys() ClusterKeyResponseArrayOutput {
	return o.ApplyT(func(v *CassandraSchemaResponse) []ClusterKeyResponse {
		if v == nil {
			return nil
		}
		return v.ClusterKeys
	}).(ClusterKeyResponseArrayOutput)
}

// List of Cassandra table columns.
func (o CassandraSchemaResponsePtrOutput) Columns() ColumnResponseArrayOutput {
	return o.ApplyT(func(v *CassandraSchemaResponse) []ColumnResponse {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(ColumnResponseArrayOutput)
}

// List of partition key.
func (o CassandraSchemaResponsePtrOutput) PartitionKeys() CassandraPartitionKeyResponseArrayOutput {
	return o.ApplyT(func(v *CassandraSchemaResponse) []CassandraPartitionKeyResponse {
		if v == nil {
			return nil
		}
		return v.PartitionKeys
	}).(CassandraPartitionKeyResponseArrayOutput)
}

type CassandraTableGetPropertiesResponseOptions struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings *AutoscaleSettingsResponse `pulumi:"autoscaleSettings"`
	// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
	Throughput *int `pulumi:"throughput"`
}

type CassandraTableGetPropertiesResponseOptionsOutput struct{ *pulumi.OutputState }

func (CassandraTableGetPropertiesResponseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableGetPropertiesResponseOptions)(nil)).Elem()
}

func (o CassandraTableGetPropertiesResponseOptionsOutput) ToCassandraTableGetPropertiesResponseOptionsOutput() CassandraTableGetPropertiesResponseOptionsOutput {
	return o
}

func (o CassandraTableGetPropertiesResponseOptionsOutput) ToCassandraTableGetPropertiesResponseOptionsOutputWithContext(ctx context.Context) CassandraTableGetPropertiesResponseOptionsOutput {
	return o
}

func (o CassandraTableGetPropertiesResponseOptionsOutput) ToCassandraTableGetPropertiesResponseOptionsPtrOutput() CassandraTableGetPropertiesResponseOptionsPtrOutput {
	return o.ToCassandraTableGetPropertiesResponseOptionsPtrOutputWithContext(context.Background())
}

func (o CassandraTableGetPropertiesResponseOptionsOutput) ToCassandraTableGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) CassandraTableGetPropertiesResponseOptionsPtrOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseOptions) *CassandraTableGetPropertiesResponseOptions {
		return &v
	}).(CassandraTableGetPropertiesResponseOptionsPtrOutput)
}

// Specifies the Autoscale settings.
func (o CassandraTableGetPropertiesResponseOptionsOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o CassandraTableGetPropertiesResponseOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

type CassandraTableGetPropertiesResponseOptionsPtrOutput struct{ *pulumi.OutputState }

func (CassandraTableGetPropertiesResponseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraTableGetPropertiesResponseOptions)(nil)).Elem()
}

func (o CassandraTableGetPropertiesResponseOptionsPtrOutput) ToCassandraTableGetPropertiesResponseOptionsPtrOutput() CassandraTableGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o CassandraTableGetPropertiesResponseOptionsPtrOutput) ToCassandraTableGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) CassandraTableGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o CassandraTableGetPropertiesResponseOptionsPtrOutput) Elem() CassandraTableGetPropertiesResponseOptionsOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseOptions) CassandraTableGetPropertiesResponseOptions {
		return *v
	}).(CassandraTableGetPropertiesResponseOptionsOutput)
}

// Specifies the Autoscale settings.
func (o CassandraTableGetPropertiesResponseOptionsPtrOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o CassandraTableGetPropertiesResponseOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

type CassandraTableGetPropertiesResponseResource struct {
	// Analytical TTL.
	AnalyticalStorageTtl *int `pulumi:"analyticalStorageTtl"`
	// Time to live of the Cosmos DB Cassandra table
	DefaultTtl *int `pulumi:"defaultTtl"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB Cassandra table
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// Schema of the Cosmos DB Cassandra table
	Schema *CassandraSchemaResponse `pulumi:"schema"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts map[string]interface{} `pulumi:"ts"`
}

type CassandraTableGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (CassandraTableGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableGetPropertiesResponseResource)(nil)).Elem()
}

func (o CassandraTableGetPropertiesResponseResourceOutput) ToCassandraTableGetPropertiesResponseResourceOutput() CassandraTableGetPropertiesResponseResourceOutput {
	return o
}

func (o CassandraTableGetPropertiesResponseResourceOutput) ToCassandraTableGetPropertiesResponseResourceOutputWithContext(ctx context.Context) CassandraTableGetPropertiesResponseResourceOutput {
	return o
}

func (o CassandraTableGetPropertiesResponseResourceOutput) ToCassandraTableGetPropertiesResponseResourcePtrOutput() CassandraTableGetPropertiesResponseResourcePtrOutput {
	return o.ToCassandraTableGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o CassandraTableGetPropertiesResponseResourceOutput) ToCassandraTableGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) CassandraTableGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseResource) *CassandraTableGetPropertiesResponseResource {
		return &v
	}).(CassandraTableGetPropertiesResponseResourcePtrOutput)
}

// Analytical TTL.
func (o CassandraTableGetPropertiesResponseResourceOutput) AnalyticalStorageTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseResource) *int { return v.AnalyticalStorageTtl }).(pulumi.IntPtrOutput)
}

// Time to live of the Cosmos DB Cassandra table
func (o CassandraTableGetPropertiesResponseResourceOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseResource) *int { return v.DefaultTtl }).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o CassandraTableGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB Cassandra table
func (o CassandraTableGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o CassandraTableGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// Schema of the Cosmos DB Cassandra table
func (o CassandraTableGetPropertiesResponseResourceOutput) Schema() CassandraSchemaResponsePtrOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseResource) *CassandraSchemaResponse { return v.Schema }).(CassandraSchemaResponsePtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o CassandraTableGetPropertiesResponseResourceOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseResource) map[string]interface{} { return v.Ts }).(pulumi.MapOutput)
}

type CassandraTableGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (CassandraTableGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraTableGetPropertiesResponseResource)(nil)).Elem()
}

func (o CassandraTableGetPropertiesResponseResourcePtrOutput) ToCassandraTableGetPropertiesResponseResourcePtrOutput() CassandraTableGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o CassandraTableGetPropertiesResponseResourcePtrOutput) ToCassandraTableGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) CassandraTableGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o CassandraTableGetPropertiesResponseResourcePtrOutput) Elem() CassandraTableGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) CassandraTableGetPropertiesResponseResource {
		return *v
	}).(CassandraTableGetPropertiesResponseResourceOutput)
}

// Analytical TTL.
func (o CassandraTableGetPropertiesResponseResourcePtrOutput) AnalyticalStorageTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) *int {
		if v == nil {
			return nil
		}
		return v.AnalyticalStorageTtl
	}).(pulumi.IntPtrOutput)
}

// Time to live of the Cosmos DB Cassandra table
func (o CassandraTableGetPropertiesResponseResourcePtrOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) *int {
		if v == nil {
			return nil
		}
		return v.DefaultTtl
	}).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o CassandraTableGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB Cassandra table
func (o CassandraTableGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o CassandraTableGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// Schema of the Cosmos DB Cassandra table
func (o CassandraTableGetPropertiesResponseResourcePtrOutput) Schema() CassandraSchemaResponsePtrOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) *CassandraSchemaResponse {
		if v == nil {
			return nil
		}
		return v.Schema
	}).(CassandraSchemaResponsePtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o CassandraTableGetPropertiesResponseResourcePtrOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.MapOutput)
}

// Cosmos DB Cassandra table id object
type CassandraTableResource struct {
	// Time to live of the Cosmos DB Cassandra table
	DefaultTtl *int `pulumi:"defaultTtl"`
	// Name of the Cosmos DB Cassandra table
	Id string `pulumi:"id"`
	// Schema of the Cosmos DB Cassandra table
	Schema *CassandraSchema `pulumi:"schema"`
}

// CassandraTableResourceInput is an input type that accepts CassandraTableResourceArgs and CassandraTableResourceOutput values.
// You can construct a concrete instance of `CassandraTableResourceInput` via:
//
//          CassandraTableResourceArgs{...}
type CassandraTableResourceInput interface {
	pulumi.Input

	ToCassandraTableResourceOutput() CassandraTableResourceOutput
	ToCassandraTableResourceOutputWithContext(context.Context) CassandraTableResourceOutput
}

// Cosmos DB Cassandra table id object
type CassandraTableResourceArgs struct {
	// Time to live of the Cosmos DB Cassandra table
	DefaultTtl pulumi.IntPtrInput `pulumi:"defaultTtl"`
	// Name of the Cosmos DB Cassandra table
	Id pulumi.StringInput `pulumi:"id"`
	// Schema of the Cosmos DB Cassandra table
	Schema CassandraSchemaPtrInput `pulumi:"schema"`
}

func (CassandraTableResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableResource)(nil)).Elem()
}

func (i CassandraTableResourceArgs) ToCassandraTableResourceOutput() CassandraTableResourceOutput {
	return i.ToCassandraTableResourceOutputWithContext(context.Background())
}

func (i CassandraTableResourceArgs) ToCassandraTableResourceOutputWithContext(ctx context.Context) CassandraTableResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableResourceOutput)
}

func (i CassandraTableResourceArgs) ToCassandraTableResourcePtrOutput() CassandraTableResourcePtrOutput {
	return i.ToCassandraTableResourcePtrOutputWithContext(context.Background())
}

func (i CassandraTableResourceArgs) ToCassandraTableResourcePtrOutputWithContext(ctx context.Context) CassandraTableResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableResourceOutput).ToCassandraTableResourcePtrOutputWithContext(ctx)
}

// CassandraTableResourcePtrInput is an input type that accepts CassandraTableResourceArgs, CassandraTableResourcePtr and CassandraTableResourcePtrOutput values.
// You can construct a concrete instance of `CassandraTableResourcePtrInput` via:
//
//          CassandraTableResourceArgs{...}
//
//  or:
//
//          nil
type CassandraTableResourcePtrInput interface {
	pulumi.Input

	ToCassandraTableResourcePtrOutput() CassandraTableResourcePtrOutput
	ToCassandraTableResourcePtrOutputWithContext(context.Context) CassandraTableResourcePtrOutput
}

type cassandraTableResourcePtrType CassandraTableResourceArgs

func CassandraTableResourcePtr(v *CassandraTableResourceArgs) CassandraTableResourcePtrInput {
	return (*cassandraTableResourcePtrType)(v)
}

func (*cassandraTableResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraTableResource)(nil)).Elem()
}

func (i *cassandraTableResourcePtrType) ToCassandraTableResourcePtrOutput() CassandraTableResourcePtrOutput {
	return i.ToCassandraTableResourcePtrOutputWithContext(context.Background())
}

func (i *cassandraTableResourcePtrType) ToCassandraTableResourcePtrOutputWithContext(ctx context.Context) CassandraTableResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableResourcePtrOutput)
}

// Cosmos DB Cassandra table cluster key
type ClusterKey struct {
	// Name of the Cosmos DB Cassandra table cluster key
	Name *string `pulumi:"name"`
	// Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
	OrderBy *string `pulumi:"orderBy"`
}

// ClusterKeyInput is an input type that accepts ClusterKeyArgs and ClusterKeyOutput values.
// You can construct a concrete instance of `ClusterKeyInput` via:
//
//          ClusterKeyArgs{...}
type ClusterKeyInput interface {
	pulumi.Input

	ToClusterKeyOutput() ClusterKeyOutput
	ToClusterKeyOutputWithContext(context.Context) ClusterKeyOutput
}

// Cosmos DB Cassandra table cluster key
type ClusterKeyArgs struct {
	// Name of the Cosmos DB Cassandra table cluster key
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
	OrderBy pulumi.StringPtrInput `pulumi:"orderBy"`
}

func (ClusterKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKey)(nil)).Elem()
}

func (i ClusterKeyArgs) ToClusterKeyOutput() ClusterKeyOutput {
	return i.ToClusterKeyOutputWithContext(context.Background())
}

func (i ClusterKeyArgs) ToClusterKeyOutputWithContext(ctx context.Context) ClusterKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKeyOutput)
}

// ClusterKeyArrayInput is an input type that accepts ClusterKeyArray and ClusterKeyArrayOutput values.
// You can construct a concrete instance of `ClusterKeyArrayInput` via:
//
//          ClusterKeyArray{ ClusterKeyArgs{...} }
type ClusterKeyArrayInput interface {
	pulumi.Input

	ToClusterKeyArrayOutput() ClusterKeyArrayOutput
	ToClusterKeyArrayOutputWithContext(context.Context) ClusterKeyArrayOutput
}

type ClusterKeyArray []ClusterKeyInput

func (ClusterKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterKey)(nil)).Elem()
}

func (i ClusterKeyArray) ToClusterKeyArrayOutput() ClusterKeyArrayOutput {
	return i.ToClusterKeyArrayOutputWithContext(context.Background())
}

func (i ClusterKeyArray) ToClusterKeyArrayOutputWithContext(ctx context.Context) ClusterKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKeyArrayOutput)
}

// Cosmos DB Cassandra table cluster key
type ClusterKeyResponse struct {
	// Name of the Cosmos DB Cassandra table cluster key
	Name *string `pulumi:"name"`
	// Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
	OrderBy *string `pulumi:"orderBy"`
}

// Cosmos DB Cassandra table cluster key
type ClusterKeyResponseOutput struct{ *pulumi.OutputState }

func (ClusterKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKeyResponse)(nil)).Elem()
}

func (o ClusterKeyResponseOutput) ToClusterKeyResponseOutput() ClusterKeyResponseOutput {
	return o
}

func (o ClusterKeyResponseOutput) ToClusterKeyResponseOutputWithContext(ctx context.Context) ClusterKeyResponseOutput {
	return o
}

// Name of the Cosmos DB Cassandra table cluster key
func (o ClusterKeyResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKeyResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
func (o ClusterKeyResponseOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKeyResponse) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

type ClusterKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (ClusterKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterKeyResponse)(nil)).Elem()
}

func (o ClusterKeyResponseArrayOutput) ToClusterKeyResponseArrayOutput() ClusterKeyResponseArrayOutput {
	return o
}

func (o ClusterKeyResponseArrayOutput) ToClusterKeyResponseArrayOutputWithContext(ctx context.Context) ClusterKeyResponseArrayOutput {
	return o
}

func (o ClusterKeyResponseArrayOutput) Index(i pulumi.IntInput) ClusterKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterKeyResponse {
		return vs[0].([]ClusterKeyResponse)[vs[1].(int)]
	}).(ClusterKeyResponseOutput)
}

// Cosmos DB Cassandra table column
type Column struct {
	// Name of the Cosmos DB Cassandra table column
	Name *string `pulumi:"name"`
	// Type of the Cosmos DB Cassandra table column
	Type *string `pulumi:"type"`
}

// ColumnInput is an input type that accepts ColumnArgs and ColumnOutput values.
// You can construct a concrete instance of `ColumnInput` via:
//
//          ColumnArgs{...}
type ColumnInput interface {
	pulumi.Input

	ToColumnOutput() ColumnOutput
	ToColumnOutputWithContext(context.Context) ColumnOutput
}

// Cosmos DB Cassandra table column
type ColumnArgs struct {
	// Name of the Cosmos DB Cassandra table column
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of the Cosmos DB Cassandra table column
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Column)(nil)).Elem()
}

func (i ColumnArgs) ToColumnOutput() ColumnOutput {
	return i.ToColumnOutputWithContext(context.Background())
}

func (i ColumnArgs) ToColumnOutputWithContext(ctx context.Context) ColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ColumnOutput)
}

// ColumnArrayInput is an input type that accepts ColumnArray and ColumnArrayOutput values.
// You can construct a concrete instance of `ColumnArrayInput` via:
//
//          ColumnArray{ ColumnArgs{...} }
type ColumnArrayInput interface {
	pulumi.Input

	ToColumnArrayOutput() ColumnArrayOutput
	ToColumnArrayOutputWithContext(context.Context) ColumnArrayOutput
}

type ColumnArray []ColumnInput

func (ColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Column)(nil)).Elem()
}

func (i ColumnArray) ToColumnArrayOutput() ColumnArrayOutput {
	return i.ToColumnArrayOutputWithContext(context.Background())
}

func (i ColumnArray) ToColumnArrayOutputWithContext(ctx context.Context) ColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ColumnArrayOutput)
}

// Cosmos DB Cassandra table column
type ColumnResponse struct {
	// Name of the Cosmos DB Cassandra table column
	Name *string `pulumi:"name"`
	// Type of the Cosmos DB Cassandra table column
	Type *string `pulumi:"type"`
}

// Cosmos DB Cassandra table column
type ColumnResponseOutput struct{ *pulumi.OutputState }

func (ColumnResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ColumnResponse)(nil)).Elem()
}

func (o ColumnResponseOutput) ToColumnResponseOutput() ColumnResponseOutput {
	return o
}

func (o ColumnResponseOutput) ToColumnResponseOutputWithContext(ctx context.Context) ColumnResponseOutput {
	return o
}

// Name of the Cosmos DB Cassandra table column
func (o ColumnResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ColumnResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of the Cosmos DB Cassandra table column
func (o ColumnResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ColumnResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ColumnResponseArrayOutput struct{ *pulumi.OutputState }

func (ColumnResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ColumnResponse)(nil)).Elem()
}

func (o ColumnResponseArrayOutput) ToColumnResponseArrayOutput() ColumnResponseArrayOutput {
	return o
}

func (o ColumnResponseArrayOutput) ToColumnResponseArrayOutputWithContext(ctx context.Context) ColumnResponseArrayOutput {
	return o
}

func (o ColumnResponseArrayOutput) Index(i pulumi.IntInput) ColumnResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ColumnResponse {
		return vs[0].([]ColumnResponse)[vs[1].(int)]
	}).(ColumnResponseOutput)
}

type CompositePath struct {
	// Sort order for composite paths.
	Order *string `pulumi:"order"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
}

// CompositePathInput is an input type that accepts CompositePathArgs and CompositePathOutput values.
// You can construct a concrete instance of `CompositePathInput` via:
//
//          CompositePathArgs{...}
type CompositePathInput interface {
	pulumi.Input

	ToCompositePathOutput() CompositePathOutput
	ToCompositePathOutputWithContext(context.Context) CompositePathOutput
}

type CompositePathArgs struct {
	// Sort order for composite paths.
	Order pulumi.StringPtrInput `pulumi:"order"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (CompositePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CompositePath)(nil)).Elem()
}

func (i CompositePathArgs) ToCompositePathOutput() CompositePathOutput {
	return i.ToCompositePathOutputWithContext(context.Background())
}

func (i CompositePathArgs) ToCompositePathOutputWithContext(ctx context.Context) CompositePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompositePathOutput)
}

// CompositePathArrayInput is an input type that accepts CompositePathArray and CompositePathArrayOutput values.
// You can construct a concrete instance of `CompositePathArrayInput` via:
//
//          CompositePathArray{ CompositePathArgs{...} }
type CompositePathArrayInput interface {
	pulumi.Input

	ToCompositePathArrayOutput() CompositePathArrayOutput
	ToCompositePathArrayOutputWithContext(context.Context) CompositePathArrayOutput
}

type CompositePathArray []CompositePathInput

func (CompositePathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CompositePath)(nil)).Elem()
}

func (i CompositePathArray) ToCompositePathArrayOutput() CompositePathArrayOutput {
	return i.ToCompositePathArrayOutputWithContext(context.Background())
}

func (i CompositePathArray) ToCompositePathArrayOutputWithContext(ctx context.Context) CompositePathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompositePathArrayOutput)
}

type CompositePathResponse struct {
	// Sort order for composite paths.
	Order *string `pulumi:"order"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
}

type CompositePathResponseOutput struct{ *pulumi.OutputState }

func (CompositePathResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CompositePathResponse)(nil)).Elem()
}

func (o CompositePathResponseOutput) ToCompositePathResponseOutput() CompositePathResponseOutput {
	return o
}

func (o CompositePathResponseOutput) ToCompositePathResponseOutputWithContext(ctx context.Context) CompositePathResponseOutput {
	return o
}

// Sort order for composite paths.
func (o CompositePathResponseOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CompositePathResponse) *string { return v.Order }).(pulumi.StringPtrOutput)
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o CompositePathResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CompositePathResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type CompositePathResponseArrayOutput struct{ *pulumi.OutputState }

func (CompositePathResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CompositePathResponse)(nil)).Elem()
}

func (o CompositePathResponseArrayOutput) ToCompositePathResponseArrayOutput() CompositePathResponseArrayOutput {
	return o
}

func (o CompositePathResponseArrayOutput) ToCompositePathResponseArrayOutputWithContext(ctx context.Context) CompositePathResponseArrayOutput {
	return o
}

func (o CompositePathResponseArrayOutput) Index(i pulumi.IntInput) CompositePathResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CompositePathResponse {
		return vs[0].([]CompositePathResponse)[vs[1].(int)]
	}).(CompositePathResponseOutput)
}

// The conflict resolution policy for the container.
type ConflictResolutionPolicy struct {
	// The conflict resolution path in the case of LastWriterWins mode.
	ConflictResolutionPath *string `pulumi:"conflictResolutionPath"`
	// The procedure to resolve conflicts in the case of custom mode.
	ConflictResolutionProcedure *string `pulumi:"conflictResolutionProcedure"`
	// Indicates the conflict resolution mode.
	Mode *string `pulumi:"mode"`
}

// ConflictResolutionPolicyInput is an input type that accepts ConflictResolutionPolicyArgs and ConflictResolutionPolicyOutput values.
// You can construct a concrete instance of `ConflictResolutionPolicyInput` via:
//
//          ConflictResolutionPolicyArgs{...}
type ConflictResolutionPolicyInput interface {
	pulumi.Input

	ToConflictResolutionPolicyOutput() ConflictResolutionPolicyOutput
	ToConflictResolutionPolicyOutputWithContext(context.Context) ConflictResolutionPolicyOutput
}

// The conflict resolution policy for the container.
type ConflictResolutionPolicyArgs struct {
	// The conflict resolution path in the case of LastWriterWins mode.
	ConflictResolutionPath pulumi.StringPtrInput `pulumi:"conflictResolutionPath"`
	// The procedure to resolve conflicts in the case of custom mode.
	ConflictResolutionProcedure pulumi.StringPtrInput `pulumi:"conflictResolutionProcedure"`
	// Indicates the conflict resolution mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (ConflictResolutionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConflictResolutionPolicy)(nil)).Elem()
}

func (i ConflictResolutionPolicyArgs) ToConflictResolutionPolicyOutput() ConflictResolutionPolicyOutput {
	return i.ToConflictResolutionPolicyOutputWithContext(context.Background())
}

func (i ConflictResolutionPolicyArgs) ToConflictResolutionPolicyOutputWithContext(ctx context.Context) ConflictResolutionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConflictResolutionPolicyOutput)
}

func (i ConflictResolutionPolicyArgs) ToConflictResolutionPolicyPtrOutput() ConflictResolutionPolicyPtrOutput {
	return i.ToConflictResolutionPolicyPtrOutputWithContext(context.Background())
}

func (i ConflictResolutionPolicyArgs) ToConflictResolutionPolicyPtrOutputWithContext(ctx context.Context) ConflictResolutionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConflictResolutionPolicyOutput).ToConflictResolutionPolicyPtrOutputWithContext(ctx)
}

// ConflictResolutionPolicyPtrInput is an input type that accepts ConflictResolutionPolicyArgs, ConflictResolutionPolicyPtr and ConflictResolutionPolicyPtrOutput values.
// You can construct a concrete instance of `ConflictResolutionPolicyPtrInput` via:
//
//          ConflictResolutionPolicyArgs{...}
//
//  or:
//
//          nil
type ConflictResolutionPolicyPtrInput interface {
	pulumi.Input

	ToConflictResolutionPolicyPtrOutput() ConflictResolutionPolicyPtrOutput
	ToConflictResolutionPolicyPtrOutputWithContext(context.Context) ConflictResolutionPolicyPtrOutput
}

type conflictResolutionPolicyPtrType ConflictResolutionPolicyArgs

func ConflictResolutionPolicyPtr(v *ConflictResolutionPolicyArgs) ConflictResolutionPolicyPtrInput {
	return (*conflictResolutionPolicyPtrType)(v)
}

func (*conflictResolutionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConflictResolutionPolicy)(nil)).Elem()
}

func (i *conflictResolutionPolicyPtrType) ToConflictResolutionPolicyPtrOutput() ConflictResolutionPolicyPtrOutput {
	return i.ToConflictResolutionPolicyPtrOutputWithContext(context.Background())
}

func (i *conflictResolutionPolicyPtrType) ToConflictResolutionPolicyPtrOutputWithContext(ctx context.Context) ConflictResolutionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConflictResolutionPolicyPtrOutput)
}

// The conflict resolution policy for the container.
type ConflictResolutionPolicyResponse struct {
	// The conflict resolution path in the case of LastWriterWins mode.
	ConflictResolutionPath *string `pulumi:"conflictResolutionPath"`
	// The procedure to resolve conflicts in the case of custom mode.
	ConflictResolutionProcedure *string `pulumi:"conflictResolutionProcedure"`
	// Indicates the conflict resolution mode.
	Mode *string `pulumi:"mode"`
}

// The conflict resolution policy for the container.
type ConflictResolutionPolicyResponseOutput struct{ *pulumi.OutputState }

func (ConflictResolutionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConflictResolutionPolicyResponse)(nil)).Elem()
}

func (o ConflictResolutionPolicyResponseOutput) ToConflictResolutionPolicyResponseOutput() ConflictResolutionPolicyResponseOutput {
	return o
}

func (o ConflictResolutionPolicyResponseOutput) ToConflictResolutionPolicyResponseOutputWithContext(ctx context.Context) ConflictResolutionPolicyResponseOutput {
	return o
}

func (o ConflictResolutionPolicyResponseOutput) ToConflictResolutionPolicyResponsePtrOutput() ConflictResolutionPolicyResponsePtrOutput {
	return o.ToConflictResolutionPolicyResponsePtrOutputWithContext(context.Background())
}

func (o ConflictResolutionPolicyResponseOutput) ToConflictResolutionPolicyResponsePtrOutputWithContext(ctx context.Context) ConflictResolutionPolicyResponsePtrOutput {
	return o.ApplyT(func(v ConflictResolutionPolicyResponse) *ConflictResolutionPolicyResponse {
		return &v
	}).(ConflictResolutionPolicyResponsePtrOutput)
}

// The conflict resolution path in the case of LastWriterWins mode.
func (o ConflictResolutionPolicyResponseOutput) ConflictResolutionPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConflictResolutionPolicyResponse) *string { return v.ConflictResolutionPath }).(pulumi.StringPtrOutput)
}

// The procedure to resolve conflicts in the case of custom mode.
func (o ConflictResolutionPolicyResponseOutput) ConflictResolutionProcedure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConflictResolutionPolicyResponse) *string { return v.ConflictResolutionProcedure }).(pulumi.StringPtrOutput)
}

// Indicates the conflict resolution mode.
func (o ConflictResolutionPolicyResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConflictResolutionPolicyResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ConflictResolutionPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (ConflictResolutionPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConflictResolutionPolicyResponse)(nil)).Elem()
}

func (o ConflictResolutionPolicyResponsePtrOutput) ToConflictResolutionPolicyResponsePtrOutput() ConflictResolutionPolicyResponsePtrOutput {
	return o
}

func (o ConflictResolutionPolicyResponsePtrOutput) ToConflictResolutionPolicyResponsePtrOutputWithContext(ctx context.Context) ConflictResolutionPolicyResponsePtrOutput {
	return o
}

func (o ConflictResolutionPolicyResponsePtrOutput) Elem() ConflictResolutionPolicyResponseOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicyResponse) ConflictResolutionPolicyResponse { return *v }).(ConflictResolutionPolicyResponseOutput)
}

// The conflict resolution path in the case of LastWriterWins mode.
func (o ConflictResolutionPolicyResponsePtrOutput) ConflictResolutionPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionPath
	}).(pulumi.StringPtrOutput)
}

// The procedure to resolve conflicts in the case of custom mode.
func (o ConflictResolutionPolicyResponsePtrOutput) ConflictResolutionProcedure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionProcedure
	}).(pulumi.StringPtrOutput)
}

// Indicates the conflict resolution mode.
func (o ConflictResolutionPolicyResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// The consistency policy for the Cosmos DB database account.
type ConsistencyPolicy struct {
	// The default consistency level and configuration settings of the Cosmos DB account.
	DefaultConsistencyLevel string `pulumi:"defaultConsistencyLevel"`
	// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxIntervalInSeconds *int `pulumi:"maxIntervalInSeconds"`
	// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxStalenessPrefix *int `pulumi:"maxStalenessPrefix"`
}

// ConsistencyPolicyInput is an input type that accepts ConsistencyPolicyArgs and ConsistencyPolicyOutput values.
// You can construct a concrete instance of `ConsistencyPolicyInput` via:
//
//          ConsistencyPolicyArgs{...}
type ConsistencyPolicyInput interface {
	pulumi.Input

	ToConsistencyPolicyOutput() ConsistencyPolicyOutput
	ToConsistencyPolicyOutputWithContext(context.Context) ConsistencyPolicyOutput
}

// The consistency policy for the Cosmos DB database account.
type ConsistencyPolicyArgs struct {
	// The default consistency level and configuration settings of the Cosmos DB account.
	DefaultConsistencyLevel pulumi.StringInput `pulumi:"defaultConsistencyLevel"`
	// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxIntervalInSeconds pulumi.IntPtrInput `pulumi:"maxIntervalInSeconds"`
	// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxStalenessPrefix pulumi.IntPtrInput `pulumi:"maxStalenessPrefix"`
}

func (ConsistencyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsistencyPolicy)(nil)).Elem()
}

func (i ConsistencyPolicyArgs) ToConsistencyPolicyOutput() ConsistencyPolicyOutput {
	return i.ToConsistencyPolicyOutputWithContext(context.Background())
}

func (i ConsistencyPolicyArgs) ToConsistencyPolicyOutputWithContext(ctx context.Context) ConsistencyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsistencyPolicyOutput)
}

func (i ConsistencyPolicyArgs) ToConsistencyPolicyPtrOutput() ConsistencyPolicyPtrOutput {
	return i.ToConsistencyPolicyPtrOutputWithContext(context.Background())
}

func (i ConsistencyPolicyArgs) ToConsistencyPolicyPtrOutputWithContext(ctx context.Context) ConsistencyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsistencyPolicyOutput).ToConsistencyPolicyPtrOutputWithContext(ctx)
}

// ConsistencyPolicyPtrInput is an input type that accepts ConsistencyPolicyArgs, ConsistencyPolicyPtr and ConsistencyPolicyPtrOutput values.
// You can construct a concrete instance of `ConsistencyPolicyPtrInput` via:
//
//          ConsistencyPolicyArgs{...}
//
//  or:
//
//          nil
type ConsistencyPolicyPtrInput interface {
	pulumi.Input

	ToConsistencyPolicyPtrOutput() ConsistencyPolicyPtrOutput
	ToConsistencyPolicyPtrOutputWithContext(context.Context) ConsistencyPolicyPtrOutput
}

type consistencyPolicyPtrType ConsistencyPolicyArgs

func ConsistencyPolicyPtr(v *ConsistencyPolicyArgs) ConsistencyPolicyPtrInput {
	return (*consistencyPolicyPtrType)(v)
}

func (*consistencyPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsistencyPolicy)(nil)).Elem()
}

func (i *consistencyPolicyPtrType) ToConsistencyPolicyPtrOutput() ConsistencyPolicyPtrOutput {
	return i.ToConsistencyPolicyPtrOutputWithContext(context.Background())
}

func (i *consistencyPolicyPtrType) ToConsistencyPolicyPtrOutputWithContext(ctx context.Context) ConsistencyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsistencyPolicyPtrOutput)
}

// The consistency policy for the Cosmos DB database account.
type ConsistencyPolicyResponse struct {
	// The default consistency level and configuration settings of the Cosmos DB account.
	DefaultConsistencyLevel string `pulumi:"defaultConsistencyLevel"`
	// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxIntervalInSeconds *int `pulumi:"maxIntervalInSeconds"`
	// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxStalenessPrefix *int `pulumi:"maxStalenessPrefix"`
}

// The consistency policy for the Cosmos DB database account.
type ConsistencyPolicyResponseOutput struct{ *pulumi.OutputState }

func (ConsistencyPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsistencyPolicyResponse)(nil)).Elem()
}

func (o ConsistencyPolicyResponseOutput) ToConsistencyPolicyResponseOutput() ConsistencyPolicyResponseOutput {
	return o
}

func (o ConsistencyPolicyResponseOutput) ToConsistencyPolicyResponseOutputWithContext(ctx context.Context) ConsistencyPolicyResponseOutput {
	return o
}

func (o ConsistencyPolicyResponseOutput) ToConsistencyPolicyResponsePtrOutput() ConsistencyPolicyResponsePtrOutput {
	return o.ToConsistencyPolicyResponsePtrOutputWithContext(context.Background())
}

func (o ConsistencyPolicyResponseOutput) ToConsistencyPolicyResponsePtrOutputWithContext(ctx context.Context) ConsistencyPolicyResponsePtrOutput {
	return o.ApplyT(func(v ConsistencyPolicyResponse) *ConsistencyPolicyResponse {
		return &v
	}).(ConsistencyPolicyResponsePtrOutput)
}

// The default consistency level and configuration settings of the Cosmos DB account.
func (o ConsistencyPolicyResponseOutput) DefaultConsistencyLevel() pulumi.StringOutput {
	return o.ApplyT(func(v ConsistencyPolicyResponse) string { return v.DefaultConsistencyLevel }).(pulumi.StringOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
func (o ConsistencyPolicyResponseOutput) MaxIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConsistencyPolicyResponse) *int { return v.MaxIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
func (o ConsistencyPolicyResponseOutput) MaxStalenessPrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConsistencyPolicyResponse) *int { return v.MaxStalenessPrefix }).(pulumi.IntPtrOutput)
}

type ConsistencyPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (ConsistencyPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsistencyPolicyResponse)(nil)).Elem()
}

func (o ConsistencyPolicyResponsePtrOutput) ToConsistencyPolicyResponsePtrOutput() ConsistencyPolicyResponsePtrOutput {
	return o
}

func (o ConsistencyPolicyResponsePtrOutput) ToConsistencyPolicyResponsePtrOutputWithContext(ctx context.Context) ConsistencyPolicyResponsePtrOutput {
	return o
}

func (o ConsistencyPolicyResponsePtrOutput) Elem() ConsistencyPolicyResponseOutput {
	return o.ApplyT(func(v *ConsistencyPolicyResponse) ConsistencyPolicyResponse { return *v }).(ConsistencyPolicyResponseOutput)
}

// The default consistency level and configuration settings of the Cosmos DB account.
func (o ConsistencyPolicyResponsePtrOutput) DefaultConsistencyLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConsistencyPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultConsistencyLevel
	}).(pulumi.StringPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
func (o ConsistencyPolicyResponsePtrOutput) MaxIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConsistencyPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
func (o ConsistencyPolicyResponsePtrOutput) MaxStalenessPrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConsistencyPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxStalenessPrefix
	}).(pulumi.IntPtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
type ContainerPartitionKey struct {
	// Indicates the kind of algorithm used for partitioning
	Kind *string `pulumi:"kind"`
	// List of paths using which data within the container can be partitioned
	Paths []string `pulumi:"paths"`
	// Indicates the version of the partition key definition
	Version *int `pulumi:"version"`
}

// ContainerPartitionKeyInput is an input type that accepts ContainerPartitionKeyArgs and ContainerPartitionKeyOutput values.
// You can construct a concrete instance of `ContainerPartitionKeyInput` via:
//
//          ContainerPartitionKeyArgs{...}
type ContainerPartitionKeyInput interface {
	pulumi.Input

	ToContainerPartitionKeyOutput() ContainerPartitionKeyOutput
	ToContainerPartitionKeyOutputWithContext(context.Context) ContainerPartitionKeyOutput
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
type ContainerPartitionKeyArgs struct {
	// Indicates the kind of algorithm used for partitioning
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// List of paths using which data within the container can be partitioned
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// Indicates the version of the partition key definition
	Version pulumi.IntPtrInput `pulumi:"version"`
}

func (ContainerPartitionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPartitionKey)(nil)).Elem()
}

func (i ContainerPartitionKeyArgs) ToContainerPartitionKeyOutput() ContainerPartitionKeyOutput {
	return i.ToContainerPartitionKeyOutputWithContext(context.Background())
}

func (i ContainerPartitionKeyArgs) ToContainerPartitionKeyOutputWithContext(ctx context.Context) ContainerPartitionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPartitionKeyOutput)
}

func (i ContainerPartitionKeyArgs) ToContainerPartitionKeyPtrOutput() ContainerPartitionKeyPtrOutput {
	return i.ToContainerPartitionKeyPtrOutputWithContext(context.Background())
}

func (i ContainerPartitionKeyArgs) ToContainerPartitionKeyPtrOutputWithContext(ctx context.Context) ContainerPartitionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPartitionKeyOutput).ToContainerPartitionKeyPtrOutputWithContext(ctx)
}

// ContainerPartitionKeyPtrInput is an input type that accepts ContainerPartitionKeyArgs, ContainerPartitionKeyPtr and ContainerPartitionKeyPtrOutput values.
// You can construct a concrete instance of `ContainerPartitionKeyPtrInput` via:
//
//          ContainerPartitionKeyArgs{...}
//
//  or:
//
//          nil
type ContainerPartitionKeyPtrInput interface {
	pulumi.Input

	ToContainerPartitionKeyPtrOutput() ContainerPartitionKeyPtrOutput
	ToContainerPartitionKeyPtrOutputWithContext(context.Context) ContainerPartitionKeyPtrOutput
}

type containerPartitionKeyPtrType ContainerPartitionKeyArgs

func ContainerPartitionKeyPtr(v *ContainerPartitionKeyArgs) ContainerPartitionKeyPtrInput {
	return (*containerPartitionKeyPtrType)(v)
}

func (*containerPartitionKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerPartitionKey)(nil)).Elem()
}

func (i *containerPartitionKeyPtrType) ToContainerPartitionKeyPtrOutput() ContainerPartitionKeyPtrOutput {
	return i.ToContainerPartitionKeyPtrOutputWithContext(context.Background())
}

func (i *containerPartitionKeyPtrType) ToContainerPartitionKeyPtrOutputWithContext(ctx context.Context) ContainerPartitionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPartitionKeyPtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
type ContainerPartitionKeyResponse struct {
	// Indicates the kind of algorithm used for partitioning
	Kind *string `pulumi:"kind"`
	// List of paths using which data within the container can be partitioned
	Paths []string `pulumi:"paths"`
	// Indicates the version of the partition key definition
	Version *int `pulumi:"version"`
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
type ContainerPartitionKeyResponseOutput struct{ *pulumi.OutputState }

func (ContainerPartitionKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPartitionKeyResponse)(nil)).Elem()
}

func (o ContainerPartitionKeyResponseOutput) ToContainerPartitionKeyResponseOutput() ContainerPartitionKeyResponseOutput {
	return o
}

func (o ContainerPartitionKeyResponseOutput) ToContainerPartitionKeyResponseOutputWithContext(ctx context.Context) ContainerPartitionKeyResponseOutput {
	return o
}

func (o ContainerPartitionKeyResponseOutput) ToContainerPartitionKeyResponsePtrOutput() ContainerPartitionKeyResponsePtrOutput {
	return o.ToContainerPartitionKeyResponsePtrOutputWithContext(context.Background())
}

func (o ContainerPartitionKeyResponseOutput) ToContainerPartitionKeyResponsePtrOutputWithContext(ctx context.Context) ContainerPartitionKeyResponsePtrOutput {
	return o.ApplyT(func(v ContainerPartitionKeyResponse) *ContainerPartitionKeyResponse {
		return &v
	}).(ContainerPartitionKeyResponsePtrOutput)
}

// Indicates the kind of algorithm used for partitioning
func (o ContainerPartitionKeyResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerPartitionKeyResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// List of paths using which data within the container can be partitioned
func (o ContainerPartitionKeyResponseOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerPartitionKeyResponse) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// Indicates the version of the partition key definition
func (o ContainerPartitionKeyResponseOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerPartitionKeyResponse) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type ContainerPartitionKeyResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerPartitionKeyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerPartitionKeyResponse)(nil)).Elem()
}

func (o ContainerPartitionKeyResponsePtrOutput) ToContainerPartitionKeyResponsePtrOutput() ContainerPartitionKeyResponsePtrOutput {
	return o
}

func (o ContainerPartitionKeyResponsePtrOutput) ToContainerPartitionKeyResponsePtrOutputWithContext(ctx context.Context) ContainerPartitionKeyResponsePtrOutput {
	return o
}

func (o ContainerPartitionKeyResponsePtrOutput) Elem() ContainerPartitionKeyResponseOutput {
	return o.ApplyT(func(v *ContainerPartitionKeyResponse) ContainerPartitionKeyResponse { return *v }).(ContainerPartitionKeyResponseOutput)
}

// Indicates the kind of algorithm used for partitioning
func (o ContainerPartitionKeyResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerPartitionKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// List of paths using which data within the container can be partitioned
func (o ContainerPartitionKeyResponsePtrOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContainerPartitionKeyResponse) []string {
		if v == nil {
			return nil
		}
		return v.Paths
	}).(pulumi.StringArrayOutput)
}

// Indicates the version of the partition key definition
func (o ContainerPartitionKeyResponsePtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerPartitionKeyResponse) *int {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.IntPtrOutput)
}

// The CORS policy for the Cosmos DB database account.
type CorsPolicy struct {
	// The request headers that the origin domain may specify on the CORS request.
	AllowedHeaders *string `pulumi:"allowedHeaders"`
	// The methods (HTTP request verbs) that the origin domain may use for a CORS request.
	AllowedMethods *string `pulumi:"allowedMethods"`
	// The origin domains that are permitted to make a request against the service via CORS.
	AllowedOrigins string `pulumi:"allowedOrigins"`
	// The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.
	ExposedHeaders *string `pulumi:"exposedHeaders"`
	// The maximum amount time that a browser should cache the preflight OPTIONS request.
	MaxAgeInSeconds *int `pulumi:"maxAgeInSeconds"`
}

// CorsPolicyInput is an input type that accepts CorsPolicyArgs and CorsPolicyOutput values.
// You can construct a concrete instance of `CorsPolicyInput` via:
//
//          CorsPolicyArgs{...}
type CorsPolicyInput interface {
	pulumi.Input

	ToCorsPolicyOutput() CorsPolicyOutput
	ToCorsPolicyOutputWithContext(context.Context) CorsPolicyOutput
}

// The CORS policy for the Cosmos DB database account.
type CorsPolicyArgs struct {
	// The request headers that the origin domain may specify on the CORS request.
	AllowedHeaders pulumi.StringPtrInput `pulumi:"allowedHeaders"`
	// The methods (HTTP request verbs) that the origin domain may use for a CORS request.
	AllowedMethods pulumi.StringPtrInput `pulumi:"allowedMethods"`
	// The origin domains that are permitted to make a request against the service via CORS.
	AllowedOrigins pulumi.StringInput `pulumi:"allowedOrigins"`
	// The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.
	ExposedHeaders pulumi.StringPtrInput `pulumi:"exposedHeaders"`
	// The maximum amount time that a browser should cache the preflight OPTIONS request.
	MaxAgeInSeconds pulumi.IntPtrInput `pulumi:"maxAgeInSeconds"`
}

func (CorsPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsPolicy)(nil)).Elem()
}

func (i CorsPolicyArgs) ToCorsPolicyOutput() CorsPolicyOutput {
	return i.ToCorsPolicyOutputWithContext(context.Background())
}

func (i CorsPolicyArgs) ToCorsPolicyOutputWithContext(ctx context.Context) CorsPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsPolicyOutput)
}

// CorsPolicyArrayInput is an input type that accepts CorsPolicyArray and CorsPolicyArrayOutput values.
// You can construct a concrete instance of `CorsPolicyArrayInput` via:
//
//          CorsPolicyArray{ CorsPolicyArgs{...} }
type CorsPolicyArrayInput interface {
	pulumi.Input

	ToCorsPolicyArrayOutput() CorsPolicyArrayOutput
	ToCorsPolicyArrayOutputWithContext(context.Context) CorsPolicyArrayOutput
}

type CorsPolicyArray []CorsPolicyInput

func (CorsPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CorsPolicy)(nil)).Elem()
}

func (i CorsPolicyArray) ToCorsPolicyArrayOutput() CorsPolicyArrayOutput {
	return i.ToCorsPolicyArrayOutputWithContext(context.Background())
}

func (i CorsPolicyArray) ToCorsPolicyArrayOutputWithContext(ctx context.Context) CorsPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsPolicyArrayOutput)
}

// The CORS policy for the Cosmos DB database account.
type CorsPolicyResponse struct {
	// The request headers that the origin domain may specify on the CORS request.
	AllowedHeaders *string `pulumi:"allowedHeaders"`
	// The methods (HTTP request verbs) that the origin domain may use for a CORS request.
	AllowedMethods *string `pulumi:"allowedMethods"`
	// The origin domains that are permitted to make a request against the service via CORS.
	AllowedOrigins string `pulumi:"allowedOrigins"`
	// The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.
	ExposedHeaders *string `pulumi:"exposedHeaders"`
	// The maximum amount time that a browser should cache the preflight OPTIONS request.
	MaxAgeInSeconds *int `pulumi:"maxAgeInSeconds"`
}

// The CORS policy for the Cosmos DB database account.
type CorsPolicyResponseOutput struct{ *pulumi.OutputState }

func (CorsPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsPolicyResponse)(nil)).Elem()
}

func (o CorsPolicyResponseOutput) ToCorsPolicyResponseOutput() CorsPolicyResponseOutput {
	return o
}

func (o CorsPolicyResponseOutput) ToCorsPolicyResponseOutputWithContext(ctx context.Context) CorsPolicyResponseOutput {
	return o
}

// The request headers that the origin domain may specify on the CORS request.
func (o CorsPolicyResponseOutput) AllowedHeaders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CorsPolicyResponse) *string { return v.AllowedHeaders }).(pulumi.StringPtrOutput)
}

// The methods (HTTP request verbs) that the origin domain may use for a CORS request.
func (o CorsPolicyResponseOutput) AllowedMethods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CorsPolicyResponse) *string { return v.AllowedMethods }).(pulumi.StringPtrOutput)
}

// The origin domains that are permitted to make a request against the service via CORS.
func (o CorsPolicyResponseOutput) AllowedOrigins() pulumi.StringOutput {
	return o.ApplyT(func(v CorsPolicyResponse) string { return v.AllowedOrigins }).(pulumi.StringOutput)
}

// The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.
func (o CorsPolicyResponseOutput) ExposedHeaders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CorsPolicyResponse) *string { return v.ExposedHeaders }).(pulumi.StringPtrOutput)
}

// The maximum amount time that a browser should cache the preflight OPTIONS request.
func (o CorsPolicyResponseOutput) MaxAgeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CorsPolicyResponse) *int { return v.MaxAgeInSeconds }).(pulumi.IntPtrOutput)
}

type CorsPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (CorsPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CorsPolicyResponse)(nil)).Elem()
}

func (o CorsPolicyResponseArrayOutput) ToCorsPolicyResponseArrayOutput() CorsPolicyResponseArrayOutput {
	return o
}

func (o CorsPolicyResponseArrayOutput) ToCorsPolicyResponseArrayOutputWithContext(ctx context.Context) CorsPolicyResponseArrayOutput {
	return o
}

func (o CorsPolicyResponseArrayOutput) Index(i pulumi.IntInput) CorsPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CorsPolicyResponse {
		return vs[0].([]CorsPolicyResponse)[vs[1].(int)]
	}).(CorsPolicyResponseOutput)
}

// CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are "If-Match", "If-None-Match", "Session-Token" and "Throughput"
type CreateUpdateOptions struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings *AutoscaleSettings `pulumi:"autoscaleSettings"`
	// Request Units per second. For example, "throughput": 10000.
	Throughput *int `pulumi:"throughput"`
}

// CreateUpdateOptionsInput is an input type that accepts CreateUpdateOptionsArgs and CreateUpdateOptionsOutput values.
// You can construct a concrete instance of `CreateUpdateOptionsInput` via:
//
//          CreateUpdateOptionsArgs{...}
type CreateUpdateOptionsInput interface {
	pulumi.Input

	ToCreateUpdateOptionsOutput() CreateUpdateOptionsOutput
	ToCreateUpdateOptionsOutputWithContext(context.Context) CreateUpdateOptionsOutput
}

// CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are "If-Match", "If-None-Match", "Session-Token" and "Throughput"
type CreateUpdateOptionsArgs struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings AutoscaleSettingsPtrInput `pulumi:"autoscaleSettings"`
	// Request Units per second. For example, "throughput": 10000.
	Throughput pulumi.IntPtrInput `pulumi:"throughput"`
}

func (CreateUpdateOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateUpdateOptions)(nil)).Elem()
}

func (i CreateUpdateOptionsArgs) ToCreateUpdateOptionsOutput() CreateUpdateOptionsOutput {
	return i.ToCreateUpdateOptionsOutputWithContext(context.Background())
}

func (i CreateUpdateOptionsArgs) ToCreateUpdateOptionsOutputWithContext(ctx context.Context) CreateUpdateOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateUpdateOptionsOutput)
}

func (i CreateUpdateOptionsArgs) ToCreateUpdateOptionsPtrOutput() CreateUpdateOptionsPtrOutput {
	return i.ToCreateUpdateOptionsPtrOutputWithContext(context.Background())
}

func (i CreateUpdateOptionsArgs) ToCreateUpdateOptionsPtrOutputWithContext(ctx context.Context) CreateUpdateOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateUpdateOptionsOutput).ToCreateUpdateOptionsPtrOutputWithContext(ctx)
}

// CreateUpdateOptionsPtrInput is an input type that accepts CreateUpdateOptionsArgs, CreateUpdateOptionsPtr and CreateUpdateOptionsPtrOutput values.
// You can construct a concrete instance of `CreateUpdateOptionsPtrInput` via:
//
//          CreateUpdateOptionsArgs{...}
//
//  or:
//
//          nil
type CreateUpdateOptionsPtrInput interface {
	pulumi.Input

	ToCreateUpdateOptionsPtrOutput() CreateUpdateOptionsPtrOutput
	ToCreateUpdateOptionsPtrOutputWithContext(context.Context) CreateUpdateOptionsPtrOutput
}

type createUpdateOptionsPtrType CreateUpdateOptionsArgs

func CreateUpdateOptionsPtr(v *CreateUpdateOptionsArgs) CreateUpdateOptionsPtrInput {
	return (*createUpdateOptionsPtrType)(v)
}

func (*createUpdateOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateUpdateOptions)(nil)).Elem()
}

func (i *createUpdateOptionsPtrType) ToCreateUpdateOptionsPtrOutput() CreateUpdateOptionsPtrOutput {
	return i.ToCreateUpdateOptionsPtrOutputWithContext(context.Background())
}

func (i *createUpdateOptionsPtrType) ToCreateUpdateOptionsPtrOutputWithContext(ctx context.Context) CreateUpdateOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateUpdateOptionsPtrOutput)
}

// Connection string for the Cosmos DB account
type DatabaseAccountConnectionStringResponse struct {
	// Value of the connection string
	ConnectionString string `pulumi:"connectionString"`
	// Description of the connection string
	Description string `pulumi:"description"`
}

type ExcludedPath struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
}

// ExcludedPathInput is an input type that accepts ExcludedPathArgs and ExcludedPathOutput values.
// You can construct a concrete instance of `ExcludedPathInput` via:
//
//          ExcludedPathArgs{...}
type ExcludedPathInput interface {
	pulumi.Input

	ToExcludedPathOutput() ExcludedPathOutput
	ToExcludedPathOutputWithContext(context.Context) ExcludedPathOutput
}

type ExcludedPathArgs struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (ExcludedPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExcludedPath)(nil)).Elem()
}

func (i ExcludedPathArgs) ToExcludedPathOutput() ExcludedPathOutput {
	return i.ToExcludedPathOutputWithContext(context.Background())
}

func (i ExcludedPathArgs) ToExcludedPathOutputWithContext(ctx context.Context) ExcludedPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExcludedPathOutput)
}

// ExcludedPathArrayInput is an input type that accepts ExcludedPathArray and ExcludedPathArrayOutput values.
// You can construct a concrete instance of `ExcludedPathArrayInput` via:
//
//          ExcludedPathArray{ ExcludedPathArgs{...} }
type ExcludedPathArrayInput interface {
	pulumi.Input

	ToExcludedPathArrayOutput() ExcludedPathArrayOutput
	ToExcludedPathArrayOutputWithContext(context.Context) ExcludedPathArrayOutput
}

type ExcludedPathArray []ExcludedPathInput

func (ExcludedPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExcludedPath)(nil)).Elem()
}

func (i ExcludedPathArray) ToExcludedPathArrayOutput() ExcludedPathArrayOutput {
	return i.ToExcludedPathArrayOutputWithContext(context.Background())
}

func (i ExcludedPathArray) ToExcludedPathArrayOutputWithContext(ctx context.Context) ExcludedPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExcludedPathArrayOutput)
}

type ExcludedPathResponse struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
}

type ExcludedPathResponseOutput struct{ *pulumi.OutputState }

func (ExcludedPathResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExcludedPathResponse)(nil)).Elem()
}

func (o ExcludedPathResponseOutput) ToExcludedPathResponseOutput() ExcludedPathResponseOutput {
	return o
}

func (o ExcludedPathResponseOutput) ToExcludedPathResponseOutputWithContext(ctx context.Context) ExcludedPathResponseOutput {
	return o
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o ExcludedPathResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExcludedPathResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ExcludedPathResponseArrayOutput struct{ *pulumi.OutputState }

func (ExcludedPathResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExcludedPathResponse)(nil)).Elem()
}

func (o ExcludedPathResponseArrayOutput) ToExcludedPathResponseArrayOutput() ExcludedPathResponseArrayOutput {
	return o
}

func (o ExcludedPathResponseArrayOutput) ToExcludedPathResponseArrayOutputWithContext(ctx context.Context) ExcludedPathResponseArrayOutput {
	return o
}

func (o ExcludedPathResponseArrayOutput) Index(i pulumi.IntInput) ExcludedPathResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExcludedPathResponse {
		return vs[0].([]ExcludedPathResponse)[vs[1].(int)]
	}).(ExcludedPathResponseOutput)
}

// The failover policy for a given region of a database account.
type FailoverPolicyResponse struct {
	// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
	FailoverPriority *int `pulumi:"failoverPriority"`
	// The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;.
	Id string `pulumi:"id"`
	// The name of the region in which the database account exists.
	LocationName *string `pulumi:"locationName"`
}

// The failover policy for a given region of a database account.
type FailoverPolicyResponseOutput struct{ *pulumi.OutputState }

func (FailoverPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverPolicyResponse)(nil)).Elem()
}

func (o FailoverPolicyResponseOutput) ToFailoverPolicyResponseOutput() FailoverPolicyResponseOutput {
	return o
}

func (o FailoverPolicyResponseOutput) ToFailoverPolicyResponseOutputWithContext(ctx context.Context) FailoverPolicyResponseOutput {
	return o
}

// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
func (o FailoverPolicyResponseOutput) FailoverPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FailoverPolicyResponse) *int { return v.FailoverPriority }).(pulumi.IntPtrOutput)
}

// The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;.
func (o FailoverPolicyResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FailoverPolicyResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the region in which the database account exists.
func (o FailoverPolicyResponseOutput) LocationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverPolicyResponse) *string { return v.LocationName }).(pulumi.StringPtrOutput)
}

type FailoverPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (FailoverPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FailoverPolicyResponse)(nil)).Elem()
}

func (o FailoverPolicyResponseArrayOutput) ToFailoverPolicyResponseArrayOutput() FailoverPolicyResponseArrayOutput {
	return o
}

func (o FailoverPolicyResponseArrayOutput) ToFailoverPolicyResponseArrayOutputWithContext(ctx context.Context) FailoverPolicyResponseArrayOutput {
	return o
}

func (o FailoverPolicyResponseArrayOutput) Index(i pulumi.IntInput) FailoverPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FailoverPolicyResponse {
		return vs[0].([]FailoverPolicyResponse)[vs[1].(int)]
	}).(FailoverPolicyResponseOutput)
}

type GremlinDatabaseGetPropertiesResponseOptions struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings *AutoscaleSettingsResponse `pulumi:"autoscaleSettings"`
	// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
	Throughput *int `pulumi:"throughput"`
}

type GremlinDatabaseGetPropertiesResponseOptionsOutput struct{ *pulumi.OutputState }

func (GremlinDatabaseGetPropertiesResponseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinDatabaseGetPropertiesResponseOptions)(nil)).Elem()
}

func (o GremlinDatabaseGetPropertiesResponseOptionsOutput) ToGremlinDatabaseGetPropertiesResponseOptionsOutput() GremlinDatabaseGetPropertiesResponseOptionsOutput {
	return o
}

func (o GremlinDatabaseGetPropertiesResponseOptionsOutput) ToGremlinDatabaseGetPropertiesResponseOptionsOutputWithContext(ctx context.Context) GremlinDatabaseGetPropertiesResponseOptionsOutput {
	return o
}

func (o GremlinDatabaseGetPropertiesResponseOptionsOutput) ToGremlinDatabaseGetPropertiesResponseOptionsPtrOutput() GremlinDatabaseGetPropertiesResponseOptionsPtrOutput {
	return o.ToGremlinDatabaseGetPropertiesResponseOptionsPtrOutputWithContext(context.Background())
}

func (o GremlinDatabaseGetPropertiesResponseOptionsOutput) ToGremlinDatabaseGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) GremlinDatabaseGetPropertiesResponseOptionsPtrOutput {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesResponseOptions) *GremlinDatabaseGetPropertiesResponseOptions {
		return &v
	}).(GremlinDatabaseGetPropertiesResponseOptionsPtrOutput)
}

// Specifies the Autoscale settings.
func (o GremlinDatabaseGetPropertiesResponseOptionsOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o GremlinDatabaseGetPropertiesResponseOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesResponseOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

type GremlinDatabaseGetPropertiesResponseOptionsPtrOutput struct{ *pulumi.OutputState }

func (GremlinDatabaseGetPropertiesResponseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinDatabaseGetPropertiesResponseOptions)(nil)).Elem()
}

func (o GremlinDatabaseGetPropertiesResponseOptionsPtrOutput) ToGremlinDatabaseGetPropertiesResponseOptionsPtrOutput() GremlinDatabaseGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o GremlinDatabaseGetPropertiesResponseOptionsPtrOutput) ToGremlinDatabaseGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) GremlinDatabaseGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o GremlinDatabaseGetPropertiesResponseOptionsPtrOutput) Elem() GremlinDatabaseGetPropertiesResponseOptionsOutput {
	return o.ApplyT(func(v *GremlinDatabaseGetPropertiesResponseOptions) GremlinDatabaseGetPropertiesResponseOptions {
		return *v
	}).(GremlinDatabaseGetPropertiesResponseOptionsOutput)
}

// Specifies the Autoscale settings.
func (o GremlinDatabaseGetPropertiesResponseOptionsPtrOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *GremlinDatabaseGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o GremlinDatabaseGetPropertiesResponseOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GremlinDatabaseGetPropertiesResponseOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

type GremlinDatabaseGetPropertiesResponseResource struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB Gremlin database
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts map[string]interface{} `pulumi:"ts"`
}

type GremlinDatabaseGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (GremlinDatabaseGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (o GremlinDatabaseGetPropertiesResponseResourceOutput) ToGremlinDatabaseGetPropertiesResponseResourceOutput() GremlinDatabaseGetPropertiesResponseResourceOutput {
	return o
}

func (o GremlinDatabaseGetPropertiesResponseResourceOutput) ToGremlinDatabaseGetPropertiesResponseResourceOutputWithContext(ctx context.Context) GremlinDatabaseGetPropertiesResponseResourceOutput {
	return o
}

func (o GremlinDatabaseGetPropertiesResponseResourceOutput) ToGremlinDatabaseGetPropertiesResponseResourcePtrOutput() GremlinDatabaseGetPropertiesResponseResourcePtrOutput {
	return o.ToGremlinDatabaseGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o GremlinDatabaseGetPropertiesResponseResourceOutput) ToGremlinDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) GremlinDatabaseGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesResponseResource) *GremlinDatabaseGetPropertiesResponseResource {
		return &v
	}).(GremlinDatabaseGetPropertiesResponseResourcePtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o GremlinDatabaseGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB Gremlin database
func (o GremlinDatabaseGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o GremlinDatabaseGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o GremlinDatabaseGetPropertiesResponseResourceOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesResponseResource) map[string]interface{} { return v.Ts }).(pulumi.MapOutput)
}

type GremlinDatabaseGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (GremlinDatabaseGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (o GremlinDatabaseGetPropertiesResponseResourcePtrOutput) ToGremlinDatabaseGetPropertiesResponseResourcePtrOutput() GremlinDatabaseGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o GremlinDatabaseGetPropertiesResponseResourcePtrOutput) ToGremlinDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) GremlinDatabaseGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o GremlinDatabaseGetPropertiesResponseResourcePtrOutput) Elem() GremlinDatabaseGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *GremlinDatabaseGetPropertiesResponseResource) GremlinDatabaseGetPropertiesResponseResource {
		return *v
	}).(GremlinDatabaseGetPropertiesResponseResourceOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o GremlinDatabaseGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB Gremlin database
func (o GremlinDatabaseGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o GremlinDatabaseGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o GremlinDatabaseGetPropertiesResponseResourcePtrOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v *GremlinDatabaseGetPropertiesResponseResource) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.MapOutput)
}

// Cosmos DB Gremlin database resource object
type GremlinDatabaseResource struct {
	// Name of the Cosmos DB Gremlin database
	Id string `pulumi:"id"`
}

// GremlinDatabaseResourceInput is an input type that accepts GremlinDatabaseResourceArgs and GremlinDatabaseResourceOutput values.
// You can construct a concrete instance of `GremlinDatabaseResourceInput` via:
//
//          GremlinDatabaseResourceArgs{...}
type GremlinDatabaseResourceInput interface {
	pulumi.Input

	ToGremlinDatabaseResourceOutput() GremlinDatabaseResourceOutput
	ToGremlinDatabaseResourceOutputWithContext(context.Context) GremlinDatabaseResourceOutput
}

// Cosmos DB Gremlin database resource object
type GremlinDatabaseResourceArgs struct {
	// Name of the Cosmos DB Gremlin database
	Id pulumi.StringInput `pulumi:"id"`
}

func (GremlinDatabaseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinDatabaseResource)(nil)).Elem()
}

func (i GremlinDatabaseResourceArgs) ToGremlinDatabaseResourceOutput() GremlinDatabaseResourceOutput {
	return i.ToGremlinDatabaseResourceOutputWithContext(context.Background())
}

func (i GremlinDatabaseResourceArgs) ToGremlinDatabaseResourceOutputWithContext(ctx context.Context) GremlinDatabaseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinDatabaseResourceOutput)
}

func (i GremlinDatabaseResourceArgs) ToGremlinDatabaseResourcePtrOutput() GremlinDatabaseResourcePtrOutput {
	return i.ToGremlinDatabaseResourcePtrOutputWithContext(context.Background())
}

func (i GremlinDatabaseResourceArgs) ToGremlinDatabaseResourcePtrOutputWithContext(ctx context.Context) GremlinDatabaseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinDatabaseResourceOutput).ToGremlinDatabaseResourcePtrOutputWithContext(ctx)
}

// GremlinDatabaseResourcePtrInput is an input type that accepts GremlinDatabaseResourceArgs, GremlinDatabaseResourcePtr and GremlinDatabaseResourcePtrOutput values.
// You can construct a concrete instance of `GremlinDatabaseResourcePtrInput` via:
//
//          GremlinDatabaseResourceArgs{...}
//
//  or:
//
//          nil
type GremlinDatabaseResourcePtrInput interface {
	pulumi.Input

	ToGremlinDatabaseResourcePtrOutput() GremlinDatabaseResourcePtrOutput
	ToGremlinDatabaseResourcePtrOutputWithContext(context.Context) GremlinDatabaseResourcePtrOutput
}

type gremlinDatabaseResourcePtrType GremlinDatabaseResourceArgs

func GremlinDatabaseResourcePtr(v *GremlinDatabaseResourceArgs) GremlinDatabaseResourcePtrInput {
	return (*gremlinDatabaseResourcePtrType)(v)
}

func (*gremlinDatabaseResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinDatabaseResource)(nil)).Elem()
}

func (i *gremlinDatabaseResourcePtrType) ToGremlinDatabaseResourcePtrOutput() GremlinDatabaseResourcePtrOutput {
	return i.ToGremlinDatabaseResourcePtrOutputWithContext(context.Background())
}

func (i *gremlinDatabaseResourcePtrType) ToGremlinDatabaseResourcePtrOutputWithContext(ctx context.Context) GremlinDatabaseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinDatabaseResourcePtrOutput)
}

type GremlinGraphGetPropertiesResponseOptions struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings *AutoscaleSettingsResponse `pulumi:"autoscaleSettings"`
	// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
	Throughput *int `pulumi:"throughput"`
}

type GremlinGraphGetPropertiesResponseOptionsOutput struct{ *pulumi.OutputState }

func (GremlinGraphGetPropertiesResponseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphGetPropertiesResponseOptions)(nil)).Elem()
}

func (o GremlinGraphGetPropertiesResponseOptionsOutput) ToGremlinGraphGetPropertiesResponseOptionsOutput() GremlinGraphGetPropertiesResponseOptionsOutput {
	return o
}

func (o GremlinGraphGetPropertiesResponseOptionsOutput) ToGremlinGraphGetPropertiesResponseOptionsOutputWithContext(ctx context.Context) GremlinGraphGetPropertiesResponseOptionsOutput {
	return o
}

func (o GremlinGraphGetPropertiesResponseOptionsOutput) ToGremlinGraphGetPropertiesResponseOptionsPtrOutput() GremlinGraphGetPropertiesResponseOptionsPtrOutput {
	return o.ToGremlinGraphGetPropertiesResponseOptionsPtrOutputWithContext(context.Background())
}

func (o GremlinGraphGetPropertiesResponseOptionsOutput) ToGremlinGraphGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) GremlinGraphGetPropertiesResponseOptionsPtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseOptions) *GremlinGraphGetPropertiesResponseOptions {
		return &v
	}).(GremlinGraphGetPropertiesResponseOptionsPtrOutput)
}

// Specifies the Autoscale settings.
func (o GremlinGraphGetPropertiesResponseOptionsOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o GremlinGraphGetPropertiesResponseOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

type GremlinGraphGetPropertiesResponseOptionsPtrOutput struct{ *pulumi.OutputState }

func (GremlinGraphGetPropertiesResponseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinGraphGetPropertiesResponseOptions)(nil)).Elem()
}

func (o GremlinGraphGetPropertiesResponseOptionsPtrOutput) ToGremlinGraphGetPropertiesResponseOptionsPtrOutput() GremlinGraphGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o GremlinGraphGetPropertiesResponseOptionsPtrOutput) ToGremlinGraphGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) GremlinGraphGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o GremlinGraphGetPropertiesResponseOptionsPtrOutput) Elem() GremlinGraphGetPropertiesResponseOptionsOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseOptions) GremlinGraphGetPropertiesResponseOptions { return *v }).(GremlinGraphGetPropertiesResponseOptionsOutput)
}

// Specifies the Autoscale settings.
func (o GremlinGraphGetPropertiesResponseOptionsPtrOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o GremlinGraphGetPropertiesResponseOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

type GremlinGraphGetPropertiesResponseResource struct {
	// The conflict resolution policy for the graph.
	ConflictResolutionPolicy *ConflictResolutionPolicyResponse `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl *int `pulumi:"defaultTtl"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB Gremlin graph
	Id string `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
	IndexingPolicy *IndexingPolicyResponse `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey *ContainerPartitionKeyResponse `pulumi:"partitionKey"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts map[string]interface{} `pulumi:"ts"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy *UniqueKeyPolicyResponse `pulumi:"uniqueKeyPolicy"`
}

type GremlinGraphGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (GremlinGraphGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphGetPropertiesResponseResource)(nil)).Elem()
}

func (o GremlinGraphGetPropertiesResponseResourceOutput) ToGremlinGraphGetPropertiesResponseResourceOutput() GremlinGraphGetPropertiesResponseResourceOutput {
	return o
}

func (o GremlinGraphGetPropertiesResponseResourceOutput) ToGremlinGraphGetPropertiesResponseResourceOutputWithContext(ctx context.Context) GremlinGraphGetPropertiesResponseResourceOutput {
	return o
}

func (o GremlinGraphGetPropertiesResponseResourceOutput) ToGremlinGraphGetPropertiesResponseResourcePtrOutput() GremlinGraphGetPropertiesResponseResourcePtrOutput {
	return o.ToGremlinGraphGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o GremlinGraphGetPropertiesResponseResourceOutput) ToGremlinGraphGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) GremlinGraphGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) *GremlinGraphGetPropertiesResponseResource {
		return &v
	}).(GremlinGraphGetPropertiesResponseResourcePtrOutput)
}

// The conflict resolution policy for the graph.
func (o GremlinGraphGetPropertiesResponseResourceOutput) ConflictResolutionPolicy() ConflictResolutionPolicyResponsePtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) *ConflictResolutionPolicyResponse {
		return v.ConflictResolutionPolicy
	}).(ConflictResolutionPolicyResponsePtrOutput)
}

// Default time to live
func (o GremlinGraphGetPropertiesResponseResourceOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) *int { return v.DefaultTtl }).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o GremlinGraphGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB Gremlin graph
func (o GremlinGraphGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
func (o GremlinGraphGetPropertiesResponseResourceOutput) IndexingPolicy() IndexingPolicyResponsePtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) *IndexingPolicyResponse { return v.IndexingPolicy }).(IndexingPolicyResponsePtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
func (o GremlinGraphGetPropertiesResponseResourceOutput) PartitionKey() ContainerPartitionKeyResponsePtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) *ContainerPartitionKeyResponse {
		return v.PartitionKey
	}).(ContainerPartitionKeyResponsePtrOutput)
}

// A system generated property. A unique identifier.
func (o GremlinGraphGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o GremlinGraphGetPropertiesResponseResourceOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) map[string]interface{} { return v.Ts }).(pulumi.MapOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
func (o GremlinGraphGetPropertiesResponseResourceOutput) UniqueKeyPolicy() UniqueKeyPolicyResponsePtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) *UniqueKeyPolicyResponse { return v.UniqueKeyPolicy }).(UniqueKeyPolicyResponsePtrOutput)
}

type GremlinGraphGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (GremlinGraphGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinGraphGetPropertiesResponseResource)(nil)).Elem()
}

func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) ToGremlinGraphGetPropertiesResponseResourcePtrOutput() GremlinGraphGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) ToGremlinGraphGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) GremlinGraphGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) Elem() GremlinGraphGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) GremlinGraphGetPropertiesResponseResource {
		return *v
	}).(GremlinGraphGetPropertiesResponseResourceOutput)
}

// The conflict resolution policy for the graph.
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) ConflictResolutionPolicy() ConflictResolutionPolicyResponsePtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *ConflictResolutionPolicyResponse {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionPolicy
	}).(ConflictResolutionPolicyResponsePtrOutput)
}

// Default time to live
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *int {
		if v == nil {
			return nil
		}
		return v.DefaultTtl
	}).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB Gremlin graph
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) IndexingPolicy() IndexingPolicyResponsePtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *IndexingPolicyResponse {
		if v == nil {
			return nil
		}
		return v.IndexingPolicy
	}).(IndexingPolicyResponsePtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) PartitionKey() ContainerPartitionKeyResponsePtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *ContainerPartitionKeyResponse {
		if v == nil {
			return nil
		}
		return v.PartitionKey
	}).(ContainerPartitionKeyResponsePtrOutput)
}

// A system generated property. A unique identifier.
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.MapOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) UniqueKeyPolicy() UniqueKeyPolicyResponsePtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *UniqueKeyPolicyResponse {
		if v == nil {
			return nil
		}
		return v.UniqueKeyPolicy
	}).(UniqueKeyPolicyResponsePtrOutput)
}

// Cosmos DB Gremlin graph resource object
type GremlinGraphResource struct {
	// The conflict resolution policy for the graph.
	ConflictResolutionPolicy *ConflictResolutionPolicy `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl *int `pulumi:"defaultTtl"`
	// Name of the Cosmos DB Gremlin graph
	Id string `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
	IndexingPolicy *IndexingPolicy `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey *ContainerPartitionKey `pulumi:"partitionKey"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy *UniqueKeyPolicy `pulumi:"uniqueKeyPolicy"`
}

// GremlinGraphResourceInput is an input type that accepts GremlinGraphResourceArgs and GremlinGraphResourceOutput values.
// You can construct a concrete instance of `GremlinGraphResourceInput` via:
//
//          GremlinGraphResourceArgs{...}
type GremlinGraphResourceInput interface {
	pulumi.Input

	ToGremlinGraphResourceOutput() GremlinGraphResourceOutput
	ToGremlinGraphResourceOutputWithContext(context.Context) GremlinGraphResourceOutput
}

// Cosmos DB Gremlin graph resource object
type GremlinGraphResourceArgs struct {
	// The conflict resolution policy for the graph.
	ConflictResolutionPolicy ConflictResolutionPolicyPtrInput `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl pulumi.IntPtrInput `pulumi:"defaultTtl"`
	// Name of the Cosmos DB Gremlin graph
	Id pulumi.StringInput `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
	IndexingPolicy IndexingPolicyPtrInput `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey ContainerPartitionKeyPtrInput `pulumi:"partitionKey"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy UniqueKeyPolicyPtrInput `pulumi:"uniqueKeyPolicy"`
}

func (GremlinGraphResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphResource)(nil)).Elem()
}

func (i GremlinGraphResourceArgs) ToGremlinGraphResourceOutput() GremlinGraphResourceOutput {
	return i.ToGremlinGraphResourceOutputWithContext(context.Background())
}

func (i GremlinGraphResourceArgs) ToGremlinGraphResourceOutputWithContext(ctx context.Context) GremlinGraphResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphResourceOutput)
}

func (i GremlinGraphResourceArgs) ToGremlinGraphResourcePtrOutput() GremlinGraphResourcePtrOutput {
	return i.ToGremlinGraphResourcePtrOutputWithContext(context.Background())
}

func (i GremlinGraphResourceArgs) ToGremlinGraphResourcePtrOutputWithContext(ctx context.Context) GremlinGraphResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphResourceOutput).ToGremlinGraphResourcePtrOutputWithContext(ctx)
}

// GremlinGraphResourcePtrInput is an input type that accepts GremlinGraphResourceArgs, GremlinGraphResourcePtr and GremlinGraphResourcePtrOutput values.
// You can construct a concrete instance of `GremlinGraphResourcePtrInput` via:
//
//          GremlinGraphResourceArgs{...}
//
//  or:
//
//          nil
type GremlinGraphResourcePtrInput interface {
	pulumi.Input

	ToGremlinGraphResourcePtrOutput() GremlinGraphResourcePtrOutput
	ToGremlinGraphResourcePtrOutputWithContext(context.Context) GremlinGraphResourcePtrOutput
}

type gremlinGraphResourcePtrType GremlinGraphResourceArgs

func GremlinGraphResourcePtr(v *GremlinGraphResourceArgs) GremlinGraphResourcePtrInput {
	return (*gremlinGraphResourcePtrType)(v)
}

func (*gremlinGraphResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinGraphResource)(nil)).Elem()
}

func (i *gremlinGraphResourcePtrType) ToGremlinGraphResourcePtrOutput() GremlinGraphResourcePtrOutput {
	return i.ToGremlinGraphResourcePtrOutputWithContext(context.Background())
}

func (i *gremlinGraphResourcePtrType) ToGremlinGraphResourcePtrOutputWithContext(ctx context.Context) GremlinGraphResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphResourcePtrOutput)
}

// The paths that are included in indexing
type IncludedPath struct {
	// List of indexes for this path
	Indexes []Indexes `pulumi:"indexes"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
}

// IncludedPathInput is an input type that accepts IncludedPathArgs and IncludedPathOutput values.
// You can construct a concrete instance of `IncludedPathInput` via:
//
//          IncludedPathArgs{...}
type IncludedPathInput interface {
	pulumi.Input

	ToIncludedPathOutput() IncludedPathOutput
	ToIncludedPathOutputWithContext(context.Context) IncludedPathOutput
}

// The paths that are included in indexing
type IncludedPathArgs struct {
	// List of indexes for this path
	Indexes IndexesArrayInput `pulumi:"indexes"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (IncludedPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncludedPath)(nil)).Elem()
}

func (i IncludedPathArgs) ToIncludedPathOutput() IncludedPathOutput {
	return i.ToIncludedPathOutputWithContext(context.Background())
}

func (i IncludedPathArgs) ToIncludedPathOutputWithContext(ctx context.Context) IncludedPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncludedPathOutput)
}

// IncludedPathArrayInput is an input type that accepts IncludedPathArray and IncludedPathArrayOutput values.
// You can construct a concrete instance of `IncludedPathArrayInput` via:
//
//          IncludedPathArray{ IncludedPathArgs{...} }
type IncludedPathArrayInput interface {
	pulumi.Input

	ToIncludedPathArrayOutput() IncludedPathArrayOutput
	ToIncludedPathArrayOutputWithContext(context.Context) IncludedPathArrayOutput
}

type IncludedPathArray []IncludedPathInput

func (IncludedPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncludedPath)(nil)).Elem()
}

func (i IncludedPathArray) ToIncludedPathArrayOutput() IncludedPathArrayOutput {
	return i.ToIncludedPathArrayOutputWithContext(context.Background())
}

func (i IncludedPathArray) ToIncludedPathArrayOutputWithContext(ctx context.Context) IncludedPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncludedPathArrayOutput)
}

// The paths that are included in indexing
type IncludedPathResponse struct {
	// List of indexes for this path
	Indexes []IndexesResponse `pulumi:"indexes"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
}

// The paths that are included in indexing
type IncludedPathResponseOutput struct{ *pulumi.OutputState }

func (IncludedPathResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncludedPathResponse)(nil)).Elem()
}

func (o IncludedPathResponseOutput) ToIncludedPathResponseOutput() IncludedPathResponseOutput {
	return o
}

func (o IncludedPathResponseOutput) ToIncludedPathResponseOutputWithContext(ctx context.Context) IncludedPathResponseOutput {
	return o
}

// List of indexes for this path
func (o IncludedPathResponseOutput) Indexes() IndexesResponseArrayOutput {
	return o.ApplyT(func(v IncludedPathResponse) []IndexesResponse { return v.Indexes }).(IndexesResponseArrayOutput)
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o IncludedPathResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncludedPathResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type IncludedPathResponseArrayOutput struct{ *pulumi.OutputState }

func (IncludedPathResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncludedPathResponse)(nil)).Elem()
}

func (o IncludedPathResponseArrayOutput) ToIncludedPathResponseArrayOutput() IncludedPathResponseArrayOutput {
	return o
}

func (o IncludedPathResponseArrayOutput) ToIncludedPathResponseArrayOutputWithContext(ctx context.Context) IncludedPathResponseArrayOutput {
	return o
}

func (o IncludedPathResponseArrayOutput) Index(i pulumi.IntInput) IncludedPathResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IncludedPathResponse {
		return vs[0].([]IncludedPathResponse)[vs[1].(int)]
	}).(IncludedPathResponseOutput)
}

// The indexes for the path.
type Indexes struct {
	// The datatype for which the indexing behavior is applied to.
	DataType *string `pulumi:"dataType"`
	// Indicates the type of index.
	Kind *string `pulumi:"kind"`
	// The precision of the index. -1 is maximum precision.
	Precision *int `pulumi:"precision"`
}

// IndexesInput is an input type that accepts IndexesArgs and IndexesOutput values.
// You can construct a concrete instance of `IndexesInput` via:
//
//          IndexesArgs{...}
type IndexesInput interface {
	pulumi.Input

	ToIndexesOutput() IndexesOutput
	ToIndexesOutputWithContext(context.Context) IndexesOutput
}

// The indexes for the path.
type IndexesArgs struct {
	// The datatype for which the indexing behavior is applied to.
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// Indicates the type of index.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The precision of the index. -1 is maximum precision.
	Precision pulumi.IntPtrInput `pulumi:"precision"`
}

func (IndexesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Indexes)(nil)).Elem()
}

func (i IndexesArgs) ToIndexesOutput() IndexesOutput {
	return i.ToIndexesOutputWithContext(context.Background())
}

func (i IndexesArgs) ToIndexesOutputWithContext(ctx context.Context) IndexesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexesOutput)
}

// IndexesArrayInput is an input type that accepts IndexesArray and IndexesArrayOutput values.
// You can construct a concrete instance of `IndexesArrayInput` via:
//
//          IndexesArray{ IndexesArgs{...} }
type IndexesArrayInput interface {
	pulumi.Input

	ToIndexesArrayOutput() IndexesArrayOutput
	ToIndexesArrayOutputWithContext(context.Context) IndexesArrayOutput
}

type IndexesArray []IndexesInput

func (IndexesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Indexes)(nil)).Elem()
}

func (i IndexesArray) ToIndexesArrayOutput() IndexesArrayOutput {
	return i.ToIndexesArrayOutputWithContext(context.Background())
}

func (i IndexesArray) ToIndexesArrayOutputWithContext(ctx context.Context) IndexesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexesArrayOutput)
}

// The indexes for the path.
type IndexesResponse struct {
	// The datatype for which the indexing behavior is applied to.
	DataType *string `pulumi:"dataType"`
	// Indicates the type of index.
	Kind *string `pulumi:"kind"`
	// The precision of the index. -1 is maximum precision.
	Precision *int `pulumi:"precision"`
}

// The indexes for the path.
type IndexesResponseOutput struct{ *pulumi.OutputState }

func (IndexesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexesResponse)(nil)).Elem()
}

func (o IndexesResponseOutput) ToIndexesResponseOutput() IndexesResponseOutput {
	return o
}

func (o IndexesResponseOutput) ToIndexesResponseOutputWithContext(ctx context.Context) IndexesResponseOutput {
	return o
}

// The datatype for which the indexing behavior is applied to.
func (o IndexesResponseOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexesResponse) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// Indicates the type of index.
func (o IndexesResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexesResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The precision of the index. -1 is maximum precision.
func (o IndexesResponseOutput) Precision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IndexesResponse) *int { return v.Precision }).(pulumi.IntPtrOutput)
}

type IndexesResponseArrayOutput struct{ *pulumi.OutputState }

func (IndexesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IndexesResponse)(nil)).Elem()
}

func (o IndexesResponseArrayOutput) ToIndexesResponseArrayOutput() IndexesResponseArrayOutput {
	return o
}

func (o IndexesResponseArrayOutput) ToIndexesResponseArrayOutputWithContext(ctx context.Context) IndexesResponseArrayOutput {
	return o
}

func (o IndexesResponseArrayOutput) Index(i pulumi.IntInput) IndexesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IndexesResponse {
		return vs[0].([]IndexesResponse)[vs[1].(int)]
	}).(IndexesResponseOutput)
}

// Cosmos DB indexing policy
type IndexingPolicy struct {
	// Indicates if the indexing policy is automatic
	Automatic *bool `pulumi:"automatic"`
	// List of composite path list
	CompositeIndexes [][]CompositePath `pulumi:"compositeIndexes"`
	// List of paths to exclude from indexing
	ExcludedPaths []ExcludedPath `pulumi:"excludedPaths"`
	// List of paths to include in the indexing
	IncludedPaths []IncludedPath `pulumi:"includedPaths"`
	// Indicates the indexing mode.
	IndexingMode *string `pulumi:"indexingMode"`
	// List of spatial specifics
	SpatialIndexes []SpatialSpec `pulumi:"spatialIndexes"`
}

// IndexingPolicyInput is an input type that accepts IndexingPolicyArgs and IndexingPolicyOutput values.
// You can construct a concrete instance of `IndexingPolicyInput` via:
//
//          IndexingPolicyArgs{...}
type IndexingPolicyInput interface {
	pulumi.Input

	ToIndexingPolicyOutput() IndexingPolicyOutput
	ToIndexingPolicyOutputWithContext(context.Context) IndexingPolicyOutput
}

// Cosmos DB indexing policy
type IndexingPolicyArgs struct {
	// Indicates if the indexing policy is automatic
	Automatic pulumi.BoolPtrInput `pulumi:"automatic"`
	// List of composite path list
	CompositeIndexes CompositePathArrayArrayInput `pulumi:"compositeIndexes"`
	// List of paths to exclude from indexing
	ExcludedPaths ExcludedPathArrayInput `pulumi:"excludedPaths"`
	// List of paths to include in the indexing
	IncludedPaths IncludedPathArrayInput `pulumi:"includedPaths"`
	// Indicates the indexing mode.
	IndexingMode pulumi.StringPtrInput `pulumi:"indexingMode"`
	// List of spatial specifics
	SpatialIndexes SpatialSpecArrayInput `pulumi:"spatialIndexes"`
}

func (IndexingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexingPolicy)(nil)).Elem()
}

func (i IndexingPolicyArgs) ToIndexingPolicyOutput() IndexingPolicyOutput {
	return i.ToIndexingPolicyOutputWithContext(context.Background())
}

func (i IndexingPolicyArgs) ToIndexingPolicyOutputWithContext(ctx context.Context) IndexingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexingPolicyOutput)
}

func (i IndexingPolicyArgs) ToIndexingPolicyPtrOutput() IndexingPolicyPtrOutput {
	return i.ToIndexingPolicyPtrOutputWithContext(context.Background())
}

func (i IndexingPolicyArgs) ToIndexingPolicyPtrOutputWithContext(ctx context.Context) IndexingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexingPolicyOutput).ToIndexingPolicyPtrOutputWithContext(ctx)
}

// IndexingPolicyPtrInput is an input type that accepts IndexingPolicyArgs, IndexingPolicyPtr and IndexingPolicyPtrOutput values.
// You can construct a concrete instance of `IndexingPolicyPtrInput` via:
//
//          IndexingPolicyArgs{...}
//
//  or:
//
//          nil
type IndexingPolicyPtrInput interface {
	pulumi.Input

	ToIndexingPolicyPtrOutput() IndexingPolicyPtrOutput
	ToIndexingPolicyPtrOutputWithContext(context.Context) IndexingPolicyPtrOutput
}

type indexingPolicyPtrType IndexingPolicyArgs

func IndexingPolicyPtr(v *IndexingPolicyArgs) IndexingPolicyPtrInput {
	return (*indexingPolicyPtrType)(v)
}

func (*indexingPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexingPolicy)(nil)).Elem()
}

func (i *indexingPolicyPtrType) ToIndexingPolicyPtrOutput() IndexingPolicyPtrOutput {
	return i.ToIndexingPolicyPtrOutputWithContext(context.Background())
}

func (i *indexingPolicyPtrType) ToIndexingPolicyPtrOutputWithContext(ctx context.Context) IndexingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexingPolicyPtrOutput)
}

// Cosmos DB indexing policy
type IndexingPolicyResponse struct {
	// Indicates if the indexing policy is automatic
	Automatic *bool `pulumi:"automatic"`
	// List of composite path list
	CompositeIndexes [][]CompositePathResponse `pulumi:"compositeIndexes"`
	// List of paths to exclude from indexing
	ExcludedPaths []ExcludedPathResponse `pulumi:"excludedPaths"`
	// List of paths to include in the indexing
	IncludedPaths []IncludedPathResponse `pulumi:"includedPaths"`
	// Indicates the indexing mode.
	IndexingMode *string `pulumi:"indexingMode"`
	// List of spatial specifics
	SpatialIndexes []SpatialSpecResponse `pulumi:"spatialIndexes"`
}

// Cosmos DB indexing policy
type IndexingPolicyResponseOutput struct{ *pulumi.OutputState }

func (IndexingPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexingPolicyResponse)(nil)).Elem()
}

func (o IndexingPolicyResponseOutput) ToIndexingPolicyResponseOutput() IndexingPolicyResponseOutput {
	return o
}

func (o IndexingPolicyResponseOutput) ToIndexingPolicyResponseOutputWithContext(ctx context.Context) IndexingPolicyResponseOutput {
	return o
}

func (o IndexingPolicyResponseOutput) ToIndexingPolicyResponsePtrOutput() IndexingPolicyResponsePtrOutput {
	return o.ToIndexingPolicyResponsePtrOutputWithContext(context.Background())
}

func (o IndexingPolicyResponseOutput) ToIndexingPolicyResponsePtrOutputWithContext(ctx context.Context) IndexingPolicyResponsePtrOutput {
	return o.ApplyT(func(v IndexingPolicyResponse) *IndexingPolicyResponse {
		return &v
	}).(IndexingPolicyResponsePtrOutput)
}

// Indicates if the indexing policy is automatic
func (o IndexingPolicyResponseOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IndexingPolicyResponse) *bool { return v.Automatic }).(pulumi.BoolPtrOutput)
}

// List of composite path list
func (o IndexingPolicyResponseOutput) CompositeIndexes() CompositePathResponseArrayArrayOutput {
	return o.ApplyT(func(v IndexingPolicyResponse) [][]CompositePathResponse { return v.CompositeIndexes }).(CompositePathResponseArrayArrayOutput)
}

// List of paths to exclude from indexing
func (o IndexingPolicyResponseOutput) ExcludedPaths() ExcludedPathResponseArrayOutput {
	return o.ApplyT(func(v IndexingPolicyResponse) []ExcludedPathResponse { return v.ExcludedPaths }).(ExcludedPathResponseArrayOutput)
}

// List of paths to include in the indexing
func (o IndexingPolicyResponseOutput) IncludedPaths() IncludedPathResponseArrayOutput {
	return o.ApplyT(func(v IndexingPolicyResponse) []IncludedPathResponse { return v.IncludedPaths }).(IncludedPathResponseArrayOutput)
}

// Indicates the indexing mode.
func (o IndexingPolicyResponseOutput) IndexingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexingPolicyResponse) *string { return v.IndexingMode }).(pulumi.StringPtrOutput)
}

// List of spatial specifics
func (o IndexingPolicyResponseOutput) SpatialIndexes() SpatialSpecResponseArrayOutput {
	return o.ApplyT(func(v IndexingPolicyResponse) []SpatialSpecResponse { return v.SpatialIndexes }).(SpatialSpecResponseArrayOutput)
}

type IndexingPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (IndexingPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexingPolicyResponse)(nil)).Elem()
}

func (o IndexingPolicyResponsePtrOutput) ToIndexingPolicyResponsePtrOutput() IndexingPolicyResponsePtrOutput {
	return o
}

func (o IndexingPolicyResponsePtrOutput) ToIndexingPolicyResponsePtrOutputWithContext(ctx context.Context) IndexingPolicyResponsePtrOutput {
	return o
}

func (o IndexingPolicyResponsePtrOutput) Elem() IndexingPolicyResponseOutput {
	return o.ApplyT(func(v *IndexingPolicyResponse) IndexingPolicyResponse { return *v }).(IndexingPolicyResponseOutput)
}

// Indicates if the indexing policy is automatic
func (o IndexingPolicyResponsePtrOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IndexingPolicyResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Automatic
	}).(pulumi.BoolPtrOutput)
}

// List of composite path list
func (o IndexingPolicyResponsePtrOutput) CompositeIndexes() CompositePathResponseArrayArrayOutput {
	return o.ApplyT(func(v *IndexingPolicyResponse) [][]CompositePathResponse {
		if v == nil {
			return nil
		}
		return v.CompositeIndexes
	}).(CompositePathResponseArrayArrayOutput)
}

// List of paths to exclude from indexing
func (o IndexingPolicyResponsePtrOutput) ExcludedPaths() ExcludedPathResponseArrayOutput {
	return o.ApplyT(func(v *IndexingPolicyResponse) []ExcludedPathResponse {
		if v == nil {
			return nil
		}
		return v.ExcludedPaths
	}).(ExcludedPathResponseArrayOutput)
}

// List of paths to include in the indexing
func (o IndexingPolicyResponsePtrOutput) IncludedPaths() IncludedPathResponseArrayOutput {
	return o.ApplyT(func(v *IndexingPolicyResponse) []IncludedPathResponse {
		if v == nil {
			return nil
		}
		return v.IncludedPaths
	}).(IncludedPathResponseArrayOutput)
}

// Indicates the indexing mode.
func (o IndexingPolicyResponsePtrOutput) IndexingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IndexingPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.IndexingMode
	}).(pulumi.StringPtrOutput)
}

// List of spatial specifics
func (o IndexingPolicyResponsePtrOutput) SpatialIndexes() SpatialSpecResponseArrayOutput {
	return o.ApplyT(func(v *IndexingPolicyResponse) []SpatialSpecResponse {
		if v == nil {
			return nil
		}
		return v.SpatialIndexes
	}).(SpatialSpecResponseArrayOutput)
}

// IpAddressOrRange object
type IpAddressOrRange struct {
	// A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”.
	IpAddressOrRange *string `pulumi:"ipAddressOrRange"`
}

// IpAddressOrRangeInput is an input type that accepts IpAddressOrRangeArgs and IpAddressOrRangeOutput values.
// You can construct a concrete instance of `IpAddressOrRangeInput` via:
//
//          IpAddressOrRangeArgs{...}
type IpAddressOrRangeInput interface {
	pulumi.Input

	ToIpAddressOrRangeOutput() IpAddressOrRangeOutput
	ToIpAddressOrRangeOutputWithContext(context.Context) IpAddressOrRangeOutput
}

// IpAddressOrRange object
type IpAddressOrRangeArgs struct {
	// A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”.
	IpAddressOrRange pulumi.StringPtrInput `pulumi:"ipAddressOrRange"`
}

func (IpAddressOrRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpAddressOrRange)(nil)).Elem()
}

func (i IpAddressOrRangeArgs) ToIpAddressOrRangeOutput() IpAddressOrRangeOutput {
	return i.ToIpAddressOrRangeOutputWithContext(context.Background())
}

func (i IpAddressOrRangeArgs) ToIpAddressOrRangeOutputWithContext(ctx context.Context) IpAddressOrRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAddressOrRangeOutput)
}

// IpAddressOrRangeArrayInput is an input type that accepts IpAddressOrRangeArray and IpAddressOrRangeArrayOutput values.
// You can construct a concrete instance of `IpAddressOrRangeArrayInput` via:
//
//          IpAddressOrRangeArray{ IpAddressOrRangeArgs{...} }
type IpAddressOrRangeArrayInput interface {
	pulumi.Input

	ToIpAddressOrRangeArrayOutput() IpAddressOrRangeArrayOutput
	ToIpAddressOrRangeArrayOutputWithContext(context.Context) IpAddressOrRangeArrayOutput
}

type IpAddressOrRangeArray []IpAddressOrRangeInput

func (IpAddressOrRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpAddressOrRange)(nil)).Elem()
}

func (i IpAddressOrRangeArray) ToIpAddressOrRangeArrayOutput() IpAddressOrRangeArrayOutput {
	return i.ToIpAddressOrRangeArrayOutputWithContext(context.Background())
}

func (i IpAddressOrRangeArray) ToIpAddressOrRangeArrayOutputWithContext(ctx context.Context) IpAddressOrRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAddressOrRangeArrayOutput)
}

// IpAddressOrRange object
type IpAddressOrRangeResponse struct {
	// A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”.
	IpAddressOrRange *string `pulumi:"ipAddressOrRange"`
}

// IpAddressOrRange object
type IpAddressOrRangeResponseOutput struct{ *pulumi.OutputState }

func (IpAddressOrRangeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpAddressOrRangeResponse)(nil)).Elem()
}

func (o IpAddressOrRangeResponseOutput) ToIpAddressOrRangeResponseOutput() IpAddressOrRangeResponseOutput {
	return o
}

func (o IpAddressOrRangeResponseOutput) ToIpAddressOrRangeResponseOutputWithContext(ctx context.Context) IpAddressOrRangeResponseOutput {
	return o
}

// A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”.
func (o IpAddressOrRangeResponseOutput) IpAddressOrRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpAddressOrRangeResponse) *string { return v.IpAddressOrRange }).(pulumi.StringPtrOutput)
}

type IpAddressOrRangeResponseArrayOutput struct{ *pulumi.OutputState }

func (IpAddressOrRangeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpAddressOrRangeResponse)(nil)).Elem()
}

func (o IpAddressOrRangeResponseArrayOutput) ToIpAddressOrRangeResponseArrayOutput() IpAddressOrRangeResponseArrayOutput {
	return o
}

func (o IpAddressOrRangeResponseArrayOutput) ToIpAddressOrRangeResponseArrayOutputWithContext(ctx context.Context) IpAddressOrRangeResponseArrayOutput {
	return o
}

func (o IpAddressOrRangeResponseArrayOutput) Index(i pulumi.IntInput) IpAddressOrRangeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpAddressOrRangeResponse {
		return vs[0].([]IpAddressOrRangeResponse)[vs[1].(int)]
	}).(IpAddressOrRangeResponseOutput)
}

// A region in which the Azure Cosmos DB database account is deployed.
type Location struct {
	// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
	FailoverPriority *int `pulumi:"failoverPriority"`
	// Flag to indicate whether or not this region is an AvailabilityZone region
	IsZoneRedundant *bool `pulumi:"isZoneRedundant"`
	// The name of the region.
	LocationName *string `pulumi:"locationName"`
	// The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// LocationInput is an input type that accepts LocationArgs and LocationOutput values.
// You can construct a concrete instance of `LocationInput` via:
//
//          LocationArgs{...}
type LocationInput interface {
	pulumi.Input

	ToLocationOutput() LocationOutput
	ToLocationOutputWithContext(context.Context) LocationOutput
}

// A region in which the Azure Cosmos DB database account is deployed.
type LocationArgs struct {
	// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
	FailoverPriority pulumi.IntPtrInput `pulumi:"failoverPriority"`
	// Flag to indicate whether or not this region is an AvailabilityZone region
	IsZoneRedundant pulumi.BoolPtrInput `pulumi:"isZoneRedundant"`
	// The name of the region.
	LocationName pulumi.StringPtrInput `pulumi:"locationName"`
	// The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (LocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Location)(nil)).Elem()
}

func (i LocationArgs) ToLocationOutput() LocationOutput {
	return i.ToLocationOutputWithContext(context.Background())
}

func (i LocationArgs) ToLocationOutputWithContext(ctx context.Context) LocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocationOutput)
}

// LocationArrayInput is an input type that accepts LocationArray and LocationArrayOutput values.
// You can construct a concrete instance of `LocationArrayInput` via:
//
//          LocationArray{ LocationArgs{...} }
type LocationArrayInput interface {
	pulumi.Input

	ToLocationArrayOutput() LocationArrayOutput
	ToLocationArrayOutputWithContext(context.Context) LocationArrayOutput
}

type LocationArray []LocationInput

func (LocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Location)(nil)).Elem()
}

func (i LocationArray) ToLocationArrayOutput() LocationArrayOutput {
	return i.ToLocationArrayOutputWithContext(context.Background())
}

func (i LocationArray) ToLocationArrayOutputWithContext(ctx context.Context) LocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocationArrayOutput)
}

// A region in which the Azure Cosmos DB database account is deployed.
type LocationResponse struct {
	// The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/
	DocumentEndpoint string `pulumi:"documentEndpoint"`
	// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
	FailoverPriority *int `pulumi:"failoverPriority"`
	// The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;.
	Id string `pulumi:"id"`
	// Flag to indicate whether or not this region is an AvailabilityZone region
	IsZoneRedundant *bool `pulumi:"isZoneRedundant"`
	// The name of the region.
	LocationName *string `pulumi:"locationName"`
	// The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// A region in which the Azure Cosmos DB database account is deployed.
type LocationResponseOutput struct{ *pulumi.OutputState }

func (LocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationResponse)(nil)).Elem()
}

func (o LocationResponseOutput) ToLocationResponseOutput() LocationResponseOutput {
	return o
}

func (o LocationResponseOutput) ToLocationResponseOutputWithContext(ctx context.Context) LocationResponseOutput {
	return o
}

// The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/
func (o LocationResponseOutput) DocumentEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LocationResponse) string { return v.DocumentEndpoint }).(pulumi.StringOutput)
}

// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
func (o LocationResponseOutput) FailoverPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LocationResponse) *int { return v.FailoverPriority }).(pulumi.IntPtrOutput)
}

// The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;.
func (o LocationResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LocationResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Flag to indicate whether or not this region is an AvailabilityZone region
func (o LocationResponseOutput) IsZoneRedundant() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LocationResponse) *bool { return v.IsZoneRedundant }).(pulumi.BoolPtrOutput)
}

// The name of the region.
func (o LocationResponseOutput) LocationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocationResponse) *string { return v.LocationName }).(pulumi.StringPtrOutput)
}

// The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed.
func (o LocationResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocationResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type LocationResponseArrayOutput struct{ *pulumi.OutputState }

func (LocationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocationResponse)(nil)).Elem()
}

func (o LocationResponseArrayOutput) ToLocationResponseArrayOutput() LocationResponseArrayOutput {
	return o
}

func (o LocationResponseArrayOutput) ToLocationResponseArrayOutputWithContext(ctx context.Context) LocationResponseArrayOutput {
	return o
}

func (o LocationResponseArrayOutput) Index(i pulumi.IntInput) LocationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LocationResponse {
		return vs[0].([]LocationResponse)[vs[1].(int)]
	}).(LocationResponseOutput)
}

type MongoDBCollectionGetPropertiesResponseOptions struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings *AutoscaleSettingsResponse `pulumi:"autoscaleSettings"`
	// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
	Throughput *int `pulumi:"throughput"`
}

type MongoDBCollectionGetPropertiesResponseOptionsOutput struct{ *pulumi.OutputState }

func (MongoDBCollectionGetPropertiesResponseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBCollectionGetPropertiesResponseOptions)(nil)).Elem()
}

func (o MongoDBCollectionGetPropertiesResponseOptionsOutput) ToMongoDBCollectionGetPropertiesResponseOptionsOutput() MongoDBCollectionGetPropertiesResponseOptionsOutput {
	return o
}

func (o MongoDBCollectionGetPropertiesResponseOptionsOutput) ToMongoDBCollectionGetPropertiesResponseOptionsOutputWithContext(ctx context.Context) MongoDBCollectionGetPropertiesResponseOptionsOutput {
	return o
}

func (o MongoDBCollectionGetPropertiesResponseOptionsOutput) ToMongoDBCollectionGetPropertiesResponseOptionsPtrOutput() MongoDBCollectionGetPropertiesResponseOptionsPtrOutput {
	return o.ToMongoDBCollectionGetPropertiesResponseOptionsPtrOutputWithContext(context.Background())
}

func (o MongoDBCollectionGetPropertiesResponseOptionsOutput) ToMongoDBCollectionGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) MongoDBCollectionGetPropertiesResponseOptionsPtrOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseOptions) *MongoDBCollectionGetPropertiesResponseOptions {
		return &v
	}).(MongoDBCollectionGetPropertiesResponseOptionsPtrOutput)
}

// Specifies the Autoscale settings.
func (o MongoDBCollectionGetPropertiesResponseOptionsOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o MongoDBCollectionGetPropertiesResponseOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

type MongoDBCollectionGetPropertiesResponseOptionsPtrOutput struct{ *pulumi.OutputState }

func (MongoDBCollectionGetPropertiesResponseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDBCollectionGetPropertiesResponseOptions)(nil)).Elem()
}

func (o MongoDBCollectionGetPropertiesResponseOptionsPtrOutput) ToMongoDBCollectionGetPropertiesResponseOptionsPtrOutput() MongoDBCollectionGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o MongoDBCollectionGetPropertiesResponseOptionsPtrOutput) ToMongoDBCollectionGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) MongoDBCollectionGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o MongoDBCollectionGetPropertiesResponseOptionsPtrOutput) Elem() MongoDBCollectionGetPropertiesResponseOptionsOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseOptions) MongoDBCollectionGetPropertiesResponseOptions {
		return *v
	}).(MongoDBCollectionGetPropertiesResponseOptionsOutput)
}

// Specifies the Autoscale settings.
func (o MongoDBCollectionGetPropertiesResponseOptionsPtrOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o MongoDBCollectionGetPropertiesResponseOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

type MongoDBCollectionGetPropertiesResponseResource struct {
	// Analytical TTL.
	AnalyticalStorageTtl *int `pulumi:"analyticalStorageTtl"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB MongoDB collection
	Id string `pulumi:"id"`
	// List of index keys
	Indexes []MongoIndexResponse `pulumi:"indexes"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A key-value pair of shard keys to be applied for the request.
	ShardKey map[string]string `pulumi:"shardKey"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts map[string]interface{} `pulumi:"ts"`
}

type MongoDBCollectionGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (MongoDBCollectionGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBCollectionGetPropertiesResponseResource)(nil)).Elem()
}

func (o MongoDBCollectionGetPropertiesResponseResourceOutput) ToMongoDBCollectionGetPropertiesResponseResourceOutput() MongoDBCollectionGetPropertiesResponseResourceOutput {
	return o
}

func (o MongoDBCollectionGetPropertiesResponseResourceOutput) ToMongoDBCollectionGetPropertiesResponseResourceOutputWithContext(ctx context.Context) MongoDBCollectionGetPropertiesResponseResourceOutput {
	return o
}

func (o MongoDBCollectionGetPropertiesResponseResourceOutput) ToMongoDBCollectionGetPropertiesResponseResourcePtrOutput() MongoDBCollectionGetPropertiesResponseResourcePtrOutput {
	return o.ToMongoDBCollectionGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o MongoDBCollectionGetPropertiesResponseResourceOutput) ToMongoDBCollectionGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) MongoDBCollectionGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseResource) *MongoDBCollectionGetPropertiesResponseResource {
		return &v
	}).(MongoDBCollectionGetPropertiesResponseResourcePtrOutput)
}

// Analytical TTL.
func (o MongoDBCollectionGetPropertiesResponseResourceOutput) AnalyticalStorageTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseResource) *int { return v.AnalyticalStorageTtl }).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o MongoDBCollectionGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB MongoDB collection
func (o MongoDBCollectionGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// List of index keys
func (o MongoDBCollectionGetPropertiesResponseResourceOutput) Indexes() MongoIndexResponseArrayOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseResource) []MongoIndexResponse { return v.Indexes }).(MongoIndexResponseArrayOutput)
}

// A system generated property. A unique identifier.
func (o MongoDBCollectionGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A key-value pair of shard keys to be applied for the request.
func (o MongoDBCollectionGetPropertiesResponseResourceOutput) ShardKey() pulumi.StringMapOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseResource) map[string]string { return v.ShardKey }).(pulumi.StringMapOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o MongoDBCollectionGetPropertiesResponseResourceOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseResource) map[string]interface{} { return v.Ts }).(pulumi.MapOutput)
}

type MongoDBCollectionGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (MongoDBCollectionGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDBCollectionGetPropertiesResponseResource)(nil)).Elem()
}

func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) ToMongoDBCollectionGetPropertiesResponseResourcePtrOutput() MongoDBCollectionGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) ToMongoDBCollectionGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) MongoDBCollectionGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) Elem() MongoDBCollectionGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) MongoDBCollectionGetPropertiesResponseResource {
		return *v
	}).(MongoDBCollectionGetPropertiesResponseResourceOutput)
}

// Analytical TTL.
func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) AnalyticalStorageTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) *int {
		if v == nil {
			return nil
		}
		return v.AnalyticalStorageTtl
	}).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB MongoDB collection
func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// List of index keys
func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) Indexes() MongoIndexResponseArrayOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) []MongoIndexResponse {
		if v == nil {
			return nil
		}
		return v.Indexes
	}).(MongoIndexResponseArrayOutput)
}

// A system generated property. A unique identifier.
func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A key-value pair of shard keys to be applied for the request.
func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) ShardKey() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) map[string]string {
		if v == nil {
			return nil
		}
		return v.ShardKey
	}).(pulumi.StringMapOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.MapOutput)
}

// Cosmos DB MongoDB collection resource object
type MongoDBCollectionResource struct {
	// Analytical TTL.
	AnalyticalStorageTtl *int `pulumi:"analyticalStorageTtl"`
	// Name of the Cosmos DB MongoDB collection
	Id string `pulumi:"id"`
	// List of index keys
	Indexes []MongoIndex `pulumi:"indexes"`
	// A key-value pair of shard keys to be applied for the request.
	ShardKey map[string]string `pulumi:"shardKey"`
}

// MongoDBCollectionResourceInput is an input type that accepts MongoDBCollectionResourceArgs and MongoDBCollectionResourceOutput values.
// You can construct a concrete instance of `MongoDBCollectionResourceInput` via:
//
//          MongoDBCollectionResourceArgs{...}
type MongoDBCollectionResourceInput interface {
	pulumi.Input

	ToMongoDBCollectionResourceOutput() MongoDBCollectionResourceOutput
	ToMongoDBCollectionResourceOutputWithContext(context.Context) MongoDBCollectionResourceOutput
}

// Cosmos DB MongoDB collection resource object
type MongoDBCollectionResourceArgs struct {
	// Analytical TTL.
	AnalyticalStorageTtl pulumi.IntPtrInput `pulumi:"analyticalStorageTtl"`
	// Name of the Cosmos DB MongoDB collection
	Id pulumi.StringInput `pulumi:"id"`
	// List of index keys
	Indexes MongoIndexArrayInput `pulumi:"indexes"`
	// A key-value pair of shard keys to be applied for the request.
	ShardKey pulumi.StringMapInput `pulumi:"shardKey"`
}

func (MongoDBCollectionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBCollectionResource)(nil)).Elem()
}

func (i MongoDBCollectionResourceArgs) ToMongoDBCollectionResourceOutput() MongoDBCollectionResourceOutput {
	return i.ToMongoDBCollectionResourceOutputWithContext(context.Background())
}

func (i MongoDBCollectionResourceArgs) ToMongoDBCollectionResourceOutputWithContext(ctx context.Context) MongoDBCollectionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDBCollectionResourceOutput)
}

func (i MongoDBCollectionResourceArgs) ToMongoDBCollectionResourcePtrOutput() MongoDBCollectionResourcePtrOutput {
	return i.ToMongoDBCollectionResourcePtrOutputWithContext(context.Background())
}

func (i MongoDBCollectionResourceArgs) ToMongoDBCollectionResourcePtrOutputWithContext(ctx context.Context) MongoDBCollectionResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDBCollectionResourceOutput).ToMongoDBCollectionResourcePtrOutputWithContext(ctx)
}

// MongoDBCollectionResourcePtrInput is an input type that accepts MongoDBCollectionResourceArgs, MongoDBCollectionResourcePtr and MongoDBCollectionResourcePtrOutput values.
// You can construct a concrete instance of `MongoDBCollectionResourcePtrInput` via:
//
//          MongoDBCollectionResourceArgs{...}
//
//  or:
//
//          nil
type MongoDBCollectionResourcePtrInput interface {
	pulumi.Input

	ToMongoDBCollectionResourcePtrOutput() MongoDBCollectionResourcePtrOutput
	ToMongoDBCollectionResourcePtrOutputWithContext(context.Context) MongoDBCollectionResourcePtrOutput
}

type mongoDBCollectionResourcePtrType MongoDBCollectionResourceArgs

func MongoDBCollectionResourcePtr(v *MongoDBCollectionResourceArgs) MongoDBCollectionResourcePtrInput {
	return (*mongoDBCollectionResourcePtrType)(v)
}

func (*mongoDBCollectionResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDBCollectionResource)(nil)).Elem()
}

func (i *mongoDBCollectionResourcePtrType) ToMongoDBCollectionResourcePtrOutput() MongoDBCollectionResourcePtrOutput {
	return i.ToMongoDBCollectionResourcePtrOutputWithContext(context.Background())
}

func (i *mongoDBCollectionResourcePtrType) ToMongoDBCollectionResourcePtrOutputWithContext(ctx context.Context) MongoDBCollectionResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDBCollectionResourcePtrOutput)
}

type MongoDBDatabaseGetPropertiesResponseOptions struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings *AutoscaleSettingsResponse `pulumi:"autoscaleSettings"`
	// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
	Throughput *int `pulumi:"throughput"`
}

type MongoDBDatabaseGetPropertiesResponseOptionsOutput struct{ *pulumi.OutputState }

func (MongoDBDatabaseGetPropertiesResponseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBDatabaseGetPropertiesResponseOptions)(nil)).Elem()
}

func (o MongoDBDatabaseGetPropertiesResponseOptionsOutput) ToMongoDBDatabaseGetPropertiesResponseOptionsOutput() MongoDBDatabaseGetPropertiesResponseOptionsOutput {
	return o
}

func (o MongoDBDatabaseGetPropertiesResponseOptionsOutput) ToMongoDBDatabaseGetPropertiesResponseOptionsOutputWithContext(ctx context.Context) MongoDBDatabaseGetPropertiesResponseOptionsOutput {
	return o
}

func (o MongoDBDatabaseGetPropertiesResponseOptionsOutput) ToMongoDBDatabaseGetPropertiesResponseOptionsPtrOutput() MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput {
	return o.ToMongoDBDatabaseGetPropertiesResponseOptionsPtrOutputWithContext(context.Background())
}

func (o MongoDBDatabaseGetPropertiesResponseOptionsOutput) ToMongoDBDatabaseGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesResponseOptions) *MongoDBDatabaseGetPropertiesResponseOptions {
		return &v
	}).(MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput)
}

// Specifies the Autoscale settings.
func (o MongoDBDatabaseGetPropertiesResponseOptionsOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o MongoDBDatabaseGetPropertiesResponseOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesResponseOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

type MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput struct{ *pulumi.OutputState }

func (MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDBDatabaseGetPropertiesResponseOptions)(nil)).Elem()
}

func (o MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput) ToMongoDBDatabaseGetPropertiesResponseOptionsPtrOutput() MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput) ToMongoDBDatabaseGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput) Elem() MongoDBDatabaseGetPropertiesResponseOptionsOutput {
	return o.ApplyT(func(v *MongoDBDatabaseGetPropertiesResponseOptions) MongoDBDatabaseGetPropertiesResponseOptions {
		return *v
	}).(MongoDBDatabaseGetPropertiesResponseOptionsOutput)
}

// Specifies the Autoscale settings.
func (o MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *MongoDBDatabaseGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoDBDatabaseGetPropertiesResponseOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

type MongoDBDatabaseGetPropertiesResponseResource struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB MongoDB database
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts map[string]interface{} `pulumi:"ts"`
}

type MongoDBDatabaseGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (MongoDBDatabaseGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (o MongoDBDatabaseGetPropertiesResponseResourceOutput) ToMongoDBDatabaseGetPropertiesResponseResourceOutput() MongoDBDatabaseGetPropertiesResponseResourceOutput {
	return o
}

func (o MongoDBDatabaseGetPropertiesResponseResourceOutput) ToMongoDBDatabaseGetPropertiesResponseResourceOutputWithContext(ctx context.Context) MongoDBDatabaseGetPropertiesResponseResourceOutput {
	return o
}

func (o MongoDBDatabaseGetPropertiesResponseResourceOutput) ToMongoDBDatabaseGetPropertiesResponseResourcePtrOutput() MongoDBDatabaseGetPropertiesResponseResourcePtrOutput {
	return o.ToMongoDBDatabaseGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o MongoDBDatabaseGetPropertiesResponseResourceOutput) ToMongoDBDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) MongoDBDatabaseGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesResponseResource) *MongoDBDatabaseGetPropertiesResponseResource {
		return &v
	}).(MongoDBDatabaseGetPropertiesResponseResourcePtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o MongoDBDatabaseGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB MongoDB database
func (o MongoDBDatabaseGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o MongoDBDatabaseGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o MongoDBDatabaseGetPropertiesResponseResourceOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesResponseResource) map[string]interface{} { return v.Ts }).(pulumi.MapOutput)
}

type MongoDBDatabaseGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDBDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (o MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) ToMongoDBDatabaseGetPropertiesResponseResourcePtrOutput() MongoDBDatabaseGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) ToMongoDBDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) MongoDBDatabaseGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) Elem() MongoDBDatabaseGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *MongoDBDatabaseGetPropertiesResponseResource) MongoDBDatabaseGetPropertiesResponseResource {
		return *v
	}).(MongoDBDatabaseGetPropertiesResponseResourceOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDBDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB MongoDB database
func (o MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDBDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDBDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v *MongoDBDatabaseGetPropertiesResponseResource) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.MapOutput)
}

// Cosmos DB MongoDB database resource object
type MongoDBDatabaseResource struct {
	// Name of the Cosmos DB MongoDB database
	Id string `pulumi:"id"`
}

// MongoDBDatabaseResourceInput is an input type that accepts MongoDBDatabaseResourceArgs and MongoDBDatabaseResourceOutput values.
// You can construct a concrete instance of `MongoDBDatabaseResourceInput` via:
//
//          MongoDBDatabaseResourceArgs{...}
type MongoDBDatabaseResourceInput interface {
	pulumi.Input

	ToMongoDBDatabaseResourceOutput() MongoDBDatabaseResourceOutput
	ToMongoDBDatabaseResourceOutputWithContext(context.Context) MongoDBDatabaseResourceOutput
}

// Cosmos DB MongoDB database resource object
type MongoDBDatabaseResourceArgs struct {
	// Name of the Cosmos DB MongoDB database
	Id pulumi.StringInput `pulumi:"id"`
}

func (MongoDBDatabaseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBDatabaseResource)(nil)).Elem()
}

func (i MongoDBDatabaseResourceArgs) ToMongoDBDatabaseResourceOutput() MongoDBDatabaseResourceOutput {
	return i.ToMongoDBDatabaseResourceOutputWithContext(context.Background())
}

func (i MongoDBDatabaseResourceArgs) ToMongoDBDatabaseResourceOutputWithContext(ctx context.Context) MongoDBDatabaseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDBDatabaseResourceOutput)
}

func (i MongoDBDatabaseResourceArgs) ToMongoDBDatabaseResourcePtrOutput() MongoDBDatabaseResourcePtrOutput {
	return i.ToMongoDBDatabaseResourcePtrOutputWithContext(context.Background())
}

func (i MongoDBDatabaseResourceArgs) ToMongoDBDatabaseResourcePtrOutputWithContext(ctx context.Context) MongoDBDatabaseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDBDatabaseResourceOutput).ToMongoDBDatabaseResourcePtrOutputWithContext(ctx)
}

// MongoDBDatabaseResourcePtrInput is an input type that accepts MongoDBDatabaseResourceArgs, MongoDBDatabaseResourcePtr and MongoDBDatabaseResourcePtrOutput values.
// You can construct a concrete instance of `MongoDBDatabaseResourcePtrInput` via:
//
//          MongoDBDatabaseResourceArgs{...}
//
//  or:
//
//          nil
type MongoDBDatabaseResourcePtrInput interface {
	pulumi.Input

	ToMongoDBDatabaseResourcePtrOutput() MongoDBDatabaseResourcePtrOutput
	ToMongoDBDatabaseResourcePtrOutputWithContext(context.Context) MongoDBDatabaseResourcePtrOutput
}

type mongoDBDatabaseResourcePtrType MongoDBDatabaseResourceArgs

func MongoDBDatabaseResourcePtr(v *MongoDBDatabaseResourceArgs) MongoDBDatabaseResourcePtrInput {
	return (*mongoDBDatabaseResourcePtrType)(v)
}

func (*mongoDBDatabaseResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDBDatabaseResource)(nil)).Elem()
}

func (i *mongoDBDatabaseResourcePtrType) ToMongoDBDatabaseResourcePtrOutput() MongoDBDatabaseResourcePtrOutput {
	return i.ToMongoDBDatabaseResourcePtrOutputWithContext(context.Background())
}

func (i *mongoDBDatabaseResourcePtrType) ToMongoDBDatabaseResourcePtrOutputWithContext(ctx context.Context) MongoDBDatabaseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDBDatabaseResourcePtrOutput)
}

// Cosmos DB MongoDB collection index key
type MongoIndex struct {
	// Cosmos DB MongoDB collection index keys
	Key *MongoIndexKeys `pulumi:"key"`
	// Cosmos DB MongoDB collection index key options
	Options *MongoIndexOptions `pulumi:"options"`
}

// MongoIndexInput is an input type that accepts MongoIndexArgs and MongoIndexOutput values.
// You can construct a concrete instance of `MongoIndexInput` via:
//
//          MongoIndexArgs{...}
type MongoIndexInput interface {
	pulumi.Input

	ToMongoIndexOutput() MongoIndexOutput
	ToMongoIndexOutputWithContext(context.Context) MongoIndexOutput
}

// Cosmos DB MongoDB collection index key
type MongoIndexArgs struct {
	// Cosmos DB MongoDB collection index keys
	Key MongoIndexKeysPtrInput `pulumi:"key"`
	// Cosmos DB MongoDB collection index key options
	Options MongoIndexOptionsPtrInput `pulumi:"options"`
}

func (MongoIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndex)(nil)).Elem()
}

func (i MongoIndexArgs) ToMongoIndexOutput() MongoIndexOutput {
	return i.ToMongoIndexOutputWithContext(context.Background())
}

func (i MongoIndexArgs) ToMongoIndexOutputWithContext(ctx context.Context) MongoIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexOutput)
}

// MongoIndexArrayInput is an input type that accepts MongoIndexArray and MongoIndexArrayOutput values.
// You can construct a concrete instance of `MongoIndexArrayInput` via:
//
//          MongoIndexArray{ MongoIndexArgs{...} }
type MongoIndexArrayInput interface {
	pulumi.Input

	ToMongoIndexArrayOutput() MongoIndexArrayOutput
	ToMongoIndexArrayOutputWithContext(context.Context) MongoIndexArrayOutput
}

type MongoIndexArray []MongoIndexInput

func (MongoIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoIndex)(nil)).Elem()
}

func (i MongoIndexArray) ToMongoIndexArrayOutput() MongoIndexArrayOutput {
	return i.ToMongoIndexArrayOutputWithContext(context.Background())
}

func (i MongoIndexArray) ToMongoIndexArrayOutputWithContext(ctx context.Context) MongoIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexArrayOutput)
}

// Cosmos DB MongoDB collection resource object
type MongoIndexKeys struct {
	// List of keys for each MongoDB collection in the Azure Cosmos DB service
	Keys []string `pulumi:"keys"`
}

// MongoIndexKeysInput is an input type that accepts MongoIndexKeysArgs and MongoIndexKeysOutput values.
// You can construct a concrete instance of `MongoIndexKeysInput` via:
//
//          MongoIndexKeysArgs{...}
type MongoIndexKeysInput interface {
	pulumi.Input

	ToMongoIndexKeysOutput() MongoIndexKeysOutput
	ToMongoIndexKeysOutputWithContext(context.Context) MongoIndexKeysOutput
}

// Cosmos DB MongoDB collection resource object
type MongoIndexKeysArgs struct {
	// List of keys for each MongoDB collection in the Azure Cosmos DB service
	Keys pulumi.StringArrayInput `pulumi:"keys"`
}

func (MongoIndexKeysArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexKeys)(nil)).Elem()
}

func (i MongoIndexKeysArgs) ToMongoIndexKeysOutput() MongoIndexKeysOutput {
	return i.ToMongoIndexKeysOutputWithContext(context.Background())
}

func (i MongoIndexKeysArgs) ToMongoIndexKeysOutputWithContext(ctx context.Context) MongoIndexKeysOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexKeysOutput)
}

func (i MongoIndexKeysArgs) ToMongoIndexKeysPtrOutput() MongoIndexKeysPtrOutput {
	return i.ToMongoIndexKeysPtrOutputWithContext(context.Background())
}

func (i MongoIndexKeysArgs) ToMongoIndexKeysPtrOutputWithContext(ctx context.Context) MongoIndexKeysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexKeysOutput).ToMongoIndexKeysPtrOutputWithContext(ctx)
}

// MongoIndexKeysPtrInput is an input type that accepts MongoIndexKeysArgs, MongoIndexKeysPtr and MongoIndexKeysPtrOutput values.
// You can construct a concrete instance of `MongoIndexKeysPtrInput` via:
//
//          MongoIndexKeysArgs{...}
//
//  or:
//
//          nil
type MongoIndexKeysPtrInput interface {
	pulumi.Input

	ToMongoIndexKeysPtrOutput() MongoIndexKeysPtrOutput
	ToMongoIndexKeysPtrOutputWithContext(context.Context) MongoIndexKeysPtrOutput
}

type mongoIndexKeysPtrType MongoIndexKeysArgs

func MongoIndexKeysPtr(v *MongoIndexKeysArgs) MongoIndexKeysPtrInput {
	return (*mongoIndexKeysPtrType)(v)
}

func (*mongoIndexKeysPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoIndexKeys)(nil)).Elem()
}

func (i *mongoIndexKeysPtrType) ToMongoIndexKeysPtrOutput() MongoIndexKeysPtrOutput {
	return i.ToMongoIndexKeysPtrOutputWithContext(context.Background())
}

func (i *mongoIndexKeysPtrType) ToMongoIndexKeysPtrOutputWithContext(ctx context.Context) MongoIndexKeysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexKeysPtrOutput)
}

// Cosmos DB MongoDB collection resource object
type MongoIndexKeysResponse struct {
	// List of keys for each MongoDB collection in the Azure Cosmos DB service
	Keys []string `pulumi:"keys"`
}

// Cosmos DB MongoDB collection resource object
type MongoIndexKeysResponseOutput struct{ *pulumi.OutputState }

func (MongoIndexKeysResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexKeysResponse)(nil)).Elem()
}

func (o MongoIndexKeysResponseOutput) ToMongoIndexKeysResponseOutput() MongoIndexKeysResponseOutput {
	return o
}

func (o MongoIndexKeysResponseOutput) ToMongoIndexKeysResponseOutputWithContext(ctx context.Context) MongoIndexKeysResponseOutput {
	return o
}

func (o MongoIndexKeysResponseOutput) ToMongoIndexKeysResponsePtrOutput() MongoIndexKeysResponsePtrOutput {
	return o.ToMongoIndexKeysResponsePtrOutputWithContext(context.Background())
}

func (o MongoIndexKeysResponseOutput) ToMongoIndexKeysResponsePtrOutputWithContext(ctx context.Context) MongoIndexKeysResponsePtrOutput {
	return o.ApplyT(func(v MongoIndexKeysResponse) *MongoIndexKeysResponse {
		return &v
	}).(MongoIndexKeysResponsePtrOutput)
}

// List of keys for each MongoDB collection in the Azure Cosmos DB service
func (o MongoIndexKeysResponseOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MongoIndexKeysResponse) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

type MongoIndexKeysResponsePtrOutput struct{ *pulumi.OutputState }

func (MongoIndexKeysResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoIndexKeysResponse)(nil)).Elem()
}

func (o MongoIndexKeysResponsePtrOutput) ToMongoIndexKeysResponsePtrOutput() MongoIndexKeysResponsePtrOutput {
	return o
}

func (o MongoIndexKeysResponsePtrOutput) ToMongoIndexKeysResponsePtrOutputWithContext(ctx context.Context) MongoIndexKeysResponsePtrOutput {
	return o
}

func (o MongoIndexKeysResponsePtrOutput) Elem() MongoIndexKeysResponseOutput {
	return o.ApplyT(func(v *MongoIndexKeysResponse) MongoIndexKeysResponse { return *v }).(MongoIndexKeysResponseOutput)
}

// List of keys for each MongoDB collection in the Azure Cosmos DB service
func (o MongoIndexKeysResponsePtrOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MongoIndexKeysResponse) []string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringArrayOutput)
}

// Cosmos DB MongoDB collection index options
type MongoIndexOptions struct {
	// Expire after seconds
	ExpireAfterSeconds *int `pulumi:"expireAfterSeconds"`
	// Is unique or not
	Unique *bool `pulumi:"unique"`
}

// MongoIndexOptionsInput is an input type that accepts MongoIndexOptionsArgs and MongoIndexOptionsOutput values.
// You can construct a concrete instance of `MongoIndexOptionsInput` via:
//
//          MongoIndexOptionsArgs{...}
type MongoIndexOptionsInput interface {
	pulumi.Input

	ToMongoIndexOptionsOutput() MongoIndexOptionsOutput
	ToMongoIndexOptionsOutputWithContext(context.Context) MongoIndexOptionsOutput
}

// Cosmos DB MongoDB collection index options
type MongoIndexOptionsArgs struct {
	// Expire after seconds
	ExpireAfterSeconds pulumi.IntPtrInput `pulumi:"expireAfterSeconds"`
	// Is unique or not
	Unique pulumi.BoolPtrInput `pulumi:"unique"`
}

func (MongoIndexOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexOptions)(nil)).Elem()
}

func (i MongoIndexOptionsArgs) ToMongoIndexOptionsOutput() MongoIndexOptionsOutput {
	return i.ToMongoIndexOptionsOutputWithContext(context.Background())
}

func (i MongoIndexOptionsArgs) ToMongoIndexOptionsOutputWithContext(ctx context.Context) MongoIndexOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexOptionsOutput)
}

func (i MongoIndexOptionsArgs) ToMongoIndexOptionsPtrOutput() MongoIndexOptionsPtrOutput {
	return i.ToMongoIndexOptionsPtrOutputWithContext(context.Background())
}

func (i MongoIndexOptionsArgs) ToMongoIndexOptionsPtrOutputWithContext(ctx context.Context) MongoIndexOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexOptionsOutput).ToMongoIndexOptionsPtrOutputWithContext(ctx)
}

// MongoIndexOptionsPtrInput is an input type that accepts MongoIndexOptionsArgs, MongoIndexOptionsPtr and MongoIndexOptionsPtrOutput values.
// You can construct a concrete instance of `MongoIndexOptionsPtrInput` via:
//
//          MongoIndexOptionsArgs{...}
//
//  or:
//
//          nil
type MongoIndexOptionsPtrInput interface {
	pulumi.Input

	ToMongoIndexOptionsPtrOutput() MongoIndexOptionsPtrOutput
	ToMongoIndexOptionsPtrOutputWithContext(context.Context) MongoIndexOptionsPtrOutput
}

type mongoIndexOptionsPtrType MongoIndexOptionsArgs

func MongoIndexOptionsPtr(v *MongoIndexOptionsArgs) MongoIndexOptionsPtrInput {
	return (*mongoIndexOptionsPtrType)(v)
}

func (*mongoIndexOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoIndexOptions)(nil)).Elem()
}

func (i *mongoIndexOptionsPtrType) ToMongoIndexOptionsPtrOutput() MongoIndexOptionsPtrOutput {
	return i.ToMongoIndexOptionsPtrOutputWithContext(context.Background())
}

func (i *mongoIndexOptionsPtrType) ToMongoIndexOptionsPtrOutputWithContext(ctx context.Context) MongoIndexOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexOptionsPtrOutput)
}

// Cosmos DB MongoDB collection index options
type MongoIndexOptionsResponse struct {
	// Expire after seconds
	ExpireAfterSeconds *int `pulumi:"expireAfterSeconds"`
	// Is unique or not
	Unique *bool `pulumi:"unique"`
}

// Cosmos DB MongoDB collection index options
type MongoIndexOptionsResponseOutput struct{ *pulumi.OutputState }

func (MongoIndexOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexOptionsResponse)(nil)).Elem()
}

func (o MongoIndexOptionsResponseOutput) ToMongoIndexOptionsResponseOutput() MongoIndexOptionsResponseOutput {
	return o
}

func (o MongoIndexOptionsResponseOutput) ToMongoIndexOptionsResponseOutputWithContext(ctx context.Context) MongoIndexOptionsResponseOutput {
	return o
}

func (o MongoIndexOptionsResponseOutput) ToMongoIndexOptionsResponsePtrOutput() MongoIndexOptionsResponsePtrOutput {
	return o.ToMongoIndexOptionsResponsePtrOutputWithContext(context.Background())
}

func (o MongoIndexOptionsResponseOutput) ToMongoIndexOptionsResponsePtrOutputWithContext(ctx context.Context) MongoIndexOptionsResponsePtrOutput {
	return o.ApplyT(func(v MongoIndexOptionsResponse) *MongoIndexOptionsResponse {
		return &v
	}).(MongoIndexOptionsResponsePtrOutput)
}

// Expire after seconds
func (o MongoIndexOptionsResponseOutput) ExpireAfterSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoIndexOptionsResponse) *int { return v.ExpireAfterSeconds }).(pulumi.IntPtrOutput)
}

// Is unique or not
func (o MongoIndexOptionsResponseOutput) Unique() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MongoIndexOptionsResponse) *bool { return v.Unique }).(pulumi.BoolPtrOutput)
}

type MongoIndexOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (MongoIndexOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoIndexOptionsResponse)(nil)).Elem()
}

func (o MongoIndexOptionsResponsePtrOutput) ToMongoIndexOptionsResponsePtrOutput() MongoIndexOptionsResponsePtrOutput {
	return o
}

func (o MongoIndexOptionsResponsePtrOutput) ToMongoIndexOptionsResponsePtrOutputWithContext(ctx context.Context) MongoIndexOptionsResponsePtrOutput {
	return o
}

func (o MongoIndexOptionsResponsePtrOutput) Elem() MongoIndexOptionsResponseOutput {
	return o.ApplyT(func(v *MongoIndexOptionsResponse) MongoIndexOptionsResponse { return *v }).(MongoIndexOptionsResponseOutput)
}

// Expire after seconds
func (o MongoIndexOptionsResponsePtrOutput) ExpireAfterSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoIndexOptionsResponse) *int {
		if v == nil {
			return nil
		}
		return v.ExpireAfterSeconds
	}).(pulumi.IntPtrOutput)
}

// Is unique or not
func (o MongoIndexOptionsResponsePtrOutput) Unique() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MongoIndexOptionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Unique
	}).(pulumi.BoolPtrOutput)
}

// Cosmos DB MongoDB collection index key
type MongoIndexResponse struct {
	// Cosmos DB MongoDB collection index keys
	Key *MongoIndexKeysResponse `pulumi:"key"`
	// Cosmos DB MongoDB collection index key options
	Options *MongoIndexOptionsResponse `pulumi:"options"`
}

// Cosmos DB MongoDB collection index key
type MongoIndexResponseOutput struct{ *pulumi.OutputState }

func (MongoIndexResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexResponse)(nil)).Elem()
}

func (o MongoIndexResponseOutput) ToMongoIndexResponseOutput() MongoIndexResponseOutput {
	return o
}

func (o MongoIndexResponseOutput) ToMongoIndexResponseOutputWithContext(ctx context.Context) MongoIndexResponseOutput {
	return o
}

// Cosmos DB MongoDB collection index keys
func (o MongoIndexResponseOutput) Key() MongoIndexKeysResponsePtrOutput {
	return o.ApplyT(func(v MongoIndexResponse) *MongoIndexKeysResponse { return v.Key }).(MongoIndexKeysResponsePtrOutput)
}

// Cosmos DB MongoDB collection index key options
func (o MongoIndexResponseOutput) Options() MongoIndexOptionsResponsePtrOutput {
	return o.ApplyT(func(v MongoIndexResponse) *MongoIndexOptionsResponse { return v.Options }).(MongoIndexOptionsResponsePtrOutput)
}

type MongoIndexResponseArrayOutput struct{ *pulumi.OutputState }

func (MongoIndexResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoIndexResponse)(nil)).Elem()
}

func (o MongoIndexResponseArrayOutput) ToMongoIndexResponseArrayOutput() MongoIndexResponseArrayOutput {
	return o
}

func (o MongoIndexResponseArrayOutput) ToMongoIndexResponseArrayOutputWithContext(ctx context.Context) MongoIndexResponseArrayOutput {
	return o
}

func (o MongoIndexResponseArrayOutput) Index(i pulumi.IntInput) MongoIndexResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MongoIndexResponse {
		return vs[0].([]MongoIndexResponse)[vs[1].(int)]
	}).(MongoIndexResponseOutput)
}

// A private endpoint connection
type PrivateEndpointConnectionResponse struct {
	// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Private endpoint which the connection belongs to.
	PrivateEndpoint *PrivateEndpointPropertyResponse `pulumi:"privateEndpoint"`
	// Connection State of the Private Endpoint Connection.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionStatePropertyResponse `pulumi:"privateLinkServiceConnectionState"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type string `pulumi:"type"`
}

// A private endpoint connection
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Private endpoint which the connection belongs to.
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointPropertyResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointPropertyResponse { return v.PrivateEndpoint }).(PrivateEndpointPropertyResponsePtrOutput)
}

// Connection State of the Private Endpoint Connection.
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStatePropertyResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateLinkServiceConnectionStatePropertyResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStatePropertyResponsePtrOutput)
}

// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// Private endpoint which the connection belongs to.
type PrivateEndpointPropertyResponse struct {
	// Resource id of the private endpoint.
	Id *string `pulumi:"id"`
}

// Private endpoint which the connection belongs to.
type PrivateEndpointPropertyResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointPropertyResponse)(nil)).Elem()
}

func (o PrivateEndpointPropertyResponseOutput) ToPrivateEndpointPropertyResponseOutput() PrivateEndpointPropertyResponseOutput {
	return o
}

func (o PrivateEndpointPropertyResponseOutput) ToPrivateEndpointPropertyResponseOutputWithContext(ctx context.Context) PrivateEndpointPropertyResponseOutput {
	return o
}

func (o PrivateEndpointPropertyResponseOutput) ToPrivateEndpointPropertyResponsePtrOutput() PrivateEndpointPropertyResponsePtrOutput {
	return o.ToPrivateEndpointPropertyResponsePtrOutputWithContext(context.Background())
}

func (o PrivateEndpointPropertyResponseOutput) ToPrivateEndpointPropertyResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointPropertyResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointPropertyResponse) *PrivateEndpointPropertyResponse {
		return &v
	}).(PrivateEndpointPropertyResponsePtrOutput)
}

// Resource id of the private endpoint.
func (o PrivateEndpointPropertyResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointPropertyResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type PrivateEndpointPropertyResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointPropertyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointPropertyResponse)(nil)).Elem()
}

func (o PrivateEndpointPropertyResponsePtrOutput) ToPrivateEndpointPropertyResponsePtrOutput() PrivateEndpointPropertyResponsePtrOutput {
	return o
}

func (o PrivateEndpointPropertyResponsePtrOutput) ToPrivateEndpointPropertyResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointPropertyResponsePtrOutput {
	return o
}

func (o PrivateEndpointPropertyResponsePtrOutput) Elem() PrivateEndpointPropertyResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointPropertyResponse) PrivateEndpointPropertyResponse { return *v }).(PrivateEndpointPropertyResponseOutput)
}

// Resource id of the private endpoint.
func (o PrivateEndpointPropertyResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointPropertyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Connection State of the Private Endpoint Connection.
type PrivateLinkServiceConnectionStatePropertyResponse struct {
	// Any action that is required beyond basic workflow (approve/ reject/ disconnect)
	ActionsRequired string `pulumi:"actionsRequired"`
	// The private link service connection status.
	Status *string `pulumi:"status"`
}

// Connection State of the Private Endpoint Connection.
type PrivateLinkServiceConnectionStatePropertyResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStatePropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStatePropertyResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStatePropertyResponseOutput) ToPrivateLinkServiceConnectionStatePropertyResponseOutput() PrivateLinkServiceConnectionStatePropertyResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePropertyResponseOutput) ToPrivateLinkServiceConnectionStatePropertyResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePropertyResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePropertyResponseOutput) ToPrivateLinkServiceConnectionStatePropertyResponsePtrOutput() PrivateLinkServiceConnectionStatePropertyResponsePtrOutput {
	return o.ToPrivateLinkServiceConnectionStatePropertyResponsePtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStatePropertyResponseOutput) ToPrivateLinkServiceConnectionStatePropertyResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePropertyResponsePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStatePropertyResponse) *PrivateLinkServiceConnectionStatePropertyResponse {
		return &v
	}).(PrivateLinkServiceConnectionStatePropertyResponsePtrOutput)
}

// Any action that is required beyond basic workflow (approve/ reject/ disconnect)
func (o PrivateLinkServiceConnectionStatePropertyResponseOutput) ActionsRequired() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStatePropertyResponse) string { return v.ActionsRequired }).(pulumi.StringOutput)
}

// The private link service connection status.
func (o PrivateLinkServiceConnectionStatePropertyResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStatePropertyResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStatePropertyResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStatePropertyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStatePropertyResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStatePropertyResponsePtrOutput) ToPrivateLinkServiceConnectionStatePropertyResponsePtrOutput() PrivateLinkServiceConnectionStatePropertyResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePropertyResponsePtrOutput) ToPrivateLinkServiceConnectionStatePropertyResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePropertyResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePropertyResponsePtrOutput) Elem() PrivateLinkServiceConnectionStatePropertyResponseOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStatePropertyResponse) PrivateLinkServiceConnectionStatePropertyResponse {
		return *v
	}).(PrivateLinkServiceConnectionStatePropertyResponseOutput)
}

// Any action that is required beyond basic workflow (approve/ reject/ disconnect)
func (o PrivateLinkServiceConnectionStatePropertyResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStatePropertyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The private link service connection status.
func (o PrivateLinkServiceConnectionStatePropertyResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStatePropertyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type SpatialSpec struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
	// List of path's spatial type
	Types []string `pulumi:"types"`
}

// SpatialSpecInput is an input type that accepts SpatialSpecArgs and SpatialSpecOutput values.
// You can construct a concrete instance of `SpatialSpecInput` via:
//
//          SpatialSpecArgs{...}
type SpatialSpecInput interface {
	pulumi.Input

	ToSpatialSpecOutput() SpatialSpecOutput
	ToSpatialSpecOutputWithContext(context.Context) SpatialSpecOutput
}

type SpatialSpecArgs struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path pulumi.StringPtrInput `pulumi:"path"`
	// List of path's spatial type
	Types pulumi.StringArrayInput `pulumi:"types"`
}

func (SpatialSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpatialSpec)(nil)).Elem()
}

func (i SpatialSpecArgs) ToSpatialSpecOutput() SpatialSpecOutput {
	return i.ToSpatialSpecOutputWithContext(context.Background())
}

func (i SpatialSpecArgs) ToSpatialSpecOutputWithContext(ctx context.Context) SpatialSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpatialSpecOutput)
}

// SpatialSpecArrayInput is an input type that accepts SpatialSpecArray and SpatialSpecArrayOutput values.
// You can construct a concrete instance of `SpatialSpecArrayInput` via:
//
//          SpatialSpecArray{ SpatialSpecArgs{...} }
type SpatialSpecArrayInput interface {
	pulumi.Input

	ToSpatialSpecArrayOutput() SpatialSpecArrayOutput
	ToSpatialSpecArrayOutputWithContext(context.Context) SpatialSpecArrayOutput
}

type SpatialSpecArray []SpatialSpecInput

func (SpatialSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpatialSpec)(nil)).Elem()
}

func (i SpatialSpecArray) ToSpatialSpecArrayOutput() SpatialSpecArrayOutput {
	return i.ToSpatialSpecArrayOutputWithContext(context.Background())
}

func (i SpatialSpecArray) ToSpatialSpecArrayOutputWithContext(ctx context.Context) SpatialSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpatialSpecArrayOutput)
}

type SpatialSpecResponse struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
	// List of path's spatial type
	Types []string `pulumi:"types"`
}

type SpatialSpecResponseOutput struct{ *pulumi.OutputState }

func (SpatialSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpatialSpecResponse)(nil)).Elem()
}

func (o SpatialSpecResponseOutput) ToSpatialSpecResponseOutput() SpatialSpecResponseOutput {
	return o
}

func (o SpatialSpecResponseOutput) ToSpatialSpecResponseOutputWithContext(ctx context.Context) SpatialSpecResponseOutput {
	return o
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o SpatialSpecResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpatialSpecResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// List of path's spatial type
func (o SpatialSpecResponseOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpatialSpecResponse) []string { return v.Types }).(pulumi.StringArrayOutput)
}

type SpatialSpecResponseArrayOutput struct{ *pulumi.OutputState }

func (SpatialSpecResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpatialSpecResponse)(nil)).Elem()
}

func (o SpatialSpecResponseArrayOutput) ToSpatialSpecResponseArrayOutput() SpatialSpecResponseArrayOutput {
	return o
}

func (o SpatialSpecResponseArrayOutput) ToSpatialSpecResponseArrayOutputWithContext(ctx context.Context) SpatialSpecResponseArrayOutput {
	return o
}

func (o SpatialSpecResponseArrayOutput) Index(i pulumi.IntInput) SpatialSpecResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpatialSpecResponse {
		return vs[0].([]SpatialSpecResponse)[vs[1].(int)]
	}).(SpatialSpecResponseOutput)
}

type SqlContainerGetPropertiesResponseOptions struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings *AutoscaleSettingsResponse `pulumi:"autoscaleSettings"`
	// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
	Throughput *int `pulumi:"throughput"`
}

type SqlContainerGetPropertiesResponseOptionsOutput struct{ *pulumi.OutputState }

func (SqlContainerGetPropertiesResponseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerGetPropertiesResponseOptions)(nil)).Elem()
}

func (o SqlContainerGetPropertiesResponseOptionsOutput) ToSqlContainerGetPropertiesResponseOptionsOutput() SqlContainerGetPropertiesResponseOptionsOutput {
	return o
}

func (o SqlContainerGetPropertiesResponseOptionsOutput) ToSqlContainerGetPropertiesResponseOptionsOutputWithContext(ctx context.Context) SqlContainerGetPropertiesResponseOptionsOutput {
	return o
}

func (o SqlContainerGetPropertiesResponseOptionsOutput) ToSqlContainerGetPropertiesResponseOptionsPtrOutput() SqlContainerGetPropertiesResponseOptionsPtrOutput {
	return o.ToSqlContainerGetPropertiesResponseOptionsPtrOutputWithContext(context.Background())
}

func (o SqlContainerGetPropertiesResponseOptionsOutput) ToSqlContainerGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) SqlContainerGetPropertiesResponseOptionsPtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseOptions) *SqlContainerGetPropertiesResponseOptions {
		return &v
	}).(SqlContainerGetPropertiesResponseOptionsPtrOutput)
}

// Specifies the Autoscale settings.
func (o SqlContainerGetPropertiesResponseOptionsOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o SqlContainerGetPropertiesResponseOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

type SqlContainerGetPropertiesResponseOptionsPtrOutput struct{ *pulumi.OutputState }

func (SqlContainerGetPropertiesResponseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlContainerGetPropertiesResponseOptions)(nil)).Elem()
}

func (o SqlContainerGetPropertiesResponseOptionsPtrOutput) ToSqlContainerGetPropertiesResponseOptionsPtrOutput() SqlContainerGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o SqlContainerGetPropertiesResponseOptionsPtrOutput) ToSqlContainerGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) SqlContainerGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o SqlContainerGetPropertiesResponseOptionsPtrOutput) Elem() SqlContainerGetPropertiesResponseOptionsOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseOptions) SqlContainerGetPropertiesResponseOptions { return *v }).(SqlContainerGetPropertiesResponseOptionsOutput)
}

// Specifies the Autoscale settings.
func (o SqlContainerGetPropertiesResponseOptionsPtrOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o SqlContainerGetPropertiesResponseOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

type SqlContainerGetPropertiesResponseResource struct {
	// Analytical TTL.
	AnalyticalStorageTtl *int `pulumi:"analyticalStorageTtl"`
	// The conflict resolution policy for the container.
	ConflictResolutionPolicy *ConflictResolutionPolicyResponse `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl *int `pulumi:"defaultTtl"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB SQL container
	Id string `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
	IndexingPolicy *IndexingPolicyResponse `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey *ContainerPartitionKeyResponse `pulumi:"partitionKey"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts map[string]interface{} `pulumi:"ts"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy *UniqueKeyPolicyResponse `pulumi:"uniqueKeyPolicy"`
}

type SqlContainerGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (SqlContainerGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlContainerGetPropertiesResponseResourceOutput) ToSqlContainerGetPropertiesResponseResourceOutput() SqlContainerGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlContainerGetPropertiesResponseResourceOutput) ToSqlContainerGetPropertiesResponseResourceOutputWithContext(ctx context.Context) SqlContainerGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlContainerGetPropertiesResponseResourceOutput) ToSqlContainerGetPropertiesResponseResourcePtrOutput() SqlContainerGetPropertiesResponseResourcePtrOutput {
	return o.ToSqlContainerGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o SqlContainerGetPropertiesResponseResourceOutput) ToSqlContainerGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlContainerGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) *SqlContainerGetPropertiesResponseResource {
		return &v
	}).(SqlContainerGetPropertiesResponseResourcePtrOutput)
}

// Analytical TTL.
func (o SqlContainerGetPropertiesResponseResourceOutput) AnalyticalStorageTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) *int { return v.AnalyticalStorageTtl }).(pulumi.IntPtrOutput)
}

// The conflict resolution policy for the container.
func (o SqlContainerGetPropertiesResponseResourceOutput) ConflictResolutionPolicy() ConflictResolutionPolicyResponsePtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) *ConflictResolutionPolicyResponse {
		return v.ConflictResolutionPolicy
	}).(ConflictResolutionPolicyResponsePtrOutput)
}

// Default time to live
func (o SqlContainerGetPropertiesResponseResourceOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) *int { return v.DefaultTtl }).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlContainerGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB SQL container
func (o SqlContainerGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
func (o SqlContainerGetPropertiesResponseResourceOutput) IndexingPolicy() IndexingPolicyResponsePtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) *IndexingPolicyResponse { return v.IndexingPolicy }).(IndexingPolicyResponsePtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
func (o SqlContainerGetPropertiesResponseResourceOutput) PartitionKey() ContainerPartitionKeyResponsePtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) *ContainerPartitionKeyResponse {
		return v.PartitionKey
	}).(ContainerPartitionKeyResponsePtrOutput)
}

// A system generated property. A unique identifier.
func (o SqlContainerGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlContainerGetPropertiesResponseResourceOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) map[string]interface{} { return v.Ts }).(pulumi.MapOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
func (o SqlContainerGetPropertiesResponseResourceOutput) UniqueKeyPolicy() UniqueKeyPolicyResponsePtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) *UniqueKeyPolicyResponse { return v.UniqueKeyPolicy }).(UniqueKeyPolicyResponsePtrOutput)
}

type SqlContainerGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (SqlContainerGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlContainerGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlContainerGetPropertiesResponseResourcePtrOutput) ToSqlContainerGetPropertiesResponseResourcePtrOutput() SqlContainerGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlContainerGetPropertiesResponseResourcePtrOutput) ToSqlContainerGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlContainerGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlContainerGetPropertiesResponseResourcePtrOutput) Elem() SqlContainerGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) SqlContainerGetPropertiesResponseResource {
		return *v
	}).(SqlContainerGetPropertiesResponseResourceOutput)
}

// Analytical TTL.
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) AnalyticalStorageTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *int {
		if v == nil {
			return nil
		}
		return v.AnalyticalStorageTtl
	}).(pulumi.IntPtrOutput)
}

// The conflict resolution policy for the container.
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) ConflictResolutionPolicy() ConflictResolutionPolicyResponsePtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *ConflictResolutionPolicyResponse {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionPolicy
	}).(ConflictResolutionPolicyResponsePtrOutput)
}

// Default time to live
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *int {
		if v == nil {
			return nil
		}
		return v.DefaultTtl
	}).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL container
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) IndexingPolicy() IndexingPolicyResponsePtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *IndexingPolicyResponse {
		if v == nil {
			return nil
		}
		return v.IndexingPolicy
	}).(IndexingPolicyResponsePtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) PartitionKey() ContainerPartitionKeyResponsePtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *ContainerPartitionKeyResponse {
		if v == nil {
			return nil
		}
		return v.PartitionKey
	}).(ContainerPartitionKeyResponsePtrOutput)
}

// A system generated property. A unique identifier.
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.MapOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) UniqueKeyPolicy() UniqueKeyPolicyResponsePtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *UniqueKeyPolicyResponse {
		if v == nil {
			return nil
		}
		return v.UniqueKeyPolicy
	}).(UniqueKeyPolicyResponsePtrOutput)
}

// Cosmos DB SQL container resource object
type SqlContainerResource struct {
	// Analytical TTL.
	AnalyticalStorageTtl *int `pulumi:"analyticalStorageTtl"`
	// The conflict resolution policy for the container.
	ConflictResolutionPolicy *ConflictResolutionPolicy `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl *int `pulumi:"defaultTtl"`
	// Name of the Cosmos DB SQL container
	Id string `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
	IndexingPolicy *IndexingPolicy `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey *ContainerPartitionKey `pulumi:"partitionKey"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy *UniqueKeyPolicy `pulumi:"uniqueKeyPolicy"`
}

// SqlContainerResourceInput is an input type that accepts SqlContainerResourceArgs and SqlContainerResourceOutput values.
// You can construct a concrete instance of `SqlContainerResourceInput` via:
//
//          SqlContainerResourceArgs{...}
type SqlContainerResourceInput interface {
	pulumi.Input

	ToSqlContainerResourceOutput() SqlContainerResourceOutput
	ToSqlContainerResourceOutputWithContext(context.Context) SqlContainerResourceOutput
}

// Cosmos DB SQL container resource object
type SqlContainerResourceArgs struct {
	// Analytical TTL.
	AnalyticalStorageTtl pulumi.IntPtrInput `pulumi:"analyticalStorageTtl"`
	// The conflict resolution policy for the container.
	ConflictResolutionPolicy ConflictResolutionPolicyPtrInput `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl pulumi.IntPtrInput `pulumi:"defaultTtl"`
	// Name of the Cosmos DB SQL container
	Id pulumi.StringInput `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
	IndexingPolicy IndexingPolicyPtrInput `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey ContainerPartitionKeyPtrInput `pulumi:"partitionKey"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy UniqueKeyPolicyPtrInput `pulumi:"uniqueKeyPolicy"`
}

func (SqlContainerResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerResource)(nil)).Elem()
}

func (i SqlContainerResourceArgs) ToSqlContainerResourceOutput() SqlContainerResourceOutput {
	return i.ToSqlContainerResourceOutputWithContext(context.Background())
}

func (i SqlContainerResourceArgs) ToSqlContainerResourceOutputWithContext(ctx context.Context) SqlContainerResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerResourceOutput)
}

func (i SqlContainerResourceArgs) ToSqlContainerResourcePtrOutput() SqlContainerResourcePtrOutput {
	return i.ToSqlContainerResourcePtrOutputWithContext(context.Background())
}

func (i SqlContainerResourceArgs) ToSqlContainerResourcePtrOutputWithContext(ctx context.Context) SqlContainerResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerResourceOutput).ToSqlContainerResourcePtrOutputWithContext(ctx)
}

// SqlContainerResourcePtrInput is an input type that accepts SqlContainerResourceArgs, SqlContainerResourcePtr and SqlContainerResourcePtrOutput values.
// You can construct a concrete instance of `SqlContainerResourcePtrInput` via:
//
//          SqlContainerResourceArgs{...}
//
//  or:
//
//          nil
type SqlContainerResourcePtrInput interface {
	pulumi.Input

	ToSqlContainerResourcePtrOutput() SqlContainerResourcePtrOutput
	ToSqlContainerResourcePtrOutputWithContext(context.Context) SqlContainerResourcePtrOutput
}

type sqlContainerResourcePtrType SqlContainerResourceArgs

func SqlContainerResourcePtr(v *SqlContainerResourceArgs) SqlContainerResourcePtrInput {
	return (*sqlContainerResourcePtrType)(v)
}

func (*sqlContainerResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlContainerResource)(nil)).Elem()
}

func (i *sqlContainerResourcePtrType) ToSqlContainerResourcePtrOutput() SqlContainerResourcePtrOutput {
	return i.ToSqlContainerResourcePtrOutputWithContext(context.Background())
}

func (i *sqlContainerResourcePtrType) ToSqlContainerResourcePtrOutputWithContext(ctx context.Context) SqlContainerResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerResourcePtrOutput)
}

type SqlDatabaseGetPropertiesResponseOptions struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings *AutoscaleSettingsResponse `pulumi:"autoscaleSettings"`
	// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
	Throughput *int `pulumi:"throughput"`
}

type SqlDatabaseGetPropertiesResponseOptionsOutput struct{ *pulumi.OutputState }

func (SqlDatabaseGetPropertiesResponseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseGetPropertiesResponseOptions)(nil)).Elem()
}

func (o SqlDatabaseGetPropertiesResponseOptionsOutput) ToSqlDatabaseGetPropertiesResponseOptionsOutput() SqlDatabaseGetPropertiesResponseOptionsOutput {
	return o
}

func (o SqlDatabaseGetPropertiesResponseOptionsOutput) ToSqlDatabaseGetPropertiesResponseOptionsOutputWithContext(ctx context.Context) SqlDatabaseGetPropertiesResponseOptionsOutput {
	return o
}

func (o SqlDatabaseGetPropertiesResponseOptionsOutput) ToSqlDatabaseGetPropertiesResponseOptionsPtrOutput() SqlDatabaseGetPropertiesResponseOptionsPtrOutput {
	return o.ToSqlDatabaseGetPropertiesResponseOptionsPtrOutputWithContext(context.Background())
}

func (o SqlDatabaseGetPropertiesResponseOptionsOutput) ToSqlDatabaseGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) SqlDatabaseGetPropertiesResponseOptionsPtrOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseOptions) *SqlDatabaseGetPropertiesResponseOptions {
		return &v
	}).(SqlDatabaseGetPropertiesResponseOptionsPtrOutput)
}

// Specifies the Autoscale settings.
func (o SqlDatabaseGetPropertiesResponseOptionsOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseOptions) *AutoscaleSettingsResponse { return v.AutoscaleSettings }).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o SqlDatabaseGetPropertiesResponseOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

type SqlDatabaseGetPropertiesResponseOptionsPtrOutput struct{ *pulumi.OutputState }

func (SqlDatabaseGetPropertiesResponseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlDatabaseGetPropertiesResponseOptions)(nil)).Elem()
}

func (o SqlDatabaseGetPropertiesResponseOptionsPtrOutput) ToSqlDatabaseGetPropertiesResponseOptionsPtrOutput() SqlDatabaseGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o SqlDatabaseGetPropertiesResponseOptionsPtrOutput) ToSqlDatabaseGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) SqlDatabaseGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o SqlDatabaseGetPropertiesResponseOptionsPtrOutput) Elem() SqlDatabaseGetPropertiesResponseOptionsOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseOptions) SqlDatabaseGetPropertiesResponseOptions { return *v }).(SqlDatabaseGetPropertiesResponseOptionsOutput)
}

// Specifies the Autoscale settings.
func (o SqlDatabaseGetPropertiesResponseOptionsPtrOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o SqlDatabaseGetPropertiesResponseOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

type SqlDatabaseGetPropertiesResponseResource struct {
	// A system generated property that specified the addressable path of the collections resource.
	Colls *string `pulumi:"colls"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB SQL database
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts map[string]interface{} `pulumi:"ts"`
	// A system generated property that specifies the addressable path of the users resource.
	Users *string `pulumi:"users"`
}

type SqlDatabaseGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (SqlDatabaseGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlDatabaseGetPropertiesResponseResourceOutput) ToSqlDatabaseGetPropertiesResponseResourceOutput() SqlDatabaseGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlDatabaseGetPropertiesResponseResourceOutput) ToSqlDatabaseGetPropertiesResponseResourceOutputWithContext(ctx context.Context) SqlDatabaseGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlDatabaseGetPropertiesResponseResourceOutput) ToSqlDatabaseGetPropertiesResponseResourcePtrOutput() SqlDatabaseGetPropertiesResponseResourcePtrOutput {
	return o.ToSqlDatabaseGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o SqlDatabaseGetPropertiesResponseResourceOutput) ToSqlDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlDatabaseGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseResource) *SqlDatabaseGetPropertiesResponseResource {
		return &v
	}).(SqlDatabaseGetPropertiesResponseResourcePtrOutput)
}

// A system generated property that specified the addressable path of the collections resource.
func (o SqlDatabaseGetPropertiesResponseResourceOutput) Colls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseResource) *string { return v.Colls }).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlDatabaseGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB SQL database
func (o SqlDatabaseGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o SqlDatabaseGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlDatabaseGetPropertiesResponseResourceOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseResource) map[string]interface{} { return v.Ts }).(pulumi.MapOutput)
}

// A system generated property that specifies the addressable path of the users resource.
func (o SqlDatabaseGetPropertiesResponseResourceOutput) Users() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseResource) *string { return v.Users }).(pulumi.StringPtrOutput)
}

type SqlDatabaseGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (SqlDatabaseGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) ToSqlDatabaseGetPropertiesResponseResourcePtrOutput() SqlDatabaseGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) ToSqlDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlDatabaseGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) Elem() SqlDatabaseGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseResource) SqlDatabaseGetPropertiesResponseResource { return *v }).(SqlDatabaseGetPropertiesResponseResourceOutput)
}

// A system generated property that specified the addressable path of the collections resource.
func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) Colls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.Colls
	}).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL database
func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseResource) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.MapOutput)
}

// A system generated property that specifies the addressable path of the users resource.
func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) Users() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.Users
	}).(pulumi.StringPtrOutput)
}

// Cosmos DB SQL database resource object
type SqlDatabaseResource struct {
	// Name of the Cosmos DB SQL database
	Id string `pulumi:"id"`
}

// SqlDatabaseResourceInput is an input type that accepts SqlDatabaseResourceArgs and SqlDatabaseResourceOutput values.
// You can construct a concrete instance of `SqlDatabaseResourceInput` via:
//
//          SqlDatabaseResourceArgs{...}
type SqlDatabaseResourceInput interface {
	pulumi.Input

	ToSqlDatabaseResourceOutput() SqlDatabaseResourceOutput
	ToSqlDatabaseResourceOutputWithContext(context.Context) SqlDatabaseResourceOutput
}

// Cosmos DB SQL database resource object
type SqlDatabaseResourceArgs struct {
	// Name of the Cosmos DB SQL database
	Id pulumi.StringInput `pulumi:"id"`
}

func (SqlDatabaseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseResource)(nil)).Elem()
}

func (i SqlDatabaseResourceArgs) ToSqlDatabaseResourceOutput() SqlDatabaseResourceOutput {
	return i.ToSqlDatabaseResourceOutputWithContext(context.Background())
}

func (i SqlDatabaseResourceArgs) ToSqlDatabaseResourceOutputWithContext(ctx context.Context) SqlDatabaseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseResourceOutput)
}

func (i SqlDatabaseResourceArgs) ToSqlDatabaseResourcePtrOutput() SqlDatabaseResourcePtrOutput {
	return i.ToSqlDatabaseResourcePtrOutputWithContext(context.Background())
}

func (i SqlDatabaseResourceArgs) ToSqlDatabaseResourcePtrOutputWithContext(ctx context.Context) SqlDatabaseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseResourceOutput).ToSqlDatabaseResourcePtrOutputWithContext(ctx)
}

// SqlDatabaseResourcePtrInput is an input type that accepts SqlDatabaseResourceArgs, SqlDatabaseResourcePtr and SqlDatabaseResourcePtrOutput values.
// You can construct a concrete instance of `SqlDatabaseResourcePtrInput` via:
//
//          SqlDatabaseResourceArgs{...}
//
//  or:
//
//          nil
type SqlDatabaseResourcePtrInput interface {
	pulumi.Input

	ToSqlDatabaseResourcePtrOutput() SqlDatabaseResourcePtrOutput
	ToSqlDatabaseResourcePtrOutputWithContext(context.Context) SqlDatabaseResourcePtrOutput
}

type sqlDatabaseResourcePtrType SqlDatabaseResourceArgs

func SqlDatabaseResourcePtr(v *SqlDatabaseResourceArgs) SqlDatabaseResourcePtrInput {
	return (*sqlDatabaseResourcePtrType)(v)
}

func (*sqlDatabaseResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlDatabaseResource)(nil)).Elem()
}

func (i *sqlDatabaseResourcePtrType) ToSqlDatabaseResourcePtrOutput() SqlDatabaseResourcePtrOutput {
	return i.ToSqlDatabaseResourcePtrOutputWithContext(context.Background())
}

func (i *sqlDatabaseResourcePtrType) ToSqlDatabaseResourcePtrOutputWithContext(ctx context.Context) SqlDatabaseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseResourcePtrOutput)
}

type SqlStoredProcedureGetPropertiesResponseResource struct {
	// Body of the Stored Procedure
	Body *string `pulumi:"body"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB SQL storedProcedure
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts map[string]interface{} `pulumi:"ts"`
}

type SqlStoredProcedureGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (SqlStoredProcedureGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlStoredProcedureGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) ToSqlStoredProcedureGetPropertiesResponseResourceOutput() SqlStoredProcedureGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) ToSqlStoredProcedureGetPropertiesResponseResourceOutputWithContext(ctx context.Context) SqlStoredProcedureGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) ToSqlStoredProcedureGetPropertiesResponseResourcePtrOutput() SqlStoredProcedureGetPropertiesResponseResourcePtrOutput {
	return o.ToSqlStoredProcedureGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) ToSqlStoredProcedureGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlStoredProcedureGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v SqlStoredProcedureGetPropertiesResponseResource) *SqlStoredProcedureGetPropertiesResponseResource {
		return &v
	}).(SqlStoredProcedureGetPropertiesResponseResourcePtrOutput)
}

// Body of the Stored Procedure
func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlStoredProcedureGetPropertiesResponseResource) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SqlStoredProcedureGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB SQL storedProcedure
func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlStoredProcedureGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v SqlStoredProcedureGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v SqlStoredProcedureGetPropertiesResponseResource) map[string]interface{} { return v.Ts }).(pulumi.MapOutput)
}

type SqlStoredProcedureGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlStoredProcedureGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) ToSqlStoredProcedureGetPropertiesResponseResourcePtrOutput() SqlStoredProcedureGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) ToSqlStoredProcedureGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlStoredProcedureGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) Elem() SqlStoredProcedureGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *SqlStoredProcedureGetPropertiesResponseResource) SqlStoredProcedureGetPropertiesResponseResource {
		return *v
	}).(SqlStoredProcedureGetPropertiesResponseResourceOutput)
}

// Body of the Stored Procedure
func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlStoredProcedureGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlStoredProcedureGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL storedProcedure
func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlStoredProcedureGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlStoredProcedureGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v *SqlStoredProcedureGetPropertiesResponseResource) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.MapOutput)
}

// Cosmos DB SQL storedProcedure resource object
type SqlStoredProcedureResource struct {
	// Body of the Stored Procedure
	Body *string `pulumi:"body"`
	// Name of the Cosmos DB SQL storedProcedure
	Id string `pulumi:"id"`
}

// SqlStoredProcedureResourceInput is an input type that accepts SqlStoredProcedureResourceArgs and SqlStoredProcedureResourceOutput values.
// You can construct a concrete instance of `SqlStoredProcedureResourceInput` via:
//
//          SqlStoredProcedureResourceArgs{...}
type SqlStoredProcedureResourceInput interface {
	pulumi.Input

	ToSqlStoredProcedureResourceOutput() SqlStoredProcedureResourceOutput
	ToSqlStoredProcedureResourceOutputWithContext(context.Context) SqlStoredProcedureResourceOutput
}

// Cosmos DB SQL storedProcedure resource object
type SqlStoredProcedureResourceArgs struct {
	// Body of the Stored Procedure
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Name of the Cosmos DB SQL storedProcedure
	Id pulumi.StringInput `pulumi:"id"`
}

func (SqlStoredProcedureResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlStoredProcedureResource)(nil)).Elem()
}

func (i SqlStoredProcedureResourceArgs) ToSqlStoredProcedureResourceOutput() SqlStoredProcedureResourceOutput {
	return i.ToSqlStoredProcedureResourceOutputWithContext(context.Background())
}

func (i SqlStoredProcedureResourceArgs) ToSqlStoredProcedureResourceOutputWithContext(ctx context.Context) SqlStoredProcedureResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlStoredProcedureResourceOutput)
}

func (i SqlStoredProcedureResourceArgs) ToSqlStoredProcedureResourcePtrOutput() SqlStoredProcedureResourcePtrOutput {
	return i.ToSqlStoredProcedureResourcePtrOutputWithContext(context.Background())
}

func (i SqlStoredProcedureResourceArgs) ToSqlStoredProcedureResourcePtrOutputWithContext(ctx context.Context) SqlStoredProcedureResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlStoredProcedureResourceOutput).ToSqlStoredProcedureResourcePtrOutputWithContext(ctx)
}

// SqlStoredProcedureResourcePtrInput is an input type that accepts SqlStoredProcedureResourceArgs, SqlStoredProcedureResourcePtr and SqlStoredProcedureResourcePtrOutput values.
// You can construct a concrete instance of `SqlStoredProcedureResourcePtrInput` via:
//
//          SqlStoredProcedureResourceArgs{...}
//
//  or:
//
//          nil
type SqlStoredProcedureResourcePtrInput interface {
	pulumi.Input

	ToSqlStoredProcedureResourcePtrOutput() SqlStoredProcedureResourcePtrOutput
	ToSqlStoredProcedureResourcePtrOutputWithContext(context.Context) SqlStoredProcedureResourcePtrOutput
}

type sqlStoredProcedureResourcePtrType SqlStoredProcedureResourceArgs

func SqlStoredProcedureResourcePtr(v *SqlStoredProcedureResourceArgs) SqlStoredProcedureResourcePtrInput {
	return (*sqlStoredProcedureResourcePtrType)(v)
}

func (*sqlStoredProcedureResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlStoredProcedureResource)(nil)).Elem()
}

func (i *sqlStoredProcedureResourcePtrType) ToSqlStoredProcedureResourcePtrOutput() SqlStoredProcedureResourcePtrOutput {
	return i.ToSqlStoredProcedureResourcePtrOutputWithContext(context.Background())
}

func (i *sqlStoredProcedureResourcePtrType) ToSqlStoredProcedureResourcePtrOutputWithContext(ctx context.Context) SqlStoredProcedureResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlStoredProcedureResourcePtrOutput)
}

type SqlTriggerGetPropertiesResponseResource struct {
	// Body of the Trigger
	Body *string `pulumi:"body"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB SQL trigger
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// The operation the trigger is associated with
	TriggerOperation *string `pulumi:"triggerOperation"`
	// Type of the Trigger
	TriggerType *string `pulumi:"triggerType"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts map[string]interface{} `pulumi:"ts"`
}

type SqlTriggerGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (SqlTriggerGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlTriggerGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlTriggerGetPropertiesResponseResourceOutput) ToSqlTriggerGetPropertiesResponseResourceOutput() SqlTriggerGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlTriggerGetPropertiesResponseResourceOutput) ToSqlTriggerGetPropertiesResponseResourceOutputWithContext(ctx context.Context) SqlTriggerGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlTriggerGetPropertiesResponseResourceOutput) ToSqlTriggerGetPropertiesResponseResourcePtrOutput() SqlTriggerGetPropertiesResponseResourcePtrOutput {
	return o.ToSqlTriggerGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o SqlTriggerGetPropertiesResponseResourceOutput) ToSqlTriggerGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlTriggerGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) *SqlTriggerGetPropertiesResponseResource {
		return &v
	}).(SqlTriggerGetPropertiesResponseResourcePtrOutput)
}

// Body of the Trigger
func (o SqlTriggerGetPropertiesResponseResourceOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlTriggerGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB SQL trigger
func (o SqlTriggerGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o SqlTriggerGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// The operation the trigger is associated with
func (o SqlTriggerGetPropertiesResponseResourceOutput) TriggerOperation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) *string { return v.TriggerOperation }).(pulumi.StringPtrOutput)
}

// Type of the Trigger
func (o SqlTriggerGetPropertiesResponseResourceOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) *string { return v.TriggerType }).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlTriggerGetPropertiesResponseResourceOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) map[string]interface{} { return v.Ts }).(pulumi.MapOutput)
}

type SqlTriggerGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (SqlTriggerGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlTriggerGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) ToSqlTriggerGetPropertiesResponseResourcePtrOutput() SqlTriggerGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) ToSqlTriggerGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlTriggerGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) Elem() SqlTriggerGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) SqlTriggerGetPropertiesResponseResource { return *v }).(SqlTriggerGetPropertiesResponseResourceOutput)
}

// Body of the Trigger
func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL trigger
func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// The operation the trigger is associated with
func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) TriggerOperation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.TriggerOperation
	}).(pulumi.StringPtrOutput)
}

// Type of the Trigger
func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.TriggerType
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.MapOutput)
}

// Cosmos DB SQL trigger resource object
type SqlTriggerResource struct {
	// Body of the Trigger
	Body *string `pulumi:"body"`
	// Name of the Cosmos DB SQL trigger
	Id string `pulumi:"id"`
	// The operation the trigger is associated with
	TriggerOperation *string `pulumi:"triggerOperation"`
	// Type of the Trigger
	TriggerType *string `pulumi:"triggerType"`
}

// SqlTriggerResourceInput is an input type that accepts SqlTriggerResourceArgs and SqlTriggerResourceOutput values.
// You can construct a concrete instance of `SqlTriggerResourceInput` via:
//
//          SqlTriggerResourceArgs{...}
type SqlTriggerResourceInput interface {
	pulumi.Input

	ToSqlTriggerResourceOutput() SqlTriggerResourceOutput
	ToSqlTriggerResourceOutputWithContext(context.Context) SqlTriggerResourceOutput
}

// Cosmos DB SQL trigger resource object
type SqlTriggerResourceArgs struct {
	// Body of the Trigger
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Name of the Cosmos DB SQL trigger
	Id pulumi.StringInput `pulumi:"id"`
	// The operation the trigger is associated with
	TriggerOperation pulumi.StringPtrInput `pulumi:"triggerOperation"`
	// Type of the Trigger
	TriggerType pulumi.StringPtrInput `pulumi:"triggerType"`
}

func (SqlTriggerResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlTriggerResource)(nil)).Elem()
}

func (i SqlTriggerResourceArgs) ToSqlTriggerResourceOutput() SqlTriggerResourceOutput {
	return i.ToSqlTriggerResourceOutputWithContext(context.Background())
}

func (i SqlTriggerResourceArgs) ToSqlTriggerResourceOutputWithContext(ctx context.Context) SqlTriggerResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlTriggerResourceOutput)
}

func (i SqlTriggerResourceArgs) ToSqlTriggerResourcePtrOutput() SqlTriggerResourcePtrOutput {
	return i.ToSqlTriggerResourcePtrOutputWithContext(context.Background())
}

func (i SqlTriggerResourceArgs) ToSqlTriggerResourcePtrOutputWithContext(ctx context.Context) SqlTriggerResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlTriggerResourceOutput).ToSqlTriggerResourcePtrOutputWithContext(ctx)
}

// SqlTriggerResourcePtrInput is an input type that accepts SqlTriggerResourceArgs, SqlTriggerResourcePtr and SqlTriggerResourcePtrOutput values.
// You can construct a concrete instance of `SqlTriggerResourcePtrInput` via:
//
//          SqlTriggerResourceArgs{...}
//
//  or:
//
//          nil
type SqlTriggerResourcePtrInput interface {
	pulumi.Input

	ToSqlTriggerResourcePtrOutput() SqlTriggerResourcePtrOutput
	ToSqlTriggerResourcePtrOutputWithContext(context.Context) SqlTriggerResourcePtrOutput
}

type sqlTriggerResourcePtrType SqlTriggerResourceArgs

func SqlTriggerResourcePtr(v *SqlTriggerResourceArgs) SqlTriggerResourcePtrInput {
	return (*sqlTriggerResourcePtrType)(v)
}

func (*sqlTriggerResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlTriggerResource)(nil)).Elem()
}

func (i *sqlTriggerResourcePtrType) ToSqlTriggerResourcePtrOutput() SqlTriggerResourcePtrOutput {
	return i.ToSqlTriggerResourcePtrOutputWithContext(context.Background())
}

func (i *sqlTriggerResourcePtrType) ToSqlTriggerResourcePtrOutputWithContext(ctx context.Context) SqlTriggerResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlTriggerResourcePtrOutput)
}

type SqlUserDefinedFunctionGetPropertiesResponseResource struct {
	// Body of the User Defined Function
	Body *string `pulumi:"body"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB SQL userDefinedFunction
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts map[string]interface{} `pulumi:"ts"`
}

type SqlUserDefinedFunctionGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlUserDefinedFunctionGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) ToSqlUserDefinedFunctionGetPropertiesResponseResourceOutput() SqlUserDefinedFunctionGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) ToSqlUserDefinedFunctionGetPropertiesResponseResourceOutputWithContext(ctx context.Context) SqlUserDefinedFunctionGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) ToSqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput() SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput {
	return o.ToSqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) ToSqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionGetPropertiesResponseResource) *SqlUserDefinedFunctionGetPropertiesResponseResource {
		return &v
	}).(SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput)
}

// Body of the User Defined Function
func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionGetPropertiesResponseResource) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB SQL userDefinedFunction
func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionGetPropertiesResponseResource) map[string]interface{} { return v.Ts }).(pulumi.MapOutput)
}

type SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlUserDefinedFunctionGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) ToSqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput() SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) ToSqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) Elem() SqlUserDefinedFunctionGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *SqlUserDefinedFunctionGetPropertiesResponseResource) SqlUserDefinedFunctionGetPropertiesResponseResource {
		return *v
	}).(SqlUserDefinedFunctionGetPropertiesResponseResourceOutput)
}

// Body of the User Defined Function
func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlUserDefinedFunctionGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlUserDefinedFunctionGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL userDefinedFunction
func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlUserDefinedFunctionGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlUserDefinedFunctionGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v *SqlUserDefinedFunctionGetPropertiesResponseResource) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.MapOutput)
}

// Cosmos DB SQL userDefinedFunction resource object
type SqlUserDefinedFunctionResource struct {
	// Body of the User Defined Function
	Body *string `pulumi:"body"`
	// Name of the Cosmos DB SQL userDefinedFunction
	Id string `pulumi:"id"`
}

// SqlUserDefinedFunctionResourceInput is an input type that accepts SqlUserDefinedFunctionResourceArgs and SqlUserDefinedFunctionResourceOutput values.
// You can construct a concrete instance of `SqlUserDefinedFunctionResourceInput` via:
//
//          SqlUserDefinedFunctionResourceArgs{...}
type SqlUserDefinedFunctionResourceInput interface {
	pulumi.Input

	ToSqlUserDefinedFunctionResourceOutput() SqlUserDefinedFunctionResourceOutput
	ToSqlUserDefinedFunctionResourceOutputWithContext(context.Context) SqlUserDefinedFunctionResourceOutput
}

// Cosmos DB SQL userDefinedFunction resource object
type SqlUserDefinedFunctionResourceArgs struct {
	// Body of the User Defined Function
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Name of the Cosmos DB SQL userDefinedFunction
	Id pulumi.StringInput `pulumi:"id"`
}

func (SqlUserDefinedFunctionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlUserDefinedFunctionResource)(nil)).Elem()
}

func (i SqlUserDefinedFunctionResourceArgs) ToSqlUserDefinedFunctionResourceOutput() SqlUserDefinedFunctionResourceOutput {
	return i.ToSqlUserDefinedFunctionResourceOutputWithContext(context.Background())
}

func (i SqlUserDefinedFunctionResourceArgs) ToSqlUserDefinedFunctionResourceOutputWithContext(ctx context.Context) SqlUserDefinedFunctionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlUserDefinedFunctionResourceOutput)
}

func (i SqlUserDefinedFunctionResourceArgs) ToSqlUserDefinedFunctionResourcePtrOutput() SqlUserDefinedFunctionResourcePtrOutput {
	return i.ToSqlUserDefinedFunctionResourcePtrOutputWithContext(context.Background())
}

func (i SqlUserDefinedFunctionResourceArgs) ToSqlUserDefinedFunctionResourcePtrOutputWithContext(ctx context.Context) SqlUserDefinedFunctionResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlUserDefinedFunctionResourceOutput).ToSqlUserDefinedFunctionResourcePtrOutputWithContext(ctx)
}

// SqlUserDefinedFunctionResourcePtrInput is an input type that accepts SqlUserDefinedFunctionResourceArgs, SqlUserDefinedFunctionResourcePtr and SqlUserDefinedFunctionResourcePtrOutput values.
// You can construct a concrete instance of `SqlUserDefinedFunctionResourcePtrInput` via:
//
//          SqlUserDefinedFunctionResourceArgs{...}
//
//  or:
//
//          nil
type SqlUserDefinedFunctionResourcePtrInput interface {
	pulumi.Input

	ToSqlUserDefinedFunctionResourcePtrOutput() SqlUserDefinedFunctionResourcePtrOutput
	ToSqlUserDefinedFunctionResourcePtrOutputWithContext(context.Context) SqlUserDefinedFunctionResourcePtrOutput
}

type sqlUserDefinedFunctionResourcePtrType SqlUserDefinedFunctionResourceArgs

func SqlUserDefinedFunctionResourcePtr(v *SqlUserDefinedFunctionResourceArgs) SqlUserDefinedFunctionResourcePtrInput {
	return (*sqlUserDefinedFunctionResourcePtrType)(v)
}

func (*sqlUserDefinedFunctionResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlUserDefinedFunctionResource)(nil)).Elem()
}

func (i *sqlUserDefinedFunctionResourcePtrType) ToSqlUserDefinedFunctionResourcePtrOutput() SqlUserDefinedFunctionResourcePtrOutput {
	return i.ToSqlUserDefinedFunctionResourcePtrOutputWithContext(context.Background())
}

func (i *sqlUserDefinedFunctionResourcePtrType) ToSqlUserDefinedFunctionResourcePtrOutputWithContext(ctx context.Context) SqlUserDefinedFunctionResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlUserDefinedFunctionResourcePtrOutput)
}

type TableGetPropertiesResponseOptions struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings *AutoscaleSettingsResponse `pulumi:"autoscaleSettings"`
	// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
	Throughput *int `pulumi:"throughput"`
}

type TableGetPropertiesResponseOptionsOutput struct{ *pulumi.OutputState }

func (TableGetPropertiesResponseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableGetPropertiesResponseOptions)(nil)).Elem()
}

func (o TableGetPropertiesResponseOptionsOutput) ToTableGetPropertiesResponseOptionsOutput() TableGetPropertiesResponseOptionsOutput {
	return o
}

func (o TableGetPropertiesResponseOptionsOutput) ToTableGetPropertiesResponseOptionsOutputWithContext(ctx context.Context) TableGetPropertiesResponseOptionsOutput {
	return o
}

func (o TableGetPropertiesResponseOptionsOutput) ToTableGetPropertiesResponseOptionsPtrOutput() TableGetPropertiesResponseOptionsPtrOutput {
	return o.ToTableGetPropertiesResponseOptionsPtrOutputWithContext(context.Background())
}

func (o TableGetPropertiesResponseOptionsOutput) ToTableGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) TableGetPropertiesResponseOptionsPtrOutput {
	return o.ApplyT(func(v TableGetPropertiesResponseOptions) *TableGetPropertiesResponseOptions {
		return &v
	}).(TableGetPropertiesResponseOptionsPtrOutput)
}

// Specifies the Autoscale settings.
func (o TableGetPropertiesResponseOptionsOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v TableGetPropertiesResponseOptions) *AutoscaleSettingsResponse { return v.AutoscaleSettings }).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o TableGetPropertiesResponseOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TableGetPropertiesResponseOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

type TableGetPropertiesResponseOptionsPtrOutput struct{ *pulumi.OutputState }

func (TableGetPropertiesResponseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableGetPropertiesResponseOptions)(nil)).Elem()
}

func (o TableGetPropertiesResponseOptionsPtrOutput) ToTableGetPropertiesResponseOptionsPtrOutput() TableGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o TableGetPropertiesResponseOptionsPtrOutput) ToTableGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) TableGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o TableGetPropertiesResponseOptionsPtrOutput) Elem() TableGetPropertiesResponseOptionsOutput {
	return o.ApplyT(func(v *TableGetPropertiesResponseOptions) TableGetPropertiesResponseOptions { return *v }).(TableGetPropertiesResponseOptionsOutput)
}

// Specifies the Autoscale settings.
func (o TableGetPropertiesResponseOptionsPtrOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *TableGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o TableGetPropertiesResponseOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TableGetPropertiesResponseOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

type TableGetPropertiesResponseResource struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB table
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts map[string]interface{} `pulumi:"ts"`
}

type TableGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (TableGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableGetPropertiesResponseResource)(nil)).Elem()
}

func (o TableGetPropertiesResponseResourceOutput) ToTableGetPropertiesResponseResourceOutput() TableGetPropertiesResponseResourceOutput {
	return o
}

func (o TableGetPropertiesResponseResourceOutput) ToTableGetPropertiesResponseResourceOutputWithContext(ctx context.Context) TableGetPropertiesResponseResourceOutput {
	return o
}

func (o TableGetPropertiesResponseResourceOutput) ToTableGetPropertiesResponseResourcePtrOutput() TableGetPropertiesResponseResourcePtrOutput {
	return o.ToTableGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o TableGetPropertiesResponseResourceOutput) ToTableGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) TableGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v TableGetPropertiesResponseResource) *TableGetPropertiesResponseResource {
		return &v
	}).(TableGetPropertiesResponseResourcePtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o TableGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v TableGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB table
func (o TableGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TableGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o TableGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v TableGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o TableGetPropertiesResponseResourceOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v TableGetPropertiesResponseResource) map[string]interface{} { return v.Ts }).(pulumi.MapOutput)
}

type TableGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (TableGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableGetPropertiesResponseResource)(nil)).Elem()
}

func (o TableGetPropertiesResponseResourcePtrOutput) ToTableGetPropertiesResponseResourcePtrOutput() TableGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o TableGetPropertiesResponseResourcePtrOutput) ToTableGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) TableGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o TableGetPropertiesResponseResourcePtrOutput) Elem() TableGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *TableGetPropertiesResponseResource) TableGetPropertiesResponseResource { return *v }).(TableGetPropertiesResponseResourceOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o TableGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB table
func (o TableGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o TableGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o TableGetPropertiesResponseResourcePtrOutput) Ts() pulumi.MapOutput {
	return o.ApplyT(func(v *TableGetPropertiesResponseResource) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.MapOutput)
}

// Cosmos DB table resource object
type TableResource struct {
	// Name of the Cosmos DB table
	Id string `pulumi:"id"`
}

// TableResourceInput is an input type that accepts TableResourceArgs and TableResourceOutput values.
// You can construct a concrete instance of `TableResourceInput` via:
//
//          TableResourceArgs{...}
type TableResourceInput interface {
	pulumi.Input

	ToTableResourceOutput() TableResourceOutput
	ToTableResourceOutputWithContext(context.Context) TableResourceOutput
}

// Cosmos DB table resource object
type TableResourceArgs struct {
	// Name of the Cosmos DB table
	Id pulumi.StringInput `pulumi:"id"`
}

func (TableResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableResource)(nil)).Elem()
}

func (i TableResourceArgs) ToTableResourceOutput() TableResourceOutput {
	return i.ToTableResourceOutputWithContext(context.Background())
}

func (i TableResourceArgs) ToTableResourceOutputWithContext(ctx context.Context) TableResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableResourceOutput)
}

func (i TableResourceArgs) ToTableResourcePtrOutput() TableResourcePtrOutput {
	return i.ToTableResourcePtrOutputWithContext(context.Background())
}

func (i TableResourceArgs) ToTableResourcePtrOutputWithContext(ctx context.Context) TableResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableResourceOutput).ToTableResourcePtrOutputWithContext(ctx)
}

// TableResourcePtrInput is an input type that accepts TableResourceArgs, TableResourcePtr and TableResourcePtrOutput values.
// You can construct a concrete instance of `TableResourcePtrInput` via:
//
//          TableResourceArgs{...}
//
//  or:
//
//          nil
type TableResourcePtrInput interface {
	pulumi.Input

	ToTableResourcePtrOutput() TableResourcePtrOutput
	ToTableResourcePtrOutputWithContext(context.Context) TableResourcePtrOutput
}

type tableResourcePtrType TableResourceArgs

func TableResourcePtr(v *TableResourceArgs) TableResourcePtrInput {
	return (*tableResourcePtrType)(v)
}

func (*tableResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableResource)(nil)).Elem()
}

func (i *tableResourcePtrType) ToTableResourcePtrOutput() TableResourcePtrOutput {
	return i.ToTableResourcePtrOutputWithContext(context.Background())
}

func (i *tableResourcePtrType) ToTableResourcePtrOutputWithContext(ctx context.Context) TableResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableResourcePtrOutput)
}

// The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
type UniqueKey struct {
	// List of paths must be unique for each document in the Azure Cosmos DB service
	Paths []string `pulumi:"paths"`
}

// UniqueKeyInput is an input type that accepts UniqueKeyArgs and UniqueKeyOutput values.
// You can construct a concrete instance of `UniqueKeyInput` via:
//
//          UniqueKeyArgs{...}
type UniqueKeyInput interface {
	pulumi.Input

	ToUniqueKeyOutput() UniqueKeyOutput
	ToUniqueKeyOutputWithContext(context.Context) UniqueKeyOutput
}

// The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyArgs struct {
	// List of paths must be unique for each document in the Azure Cosmos DB service
	Paths pulumi.StringArrayInput `pulumi:"paths"`
}

func (UniqueKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UniqueKey)(nil)).Elem()
}

func (i UniqueKeyArgs) ToUniqueKeyOutput() UniqueKeyOutput {
	return i.ToUniqueKeyOutputWithContext(context.Background())
}

func (i UniqueKeyArgs) ToUniqueKeyOutputWithContext(ctx context.Context) UniqueKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyOutput)
}

// UniqueKeyArrayInput is an input type that accepts UniqueKeyArray and UniqueKeyArrayOutput values.
// You can construct a concrete instance of `UniqueKeyArrayInput` via:
//
//          UniqueKeyArray{ UniqueKeyArgs{...} }
type UniqueKeyArrayInput interface {
	pulumi.Input

	ToUniqueKeyArrayOutput() UniqueKeyArrayOutput
	ToUniqueKeyArrayOutputWithContext(context.Context) UniqueKeyArrayOutput
}

type UniqueKeyArray []UniqueKeyInput

func (UniqueKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UniqueKey)(nil)).Elem()
}

func (i UniqueKeyArray) ToUniqueKeyArrayOutput() UniqueKeyArrayOutput {
	return i.ToUniqueKeyArrayOutputWithContext(context.Background())
}

func (i UniqueKeyArray) ToUniqueKeyArrayOutputWithContext(ctx context.Context) UniqueKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyArrayOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyPolicy struct {
	// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
	UniqueKeys []UniqueKey `pulumi:"uniqueKeys"`
}

// UniqueKeyPolicyInput is an input type that accepts UniqueKeyPolicyArgs and UniqueKeyPolicyOutput values.
// You can construct a concrete instance of `UniqueKeyPolicyInput` via:
//
//          UniqueKeyPolicyArgs{...}
type UniqueKeyPolicyInput interface {
	pulumi.Input

	ToUniqueKeyPolicyOutput() UniqueKeyPolicyOutput
	ToUniqueKeyPolicyOutputWithContext(context.Context) UniqueKeyPolicyOutput
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyPolicyArgs struct {
	// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
	UniqueKeys UniqueKeyArrayInput `pulumi:"uniqueKeys"`
}

func (UniqueKeyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UniqueKeyPolicy)(nil)).Elem()
}

func (i UniqueKeyPolicyArgs) ToUniqueKeyPolicyOutput() UniqueKeyPolicyOutput {
	return i.ToUniqueKeyPolicyOutputWithContext(context.Background())
}

func (i UniqueKeyPolicyArgs) ToUniqueKeyPolicyOutputWithContext(ctx context.Context) UniqueKeyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyPolicyOutput)
}

func (i UniqueKeyPolicyArgs) ToUniqueKeyPolicyPtrOutput() UniqueKeyPolicyPtrOutput {
	return i.ToUniqueKeyPolicyPtrOutputWithContext(context.Background())
}

func (i UniqueKeyPolicyArgs) ToUniqueKeyPolicyPtrOutputWithContext(ctx context.Context) UniqueKeyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyPolicyOutput).ToUniqueKeyPolicyPtrOutputWithContext(ctx)
}

// UniqueKeyPolicyPtrInput is an input type that accepts UniqueKeyPolicyArgs, UniqueKeyPolicyPtr and UniqueKeyPolicyPtrOutput values.
// You can construct a concrete instance of `UniqueKeyPolicyPtrInput` via:
//
//          UniqueKeyPolicyArgs{...}
//
//  or:
//
//          nil
type UniqueKeyPolicyPtrInput interface {
	pulumi.Input

	ToUniqueKeyPolicyPtrOutput() UniqueKeyPolicyPtrOutput
	ToUniqueKeyPolicyPtrOutputWithContext(context.Context) UniqueKeyPolicyPtrOutput
}

type uniqueKeyPolicyPtrType UniqueKeyPolicyArgs

func UniqueKeyPolicyPtr(v *UniqueKeyPolicyArgs) UniqueKeyPolicyPtrInput {
	return (*uniqueKeyPolicyPtrType)(v)
}

func (*uniqueKeyPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UniqueKeyPolicy)(nil)).Elem()
}

func (i *uniqueKeyPolicyPtrType) ToUniqueKeyPolicyPtrOutput() UniqueKeyPolicyPtrOutput {
	return i.ToUniqueKeyPolicyPtrOutputWithContext(context.Background())
}

func (i *uniqueKeyPolicyPtrType) ToUniqueKeyPolicyPtrOutputWithContext(ctx context.Context) UniqueKeyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyPolicyPtrOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyPolicyResponse struct {
	// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
	UniqueKeys []UniqueKeyResponse `pulumi:"uniqueKeys"`
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyPolicyResponseOutput struct{ *pulumi.OutputState }

func (UniqueKeyPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UniqueKeyPolicyResponse)(nil)).Elem()
}

func (o UniqueKeyPolicyResponseOutput) ToUniqueKeyPolicyResponseOutput() UniqueKeyPolicyResponseOutput {
	return o
}

func (o UniqueKeyPolicyResponseOutput) ToUniqueKeyPolicyResponseOutputWithContext(ctx context.Context) UniqueKeyPolicyResponseOutput {
	return o
}

func (o UniqueKeyPolicyResponseOutput) ToUniqueKeyPolicyResponsePtrOutput() UniqueKeyPolicyResponsePtrOutput {
	return o.ToUniqueKeyPolicyResponsePtrOutputWithContext(context.Background())
}

func (o UniqueKeyPolicyResponseOutput) ToUniqueKeyPolicyResponsePtrOutputWithContext(ctx context.Context) UniqueKeyPolicyResponsePtrOutput {
	return o.ApplyT(func(v UniqueKeyPolicyResponse) *UniqueKeyPolicyResponse {
		return &v
	}).(UniqueKeyPolicyResponsePtrOutput)
}

// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
func (o UniqueKeyPolicyResponseOutput) UniqueKeys() UniqueKeyResponseArrayOutput {
	return o.ApplyT(func(v UniqueKeyPolicyResponse) []UniqueKeyResponse { return v.UniqueKeys }).(UniqueKeyResponseArrayOutput)
}

type UniqueKeyPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (UniqueKeyPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UniqueKeyPolicyResponse)(nil)).Elem()
}

func (o UniqueKeyPolicyResponsePtrOutput) ToUniqueKeyPolicyResponsePtrOutput() UniqueKeyPolicyResponsePtrOutput {
	return o
}

func (o UniqueKeyPolicyResponsePtrOutput) ToUniqueKeyPolicyResponsePtrOutputWithContext(ctx context.Context) UniqueKeyPolicyResponsePtrOutput {
	return o
}

func (o UniqueKeyPolicyResponsePtrOutput) Elem() UniqueKeyPolicyResponseOutput {
	return o.ApplyT(func(v *UniqueKeyPolicyResponse) UniqueKeyPolicyResponse { return *v }).(UniqueKeyPolicyResponseOutput)
}

// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
func (o UniqueKeyPolicyResponsePtrOutput) UniqueKeys() UniqueKeyResponseArrayOutput {
	return o.ApplyT(func(v *UniqueKeyPolicyResponse) []UniqueKeyResponse {
		if v == nil {
			return nil
		}
		return v.UniqueKeys
	}).(UniqueKeyResponseArrayOutput)
}

// The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyResponse struct {
	// List of paths must be unique for each document in the Azure Cosmos DB service
	Paths []string `pulumi:"paths"`
}

// The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyResponseOutput struct{ *pulumi.OutputState }

func (UniqueKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UniqueKeyResponse)(nil)).Elem()
}

func (o UniqueKeyResponseOutput) ToUniqueKeyResponseOutput() UniqueKeyResponseOutput {
	return o
}

func (o UniqueKeyResponseOutput) ToUniqueKeyResponseOutputWithContext(ctx context.Context) UniqueKeyResponseOutput {
	return o
}

// List of paths must be unique for each document in the Azure Cosmos DB service
func (o UniqueKeyResponseOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UniqueKeyResponse) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

type UniqueKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (UniqueKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UniqueKeyResponse)(nil)).Elem()
}

func (o UniqueKeyResponseArrayOutput) ToUniqueKeyResponseArrayOutput() UniqueKeyResponseArrayOutput {
	return o
}

func (o UniqueKeyResponseArrayOutput) ToUniqueKeyResponseArrayOutputWithContext(ctx context.Context) UniqueKeyResponseArrayOutput {
	return o
}

func (o UniqueKeyResponseArrayOutput) Index(i pulumi.IntInput) UniqueKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UniqueKeyResponse {
		return vs[0].([]UniqueKeyResponse)[vs[1].(int)]
	}).(UniqueKeyResponseOutput)
}

// Virtual Network ACL Rule object
type VirtualNetworkRule struct {
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
	Id *string `pulumi:"id"`
	// Create firewall rule before the virtual network has vnet service endpoint enabled.
	IgnoreMissingVNetServiceEndpoint *bool `pulumi:"ignoreMissingVNetServiceEndpoint"`
}

// VirtualNetworkRuleInput is an input type that accepts VirtualNetworkRuleArgs and VirtualNetworkRuleOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleInput` via:
//
//          VirtualNetworkRuleArgs{...}
type VirtualNetworkRuleInput interface {
	pulumi.Input

	ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput
	ToVirtualNetworkRuleOutputWithContext(context.Context) VirtualNetworkRuleOutput
}

// Virtual Network ACL Rule object
type VirtualNetworkRuleArgs struct {
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Create firewall rule before the virtual network has vnet service endpoint enabled.
	IgnoreMissingVNetServiceEndpoint pulumi.BoolPtrInput `pulumi:"ignoreMissingVNetServiceEndpoint"`
}

func (VirtualNetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRule)(nil)).Elem()
}

func (i VirtualNetworkRuleArgs) ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput {
	return i.ToVirtualNetworkRuleOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleArgs) ToVirtualNetworkRuleOutputWithContext(ctx context.Context) VirtualNetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleOutput)
}

// VirtualNetworkRuleArrayInput is an input type that accepts VirtualNetworkRuleArray and VirtualNetworkRuleArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleArrayInput` via:
//
//          VirtualNetworkRuleArray{ VirtualNetworkRuleArgs{...} }
type VirtualNetworkRuleArrayInput interface {
	pulumi.Input

	ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput
	ToVirtualNetworkRuleArrayOutputWithContext(context.Context) VirtualNetworkRuleArrayOutput
}

type VirtualNetworkRuleArray []VirtualNetworkRuleInput

func (VirtualNetworkRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRule)(nil)).Elem()
}

func (i VirtualNetworkRuleArray) ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput {
	return i.ToVirtualNetworkRuleArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleArray) ToVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleArrayOutput)
}

// Virtual Network ACL Rule object
type VirtualNetworkRuleResponse struct {
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
	Id *string `pulumi:"id"`
	// Create firewall rule before the virtual network has vnet service endpoint enabled.
	IgnoreMissingVNetServiceEndpoint *bool `pulumi:"ignoreMissingVNetServiceEndpoint"`
}

// Virtual Network ACL Rule object
type VirtualNetworkRuleResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRuleResponse)(nil)).Elem()
}

func (o VirtualNetworkRuleResponseOutput) ToVirtualNetworkRuleResponseOutput() VirtualNetworkRuleResponseOutput {
	return o
}

func (o VirtualNetworkRuleResponseOutput) ToVirtualNetworkRuleResponseOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseOutput {
	return o
}

// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
func (o VirtualNetworkRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Create firewall rule before the virtual network has vnet service endpoint enabled.
func (o VirtualNetworkRuleResponseOutput) IgnoreMissingVNetServiceEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRuleResponse) *bool { return v.IgnoreMissingVNetServiceEndpoint }).(pulumi.BoolPtrOutput)
}

type VirtualNetworkRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRuleResponse)(nil)).Elem()
}

func (o VirtualNetworkRuleResponseArrayOutput) ToVirtualNetworkRuleResponseArrayOutput() VirtualNetworkRuleResponseArrayOutput {
	return o
}

func (o VirtualNetworkRuleResponseArrayOutput) ToVirtualNetworkRuleResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseArrayOutput {
	return o
}

func (o VirtualNetworkRuleResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkRuleResponse {
		return vs[0].([]VirtualNetworkRuleResponse)[vs[1].(int)]
	}).(VirtualNetworkRuleResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ApiPropertiesOutput{})
	pulumi.RegisterOutputType(ApiPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ApiPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApiPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoscaleSettingsOutput{})
	pulumi.RegisterOutputType(AutoscaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(AutoscaleSettingsResponseOutput{})
	pulumi.RegisterOutputType(AutoscaleSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(CapabilityOutput{})
	pulumi.RegisterOutputType(CapabilityArrayOutput{})
	pulumi.RegisterOutputType(CapabilityResponseOutput{})
	pulumi.RegisterOutputType(CapabilityResponseArrayOutput{})
	pulumi.RegisterOutputType(CassandraKeyspaceGetPropertiesResponseOptionsOutput{})
	pulumi.RegisterOutputType(CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput{})
	pulumi.RegisterOutputType(CassandraKeyspaceGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(CassandraKeyspaceGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(CassandraKeyspaceResourceOutput{})
	pulumi.RegisterOutputType(CassandraKeyspaceResourcePtrOutput{})
	pulumi.RegisterOutputType(CassandraPartitionKeyOutput{})
	pulumi.RegisterOutputType(CassandraPartitionKeyArrayOutput{})
	pulumi.RegisterOutputType(CassandraPartitionKeyResponseOutput{})
	pulumi.RegisterOutputType(CassandraPartitionKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(CassandraSchemaOutput{})
	pulumi.RegisterOutputType(CassandraSchemaPtrOutput{})
	pulumi.RegisterOutputType(CassandraSchemaResponseOutput{})
	pulumi.RegisterOutputType(CassandraSchemaResponsePtrOutput{})
	pulumi.RegisterOutputType(CassandraTableGetPropertiesResponseOptionsOutput{})
	pulumi.RegisterOutputType(CassandraTableGetPropertiesResponseOptionsPtrOutput{})
	pulumi.RegisterOutputType(CassandraTableGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(CassandraTableGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(CassandraTableResourceOutput{})
	pulumi.RegisterOutputType(CassandraTableResourcePtrOutput{})
	pulumi.RegisterOutputType(ClusterKeyOutput{})
	pulumi.RegisterOutputType(ClusterKeyArrayOutput{})
	pulumi.RegisterOutputType(ClusterKeyResponseOutput{})
	pulumi.RegisterOutputType(ClusterKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(ColumnOutput{})
	pulumi.RegisterOutputType(ColumnArrayOutput{})
	pulumi.RegisterOutputType(ColumnResponseOutput{})
	pulumi.RegisterOutputType(ColumnResponseArrayOutput{})
	pulumi.RegisterOutputType(CompositePathOutput{})
	pulumi.RegisterOutputType(CompositePathArrayOutput{})
	pulumi.RegisterOutputType(CompositePathResponseOutput{})
	pulumi.RegisterOutputType(CompositePathResponseArrayOutput{})
	pulumi.RegisterOutputType(ConflictResolutionPolicyOutput{})
	pulumi.RegisterOutputType(ConflictResolutionPolicyPtrOutput{})
	pulumi.RegisterOutputType(ConflictResolutionPolicyResponseOutput{})
	pulumi.RegisterOutputType(ConflictResolutionPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(ConsistencyPolicyOutput{})
	pulumi.RegisterOutputType(ConsistencyPolicyPtrOutput{})
	pulumi.RegisterOutputType(ConsistencyPolicyResponseOutput{})
	pulumi.RegisterOutputType(ConsistencyPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerPartitionKeyOutput{})
	pulumi.RegisterOutputType(ContainerPartitionKeyPtrOutput{})
	pulumi.RegisterOutputType(ContainerPartitionKeyResponseOutput{})
	pulumi.RegisterOutputType(ContainerPartitionKeyResponsePtrOutput{})
	pulumi.RegisterOutputType(CorsPolicyOutput{})
	pulumi.RegisterOutputType(CorsPolicyArrayOutput{})
	pulumi.RegisterOutputType(CorsPolicyResponseOutput{})
	pulumi.RegisterOutputType(CorsPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(CreateUpdateOptionsOutput{})
	pulumi.RegisterOutputType(CreateUpdateOptionsPtrOutput{})
	pulumi.RegisterOutputType(DatabaseAccountConnectionStringResponseOutput{})
	pulumi.RegisterOutputType(DatabaseAccountConnectionStringResponseArrayOutput{})
	pulumi.RegisterOutputType(ExcludedPathOutput{})
	pulumi.RegisterOutputType(ExcludedPathArrayOutput{})
	pulumi.RegisterOutputType(ExcludedPathResponseOutput{})
	pulumi.RegisterOutputType(ExcludedPathResponseArrayOutput{})
	pulumi.RegisterOutputType(FailoverPolicyResponseOutput{})
	pulumi.RegisterOutputType(FailoverPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseGetPropertiesResponseOptionsOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseGetPropertiesResponseOptionsPtrOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseResourceOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseResourcePtrOutput{})
	pulumi.RegisterOutputType(GremlinGraphGetPropertiesResponseOptionsOutput{})
	pulumi.RegisterOutputType(GremlinGraphGetPropertiesResponseOptionsPtrOutput{})
	pulumi.RegisterOutputType(GremlinGraphGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(GremlinGraphGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(GremlinGraphResourceOutput{})
	pulumi.RegisterOutputType(GremlinGraphResourcePtrOutput{})
	pulumi.RegisterOutputType(IncludedPathOutput{})
	pulumi.RegisterOutputType(IncludedPathArrayOutput{})
	pulumi.RegisterOutputType(IncludedPathResponseOutput{})
	pulumi.RegisterOutputType(IncludedPathResponseArrayOutput{})
	pulumi.RegisterOutputType(IndexesOutput{})
	pulumi.RegisterOutputType(IndexesArrayOutput{})
	pulumi.RegisterOutputType(IndexesResponseOutput{})
	pulumi.RegisterOutputType(IndexesResponseArrayOutput{})
	pulumi.RegisterOutputType(IndexingPolicyOutput{})
	pulumi.RegisterOutputType(IndexingPolicyPtrOutput{})
	pulumi.RegisterOutputType(IndexingPolicyResponseOutput{})
	pulumi.RegisterOutputType(IndexingPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(IpAddressOrRangeOutput{})
	pulumi.RegisterOutputType(IpAddressOrRangeArrayOutput{})
	pulumi.RegisterOutputType(IpAddressOrRangeResponseOutput{})
	pulumi.RegisterOutputType(IpAddressOrRangeResponseArrayOutput{})
	pulumi.RegisterOutputType(LocationOutput{})
	pulumi.RegisterOutputType(LocationArrayOutput{})
	pulumi.RegisterOutputType(LocationResponseOutput{})
	pulumi.RegisterOutputType(LocationResponseArrayOutput{})
	pulumi.RegisterOutputType(MongoDBCollectionGetPropertiesResponseOptionsOutput{})
	pulumi.RegisterOutputType(MongoDBCollectionGetPropertiesResponseOptionsPtrOutput{})
	pulumi.RegisterOutputType(MongoDBCollectionGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(MongoDBCollectionGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(MongoDBCollectionResourceOutput{})
	pulumi.RegisterOutputType(MongoDBCollectionResourcePtrOutput{})
	pulumi.RegisterOutputType(MongoDBDatabaseGetPropertiesResponseOptionsOutput{})
	pulumi.RegisterOutputType(MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput{})
	pulumi.RegisterOutputType(MongoDBDatabaseGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(MongoDBDatabaseGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(MongoDBDatabaseResourceOutput{})
	pulumi.RegisterOutputType(MongoDBDatabaseResourcePtrOutput{})
	pulumi.RegisterOutputType(MongoIndexOutput{})
	pulumi.RegisterOutputType(MongoIndexArrayOutput{})
	pulumi.RegisterOutputType(MongoIndexKeysOutput{})
	pulumi.RegisterOutputType(MongoIndexKeysPtrOutput{})
	pulumi.RegisterOutputType(MongoIndexKeysResponseOutput{})
	pulumi.RegisterOutputType(MongoIndexKeysResponsePtrOutput{})
	pulumi.RegisterOutputType(MongoIndexOptionsOutput{})
	pulumi.RegisterOutputType(MongoIndexOptionsPtrOutput{})
	pulumi.RegisterOutputType(MongoIndexOptionsResponseOutput{})
	pulumi.RegisterOutputType(MongoIndexOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(MongoIndexResponseOutput{})
	pulumi.RegisterOutputType(MongoIndexResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointPropertyResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointPropertyResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStatePropertyResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStatePropertyResponsePtrOutput{})
	pulumi.RegisterOutputType(SpatialSpecOutput{})
	pulumi.RegisterOutputType(SpatialSpecArrayOutput{})
	pulumi.RegisterOutputType(SpatialSpecResponseOutput{})
	pulumi.RegisterOutputType(SpatialSpecResponseArrayOutput{})
	pulumi.RegisterOutputType(SqlContainerGetPropertiesResponseOptionsOutput{})
	pulumi.RegisterOutputType(SqlContainerGetPropertiesResponseOptionsPtrOutput{})
	pulumi.RegisterOutputType(SqlContainerGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(SqlContainerGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlContainerResourceOutput{})
	pulumi.RegisterOutputType(SqlContainerResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlDatabaseGetPropertiesResponseOptionsOutput{})
	pulumi.RegisterOutputType(SqlDatabaseGetPropertiesResponseOptionsPtrOutput{})
	pulumi.RegisterOutputType(SqlDatabaseGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(SqlDatabaseGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlDatabaseResourceOutput{})
	pulumi.RegisterOutputType(SqlDatabaseResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlStoredProcedureGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(SqlStoredProcedureGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlStoredProcedureResourceOutput{})
	pulumi.RegisterOutputType(SqlStoredProcedureResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlTriggerGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(SqlTriggerGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlTriggerResourceOutput{})
	pulumi.RegisterOutputType(SqlTriggerResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlUserDefinedFunctionGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlUserDefinedFunctionResourceOutput{})
	pulumi.RegisterOutputType(SqlUserDefinedFunctionResourcePtrOutput{})
	pulumi.RegisterOutputType(TableGetPropertiesResponseOptionsOutput{})
	pulumi.RegisterOutputType(TableGetPropertiesResponseOptionsPtrOutput{})
	pulumi.RegisterOutputType(TableGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(TableGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(TableResourceOutput{})
	pulumi.RegisterOutputType(TableResourcePtrOutput{})
	pulumi.RegisterOutputType(UniqueKeyOutput{})
	pulumi.RegisterOutputType(UniqueKeyArrayOutput{})
	pulumi.RegisterOutputType(UniqueKeyPolicyOutput{})
	pulumi.RegisterOutputType(UniqueKeyPolicyPtrOutput{})
	pulumi.RegisterOutputType(UniqueKeyPolicyResponseOutput{})
	pulumi.RegisterOutputType(UniqueKeyPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(UniqueKeyResponseOutput{})
	pulumi.RegisterOutputType(UniqueKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleResponseArrayOutput{})
}
