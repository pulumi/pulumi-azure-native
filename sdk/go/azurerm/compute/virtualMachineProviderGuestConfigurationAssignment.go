// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Guest configuration assignment is an association between a machine and guest configuration.
type VirtualMachineProviderGuestConfigurationAssignment struct {
	pulumi.CustomResourceState

	// Region where the VM is located.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Name of the guest configuration assignment.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// Properties of the Guest configuration assignment.
	Properties GuestConfigurationAssignmentPropertiesResponseOutput `pulumi:"properties"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewVirtualMachineProviderGuestConfigurationAssignment registers a new resource with the given unique name, arguments, and options.
func NewVirtualMachineProviderGuestConfigurationAssignment(ctx *pulumi.Context,
	name string, args *VirtualMachineProviderGuestConfigurationAssignmentArgs, opts ...pulumi.ResourceOption) (*VirtualMachineProviderGuestConfigurationAssignment, error) {
	if args == nil || args.GuestConfigurationAssignmentName == nil {
		return nil, errors.New("missing required argument 'GuestConfigurationAssignmentName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.VmName == nil {
		return nil, errors.New("missing required argument 'VmName'")
	}
	if args == nil {
		args = &VirtualMachineProviderGuestConfigurationAssignmentArgs{}
	}
	var resource VirtualMachineProviderGuestConfigurationAssignment
	err := ctx.RegisterResource("azurerm:compute:VirtualMachineProviderGuestConfigurationAssignment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualMachineProviderGuestConfigurationAssignment gets an existing VirtualMachineProviderGuestConfigurationAssignment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualMachineProviderGuestConfigurationAssignment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualMachineProviderGuestConfigurationAssignmentState, opts ...pulumi.ResourceOption) (*VirtualMachineProviderGuestConfigurationAssignment, error) {
	var resource VirtualMachineProviderGuestConfigurationAssignment
	err := ctx.ReadResource("azurerm:compute:VirtualMachineProviderGuestConfigurationAssignment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualMachineProviderGuestConfigurationAssignment resources.
type virtualMachineProviderGuestConfigurationAssignmentState struct {
	// Region where the VM is located.
	Location *string `pulumi:"location"`
	// Name of the guest configuration assignment.
	Name *string `pulumi:"name"`
	// Properties of the Guest configuration assignment.
	Properties *GuestConfigurationAssignmentPropertiesResponse `pulumi:"properties"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

type VirtualMachineProviderGuestConfigurationAssignmentState struct {
	// Region where the VM is located.
	Location pulumi.StringPtrInput
	// Name of the guest configuration assignment.
	Name pulumi.StringPtrInput
	// Properties of the Guest configuration assignment.
	Properties GuestConfigurationAssignmentPropertiesResponsePtrInput
	// The type of the resource.
	Type pulumi.StringPtrInput
}

func (VirtualMachineProviderGuestConfigurationAssignmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineProviderGuestConfigurationAssignmentState)(nil)).Elem()
}

type virtualMachineProviderGuestConfigurationAssignmentArgs struct {
	// Name of the guest configuration assignment.
	GuestConfigurationAssignmentName string `pulumi:"guestConfigurationAssignmentName"`
	// Region where the VM is located.
	Location *string `pulumi:"location"`
	// Name of the guest configuration assignment.
	Name *string `pulumi:"name"`
	// Properties of the Guest configuration assignment.
	Properties *GuestConfigurationAssignmentProperties `pulumi:"properties"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the virtual machine.
	VmName string `pulumi:"vmName"`
}

// The set of arguments for constructing a VirtualMachineProviderGuestConfigurationAssignment resource.
type VirtualMachineProviderGuestConfigurationAssignmentArgs struct {
	// Name of the guest configuration assignment.
	GuestConfigurationAssignmentName pulumi.StringInput
	// Region where the VM is located.
	Location pulumi.StringPtrInput
	// Name of the guest configuration assignment.
	Name pulumi.StringPtrInput
	// Properties of the Guest configuration assignment.
	Properties GuestConfigurationAssignmentPropertiesPtrInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
	// The name of the virtual machine.
	VmName pulumi.StringInput
}

func (VirtualMachineProviderGuestConfigurationAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineProviderGuestConfigurationAssignmentArgs)(nil)).Elem()
}
