// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Key Vault container for a certificate that is purchased through Azure.
type AppServiceCertificate struct {
	// Key Vault resource Id.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Key Vault secret name.
	KeyVaultSecretName *string `pulumi:"keyVaultSecretName"`
}

// AppServiceCertificateInput is an input type that accepts AppServiceCertificateArgs and AppServiceCertificateOutput values.
// You can construct a concrete instance of `AppServiceCertificateInput` via:
//
//          AppServiceCertificateArgs{...}
type AppServiceCertificateInput interface {
	pulumi.Input

	ToAppServiceCertificateOutput() AppServiceCertificateOutput
	ToAppServiceCertificateOutputWithContext(context.Context) AppServiceCertificateOutput
}

// Key Vault container for a certificate that is purchased through Azure.
type AppServiceCertificateArgs struct {
	// Key Vault resource Id.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Key Vault secret name.
	KeyVaultSecretName pulumi.StringPtrInput `pulumi:"keyVaultSecretName"`
}

func (AppServiceCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceCertificate)(nil)).Elem()
}

func (i AppServiceCertificateArgs) ToAppServiceCertificateOutput() AppServiceCertificateOutput {
	return i.ToAppServiceCertificateOutputWithContext(context.Background())
}

func (i AppServiceCertificateArgs) ToAppServiceCertificateOutputWithContext(ctx context.Context) AppServiceCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateOutput)
}

// AppServiceCertificateMapInput is an input type that accepts AppServiceCertificateMap and AppServiceCertificateMapOutput values.
// You can construct a concrete instance of `AppServiceCertificateMapInput` via:
//
//          AppServiceCertificateMap{ "key": AppServiceCertificateArgs{...} }
type AppServiceCertificateMapInput interface {
	pulumi.Input

	ToAppServiceCertificateMapOutput() AppServiceCertificateMapOutput
	ToAppServiceCertificateMapOutputWithContext(context.Context) AppServiceCertificateMapOutput
}

type AppServiceCertificateMap map[string]AppServiceCertificateInput

func (AppServiceCertificateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AppServiceCertificate)(nil)).Elem()
}

func (i AppServiceCertificateMap) ToAppServiceCertificateMapOutput() AppServiceCertificateMapOutput {
	return i.ToAppServiceCertificateMapOutputWithContext(context.Background())
}

func (i AppServiceCertificateMap) ToAppServiceCertificateMapOutputWithContext(ctx context.Context) AppServiceCertificateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateMapOutput)
}

// Key Vault container for a certificate that is purchased through Azure.
type AppServiceCertificateOutput struct{ *pulumi.OutputState }

func (AppServiceCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceCertificate)(nil)).Elem()
}

func (o AppServiceCertificateOutput) ToAppServiceCertificateOutput() AppServiceCertificateOutput {
	return o
}

func (o AppServiceCertificateOutput) ToAppServiceCertificateOutputWithContext(ctx context.Context) AppServiceCertificateOutput {
	return o
}

// Key Vault resource Id.
func (o AppServiceCertificateOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceCertificate) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Key Vault secret name.
func (o AppServiceCertificateOutput) KeyVaultSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceCertificate) *string { return v.KeyVaultSecretName }).(pulumi.StringPtrOutput)
}

type AppServiceCertificateMapOutput struct{ *pulumi.OutputState }

func (AppServiceCertificateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AppServiceCertificate)(nil)).Elem()
}

func (o AppServiceCertificateMapOutput) ToAppServiceCertificateMapOutput() AppServiceCertificateMapOutput {
	return o
}

func (o AppServiceCertificateMapOutput) ToAppServiceCertificateMapOutputWithContext(ctx context.Context) AppServiceCertificateMapOutput {
	return o
}

func (o AppServiceCertificateMapOutput) MapIndex(k pulumi.StringInput) AppServiceCertificateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AppServiceCertificate {
		return vs[0].(map[string]AppServiceCertificate)[vs[1].(string)]
	}).(AppServiceCertificateOutput)
}

// SSL certificate purchase order.
type AppServiceCertificateOrderType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Location.
	Location string `pulumi:"location"`
	// Resource Name.
	Name string `pulumi:"name"`
	// AppServiceCertificateOrder resource specific properties
	Properties AppServiceCertificateOrderResponseProperties `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// AppServiceCertificateOrderTypeInput is an input type that accepts AppServiceCertificateOrderTypeArgs and AppServiceCertificateOrderTypeOutput values.
// You can construct a concrete instance of `AppServiceCertificateOrderTypeInput` via:
//
//          AppServiceCertificateOrderTypeArgs{...}
type AppServiceCertificateOrderTypeInput interface {
	pulumi.Input

	ToAppServiceCertificateOrderTypeOutput() AppServiceCertificateOrderTypeOutput
	ToAppServiceCertificateOrderTypeOutputWithContext(context.Context) AppServiceCertificateOrderTypeOutput
}

// SSL certificate purchase order.
type AppServiceCertificateOrderTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// AppServiceCertificateOrder resource specific properties
	Properties AppServiceCertificateOrderResponsePropertiesInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AppServiceCertificateOrderTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceCertificateOrderType)(nil)).Elem()
}

func (i AppServiceCertificateOrderTypeArgs) ToAppServiceCertificateOrderTypeOutput() AppServiceCertificateOrderTypeOutput {
	return i.ToAppServiceCertificateOrderTypeOutputWithContext(context.Background())
}

func (i AppServiceCertificateOrderTypeArgs) ToAppServiceCertificateOrderTypeOutputWithContext(ctx context.Context) AppServiceCertificateOrderTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateOrderTypeOutput)
}

// SSL certificate purchase order.
type AppServiceCertificateOrderTypeOutput struct{ *pulumi.OutputState }

func (AppServiceCertificateOrderTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceCertificateOrderType)(nil)).Elem()
}

func (o AppServiceCertificateOrderTypeOutput) ToAppServiceCertificateOrderTypeOutput() AppServiceCertificateOrderTypeOutput {
	return o
}

func (o AppServiceCertificateOrderTypeOutput) ToAppServiceCertificateOrderTypeOutputWithContext(ctx context.Context) AppServiceCertificateOrderTypeOutput {
	return o
}

// Kind of resource.
func (o AppServiceCertificateOrderTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location.
func (o AppServiceCertificateOrderTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name.
func (o AppServiceCertificateOrderTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderType) string { return v.Name }).(pulumi.StringOutput)
}

// AppServiceCertificateOrder resource specific properties
func (o AppServiceCertificateOrderTypeOutput) Properties() AppServiceCertificateOrderResponsePropertiesOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderType) AppServiceCertificateOrderResponseProperties {
		return v.Properties
	}).(AppServiceCertificateOrderResponsePropertiesOutput)
}

// Resource tags.
func (o AppServiceCertificateOrderTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o AppServiceCertificateOrderTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderType) string { return v.Type }).(pulumi.StringOutput)
}

// Key Vault container ARM resource for a certificate that is purchased through Azure.
type AppServiceCertificateOrderCertificateType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Location.
	Location string `pulumi:"location"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Core resource properties
	Properties AppServiceCertificateResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// AppServiceCertificateOrderCertificateTypeInput is an input type that accepts AppServiceCertificateOrderCertificateTypeArgs and AppServiceCertificateOrderCertificateTypeOutput values.
// You can construct a concrete instance of `AppServiceCertificateOrderCertificateTypeInput` via:
//
//          AppServiceCertificateOrderCertificateTypeArgs{...}
type AppServiceCertificateOrderCertificateTypeInput interface {
	pulumi.Input

	ToAppServiceCertificateOrderCertificateTypeOutput() AppServiceCertificateOrderCertificateTypeOutput
	ToAppServiceCertificateOrderCertificateTypeOutputWithContext(context.Context) AppServiceCertificateOrderCertificateTypeOutput
}

// Key Vault container ARM resource for a certificate that is purchased through Azure.
type AppServiceCertificateOrderCertificateTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// Core resource properties
	Properties AppServiceCertificateResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AppServiceCertificateOrderCertificateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceCertificateOrderCertificateType)(nil)).Elem()
}

func (i AppServiceCertificateOrderCertificateTypeArgs) ToAppServiceCertificateOrderCertificateTypeOutput() AppServiceCertificateOrderCertificateTypeOutput {
	return i.ToAppServiceCertificateOrderCertificateTypeOutputWithContext(context.Background())
}

func (i AppServiceCertificateOrderCertificateTypeArgs) ToAppServiceCertificateOrderCertificateTypeOutputWithContext(ctx context.Context) AppServiceCertificateOrderCertificateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateOrderCertificateTypeOutput)
}

// Key Vault container ARM resource for a certificate that is purchased through Azure.
type AppServiceCertificateOrderCertificateTypeOutput struct{ *pulumi.OutputState }

func (AppServiceCertificateOrderCertificateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceCertificateOrderCertificateType)(nil)).Elem()
}

func (o AppServiceCertificateOrderCertificateTypeOutput) ToAppServiceCertificateOrderCertificateTypeOutput() AppServiceCertificateOrderCertificateTypeOutput {
	return o
}

func (o AppServiceCertificateOrderCertificateTypeOutput) ToAppServiceCertificateOrderCertificateTypeOutputWithContext(ctx context.Context) AppServiceCertificateOrderCertificateTypeOutput {
	return o
}

// Kind of resource.
func (o AppServiceCertificateOrderCertificateTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderCertificateType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location.
func (o AppServiceCertificateOrderCertificateTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderCertificateType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name.
func (o AppServiceCertificateOrderCertificateTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderCertificateType) string { return v.Name }).(pulumi.StringOutput)
}

// Core resource properties
func (o AppServiceCertificateOrderCertificateTypeOutput) Properties() AppServiceCertificateResponseOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderCertificateType) AppServiceCertificateResponse { return v.Properties }).(AppServiceCertificateResponseOutput)
}

// Resource tags.
func (o AppServiceCertificateOrderCertificateTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderCertificateType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o AppServiceCertificateOrderCertificateTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderCertificateType) string { return v.Type }).(pulumi.StringOutput)
}

// AppServiceCertificateOrder resource specific properties
type AppServiceCertificateOrderResponseProperties struct {
	// Reasons why App Service Certificate is not renewable at the current moment.
	AppServiceCertificateNotRenewableReasons []string `pulumi:"appServiceCertificateNotRenewableReasons"`
	// <code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.
	AutoRenew *bool `pulumi:"autoRenew"`
	// State of the Key Vault secret.
	Certificates map[string]AppServiceCertificateResponse `pulumi:"certificates"`
	// Last CSR that was created for this order.
	Csr *string `pulumi:"csr"`
	// Certificate distinguished name.
	DistinguishedName *string `pulumi:"distinguishedName"`
	// Domain verification token.
	DomainVerificationToken string `pulumi:"domainVerificationToken"`
	// Certificate expiration time.
	ExpirationTime string `pulumi:"expirationTime"`
	// Intermediate certificate.
	Intermediate CertificateDetailsResponse `pulumi:"intermediate"`
	// <code>true</code> if private key is external; otherwise, <code>false</code>.
	IsPrivateKeyExternal bool `pulumi:"isPrivateKeyExternal"`
	// Certificate key size.
	KeySize *int `pulumi:"keySize"`
	// Certificate last issuance time.
	LastCertificateIssuanceTime string `pulumi:"lastCertificateIssuanceTime"`
	// Time stamp when the certificate would be auto renewed next
	NextAutoRenewalTimeStamp string `pulumi:"nextAutoRenewalTimeStamp"`
	// Certificate product type.
	ProductType string `pulumi:"productType"`
	// Status of certificate order.
	ProvisioningState string `pulumi:"provisioningState"`
	// Root certificate.
	Root CertificateDetailsResponse `pulumi:"root"`
	// Current serial number of the certificate.
	SerialNumber string `pulumi:"serialNumber"`
	// Signed certificate.
	SignedCertificate CertificateDetailsResponse `pulumi:"signedCertificate"`
	// Current order status.
	Status string `pulumi:"status"`
	// Duration in years (must be between 1 and 3).
	ValidityInYears *int `pulumi:"validityInYears"`
}

// AppServiceCertificateOrderResponsePropertiesInput is an input type that accepts AppServiceCertificateOrderResponsePropertiesArgs and AppServiceCertificateOrderResponsePropertiesOutput values.
// You can construct a concrete instance of `AppServiceCertificateOrderResponsePropertiesInput` via:
//
//          AppServiceCertificateOrderResponsePropertiesArgs{...}
type AppServiceCertificateOrderResponsePropertiesInput interface {
	pulumi.Input

	ToAppServiceCertificateOrderResponsePropertiesOutput() AppServiceCertificateOrderResponsePropertiesOutput
	ToAppServiceCertificateOrderResponsePropertiesOutputWithContext(context.Context) AppServiceCertificateOrderResponsePropertiesOutput
}

// AppServiceCertificateOrder resource specific properties
type AppServiceCertificateOrderResponsePropertiesArgs struct {
	// Reasons why App Service Certificate is not renewable at the current moment.
	AppServiceCertificateNotRenewableReasons pulumi.StringArrayInput `pulumi:"appServiceCertificateNotRenewableReasons"`
	// <code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.
	AutoRenew pulumi.BoolPtrInput `pulumi:"autoRenew"`
	// State of the Key Vault secret.
	Certificates AppServiceCertificateResponseMapInput `pulumi:"certificates"`
	// Last CSR that was created for this order.
	Csr pulumi.StringPtrInput `pulumi:"csr"`
	// Certificate distinguished name.
	DistinguishedName pulumi.StringPtrInput `pulumi:"distinguishedName"`
	// Domain verification token.
	DomainVerificationToken pulumi.StringInput `pulumi:"domainVerificationToken"`
	// Certificate expiration time.
	ExpirationTime pulumi.StringInput `pulumi:"expirationTime"`
	// Intermediate certificate.
	Intermediate CertificateDetailsResponseInput `pulumi:"intermediate"`
	// <code>true</code> if private key is external; otherwise, <code>false</code>.
	IsPrivateKeyExternal pulumi.BoolInput `pulumi:"isPrivateKeyExternal"`
	// Certificate key size.
	KeySize pulumi.IntPtrInput `pulumi:"keySize"`
	// Certificate last issuance time.
	LastCertificateIssuanceTime pulumi.StringInput `pulumi:"lastCertificateIssuanceTime"`
	// Time stamp when the certificate would be auto renewed next
	NextAutoRenewalTimeStamp pulumi.StringInput `pulumi:"nextAutoRenewalTimeStamp"`
	// Certificate product type.
	ProductType pulumi.StringInput `pulumi:"productType"`
	// Status of certificate order.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Root certificate.
	Root CertificateDetailsResponseInput `pulumi:"root"`
	// Current serial number of the certificate.
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// Signed certificate.
	SignedCertificate CertificateDetailsResponseInput `pulumi:"signedCertificate"`
	// Current order status.
	Status pulumi.StringInput `pulumi:"status"`
	// Duration in years (must be between 1 and 3).
	ValidityInYears pulumi.IntPtrInput `pulumi:"validityInYears"`
}

func (AppServiceCertificateOrderResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceCertificateOrderResponseProperties)(nil)).Elem()
}

func (i AppServiceCertificateOrderResponsePropertiesArgs) ToAppServiceCertificateOrderResponsePropertiesOutput() AppServiceCertificateOrderResponsePropertiesOutput {
	return i.ToAppServiceCertificateOrderResponsePropertiesOutputWithContext(context.Background())
}

func (i AppServiceCertificateOrderResponsePropertiesArgs) ToAppServiceCertificateOrderResponsePropertiesOutputWithContext(ctx context.Context) AppServiceCertificateOrderResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateOrderResponsePropertiesOutput)
}

func (i AppServiceCertificateOrderResponsePropertiesArgs) ToAppServiceCertificateOrderResponsePropertiesPtrOutput() AppServiceCertificateOrderResponsePropertiesPtrOutput {
	return i.ToAppServiceCertificateOrderResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i AppServiceCertificateOrderResponsePropertiesArgs) ToAppServiceCertificateOrderResponsePropertiesPtrOutputWithContext(ctx context.Context) AppServiceCertificateOrderResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateOrderResponsePropertiesOutput).ToAppServiceCertificateOrderResponsePropertiesPtrOutputWithContext(ctx)
}

// AppServiceCertificateOrderResponsePropertiesPtrInput is an input type that accepts AppServiceCertificateOrderResponsePropertiesArgs, AppServiceCertificateOrderResponsePropertiesPtr and AppServiceCertificateOrderResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `AppServiceCertificateOrderResponsePropertiesPtrInput` via:
//
//          AppServiceCertificateOrderResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type AppServiceCertificateOrderResponsePropertiesPtrInput interface {
	pulumi.Input

	ToAppServiceCertificateOrderResponsePropertiesPtrOutput() AppServiceCertificateOrderResponsePropertiesPtrOutput
	ToAppServiceCertificateOrderResponsePropertiesPtrOutputWithContext(context.Context) AppServiceCertificateOrderResponsePropertiesPtrOutput
}

type appServiceCertificateOrderResponsePropertiesPtrType AppServiceCertificateOrderResponsePropertiesArgs

func AppServiceCertificateOrderResponsePropertiesPtr(v *AppServiceCertificateOrderResponsePropertiesArgs) AppServiceCertificateOrderResponsePropertiesPtrInput {
	return (*appServiceCertificateOrderResponsePropertiesPtrType)(v)
}

func (*appServiceCertificateOrderResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceCertificateOrderResponseProperties)(nil)).Elem()
}

func (i *appServiceCertificateOrderResponsePropertiesPtrType) ToAppServiceCertificateOrderResponsePropertiesPtrOutput() AppServiceCertificateOrderResponsePropertiesPtrOutput {
	return i.ToAppServiceCertificateOrderResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *appServiceCertificateOrderResponsePropertiesPtrType) ToAppServiceCertificateOrderResponsePropertiesPtrOutputWithContext(ctx context.Context) AppServiceCertificateOrderResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateOrderResponsePropertiesPtrOutput)
}

// AppServiceCertificateOrder resource specific properties
type AppServiceCertificateOrderResponsePropertiesOutput struct{ *pulumi.OutputState }

func (AppServiceCertificateOrderResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceCertificateOrderResponseProperties)(nil)).Elem()
}

func (o AppServiceCertificateOrderResponsePropertiesOutput) ToAppServiceCertificateOrderResponsePropertiesOutput() AppServiceCertificateOrderResponsePropertiesOutput {
	return o
}

func (o AppServiceCertificateOrderResponsePropertiesOutput) ToAppServiceCertificateOrderResponsePropertiesOutputWithContext(ctx context.Context) AppServiceCertificateOrderResponsePropertiesOutput {
	return o
}

func (o AppServiceCertificateOrderResponsePropertiesOutput) ToAppServiceCertificateOrderResponsePropertiesPtrOutput() AppServiceCertificateOrderResponsePropertiesPtrOutput {
	return o.ToAppServiceCertificateOrderResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o AppServiceCertificateOrderResponsePropertiesOutput) ToAppServiceCertificateOrderResponsePropertiesPtrOutputWithContext(ctx context.Context) AppServiceCertificateOrderResponsePropertiesPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) *AppServiceCertificateOrderResponseProperties {
		return &v
	}).(AppServiceCertificateOrderResponsePropertiesPtrOutput)
}

// Reasons why App Service Certificate is not renewable at the current moment.
func (o AppServiceCertificateOrderResponsePropertiesOutput) AppServiceCertificateNotRenewableReasons() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) []string {
		return v.AppServiceCertificateNotRenewableReasons
	}).(pulumi.StringArrayOutput)
}

// <code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.
func (o AppServiceCertificateOrderResponsePropertiesOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) *bool { return v.AutoRenew }).(pulumi.BoolPtrOutput)
}

// State of the Key Vault secret.
func (o AppServiceCertificateOrderResponsePropertiesOutput) Certificates() AppServiceCertificateResponseMapOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) map[string]AppServiceCertificateResponse {
		return v.Certificates
	}).(AppServiceCertificateResponseMapOutput)
}

// Last CSR that was created for this order.
func (o AppServiceCertificateOrderResponsePropertiesOutput) Csr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) *string { return v.Csr }).(pulumi.StringPtrOutput)
}

// Certificate distinguished name.
func (o AppServiceCertificateOrderResponsePropertiesOutput) DistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) *string { return v.DistinguishedName }).(pulumi.StringPtrOutput)
}

// Domain verification token.
func (o AppServiceCertificateOrderResponsePropertiesOutput) DomainVerificationToken() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) string { return v.DomainVerificationToken }).(pulumi.StringOutput)
}

// Certificate expiration time.
func (o AppServiceCertificateOrderResponsePropertiesOutput) ExpirationTime() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) string { return v.ExpirationTime }).(pulumi.StringOutput)
}

// Intermediate certificate.
func (o AppServiceCertificateOrderResponsePropertiesOutput) Intermediate() CertificateDetailsResponseOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) CertificateDetailsResponse { return v.Intermediate }).(CertificateDetailsResponseOutput)
}

// <code>true</code> if private key is external; otherwise, <code>false</code>.
func (o AppServiceCertificateOrderResponsePropertiesOutput) IsPrivateKeyExternal() pulumi.BoolOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) bool { return v.IsPrivateKeyExternal }).(pulumi.BoolOutput)
}

// Certificate key size.
func (o AppServiceCertificateOrderResponsePropertiesOutput) KeySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) *int { return v.KeySize }).(pulumi.IntPtrOutput)
}

// Certificate last issuance time.
func (o AppServiceCertificateOrderResponsePropertiesOutput) LastCertificateIssuanceTime() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) string { return v.LastCertificateIssuanceTime }).(pulumi.StringOutput)
}

// Time stamp when the certificate would be auto renewed next
func (o AppServiceCertificateOrderResponsePropertiesOutput) NextAutoRenewalTimeStamp() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) string { return v.NextAutoRenewalTimeStamp }).(pulumi.StringOutput)
}

// Certificate product type.
func (o AppServiceCertificateOrderResponsePropertiesOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) string { return v.ProductType }).(pulumi.StringOutput)
}

// Status of certificate order.
func (o AppServiceCertificateOrderResponsePropertiesOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Root certificate.
func (o AppServiceCertificateOrderResponsePropertiesOutput) Root() CertificateDetailsResponseOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) CertificateDetailsResponse { return v.Root }).(CertificateDetailsResponseOutput)
}

// Current serial number of the certificate.
func (o AppServiceCertificateOrderResponsePropertiesOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// Signed certificate.
func (o AppServiceCertificateOrderResponsePropertiesOutput) SignedCertificate() CertificateDetailsResponseOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) CertificateDetailsResponse {
		return v.SignedCertificate
	}).(CertificateDetailsResponseOutput)
}

// Current order status.
func (o AppServiceCertificateOrderResponsePropertiesOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) string { return v.Status }).(pulumi.StringOutput)
}

// Duration in years (must be between 1 and 3).
func (o AppServiceCertificateOrderResponsePropertiesOutput) ValidityInYears() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) *int { return v.ValidityInYears }).(pulumi.IntPtrOutput)
}

type AppServiceCertificateOrderResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AppServiceCertificateOrderResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceCertificateOrderResponseProperties)(nil)).Elem()
}

func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) ToAppServiceCertificateOrderResponsePropertiesPtrOutput() AppServiceCertificateOrderResponsePropertiesPtrOutput {
	return o
}

func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) ToAppServiceCertificateOrderResponsePropertiesPtrOutputWithContext(ctx context.Context) AppServiceCertificateOrderResponsePropertiesPtrOutput {
	return o
}

func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) Elem() AppServiceCertificateOrderResponsePropertiesOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) AppServiceCertificateOrderResponseProperties {
		return *v
	}).(AppServiceCertificateOrderResponsePropertiesOutput)
}

// Reasons why App Service Certificate is not renewable at the current moment.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) AppServiceCertificateNotRenewableReasons() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) []string {
		if v == nil {
			return nil
		}
		return v.AppServiceCertificateNotRenewableReasons
	}).(pulumi.StringArrayOutput)
}

// <code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AutoRenew
	}).(pulumi.BoolPtrOutput)
}

// State of the Key Vault secret.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) Certificates() AppServiceCertificateResponseMapOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) map[string]AppServiceCertificateResponse {
		if v == nil {
			return nil
		}
		return v.Certificates
	}).(AppServiceCertificateResponseMapOutput)
}

// Last CSR that was created for this order.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) Csr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Csr
	}).(pulumi.StringPtrOutput)
}

// Certificate distinguished name.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) DistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DistinguishedName
	}).(pulumi.StringPtrOutput)
}

// Domain verification token.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) DomainVerificationToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DomainVerificationToken
	}).(pulumi.StringPtrOutput)
}

// Certificate expiration time.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) ExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ExpirationTime
	}).(pulumi.StringPtrOutput)
}

// Intermediate certificate.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) Intermediate() CertificateDetailsResponsePtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *CertificateDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.Intermediate
	}).(CertificateDetailsResponsePtrOutput)
}

// <code>true</code> if private key is external; otherwise, <code>false</code>.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) IsPrivateKeyExternal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.IsPrivateKeyExternal
	}).(pulumi.BoolPtrOutput)
}

// Certificate key size.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) KeySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.KeySize
	}).(pulumi.IntPtrOutput)
}

// Certificate last issuance time.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) LastCertificateIssuanceTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.LastCertificateIssuanceTime
	}).(pulumi.StringPtrOutput)
}

// Time stamp when the certificate would be auto renewed next
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) NextAutoRenewalTimeStamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.NextAutoRenewalTimeStamp
	}).(pulumi.StringPtrOutput)
}

// Certificate product type.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) ProductType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ProductType
	}).(pulumi.StringPtrOutput)
}

// Status of certificate order.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Root certificate.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) Root() CertificateDetailsResponsePtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *CertificateDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.Root
	}).(CertificateDetailsResponsePtrOutput)
}

// Current serial number of the certificate.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SerialNumber
	}).(pulumi.StringPtrOutput)
}

// Signed certificate.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) SignedCertificate() CertificateDetailsResponsePtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *CertificateDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.SignedCertificate
	}).(CertificateDetailsResponsePtrOutput)
}

// Current order status.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// Duration in years (must be between 1 and 3).
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) ValidityInYears() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.ValidityInYears
	}).(pulumi.IntPtrOutput)
}

// Key Vault container for a certificate that is purchased through Azure.
type AppServiceCertificateResponse struct {
	// Key Vault resource Id.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Key Vault secret name.
	KeyVaultSecretName *string `pulumi:"keyVaultSecretName"`
	// Status of the Key Vault secret.
	ProvisioningState string `pulumi:"provisioningState"`
}

// AppServiceCertificateResponseInput is an input type that accepts AppServiceCertificateResponseArgs and AppServiceCertificateResponseOutput values.
// You can construct a concrete instance of `AppServiceCertificateResponseInput` via:
//
//          AppServiceCertificateResponseArgs{...}
type AppServiceCertificateResponseInput interface {
	pulumi.Input

	ToAppServiceCertificateResponseOutput() AppServiceCertificateResponseOutput
	ToAppServiceCertificateResponseOutputWithContext(context.Context) AppServiceCertificateResponseOutput
}

// Key Vault container for a certificate that is purchased through Azure.
type AppServiceCertificateResponseArgs struct {
	// Key Vault resource Id.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Key Vault secret name.
	KeyVaultSecretName pulumi.StringPtrInput `pulumi:"keyVaultSecretName"`
	// Status of the Key Vault secret.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (AppServiceCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceCertificateResponse)(nil)).Elem()
}

func (i AppServiceCertificateResponseArgs) ToAppServiceCertificateResponseOutput() AppServiceCertificateResponseOutput {
	return i.ToAppServiceCertificateResponseOutputWithContext(context.Background())
}

func (i AppServiceCertificateResponseArgs) ToAppServiceCertificateResponseOutputWithContext(ctx context.Context) AppServiceCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateResponseOutput)
}

func (i AppServiceCertificateResponseArgs) ToAppServiceCertificateResponsePtrOutput() AppServiceCertificateResponsePtrOutput {
	return i.ToAppServiceCertificateResponsePtrOutputWithContext(context.Background())
}

func (i AppServiceCertificateResponseArgs) ToAppServiceCertificateResponsePtrOutputWithContext(ctx context.Context) AppServiceCertificateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateResponseOutput).ToAppServiceCertificateResponsePtrOutputWithContext(ctx)
}

// AppServiceCertificateResponsePtrInput is an input type that accepts AppServiceCertificateResponseArgs, AppServiceCertificateResponsePtr and AppServiceCertificateResponsePtrOutput values.
// You can construct a concrete instance of `AppServiceCertificateResponsePtrInput` via:
//
//          AppServiceCertificateResponseArgs{...}
//
//  or:
//
//          nil
type AppServiceCertificateResponsePtrInput interface {
	pulumi.Input

	ToAppServiceCertificateResponsePtrOutput() AppServiceCertificateResponsePtrOutput
	ToAppServiceCertificateResponsePtrOutputWithContext(context.Context) AppServiceCertificateResponsePtrOutput
}

type appServiceCertificateResponsePtrType AppServiceCertificateResponseArgs

func AppServiceCertificateResponsePtr(v *AppServiceCertificateResponseArgs) AppServiceCertificateResponsePtrInput {
	return (*appServiceCertificateResponsePtrType)(v)
}

func (*appServiceCertificateResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceCertificateResponse)(nil)).Elem()
}

func (i *appServiceCertificateResponsePtrType) ToAppServiceCertificateResponsePtrOutput() AppServiceCertificateResponsePtrOutput {
	return i.ToAppServiceCertificateResponsePtrOutputWithContext(context.Background())
}

func (i *appServiceCertificateResponsePtrType) ToAppServiceCertificateResponsePtrOutputWithContext(ctx context.Context) AppServiceCertificateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateResponsePtrOutput)
}

// AppServiceCertificateResponseMapInput is an input type that accepts AppServiceCertificateResponseMap and AppServiceCertificateResponseMapOutput values.
// You can construct a concrete instance of `AppServiceCertificateResponseMapInput` via:
//
//          AppServiceCertificateResponseMap{ "key": AppServiceCertificateResponseArgs{...} }
type AppServiceCertificateResponseMapInput interface {
	pulumi.Input

	ToAppServiceCertificateResponseMapOutput() AppServiceCertificateResponseMapOutput
	ToAppServiceCertificateResponseMapOutputWithContext(context.Context) AppServiceCertificateResponseMapOutput
}

type AppServiceCertificateResponseMap map[string]AppServiceCertificateResponseInput

func (AppServiceCertificateResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AppServiceCertificateResponse)(nil)).Elem()
}

func (i AppServiceCertificateResponseMap) ToAppServiceCertificateResponseMapOutput() AppServiceCertificateResponseMapOutput {
	return i.ToAppServiceCertificateResponseMapOutputWithContext(context.Background())
}

func (i AppServiceCertificateResponseMap) ToAppServiceCertificateResponseMapOutputWithContext(ctx context.Context) AppServiceCertificateResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateResponseMapOutput)
}

// Key Vault container for a certificate that is purchased through Azure.
type AppServiceCertificateResponseOutput struct{ *pulumi.OutputState }

func (AppServiceCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceCertificateResponse)(nil)).Elem()
}

func (o AppServiceCertificateResponseOutput) ToAppServiceCertificateResponseOutput() AppServiceCertificateResponseOutput {
	return o
}

func (o AppServiceCertificateResponseOutput) ToAppServiceCertificateResponseOutputWithContext(ctx context.Context) AppServiceCertificateResponseOutput {
	return o
}

func (o AppServiceCertificateResponseOutput) ToAppServiceCertificateResponsePtrOutput() AppServiceCertificateResponsePtrOutput {
	return o.ToAppServiceCertificateResponsePtrOutputWithContext(context.Background())
}

func (o AppServiceCertificateResponseOutput) ToAppServiceCertificateResponsePtrOutputWithContext(ctx context.Context) AppServiceCertificateResponsePtrOutput {
	return o.ApplyT(func(v AppServiceCertificateResponse) *AppServiceCertificateResponse {
		return &v
	}).(AppServiceCertificateResponsePtrOutput)
}

// Key Vault resource Id.
func (o AppServiceCertificateResponseOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateResponse) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Key Vault secret name.
func (o AppServiceCertificateResponseOutput) KeyVaultSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateResponse) *string { return v.KeyVaultSecretName }).(pulumi.StringPtrOutput)
}

// Status of the Key Vault secret.
func (o AppServiceCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type AppServiceCertificateResponsePtrOutput struct{ *pulumi.OutputState }

func (AppServiceCertificateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceCertificateResponse)(nil)).Elem()
}

func (o AppServiceCertificateResponsePtrOutput) ToAppServiceCertificateResponsePtrOutput() AppServiceCertificateResponsePtrOutput {
	return o
}

func (o AppServiceCertificateResponsePtrOutput) ToAppServiceCertificateResponsePtrOutputWithContext(ctx context.Context) AppServiceCertificateResponsePtrOutput {
	return o
}

func (o AppServiceCertificateResponsePtrOutput) Elem() AppServiceCertificateResponseOutput {
	return o.ApplyT(func(v *AppServiceCertificateResponse) AppServiceCertificateResponse { return *v }).(AppServiceCertificateResponseOutput)
}

// Key Vault resource Id.
func (o AppServiceCertificateResponsePtrOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultId
	}).(pulumi.StringPtrOutput)
}

// Key Vault secret name.
func (o AppServiceCertificateResponsePtrOutput) KeyVaultSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultSecretName
	}).(pulumi.StringPtrOutput)
}

// Status of the Key Vault secret.
func (o AppServiceCertificateResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

type AppServiceCertificateResponseMapOutput struct{ *pulumi.OutputState }

func (AppServiceCertificateResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AppServiceCertificateResponse)(nil)).Elem()
}

func (o AppServiceCertificateResponseMapOutput) ToAppServiceCertificateResponseMapOutput() AppServiceCertificateResponseMapOutput {
	return o
}

func (o AppServiceCertificateResponseMapOutput) ToAppServiceCertificateResponseMapOutputWithContext(ctx context.Context) AppServiceCertificateResponseMapOutput {
	return o
}

func (o AppServiceCertificateResponseMapOutput) MapIndex(k pulumi.StringInput) AppServiceCertificateResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AppServiceCertificateResponse {
		return vs[0].(map[string]AppServiceCertificateResponse)[vs[1].(string)]
	}).(AppServiceCertificateResponseOutput)
}

// SSL certificate details.
type CertificateDetails struct {
}

// CertificateDetailsInput is an input type that accepts CertificateDetailsArgs and CertificateDetailsOutput values.
// You can construct a concrete instance of `CertificateDetailsInput` via:
//
//          CertificateDetailsArgs{...}
type CertificateDetailsInput interface {
	pulumi.Input

	ToCertificateDetailsOutput() CertificateDetailsOutput
	ToCertificateDetailsOutputWithContext(context.Context) CertificateDetailsOutput
}

// SSL certificate details.
type CertificateDetailsArgs struct {
}

func (CertificateDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDetails)(nil)).Elem()
}

func (i CertificateDetailsArgs) ToCertificateDetailsOutput() CertificateDetailsOutput {
	return i.ToCertificateDetailsOutputWithContext(context.Background())
}

func (i CertificateDetailsArgs) ToCertificateDetailsOutputWithContext(ctx context.Context) CertificateDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDetailsOutput)
}

// SSL certificate details.
type CertificateDetailsOutput struct{ *pulumi.OutputState }

func (CertificateDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDetails)(nil)).Elem()
}

func (o CertificateDetailsOutput) ToCertificateDetailsOutput() CertificateDetailsOutput {
	return o
}

func (o CertificateDetailsOutput) ToCertificateDetailsOutputWithContext(ctx context.Context) CertificateDetailsOutput {
	return o
}

// SSL certificate details.
type CertificateDetailsResponse struct {
	// Certificate Issuer.
	Issuer string `pulumi:"issuer"`
	// Date Certificate is valid to.
	NotAfter string `pulumi:"notAfter"`
	// Date Certificate is valid from.
	NotBefore string `pulumi:"notBefore"`
	// Raw certificate data.
	RawData string `pulumi:"rawData"`
	// Certificate Serial Number.
	SerialNumber string `pulumi:"serialNumber"`
	// Certificate Signature algorithm.
	SignatureAlgorithm string `pulumi:"signatureAlgorithm"`
	// Certificate Subject.
	Subject string `pulumi:"subject"`
	// Certificate Thumbprint.
	Thumbprint string `pulumi:"thumbprint"`
	// Certificate Version.
	Version int `pulumi:"version"`
}

// CertificateDetailsResponseInput is an input type that accepts CertificateDetailsResponseArgs and CertificateDetailsResponseOutput values.
// You can construct a concrete instance of `CertificateDetailsResponseInput` via:
//
//          CertificateDetailsResponseArgs{...}
type CertificateDetailsResponseInput interface {
	pulumi.Input

	ToCertificateDetailsResponseOutput() CertificateDetailsResponseOutput
	ToCertificateDetailsResponseOutputWithContext(context.Context) CertificateDetailsResponseOutput
}

// SSL certificate details.
type CertificateDetailsResponseArgs struct {
	// Certificate Issuer.
	Issuer pulumi.StringInput `pulumi:"issuer"`
	// Date Certificate is valid to.
	NotAfter pulumi.StringInput `pulumi:"notAfter"`
	// Date Certificate is valid from.
	NotBefore pulumi.StringInput `pulumi:"notBefore"`
	// Raw certificate data.
	RawData pulumi.StringInput `pulumi:"rawData"`
	// Certificate Serial Number.
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// Certificate Signature algorithm.
	SignatureAlgorithm pulumi.StringInput `pulumi:"signatureAlgorithm"`
	// Certificate Subject.
	Subject pulumi.StringInput `pulumi:"subject"`
	// Certificate Thumbprint.
	Thumbprint pulumi.StringInput `pulumi:"thumbprint"`
	// Certificate Version.
	Version pulumi.IntInput `pulumi:"version"`
}

func (CertificateDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDetailsResponse)(nil)).Elem()
}

func (i CertificateDetailsResponseArgs) ToCertificateDetailsResponseOutput() CertificateDetailsResponseOutput {
	return i.ToCertificateDetailsResponseOutputWithContext(context.Background())
}

func (i CertificateDetailsResponseArgs) ToCertificateDetailsResponseOutputWithContext(ctx context.Context) CertificateDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDetailsResponseOutput)
}

func (i CertificateDetailsResponseArgs) ToCertificateDetailsResponsePtrOutput() CertificateDetailsResponsePtrOutput {
	return i.ToCertificateDetailsResponsePtrOutputWithContext(context.Background())
}

func (i CertificateDetailsResponseArgs) ToCertificateDetailsResponsePtrOutputWithContext(ctx context.Context) CertificateDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDetailsResponseOutput).ToCertificateDetailsResponsePtrOutputWithContext(ctx)
}

// CertificateDetailsResponsePtrInput is an input type that accepts CertificateDetailsResponseArgs, CertificateDetailsResponsePtr and CertificateDetailsResponsePtrOutput values.
// You can construct a concrete instance of `CertificateDetailsResponsePtrInput` via:
//
//          CertificateDetailsResponseArgs{...}
//
//  or:
//
//          nil
type CertificateDetailsResponsePtrInput interface {
	pulumi.Input

	ToCertificateDetailsResponsePtrOutput() CertificateDetailsResponsePtrOutput
	ToCertificateDetailsResponsePtrOutputWithContext(context.Context) CertificateDetailsResponsePtrOutput
}

type certificateDetailsResponsePtrType CertificateDetailsResponseArgs

func CertificateDetailsResponsePtr(v *CertificateDetailsResponseArgs) CertificateDetailsResponsePtrInput {
	return (*certificateDetailsResponsePtrType)(v)
}

func (*certificateDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateDetailsResponse)(nil)).Elem()
}

func (i *certificateDetailsResponsePtrType) ToCertificateDetailsResponsePtrOutput() CertificateDetailsResponsePtrOutput {
	return i.ToCertificateDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *certificateDetailsResponsePtrType) ToCertificateDetailsResponsePtrOutputWithContext(ctx context.Context) CertificateDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDetailsResponsePtrOutput)
}

// SSL certificate details.
type CertificateDetailsResponseOutput struct{ *pulumi.OutputState }

func (CertificateDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDetailsResponse)(nil)).Elem()
}

func (o CertificateDetailsResponseOutput) ToCertificateDetailsResponseOutput() CertificateDetailsResponseOutput {
	return o
}

func (o CertificateDetailsResponseOutput) ToCertificateDetailsResponseOutputWithContext(ctx context.Context) CertificateDetailsResponseOutput {
	return o
}

func (o CertificateDetailsResponseOutput) ToCertificateDetailsResponsePtrOutput() CertificateDetailsResponsePtrOutput {
	return o.ToCertificateDetailsResponsePtrOutputWithContext(context.Background())
}

func (o CertificateDetailsResponseOutput) ToCertificateDetailsResponsePtrOutputWithContext(ctx context.Context) CertificateDetailsResponsePtrOutput {
	return o.ApplyT(func(v CertificateDetailsResponse) *CertificateDetailsResponse {
		return &v
	}).(CertificateDetailsResponsePtrOutput)
}

// Certificate Issuer.
func (o CertificateDetailsResponseOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDetailsResponse) string { return v.Issuer }).(pulumi.StringOutput)
}

// Date Certificate is valid to.
func (o CertificateDetailsResponseOutput) NotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDetailsResponse) string { return v.NotAfter }).(pulumi.StringOutput)
}

// Date Certificate is valid from.
func (o CertificateDetailsResponseOutput) NotBefore() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDetailsResponse) string { return v.NotBefore }).(pulumi.StringOutput)
}

// Raw certificate data.
func (o CertificateDetailsResponseOutput) RawData() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDetailsResponse) string { return v.RawData }).(pulumi.StringOutput)
}

// Certificate Serial Number.
func (o CertificateDetailsResponseOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDetailsResponse) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// Certificate Signature algorithm.
func (o CertificateDetailsResponseOutput) SignatureAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDetailsResponse) string { return v.SignatureAlgorithm }).(pulumi.StringOutput)
}

// Certificate Subject.
func (o CertificateDetailsResponseOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDetailsResponse) string { return v.Subject }).(pulumi.StringOutput)
}

// Certificate Thumbprint.
func (o CertificateDetailsResponseOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDetailsResponse) string { return v.Thumbprint }).(pulumi.StringOutput)
}

// Certificate Version.
func (o CertificateDetailsResponseOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v CertificateDetailsResponse) int { return v.Version }).(pulumi.IntOutput)
}

type CertificateDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (CertificateDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateDetailsResponse)(nil)).Elem()
}

func (o CertificateDetailsResponsePtrOutput) ToCertificateDetailsResponsePtrOutput() CertificateDetailsResponsePtrOutput {
	return o
}

func (o CertificateDetailsResponsePtrOutput) ToCertificateDetailsResponsePtrOutputWithContext(ctx context.Context) CertificateDetailsResponsePtrOutput {
	return o
}

func (o CertificateDetailsResponsePtrOutput) Elem() CertificateDetailsResponseOutput {
	return o.ApplyT(func(v *CertificateDetailsResponse) CertificateDetailsResponse { return *v }).(CertificateDetailsResponseOutput)
}

// Certificate Issuer.
func (o CertificateDetailsResponsePtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Issuer
	}).(pulumi.StringPtrOutput)
}

// Date Certificate is valid to.
func (o CertificateDetailsResponsePtrOutput) NotAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.NotAfter
	}).(pulumi.StringPtrOutput)
}

// Date Certificate is valid from.
func (o CertificateDetailsResponsePtrOutput) NotBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.NotBefore
	}).(pulumi.StringPtrOutput)
}

// Raw certificate data.
func (o CertificateDetailsResponsePtrOutput) RawData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RawData
	}).(pulumi.StringPtrOutput)
}

// Certificate Serial Number.
func (o CertificateDetailsResponsePtrOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SerialNumber
	}).(pulumi.StringPtrOutput)
}

// Certificate Signature algorithm.
func (o CertificateDetailsResponsePtrOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SignatureAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Certificate Subject.
func (o CertificateDetailsResponsePtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// Certificate Thumbprint.
func (o CertificateDetailsResponsePtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// Certificate Version.
func (o CertificateDetailsResponsePtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AppServiceCertificateOutput{})
	pulumi.RegisterOutputType(AppServiceCertificateMapOutput{})
	pulumi.RegisterOutputType(AppServiceCertificateOrderTypeOutput{})
	pulumi.RegisterOutputType(AppServiceCertificateOrderCertificateTypeOutput{})
	pulumi.RegisterOutputType(AppServiceCertificateOrderResponsePropertiesOutput{})
	pulumi.RegisterOutputType(AppServiceCertificateOrderResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AppServiceCertificateResponseOutput{})
	pulumi.RegisterOutputType(AppServiceCertificateResponsePtrOutput{})
	pulumi.RegisterOutputType(AppServiceCertificateResponseMapOutput{})
	pulumi.RegisterOutputType(CertificateDetailsOutput{})
	pulumi.RegisterOutputType(CertificateDetailsResponseOutput{})
	pulumi.RegisterOutputType(CertificateDetailsResponsePtrOutput{})
}
