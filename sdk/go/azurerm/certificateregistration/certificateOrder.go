// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package certificateregistration

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// SSL certificate purchase order.
type CertificateOrder struct {
	pulumi.CustomResourceState

	// Kind of resource.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Resource Location.
	Location pulumi.StringOutput `pulumi:"location"`
	// Resource Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// AppServiceCertificateOrder resource specific properties
	Properties AppServiceCertificateOrderResponsePropertiesOutput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewCertificateOrder registers a new resource with the given unique name, arguments, and options.
func NewCertificateOrder(ctx *pulumi.Context,
	name string, args *CertificateOrderArgs, opts ...pulumi.ResourceOption) (*CertificateOrder, error) {
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &CertificateOrderArgs{}
	}
	var resource CertificateOrder
	err := ctx.RegisterResource("azurerm:certificateregistration:CertificateOrder", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCertificateOrder gets an existing CertificateOrder resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCertificateOrder(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CertificateOrderState, opts ...pulumi.ResourceOption) (*CertificateOrder, error) {
	var resource CertificateOrder
	err := ctx.ReadResource("azurerm:certificateregistration:CertificateOrder", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CertificateOrder resources.
type certificateOrderState struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Location.
	Location *string `pulumi:"location"`
	// Resource Name.
	Name *string `pulumi:"name"`
	// AppServiceCertificateOrder resource specific properties
	Properties *AppServiceCertificateOrderResponseProperties `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type CertificateOrderState struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Resource Location.
	Location pulumi.StringPtrInput
	// Resource Name.
	Name pulumi.StringPtrInput
	// AppServiceCertificateOrder resource specific properties
	Properties AppServiceCertificateOrderResponsePropertiesPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (CertificateOrderState) ElementType() reflect.Type {
	return reflect.TypeOf((*certificateOrderState)(nil)).Elem()
}

type certificateOrderArgs struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Location.
	Location string `pulumi:"location"`
	// Name of the certificate order.
	Name string `pulumi:"name"`
	// AppServiceCertificateOrder resource specific properties
	Properties *AppServiceCertificateOrderProperties `pulumi:"properties"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a CertificateOrder resource.
type CertificateOrderArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Resource Location.
	Location pulumi.StringInput
	// Name of the certificate order.
	Name pulumi.StringInput
	// AppServiceCertificateOrder resource specific properties
	Properties AppServiceCertificateOrderPropertiesPtrInput
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (CertificateOrderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*certificateOrderArgs)(nil)).Elem()
}
