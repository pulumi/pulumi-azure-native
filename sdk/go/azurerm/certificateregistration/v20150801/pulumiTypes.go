// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20150801

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Key Vault container for a certificate that is purchased through Azure.
type AppServiceCertificate struct {
	// Key Vault resource Id.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Key Vault secret name.
	KeyVaultSecretName *string `pulumi:"keyVaultSecretName"`
}

// AppServiceCertificateInput is an input type that accepts AppServiceCertificateArgs and AppServiceCertificateOutput values.
// You can construct a concrete instance of `AppServiceCertificateInput` via:
//
//          AppServiceCertificateArgs{...}
type AppServiceCertificateInput interface {
	pulumi.Input

	ToAppServiceCertificateOutput() AppServiceCertificateOutput
	ToAppServiceCertificateOutputWithContext(context.Context) AppServiceCertificateOutput
}

// Key Vault container for a certificate that is purchased through Azure.
type AppServiceCertificateArgs struct {
	// Key Vault resource Id.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Key Vault secret name.
	KeyVaultSecretName pulumi.StringPtrInput `pulumi:"keyVaultSecretName"`
}

func (AppServiceCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceCertificate)(nil)).Elem()
}

func (i AppServiceCertificateArgs) ToAppServiceCertificateOutput() AppServiceCertificateOutput {
	return i.ToAppServiceCertificateOutputWithContext(context.Background())
}

func (i AppServiceCertificateArgs) ToAppServiceCertificateOutputWithContext(ctx context.Context) AppServiceCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateOutput)
}

func (i AppServiceCertificateArgs) ToAppServiceCertificatePtrOutput() AppServiceCertificatePtrOutput {
	return i.ToAppServiceCertificatePtrOutputWithContext(context.Background())
}

func (i AppServiceCertificateArgs) ToAppServiceCertificatePtrOutputWithContext(ctx context.Context) AppServiceCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateOutput).ToAppServiceCertificatePtrOutputWithContext(ctx)
}

// AppServiceCertificatePtrInput is an input type that accepts AppServiceCertificateArgs, AppServiceCertificatePtr and AppServiceCertificatePtrOutput values.
// You can construct a concrete instance of `AppServiceCertificatePtrInput` via:
//
//          AppServiceCertificateArgs{...}
//
//  or:
//
//          nil
type AppServiceCertificatePtrInput interface {
	pulumi.Input

	ToAppServiceCertificatePtrOutput() AppServiceCertificatePtrOutput
	ToAppServiceCertificatePtrOutputWithContext(context.Context) AppServiceCertificatePtrOutput
}

type appServiceCertificatePtrType AppServiceCertificateArgs

func AppServiceCertificatePtr(v *AppServiceCertificateArgs) AppServiceCertificatePtrInput {
	return (*appServiceCertificatePtrType)(v)
}

func (*appServiceCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceCertificate)(nil)).Elem()
}

func (i *appServiceCertificatePtrType) ToAppServiceCertificatePtrOutput() AppServiceCertificatePtrOutput {
	return i.ToAppServiceCertificatePtrOutputWithContext(context.Background())
}

func (i *appServiceCertificatePtrType) ToAppServiceCertificatePtrOutputWithContext(ctx context.Context) AppServiceCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificatePtrOutput)
}

// Key Vault container for a certificate that is purchased through Azure.
type AppServiceCertificateOutput struct{ *pulumi.OutputState }

func (AppServiceCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceCertificate)(nil)).Elem()
}

func (o AppServiceCertificateOutput) ToAppServiceCertificateOutput() AppServiceCertificateOutput {
	return o
}

func (o AppServiceCertificateOutput) ToAppServiceCertificateOutputWithContext(ctx context.Context) AppServiceCertificateOutput {
	return o
}

func (o AppServiceCertificateOutput) ToAppServiceCertificatePtrOutput() AppServiceCertificatePtrOutput {
	return o.ToAppServiceCertificatePtrOutputWithContext(context.Background())
}

func (o AppServiceCertificateOutput) ToAppServiceCertificatePtrOutputWithContext(ctx context.Context) AppServiceCertificatePtrOutput {
	return o.ApplyT(func(v AppServiceCertificate) *AppServiceCertificate {
		return &v
	}).(AppServiceCertificatePtrOutput)
}

// Key Vault resource Id.
func (o AppServiceCertificateOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceCertificate) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Key Vault secret name.
func (o AppServiceCertificateOutput) KeyVaultSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceCertificate) *string { return v.KeyVaultSecretName }).(pulumi.StringPtrOutput)
}

type AppServiceCertificatePtrOutput struct{ *pulumi.OutputState }

func (AppServiceCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceCertificate)(nil)).Elem()
}

func (o AppServiceCertificatePtrOutput) ToAppServiceCertificatePtrOutput() AppServiceCertificatePtrOutput {
	return o
}

func (o AppServiceCertificatePtrOutput) ToAppServiceCertificatePtrOutputWithContext(ctx context.Context) AppServiceCertificatePtrOutput {
	return o
}

func (o AppServiceCertificatePtrOutput) Elem() AppServiceCertificateOutput {
	return o.ApplyT(func(v *AppServiceCertificate) AppServiceCertificate { return *v }).(AppServiceCertificateOutput)
}

// Key Vault resource Id.
func (o AppServiceCertificatePtrOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificate) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultId
	}).(pulumi.StringPtrOutput)
}

// Key Vault secret name.
func (o AppServiceCertificatePtrOutput) KeyVaultSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificate) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultSecretName
	}).(pulumi.StringPtrOutput)
}

// SSL certificate purchase order.
type AppServiceCertificateOrderType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Location.
	Location string `pulumi:"location"`
	// Resource Name.
	Name string `pulumi:"name"`
	// AppServiceCertificateOrder resource specific properties
	Properties AppServiceCertificateOrderResponseProperties `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// AppServiceCertificateOrderTypeInput is an input type that accepts AppServiceCertificateOrderTypeArgs and AppServiceCertificateOrderTypeOutput values.
// You can construct a concrete instance of `AppServiceCertificateOrderTypeInput` via:
//
//          AppServiceCertificateOrderTypeArgs{...}
type AppServiceCertificateOrderTypeInput interface {
	pulumi.Input

	ToAppServiceCertificateOrderTypeOutput() AppServiceCertificateOrderTypeOutput
	ToAppServiceCertificateOrderTypeOutputWithContext(context.Context) AppServiceCertificateOrderTypeOutput
}

// SSL certificate purchase order.
type AppServiceCertificateOrderTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// AppServiceCertificateOrder resource specific properties
	Properties AppServiceCertificateOrderResponsePropertiesInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AppServiceCertificateOrderTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceCertificateOrderType)(nil)).Elem()
}

func (i AppServiceCertificateOrderTypeArgs) ToAppServiceCertificateOrderTypeOutput() AppServiceCertificateOrderTypeOutput {
	return i.ToAppServiceCertificateOrderTypeOutputWithContext(context.Background())
}

func (i AppServiceCertificateOrderTypeArgs) ToAppServiceCertificateOrderTypeOutputWithContext(ctx context.Context) AppServiceCertificateOrderTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateOrderTypeOutput)
}

// SSL certificate purchase order.
type AppServiceCertificateOrderTypeOutput struct{ *pulumi.OutputState }

func (AppServiceCertificateOrderTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceCertificateOrderType)(nil)).Elem()
}

func (o AppServiceCertificateOrderTypeOutput) ToAppServiceCertificateOrderTypeOutput() AppServiceCertificateOrderTypeOutput {
	return o
}

func (o AppServiceCertificateOrderTypeOutput) ToAppServiceCertificateOrderTypeOutputWithContext(ctx context.Context) AppServiceCertificateOrderTypeOutput {
	return o
}

// Kind of resource.
func (o AppServiceCertificateOrderTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location.
func (o AppServiceCertificateOrderTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name.
func (o AppServiceCertificateOrderTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderType) string { return v.Name }).(pulumi.StringOutput)
}

// AppServiceCertificateOrder resource specific properties
func (o AppServiceCertificateOrderTypeOutput) Properties() AppServiceCertificateOrderResponsePropertiesOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderType) AppServiceCertificateOrderResponseProperties {
		return v.Properties
	}).(AppServiceCertificateOrderResponsePropertiesOutput)
}

// Resource tags.
func (o AppServiceCertificateOrderTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o AppServiceCertificateOrderTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderType) string { return v.Type }).(pulumi.StringOutput)
}

// Key Vault container ARM resource for a certificate that is purchased through Azure.
type AppServiceCertificateOrderCertificateType struct {
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Location.
	Location string `pulumi:"location"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Core resource properties
	Properties AppServiceCertificateResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// AppServiceCertificateOrderCertificateTypeInput is an input type that accepts AppServiceCertificateOrderCertificateTypeArgs and AppServiceCertificateOrderCertificateTypeOutput values.
// You can construct a concrete instance of `AppServiceCertificateOrderCertificateTypeInput` via:
//
//          AppServiceCertificateOrderCertificateTypeArgs{...}
type AppServiceCertificateOrderCertificateTypeInput interface {
	pulumi.Input

	ToAppServiceCertificateOrderCertificateTypeOutput() AppServiceCertificateOrderCertificateTypeOutput
	ToAppServiceCertificateOrderCertificateTypeOutputWithContext(context.Context) AppServiceCertificateOrderCertificateTypeOutput
}

// Key Vault container ARM resource for a certificate that is purchased through Azure.
type AppServiceCertificateOrderCertificateTypeArgs struct {
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// Core resource properties
	Properties AppServiceCertificateResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AppServiceCertificateOrderCertificateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceCertificateOrderCertificateType)(nil)).Elem()
}

func (i AppServiceCertificateOrderCertificateTypeArgs) ToAppServiceCertificateOrderCertificateTypeOutput() AppServiceCertificateOrderCertificateTypeOutput {
	return i.ToAppServiceCertificateOrderCertificateTypeOutputWithContext(context.Background())
}

func (i AppServiceCertificateOrderCertificateTypeArgs) ToAppServiceCertificateOrderCertificateTypeOutputWithContext(ctx context.Context) AppServiceCertificateOrderCertificateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateOrderCertificateTypeOutput)
}

// Key Vault container ARM resource for a certificate that is purchased through Azure.
type AppServiceCertificateOrderCertificateTypeOutput struct{ *pulumi.OutputState }

func (AppServiceCertificateOrderCertificateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceCertificateOrderCertificateType)(nil)).Elem()
}

func (o AppServiceCertificateOrderCertificateTypeOutput) ToAppServiceCertificateOrderCertificateTypeOutput() AppServiceCertificateOrderCertificateTypeOutput {
	return o
}

func (o AppServiceCertificateOrderCertificateTypeOutput) ToAppServiceCertificateOrderCertificateTypeOutputWithContext(ctx context.Context) AppServiceCertificateOrderCertificateTypeOutput {
	return o
}

// Kind of resource.
func (o AppServiceCertificateOrderCertificateTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderCertificateType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location.
func (o AppServiceCertificateOrderCertificateTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderCertificateType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name.
func (o AppServiceCertificateOrderCertificateTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderCertificateType) string { return v.Name }).(pulumi.StringOutput)
}

// Core resource properties
func (o AppServiceCertificateOrderCertificateTypeOutput) Properties() AppServiceCertificateResponseOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderCertificateType) AppServiceCertificateResponse { return v.Properties }).(AppServiceCertificateResponseOutput)
}

// Resource tags.
func (o AppServiceCertificateOrderCertificateTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderCertificateType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o AppServiceCertificateOrderCertificateTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderCertificateType) string { return v.Type }).(pulumi.StringOutput)
}

// AppServiceCertificateOrder resource specific properties
type AppServiceCertificateOrderProperties struct {
	// <code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.
	AutoRenew *bool `pulumi:"autoRenew"`
	// State of the Key Vault secret.
	Certificates map[string]string `pulumi:"certificates"`
	// Last CSR that was created for this order.
	Csr *string `pulumi:"csr"`
	// Certificate distinguished name.
	DistinguishedName *string `pulumi:"distinguishedName"`
	// Certificate key size.
	KeySize *int `pulumi:"keySize"`
	// Certificate product type.
	ProductType string `pulumi:"productType"`
	// Duration in years (must be between 1 and 3).
	ValidityInYears *int `pulumi:"validityInYears"`
}

// AppServiceCertificateOrderPropertiesInput is an input type that accepts AppServiceCertificateOrderPropertiesArgs and AppServiceCertificateOrderPropertiesOutput values.
// You can construct a concrete instance of `AppServiceCertificateOrderPropertiesInput` via:
//
//          AppServiceCertificateOrderPropertiesArgs{...}
type AppServiceCertificateOrderPropertiesInput interface {
	pulumi.Input

	ToAppServiceCertificateOrderPropertiesOutput() AppServiceCertificateOrderPropertiesOutput
	ToAppServiceCertificateOrderPropertiesOutputWithContext(context.Context) AppServiceCertificateOrderPropertiesOutput
}

// AppServiceCertificateOrder resource specific properties
type AppServiceCertificateOrderPropertiesArgs struct {
	// <code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.
	AutoRenew pulumi.BoolPtrInput `pulumi:"autoRenew"`
	// State of the Key Vault secret.
	Certificates pulumi.StringMapInput `pulumi:"certificates"`
	// Last CSR that was created for this order.
	Csr pulumi.StringPtrInput `pulumi:"csr"`
	// Certificate distinguished name.
	DistinguishedName pulumi.StringPtrInput `pulumi:"distinguishedName"`
	// Certificate key size.
	KeySize pulumi.IntPtrInput `pulumi:"keySize"`
	// Certificate product type.
	ProductType pulumi.StringInput `pulumi:"productType"`
	// Duration in years (must be between 1 and 3).
	ValidityInYears pulumi.IntPtrInput `pulumi:"validityInYears"`
}

func (AppServiceCertificateOrderPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceCertificateOrderProperties)(nil)).Elem()
}

func (i AppServiceCertificateOrderPropertiesArgs) ToAppServiceCertificateOrderPropertiesOutput() AppServiceCertificateOrderPropertiesOutput {
	return i.ToAppServiceCertificateOrderPropertiesOutputWithContext(context.Background())
}

func (i AppServiceCertificateOrderPropertiesArgs) ToAppServiceCertificateOrderPropertiesOutputWithContext(ctx context.Context) AppServiceCertificateOrderPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateOrderPropertiesOutput)
}

func (i AppServiceCertificateOrderPropertiesArgs) ToAppServiceCertificateOrderPropertiesPtrOutput() AppServiceCertificateOrderPropertiesPtrOutput {
	return i.ToAppServiceCertificateOrderPropertiesPtrOutputWithContext(context.Background())
}

func (i AppServiceCertificateOrderPropertiesArgs) ToAppServiceCertificateOrderPropertiesPtrOutputWithContext(ctx context.Context) AppServiceCertificateOrderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateOrderPropertiesOutput).ToAppServiceCertificateOrderPropertiesPtrOutputWithContext(ctx)
}

// AppServiceCertificateOrderPropertiesPtrInput is an input type that accepts AppServiceCertificateOrderPropertiesArgs, AppServiceCertificateOrderPropertiesPtr and AppServiceCertificateOrderPropertiesPtrOutput values.
// You can construct a concrete instance of `AppServiceCertificateOrderPropertiesPtrInput` via:
//
//          AppServiceCertificateOrderPropertiesArgs{...}
//
//  or:
//
//          nil
type AppServiceCertificateOrderPropertiesPtrInput interface {
	pulumi.Input

	ToAppServiceCertificateOrderPropertiesPtrOutput() AppServiceCertificateOrderPropertiesPtrOutput
	ToAppServiceCertificateOrderPropertiesPtrOutputWithContext(context.Context) AppServiceCertificateOrderPropertiesPtrOutput
}

type appServiceCertificateOrderPropertiesPtrType AppServiceCertificateOrderPropertiesArgs

func AppServiceCertificateOrderPropertiesPtr(v *AppServiceCertificateOrderPropertiesArgs) AppServiceCertificateOrderPropertiesPtrInput {
	return (*appServiceCertificateOrderPropertiesPtrType)(v)
}

func (*appServiceCertificateOrderPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceCertificateOrderProperties)(nil)).Elem()
}

func (i *appServiceCertificateOrderPropertiesPtrType) ToAppServiceCertificateOrderPropertiesPtrOutput() AppServiceCertificateOrderPropertiesPtrOutput {
	return i.ToAppServiceCertificateOrderPropertiesPtrOutputWithContext(context.Background())
}

func (i *appServiceCertificateOrderPropertiesPtrType) ToAppServiceCertificateOrderPropertiesPtrOutputWithContext(ctx context.Context) AppServiceCertificateOrderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateOrderPropertiesPtrOutput)
}

// AppServiceCertificateOrder resource specific properties
type AppServiceCertificateOrderPropertiesOutput struct{ *pulumi.OutputState }

func (AppServiceCertificateOrderPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceCertificateOrderProperties)(nil)).Elem()
}

func (o AppServiceCertificateOrderPropertiesOutput) ToAppServiceCertificateOrderPropertiesOutput() AppServiceCertificateOrderPropertiesOutput {
	return o
}

func (o AppServiceCertificateOrderPropertiesOutput) ToAppServiceCertificateOrderPropertiesOutputWithContext(ctx context.Context) AppServiceCertificateOrderPropertiesOutput {
	return o
}

func (o AppServiceCertificateOrderPropertiesOutput) ToAppServiceCertificateOrderPropertiesPtrOutput() AppServiceCertificateOrderPropertiesPtrOutput {
	return o.ToAppServiceCertificateOrderPropertiesPtrOutputWithContext(context.Background())
}

func (o AppServiceCertificateOrderPropertiesOutput) ToAppServiceCertificateOrderPropertiesPtrOutputWithContext(ctx context.Context) AppServiceCertificateOrderPropertiesPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderProperties) *AppServiceCertificateOrderProperties {
		return &v
	}).(AppServiceCertificateOrderPropertiesPtrOutput)
}

// <code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.
func (o AppServiceCertificateOrderPropertiesOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderProperties) *bool { return v.AutoRenew }).(pulumi.BoolPtrOutput)
}

// State of the Key Vault secret.
func (o AppServiceCertificateOrderPropertiesOutput) Certificates() pulumi.StringMapOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderProperties) map[string]string { return v.Certificates }).(pulumi.StringMapOutput)
}

// Last CSR that was created for this order.
func (o AppServiceCertificateOrderPropertiesOutput) Csr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderProperties) *string { return v.Csr }).(pulumi.StringPtrOutput)
}

// Certificate distinguished name.
func (o AppServiceCertificateOrderPropertiesOutput) DistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderProperties) *string { return v.DistinguishedName }).(pulumi.StringPtrOutput)
}

// Certificate key size.
func (o AppServiceCertificateOrderPropertiesOutput) KeySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderProperties) *int { return v.KeySize }).(pulumi.IntPtrOutput)
}

// Certificate product type.
func (o AppServiceCertificateOrderPropertiesOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderProperties) string { return v.ProductType }).(pulumi.StringOutput)
}

// Duration in years (must be between 1 and 3).
func (o AppServiceCertificateOrderPropertiesOutput) ValidityInYears() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderProperties) *int { return v.ValidityInYears }).(pulumi.IntPtrOutput)
}

type AppServiceCertificateOrderPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AppServiceCertificateOrderPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceCertificateOrderProperties)(nil)).Elem()
}

func (o AppServiceCertificateOrderPropertiesPtrOutput) ToAppServiceCertificateOrderPropertiesPtrOutput() AppServiceCertificateOrderPropertiesPtrOutput {
	return o
}

func (o AppServiceCertificateOrderPropertiesPtrOutput) ToAppServiceCertificateOrderPropertiesPtrOutputWithContext(ctx context.Context) AppServiceCertificateOrderPropertiesPtrOutput {
	return o
}

func (o AppServiceCertificateOrderPropertiesPtrOutput) Elem() AppServiceCertificateOrderPropertiesOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderProperties) AppServiceCertificateOrderProperties { return *v }).(AppServiceCertificateOrderPropertiesOutput)
}

// <code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.
func (o AppServiceCertificateOrderPropertiesPtrOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AutoRenew
	}).(pulumi.BoolPtrOutput)
}

// State of the Key Vault secret.
func (o AppServiceCertificateOrderPropertiesPtrOutput) Certificates() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Certificates
	}).(pulumi.StringMapOutput)
}

// Last CSR that was created for this order.
func (o AppServiceCertificateOrderPropertiesPtrOutput) Csr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderProperties) *string {
		if v == nil {
			return nil
		}
		return v.Csr
	}).(pulumi.StringPtrOutput)
}

// Certificate distinguished name.
func (o AppServiceCertificateOrderPropertiesPtrOutput) DistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderProperties) *string {
		if v == nil {
			return nil
		}
		return v.DistinguishedName
	}).(pulumi.StringPtrOutput)
}

// Certificate key size.
func (o AppServiceCertificateOrderPropertiesPtrOutput) KeySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderProperties) *int {
		if v == nil {
			return nil
		}
		return v.KeySize
	}).(pulumi.IntPtrOutput)
}

// Certificate product type.
func (o AppServiceCertificateOrderPropertiesPtrOutput) ProductType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ProductType
	}).(pulumi.StringPtrOutput)
}

// Duration in years (must be between 1 and 3).
func (o AppServiceCertificateOrderPropertiesPtrOutput) ValidityInYears() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderProperties) *int {
		if v == nil {
			return nil
		}
		return v.ValidityInYears
	}).(pulumi.IntPtrOutput)
}

// AppServiceCertificateOrder resource specific properties
type AppServiceCertificateOrderResponseProperties struct {
	// Reasons why App Service Certificate is not renewable at the current moment.
	AppServiceCertificateNotRenewableReasons []string `pulumi:"appServiceCertificateNotRenewableReasons"`
	// <code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.
	AutoRenew *bool `pulumi:"autoRenew"`
	// State of the Key Vault secret.
	Certificates map[string]string `pulumi:"certificates"`
	// Last CSR that was created for this order.
	Csr *string `pulumi:"csr"`
	// Certificate distinguished name.
	DistinguishedName *string `pulumi:"distinguishedName"`
	// Domain verification token.
	DomainVerificationToken string `pulumi:"domainVerificationToken"`
	// Certificate expiration time.
	ExpirationTime string `pulumi:"expirationTime"`
	// Intermediate certificate.
	Intermediate CertificateDetailsResponse `pulumi:"intermediate"`
	// <code>true</code> if private key is external; otherwise, <code>false</code>.
	IsPrivateKeyExternal bool `pulumi:"isPrivateKeyExternal"`
	// Certificate key size.
	KeySize *int `pulumi:"keySize"`
	// Certificate last issuance time.
	LastCertificateIssuanceTime string `pulumi:"lastCertificateIssuanceTime"`
	// Time stamp when the certificate would be auto renewed next
	NextAutoRenewalTimeStamp string `pulumi:"nextAutoRenewalTimeStamp"`
	// Certificate product type.
	ProductType string `pulumi:"productType"`
	// Status of certificate order.
	ProvisioningState string `pulumi:"provisioningState"`
	// Root certificate.
	Root CertificateDetailsResponse `pulumi:"root"`
	// Current serial number of the certificate.
	SerialNumber string `pulumi:"serialNumber"`
	// Signed certificate.
	SignedCertificate CertificateDetailsResponse `pulumi:"signedCertificate"`
	// Current order status.
	Status string `pulumi:"status"`
	// Duration in years (must be between 1 and 3).
	ValidityInYears *int `pulumi:"validityInYears"`
}

// AppServiceCertificateOrderResponsePropertiesInput is an input type that accepts AppServiceCertificateOrderResponsePropertiesArgs and AppServiceCertificateOrderResponsePropertiesOutput values.
// You can construct a concrete instance of `AppServiceCertificateOrderResponsePropertiesInput` via:
//
//          AppServiceCertificateOrderResponsePropertiesArgs{...}
type AppServiceCertificateOrderResponsePropertiesInput interface {
	pulumi.Input

	ToAppServiceCertificateOrderResponsePropertiesOutput() AppServiceCertificateOrderResponsePropertiesOutput
	ToAppServiceCertificateOrderResponsePropertiesOutputWithContext(context.Context) AppServiceCertificateOrderResponsePropertiesOutput
}

// AppServiceCertificateOrder resource specific properties
type AppServiceCertificateOrderResponsePropertiesArgs struct {
	// Reasons why App Service Certificate is not renewable at the current moment.
	AppServiceCertificateNotRenewableReasons pulumi.StringArrayInput `pulumi:"appServiceCertificateNotRenewableReasons"`
	// <code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.
	AutoRenew pulumi.BoolPtrInput `pulumi:"autoRenew"`
	// State of the Key Vault secret.
	Certificates pulumi.StringMapInput `pulumi:"certificates"`
	// Last CSR that was created for this order.
	Csr pulumi.StringPtrInput `pulumi:"csr"`
	// Certificate distinguished name.
	DistinguishedName pulumi.StringPtrInput `pulumi:"distinguishedName"`
	// Domain verification token.
	DomainVerificationToken pulumi.StringInput `pulumi:"domainVerificationToken"`
	// Certificate expiration time.
	ExpirationTime pulumi.StringInput `pulumi:"expirationTime"`
	// Intermediate certificate.
	Intermediate CertificateDetailsResponseInput `pulumi:"intermediate"`
	// <code>true</code> if private key is external; otherwise, <code>false</code>.
	IsPrivateKeyExternal pulumi.BoolInput `pulumi:"isPrivateKeyExternal"`
	// Certificate key size.
	KeySize pulumi.IntPtrInput `pulumi:"keySize"`
	// Certificate last issuance time.
	LastCertificateIssuanceTime pulumi.StringInput `pulumi:"lastCertificateIssuanceTime"`
	// Time stamp when the certificate would be auto renewed next
	NextAutoRenewalTimeStamp pulumi.StringInput `pulumi:"nextAutoRenewalTimeStamp"`
	// Certificate product type.
	ProductType pulumi.StringInput `pulumi:"productType"`
	// Status of certificate order.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Root certificate.
	Root CertificateDetailsResponseInput `pulumi:"root"`
	// Current serial number of the certificate.
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// Signed certificate.
	SignedCertificate CertificateDetailsResponseInput `pulumi:"signedCertificate"`
	// Current order status.
	Status pulumi.StringInput `pulumi:"status"`
	// Duration in years (must be between 1 and 3).
	ValidityInYears pulumi.IntPtrInput `pulumi:"validityInYears"`
}

func (AppServiceCertificateOrderResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceCertificateOrderResponseProperties)(nil)).Elem()
}

func (i AppServiceCertificateOrderResponsePropertiesArgs) ToAppServiceCertificateOrderResponsePropertiesOutput() AppServiceCertificateOrderResponsePropertiesOutput {
	return i.ToAppServiceCertificateOrderResponsePropertiesOutputWithContext(context.Background())
}

func (i AppServiceCertificateOrderResponsePropertiesArgs) ToAppServiceCertificateOrderResponsePropertiesOutputWithContext(ctx context.Context) AppServiceCertificateOrderResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateOrderResponsePropertiesOutput)
}

func (i AppServiceCertificateOrderResponsePropertiesArgs) ToAppServiceCertificateOrderResponsePropertiesPtrOutput() AppServiceCertificateOrderResponsePropertiesPtrOutput {
	return i.ToAppServiceCertificateOrderResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i AppServiceCertificateOrderResponsePropertiesArgs) ToAppServiceCertificateOrderResponsePropertiesPtrOutputWithContext(ctx context.Context) AppServiceCertificateOrderResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateOrderResponsePropertiesOutput).ToAppServiceCertificateOrderResponsePropertiesPtrOutputWithContext(ctx)
}

// AppServiceCertificateOrderResponsePropertiesPtrInput is an input type that accepts AppServiceCertificateOrderResponsePropertiesArgs, AppServiceCertificateOrderResponsePropertiesPtr and AppServiceCertificateOrderResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `AppServiceCertificateOrderResponsePropertiesPtrInput` via:
//
//          AppServiceCertificateOrderResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type AppServiceCertificateOrderResponsePropertiesPtrInput interface {
	pulumi.Input

	ToAppServiceCertificateOrderResponsePropertiesPtrOutput() AppServiceCertificateOrderResponsePropertiesPtrOutput
	ToAppServiceCertificateOrderResponsePropertiesPtrOutputWithContext(context.Context) AppServiceCertificateOrderResponsePropertiesPtrOutput
}

type appServiceCertificateOrderResponsePropertiesPtrType AppServiceCertificateOrderResponsePropertiesArgs

func AppServiceCertificateOrderResponsePropertiesPtr(v *AppServiceCertificateOrderResponsePropertiesArgs) AppServiceCertificateOrderResponsePropertiesPtrInput {
	return (*appServiceCertificateOrderResponsePropertiesPtrType)(v)
}

func (*appServiceCertificateOrderResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceCertificateOrderResponseProperties)(nil)).Elem()
}

func (i *appServiceCertificateOrderResponsePropertiesPtrType) ToAppServiceCertificateOrderResponsePropertiesPtrOutput() AppServiceCertificateOrderResponsePropertiesPtrOutput {
	return i.ToAppServiceCertificateOrderResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *appServiceCertificateOrderResponsePropertiesPtrType) ToAppServiceCertificateOrderResponsePropertiesPtrOutputWithContext(ctx context.Context) AppServiceCertificateOrderResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateOrderResponsePropertiesPtrOutput)
}

// AppServiceCertificateOrder resource specific properties
type AppServiceCertificateOrderResponsePropertiesOutput struct{ *pulumi.OutputState }

func (AppServiceCertificateOrderResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceCertificateOrderResponseProperties)(nil)).Elem()
}

func (o AppServiceCertificateOrderResponsePropertiesOutput) ToAppServiceCertificateOrderResponsePropertiesOutput() AppServiceCertificateOrderResponsePropertiesOutput {
	return o
}

func (o AppServiceCertificateOrderResponsePropertiesOutput) ToAppServiceCertificateOrderResponsePropertiesOutputWithContext(ctx context.Context) AppServiceCertificateOrderResponsePropertiesOutput {
	return o
}

func (o AppServiceCertificateOrderResponsePropertiesOutput) ToAppServiceCertificateOrderResponsePropertiesPtrOutput() AppServiceCertificateOrderResponsePropertiesPtrOutput {
	return o.ToAppServiceCertificateOrderResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o AppServiceCertificateOrderResponsePropertiesOutput) ToAppServiceCertificateOrderResponsePropertiesPtrOutputWithContext(ctx context.Context) AppServiceCertificateOrderResponsePropertiesPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) *AppServiceCertificateOrderResponseProperties {
		return &v
	}).(AppServiceCertificateOrderResponsePropertiesPtrOutput)
}

// Reasons why App Service Certificate is not renewable at the current moment.
func (o AppServiceCertificateOrderResponsePropertiesOutput) AppServiceCertificateNotRenewableReasons() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) []string {
		return v.AppServiceCertificateNotRenewableReasons
	}).(pulumi.StringArrayOutput)
}

// <code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.
func (o AppServiceCertificateOrderResponsePropertiesOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) *bool { return v.AutoRenew }).(pulumi.BoolPtrOutput)
}

// State of the Key Vault secret.
func (o AppServiceCertificateOrderResponsePropertiesOutput) Certificates() pulumi.StringMapOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) map[string]string { return v.Certificates }).(pulumi.StringMapOutput)
}

// Last CSR that was created for this order.
func (o AppServiceCertificateOrderResponsePropertiesOutput) Csr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) *string { return v.Csr }).(pulumi.StringPtrOutput)
}

// Certificate distinguished name.
func (o AppServiceCertificateOrderResponsePropertiesOutput) DistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) *string { return v.DistinguishedName }).(pulumi.StringPtrOutput)
}

// Domain verification token.
func (o AppServiceCertificateOrderResponsePropertiesOutput) DomainVerificationToken() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) string { return v.DomainVerificationToken }).(pulumi.StringOutput)
}

// Certificate expiration time.
func (o AppServiceCertificateOrderResponsePropertiesOutput) ExpirationTime() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) string { return v.ExpirationTime }).(pulumi.StringOutput)
}

// Intermediate certificate.
func (o AppServiceCertificateOrderResponsePropertiesOutput) Intermediate() CertificateDetailsResponseOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) CertificateDetailsResponse { return v.Intermediate }).(CertificateDetailsResponseOutput)
}

// <code>true</code> if private key is external; otherwise, <code>false</code>.
func (o AppServiceCertificateOrderResponsePropertiesOutput) IsPrivateKeyExternal() pulumi.BoolOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) bool { return v.IsPrivateKeyExternal }).(pulumi.BoolOutput)
}

// Certificate key size.
func (o AppServiceCertificateOrderResponsePropertiesOutput) KeySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) *int { return v.KeySize }).(pulumi.IntPtrOutput)
}

// Certificate last issuance time.
func (o AppServiceCertificateOrderResponsePropertiesOutput) LastCertificateIssuanceTime() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) string { return v.LastCertificateIssuanceTime }).(pulumi.StringOutput)
}

// Time stamp when the certificate would be auto renewed next
func (o AppServiceCertificateOrderResponsePropertiesOutput) NextAutoRenewalTimeStamp() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) string { return v.NextAutoRenewalTimeStamp }).(pulumi.StringOutput)
}

// Certificate product type.
func (o AppServiceCertificateOrderResponsePropertiesOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) string { return v.ProductType }).(pulumi.StringOutput)
}

// Status of certificate order.
func (o AppServiceCertificateOrderResponsePropertiesOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Root certificate.
func (o AppServiceCertificateOrderResponsePropertiesOutput) Root() CertificateDetailsResponseOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) CertificateDetailsResponse { return v.Root }).(CertificateDetailsResponseOutput)
}

// Current serial number of the certificate.
func (o AppServiceCertificateOrderResponsePropertiesOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// Signed certificate.
func (o AppServiceCertificateOrderResponsePropertiesOutput) SignedCertificate() CertificateDetailsResponseOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) CertificateDetailsResponse {
		return v.SignedCertificate
	}).(CertificateDetailsResponseOutput)
}

// Current order status.
func (o AppServiceCertificateOrderResponsePropertiesOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) string { return v.Status }).(pulumi.StringOutput)
}

// Duration in years (must be between 1 and 3).
func (o AppServiceCertificateOrderResponsePropertiesOutput) ValidityInYears() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateOrderResponseProperties) *int { return v.ValidityInYears }).(pulumi.IntPtrOutput)
}

type AppServiceCertificateOrderResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AppServiceCertificateOrderResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceCertificateOrderResponseProperties)(nil)).Elem()
}

func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) ToAppServiceCertificateOrderResponsePropertiesPtrOutput() AppServiceCertificateOrderResponsePropertiesPtrOutput {
	return o
}

func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) ToAppServiceCertificateOrderResponsePropertiesPtrOutputWithContext(ctx context.Context) AppServiceCertificateOrderResponsePropertiesPtrOutput {
	return o
}

func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) Elem() AppServiceCertificateOrderResponsePropertiesOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) AppServiceCertificateOrderResponseProperties {
		return *v
	}).(AppServiceCertificateOrderResponsePropertiesOutput)
}

// Reasons why App Service Certificate is not renewable at the current moment.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) AppServiceCertificateNotRenewableReasons() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) []string {
		if v == nil {
			return nil
		}
		return v.AppServiceCertificateNotRenewableReasons
	}).(pulumi.StringArrayOutput)
}

// <code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AutoRenew
	}).(pulumi.BoolPtrOutput)
}

// State of the Key Vault secret.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) Certificates() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Certificates
	}).(pulumi.StringMapOutput)
}

// Last CSR that was created for this order.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) Csr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Csr
	}).(pulumi.StringPtrOutput)
}

// Certificate distinguished name.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) DistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DistinguishedName
	}).(pulumi.StringPtrOutput)
}

// Domain verification token.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) DomainVerificationToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DomainVerificationToken
	}).(pulumi.StringPtrOutput)
}

// Certificate expiration time.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) ExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ExpirationTime
	}).(pulumi.StringPtrOutput)
}

// Intermediate certificate.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) Intermediate() CertificateDetailsResponsePtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *CertificateDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.Intermediate
	}).(CertificateDetailsResponsePtrOutput)
}

// <code>true</code> if private key is external; otherwise, <code>false</code>.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) IsPrivateKeyExternal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.IsPrivateKeyExternal
	}).(pulumi.BoolPtrOutput)
}

// Certificate key size.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) KeySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.KeySize
	}).(pulumi.IntPtrOutput)
}

// Certificate last issuance time.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) LastCertificateIssuanceTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.LastCertificateIssuanceTime
	}).(pulumi.StringPtrOutput)
}

// Time stamp when the certificate would be auto renewed next
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) NextAutoRenewalTimeStamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.NextAutoRenewalTimeStamp
	}).(pulumi.StringPtrOutput)
}

// Certificate product type.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) ProductType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ProductType
	}).(pulumi.StringPtrOutput)
}

// Status of certificate order.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Root certificate.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) Root() CertificateDetailsResponsePtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *CertificateDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.Root
	}).(CertificateDetailsResponsePtrOutput)
}

// Current serial number of the certificate.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SerialNumber
	}).(pulumi.StringPtrOutput)
}

// Signed certificate.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) SignedCertificate() CertificateDetailsResponsePtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *CertificateDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.SignedCertificate
	}).(CertificateDetailsResponsePtrOutput)
}

// Current order status.
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// Duration in years (must be between 1 and 3).
func (o AppServiceCertificateOrderResponsePropertiesPtrOutput) ValidityInYears() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrderResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.ValidityInYears
	}).(pulumi.IntPtrOutput)
}

// Key Vault container for a certificate that is purchased through Azure.
type AppServiceCertificateResponse struct {
	// Key Vault resource Id.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Key Vault secret name.
	KeyVaultSecretName *string `pulumi:"keyVaultSecretName"`
	// Status of the Key Vault secret.
	ProvisioningState string `pulumi:"provisioningState"`
}

// AppServiceCertificateResponseInput is an input type that accepts AppServiceCertificateResponseArgs and AppServiceCertificateResponseOutput values.
// You can construct a concrete instance of `AppServiceCertificateResponseInput` via:
//
//          AppServiceCertificateResponseArgs{...}
type AppServiceCertificateResponseInput interface {
	pulumi.Input

	ToAppServiceCertificateResponseOutput() AppServiceCertificateResponseOutput
	ToAppServiceCertificateResponseOutputWithContext(context.Context) AppServiceCertificateResponseOutput
}

// Key Vault container for a certificate that is purchased through Azure.
type AppServiceCertificateResponseArgs struct {
	// Key Vault resource Id.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Key Vault secret name.
	KeyVaultSecretName pulumi.StringPtrInput `pulumi:"keyVaultSecretName"`
	// Status of the Key Vault secret.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (AppServiceCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceCertificateResponse)(nil)).Elem()
}

func (i AppServiceCertificateResponseArgs) ToAppServiceCertificateResponseOutput() AppServiceCertificateResponseOutput {
	return i.ToAppServiceCertificateResponseOutputWithContext(context.Background())
}

func (i AppServiceCertificateResponseArgs) ToAppServiceCertificateResponseOutputWithContext(ctx context.Context) AppServiceCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateResponseOutput)
}

func (i AppServiceCertificateResponseArgs) ToAppServiceCertificateResponsePtrOutput() AppServiceCertificateResponsePtrOutput {
	return i.ToAppServiceCertificateResponsePtrOutputWithContext(context.Background())
}

func (i AppServiceCertificateResponseArgs) ToAppServiceCertificateResponsePtrOutputWithContext(ctx context.Context) AppServiceCertificateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateResponseOutput).ToAppServiceCertificateResponsePtrOutputWithContext(ctx)
}

// AppServiceCertificateResponsePtrInput is an input type that accepts AppServiceCertificateResponseArgs, AppServiceCertificateResponsePtr and AppServiceCertificateResponsePtrOutput values.
// You can construct a concrete instance of `AppServiceCertificateResponsePtrInput` via:
//
//          AppServiceCertificateResponseArgs{...}
//
//  or:
//
//          nil
type AppServiceCertificateResponsePtrInput interface {
	pulumi.Input

	ToAppServiceCertificateResponsePtrOutput() AppServiceCertificateResponsePtrOutput
	ToAppServiceCertificateResponsePtrOutputWithContext(context.Context) AppServiceCertificateResponsePtrOutput
}

type appServiceCertificateResponsePtrType AppServiceCertificateResponseArgs

func AppServiceCertificateResponsePtr(v *AppServiceCertificateResponseArgs) AppServiceCertificateResponsePtrInput {
	return (*appServiceCertificateResponsePtrType)(v)
}

func (*appServiceCertificateResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceCertificateResponse)(nil)).Elem()
}

func (i *appServiceCertificateResponsePtrType) ToAppServiceCertificateResponsePtrOutput() AppServiceCertificateResponsePtrOutput {
	return i.ToAppServiceCertificateResponsePtrOutputWithContext(context.Background())
}

func (i *appServiceCertificateResponsePtrType) ToAppServiceCertificateResponsePtrOutputWithContext(ctx context.Context) AppServiceCertificateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateResponsePtrOutput)
}

// Key Vault container for a certificate that is purchased through Azure.
type AppServiceCertificateResponseOutput struct{ *pulumi.OutputState }

func (AppServiceCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceCertificateResponse)(nil)).Elem()
}

func (o AppServiceCertificateResponseOutput) ToAppServiceCertificateResponseOutput() AppServiceCertificateResponseOutput {
	return o
}

func (o AppServiceCertificateResponseOutput) ToAppServiceCertificateResponseOutputWithContext(ctx context.Context) AppServiceCertificateResponseOutput {
	return o
}

func (o AppServiceCertificateResponseOutput) ToAppServiceCertificateResponsePtrOutput() AppServiceCertificateResponsePtrOutput {
	return o.ToAppServiceCertificateResponsePtrOutputWithContext(context.Background())
}

func (o AppServiceCertificateResponseOutput) ToAppServiceCertificateResponsePtrOutputWithContext(ctx context.Context) AppServiceCertificateResponsePtrOutput {
	return o.ApplyT(func(v AppServiceCertificateResponse) *AppServiceCertificateResponse {
		return &v
	}).(AppServiceCertificateResponsePtrOutput)
}

// Key Vault resource Id.
func (o AppServiceCertificateResponseOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateResponse) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Key Vault secret name.
func (o AppServiceCertificateResponseOutput) KeyVaultSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceCertificateResponse) *string { return v.KeyVaultSecretName }).(pulumi.StringPtrOutput)
}

// Status of the Key Vault secret.
func (o AppServiceCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type AppServiceCertificateResponsePtrOutput struct{ *pulumi.OutputState }

func (AppServiceCertificateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceCertificateResponse)(nil)).Elem()
}

func (o AppServiceCertificateResponsePtrOutput) ToAppServiceCertificateResponsePtrOutput() AppServiceCertificateResponsePtrOutput {
	return o
}

func (o AppServiceCertificateResponsePtrOutput) ToAppServiceCertificateResponsePtrOutputWithContext(ctx context.Context) AppServiceCertificateResponsePtrOutput {
	return o
}

func (o AppServiceCertificateResponsePtrOutput) Elem() AppServiceCertificateResponseOutput {
	return o.ApplyT(func(v *AppServiceCertificateResponse) AppServiceCertificateResponse { return *v }).(AppServiceCertificateResponseOutput)
}

// Key Vault resource Id.
func (o AppServiceCertificateResponsePtrOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultId
	}).(pulumi.StringPtrOutput)
}

// Key Vault secret name.
func (o AppServiceCertificateResponsePtrOutput) KeyVaultSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultSecretName
	}).(pulumi.StringPtrOutput)
}

// Status of the Key Vault secret.
func (o AppServiceCertificateResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Certificate Details
type CertificateDetails struct {
	// Resource Id
	Id *string `pulumi:"id"`
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                       `pulumi:"name"`
	Properties *CertificateDetailsProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// CertificateDetailsInput is an input type that accepts CertificateDetailsArgs and CertificateDetailsOutput values.
// You can construct a concrete instance of `CertificateDetailsInput` via:
//
//          CertificateDetailsArgs{...}
type CertificateDetailsInput interface {
	pulumi.Input

	ToCertificateDetailsOutput() CertificateDetailsOutput
	ToCertificateDetailsOutputWithContext(context.Context) CertificateDetailsOutput
}

// Certificate Details
type CertificateDetailsArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput                `pulumi:"name"`
	Properties CertificateDetailsPropertiesPtrInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CertificateDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDetails)(nil)).Elem()
}

func (i CertificateDetailsArgs) ToCertificateDetailsOutput() CertificateDetailsOutput {
	return i.ToCertificateDetailsOutputWithContext(context.Background())
}

func (i CertificateDetailsArgs) ToCertificateDetailsOutputWithContext(ctx context.Context) CertificateDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDetailsOutput)
}

func (i CertificateDetailsArgs) ToCertificateDetailsPtrOutput() CertificateDetailsPtrOutput {
	return i.ToCertificateDetailsPtrOutputWithContext(context.Background())
}

func (i CertificateDetailsArgs) ToCertificateDetailsPtrOutputWithContext(ctx context.Context) CertificateDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDetailsOutput).ToCertificateDetailsPtrOutputWithContext(ctx)
}

// CertificateDetailsPtrInput is an input type that accepts CertificateDetailsArgs, CertificateDetailsPtr and CertificateDetailsPtrOutput values.
// You can construct a concrete instance of `CertificateDetailsPtrInput` via:
//
//          CertificateDetailsArgs{...}
//
//  or:
//
//          nil
type CertificateDetailsPtrInput interface {
	pulumi.Input

	ToCertificateDetailsPtrOutput() CertificateDetailsPtrOutput
	ToCertificateDetailsPtrOutputWithContext(context.Context) CertificateDetailsPtrOutput
}

type certificateDetailsPtrType CertificateDetailsArgs

func CertificateDetailsPtr(v *CertificateDetailsArgs) CertificateDetailsPtrInput {
	return (*certificateDetailsPtrType)(v)
}

func (*certificateDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateDetails)(nil)).Elem()
}

func (i *certificateDetailsPtrType) ToCertificateDetailsPtrOutput() CertificateDetailsPtrOutput {
	return i.ToCertificateDetailsPtrOutputWithContext(context.Background())
}

func (i *certificateDetailsPtrType) ToCertificateDetailsPtrOutputWithContext(ctx context.Context) CertificateDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDetailsPtrOutput)
}

// Certificate Details
type CertificateDetailsOutput struct{ *pulumi.OutputState }

func (CertificateDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDetails)(nil)).Elem()
}

func (o CertificateDetailsOutput) ToCertificateDetailsOutput() CertificateDetailsOutput {
	return o
}

func (o CertificateDetailsOutput) ToCertificateDetailsOutputWithContext(ctx context.Context) CertificateDetailsOutput {
	return o
}

func (o CertificateDetailsOutput) ToCertificateDetailsPtrOutput() CertificateDetailsPtrOutput {
	return o.ToCertificateDetailsPtrOutputWithContext(context.Background())
}

func (o CertificateDetailsOutput) ToCertificateDetailsPtrOutputWithContext(ctx context.Context) CertificateDetailsPtrOutput {
	return o.ApplyT(func(v CertificateDetails) *CertificateDetails {
		return &v
	}).(CertificateDetailsPtrOutput)
}

// Resource Id
func (o CertificateDetailsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetails) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Kind of resource
func (o CertificateDetailsOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetails) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o CertificateDetailsOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDetails) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o CertificateDetailsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetails) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o CertificateDetailsOutput) Properties() CertificateDetailsPropertiesPtrOutput {
	return o.ApplyT(func(v CertificateDetails) *CertificateDetailsProperties { return v.Properties }).(CertificateDetailsPropertiesPtrOutput)
}

// Resource tags
func (o CertificateDetailsOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CertificateDetails) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o CertificateDetailsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetails) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CertificateDetailsPtrOutput struct{ *pulumi.OutputState }

func (CertificateDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateDetails)(nil)).Elem()
}

func (o CertificateDetailsPtrOutput) ToCertificateDetailsPtrOutput() CertificateDetailsPtrOutput {
	return o
}

func (o CertificateDetailsPtrOutput) ToCertificateDetailsPtrOutputWithContext(ctx context.Context) CertificateDetailsPtrOutput {
	return o
}

func (o CertificateDetailsPtrOutput) Elem() CertificateDetailsOutput {
	return o.ApplyT(func(v *CertificateDetails) CertificateDetails { return *v }).(CertificateDetailsOutput)
}

// Resource Id
func (o CertificateDetailsPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetails) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Kind of resource
func (o CertificateDetailsPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetails) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Resource Location
func (o CertificateDetailsPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource Name
func (o CertificateDetailsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetails) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o CertificateDetailsPtrOutput) Properties() CertificateDetailsPropertiesPtrOutput {
	return o.ApplyT(func(v *CertificateDetails) *CertificateDetailsProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(CertificateDetailsPropertiesPtrOutput)
}

// Resource tags
func (o CertificateDetailsPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CertificateDetails) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type
func (o CertificateDetailsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetails) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type CertificateDetailsProperties struct {
	// Issuer
	Issuer *string `pulumi:"issuer"`
	// Valid to
	NotAfter *string `pulumi:"notAfter"`
	// Valid from
	NotBefore *string `pulumi:"notBefore"`
	// Raw certificate data
	RawData *string `pulumi:"rawData"`
	// Serial Number
	SerialNumber *string `pulumi:"serialNumber"`
	// Signature Algorithm
	SignatureAlgorithm *string `pulumi:"signatureAlgorithm"`
	// Subject
	Subject *string `pulumi:"subject"`
	// Thumbprint
	Thumbprint *string `pulumi:"thumbprint"`
	// Version
	Version *int `pulumi:"version"`
}

// CertificateDetailsPropertiesInput is an input type that accepts CertificateDetailsPropertiesArgs and CertificateDetailsPropertiesOutput values.
// You can construct a concrete instance of `CertificateDetailsPropertiesInput` via:
//
//          CertificateDetailsPropertiesArgs{...}
type CertificateDetailsPropertiesInput interface {
	pulumi.Input

	ToCertificateDetailsPropertiesOutput() CertificateDetailsPropertiesOutput
	ToCertificateDetailsPropertiesOutputWithContext(context.Context) CertificateDetailsPropertiesOutput
}

type CertificateDetailsPropertiesArgs struct {
	// Issuer
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// Valid to
	NotAfter pulumi.StringPtrInput `pulumi:"notAfter"`
	// Valid from
	NotBefore pulumi.StringPtrInput `pulumi:"notBefore"`
	// Raw certificate data
	RawData pulumi.StringPtrInput `pulumi:"rawData"`
	// Serial Number
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// Signature Algorithm
	SignatureAlgorithm pulumi.StringPtrInput `pulumi:"signatureAlgorithm"`
	// Subject
	Subject pulumi.StringPtrInput `pulumi:"subject"`
	// Thumbprint
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
	// Version
	Version pulumi.IntPtrInput `pulumi:"version"`
}

func (CertificateDetailsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDetailsProperties)(nil)).Elem()
}

func (i CertificateDetailsPropertiesArgs) ToCertificateDetailsPropertiesOutput() CertificateDetailsPropertiesOutput {
	return i.ToCertificateDetailsPropertiesOutputWithContext(context.Background())
}

func (i CertificateDetailsPropertiesArgs) ToCertificateDetailsPropertiesOutputWithContext(ctx context.Context) CertificateDetailsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDetailsPropertiesOutput)
}

func (i CertificateDetailsPropertiesArgs) ToCertificateDetailsPropertiesPtrOutput() CertificateDetailsPropertiesPtrOutput {
	return i.ToCertificateDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i CertificateDetailsPropertiesArgs) ToCertificateDetailsPropertiesPtrOutputWithContext(ctx context.Context) CertificateDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDetailsPropertiesOutput).ToCertificateDetailsPropertiesPtrOutputWithContext(ctx)
}

// CertificateDetailsPropertiesPtrInput is an input type that accepts CertificateDetailsPropertiesArgs, CertificateDetailsPropertiesPtr and CertificateDetailsPropertiesPtrOutput values.
// You can construct a concrete instance of `CertificateDetailsPropertiesPtrInput` via:
//
//          CertificateDetailsPropertiesArgs{...}
//
//  or:
//
//          nil
type CertificateDetailsPropertiesPtrInput interface {
	pulumi.Input

	ToCertificateDetailsPropertiesPtrOutput() CertificateDetailsPropertiesPtrOutput
	ToCertificateDetailsPropertiesPtrOutputWithContext(context.Context) CertificateDetailsPropertiesPtrOutput
}

type certificateDetailsPropertiesPtrType CertificateDetailsPropertiesArgs

func CertificateDetailsPropertiesPtr(v *CertificateDetailsPropertiesArgs) CertificateDetailsPropertiesPtrInput {
	return (*certificateDetailsPropertiesPtrType)(v)
}

func (*certificateDetailsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateDetailsProperties)(nil)).Elem()
}

func (i *certificateDetailsPropertiesPtrType) ToCertificateDetailsPropertiesPtrOutput() CertificateDetailsPropertiesPtrOutput {
	return i.ToCertificateDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i *certificateDetailsPropertiesPtrType) ToCertificateDetailsPropertiesPtrOutputWithContext(ctx context.Context) CertificateDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDetailsPropertiesPtrOutput)
}

type CertificateDetailsPropertiesOutput struct{ *pulumi.OutputState }

func (CertificateDetailsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDetailsProperties)(nil)).Elem()
}

func (o CertificateDetailsPropertiesOutput) ToCertificateDetailsPropertiesOutput() CertificateDetailsPropertiesOutput {
	return o
}

func (o CertificateDetailsPropertiesOutput) ToCertificateDetailsPropertiesOutputWithContext(ctx context.Context) CertificateDetailsPropertiesOutput {
	return o
}

func (o CertificateDetailsPropertiesOutput) ToCertificateDetailsPropertiesPtrOutput() CertificateDetailsPropertiesPtrOutput {
	return o.ToCertificateDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (o CertificateDetailsPropertiesOutput) ToCertificateDetailsPropertiesPtrOutputWithContext(ctx context.Context) CertificateDetailsPropertiesPtrOutput {
	return o.ApplyT(func(v CertificateDetailsProperties) *CertificateDetailsProperties {
		return &v
	}).(CertificateDetailsPropertiesPtrOutput)
}

// Issuer
func (o CertificateDetailsPropertiesOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetailsProperties) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// Valid to
func (o CertificateDetailsPropertiesOutput) NotAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetailsProperties) *string { return v.NotAfter }).(pulumi.StringPtrOutput)
}

// Valid from
func (o CertificateDetailsPropertiesOutput) NotBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetailsProperties) *string { return v.NotBefore }).(pulumi.StringPtrOutput)
}

// Raw certificate data
func (o CertificateDetailsPropertiesOutput) RawData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetailsProperties) *string { return v.RawData }).(pulumi.StringPtrOutput)
}

// Serial Number
func (o CertificateDetailsPropertiesOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetailsProperties) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// Signature Algorithm
func (o CertificateDetailsPropertiesOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetailsProperties) *string { return v.SignatureAlgorithm }).(pulumi.StringPtrOutput)
}

// Subject
func (o CertificateDetailsPropertiesOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetailsProperties) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

// Thumbprint
func (o CertificateDetailsPropertiesOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetailsProperties) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// Version
func (o CertificateDetailsPropertiesOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CertificateDetailsProperties) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type CertificateDetailsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (CertificateDetailsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateDetailsProperties)(nil)).Elem()
}

func (o CertificateDetailsPropertiesPtrOutput) ToCertificateDetailsPropertiesPtrOutput() CertificateDetailsPropertiesPtrOutput {
	return o
}

func (o CertificateDetailsPropertiesPtrOutput) ToCertificateDetailsPropertiesPtrOutputWithContext(ctx context.Context) CertificateDetailsPropertiesPtrOutput {
	return o
}

func (o CertificateDetailsPropertiesPtrOutput) Elem() CertificateDetailsPropertiesOutput {
	return o.ApplyT(func(v *CertificateDetailsProperties) CertificateDetailsProperties { return *v }).(CertificateDetailsPropertiesOutput)
}

// Issuer
func (o CertificateDetailsPropertiesPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

// Valid to
func (o CertificateDetailsPropertiesPtrOutput) NotAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.NotAfter
	}).(pulumi.StringPtrOutput)
}

// Valid from
func (o CertificateDetailsPropertiesPtrOutput) NotBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.NotBefore
	}).(pulumi.StringPtrOutput)
}

// Raw certificate data
func (o CertificateDetailsPropertiesPtrOutput) RawData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.RawData
	}).(pulumi.StringPtrOutput)
}

// Serial Number
func (o CertificateDetailsPropertiesPtrOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.SerialNumber
	}).(pulumi.StringPtrOutput)
}

// Signature Algorithm
func (o CertificateDetailsPropertiesPtrOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.SignatureAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Subject
func (o CertificateDetailsPropertiesPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.Subject
	}).(pulumi.StringPtrOutput)
}

// Thumbprint
func (o CertificateDetailsPropertiesPtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// Version
func (o CertificateDetailsPropertiesPtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsProperties) *int {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.IntPtrOutput)
}

// Certificate Details
type CertificateDetailsResponse struct {
	// Resource Id
	Id *string `pulumi:"id"`
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                               `pulumi:"name"`
	Properties *CertificateDetailsResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// CertificateDetailsResponseInput is an input type that accepts CertificateDetailsResponseArgs and CertificateDetailsResponseOutput values.
// You can construct a concrete instance of `CertificateDetailsResponseInput` via:
//
//          CertificateDetailsResponseArgs{...}
type CertificateDetailsResponseInput interface {
	pulumi.Input

	ToCertificateDetailsResponseOutput() CertificateDetailsResponseOutput
	ToCertificateDetailsResponseOutputWithContext(context.Context) CertificateDetailsResponseOutput
}

// Certificate Details
type CertificateDetailsResponseArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput                        `pulumi:"name"`
	Properties CertificateDetailsResponsePropertiesPtrInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CertificateDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDetailsResponse)(nil)).Elem()
}

func (i CertificateDetailsResponseArgs) ToCertificateDetailsResponseOutput() CertificateDetailsResponseOutput {
	return i.ToCertificateDetailsResponseOutputWithContext(context.Background())
}

func (i CertificateDetailsResponseArgs) ToCertificateDetailsResponseOutputWithContext(ctx context.Context) CertificateDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDetailsResponseOutput)
}

func (i CertificateDetailsResponseArgs) ToCertificateDetailsResponsePtrOutput() CertificateDetailsResponsePtrOutput {
	return i.ToCertificateDetailsResponsePtrOutputWithContext(context.Background())
}

func (i CertificateDetailsResponseArgs) ToCertificateDetailsResponsePtrOutputWithContext(ctx context.Context) CertificateDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDetailsResponseOutput).ToCertificateDetailsResponsePtrOutputWithContext(ctx)
}

// CertificateDetailsResponsePtrInput is an input type that accepts CertificateDetailsResponseArgs, CertificateDetailsResponsePtr and CertificateDetailsResponsePtrOutput values.
// You can construct a concrete instance of `CertificateDetailsResponsePtrInput` via:
//
//          CertificateDetailsResponseArgs{...}
//
//  or:
//
//          nil
type CertificateDetailsResponsePtrInput interface {
	pulumi.Input

	ToCertificateDetailsResponsePtrOutput() CertificateDetailsResponsePtrOutput
	ToCertificateDetailsResponsePtrOutputWithContext(context.Context) CertificateDetailsResponsePtrOutput
}

type certificateDetailsResponsePtrType CertificateDetailsResponseArgs

func CertificateDetailsResponsePtr(v *CertificateDetailsResponseArgs) CertificateDetailsResponsePtrInput {
	return (*certificateDetailsResponsePtrType)(v)
}

func (*certificateDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateDetailsResponse)(nil)).Elem()
}

func (i *certificateDetailsResponsePtrType) ToCertificateDetailsResponsePtrOutput() CertificateDetailsResponsePtrOutput {
	return i.ToCertificateDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *certificateDetailsResponsePtrType) ToCertificateDetailsResponsePtrOutputWithContext(ctx context.Context) CertificateDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDetailsResponsePtrOutput)
}

// Certificate Details
type CertificateDetailsResponseOutput struct{ *pulumi.OutputState }

func (CertificateDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDetailsResponse)(nil)).Elem()
}

func (o CertificateDetailsResponseOutput) ToCertificateDetailsResponseOutput() CertificateDetailsResponseOutput {
	return o
}

func (o CertificateDetailsResponseOutput) ToCertificateDetailsResponseOutputWithContext(ctx context.Context) CertificateDetailsResponseOutput {
	return o
}

func (o CertificateDetailsResponseOutput) ToCertificateDetailsResponsePtrOutput() CertificateDetailsResponsePtrOutput {
	return o.ToCertificateDetailsResponsePtrOutputWithContext(context.Background())
}

func (o CertificateDetailsResponseOutput) ToCertificateDetailsResponsePtrOutputWithContext(ctx context.Context) CertificateDetailsResponsePtrOutput {
	return o.ApplyT(func(v CertificateDetailsResponse) *CertificateDetailsResponse {
		return &v
	}).(CertificateDetailsResponsePtrOutput)
}

// Resource Id
func (o CertificateDetailsResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetailsResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Kind of resource
func (o CertificateDetailsResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetailsResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o CertificateDetailsResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDetailsResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o CertificateDetailsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetailsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o CertificateDetailsResponseOutput) Properties() CertificateDetailsResponsePropertiesPtrOutput {
	return o.ApplyT(func(v CertificateDetailsResponse) *CertificateDetailsResponseProperties { return v.Properties }).(CertificateDetailsResponsePropertiesPtrOutput)
}

// Resource tags
func (o CertificateDetailsResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CertificateDetailsResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o CertificateDetailsResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetailsResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CertificateDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (CertificateDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateDetailsResponse)(nil)).Elem()
}

func (o CertificateDetailsResponsePtrOutput) ToCertificateDetailsResponsePtrOutput() CertificateDetailsResponsePtrOutput {
	return o
}

func (o CertificateDetailsResponsePtrOutput) ToCertificateDetailsResponsePtrOutputWithContext(ctx context.Context) CertificateDetailsResponsePtrOutput {
	return o
}

func (o CertificateDetailsResponsePtrOutput) Elem() CertificateDetailsResponseOutput {
	return o.ApplyT(func(v *CertificateDetailsResponse) CertificateDetailsResponse { return *v }).(CertificateDetailsResponseOutput)
}

// Resource Id
func (o CertificateDetailsResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Kind of resource
func (o CertificateDetailsResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Resource Location
func (o CertificateDetailsResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource Name
func (o CertificateDetailsResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o CertificateDetailsResponsePtrOutput) Properties() CertificateDetailsResponsePropertiesPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponse) *CertificateDetailsResponseProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(CertificateDetailsResponsePropertiesPtrOutput)
}

// Resource tags
func (o CertificateDetailsResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CertificateDetailsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type
func (o CertificateDetailsResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type CertificateDetailsResponseProperties struct {
	// Issuer
	Issuer *string `pulumi:"issuer"`
	// Valid to
	NotAfter *string `pulumi:"notAfter"`
	// Valid from
	NotBefore *string `pulumi:"notBefore"`
	// Raw certificate data
	RawData *string `pulumi:"rawData"`
	// Serial Number
	SerialNumber *string `pulumi:"serialNumber"`
	// Signature Algorithm
	SignatureAlgorithm *string `pulumi:"signatureAlgorithm"`
	// Subject
	Subject *string `pulumi:"subject"`
	// Thumbprint
	Thumbprint *string `pulumi:"thumbprint"`
	// Version
	Version *int `pulumi:"version"`
}

// CertificateDetailsResponsePropertiesInput is an input type that accepts CertificateDetailsResponsePropertiesArgs and CertificateDetailsResponsePropertiesOutput values.
// You can construct a concrete instance of `CertificateDetailsResponsePropertiesInput` via:
//
//          CertificateDetailsResponsePropertiesArgs{...}
type CertificateDetailsResponsePropertiesInput interface {
	pulumi.Input

	ToCertificateDetailsResponsePropertiesOutput() CertificateDetailsResponsePropertiesOutput
	ToCertificateDetailsResponsePropertiesOutputWithContext(context.Context) CertificateDetailsResponsePropertiesOutput
}

type CertificateDetailsResponsePropertiesArgs struct {
	// Issuer
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// Valid to
	NotAfter pulumi.StringPtrInput `pulumi:"notAfter"`
	// Valid from
	NotBefore pulumi.StringPtrInput `pulumi:"notBefore"`
	// Raw certificate data
	RawData pulumi.StringPtrInput `pulumi:"rawData"`
	// Serial Number
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// Signature Algorithm
	SignatureAlgorithm pulumi.StringPtrInput `pulumi:"signatureAlgorithm"`
	// Subject
	Subject pulumi.StringPtrInput `pulumi:"subject"`
	// Thumbprint
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
	// Version
	Version pulumi.IntPtrInput `pulumi:"version"`
}

func (CertificateDetailsResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDetailsResponseProperties)(nil)).Elem()
}

func (i CertificateDetailsResponsePropertiesArgs) ToCertificateDetailsResponsePropertiesOutput() CertificateDetailsResponsePropertiesOutput {
	return i.ToCertificateDetailsResponsePropertiesOutputWithContext(context.Background())
}

func (i CertificateDetailsResponsePropertiesArgs) ToCertificateDetailsResponsePropertiesOutputWithContext(ctx context.Context) CertificateDetailsResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDetailsResponsePropertiesOutput)
}

func (i CertificateDetailsResponsePropertiesArgs) ToCertificateDetailsResponsePropertiesPtrOutput() CertificateDetailsResponsePropertiesPtrOutput {
	return i.ToCertificateDetailsResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i CertificateDetailsResponsePropertiesArgs) ToCertificateDetailsResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateDetailsResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDetailsResponsePropertiesOutput).ToCertificateDetailsResponsePropertiesPtrOutputWithContext(ctx)
}

// CertificateDetailsResponsePropertiesPtrInput is an input type that accepts CertificateDetailsResponsePropertiesArgs, CertificateDetailsResponsePropertiesPtr and CertificateDetailsResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `CertificateDetailsResponsePropertiesPtrInput` via:
//
//          CertificateDetailsResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type CertificateDetailsResponsePropertiesPtrInput interface {
	pulumi.Input

	ToCertificateDetailsResponsePropertiesPtrOutput() CertificateDetailsResponsePropertiesPtrOutput
	ToCertificateDetailsResponsePropertiesPtrOutputWithContext(context.Context) CertificateDetailsResponsePropertiesPtrOutput
}

type certificateDetailsResponsePropertiesPtrType CertificateDetailsResponsePropertiesArgs

func CertificateDetailsResponsePropertiesPtr(v *CertificateDetailsResponsePropertiesArgs) CertificateDetailsResponsePropertiesPtrInput {
	return (*certificateDetailsResponsePropertiesPtrType)(v)
}

func (*certificateDetailsResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateDetailsResponseProperties)(nil)).Elem()
}

func (i *certificateDetailsResponsePropertiesPtrType) ToCertificateDetailsResponsePropertiesPtrOutput() CertificateDetailsResponsePropertiesPtrOutput {
	return i.ToCertificateDetailsResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *certificateDetailsResponsePropertiesPtrType) ToCertificateDetailsResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateDetailsResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDetailsResponsePropertiesPtrOutput)
}

type CertificateDetailsResponsePropertiesOutput struct{ *pulumi.OutputState }

func (CertificateDetailsResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDetailsResponseProperties)(nil)).Elem()
}

func (o CertificateDetailsResponsePropertiesOutput) ToCertificateDetailsResponsePropertiesOutput() CertificateDetailsResponsePropertiesOutput {
	return o
}

func (o CertificateDetailsResponsePropertiesOutput) ToCertificateDetailsResponsePropertiesOutputWithContext(ctx context.Context) CertificateDetailsResponsePropertiesOutput {
	return o
}

func (o CertificateDetailsResponsePropertiesOutput) ToCertificateDetailsResponsePropertiesPtrOutput() CertificateDetailsResponsePropertiesPtrOutput {
	return o.ToCertificateDetailsResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o CertificateDetailsResponsePropertiesOutput) ToCertificateDetailsResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateDetailsResponsePropertiesPtrOutput {
	return o.ApplyT(func(v CertificateDetailsResponseProperties) *CertificateDetailsResponseProperties {
		return &v
	}).(CertificateDetailsResponsePropertiesPtrOutput)
}

// Issuer
func (o CertificateDetailsResponsePropertiesOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetailsResponseProperties) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// Valid to
func (o CertificateDetailsResponsePropertiesOutput) NotAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetailsResponseProperties) *string { return v.NotAfter }).(pulumi.StringPtrOutput)
}

// Valid from
func (o CertificateDetailsResponsePropertiesOutput) NotBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetailsResponseProperties) *string { return v.NotBefore }).(pulumi.StringPtrOutput)
}

// Raw certificate data
func (o CertificateDetailsResponsePropertiesOutput) RawData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetailsResponseProperties) *string { return v.RawData }).(pulumi.StringPtrOutput)
}

// Serial Number
func (o CertificateDetailsResponsePropertiesOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetailsResponseProperties) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// Signature Algorithm
func (o CertificateDetailsResponsePropertiesOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetailsResponseProperties) *string { return v.SignatureAlgorithm }).(pulumi.StringPtrOutput)
}

// Subject
func (o CertificateDetailsResponsePropertiesOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetailsResponseProperties) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

// Thumbprint
func (o CertificateDetailsResponsePropertiesOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDetailsResponseProperties) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// Version
func (o CertificateDetailsResponsePropertiesOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CertificateDetailsResponseProperties) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type CertificateDetailsResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (CertificateDetailsResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateDetailsResponseProperties)(nil)).Elem()
}

func (o CertificateDetailsResponsePropertiesPtrOutput) ToCertificateDetailsResponsePropertiesPtrOutput() CertificateDetailsResponsePropertiesPtrOutput {
	return o
}

func (o CertificateDetailsResponsePropertiesPtrOutput) ToCertificateDetailsResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateDetailsResponsePropertiesPtrOutput {
	return o
}

func (o CertificateDetailsResponsePropertiesPtrOutput) Elem() CertificateDetailsResponsePropertiesOutput {
	return o.ApplyT(func(v *CertificateDetailsResponseProperties) CertificateDetailsResponseProperties { return *v }).(CertificateDetailsResponsePropertiesOutput)
}

// Issuer
func (o CertificateDetailsResponsePropertiesPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

// Valid to
func (o CertificateDetailsResponsePropertiesPtrOutput) NotAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.NotAfter
	}).(pulumi.StringPtrOutput)
}

// Valid from
func (o CertificateDetailsResponsePropertiesPtrOutput) NotBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.NotBefore
	}).(pulumi.StringPtrOutput)
}

// Raw certificate data
func (o CertificateDetailsResponsePropertiesPtrOutput) RawData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.RawData
	}).(pulumi.StringPtrOutput)
}

// Serial Number
func (o CertificateDetailsResponsePropertiesPtrOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.SerialNumber
	}).(pulumi.StringPtrOutput)
}

// Signature Algorithm
func (o CertificateDetailsResponsePropertiesPtrOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.SignatureAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Subject
func (o CertificateDetailsResponsePropertiesPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Subject
	}).(pulumi.StringPtrOutput)
}

// Thumbprint
func (o CertificateDetailsResponsePropertiesPtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// Version
func (o CertificateDetailsResponsePropertiesPtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CertificateDetailsResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.IntPtrOutput)
}

// Certificate purchase order
type CertificateOrderType struct {
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                            `pulumi:"name"`
	Properties CertificateOrderResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// CertificateOrderTypeInput is an input type that accepts CertificateOrderTypeArgs and CertificateOrderTypeOutput values.
// You can construct a concrete instance of `CertificateOrderTypeInput` via:
//
//          CertificateOrderTypeArgs{...}
type CertificateOrderTypeInput interface {
	pulumi.Input

	ToCertificateOrderTypeOutput() CertificateOrderTypeOutput
	ToCertificateOrderTypeOutputWithContext(context.Context) CertificateOrderTypeOutput
}

// Certificate purchase order
type CertificateOrderTypeArgs struct {
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput                   `pulumi:"name"`
	Properties CertificateOrderResponsePropertiesInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CertificateOrderTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateOrderType)(nil)).Elem()
}

func (i CertificateOrderTypeArgs) ToCertificateOrderTypeOutput() CertificateOrderTypeOutput {
	return i.ToCertificateOrderTypeOutputWithContext(context.Background())
}

func (i CertificateOrderTypeArgs) ToCertificateOrderTypeOutputWithContext(ctx context.Context) CertificateOrderTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOrderTypeOutput)
}

// Certificate purchase order
type CertificateOrderTypeOutput struct{ *pulumi.OutputState }

func (CertificateOrderTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateOrderType)(nil)).Elem()
}

func (o CertificateOrderTypeOutput) ToCertificateOrderTypeOutput() CertificateOrderTypeOutput {
	return o
}

func (o CertificateOrderTypeOutput) ToCertificateOrderTypeOutputWithContext(ctx context.Context) CertificateOrderTypeOutput {
	return o
}

// Kind of resource
func (o CertificateOrderTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o CertificateOrderTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateOrderType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o CertificateOrderTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o CertificateOrderTypeOutput) Properties() CertificateOrderResponsePropertiesOutput {
	return o.ApplyT(func(v CertificateOrderType) CertificateOrderResponseProperties { return v.Properties }).(CertificateOrderResponsePropertiesOutput)
}

// Resource tags
func (o CertificateOrderTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CertificateOrderType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o CertificateOrderTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Class representing the Key Vault container for certificate purchased through Azure
type CertificateOrderCertificateType struct {
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name       *string                                       `pulumi:"name"`
	Properties CertificateOrderCertificateResponseProperties `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

// CertificateOrderCertificateTypeInput is an input type that accepts CertificateOrderCertificateTypeArgs and CertificateOrderCertificateTypeOutput values.
// You can construct a concrete instance of `CertificateOrderCertificateTypeInput` via:
//
//          CertificateOrderCertificateTypeArgs{...}
type CertificateOrderCertificateTypeInput interface {
	pulumi.Input

	ToCertificateOrderCertificateTypeOutput() CertificateOrderCertificateTypeOutput
	ToCertificateOrderCertificateTypeOutputWithContext(context.Context) CertificateOrderCertificateTypeOutput
}

// Class representing the Key Vault container for certificate purchased through Azure
type CertificateOrderCertificateTypeArgs struct {
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name       pulumi.StringPtrInput                              `pulumi:"name"`
	Properties CertificateOrderCertificateResponsePropertiesInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CertificateOrderCertificateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateOrderCertificateType)(nil)).Elem()
}

func (i CertificateOrderCertificateTypeArgs) ToCertificateOrderCertificateTypeOutput() CertificateOrderCertificateTypeOutput {
	return i.ToCertificateOrderCertificateTypeOutputWithContext(context.Background())
}

func (i CertificateOrderCertificateTypeArgs) ToCertificateOrderCertificateTypeOutputWithContext(ctx context.Context) CertificateOrderCertificateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOrderCertificateTypeOutput)
}

// Class representing the Key Vault container for certificate purchased through Azure
type CertificateOrderCertificateTypeOutput struct{ *pulumi.OutputState }

func (CertificateOrderCertificateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateOrderCertificateType)(nil)).Elem()
}

func (o CertificateOrderCertificateTypeOutput) ToCertificateOrderCertificateTypeOutput() CertificateOrderCertificateTypeOutput {
	return o
}

func (o CertificateOrderCertificateTypeOutput) ToCertificateOrderCertificateTypeOutputWithContext(ctx context.Context) CertificateOrderCertificateTypeOutput {
	return o
}

// Kind of resource
func (o CertificateOrderCertificateTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderCertificateType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o CertificateOrderCertificateTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateOrderCertificateType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o CertificateOrderCertificateTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderCertificateType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o CertificateOrderCertificateTypeOutput) Properties() CertificateOrderCertificateResponsePropertiesOutput {
	return o.ApplyT(func(v CertificateOrderCertificateType) CertificateOrderCertificateResponseProperties {
		return v.Properties
	}).(CertificateOrderCertificateResponsePropertiesOutput)
}

// Resource tags
func (o CertificateOrderCertificateTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CertificateOrderCertificateType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o CertificateOrderCertificateTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderCertificateType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CertificateOrderCertificateProperties struct {
	// Key Vault Csm resource Id
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Key Vault secret name
	KeyVaultSecretName *string `pulumi:"keyVaultSecretName"`
	// Status of the Key Vault secret
	ProvisioningState *string `pulumi:"provisioningState"`
}

// CertificateOrderCertificatePropertiesInput is an input type that accepts CertificateOrderCertificatePropertiesArgs and CertificateOrderCertificatePropertiesOutput values.
// You can construct a concrete instance of `CertificateOrderCertificatePropertiesInput` via:
//
//          CertificateOrderCertificatePropertiesArgs{...}
type CertificateOrderCertificatePropertiesInput interface {
	pulumi.Input

	ToCertificateOrderCertificatePropertiesOutput() CertificateOrderCertificatePropertiesOutput
	ToCertificateOrderCertificatePropertiesOutputWithContext(context.Context) CertificateOrderCertificatePropertiesOutput
}

type CertificateOrderCertificatePropertiesArgs struct {
	// Key Vault Csm resource Id
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Key Vault secret name
	KeyVaultSecretName pulumi.StringPtrInput `pulumi:"keyVaultSecretName"`
	// Status of the Key Vault secret
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (CertificateOrderCertificatePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateOrderCertificateProperties)(nil)).Elem()
}

func (i CertificateOrderCertificatePropertiesArgs) ToCertificateOrderCertificatePropertiesOutput() CertificateOrderCertificatePropertiesOutput {
	return i.ToCertificateOrderCertificatePropertiesOutputWithContext(context.Background())
}

func (i CertificateOrderCertificatePropertiesArgs) ToCertificateOrderCertificatePropertiesOutputWithContext(ctx context.Context) CertificateOrderCertificatePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOrderCertificatePropertiesOutput)
}

func (i CertificateOrderCertificatePropertiesArgs) ToCertificateOrderCertificatePropertiesPtrOutput() CertificateOrderCertificatePropertiesPtrOutput {
	return i.ToCertificateOrderCertificatePropertiesPtrOutputWithContext(context.Background())
}

func (i CertificateOrderCertificatePropertiesArgs) ToCertificateOrderCertificatePropertiesPtrOutputWithContext(ctx context.Context) CertificateOrderCertificatePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOrderCertificatePropertiesOutput).ToCertificateOrderCertificatePropertiesPtrOutputWithContext(ctx)
}

// CertificateOrderCertificatePropertiesPtrInput is an input type that accepts CertificateOrderCertificatePropertiesArgs, CertificateOrderCertificatePropertiesPtr and CertificateOrderCertificatePropertiesPtrOutput values.
// You can construct a concrete instance of `CertificateOrderCertificatePropertiesPtrInput` via:
//
//          CertificateOrderCertificatePropertiesArgs{...}
//
//  or:
//
//          nil
type CertificateOrderCertificatePropertiesPtrInput interface {
	pulumi.Input

	ToCertificateOrderCertificatePropertiesPtrOutput() CertificateOrderCertificatePropertiesPtrOutput
	ToCertificateOrderCertificatePropertiesPtrOutputWithContext(context.Context) CertificateOrderCertificatePropertiesPtrOutput
}

type certificateOrderCertificatePropertiesPtrType CertificateOrderCertificatePropertiesArgs

func CertificateOrderCertificatePropertiesPtr(v *CertificateOrderCertificatePropertiesArgs) CertificateOrderCertificatePropertiesPtrInput {
	return (*certificateOrderCertificatePropertiesPtrType)(v)
}

func (*certificateOrderCertificatePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateOrderCertificateProperties)(nil)).Elem()
}

func (i *certificateOrderCertificatePropertiesPtrType) ToCertificateOrderCertificatePropertiesPtrOutput() CertificateOrderCertificatePropertiesPtrOutput {
	return i.ToCertificateOrderCertificatePropertiesPtrOutputWithContext(context.Background())
}

func (i *certificateOrderCertificatePropertiesPtrType) ToCertificateOrderCertificatePropertiesPtrOutputWithContext(ctx context.Context) CertificateOrderCertificatePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOrderCertificatePropertiesPtrOutput)
}

type CertificateOrderCertificatePropertiesOutput struct{ *pulumi.OutputState }

func (CertificateOrderCertificatePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateOrderCertificateProperties)(nil)).Elem()
}

func (o CertificateOrderCertificatePropertiesOutput) ToCertificateOrderCertificatePropertiesOutput() CertificateOrderCertificatePropertiesOutput {
	return o
}

func (o CertificateOrderCertificatePropertiesOutput) ToCertificateOrderCertificatePropertiesOutputWithContext(ctx context.Context) CertificateOrderCertificatePropertiesOutput {
	return o
}

func (o CertificateOrderCertificatePropertiesOutput) ToCertificateOrderCertificatePropertiesPtrOutput() CertificateOrderCertificatePropertiesPtrOutput {
	return o.ToCertificateOrderCertificatePropertiesPtrOutputWithContext(context.Background())
}

func (o CertificateOrderCertificatePropertiesOutput) ToCertificateOrderCertificatePropertiesPtrOutputWithContext(ctx context.Context) CertificateOrderCertificatePropertiesPtrOutput {
	return o.ApplyT(func(v CertificateOrderCertificateProperties) *CertificateOrderCertificateProperties {
		return &v
	}).(CertificateOrderCertificatePropertiesPtrOutput)
}

// Key Vault Csm resource Id
func (o CertificateOrderCertificatePropertiesOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderCertificateProperties) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Key Vault secret name
func (o CertificateOrderCertificatePropertiesOutput) KeyVaultSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderCertificateProperties) *string { return v.KeyVaultSecretName }).(pulumi.StringPtrOutput)
}

// Status of the Key Vault secret
func (o CertificateOrderCertificatePropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderCertificateProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type CertificateOrderCertificatePropertiesPtrOutput struct{ *pulumi.OutputState }

func (CertificateOrderCertificatePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateOrderCertificateProperties)(nil)).Elem()
}

func (o CertificateOrderCertificatePropertiesPtrOutput) ToCertificateOrderCertificatePropertiesPtrOutput() CertificateOrderCertificatePropertiesPtrOutput {
	return o
}

func (o CertificateOrderCertificatePropertiesPtrOutput) ToCertificateOrderCertificatePropertiesPtrOutputWithContext(ctx context.Context) CertificateOrderCertificatePropertiesPtrOutput {
	return o
}

func (o CertificateOrderCertificatePropertiesPtrOutput) Elem() CertificateOrderCertificatePropertiesOutput {
	return o.ApplyT(func(v *CertificateOrderCertificateProperties) CertificateOrderCertificateProperties { return *v }).(CertificateOrderCertificatePropertiesOutput)
}

// Key Vault Csm resource Id
func (o CertificateOrderCertificatePropertiesPtrOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderCertificateProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultId
	}).(pulumi.StringPtrOutput)
}

// Key Vault secret name
func (o CertificateOrderCertificatePropertiesPtrOutput) KeyVaultSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderCertificateProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultSecretName
	}).(pulumi.StringPtrOutput)
}

// Status of the Key Vault secret
func (o CertificateOrderCertificatePropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderCertificateProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

type CertificateOrderCertificateResponseProperties struct {
	// Key Vault Csm resource Id
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Key Vault secret name
	KeyVaultSecretName *string `pulumi:"keyVaultSecretName"`
	// Status of the Key Vault secret
	ProvisioningState *string `pulumi:"provisioningState"`
}

// CertificateOrderCertificateResponsePropertiesInput is an input type that accepts CertificateOrderCertificateResponsePropertiesArgs and CertificateOrderCertificateResponsePropertiesOutput values.
// You can construct a concrete instance of `CertificateOrderCertificateResponsePropertiesInput` via:
//
//          CertificateOrderCertificateResponsePropertiesArgs{...}
type CertificateOrderCertificateResponsePropertiesInput interface {
	pulumi.Input

	ToCertificateOrderCertificateResponsePropertiesOutput() CertificateOrderCertificateResponsePropertiesOutput
	ToCertificateOrderCertificateResponsePropertiesOutputWithContext(context.Context) CertificateOrderCertificateResponsePropertiesOutput
}

type CertificateOrderCertificateResponsePropertiesArgs struct {
	// Key Vault Csm resource Id
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Key Vault secret name
	KeyVaultSecretName pulumi.StringPtrInput `pulumi:"keyVaultSecretName"`
	// Status of the Key Vault secret
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (CertificateOrderCertificateResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateOrderCertificateResponseProperties)(nil)).Elem()
}

func (i CertificateOrderCertificateResponsePropertiesArgs) ToCertificateOrderCertificateResponsePropertiesOutput() CertificateOrderCertificateResponsePropertiesOutput {
	return i.ToCertificateOrderCertificateResponsePropertiesOutputWithContext(context.Background())
}

func (i CertificateOrderCertificateResponsePropertiesArgs) ToCertificateOrderCertificateResponsePropertiesOutputWithContext(ctx context.Context) CertificateOrderCertificateResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOrderCertificateResponsePropertiesOutput)
}

func (i CertificateOrderCertificateResponsePropertiesArgs) ToCertificateOrderCertificateResponsePropertiesPtrOutput() CertificateOrderCertificateResponsePropertiesPtrOutput {
	return i.ToCertificateOrderCertificateResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i CertificateOrderCertificateResponsePropertiesArgs) ToCertificateOrderCertificateResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateOrderCertificateResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOrderCertificateResponsePropertiesOutput).ToCertificateOrderCertificateResponsePropertiesPtrOutputWithContext(ctx)
}

// CertificateOrderCertificateResponsePropertiesPtrInput is an input type that accepts CertificateOrderCertificateResponsePropertiesArgs, CertificateOrderCertificateResponsePropertiesPtr and CertificateOrderCertificateResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `CertificateOrderCertificateResponsePropertiesPtrInput` via:
//
//          CertificateOrderCertificateResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type CertificateOrderCertificateResponsePropertiesPtrInput interface {
	pulumi.Input

	ToCertificateOrderCertificateResponsePropertiesPtrOutput() CertificateOrderCertificateResponsePropertiesPtrOutput
	ToCertificateOrderCertificateResponsePropertiesPtrOutputWithContext(context.Context) CertificateOrderCertificateResponsePropertiesPtrOutput
}

type certificateOrderCertificateResponsePropertiesPtrType CertificateOrderCertificateResponsePropertiesArgs

func CertificateOrderCertificateResponsePropertiesPtr(v *CertificateOrderCertificateResponsePropertiesArgs) CertificateOrderCertificateResponsePropertiesPtrInput {
	return (*certificateOrderCertificateResponsePropertiesPtrType)(v)
}

func (*certificateOrderCertificateResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateOrderCertificateResponseProperties)(nil)).Elem()
}

func (i *certificateOrderCertificateResponsePropertiesPtrType) ToCertificateOrderCertificateResponsePropertiesPtrOutput() CertificateOrderCertificateResponsePropertiesPtrOutput {
	return i.ToCertificateOrderCertificateResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *certificateOrderCertificateResponsePropertiesPtrType) ToCertificateOrderCertificateResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateOrderCertificateResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOrderCertificateResponsePropertiesPtrOutput)
}

type CertificateOrderCertificateResponsePropertiesOutput struct{ *pulumi.OutputState }

func (CertificateOrderCertificateResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateOrderCertificateResponseProperties)(nil)).Elem()
}

func (o CertificateOrderCertificateResponsePropertiesOutput) ToCertificateOrderCertificateResponsePropertiesOutput() CertificateOrderCertificateResponsePropertiesOutput {
	return o
}

func (o CertificateOrderCertificateResponsePropertiesOutput) ToCertificateOrderCertificateResponsePropertiesOutputWithContext(ctx context.Context) CertificateOrderCertificateResponsePropertiesOutput {
	return o
}

func (o CertificateOrderCertificateResponsePropertiesOutput) ToCertificateOrderCertificateResponsePropertiesPtrOutput() CertificateOrderCertificateResponsePropertiesPtrOutput {
	return o.ToCertificateOrderCertificateResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o CertificateOrderCertificateResponsePropertiesOutput) ToCertificateOrderCertificateResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateOrderCertificateResponsePropertiesPtrOutput {
	return o.ApplyT(func(v CertificateOrderCertificateResponseProperties) *CertificateOrderCertificateResponseProperties {
		return &v
	}).(CertificateOrderCertificateResponsePropertiesPtrOutput)
}

// Key Vault Csm resource Id
func (o CertificateOrderCertificateResponsePropertiesOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderCertificateResponseProperties) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Key Vault secret name
func (o CertificateOrderCertificateResponsePropertiesOutput) KeyVaultSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderCertificateResponseProperties) *string { return v.KeyVaultSecretName }).(pulumi.StringPtrOutput)
}

// Status of the Key Vault secret
func (o CertificateOrderCertificateResponsePropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderCertificateResponseProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type CertificateOrderCertificateResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (CertificateOrderCertificateResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateOrderCertificateResponseProperties)(nil)).Elem()
}

func (o CertificateOrderCertificateResponsePropertiesPtrOutput) ToCertificateOrderCertificateResponsePropertiesPtrOutput() CertificateOrderCertificateResponsePropertiesPtrOutput {
	return o
}

func (o CertificateOrderCertificateResponsePropertiesPtrOutput) ToCertificateOrderCertificateResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateOrderCertificateResponsePropertiesPtrOutput {
	return o
}

func (o CertificateOrderCertificateResponsePropertiesPtrOutput) Elem() CertificateOrderCertificateResponsePropertiesOutput {
	return o.ApplyT(func(v *CertificateOrderCertificateResponseProperties) CertificateOrderCertificateResponseProperties {
		return *v
	}).(CertificateOrderCertificateResponsePropertiesOutput)
}

// Key Vault Csm resource Id
func (o CertificateOrderCertificateResponsePropertiesPtrOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderCertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultId
	}).(pulumi.StringPtrOutput)
}

// Key Vault secret name
func (o CertificateOrderCertificateResponsePropertiesPtrOutput) KeyVaultSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderCertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultSecretName
	}).(pulumi.StringPtrOutput)
}

// Status of the Key Vault secret
func (o CertificateOrderCertificateResponsePropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderCertificateResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

type CertificateOrderProperties struct {
	// Auto renew
	AutoRenew *bool `pulumi:"autoRenew"`
	// State of the Key Vault secret
	Certificates map[string]string `pulumi:"certificates"`
	// Last CSR that was created for this order
	Csr *string `pulumi:"csr"`
	// Certificate distinguished name
	DistinguishedName *string `pulumi:"distinguishedName"`
	// Domain Verification Token
	DomainVerificationToken *string `pulumi:"domainVerificationToken"`
	// Certificate expiration time
	ExpirationTime *string `pulumi:"expirationTime"`
	// Intermediate certificate
	Intermediate *CertificateDetails `pulumi:"intermediate"`
	// Certificate Key Size
	KeySize *int `pulumi:"keySize"`
	// Certificate last issuance time
	LastCertificateIssuanceTime *string `pulumi:"lastCertificateIssuanceTime"`
	// Certificate product type
	ProductType *string `pulumi:"productType"`
	// Status of certificate order
	ProvisioningState *string `pulumi:"provisioningState"`
	// Root certificate
	Root *CertificateDetails `pulumi:"root"`
	// Current serial number of the certificate
	SerialNumber *string `pulumi:"serialNumber"`
	// Signed certificate
	SignedCertificate *CertificateDetails `pulumi:"signedCertificate"`
	// Current order status
	Status *string `pulumi:"status"`
	// Duration in years (must be between 1 and 3)
	ValidityInYears *int `pulumi:"validityInYears"`
}

// CertificateOrderPropertiesInput is an input type that accepts CertificateOrderPropertiesArgs and CertificateOrderPropertiesOutput values.
// You can construct a concrete instance of `CertificateOrderPropertiesInput` via:
//
//          CertificateOrderPropertiesArgs{...}
type CertificateOrderPropertiesInput interface {
	pulumi.Input

	ToCertificateOrderPropertiesOutput() CertificateOrderPropertiesOutput
	ToCertificateOrderPropertiesOutputWithContext(context.Context) CertificateOrderPropertiesOutput
}

type CertificateOrderPropertiesArgs struct {
	// Auto renew
	AutoRenew pulumi.BoolPtrInput `pulumi:"autoRenew"`
	// State of the Key Vault secret
	Certificates pulumi.StringMapInput `pulumi:"certificates"`
	// Last CSR that was created for this order
	Csr pulumi.StringPtrInput `pulumi:"csr"`
	// Certificate distinguished name
	DistinguishedName pulumi.StringPtrInput `pulumi:"distinguishedName"`
	// Domain Verification Token
	DomainVerificationToken pulumi.StringPtrInput `pulumi:"domainVerificationToken"`
	// Certificate expiration time
	ExpirationTime pulumi.StringPtrInput `pulumi:"expirationTime"`
	// Intermediate certificate
	Intermediate CertificateDetailsPtrInput `pulumi:"intermediate"`
	// Certificate Key Size
	KeySize pulumi.IntPtrInput `pulumi:"keySize"`
	// Certificate last issuance time
	LastCertificateIssuanceTime pulumi.StringPtrInput `pulumi:"lastCertificateIssuanceTime"`
	// Certificate product type
	ProductType pulumi.StringPtrInput `pulumi:"productType"`
	// Status of certificate order
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Root certificate
	Root CertificateDetailsPtrInput `pulumi:"root"`
	// Current serial number of the certificate
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// Signed certificate
	SignedCertificate CertificateDetailsPtrInput `pulumi:"signedCertificate"`
	// Current order status
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Duration in years (must be between 1 and 3)
	ValidityInYears pulumi.IntPtrInput `pulumi:"validityInYears"`
}

func (CertificateOrderPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateOrderProperties)(nil)).Elem()
}

func (i CertificateOrderPropertiesArgs) ToCertificateOrderPropertiesOutput() CertificateOrderPropertiesOutput {
	return i.ToCertificateOrderPropertiesOutputWithContext(context.Background())
}

func (i CertificateOrderPropertiesArgs) ToCertificateOrderPropertiesOutputWithContext(ctx context.Context) CertificateOrderPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOrderPropertiesOutput)
}

func (i CertificateOrderPropertiesArgs) ToCertificateOrderPropertiesPtrOutput() CertificateOrderPropertiesPtrOutput {
	return i.ToCertificateOrderPropertiesPtrOutputWithContext(context.Background())
}

func (i CertificateOrderPropertiesArgs) ToCertificateOrderPropertiesPtrOutputWithContext(ctx context.Context) CertificateOrderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOrderPropertiesOutput).ToCertificateOrderPropertiesPtrOutputWithContext(ctx)
}

// CertificateOrderPropertiesPtrInput is an input type that accepts CertificateOrderPropertiesArgs, CertificateOrderPropertiesPtr and CertificateOrderPropertiesPtrOutput values.
// You can construct a concrete instance of `CertificateOrderPropertiesPtrInput` via:
//
//          CertificateOrderPropertiesArgs{...}
//
//  or:
//
//          nil
type CertificateOrderPropertiesPtrInput interface {
	pulumi.Input

	ToCertificateOrderPropertiesPtrOutput() CertificateOrderPropertiesPtrOutput
	ToCertificateOrderPropertiesPtrOutputWithContext(context.Context) CertificateOrderPropertiesPtrOutput
}

type certificateOrderPropertiesPtrType CertificateOrderPropertiesArgs

func CertificateOrderPropertiesPtr(v *CertificateOrderPropertiesArgs) CertificateOrderPropertiesPtrInput {
	return (*certificateOrderPropertiesPtrType)(v)
}

func (*certificateOrderPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateOrderProperties)(nil)).Elem()
}

func (i *certificateOrderPropertiesPtrType) ToCertificateOrderPropertiesPtrOutput() CertificateOrderPropertiesPtrOutput {
	return i.ToCertificateOrderPropertiesPtrOutputWithContext(context.Background())
}

func (i *certificateOrderPropertiesPtrType) ToCertificateOrderPropertiesPtrOutputWithContext(ctx context.Context) CertificateOrderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOrderPropertiesPtrOutput)
}

type CertificateOrderPropertiesOutput struct{ *pulumi.OutputState }

func (CertificateOrderPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateOrderProperties)(nil)).Elem()
}

func (o CertificateOrderPropertiesOutput) ToCertificateOrderPropertiesOutput() CertificateOrderPropertiesOutput {
	return o
}

func (o CertificateOrderPropertiesOutput) ToCertificateOrderPropertiesOutputWithContext(ctx context.Context) CertificateOrderPropertiesOutput {
	return o
}

func (o CertificateOrderPropertiesOutput) ToCertificateOrderPropertiesPtrOutput() CertificateOrderPropertiesPtrOutput {
	return o.ToCertificateOrderPropertiesPtrOutputWithContext(context.Background())
}

func (o CertificateOrderPropertiesOutput) ToCertificateOrderPropertiesPtrOutputWithContext(ctx context.Context) CertificateOrderPropertiesPtrOutput {
	return o.ApplyT(func(v CertificateOrderProperties) *CertificateOrderProperties {
		return &v
	}).(CertificateOrderPropertiesPtrOutput)
}

// Auto renew
func (o CertificateOrderPropertiesOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateOrderProperties) *bool { return v.AutoRenew }).(pulumi.BoolPtrOutput)
}

// State of the Key Vault secret
func (o CertificateOrderPropertiesOutput) Certificates() pulumi.StringMapOutput {
	return o.ApplyT(func(v CertificateOrderProperties) map[string]string { return v.Certificates }).(pulumi.StringMapOutput)
}

// Last CSR that was created for this order
func (o CertificateOrderPropertiesOutput) Csr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderProperties) *string { return v.Csr }).(pulumi.StringPtrOutput)
}

// Certificate distinguished name
func (o CertificateOrderPropertiesOutput) DistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderProperties) *string { return v.DistinguishedName }).(pulumi.StringPtrOutput)
}

// Domain Verification Token
func (o CertificateOrderPropertiesOutput) DomainVerificationToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderProperties) *string { return v.DomainVerificationToken }).(pulumi.StringPtrOutput)
}

// Certificate expiration time
func (o CertificateOrderPropertiesOutput) ExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderProperties) *string { return v.ExpirationTime }).(pulumi.StringPtrOutput)
}

// Intermediate certificate
func (o CertificateOrderPropertiesOutput) Intermediate() CertificateDetailsPtrOutput {
	return o.ApplyT(func(v CertificateOrderProperties) *CertificateDetails { return v.Intermediate }).(CertificateDetailsPtrOutput)
}

// Certificate Key Size
func (o CertificateOrderPropertiesOutput) KeySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CertificateOrderProperties) *int { return v.KeySize }).(pulumi.IntPtrOutput)
}

// Certificate last issuance time
func (o CertificateOrderPropertiesOutput) LastCertificateIssuanceTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderProperties) *string { return v.LastCertificateIssuanceTime }).(pulumi.StringPtrOutput)
}

// Certificate product type
func (o CertificateOrderPropertiesOutput) ProductType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderProperties) *string { return v.ProductType }).(pulumi.StringPtrOutput)
}

// Status of certificate order
func (o CertificateOrderPropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Root certificate
func (o CertificateOrderPropertiesOutput) Root() CertificateDetailsPtrOutput {
	return o.ApplyT(func(v CertificateOrderProperties) *CertificateDetails { return v.Root }).(CertificateDetailsPtrOutput)
}

// Current serial number of the certificate
func (o CertificateOrderPropertiesOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderProperties) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// Signed certificate
func (o CertificateOrderPropertiesOutput) SignedCertificate() CertificateDetailsPtrOutput {
	return o.ApplyT(func(v CertificateOrderProperties) *CertificateDetails { return v.SignedCertificate }).(CertificateDetailsPtrOutput)
}

// Current order status
func (o CertificateOrderPropertiesOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderProperties) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Duration in years (must be between 1 and 3)
func (o CertificateOrderPropertiesOutput) ValidityInYears() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CertificateOrderProperties) *int { return v.ValidityInYears }).(pulumi.IntPtrOutput)
}

type CertificateOrderPropertiesPtrOutput struct{ *pulumi.OutputState }

func (CertificateOrderPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateOrderProperties)(nil)).Elem()
}

func (o CertificateOrderPropertiesPtrOutput) ToCertificateOrderPropertiesPtrOutput() CertificateOrderPropertiesPtrOutput {
	return o
}

func (o CertificateOrderPropertiesPtrOutput) ToCertificateOrderPropertiesPtrOutputWithContext(ctx context.Context) CertificateOrderPropertiesPtrOutput {
	return o
}

func (o CertificateOrderPropertiesPtrOutput) Elem() CertificateOrderPropertiesOutput {
	return o.ApplyT(func(v *CertificateOrderProperties) CertificateOrderProperties { return *v }).(CertificateOrderPropertiesOutput)
}

// Auto renew
func (o CertificateOrderPropertiesPtrOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateOrderProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AutoRenew
	}).(pulumi.BoolPtrOutput)
}

// State of the Key Vault secret
func (o CertificateOrderPropertiesPtrOutput) Certificates() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CertificateOrderProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Certificates
	}).(pulumi.StringMapOutput)
}

// Last CSR that was created for this order
func (o CertificateOrderPropertiesPtrOutput) Csr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderProperties) *string {
		if v == nil {
			return nil
		}
		return v.Csr
	}).(pulumi.StringPtrOutput)
}

// Certificate distinguished name
func (o CertificateOrderPropertiesPtrOutput) DistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderProperties) *string {
		if v == nil {
			return nil
		}
		return v.DistinguishedName
	}).(pulumi.StringPtrOutput)
}

// Domain Verification Token
func (o CertificateOrderPropertiesPtrOutput) DomainVerificationToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderProperties) *string {
		if v == nil {
			return nil
		}
		return v.DomainVerificationToken
	}).(pulumi.StringPtrOutput)
}

// Certificate expiration time
func (o CertificateOrderPropertiesPtrOutput) ExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderProperties) *string {
		if v == nil {
			return nil
		}
		return v.ExpirationTime
	}).(pulumi.StringPtrOutput)
}

// Intermediate certificate
func (o CertificateOrderPropertiesPtrOutput) Intermediate() CertificateDetailsPtrOutput {
	return o.ApplyT(func(v *CertificateOrderProperties) *CertificateDetails {
		if v == nil {
			return nil
		}
		return v.Intermediate
	}).(CertificateDetailsPtrOutput)
}

// Certificate Key Size
func (o CertificateOrderPropertiesPtrOutput) KeySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CertificateOrderProperties) *int {
		if v == nil {
			return nil
		}
		return v.KeySize
	}).(pulumi.IntPtrOutput)
}

// Certificate last issuance time
func (o CertificateOrderPropertiesPtrOutput) LastCertificateIssuanceTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderProperties) *string {
		if v == nil {
			return nil
		}
		return v.LastCertificateIssuanceTime
	}).(pulumi.StringPtrOutput)
}

// Certificate product type
func (o CertificateOrderPropertiesPtrOutput) ProductType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProductType
	}).(pulumi.StringPtrOutput)
}

// Status of certificate order
func (o CertificateOrderPropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Root certificate
func (o CertificateOrderPropertiesPtrOutput) Root() CertificateDetailsPtrOutput {
	return o.ApplyT(func(v *CertificateOrderProperties) *CertificateDetails {
		if v == nil {
			return nil
		}
		return v.Root
	}).(CertificateDetailsPtrOutput)
}

// Current serial number of the certificate
func (o CertificateOrderPropertiesPtrOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderProperties) *string {
		if v == nil {
			return nil
		}
		return v.SerialNumber
	}).(pulumi.StringPtrOutput)
}

// Signed certificate
func (o CertificateOrderPropertiesPtrOutput) SignedCertificate() CertificateDetailsPtrOutput {
	return o.ApplyT(func(v *CertificateOrderProperties) *CertificateDetails {
		if v == nil {
			return nil
		}
		return v.SignedCertificate
	}).(CertificateDetailsPtrOutput)
}

// Current order status
func (o CertificateOrderPropertiesPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderProperties) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Duration in years (must be between 1 and 3)
func (o CertificateOrderPropertiesPtrOutput) ValidityInYears() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CertificateOrderProperties) *int {
		if v == nil {
			return nil
		}
		return v.ValidityInYears
	}).(pulumi.IntPtrOutput)
}

type CertificateOrderResponseProperties struct {
	// Auto renew
	AutoRenew *bool `pulumi:"autoRenew"`
	// State of the Key Vault secret
	Certificates map[string]string `pulumi:"certificates"`
	// Last CSR that was created for this order
	Csr *string `pulumi:"csr"`
	// Certificate distinguished name
	DistinguishedName *string `pulumi:"distinguishedName"`
	// Domain Verification Token
	DomainVerificationToken *string `pulumi:"domainVerificationToken"`
	// Certificate expiration time
	ExpirationTime *string `pulumi:"expirationTime"`
	// Intermediate certificate
	Intermediate *CertificateDetailsResponse `pulumi:"intermediate"`
	// Certificate Key Size
	KeySize *int `pulumi:"keySize"`
	// Certificate last issuance time
	LastCertificateIssuanceTime *string `pulumi:"lastCertificateIssuanceTime"`
	// Certificate product type
	ProductType *string `pulumi:"productType"`
	// Status of certificate order
	ProvisioningState *string `pulumi:"provisioningState"`
	// Root certificate
	Root *CertificateDetailsResponse `pulumi:"root"`
	// Current serial number of the certificate
	SerialNumber *string `pulumi:"serialNumber"`
	// Signed certificate
	SignedCertificate *CertificateDetailsResponse `pulumi:"signedCertificate"`
	// Current order status
	Status *string `pulumi:"status"`
	// Duration in years (must be between 1 and 3)
	ValidityInYears *int `pulumi:"validityInYears"`
}

// CertificateOrderResponsePropertiesInput is an input type that accepts CertificateOrderResponsePropertiesArgs and CertificateOrderResponsePropertiesOutput values.
// You can construct a concrete instance of `CertificateOrderResponsePropertiesInput` via:
//
//          CertificateOrderResponsePropertiesArgs{...}
type CertificateOrderResponsePropertiesInput interface {
	pulumi.Input

	ToCertificateOrderResponsePropertiesOutput() CertificateOrderResponsePropertiesOutput
	ToCertificateOrderResponsePropertiesOutputWithContext(context.Context) CertificateOrderResponsePropertiesOutput
}

type CertificateOrderResponsePropertiesArgs struct {
	// Auto renew
	AutoRenew pulumi.BoolPtrInput `pulumi:"autoRenew"`
	// State of the Key Vault secret
	Certificates pulumi.StringMapInput `pulumi:"certificates"`
	// Last CSR that was created for this order
	Csr pulumi.StringPtrInput `pulumi:"csr"`
	// Certificate distinguished name
	DistinguishedName pulumi.StringPtrInput `pulumi:"distinguishedName"`
	// Domain Verification Token
	DomainVerificationToken pulumi.StringPtrInput `pulumi:"domainVerificationToken"`
	// Certificate expiration time
	ExpirationTime pulumi.StringPtrInput `pulumi:"expirationTime"`
	// Intermediate certificate
	Intermediate CertificateDetailsResponsePtrInput `pulumi:"intermediate"`
	// Certificate Key Size
	KeySize pulumi.IntPtrInput `pulumi:"keySize"`
	// Certificate last issuance time
	LastCertificateIssuanceTime pulumi.StringPtrInput `pulumi:"lastCertificateIssuanceTime"`
	// Certificate product type
	ProductType pulumi.StringPtrInput `pulumi:"productType"`
	// Status of certificate order
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Root certificate
	Root CertificateDetailsResponsePtrInput `pulumi:"root"`
	// Current serial number of the certificate
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// Signed certificate
	SignedCertificate CertificateDetailsResponsePtrInput `pulumi:"signedCertificate"`
	// Current order status
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Duration in years (must be between 1 and 3)
	ValidityInYears pulumi.IntPtrInput `pulumi:"validityInYears"`
}

func (CertificateOrderResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateOrderResponseProperties)(nil)).Elem()
}

func (i CertificateOrderResponsePropertiesArgs) ToCertificateOrderResponsePropertiesOutput() CertificateOrderResponsePropertiesOutput {
	return i.ToCertificateOrderResponsePropertiesOutputWithContext(context.Background())
}

func (i CertificateOrderResponsePropertiesArgs) ToCertificateOrderResponsePropertiesOutputWithContext(ctx context.Context) CertificateOrderResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOrderResponsePropertiesOutput)
}

func (i CertificateOrderResponsePropertiesArgs) ToCertificateOrderResponsePropertiesPtrOutput() CertificateOrderResponsePropertiesPtrOutput {
	return i.ToCertificateOrderResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i CertificateOrderResponsePropertiesArgs) ToCertificateOrderResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateOrderResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOrderResponsePropertiesOutput).ToCertificateOrderResponsePropertiesPtrOutputWithContext(ctx)
}

// CertificateOrderResponsePropertiesPtrInput is an input type that accepts CertificateOrderResponsePropertiesArgs, CertificateOrderResponsePropertiesPtr and CertificateOrderResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `CertificateOrderResponsePropertiesPtrInput` via:
//
//          CertificateOrderResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type CertificateOrderResponsePropertiesPtrInput interface {
	pulumi.Input

	ToCertificateOrderResponsePropertiesPtrOutput() CertificateOrderResponsePropertiesPtrOutput
	ToCertificateOrderResponsePropertiesPtrOutputWithContext(context.Context) CertificateOrderResponsePropertiesPtrOutput
}

type certificateOrderResponsePropertiesPtrType CertificateOrderResponsePropertiesArgs

func CertificateOrderResponsePropertiesPtr(v *CertificateOrderResponsePropertiesArgs) CertificateOrderResponsePropertiesPtrInput {
	return (*certificateOrderResponsePropertiesPtrType)(v)
}

func (*certificateOrderResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateOrderResponseProperties)(nil)).Elem()
}

func (i *certificateOrderResponsePropertiesPtrType) ToCertificateOrderResponsePropertiesPtrOutput() CertificateOrderResponsePropertiesPtrOutput {
	return i.ToCertificateOrderResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *certificateOrderResponsePropertiesPtrType) ToCertificateOrderResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateOrderResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOrderResponsePropertiesPtrOutput)
}

type CertificateOrderResponsePropertiesOutput struct{ *pulumi.OutputState }

func (CertificateOrderResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateOrderResponseProperties)(nil)).Elem()
}

func (o CertificateOrderResponsePropertiesOutput) ToCertificateOrderResponsePropertiesOutput() CertificateOrderResponsePropertiesOutput {
	return o
}

func (o CertificateOrderResponsePropertiesOutput) ToCertificateOrderResponsePropertiesOutputWithContext(ctx context.Context) CertificateOrderResponsePropertiesOutput {
	return o
}

func (o CertificateOrderResponsePropertiesOutput) ToCertificateOrderResponsePropertiesPtrOutput() CertificateOrderResponsePropertiesPtrOutput {
	return o.ToCertificateOrderResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o CertificateOrderResponsePropertiesOutput) ToCertificateOrderResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateOrderResponsePropertiesPtrOutput {
	return o.ApplyT(func(v CertificateOrderResponseProperties) *CertificateOrderResponseProperties {
		return &v
	}).(CertificateOrderResponsePropertiesPtrOutput)
}

// Auto renew
func (o CertificateOrderResponsePropertiesOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateOrderResponseProperties) *bool { return v.AutoRenew }).(pulumi.BoolPtrOutput)
}

// State of the Key Vault secret
func (o CertificateOrderResponsePropertiesOutput) Certificates() pulumi.StringMapOutput {
	return o.ApplyT(func(v CertificateOrderResponseProperties) map[string]string { return v.Certificates }).(pulumi.StringMapOutput)
}

// Last CSR that was created for this order
func (o CertificateOrderResponsePropertiesOutput) Csr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderResponseProperties) *string { return v.Csr }).(pulumi.StringPtrOutput)
}

// Certificate distinguished name
func (o CertificateOrderResponsePropertiesOutput) DistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderResponseProperties) *string { return v.DistinguishedName }).(pulumi.StringPtrOutput)
}

// Domain Verification Token
func (o CertificateOrderResponsePropertiesOutput) DomainVerificationToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderResponseProperties) *string { return v.DomainVerificationToken }).(pulumi.StringPtrOutput)
}

// Certificate expiration time
func (o CertificateOrderResponsePropertiesOutput) ExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderResponseProperties) *string { return v.ExpirationTime }).(pulumi.StringPtrOutput)
}

// Intermediate certificate
func (o CertificateOrderResponsePropertiesOutput) Intermediate() CertificateDetailsResponsePtrOutput {
	return o.ApplyT(func(v CertificateOrderResponseProperties) *CertificateDetailsResponse { return v.Intermediate }).(CertificateDetailsResponsePtrOutput)
}

// Certificate Key Size
func (o CertificateOrderResponsePropertiesOutput) KeySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CertificateOrderResponseProperties) *int { return v.KeySize }).(pulumi.IntPtrOutput)
}

// Certificate last issuance time
func (o CertificateOrderResponsePropertiesOutput) LastCertificateIssuanceTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderResponseProperties) *string { return v.LastCertificateIssuanceTime }).(pulumi.StringPtrOutput)
}

// Certificate product type
func (o CertificateOrderResponsePropertiesOutput) ProductType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderResponseProperties) *string { return v.ProductType }).(pulumi.StringPtrOutput)
}

// Status of certificate order
func (o CertificateOrderResponsePropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderResponseProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Root certificate
func (o CertificateOrderResponsePropertiesOutput) Root() CertificateDetailsResponsePtrOutput {
	return o.ApplyT(func(v CertificateOrderResponseProperties) *CertificateDetailsResponse { return v.Root }).(CertificateDetailsResponsePtrOutput)
}

// Current serial number of the certificate
func (o CertificateOrderResponsePropertiesOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderResponseProperties) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// Signed certificate
func (o CertificateOrderResponsePropertiesOutput) SignedCertificate() CertificateDetailsResponsePtrOutput {
	return o.ApplyT(func(v CertificateOrderResponseProperties) *CertificateDetailsResponse { return v.SignedCertificate }).(CertificateDetailsResponsePtrOutput)
}

// Current order status
func (o CertificateOrderResponsePropertiesOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderResponseProperties) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Duration in years (must be between 1 and 3)
func (o CertificateOrderResponsePropertiesOutput) ValidityInYears() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CertificateOrderResponseProperties) *int { return v.ValidityInYears }).(pulumi.IntPtrOutput)
}

type CertificateOrderResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (CertificateOrderResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateOrderResponseProperties)(nil)).Elem()
}

func (o CertificateOrderResponsePropertiesPtrOutput) ToCertificateOrderResponsePropertiesPtrOutput() CertificateOrderResponsePropertiesPtrOutput {
	return o
}

func (o CertificateOrderResponsePropertiesPtrOutput) ToCertificateOrderResponsePropertiesPtrOutputWithContext(ctx context.Context) CertificateOrderResponsePropertiesPtrOutput {
	return o
}

func (o CertificateOrderResponsePropertiesPtrOutput) Elem() CertificateOrderResponsePropertiesOutput {
	return o.ApplyT(func(v *CertificateOrderResponseProperties) CertificateOrderResponseProperties { return *v }).(CertificateOrderResponsePropertiesOutput)
}

// Auto renew
func (o CertificateOrderResponsePropertiesPtrOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateOrderResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AutoRenew
	}).(pulumi.BoolPtrOutput)
}

// State of the Key Vault secret
func (o CertificateOrderResponsePropertiesPtrOutput) Certificates() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CertificateOrderResponseProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Certificates
	}).(pulumi.StringMapOutput)
}

// Last CSR that was created for this order
func (o CertificateOrderResponsePropertiesPtrOutput) Csr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Csr
	}).(pulumi.StringPtrOutput)
}

// Certificate distinguished name
func (o CertificateOrderResponsePropertiesPtrOutput) DistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DistinguishedName
	}).(pulumi.StringPtrOutput)
}

// Domain Verification Token
func (o CertificateOrderResponsePropertiesPtrOutput) DomainVerificationToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DomainVerificationToken
	}).(pulumi.StringPtrOutput)
}

// Certificate expiration time
func (o CertificateOrderResponsePropertiesPtrOutput) ExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ExpirationTime
	}).(pulumi.StringPtrOutput)
}

// Intermediate certificate
func (o CertificateOrderResponsePropertiesPtrOutput) Intermediate() CertificateDetailsResponsePtrOutput {
	return o.ApplyT(func(v *CertificateOrderResponseProperties) *CertificateDetailsResponse {
		if v == nil {
			return nil
		}
		return v.Intermediate
	}).(CertificateDetailsResponsePtrOutput)
}

// Certificate Key Size
func (o CertificateOrderResponsePropertiesPtrOutput) KeySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CertificateOrderResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.KeySize
	}).(pulumi.IntPtrOutput)
}

// Certificate last issuance time
func (o CertificateOrderResponsePropertiesPtrOutput) LastCertificateIssuanceTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.LastCertificateIssuanceTime
	}).(pulumi.StringPtrOutput)
}

// Certificate product type
func (o CertificateOrderResponsePropertiesPtrOutput) ProductType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProductType
	}).(pulumi.StringPtrOutput)
}

// Status of certificate order
func (o CertificateOrderResponsePropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Root certificate
func (o CertificateOrderResponsePropertiesPtrOutput) Root() CertificateDetailsResponsePtrOutput {
	return o.ApplyT(func(v *CertificateOrderResponseProperties) *CertificateDetailsResponse {
		if v == nil {
			return nil
		}
		return v.Root
	}).(CertificateDetailsResponsePtrOutput)
}

// Current serial number of the certificate
func (o CertificateOrderResponsePropertiesPtrOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.SerialNumber
	}).(pulumi.StringPtrOutput)
}

// Signed certificate
func (o CertificateOrderResponsePropertiesPtrOutput) SignedCertificate() CertificateDetailsResponsePtrOutput {
	return o.ApplyT(func(v *CertificateOrderResponseProperties) *CertificateDetailsResponse {
		if v == nil {
			return nil
		}
		return v.SignedCertificate
	}).(CertificateDetailsResponsePtrOutput)
}

// Current order status
func (o CertificateOrderResponsePropertiesPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateOrderResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Duration in years (must be between 1 and 3)
func (o CertificateOrderResponsePropertiesPtrOutput) ValidityInYears() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CertificateOrderResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.ValidityInYears
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AppServiceCertificateOutput{})
	pulumi.RegisterOutputType(AppServiceCertificatePtrOutput{})
	pulumi.RegisterOutputType(AppServiceCertificateOrderTypeOutput{})
	pulumi.RegisterOutputType(AppServiceCertificateOrderCertificateTypeOutput{})
	pulumi.RegisterOutputType(AppServiceCertificateOrderPropertiesOutput{})
	pulumi.RegisterOutputType(AppServiceCertificateOrderPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AppServiceCertificateOrderResponsePropertiesOutput{})
	pulumi.RegisterOutputType(AppServiceCertificateOrderResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AppServiceCertificateResponseOutput{})
	pulumi.RegisterOutputType(AppServiceCertificateResponsePtrOutput{})
	pulumi.RegisterOutputType(CertificateDetailsOutput{})
	pulumi.RegisterOutputType(CertificateDetailsPtrOutput{})
	pulumi.RegisterOutputType(CertificateDetailsPropertiesOutput{})
	pulumi.RegisterOutputType(CertificateDetailsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CertificateDetailsResponseOutput{})
	pulumi.RegisterOutputType(CertificateDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(CertificateDetailsResponsePropertiesOutput{})
	pulumi.RegisterOutputType(CertificateDetailsResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(CertificateOrderTypeOutput{})
	pulumi.RegisterOutputType(CertificateOrderCertificateTypeOutput{})
	pulumi.RegisterOutputType(CertificateOrderCertificatePropertiesOutput{})
	pulumi.RegisterOutputType(CertificateOrderCertificatePropertiesPtrOutput{})
	pulumi.RegisterOutputType(CertificateOrderCertificateResponsePropertiesOutput{})
	pulumi.RegisterOutputType(CertificateOrderCertificateResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(CertificateOrderPropertiesOutput{})
	pulumi.RegisterOutputType(CertificateOrderPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CertificateOrderResponsePropertiesOutput{})
	pulumi.RegisterOutputType(CertificateOrderResponsePropertiesPtrOutput{})
}
