// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package servicefabric

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The application type name resource
type ClusterApplicationType struct {
	pulumi.CustomResourceState

	// Azure resource etag.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// It will be deprecated in New API, resource location depends on the parent resource.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Azure resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The application type name properties
	Properties ApplicationTypeResourcePropertiesResponseOutput `pulumi:"properties"`
	// Azure resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Azure resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewClusterApplicationType registers a new resource with the given unique name, arguments, and options.
func NewClusterApplicationType(ctx *pulumi.Context,
	name string, args *ClusterApplicationTypeArgs, opts ...pulumi.ResourceOption) (*ClusterApplicationType, error) {
	if args == nil || args.ClusterName == nil {
		return nil, errors.New("missing required argument 'ClusterName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &ClusterApplicationTypeArgs{}
	}
	var resource ClusterApplicationType
	err := ctx.RegisterResource("azurerm:servicefabric:ClusterApplicationType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterApplicationType gets an existing ClusterApplicationType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterApplicationType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterApplicationTypeState, opts ...pulumi.ResourceOption) (*ClusterApplicationType, error) {
	var resource ClusterApplicationType
	err := ctx.ReadResource("azurerm:servicefabric:ClusterApplicationType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterApplicationType resources.
type clusterApplicationTypeState struct {
	// Azure resource etag.
	Etag *string `pulumi:"etag"`
	// It will be deprecated in New API, resource location depends on the parent resource.
	Location *string `pulumi:"location"`
	// Azure resource name.
	Name *string `pulumi:"name"`
	// The application type name properties
	Properties *ApplicationTypeResourcePropertiesResponse `pulumi:"properties"`
	// Azure resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Azure resource type.
	Type *string `pulumi:"type"`
}

type ClusterApplicationTypeState struct {
	// Azure resource etag.
	Etag pulumi.StringPtrInput
	// It will be deprecated in New API, resource location depends on the parent resource.
	Location pulumi.StringPtrInput
	// Azure resource name.
	Name pulumi.StringPtrInput
	// The application type name properties
	Properties ApplicationTypeResourcePropertiesResponsePtrInput
	// Azure resource tags.
	Tags pulumi.StringMapInput
	// Azure resource type.
	Type pulumi.StringPtrInput
}

func (ClusterApplicationTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterApplicationTypeState)(nil)).Elem()
}

type clusterApplicationTypeArgs struct {
	// The name of the cluster resource.
	ClusterName string `pulumi:"clusterName"`
	// It will be deprecated in New API, resource location depends on the parent resource.
	Location *string `pulumi:"location"`
	// The name of the application type name resource.
	Name string `pulumi:"name"`
	// The application type name properties
	Properties *ApplicationTypeResourceProperties `pulumi:"properties"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Azure resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ClusterApplicationType resource.
type ClusterApplicationTypeArgs struct {
	// The name of the cluster resource.
	ClusterName pulumi.StringInput
	// It will be deprecated in New API, resource location depends on the parent resource.
	Location pulumi.StringPtrInput
	// The name of the application type name resource.
	Name pulumi.StringInput
	// The application type name properties
	Properties ApplicationTypeResourcePropertiesPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// Azure resource tags.
	Tags pulumi.StringMapInput
}

func (ClusterApplicationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterApplicationTypeArgs)(nil)).Elem()
}
