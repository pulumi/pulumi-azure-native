// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package servicefabric

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An application type version resource for the specified application type name resource.
type ClusterApplicationTypeVersion struct {
	pulumi.CustomResourceState

	// Azure resource etag.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// It will be deprecated in New API, resource location depends on the parent resource.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Azure resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The properties of the application type version resource.
	Properties ApplicationTypeVersionResourcePropertiesResponseOutput `pulumi:"properties"`
	// Azure resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Azure resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewClusterApplicationTypeVersion registers a new resource with the given unique name, arguments, and options.
func NewClusterApplicationTypeVersion(ctx *pulumi.Context,
	name string, args *ClusterApplicationTypeVersionArgs, opts ...pulumi.ResourceOption) (*ClusterApplicationTypeVersion, error) {
	if args == nil || args.ApplicationTypeName == nil {
		return nil, errors.New("missing required argument 'ApplicationTypeName'")
	}
	if args == nil || args.ClusterName == nil {
		return nil, errors.New("missing required argument 'ClusterName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &ClusterApplicationTypeVersionArgs{}
	}
	var resource ClusterApplicationTypeVersion
	err := ctx.RegisterResource("azurerm:servicefabric:ClusterApplicationTypeVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterApplicationTypeVersion gets an existing ClusterApplicationTypeVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterApplicationTypeVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterApplicationTypeVersionState, opts ...pulumi.ResourceOption) (*ClusterApplicationTypeVersion, error) {
	var resource ClusterApplicationTypeVersion
	err := ctx.ReadResource("azurerm:servicefabric:ClusterApplicationTypeVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterApplicationTypeVersion resources.
type clusterApplicationTypeVersionState struct {
	// Azure resource etag.
	Etag *string `pulumi:"etag"`
	// It will be deprecated in New API, resource location depends on the parent resource.
	Location *string `pulumi:"location"`
	// Azure resource name.
	Name *string `pulumi:"name"`
	// The properties of the application type version resource.
	Properties *ApplicationTypeVersionResourcePropertiesResponse `pulumi:"properties"`
	// Azure resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Azure resource type.
	Type *string `pulumi:"type"`
}

type ClusterApplicationTypeVersionState struct {
	// Azure resource etag.
	Etag pulumi.StringPtrInput
	// It will be deprecated in New API, resource location depends on the parent resource.
	Location pulumi.StringPtrInput
	// Azure resource name.
	Name pulumi.StringPtrInput
	// The properties of the application type version resource.
	Properties ApplicationTypeVersionResourcePropertiesResponsePtrInput
	// Azure resource tags.
	Tags pulumi.StringMapInput
	// Azure resource type.
	Type pulumi.StringPtrInput
}

func (ClusterApplicationTypeVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterApplicationTypeVersionState)(nil)).Elem()
}

type clusterApplicationTypeVersionArgs struct {
	// The name of the application type name resource.
	ApplicationTypeName string `pulumi:"applicationTypeName"`
	// The name of the cluster resource.
	ClusterName string `pulumi:"clusterName"`
	// It will be deprecated in New API, resource location depends on the parent resource.
	Location *string `pulumi:"location"`
	// The application type version.
	Name string `pulumi:"name"`
	// The properties of the application type version resource.
	Properties *ApplicationTypeVersionResourceProperties `pulumi:"properties"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Azure resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ClusterApplicationTypeVersion resource.
type ClusterApplicationTypeVersionArgs struct {
	// The name of the application type name resource.
	ApplicationTypeName pulumi.StringInput
	// The name of the cluster resource.
	ClusterName pulumi.StringInput
	// It will be deprecated in New API, resource location depends on the parent resource.
	Location pulumi.StringPtrInput
	// The application type version.
	Name pulumi.StringInput
	// The properties of the application type version resource.
	Properties ApplicationTypeVersionResourcePropertiesPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// Azure resource tags.
	Tags pulumi.StringMapInput
}

func (ClusterApplicationTypeVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterApplicationTypeVersionArgs)(nil)).Elem()
}
