// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180201

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The cluster resource
type Cluster struct {
	pulumi.CustomResourceState

	// Azure resource location.
	Location pulumi.StringOutput `pulumi:"location"`
	// Azure resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The cluster resource properties
	Properties ClusterPropertiesResponseOutput `pulumi:"properties"`
	// Azure resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Azure resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewCluster registers a new resource with the given unique name, arguments, and options.
func NewCluster(ctx *pulumi.Context,
	name string, args *ClusterArgs, opts ...pulumi.ResourceOption) (*Cluster, error) {
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.ManagementEndpoint == nil {
		return nil, errors.New("missing required argument 'ManagementEndpoint'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.NodeTypes == nil {
		return nil, errors.New("missing required argument 'NodeTypes'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &ClusterArgs{}
	}
	var resource Cluster
	err := ctx.RegisterResource("azurerm:servicefabric/v20180201:Cluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCluster gets an existing Cluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterState, opts ...pulumi.ResourceOption) (*Cluster, error) {
	var resource Cluster
	err := ctx.ReadResource("azurerm:servicefabric/v20180201:Cluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Cluster resources.
type clusterState struct {
	// Azure resource location.
	Location *string `pulumi:"location"`
	// Azure resource name.
	Name *string `pulumi:"name"`
	// The cluster resource properties
	Properties *ClusterPropertiesResponse `pulumi:"properties"`
	// Azure resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Azure resource type.
	Type *string `pulumi:"type"`
}

type ClusterState struct {
	// Azure resource location.
	Location pulumi.StringPtrInput
	// Azure resource name.
	Name pulumi.StringPtrInput
	// The cluster resource properties
	Properties ClusterPropertiesResponsePtrInput
	// Azure resource tags.
	Tags pulumi.StringMapInput
	// Azure resource type.
	Type pulumi.StringPtrInput
}

func (ClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterState)(nil)).Elem()
}

type clusterArgs struct {
	// The list of add-on features to enable in the cluster.
	AddOnFeatures []string `pulumi:"addOnFeatures"`
	// The AAD authentication settings of the cluster.
	AzureActiveDirectory *AzureActiveDirectory `pulumi:"azureActiveDirectory"`
	// The certificate to use for securing the cluster. The certificate provided will be used for node to node security within the cluster, SSL certificate for cluster management endpoint and default admin client.
	Certificate *CertificateDescription `pulumi:"certificate"`
	// Describes a list of server certificates referenced by common name that are used to secure the cluster.
	CertificateCommonNames *ServerCertificateCommonNames `pulumi:"certificateCommonNames"`
	// The list of client certificates referenced by common name that are allowed to manage the cluster.
	ClientCertificateCommonNames []ClientCertificateCommonName `pulumi:"clientCertificateCommonNames"`
	// The list of client certificates referenced by thumbprint that are allowed to manage the cluster.
	ClientCertificateThumbprints []ClientCertificateThumbprint `pulumi:"clientCertificateThumbprints"`
	// The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.
	ClusterCodeVersion *string `pulumi:"clusterCodeVersion"`
	// The storage account information for storing Service Fabric diagnostic logs.
	DiagnosticsStorageAccountConfig *DiagnosticsStorageAccountConfig `pulumi:"diagnosticsStorageAccountConfig"`
	// The list of custom fabric settings to configure the cluster.
	FabricSettings []SettingsSectionDescription `pulumi:"fabricSettings"`
	// Azure resource location.
	Location string `pulumi:"location"`
	// The http management endpoint of the cluster.
	ManagementEndpoint string `pulumi:"managementEndpoint"`
	// The name of the cluster resource.
	Name string `pulumi:"name"`
	// The list of node types in the cluster.
	NodeTypes []NodeTypeDescription `pulumi:"nodeTypes"`
	// The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).
	//
	//   - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.
	//   - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.
	//   - Silver - Run the System services with a target replica set count of 5.
	//   - Gold - Run the System services with a target replica set count of 7.
	//   - Platinum - Run the System services with a target replica set count of 9.
	ReliabilityLevel *string `pulumi:"reliabilityLevel"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The server certificate used by reverse proxy.
	ReverseProxyCertificate *CertificateDescription `pulumi:"reverseProxyCertificate"`
	// Describes a list of server certificates referenced by common name that are used to secure the cluster.
	ReverseProxyCertificateCommonNames *ServerCertificateCommonNames `pulumi:"reverseProxyCertificateCommonNames"`
	// Azure resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The policy to use when upgrading the cluster.
	UpgradeDescription *ClusterUpgradePolicy `pulumi:"upgradeDescription"`
	// The upgrade mode of the cluster when new Service Fabric runtime version is available.
	//
	//   - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.
	//   - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.
	UpgradeMode *string `pulumi:"upgradeMode"`
	// The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.
	VmImage *string `pulumi:"vmImage"`
}

// The set of arguments for constructing a Cluster resource.
type ClusterArgs struct {
	// The list of add-on features to enable in the cluster.
	AddOnFeatures pulumi.StringArrayInput
	// The AAD authentication settings of the cluster.
	AzureActiveDirectory AzureActiveDirectoryPtrInput
	// The certificate to use for securing the cluster. The certificate provided will be used for node to node security within the cluster, SSL certificate for cluster management endpoint and default admin client.
	Certificate CertificateDescriptionPtrInput
	// Describes a list of server certificates referenced by common name that are used to secure the cluster.
	CertificateCommonNames ServerCertificateCommonNamesPtrInput
	// The list of client certificates referenced by common name that are allowed to manage the cluster.
	ClientCertificateCommonNames ClientCertificateCommonNameArrayInput
	// The list of client certificates referenced by thumbprint that are allowed to manage the cluster.
	ClientCertificateThumbprints ClientCertificateThumbprintArrayInput
	// The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.
	ClusterCodeVersion pulumi.StringPtrInput
	// The storage account information for storing Service Fabric diagnostic logs.
	DiagnosticsStorageAccountConfig DiagnosticsStorageAccountConfigPtrInput
	// The list of custom fabric settings to configure the cluster.
	FabricSettings SettingsSectionDescriptionArrayInput
	// Azure resource location.
	Location pulumi.StringInput
	// The http management endpoint of the cluster.
	ManagementEndpoint pulumi.StringInput
	// The name of the cluster resource.
	Name pulumi.StringInput
	// The list of node types in the cluster.
	NodeTypes NodeTypeDescriptionArrayInput
	// The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).
	//
	//   - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.
	//   - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.
	//   - Silver - Run the System services with a target replica set count of 5.
	//   - Gold - Run the System services with a target replica set count of 7.
	//   - Platinum - Run the System services with a target replica set count of 9.
	ReliabilityLevel pulumi.StringPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// The server certificate used by reverse proxy.
	ReverseProxyCertificate CertificateDescriptionPtrInput
	// Describes a list of server certificates referenced by common name that are used to secure the cluster.
	ReverseProxyCertificateCommonNames ServerCertificateCommonNamesPtrInput
	// Azure resource tags.
	Tags pulumi.StringMapInput
	// The policy to use when upgrading the cluster.
	UpgradeDescription ClusterUpgradePolicyPtrInput
	// The upgrade mode of the cluster when new Service Fabric runtime version is available.
	//
	//   - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.
	//   - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.
	UpgradeMode pulumi.StringPtrInput
	// The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.
	VmImage pulumi.StringPtrInput
}

func (ClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterArgs)(nil)).Elem()
}
