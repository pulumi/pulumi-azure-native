// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20191101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Defines the authentication method and properties to access the artifacts.
type Authentication struct {
	// The authentication type
	Type string `pulumi:"type"`
}

// AuthenticationInput is an input type that accepts AuthenticationArgs and AuthenticationOutput values.
// You can construct a concrete instance of `AuthenticationInput` via:
//
//          AuthenticationArgs{...}
type AuthenticationInput interface {
	pulumi.Input

	ToAuthenticationOutput() AuthenticationOutput
	ToAuthenticationOutputWithContext(context.Context) AuthenticationOutput
}

// Defines the authentication method and properties to access the artifacts.
type AuthenticationArgs struct {
	// The authentication type
	Type pulumi.StringInput `pulumi:"type"`
}

func (AuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Authentication)(nil)).Elem()
}

func (i AuthenticationArgs) ToAuthenticationOutput() AuthenticationOutput {
	return i.ToAuthenticationOutputWithContext(context.Background())
}

func (i AuthenticationArgs) ToAuthenticationOutputWithContext(ctx context.Context) AuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationOutput)
}

func (i AuthenticationArgs) ToAuthenticationPtrOutput() AuthenticationPtrOutput {
	return i.ToAuthenticationPtrOutputWithContext(context.Background())
}

func (i AuthenticationArgs) ToAuthenticationPtrOutputWithContext(ctx context.Context) AuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationOutput).ToAuthenticationPtrOutputWithContext(ctx)
}

// AuthenticationPtrInput is an input type that accepts AuthenticationArgs, AuthenticationPtr and AuthenticationPtrOutput values.
// You can construct a concrete instance of `AuthenticationPtrInput` via:
//
//          AuthenticationArgs{...}
//
//  or:
//
//          nil
type AuthenticationPtrInput interface {
	pulumi.Input

	ToAuthenticationPtrOutput() AuthenticationPtrOutput
	ToAuthenticationPtrOutputWithContext(context.Context) AuthenticationPtrOutput
}

type authenticationPtrType AuthenticationArgs

func AuthenticationPtr(v *AuthenticationArgs) AuthenticationPtrInput {
	return (*authenticationPtrType)(v)
}

func (*authenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Authentication)(nil)).Elem()
}

func (i *authenticationPtrType) ToAuthenticationPtrOutput() AuthenticationPtrOutput {
	return i.ToAuthenticationPtrOutputWithContext(context.Background())
}

func (i *authenticationPtrType) ToAuthenticationPtrOutputWithContext(ctx context.Context) AuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationPtrOutput)
}

// Defines the authentication method and properties to access the artifacts.
type AuthenticationOutput struct{ *pulumi.OutputState }

func (AuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Authentication)(nil)).Elem()
}

func (o AuthenticationOutput) ToAuthenticationOutput() AuthenticationOutput {
	return o
}

func (o AuthenticationOutput) ToAuthenticationOutputWithContext(ctx context.Context) AuthenticationOutput {
	return o
}

func (o AuthenticationOutput) ToAuthenticationPtrOutput() AuthenticationPtrOutput {
	return o.ToAuthenticationPtrOutputWithContext(context.Background())
}

func (o AuthenticationOutput) ToAuthenticationPtrOutputWithContext(ctx context.Context) AuthenticationPtrOutput {
	return o.ApplyT(func(v Authentication) *Authentication {
		return &v
	}).(AuthenticationPtrOutput)
}

// The authentication type
func (o AuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v Authentication) string { return v.Type }).(pulumi.StringOutput)
}

type AuthenticationPtrOutput struct{ *pulumi.OutputState }

func (AuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Authentication)(nil)).Elem()
}

func (o AuthenticationPtrOutput) ToAuthenticationPtrOutput() AuthenticationPtrOutput {
	return o
}

func (o AuthenticationPtrOutput) ToAuthenticationPtrOutputWithContext(ctx context.Context) AuthenticationPtrOutput {
	return o
}

func (o AuthenticationPtrOutput) Elem() AuthenticationOutput {
	return o.ApplyT(func(v *Authentication) Authentication { return *v }).(AuthenticationOutput)
}

// The authentication type
func (o AuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Authentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Defines the authentication method and properties to access the artifacts.
type AuthenticationResponse struct {
	// The authentication type
	Type string `pulumi:"type"`
}

// AuthenticationResponseInput is an input type that accepts AuthenticationResponseArgs and AuthenticationResponseOutput values.
// You can construct a concrete instance of `AuthenticationResponseInput` via:
//
//          AuthenticationResponseArgs{...}
type AuthenticationResponseInput interface {
	pulumi.Input

	ToAuthenticationResponseOutput() AuthenticationResponseOutput
	ToAuthenticationResponseOutputWithContext(context.Context) AuthenticationResponseOutput
}

// Defines the authentication method and properties to access the artifacts.
type AuthenticationResponseArgs struct {
	// The authentication type
	Type pulumi.StringInput `pulumi:"type"`
}

func (AuthenticationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationResponse)(nil)).Elem()
}

func (i AuthenticationResponseArgs) ToAuthenticationResponseOutput() AuthenticationResponseOutput {
	return i.ToAuthenticationResponseOutputWithContext(context.Background())
}

func (i AuthenticationResponseArgs) ToAuthenticationResponseOutputWithContext(ctx context.Context) AuthenticationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationResponseOutput)
}

func (i AuthenticationResponseArgs) ToAuthenticationResponsePtrOutput() AuthenticationResponsePtrOutput {
	return i.ToAuthenticationResponsePtrOutputWithContext(context.Background())
}

func (i AuthenticationResponseArgs) ToAuthenticationResponsePtrOutputWithContext(ctx context.Context) AuthenticationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationResponseOutput).ToAuthenticationResponsePtrOutputWithContext(ctx)
}

// AuthenticationResponsePtrInput is an input type that accepts AuthenticationResponseArgs, AuthenticationResponsePtr and AuthenticationResponsePtrOutput values.
// You can construct a concrete instance of `AuthenticationResponsePtrInput` via:
//
//          AuthenticationResponseArgs{...}
//
//  or:
//
//          nil
type AuthenticationResponsePtrInput interface {
	pulumi.Input

	ToAuthenticationResponsePtrOutput() AuthenticationResponsePtrOutput
	ToAuthenticationResponsePtrOutputWithContext(context.Context) AuthenticationResponsePtrOutput
}

type authenticationResponsePtrType AuthenticationResponseArgs

func AuthenticationResponsePtr(v *AuthenticationResponseArgs) AuthenticationResponsePtrInput {
	return (*authenticationResponsePtrType)(v)
}

func (*authenticationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationResponse)(nil)).Elem()
}

func (i *authenticationResponsePtrType) ToAuthenticationResponsePtrOutput() AuthenticationResponsePtrOutput {
	return i.ToAuthenticationResponsePtrOutputWithContext(context.Background())
}

func (i *authenticationResponsePtrType) ToAuthenticationResponsePtrOutputWithContext(ctx context.Context) AuthenticationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationResponsePtrOutput)
}

// Defines the authentication method and properties to access the artifacts.
type AuthenticationResponseOutput struct{ *pulumi.OutputState }

func (AuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationResponse)(nil)).Elem()
}

func (o AuthenticationResponseOutput) ToAuthenticationResponseOutput() AuthenticationResponseOutput {
	return o
}

func (o AuthenticationResponseOutput) ToAuthenticationResponseOutputWithContext(ctx context.Context) AuthenticationResponseOutput {
	return o
}

func (o AuthenticationResponseOutput) ToAuthenticationResponsePtrOutput() AuthenticationResponsePtrOutput {
	return o.ToAuthenticationResponsePtrOutputWithContext(context.Background())
}

func (o AuthenticationResponseOutput) ToAuthenticationResponsePtrOutputWithContext(ctx context.Context) AuthenticationResponsePtrOutput {
	return o.ApplyT(func(v AuthenticationResponse) *AuthenticationResponse {
		return &v
	}).(AuthenticationResponsePtrOutput)
}

// The authentication type
func (o AuthenticationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AuthenticationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type AuthenticationResponsePtrOutput struct{ *pulumi.OutputState }

func (AuthenticationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationResponse)(nil)).Elem()
}

func (o AuthenticationResponsePtrOutput) ToAuthenticationResponsePtrOutput() AuthenticationResponsePtrOutput {
	return o
}

func (o AuthenticationResponsePtrOutput) ToAuthenticationResponsePtrOutputWithContext(ctx context.Context) AuthenticationResponsePtrOutput {
	return o
}

func (o AuthenticationResponsePtrOutput) Elem() AuthenticationResponseOutput {
	return o.ApplyT(func(v *AuthenticationResponse) AuthenticationResponse { return *v }).(AuthenticationResponseOutput)
}

// The authentication type
func (o AuthenticationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthenticationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Detailed error information of any failure.
type CloudErrorBodyResponse struct {
	// Error code string.
	Code string `pulumi:"code"`
	// More detailed error information.
	Details []CloudErrorBodyResponse `pulumi:"details"`
	// Descriptive error information.
	Message string `pulumi:"message"`
	// Error target
	Target *string `pulumi:"target"`
}

// CloudErrorBodyResponseInput is an input type that accepts CloudErrorBodyResponseArgs and CloudErrorBodyResponseOutput values.
// You can construct a concrete instance of `CloudErrorBodyResponseInput` via:
//
//          CloudErrorBodyResponseArgs{...}
type CloudErrorBodyResponseInput interface {
	pulumi.Input

	ToCloudErrorBodyResponseOutput() CloudErrorBodyResponseOutput
	ToCloudErrorBodyResponseOutputWithContext(context.Context) CloudErrorBodyResponseOutput
}

// Detailed error information of any failure.
type CloudErrorBodyResponseArgs struct {
	// Error code string.
	Code pulumi.StringInput `pulumi:"code"`
	// More detailed error information.
	Details CloudErrorBodyResponseArrayInput `pulumi:"details"`
	// Descriptive error information.
	Message pulumi.StringInput `pulumi:"message"`
	// Error target
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (CloudErrorBodyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudErrorBodyResponse)(nil)).Elem()
}

func (i CloudErrorBodyResponseArgs) ToCloudErrorBodyResponseOutput() CloudErrorBodyResponseOutput {
	return i.ToCloudErrorBodyResponseOutputWithContext(context.Background())
}

func (i CloudErrorBodyResponseArgs) ToCloudErrorBodyResponseOutputWithContext(ctx context.Context) CloudErrorBodyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudErrorBodyResponseOutput)
}

func (i CloudErrorBodyResponseArgs) ToCloudErrorBodyResponsePtrOutput() CloudErrorBodyResponsePtrOutput {
	return i.ToCloudErrorBodyResponsePtrOutputWithContext(context.Background())
}

func (i CloudErrorBodyResponseArgs) ToCloudErrorBodyResponsePtrOutputWithContext(ctx context.Context) CloudErrorBodyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudErrorBodyResponseOutput).ToCloudErrorBodyResponsePtrOutputWithContext(ctx)
}

// CloudErrorBodyResponsePtrInput is an input type that accepts CloudErrorBodyResponseArgs, CloudErrorBodyResponsePtr and CloudErrorBodyResponsePtrOutput values.
// You can construct a concrete instance of `CloudErrorBodyResponsePtrInput` via:
//
//          CloudErrorBodyResponseArgs{...}
//
//  or:
//
//          nil
type CloudErrorBodyResponsePtrInput interface {
	pulumi.Input

	ToCloudErrorBodyResponsePtrOutput() CloudErrorBodyResponsePtrOutput
	ToCloudErrorBodyResponsePtrOutputWithContext(context.Context) CloudErrorBodyResponsePtrOutput
}

type cloudErrorBodyResponsePtrType CloudErrorBodyResponseArgs

func CloudErrorBodyResponsePtr(v *CloudErrorBodyResponseArgs) CloudErrorBodyResponsePtrInput {
	return (*cloudErrorBodyResponsePtrType)(v)
}

func (*cloudErrorBodyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudErrorBodyResponse)(nil)).Elem()
}

func (i *cloudErrorBodyResponsePtrType) ToCloudErrorBodyResponsePtrOutput() CloudErrorBodyResponsePtrOutput {
	return i.ToCloudErrorBodyResponsePtrOutputWithContext(context.Background())
}

func (i *cloudErrorBodyResponsePtrType) ToCloudErrorBodyResponsePtrOutputWithContext(ctx context.Context) CloudErrorBodyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudErrorBodyResponsePtrOutput)
}

// CloudErrorBodyResponseArrayInput is an input type that accepts CloudErrorBodyResponseArray and CloudErrorBodyResponseArrayOutput values.
// You can construct a concrete instance of `CloudErrorBodyResponseArrayInput` via:
//
//          CloudErrorBodyResponseArray{ CloudErrorBodyResponseArgs{...} }
type CloudErrorBodyResponseArrayInput interface {
	pulumi.Input

	ToCloudErrorBodyResponseArrayOutput() CloudErrorBodyResponseArrayOutput
	ToCloudErrorBodyResponseArrayOutputWithContext(context.Context) CloudErrorBodyResponseArrayOutput
}

type CloudErrorBodyResponseArray []CloudErrorBodyResponseInput

func (CloudErrorBodyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudErrorBodyResponse)(nil)).Elem()
}

func (i CloudErrorBodyResponseArray) ToCloudErrorBodyResponseArrayOutput() CloudErrorBodyResponseArrayOutput {
	return i.ToCloudErrorBodyResponseArrayOutputWithContext(context.Background())
}

func (i CloudErrorBodyResponseArray) ToCloudErrorBodyResponseArrayOutputWithContext(ctx context.Context) CloudErrorBodyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudErrorBodyResponseArrayOutput)
}

// Detailed error information of any failure.
type CloudErrorBodyResponseOutput struct{ *pulumi.OutputState }

func (CloudErrorBodyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudErrorBodyResponse)(nil)).Elem()
}

func (o CloudErrorBodyResponseOutput) ToCloudErrorBodyResponseOutput() CloudErrorBodyResponseOutput {
	return o
}

func (o CloudErrorBodyResponseOutput) ToCloudErrorBodyResponseOutputWithContext(ctx context.Context) CloudErrorBodyResponseOutput {
	return o
}

func (o CloudErrorBodyResponseOutput) ToCloudErrorBodyResponsePtrOutput() CloudErrorBodyResponsePtrOutput {
	return o.ToCloudErrorBodyResponsePtrOutputWithContext(context.Background())
}

func (o CloudErrorBodyResponseOutput) ToCloudErrorBodyResponsePtrOutputWithContext(ctx context.Context) CloudErrorBodyResponsePtrOutput {
	return o.ApplyT(func(v CloudErrorBodyResponse) *CloudErrorBodyResponse {
		return &v
	}).(CloudErrorBodyResponsePtrOutput)
}

// Error code string.
func (o CloudErrorBodyResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v CloudErrorBodyResponse) string { return v.Code }).(pulumi.StringOutput)
}

// More detailed error information.
func (o CloudErrorBodyResponseOutput) Details() CloudErrorBodyResponseArrayOutput {
	return o.ApplyT(func(v CloudErrorBodyResponse) []CloudErrorBodyResponse { return v.Details }).(CloudErrorBodyResponseArrayOutput)
}

// Descriptive error information.
func (o CloudErrorBodyResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v CloudErrorBodyResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Error target
func (o CloudErrorBodyResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudErrorBodyResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type CloudErrorBodyResponsePtrOutput struct{ *pulumi.OutputState }

func (CloudErrorBodyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudErrorBodyResponse)(nil)).Elem()
}

func (o CloudErrorBodyResponsePtrOutput) ToCloudErrorBodyResponsePtrOutput() CloudErrorBodyResponsePtrOutput {
	return o
}

func (o CloudErrorBodyResponsePtrOutput) ToCloudErrorBodyResponsePtrOutputWithContext(ctx context.Context) CloudErrorBodyResponsePtrOutput {
	return o
}

func (o CloudErrorBodyResponsePtrOutput) Elem() CloudErrorBodyResponseOutput {
	return o.ApplyT(func(v *CloudErrorBodyResponse) CloudErrorBodyResponse { return *v }).(CloudErrorBodyResponseOutput)
}

// Error code string.
func (o CloudErrorBodyResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudErrorBodyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

// More detailed error information.
func (o CloudErrorBodyResponsePtrOutput) Details() CloudErrorBodyResponseArrayOutput {
	return o.ApplyT(func(v *CloudErrorBodyResponse) []CloudErrorBodyResponse {
		if v == nil {
			return nil
		}
		return v.Details
	}).(CloudErrorBodyResponseArrayOutput)
}

// Descriptive error information.
func (o CloudErrorBodyResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudErrorBodyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// Error target
func (o CloudErrorBodyResponsePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudErrorBodyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

type CloudErrorBodyResponseArrayOutput struct{ *pulumi.OutputState }

func (CloudErrorBodyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudErrorBodyResponse)(nil)).Elem()
}

func (o CloudErrorBodyResponseArrayOutput) ToCloudErrorBodyResponseArrayOutput() CloudErrorBodyResponseArrayOutput {
	return o
}

func (o CloudErrorBodyResponseArrayOutput) ToCloudErrorBodyResponseArrayOutputWithContext(ctx context.Context) CloudErrorBodyResponseArrayOutput {
	return o
}

func (o CloudErrorBodyResponseArrayOutput) Index(i pulumi.IntInput) CloudErrorBodyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudErrorBodyResponse {
		return vs[0].([]CloudErrorBodyResponse)[vs[1].(int)]
	}).(CloudErrorBodyResponseOutput)
}

// Identity for the resource.
type Identity struct {
	// The list of identities.
	IdentityIds []string `pulumi:"identityIds"`
	// The identity type.
	Type string `pulumi:"type"`
}

// IdentityInput is an input type that accepts IdentityArgs and IdentityOutput values.
// You can construct a concrete instance of `IdentityInput` via:
//
//          IdentityArgs{...}
type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(context.Context) IdentityOutput
}

// Identity for the resource.
type IdentityArgs struct {
	// The list of identities.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The identity type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (i IdentityArgs) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

func (i IdentityArgs) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput).ToIdentityPtrOutputWithContext(ctx)
}

// IdentityPtrInput is an input type that accepts IdentityArgs, IdentityPtr and IdentityPtrOutput values.
// You can construct a concrete instance of `IdentityPtrInput` via:
//
//          IdentityArgs{...}
//
//  or:
//
//          nil
type IdentityPtrInput interface {
	pulumi.Input

	ToIdentityPtrOutput() IdentityPtrOutput
	ToIdentityPtrOutputWithContext(context.Context) IdentityPtrOutput
}

type identityPtrType IdentityArgs

func IdentityPtr(v *IdentityArgs) IdentityPtrInput {
	return (*identityPtrType)(v)
}

func (*identityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *identityPtrType) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i *identityPtrType) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPtrOutput)
}

// Identity for the resource.
type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o.ToIdentityPtrOutputWithContext(context.Background())
}

func (o IdentityOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o.ApplyT(func(v Identity) *Identity {
		return &v
	}).(IdentityPtrOutput)
}

// The list of identities.
func (o IdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Identity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The identity type.
func (o IdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v Identity) string { return v.Type }).(pulumi.StringOutput)
}

type IdentityPtrOutput struct{ *pulumi.OutputState }

func (IdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityPtrOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) Elem() IdentityOutput {
	return o.ApplyT(func(v *Identity) Identity { return *v }).(IdentityOutput)
}

// The list of identities.
func (o IdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Identity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The identity type.
func (o IdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity for the resource.
type IdentityResponse struct {
	// The list of identities.
	IdentityIds []string `pulumi:"identityIds"`
	// The identity type.
	Type string `pulumi:"type"`
}

// IdentityResponseInput is an input type that accepts IdentityResponseArgs and IdentityResponseOutput values.
// You can construct a concrete instance of `IdentityResponseInput` via:
//
//          IdentityResponseArgs{...}
type IdentityResponseInput interface {
	pulumi.Input

	ToIdentityResponseOutput() IdentityResponseOutput
	ToIdentityResponseOutputWithContext(context.Context) IdentityResponseOutput
}

// Identity for the resource.
type IdentityResponseArgs struct {
	// The list of identities.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The identity type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (i IdentityResponseArgs) ToIdentityResponseOutput() IdentityResponseOutput {
	return i.ToIdentityResponseOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput)
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput).ToIdentityResponsePtrOutputWithContext(ctx)
}

// IdentityResponsePtrInput is an input type that accepts IdentityResponseArgs, IdentityResponsePtr and IdentityResponsePtrOutput values.
// You can construct a concrete instance of `IdentityResponsePtrInput` via:
//
//          IdentityResponseArgs{...}
//
//  or:
//
//          nil
type IdentityResponsePtrInput interface {
	pulumi.Input

	ToIdentityResponsePtrOutput() IdentityResponsePtrOutput
	ToIdentityResponsePtrOutputWithContext(context.Context) IdentityResponsePtrOutput
}

type identityResponsePtrType IdentityResponseArgs

func IdentityResponsePtr(v *IdentityResponseArgs) IdentityResponsePtrInput {
	return (*identityResponsePtrType)(v)
}

func (*identityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponsePtrOutput)
}

// Identity for the resource.
type IdentityResponseOutput struct{ *pulumi.OutputState }

func (IdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (o IdentityResponseOutput) ToIdentityResponseOutput() IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o.ApplyT(func(v IdentityResponse) *IdentityResponse {
		return &v
	}).(IdentityResponsePtrOutput)
}

// The list of identities.
func (o IdentityResponseOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityResponse) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The identity type.
func (o IdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

type IdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) Elem() IdentityResponseOutput {
	return o.ApplyT(func(v *IdentityResponse) IdentityResponse { return *v }).(IdentityResponseOutput)
}

// The list of identities.
func (o IdentityResponsePtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityResponse) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The identity type.
func (o IdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Supplementary contextual messages during a rollout.
type MessageResponse struct {
	// The actual message text.
	Message string `pulumi:"message"`
	// Time in UTC this message was provided.
	TimeStamp string `pulumi:"timeStamp"`
}

// MessageResponseInput is an input type that accepts MessageResponseArgs and MessageResponseOutput values.
// You can construct a concrete instance of `MessageResponseInput` via:
//
//          MessageResponseArgs{...}
type MessageResponseInput interface {
	pulumi.Input

	ToMessageResponseOutput() MessageResponseOutput
	ToMessageResponseOutputWithContext(context.Context) MessageResponseOutput
}

// Supplementary contextual messages during a rollout.
type MessageResponseArgs struct {
	// The actual message text.
	Message pulumi.StringInput `pulumi:"message"`
	// Time in UTC this message was provided.
	TimeStamp pulumi.StringInput `pulumi:"timeStamp"`
}

func (MessageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MessageResponse)(nil)).Elem()
}

func (i MessageResponseArgs) ToMessageResponseOutput() MessageResponseOutput {
	return i.ToMessageResponseOutputWithContext(context.Background())
}

func (i MessageResponseArgs) ToMessageResponseOutputWithContext(ctx context.Context) MessageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MessageResponseOutput)
}

// MessageResponseArrayInput is an input type that accepts MessageResponseArray and MessageResponseArrayOutput values.
// You can construct a concrete instance of `MessageResponseArrayInput` via:
//
//          MessageResponseArray{ MessageResponseArgs{...} }
type MessageResponseArrayInput interface {
	pulumi.Input

	ToMessageResponseArrayOutput() MessageResponseArrayOutput
	ToMessageResponseArrayOutputWithContext(context.Context) MessageResponseArrayOutput
}

type MessageResponseArray []MessageResponseInput

func (MessageResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MessageResponse)(nil)).Elem()
}

func (i MessageResponseArray) ToMessageResponseArrayOutput() MessageResponseArrayOutput {
	return i.ToMessageResponseArrayOutputWithContext(context.Background())
}

func (i MessageResponseArray) ToMessageResponseArrayOutputWithContext(ctx context.Context) MessageResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MessageResponseArrayOutput)
}

// Supplementary contextual messages during a rollout.
type MessageResponseOutput struct{ *pulumi.OutputState }

func (MessageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MessageResponse)(nil)).Elem()
}

func (o MessageResponseOutput) ToMessageResponseOutput() MessageResponseOutput {
	return o
}

func (o MessageResponseOutput) ToMessageResponseOutputWithContext(ctx context.Context) MessageResponseOutput {
	return o
}

// The actual message text.
func (o MessageResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MessageResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Time in UTC this message was provided.
func (o MessageResponseOutput) TimeStamp() pulumi.StringOutput {
	return o.ApplyT(func(v MessageResponse) string { return v.TimeStamp }).(pulumi.StringOutput)
}

type MessageResponseArrayOutput struct{ *pulumi.OutputState }

func (MessageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MessageResponse)(nil)).Elem()
}

func (o MessageResponseArrayOutput) ToMessageResponseArrayOutput() MessageResponseArrayOutput {
	return o
}

func (o MessageResponseArrayOutput) ToMessageResponseArrayOutputWithContext(ctx context.Context) MessageResponseArrayOutput {
	return o
}

func (o MessageResponseArrayOutput) Index(i pulumi.IntInput) MessageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MessageResponse {
		return vs[0].([]MessageResponse)[vs[1].(int)]
	}).(MessageResponseOutput)
}

// The properties that define a step.
type PrePostStep struct {
	// The resource Id of the step to be run.
	StepId string `pulumi:"stepId"`
}

// PrePostStepInput is an input type that accepts PrePostStepArgs and PrePostStepOutput values.
// You can construct a concrete instance of `PrePostStepInput` via:
//
//          PrePostStepArgs{...}
type PrePostStepInput interface {
	pulumi.Input

	ToPrePostStepOutput() PrePostStepOutput
	ToPrePostStepOutputWithContext(context.Context) PrePostStepOutput
}

// The properties that define a step.
type PrePostStepArgs struct {
	// The resource Id of the step to be run.
	StepId pulumi.StringInput `pulumi:"stepId"`
}

func (PrePostStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrePostStep)(nil)).Elem()
}

func (i PrePostStepArgs) ToPrePostStepOutput() PrePostStepOutput {
	return i.ToPrePostStepOutputWithContext(context.Background())
}

func (i PrePostStepArgs) ToPrePostStepOutputWithContext(ctx context.Context) PrePostStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrePostStepOutput)
}

// PrePostStepArrayInput is an input type that accepts PrePostStepArray and PrePostStepArrayOutput values.
// You can construct a concrete instance of `PrePostStepArrayInput` via:
//
//          PrePostStepArray{ PrePostStepArgs{...} }
type PrePostStepArrayInput interface {
	pulumi.Input

	ToPrePostStepArrayOutput() PrePostStepArrayOutput
	ToPrePostStepArrayOutputWithContext(context.Context) PrePostStepArrayOutput
}

type PrePostStepArray []PrePostStepInput

func (PrePostStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrePostStep)(nil)).Elem()
}

func (i PrePostStepArray) ToPrePostStepArrayOutput() PrePostStepArrayOutput {
	return i.ToPrePostStepArrayOutputWithContext(context.Background())
}

func (i PrePostStepArray) ToPrePostStepArrayOutputWithContext(ctx context.Context) PrePostStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrePostStepArrayOutput)
}

// The properties that define a step.
type PrePostStepOutput struct{ *pulumi.OutputState }

func (PrePostStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrePostStep)(nil)).Elem()
}

func (o PrePostStepOutput) ToPrePostStepOutput() PrePostStepOutput {
	return o
}

func (o PrePostStepOutput) ToPrePostStepOutputWithContext(ctx context.Context) PrePostStepOutput {
	return o
}

// The resource Id of the step to be run.
func (o PrePostStepOutput) StepId() pulumi.StringOutput {
	return o.ApplyT(func(v PrePostStep) string { return v.StepId }).(pulumi.StringOutput)
}

type PrePostStepArrayOutput struct{ *pulumi.OutputState }

func (PrePostStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrePostStep)(nil)).Elem()
}

func (o PrePostStepArrayOutput) ToPrePostStepArrayOutput() PrePostStepArrayOutput {
	return o
}

func (o PrePostStepArrayOutput) ToPrePostStepArrayOutputWithContext(ctx context.Context) PrePostStepArrayOutput {
	return o
}

func (o PrePostStepArrayOutput) Index(i pulumi.IntInput) PrePostStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrePostStep {
		return vs[0].([]PrePostStep)[vs[1].(int)]
	}).(PrePostStepOutput)
}

// The properties that define a step.
type PrePostStepResponse struct {
	// The resource Id of the step to be run.
	StepId string `pulumi:"stepId"`
}

// PrePostStepResponseInput is an input type that accepts PrePostStepResponseArgs and PrePostStepResponseOutput values.
// You can construct a concrete instance of `PrePostStepResponseInput` via:
//
//          PrePostStepResponseArgs{...}
type PrePostStepResponseInput interface {
	pulumi.Input

	ToPrePostStepResponseOutput() PrePostStepResponseOutput
	ToPrePostStepResponseOutputWithContext(context.Context) PrePostStepResponseOutput
}

// The properties that define a step.
type PrePostStepResponseArgs struct {
	// The resource Id of the step to be run.
	StepId pulumi.StringInput `pulumi:"stepId"`
}

func (PrePostStepResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrePostStepResponse)(nil)).Elem()
}

func (i PrePostStepResponseArgs) ToPrePostStepResponseOutput() PrePostStepResponseOutput {
	return i.ToPrePostStepResponseOutputWithContext(context.Background())
}

func (i PrePostStepResponseArgs) ToPrePostStepResponseOutputWithContext(ctx context.Context) PrePostStepResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrePostStepResponseOutput)
}

// PrePostStepResponseArrayInput is an input type that accepts PrePostStepResponseArray and PrePostStepResponseArrayOutput values.
// You can construct a concrete instance of `PrePostStepResponseArrayInput` via:
//
//          PrePostStepResponseArray{ PrePostStepResponseArgs{...} }
type PrePostStepResponseArrayInput interface {
	pulumi.Input

	ToPrePostStepResponseArrayOutput() PrePostStepResponseArrayOutput
	ToPrePostStepResponseArrayOutputWithContext(context.Context) PrePostStepResponseArrayOutput
}

type PrePostStepResponseArray []PrePostStepResponseInput

func (PrePostStepResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrePostStepResponse)(nil)).Elem()
}

func (i PrePostStepResponseArray) ToPrePostStepResponseArrayOutput() PrePostStepResponseArrayOutput {
	return i.ToPrePostStepResponseArrayOutputWithContext(context.Background())
}

func (i PrePostStepResponseArray) ToPrePostStepResponseArrayOutputWithContext(ctx context.Context) PrePostStepResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrePostStepResponseArrayOutput)
}

// The properties that define a step.
type PrePostStepResponseOutput struct{ *pulumi.OutputState }

func (PrePostStepResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrePostStepResponse)(nil)).Elem()
}

func (o PrePostStepResponseOutput) ToPrePostStepResponseOutput() PrePostStepResponseOutput {
	return o
}

func (o PrePostStepResponseOutput) ToPrePostStepResponseOutputWithContext(ctx context.Context) PrePostStepResponseOutput {
	return o
}

// The resource Id of the step to be run.
func (o PrePostStepResponseOutput) StepId() pulumi.StringOutput {
	return o.ApplyT(func(v PrePostStepResponse) string { return v.StepId }).(pulumi.StringOutput)
}

type PrePostStepResponseArrayOutput struct{ *pulumi.OutputState }

func (PrePostStepResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrePostStepResponse)(nil)).Elem()
}

func (o PrePostStepResponseArrayOutput) ToPrePostStepResponseArrayOutput() PrePostStepResponseArrayOutput {
	return o
}

func (o PrePostStepResponseArrayOutput) ToPrePostStepResponseArrayOutputWithContext(ctx context.Context) PrePostStepResponseArrayOutput {
	return o
}

func (o PrePostStepResponseArrayOutput) Index(i pulumi.IntInput) PrePostStepResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrePostStepResponse {
		return vs[0].([]PrePostStepResponse)[vs[1].(int)]
	}).(PrePostStepResponseOutput)
}

// Individual resource operation information.
type ResourceOperationResponse struct {
	// Unique identifier of the operation. For ARM resources, this is the operationId obtained from ARM service.
	OperationId string `pulumi:"operationId"`
	// State of the resource deployment. For ARM resources, this is the current provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Name of the resource as specified in the artifacts. For ARM resources, this is the name of the resource specified in the template.
	ResourceName *string `pulumi:"resourceName"`
	// Type of the resource as specified in the artifacts. For ARM resources, this is the type of the resource specified in the template.
	ResourceType *string `pulumi:"resourceType"`
	// Http status code of the operation.
	StatusCode string `pulumi:"statusCode"`
	// Descriptive information of the resource operation.
	StatusMessage string `pulumi:"statusMessage"`
}

// ResourceOperationResponseInput is an input type that accepts ResourceOperationResponseArgs and ResourceOperationResponseOutput values.
// You can construct a concrete instance of `ResourceOperationResponseInput` via:
//
//          ResourceOperationResponseArgs{...}
type ResourceOperationResponseInput interface {
	pulumi.Input

	ToResourceOperationResponseOutput() ResourceOperationResponseOutput
	ToResourceOperationResponseOutputWithContext(context.Context) ResourceOperationResponseOutput
}

// Individual resource operation information.
type ResourceOperationResponseArgs struct {
	// Unique identifier of the operation. For ARM resources, this is the operationId obtained from ARM service.
	OperationId pulumi.StringInput `pulumi:"operationId"`
	// State of the resource deployment. For ARM resources, this is the current provisioning state of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Name of the resource as specified in the artifacts. For ARM resources, this is the name of the resource specified in the template.
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// Type of the resource as specified in the artifacts. For ARM resources, this is the type of the resource specified in the template.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// Http status code of the operation.
	StatusCode pulumi.StringInput `pulumi:"statusCode"`
	// Descriptive information of the resource operation.
	StatusMessage pulumi.StringInput `pulumi:"statusMessage"`
}

func (ResourceOperationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceOperationResponse)(nil)).Elem()
}

func (i ResourceOperationResponseArgs) ToResourceOperationResponseOutput() ResourceOperationResponseOutput {
	return i.ToResourceOperationResponseOutputWithContext(context.Background())
}

func (i ResourceOperationResponseArgs) ToResourceOperationResponseOutputWithContext(ctx context.Context) ResourceOperationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceOperationResponseOutput)
}

// ResourceOperationResponseArrayInput is an input type that accepts ResourceOperationResponseArray and ResourceOperationResponseArrayOutput values.
// You can construct a concrete instance of `ResourceOperationResponseArrayInput` via:
//
//          ResourceOperationResponseArray{ ResourceOperationResponseArgs{...} }
type ResourceOperationResponseArrayInput interface {
	pulumi.Input

	ToResourceOperationResponseArrayOutput() ResourceOperationResponseArrayOutput
	ToResourceOperationResponseArrayOutputWithContext(context.Context) ResourceOperationResponseArrayOutput
}

type ResourceOperationResponseArray []ResourceOperationResponseInput

func (ResourceOperationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceOperationResponse)(nil)).Elem()
}

func (i ResourceOperationResponseArray) ToResourceOperationResponseArrayOutput() ResourceOperationResponseArrayOutput {
	return i.ToResourceOperationResponseArrayOutputWithContext(context.Background())
}

func (i ResourceOperationResponseArray) ToResourceOperationResponseArrayOutputWithContext(ctx context.Context) ResourceOperationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceOperationResponseArrayOutput)
}

// Individual resource operation information.
type ResourceOperationResponseOutput struct{ *pulumi.OutputState }

func (ResourceOperationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceOperationResponse)(nil)).Elem()
}

func (o ResourceOperationResponseOutput) ToResourceOperationResponseOutput() ResourceOperationResponseOutput {
	return o
}

func (o ResourceOperationResponseOutput) ToResourceOperationResponseOutputWithContext(ctx context.Context) ResourceOperationResponseOutput {
	return o
}

// Unique identifier of the operation. For ARM resources, this is the operationId obtained from ARM service.
func (o ResourceOperationResponseOutput) OperationId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceOperationResponse) string { return v.OperationId }).(pulumi.StringOutput)
}

// State of the resource deployment. For ARM resources, this is the current provisioning state of the resource.
func (o ResourceOperationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceOperationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Name of the resource as specified in the artifacts. For ARM resources, this is the name of the resource specified in the template.
func (o ResourceOperationResponseOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceOperationResponse) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// Type of the resource as specified in the artifacts. For ARM resources, this is the type of the resource specified in the template.
func (o ResourceOperationResponseOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceOperationResponse) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// Http status code of the operation.
func (o ResourceOperationResponseOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceOperationResponse) string { return v.StatusCode }).(pulumi.StringOutput)
}

// Descriptive information of the resource operation.
func (o ResourceOperationResponseOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceOperationResponse) string { return v.StatusMessage }).(pulumi.StringOutput)
}

type ResourceOperationResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceOperationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceOperationResponse)(nil)).Elem()
}

func (o ResourceOperationResponseArrayOutput) ToResourceOperationResponseArrayOutput() ResourceOperationResponseArrayOutput {
	return o
}

func (o ResourceOperationResponseArrayOutput) ToResourceOperationResponseArrayOutputWithContext(ctx context.Context) ResourceOperationResponseArrayOutput {
	return o
}

func (o ResourceOperationResponseArrayOutput) Index(i pulumi.IntInput) ResourceOperationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceOperationResponse {
		return vs[0].([]ResourceOperationResponse)[vs[1].(int)]
	}).(ResourceOperationResponseOutput)
}

// Detailed runtime information of the rollout.
type RolloutOperationInfoResponse struct {
	// The start time of the rollout in UTC. This property will not be set if the rollout has not completed yet.
	EndTime string `pulumi:"endTime"`
	// The detailed error information for any failure.
	Error CloudErrorBodyResponse `pulumi:"error"`
	// The ordinal count of the number of retry attempts on a rollout. 0 if no retries of the rollout have been performed. If the rollout is updated with a PUT, this count is reset to 0.
	RetryAttempt int `pulumi:"retryAttempt"`
	// True, if all steps that succeeded on the previous run/attempt were chosen to be skipped in this retry attempt. False, otherwise.
	SkipSucceededOnRetry bool `pulumi:"skipSucceededOnRetry"`
	// The start time of the rollout in UTC.
	StartTime string `pulumi:"startTime"`
}

// RolloutOperationInfoResponseInput is an input type that accepts RolloutOperationInfoResponseArgs and RolloutOperationInfoResponseOutput values.
// You can construct a concrete instance of `RolloutOperationInfoResponseInput` via:
//
//          RolloutOperationInfoResponseArgs{...}
type RolloutOperationInfoResponseInput interface {
	pulumi.Input

	ToRolloutOperationInfoResponseOutput() RolloutOperationInfoResponseOutput
	ToRolloutOperationInfoResponseOutputWithContext(context.Context) RolloutOperationInfoResponseOutput
}

// Detailed runtime information of the rollout.
type RolloutOperationInfoResponseArgs struct {
	// The start time of the rollout in UTC. This property will not be set if the rollout has not completed yet.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// The detailed error information for any failure.
	Error CloudErrorBodyResponseInput `pulumi:"error"`
	// The ordinal count of the number of retry attempts on a rollout. 0 if no retries of the rollout have been performed. If the rollout is updated with a PUT, this count is reset to 0.
	RetryAttempt pulumi.IntInput `pulumi:"retryAttempt"`
	// True, if all steps that succeeded on the previous run/attempt were chosen to be skipped in this retry attempt. False, otherwise.
	SkipSucceededOnRetry pulumi.BoolInput `pulumi:"skipSucceededOnRetry"`
	// The start time of the rollout in UTC.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (RolloutOperationInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RolloutOperationInfoResponse)(nil)).Elem()
}

func (i RolloutOperationInfoResponseArgs) ToRolloutOperationInfoResponseOutput() RolloutOperationInfoResponseOutput {
	return i.ToRolloutOperationInfoResponseOutputWithContext(context.Background())
}

func (i RolloutOperationInfoResponseArgs) ToRolloutOperationInfoResponseOutputWithContext(ctx context.Context) RolloutOperationInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolloutOperationInfoResponseOutput)
}

// Detailed runtime information of the rollout.
type RolloutOperationInfoResponseOutput struct{ *pulumi.OutputState }

func (RolloutOperationInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RolloutOperationInfoResponse)(nil)).Elem()
}

func (o RolloutOperationInfoResponseOutput) ToRolloutOperationInfoResponseOutput() RolloutOperationInfoResponseOutput {
	return o
}

func (o RolloutOperationInfoResponseOutput) ToRolloutOperationInfoResponseOutputWithContext(ctx context.Context) RolloutOperationInfoResponseOutput {
	return o
}

// The start time of the rollout in UTC. This property will not be set if the rollout has not completed yet.
func (o RolloutOperationInfoResponseOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v RolloutOperationInfoResponse) string { return v.EndTime }).(pulumi.StringOutput)
}

// The detailed error information for any failure.
func (o RolloutOperationInfoResponseOutput) Error() CloudErrorBodyResponseOutput {
	return o.ApplyT(func(v RolloutOperationInfoResponse) CloudErrorBodyResponse { return v.Error }).(CloudErrorBodyResponseOutput)
}

// The ordinal count of the number of retry attempts on a rollout. 0 if no retries of the rollout have been performed. If the rollout is updated with a PUT, this count is reset to 0.
func (o RolloutOperationInfoResponseOutput) RetryAttempt() pulumi.IntOutput {
	return o.ApplyT(func(v RolloutOperationInfoResponse) int { return v.RetryAttempt }).(pulumi.IntOutput)
}

// True, if all steps that succeeded on the previous run/attempt were chosen to be skipped in this retry attempt. False, otherwise.
func (o RolloutOperationInfoResponseOutput) SkipSucceededOnRetry() pulumi.BoolOutput {
	return o.ApplyT(func(v RolloutOperationInfoResponse) bool { return v.SkipSucceededOnRetry }).(pulumi.BoolOutput)
}

// The start time of the rollout in UTC.
func (o RolloutOperationInfoResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v RolloutOperationInfoResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// Defines a specific step on a target service unit.
type RolloutStepResponse struct {
	// Supplementary informative messages during rollout.
	Messages []MessageResponse `pulumi:"messages"`
	// Name of the step.
	Name string `pulumi:"name"`
	// Detailed information of specific action execution.
	OperationInfo StepOperationInfoResponse `pulumi:"operationInfo"`
	// Set of resource operations that were performed, if any, on an Azure resource.
	ResourceOperations []ResourceOperationResponse `pulumi:"resourceOperations"`
	// Current state of the step.
	Status string `pulumi:"status"`
	// The step group the current step is part of.
	StepGroup *string `pulumi:"stepGroup"`
}

// RolloutStepResponseInput is an input type that accepts RolloutStepResponseArgs and RolloutStepResponseOutput values.
// You can construct a concrete instance of `RolloutStepResponseInput` via:
//
//          RolloutStepResponseArgs{...}
type RolloutStepResponseInput interface {
	pulumi.Input

	ToRolloutStepResponseOutput() RolloutStepResponseOutput
	ToRolloutStepResponseOutputWithContext(context.Context) RolloutStepResponseOutput
}

// Defines a specific step on a target service unit.
type RolloutStepResponseArgs struct {
	// Supplementary informative messages during rollout.
	Messages MessageResponseArrayInput `pulumi:"messages"`
	// Name of the step.
	Name pulumi.StringInput `pulumi:"name"`
	// Detailed information of specific action execution.
	OperationInfo StepOperationInfoResponseInput `pulumi:"operationInfo"`
	// Set of resource operations that were performed, if any, on an Azure resource.
	ResourceOperations ResourceOperationResponseArrayInput `pulumi:"resourceOperations"`
	// Current state of the step.
	Status pulumi.StringInput `pulumi:"status"`
	// The step group the current step is part of.
	StepGroup pulumi.StringPtrInput `pulumi:"stepGroup"`
}

func (RolloutStepResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RolloutStepResponse)(nil)).Elem()
}

func (i RolloutStepResponseArgs) ToRolloutStepResponseOutput() RolloutStepResponseOutput {
	return i.ToRolloutStepResponseOutputWithContext(context.Background())
}

func (i RolloutStepResponseArgs) ToRolloutStepResponseOutputWithContext(ctx context.Context) RolloutStepResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolloutStepResponseOutput)
}

// RolloutStepResponseArrayInput is an input type that accepts RolloutStepResponseArray and RolloutStepResponseArrayOutput values.
// You can construct a concrete instance of `RolloutStepResponseArrayInput` via:
//
//          RolloutStepResponseArray{ RolloutStepResponseArgs{...} }
type RolloutStepResponseArrayInput interface {
	pulumi.Input

	ToRolloutStepResponseArrayOutput() RolloutStepResponseArrayOutput
	ToRolloutStepResponseArrayOutputWithContext(context.Context) RolloutStepResponseArrayOutput
}

type RolloutStepResponseArray []RolloutStepResponseInput

func (RolloutStepResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolloutStepResponse)(nil)).Elem()
}

func (i RolloutStepResponseArray) ToRolloutStepResponseArrayOutput() RolloutStepResponseArrayOutput {
	return i.ToRolloutStepResponseArrayOutputWithContext(context.Background())
}

func (i RolloutStepResponseArray) ToRolloutStepResponseArrayOutputWithContext(ctx context.Context) RolloutStepResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolloutStepResponseArrayOutput)
}

// Defines a specific step on a target service unit.
type RolloutStepResponseOutput struct{ *pulumi.OutputState }

func (RolloutStepResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RolloutStepResponse)(nil)).Elem()
}

func (o RolloutStepResponseOutput) ToRolloutStepResponseOutput() RolloutStepResponseOutput {
	return o
}

func (o RolloutStepResponseOutput) ToRolloutStepResponseOutputWithContext(ctx context.Context) RolloutStepResponseOutput {
	return o
}

// Supplementary informative messages during rollout.
func (o RolloutStepResponseOutput) Messages() MessageResponseArrayOutput {
	return o.ApplyT(func(v RolloutStepResponse) []MessageResponse { return v.Messages }).(MessageResponseArrayOutput)
}

// Name of the step.
func (o RolloutStepResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RolloutStepResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Detailed information of specific action execution.
func (o RolloutStepResponseOutput) OperationInfo() StepOperationInfoResponseOutput {
	return o.ApplyT(func(v RolloutStepResponse) StepOperationInfoResponse { return v.OperationInfo }).(StepOperationInfoResponseOutput)
}

// Set of resource operations that were performed, if any, on an Azure resource.
func (o RolloutStepResponseOutput) ResourceOperations() ResourceOperationResponseArrayOutput {
	return o.ApplyT(func(v RolloutStepResponse) []ResourceOperationResponse { return v.ResourceOperations }).(ResourceOperationResponseArrayOutput)
}

// Current state of the step.
func (o RolloutStepResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v RolloutStepResponse) string { return v.Status }).(pulumi.StringOutput)
}

// The step group the current step is part of.
func (o RolloutStepResponseOutput) StepGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RolloutStepResponse) *string { return v.StepGroup }).(pulumi.StringPtrOutput)
}

type RolloutStepResponseArrayOutput struct{ *pulumi.OutputState }

func (RolloutStepResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolloutStepResponse)(nil)).Elem()
}

func (o RolloutStepResponseArrayOutput) ToRolloutStepResponseArrayOutput() RolloutStepResponseArrayOutput {
	return o
}

func (o RolloutStepResponseArrayOutput) ToRolloutStepResponseArrayOutputWithContext(ctx context.Context) RolloutStepResponseArrayOutput {
	return o
}

func (o RolloutStepResponseArrayOutput) Index(i pulumi.IntInput) RolloutStepResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RolloutStepResponse {
		return vs[0].([]RolloutStepResponse)[vs[1].(int)]
	}).(RolloutStepResponseOutput)
}

// Defines a service.
type ServiceResponse struct {
	// Name of the service.
	Name *string `pulumi:"name"`
	// The detailed information about the units that make up the service.
	ServiceUnits []ServiceUnitResponse `pulumi:"serviceUnits"`
	// The Azure location to which the resources in the service belong to or should be deployed to.
	TargetLocation string `pulumi:"targetLocation"`
	// The subscription to which the resources in the service belong to or should be deployed to.
	TargetSubscriptionId string `pulumi:"targetSubscriptionId"`
}

// ServiceResponseInput is an input type that accepts ServiceResponseArgs and ServiceResponseOutput values.
// You can construct a concrete instance of `ServiceResponseInput` via:
//
//          ServiceResponseArgs{...}
type ServiceResponseInput interface {
	pulumi.Input

	ToServiceResponseOutput() ServiceResponseOutput
	ToServiceResponseOutputWithContext(context.Context) ServiceResponseOutput
}

// Defines a service.
type ServiceResponseArgs struct {
	// Name of the service.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The detailed information about the units that make up the service.
	ServiceUnits ServiceUnitResponseArrayInput `pulumi:"serviceUnits"`
	// The Azure location to which the resources in the service belong to or should be deployed to.
	TargetLocation pulumi.StringInput `pulumi:"targetLocation"`
	// The subscription to which the resources in the service belong to or should be deployed to.
	TargetSubscriptionId pulumi.StringInput `pulumi:"targetSubscriptionId"`
}

func (ServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceResponse)(nil)).Elem()
}

func (i ServiceResponseArgs) ToServiceResponseOutput() ServiceResponseOutput {
	return i.ToServiceResponseOutputWithContext(context.Background())
}

func (i ServiceResponseArgs) ToServiceResponseOutputWithContext(ctx context.Context) ServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceResponseOutput)
}

// ServiceResponseArrayInput is an input type that accepts ServiceResponseArray and ServiceResponseArrayOutput values.
// You can construct a concrete instance of `ServiceResponseArrayInput` via:
//
//          ServiceResponseArray{ ServiceResponseArgs{...} }
type ServiceResponseArrayInput interface {
	pulumi.Input

	ToServiceResponseArrayOutput() ServiceResponseArrayOutput
	ToServiceResponseArrayOutputWithContext(context.Context) ServiceResponseArrayOutput
}

type ServiceResponseArray []ServiceResponseInput

func (ServiceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceResponse)(nil)).Elem()
}

func (i ServiceResponseArray) ToServiceResponseArrayOutput() ServiceResponseArrayOutput {
	return i.ToServiceResponseArrayOutputWithContext(context.Background())
}

func (i ServiceResponseArray) ToServiceResponseArrayOutputWithContext(ctx context.Context) ServiceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceResponseArrayOutput)
}

// Defines a service.
type ServiceResponseOutput struct{ *pulumi.OutputState }

func (ServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceResponse)(nil)).Elem()
}

func (o ServiceResponseOutput) ToServiceResponseOutput() ServiceResponseOutput {
	return o
}

func (o ServiceResponseOutput) ToServiceResponseOutputWithContext(ctx context.Context) ServiceResponseOutput {
	return o
}

// Name of the service.
func (o ServiceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The detailed information about the units that make up the service.
func (o ServiceResponseOutput) ServiceUnits() ServiceUnitResponseArrayOutput {
	return o.ApplyT(func(v ServiceResponse) []ServiceUnitResponse { return v.ServiceUnits }).(ServiceUnitResponseArrayOutput)
}

// The Azure location to which the resources in the service belong to or should be deployed to.
func (o ServiceResponseOutput) TargetLocation() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceResponse) string { return v.TargetLocation }).(pulumi.StringOutput)
}

// The subscription to which the resources in the service belong to or should be deployed to.
func (o ServiceResponseOutput) TargetSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceResponse) string { return v.TargetSubscriptionId }).(pulumi.StringOutput)
}

type ServiceResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceResponse)(nil)).Elem()
}

func (o ServiceResponseArrayOutput) ToServiceResponseArrayOutput() ServiceResponseArrayOutput {
	return o
}

func (o ServiceResponseArrayOutput) ToServiceResponseArrayOutputWithContext(ctx context.Context) ServiceResponseArrayOutput {
	return o
}

func (o ServiceResponseArrayOutput) Index(i pulumi.IntInput) ServiceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceResponse {
		return vs[0].([]ServiceResponse)[vs[1].(int)]
	}).(ServiceResponseOutput)
}

// Defines the artifacts of a service unit.
type ServiceUnitArtifacts struct {
	// The path to the ARM parameters file relative to the artifact source.
	ParametersArtifactSourceRelativePath *string `pulumi:"parametersArtifactSourceRelativePath"`
	// The full URI of the ARM parameters file with the SAS token.
	ParametersUri *string `pulumi:"parametersUri"`
	// The path to the ARM template file relative to the artifact source.
	TemplateArtifactSourceRelativePath *string `pulumi:"templateArtifactSourceRelativePath"`
	// The full URI of the ARM template file with the SAS token.
	TemplateUri *string `pulumi:"templateUri"`
}

// ServiceUnitArtifactsInput is an input type that accepts ServiceUnitArtifactsArgs and ServiceUnitArtifactsOutput values.
// You can construct a concrete instance of `ServiceUnitArtifactsInput` via:
//
//          ServiceUnitArtifactsArgs{...}
type ServiceUnitArtifactsInput interface {
	pulumi.Input

	ToServiceUnitArtifactsOutput() ServiceUnitArtifactsOutput
	ToServiceUnitArtifactsOutputWithContext(context.Context) ServiceUnitArtifactsOutput
}

// Defines the artifacts of a service unit.
type ServiceUnitArtifactsArgs struct {
	// The path to the ARM parameters file relative to the artifact source.
	ParametersArtifactSourceRelativePath pulumi.StringPtrInput `pulumi:"parametersArtifactSourceRelativePath"`
	// The full URI of the ARM parameters file with the SAS token.
	ParametersUri pulumi.StringPtrInput `pulumi:"parametersUri"`
	// The path to the ARM template file relative to the artifact source.
	TemplateArtifactSourceRelativePath pulumi.StringPtrInput `pulumi:"templateArtifactSourceRelativePath"`
	// The full URI of the ARM template file with the SAS token.
	TemplateUri pulumi.StringPtrInput `pulumi:"templateUri"`
}

func (ServiceUnitArtifactsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUnitArtifacts)(nil)).Elem()
}

func (i ServiceUnitArtifactsArgs) ToServiceUnitArtifactsOutput() ServiceUnitArtifactsOutput {
	return i.ToServiceUnitArtifactsOutputWithContext(context.Background())
}

func (i ServiceUnitArtifactsArgs) ToServiceUnitArtifactsOutputWithContext(ctx context.Context) ServiceUnitArtifactsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUnitArtifactsOutput)
}

func (i ServiceUnitArtifactsArgs) ToServiceUnitArtifactsPtrOutput() ServiceUnitArtifactsPtrOutput {
	return i.ToServiceUnitArtifactsPtrOutputWithContext(context.Background())
}

func (i ServiceUnitArtifactsArgs) ToServiceUnitArtifactsPtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUnitArtifactsOutput).ToServiceUnitArtifactsPtrOutputWithContext(ctx)
}

// ServiceUnitArtifactsPtrInput is an input type that accepts ServiceUnitArtifactsArgs, ServiceUnitArtifactsPtr and ServiceUnitArtifactsPtrOutput values.
// You can construct a concrete instance of `ServiceUnitArtifactsPtrInput` via:
//
//          ServiceUnitArtifactsArgs{...}
//
//  or:
//
//          nil
type ServiceUnitArtifactsPtrInput interface {
	pulumi.Input

	ToServiceUnitArtifactsPtrOutput() ServiceUnitArtifactsPtrOutput
	ToServiceUnitArtifactsPtrOutputWithContext(context.Context) ServiceUnitArtifactsPtrOutput
}

type serviceUnitArtifactsPtrType ServiceUnitArtifactsArgs

func ServiceUnitArtifactsPtr(v *ServiceUnitArtifactsArgs) ServiceUnitArtifactsPtrInput {
	return (*serviceUnitArtifactsPtrType)(v)
}

func (*serviceUnitArtifactsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceUnitArtifacts)(nil)).Elem()
}

func (i *serviceUnitArtifactsPtrType) ToServiceUnitArtifactsPtrOutput() ServiceUnitArtifactsPtrOutput {
	return i.ToServiceUnitArtifactsPtrOutputWithContext(context.Background())
}

func (i *serviceUnitArtifactsPtrType) ToServiceUnitArtifactsPtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUnitArtifactsPtrOutput)
}

// Defines the artifacts of a service unit.
type ServiceUnitArtifactsOutput struct{ *pulumi.OutputState }

func (ServiceUnitArtifactsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUnitArtifacts)(nil)).Elem()
}

func (o ServiceUnitArtifactsOutput) ToServiceUnitArtifactsOutput() ServiceUnitArtifactsOutput {
	return o
}

func (o ServiceUnitArtifactsOutput) ToServiceUnitArtifactsOutputWithContext(ctx context.Context) ServiceUnitArtifactsOutput {
	return o
}

func (o ServiceUnitArtifactsOutput) ToServiceUnitArtifactsPtrOutput() ServiceUnitArtifactsPtrOutput {
	return o.ToServiceUnitArtifactsPtrOutputWithContext(context.Background())
}

func (o ServiceUnitArtifactsOutput) ToServiceUnitArtifactsPtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifacts) *ServiceUnitArtifacts {
		return &v
	}).(ServiceUnitArtifactsPtrOutput)
}

// The path to the ARM parameters file relative to the artifact source.
func (o ServiceUnitArtifactsOutput) ParametersArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifacts) *string { return v.ParametersArtifactSourceRelativePath }).(pulumi.StringPtrOutput)
}

// The full URI of the ARM parameters file with the SAS token.
func (o ServiceUnitArtifactsOutput) ParametersUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifacts) *string { return v.ParametersUri }).(pulumi.StringPtrOutput)
}

// The path to the ARM template file relative to the artifact source.
func (o ServiceUnitArtifactsOutput) TemplateArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifacts) *string { return v.TemplateArtifactSourceRelativePath }).(pulumi.StringPtrOutput)
}

// The full URI of the ARM template file with the SAS token.
func (o ServiceUnitArtifactsOutput) TemplateUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifacts) *string { return v.TemplateUri }).(pulumi.StringPtrOutput)
}

type ServiceUnitArtifactsPtrOutput struct{ *pulumi.OutputState }

func (ServiceUnitArtifactsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceUnitArtifacts)(nil)).Elem()
}

func (o ServiceUnitArtifactsPtrOutput) ToServiceUnitArtifactsPtrOutput() ServiceUnitArtifactsPtrOutput {
	return o
}

func (o ServiceUnitArtifactsPtrOutput) ToServiceUnitArtifactsPtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsPtrOutput {
	return o
}

func (o ServiceUnitArtifactsPtrOutput) Elem() ServiceUnitArtifactsOutput {
	return o.ApplyT(func(v *ServiceUnitArtifacts) ServiceUnitArtifacts { return *v }).(ServiceUnitArtifactsOutput)
}

// The path to the ARM parameters file relative to the artifact source.
func (o ServiceUnitArtifactsPtrOutput) ParametersArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.ParametersArtifactSourceRelativePath
	}).(pulumi.StringPtrOutput)
}

// The full URI of the ARM parameters file with the SAS token.
func (o ServiceUnitArtifactsPtrOutput) ParametersUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.ParametersUri
	}).(pulumi.StringPtrOutput)
}

// The path to the ARM template file relative to the artifact source.
func (o ServiceUnitArtifactsPtrOutput) TemplateArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.TemplateArtifactSourceRelativePath
	}).(pulumi.StringPtrOutput)
}

// The full URI of the ARM template file with the SAS token.
func (o ServiceUnitArtifactsPtrOutput) TemplateUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.TemplateUri
	}).(pulumi.StringPtrOutput)
}

// Defines the artifacts of a service unit.
type ServiceUnitArtifactsResponse struct {
	// The path to the ARM parameters file relative to the artifact source.
	ParametersArtifactSourceRelativePath *string `pulumi:"parametersArtifactSourceRelativePath"`
	// The full URI of the ARM parameters file with the SAS token.
	ParametersUri *string `pulumi:"parametersUri"`
	// The path to the ARM template file relative to the artifact source.
	TemplateArtifactSourceRelativePath *string `pulumi:"templateArtifactSourceRelativePath"`
	// The full URI of the ARM template file with the SAS token.
	TemplateUri *string `pulumi:"templateUri"`
}

// ServiceUnitArtifactsResponseInput is an input type that accepts ServiceUnitArtifactsResponseArgs and ServiceUnitArtifactsResponseOutput values.
// You can construct a concrete instance of `ServiceUnitArtifactsResponseInput` via:
//
//          ServiceUnitArtifactsResponseArgs{...}
type ServiceUnitArtifactsResponseInput interface {
	pulumi.Input

	ToServiceUnitArtifactsResponseOutput() ServiceUnitArtifactsResponseOutput
	ToServiceUnitArtifactsResponseOutputWithContext(context.Context) ServiceUnitArtifactsResponseOutput
}

// Defines the artifacts of a service unit.
type ServiceUnitArtifactsResponseArgs struct {
	// The path to the ARM parameters file relative to the artifact source.
	ParametersArtifactSourceRelativePath pulumi.StringPtrInput `pulumi:"parametersArtifactSourceRelativePath"`
	// The full URI of the ARM parameters file with the SAS token.
	ParametersUri pulumi.StringPtrInput `pulumi:"parametersUri"`
	// The path to the ARM template file relative to the artifact source.
	TemplateArtifactSourceRelativePath pulumi.StringPtrInput `pulumi:"templateArtifactSourceRelativePath"`
	// The full URI of the ARM template file with the SAS token.
	TemplateUri pulumi.StringPtrInput `pulumi:"templateUri"`
}

func (ServiceUnitArtifactsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUnitArtifactsResponse)(nil)).Elem()
}

func (i ServiceUnitArtifactsResponseArgs) ToServiceUnitArtifactsResponseOutput() ServiceUnitArtifactsResponseOutput {
	return i.ToServiceUnitArtifactsResponseOutputWithContext(context.Background())
}

func (i ServiceUnitArtifactsResponseArgs) ToServiceUnitArtifactsResponseOutputWithContext(ctx context.Context) ServiceUnitArtifactsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUnitArtifactsResponseOutput)
}

func (i ServiceUnitArtifactsResponseArgs) ToServiceUnitArtifactsResponsePtrOutput() ServiceUnitArtifactsResponsePtrOutput {
	return i.ToServiceUnitArtifactsResponsePtrOutputWithContext(context.Background())
}

func (i ServiceUnitArtifactsResponseArgs) ToServiceUnitArtifactsResponsePtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUnitArtifactsResponseOutput).ToServiceUnitArtifactsResponsePtrOutputWithContext(ctx)
}

// ServiceUnitArtifactsResponsePtrInput is an input type that accepts ServiceUnitArtifactsResponseArgs, ServiceUnitArtifactsResponsePtr and ServiceUnitArtifactsResponsePtrOutput values.
// You can construct a concrete instance of `ServiceUnitArtifactsResponsePtrInput` via:
//
//          ServiceUnitArtifactsResponseArgs{...}
//
//  or:
//
//          nil
type ServiceUnitArtifactsResponsePtrInput interface {
	pulumi.Input

	ToServiceUnitArtifactsResponsePtrOutput() ServiceUnitArtifactsResponsePtrOutput
	ToServiceUnitArtifactsResponsePtrOutputWithContext(context.Context) ServiceUnitArtifactsResponsePtrOutput
}

type serviceUnitArtifactsResponsePtrType ServiceUnitArtifactsResponseArgs

func ServiceUnitArtifactsResponsePtr(v *ServiceUnitArtifactsResponseArgs) ServiceUnitArtifactsResponsePtrInput {
	return (*serviceUnitArtifactsResponsePtrType)(v)
}

func (*serviceUnitArtifactsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceUnitArtifactsResponse)(nil)).Elem()
}

func (i *serviceUnitArtifactsResponsePtrType) ToServiceUnitArtifactsResponsePtrOutput() ServiceUnitArtifactsResponsePtrOutput {
	return i.ToServiceUnitArtifactsResponsePtrOutputWithContext(context.Background())
}

func (i *serviceUnitArtifactsResponsePtrType) ToServiceUnitArtifactsResponsePtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUnitArtifactsResponsePtrOutput)
}

// Defines the artifacts of a service unit.
type ServiceUnitArtifactsResponseOutput struct{ *pulumi.OutputState }

func (ServiceUnitArtifactsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUnitArtifactsResponse)(nil)).Elem()
}

func (o ServiceUnitArtifactsResponseOutput) ToServiceUnitArtifactsResponseOutput() ServiceUnitArtifactsResponseOutput {
	return o
}

func (o ServiceUnitArtifactsResponseOutput) ToServiceUnitArtifactsResponseOutputWithContext(ctx context.Context) ServiceUnitArtifactsResponseOutput {
	return o
}

func (o ServiceUnitArtifactsResponseOutput) ToServiceUnitArtifactsResponsePtrOutput() ServiceUnitArtifactsResponsePtrOutput {
	return o.ToServiceUnitArtifactsResponsePtrOutputWithContext(context.Background())
}

func (o ServiceUnitArtifactsResponseOutput) ToServiceUnitArtifactsResponsePtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsResponsePtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifactsResponse) *ServiceUnitArtifactsResponse {
		return &v
	}).(ServiceUnitArtifactsResponsePtrOutput)
}

// The path to the ARM parameters file relative to the artifact source.
func (o ServiceUnitArtifactsResponseOutput) ParametersArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifactsResponse) *string { return v.ParametersArtifactSourceRelativePath }).(pulumi.StringPtrOutput)
}

// The full URI of the ARM parameters file with the SAS token.
func (o ServiceUnitArtifactsResponseOutput) ParametersUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifactsResponse) *string { return v.ParametersUri }).(pulumi.StringPtrOutput)
}

// The path to the ARM template file relative to the artifact source.
func (o ServiceUnitArtifactsResponseOutput) TemplateArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifactsResponse) *string { return v.TemplateArtifactSourceRelativePath }).(pulumi.StringPtrOutput)
}

// The full URI of the ARM template file with the SAS token.
func (o ServiceUnitArtifactsResponseOutput) TemplateUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifactsResponse) *string { return v.TemplateUri }).(pulumi.StringPtrOutput)
}

type ServiceUnitArtifactsResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceUnitArtifactsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceUnitArtifactsResponse)(nil)).Elem()
}

func (o ServiceUnitArtifactsResponsePtrOutput) ToServiceUnitArtifactsResponsePtrOutput() ServiceUnitArtifactsResponsePtrOutput {
	return o
}

func (o ServiceUnitArtifactsResponsePtrOutput) ToServiceUnitArtifactsResponsePtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsResponsePtrOutput {
	return o
}

func (o ServiceUnitArtifactsResponsePtrOutput) Elem() ServiceUnitArtifactsResponseOutput {
	return o.ApplyT(func(v *ServiceUnitArtifactsResponse) ServiceUnitArtifactsResponse { return *v }).(ServiceUnitArtifactsResponseOutput)
}

// The path to the ARM parameters file relative to the artifact source.
func (o ServiceUnitArtifactsResponsePtrOutput) ParametersArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifactsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ParametersArtifactSourceRelativePath
	}).(pulumi.StringPtrOutput)
}

// The full URI of the ARM parameters file with the SAS token.
func (o ServiceUnitArtifactsResponsePtrOutput) ParametersUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifactsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ParametersUri
	}).(pulumi.StringPtrOutput)
}

// The path to the ARM template file relative to the artifact source.
func (o ServiceUnitArtifactsResponsePtrOutput) TemplateArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifactsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TemplateArtifactSourceRelativePath
	}).(pulumi.StringPtrOutput)
}

// The full URI of the ARM template file with the SAS token.
func (o ServiceUnitArtifactsResponsePtrOutput) TemplateUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifactsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TemplateUri
	}).(pulumi.StringPtrOutput)
}

// Defines a service unit.
type ServiceUnitResponse struct {
	// The artifacts for the service unit.
	Artifacts *ServiceUnitArtifactsResponse `pulumi:"artifacts"`
	// Describes the type of ARM deployment to be performed on the resource.
	DeploymentMode string `pulumi:"deploymentMode"`
	// Name of the service unit.
	Name *string `pulumi:"name"`
	// Detailed step information, if present.
	Steps []RolloutStepResponse `pulumi:"steps"`
	// The Azure Resource Group to which the resources in the service unit belong to or should be deployed to.
	TargetResourceGroup string `pulumi:"targetResourceGroup"`
}

// ServiceUnitResponseInput is an input type that accepts ServiceUnitResponseArgs and ServiceUnitResponseOutput values.
// You can construct a concrete instance of `ServiceUnitResponseInput` via:
//
//          ServiceUnitResponseArgs{...}
type ServiceUnitResponseInput interface {
	pulumi.Input

	ToServiceUnitResponseOutput() ServiceUnitResponseOutput
	ToServiceUnitResponseOutputWithContext(context.Context) ServiceUnitResponseOutput
}

// Defines a service unit.
type ServiceUnitResponseArgs struct {
	// The artifacts for the service unit.
	Artifacts ServiceUnitArtifactsResponsePtrInput `pulumi:"artifacts"`
	// Describes the type of ARM deployment to be performed on the resource.
	DeploymentMode pulumi.StringInput `pulumi:"deploymentMode"`
	// Name of the service unit.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Detailed step information, if present.
	Steps RolloutStepResponseArrayInput `pulumi:"steps"`
	// The Azure Resource Group to which the resources in the service unit belong to or should be deployed to.
	TargetResourceGroup pulumi.StringInput `pulumi:"targetResourceGroup"`
}

func (ServiceUnitResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUnitResponse)(nil)).Elem()
}

func (i ServiceUnitResponseArgs) ToServiceUnitResponseOutput() ServiceUnitResponseOutput {
	return i.ToServiceUnitResponseOutputWithContext(context.Background())
}

func (i ServiceUnitResponseArgs) ToServiceUnitResponseOutputWithContext(ctx context.Context) ServiceUnitResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUnitResponseOutput)
}

// ServiceUnitResponseArrayInput is an input type that accepts ServiceUnitResponseArray and ServiceUnitResponseArrayOutput values.
// You can construct a concrete instance of `ServiceUnitResponseArrayInput` via:
//
//          ServiceUnitResponseArray{ ServiceUnitResponseArgs{...} }
type ServiceUnitResponseArrayInput interface {
	pulumi.Input

	ToServiceUnitResponseArrayOutput() ServiceUnitResponseArrayOutput
	ToServiceUnitResponseArrayOutputWithContext(context.Context) ServiceUnitResponseArrayOutput
}

type ServiceUnitResponseArray []ServiceUnitResponseInput

func (ServiceUnitResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceUnitResponse)(nil)).Elem()
}

func (i ServiceUnitResponseArray) ToServiceUnitResponseArrayOutput() ServiceUnitResponseArrayOutput {
	return i.ToServiceUnitResponseArrayOutputWithContext(context.Background())
}

func (i ServiceUnitResponseArray) ToServiceUnitResponseArrayOutputWithContext(ctx context.Context) ServiceUnitResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUnitResponseArrayOutput)
}

// Defines a service unit.
type ServiceUnitResponseOutput struct{ *pulumi.OutputState }

func (ServiceUnitResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUnitResponse)(nil)).Elem()
}

func (o ServiceUnitResponseOutput) ToServiceUnitResponseOutput() ServiceUnitResponseOutput {
	return o
}

func (o ServiceUnitResponseOutput) ToServiceUnitResponseOutputWithContext(ctx context.Context) ServiceUnitResponseOutput {
	return o
}

// The artifacts for the service unit.
func (o ServiceUnitResponseOutput) Artifacts() ServiceUnitArtifactsResponsePtrOutput {
	return o.ApplyT(func(v ServiceUnitResponse) *ServiceUnitArtifactsResponse { return v.Artifacts }).(ServiceUnitArtifactsResponsePtrOutput)
}

// Describes the type of ARM deployment to be performed on the resource.
func (o ServiceUnitResponseOutput) DeploymentMode() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceUnitResponse) string { return v.DeploymentMode }).(pulumi.StringOutput)
}

// Name of the service unit.
func (o ServiceUnitResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Detailed step information, if present.
func (o ServiceUnitResponseOutput) Steps() RolloutStepResponseArrayOutput {
	return o.ApplyT(func(v ServiceUnitResponse) []RolloutStepResponse { return v.Steps }).(RolloutStepResponseArrayOutput)
}

// The Azure Resource Group to which the resources in the service unit belong to or should be deployed to.
func (o ServiceUnitResponseOutput) TargetResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceUnitResponse) string { return v.TargetResourceGroup }).(pulumi.StringOutput)
}

type ServiceUnitResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceUnitResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceUnitResponse)(nil)).Elem()
}

func (o ServiceUnitResponseArrayOutput) ToServiceUnitResponseArrayOutput() ServiceUnitResponseArrayOutput {
	return o
}

func (o ServiceUnitResponseArrayOutput) ToServiceUnitResponseArrayOutputWithContext(ctx context.Context) ServiceUnitResponseArrayOutput {
	return o
}

func (o ServiceUnitResponseArrayOutput) Index(i pulumi.IntInput) ServiceUnitResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceUnitResponse {
		return vs[0].([]ServiceUnitResponse)[vs[1].(int)]
	}).(ServiceUnitResponseOutput)
}

// The properties that define a Step group in a rollout.
type StepGroup struct {
	// The list of step group names on which this step group depends on.
	DependsOnStepGroups []string `pulumi:"dependsOnStepGroups"`
	// The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId
	DeploymentTargetId string `pulumi:"deploymentTargetId"`
	// The name of the step group.
	Name string `pulumi:"name"`
	// The list of steps to be run after deploying the target.
	PostDeploymentSteps []PrePostStep `pulumi:"postDeploymentSteps"`
	// The list of steps to be run before deploying the target.
	PreDeploymentSteps []PrePostStep `pulumi:"preDeploymentSteps"`
}

// StepGroupInput is an input type that accepts StepGroupArgs and StepGroupOutput values.
// You can construct a concrete instance of `StepGroupInput` via:
//
//          StepGroupArgs{...}
type StepGroupInput interface {
	pulumi.Input

	ToStepGroupOutput() StepGroupOutput
	ToStepGroupOutputWithContext(context.Context) StepGroupOutput
}

// The properties that define a Step group in a rollout.
type StepGroupArgs struct {
	// The list of step group names on which this step group depends on.
	DependsOnStepGroups pulumi.StringArrayInput `pulumi:"dependsOnStepGroups"`
	// The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId
	DeploymentTargetId pulumi.StringInput `pulumi:"deploymentTargetId"`
	// The name of the step group.
	Name pulumi.StringInput `pulumi:"name"`
	// The list of steps to be run after deploying the target.
	PostDeploymentSteps PrePostStepArrayInput `pulumi:"postDeploymentSteps"`
	// The list of steps to be run before deploying the target.
	PreDeploymentSteps PrePostStepArrayInput `pulumi:"preDeploymentSteps"`
}

func (StepGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StepGroup)(nil)).Elem()
}

func (i StepGroupArgs) ToStepGroupOutput() StepGroupOutput {
	return i.ToStepGroupOutputWithContext(context.Background())
}

func (i StepGroupArgs) ToStepGroupOutputWithContext(ctx context.Context) StepGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StepGroupOutput)
}

// StepGroupArrayInput is an input type that accepts StepGroupArray and StepGroupArrayOutput values.
// You can construct a concrete instance of `StepGroupArrayInput` via:
//
//          StepGroupArray{ StepGroupArgs{...} }
type StepGroupArrayInput interface {
	pulumi.Input

	ToStepGroupArrayOutput() StepGroupArrayOutput
	ToStepGroupArrayOutputWithContext(context.Context) StepGroupArrayOutput
}

type StepGroupArray []StepGroupInput

func (StepGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StepGroup)(nil)).Elem()
}

func (i StepGroupArray) ToStepGroupArrayOutput() StepGroupArrayOutput {
	return i.ToStepGroupArrayOutputWithContext(context.Background())
}

func (i StepGroupArray) ToStepGroupArrayOutputWithContext(ctx context.Context) StepGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StepGroupArrayOutput)
}

// The properties that define a Step group in a rollout.
type StepGroupOutput struct{ *pulumi.OutputState }

func (StepGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StepGroup)(nil)).Elem()
}

func (o StepGroupOutput) ToStepGroupOutput() StepGroupOutput {
	return o
}

func (o StepGroupOutput) ToStepGroupOutputWithContext(ctx context.Context) StepGroupOutput {
	return o
}

// The list of step group names on which this step group depends on.
func (o StepGroupOutput) DependsOnStepGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StepGroup) []string { return v.DependsOnStepGroups }).(pulumi.StringArrayOutput)
}

// The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId
func (o StepGroupOutput) DeploymentTargetId() pulumi.StringOutput {
	return o.ApplyT(func(v StepGroup) string { return v.DeploymentTargetId }).(pulumi.StringOutput)
}

// The name of the step group.
func (o StepGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StepGroup) string { return v.Name }).(pulumi.StringOutput)
}

// The list of steps to be run after deploying the target.
func (o StepGroupOutput) PostDeploymentSteps() PrePostStepArrayOutput {
	return o.ApplyT(func(v StepGroup) []PrePostStep { return v.PostDeploymentSteps }).(PrePostStepArrayOutput)
}

// The list of steps to be run before deploying the target.
func (o StepGroupOutput) PreDeploymentSteps() PrePostStepArrayOutput {
	return o.ApplyT(func(v StepGroup) []PrePostStep { return v.PreDeploymentSteps }).(PrePostStepArrayOutput)
}

type StepGroupArrayOutput struct{ *pulumi.OutputState }

func (StepGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StepGroup)(nil)).Elem()
}

func (o StepGroupArrayOutput) ToStepGroupArrayOutput() StepGroupArrayOutput {
	return o
}

func (o StepGroupArrayOutput) ToStepGroupArrayOutputWithContext(ctx context.Context) StepGroupArrayOutput {
	return o
}

func (o StepGroupArrayOutput) Index(i pulumi.IntInput) StepGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StepGroup {
		return vs[0].([]StepGroup)[vs[1].(int)]
	}).(StepGroupOutput)
}

// The properties that define a Step group in a rollout.
type StepGroupResponse struct {
	// The list of step group names on which this step group depends on.
	DependsOnStepGroups []string `pulumi:"dependsOnStepGroups"`
	// The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId
	DeploymentTargetId string `pulumi:"deploymentTargetId"`
	// The name of the step group.
	Name string `pulumi:"name"`
	// The list of steps to be run after deploying the target.
	PostDeploymentSteps []PrePostStepResponse `pulumi:"postDeploymentSteps"`
	// The list of steps to be run before deploying the target.
	PreDeploymentSteps []PrePostStepResponse `pulumi:"preDeploymentSteps"`
}

// StepGroupResponseInput is an input type that accepts StepGroupResponseArgs and StepGroupResponseOutput values.
// You can construct a concrete instance of `StepGroupResponseInput` via:
//
//          StepGroupResponseArgs{...}
type StepGroupResponseInput interface {
	pulumi.Input

	ToStepGroupResponseOutput() StepGroupResponseOutput
	ToStepGroupResponseOutputWithContext(context.Context) StepGroupResponseOutput
}

// The properties that define a Step group in a rollout.
type StepGroupResponseArgs struct {
	// The list of step group names on which this step group depends on.
	DependsOnStepGroups pulumi.StringArrayInput `pulumi:"dependsOnStepGroups"`
	// The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId
	DeploymentTargetId pulumi.StringInput `pulumi:"deploymentTargetId"`
	// The name of the step group.
	Name pulumi.StringInput `pulumi:"name"`
	// The list of steps to be run after deploying the target.
	PostDeploymentSteps PrePostStepResponseArrayInput `pulumi:"postDeploymentSteps"`
	// The list of steps to be run before deploying the target.
	PreDeploymentSteps PrePostStepResponseArrayInput `pulumi:"preDeploymentSteps"`
}

func (StepGroupResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StepGroupResponse)(nil)).Elem()
}

func (i StepGroupResponseArgs) ToStepGroupResponseOutput() StepGroupResponseOutput {
	return i.ToStepGroupResponseOutputWithContext(context.Background())
}

func (i StepGroupResponseArgs) ToStepGroupResponseOutputWithContext(ctx context.Context) StepGroupResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StepGroupResponseOutput)
}

// StepGroupResponseArrayInput is an input type that accepts StepGroupResponseArray and StepGroupResponseArrayOutput values.
// You can construct a concrete instance of `StepGroupResponseArrayInput` via:
//
//          StepGroupResponseArray{ StepGroupResponseArgs{...} }
type StepGroupResponseArrayInput interface {
	pulumi.Input

	ToStepGroupResponseArrayOutput() StepGroupResponseArrayOutput
	ToStepGroupResponseArrayOutputWithContext(context.Context) StepGroupResponseArrayOutput
}

type StepGroupResponseArray []StepGroupResponseInput

func (StepGroupResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StepGroupResponse)(nil)).Elem()
}

func (i StepGroupResponseArray) ToStepGroupResponseArrayOutput() StepGroupResponseArrayOutput {
	return i.ToStepGroupResponseArrayOutputWithContext(context.Background())
}

func (i StepGroupResponseArray) ToStepGroupResponseArrayOutputWithContext(ctx context.Context) StepGroupResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StepGroupResponseArrayOutput)
}

// The properties that define a Step group in a rollout.
type StepGroupResponseOutput struct{ *pulumi.OutputState }

func (StepGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StepGroupResponse)(nil)).Elem()
}

func (o StepGroupResponseOutput) ToStepGroupResponseOutput() StepGroupResponseOutput {
	return o
}

func (o StepGroupResponseOutput) ToStepGroupResponseOutputWithContext(ctx context.Context) StepGroupResponseOutput {
	return o
}

// The list of step group names on which this step group depends on.
func (o StepGroupResponseOutput) DependsOnStepGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StepGroupResponse) []string { return v.DependsOnStepGroups }).(pulumi.StringArrayOutput)
}

// The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId
func (o StepGroupResponseOutput) DeploymentTargetId() pulumi.StringOutput {
	return o.ApplyT(func(v StepGroupResponse) string { return v.DeploymentTargetId }).(pulumi.StringOutput)
}

// The name of the step group.
func (o StepGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StepGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The list of steps to be run after deploying the target.
func (o StepGroupResponseOutput) PostDeploymentSteps() PrePostStepResponseArrayOutput {
	return o.ApplyT(func(v StepGroupResponse) []PrePostStepResponse { return v.PostDeploymentSteps }).(PrePostStepResponseArrayOutput)
}

// The list of steps to be run before deploying the target.
func (o StepGroupResponseOutput) PreDeploymentSteps() PrePostStepResponseArrayOutput {
	return o.ApplyT(func(v StepGroupResponse) []PrePostStepResponse { return v.PreDeploymentSteps }).(PrePostStepResponseArrayOutput)
}

type StepGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (StepGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StepGroupResponse)(nil)).Elem()
}

func (o StepGroupResponseArrayOutput) ToStepGroupResponseArrayOutput() StepGroupResponseArrayOutput {
	return o
}

func (o StepGroupResponseArrayOutput) ToStepGroupResponseArrayOutputWithContext(ctx context.Context) StepGroupResponseArrayOutput {
	return o
}

func (o StepGroupResponseArrayOutput) Index(i pulumi.IntInput) StepGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StepGroupResponse {
		return vs[0].([]StepGroupResponse)[vs[1].(int)]
	}).(StepGroupResponseOutput)
}

// Detailed information of a specific step run.
type StepOperationInfoResponse struct {
	// Unique identifier to track the request for ARM-based resources.
	CorrelationId string `pulumi:"correlationId"`
	// The name of the ARM deployment initiated as part of the step.
	DeploymentName string `pulumi:"deploymentName"`
	// End time of the action in UTC.
	EndTime string `pulumi:"endTime"`
	// The errors, if any, for the action.
	Error *CloudErrorBodyResponse `pulumi:"error"`
	// Last time in UTC this operation was updated.
	LastUpdatedTime string `pulumi:"lastUpdatedTime"`
	// Start time of the action in UTC.
	StartTime string `pulumi:"startTime"`
}

// StepOperationInfoResponseInput is an input type that accepts StepOperationInfoResponseArgs and StepOperationInfoResponseOutput values.
// You can construct a concrete instance of `StepOperationInfoResponseInput` via:
//
//          StepOperationInfoResponseArgs{...}
type StepOperationInfoResponseInput interface {
	pulumi.Input

	ToStepOperationInfoResponseOutput() StepOperationInfoResponseOutput
	ToStepOperationInfoResponseOutputWithContext(context.Context) StepOperationInfoResponseOutput
}

// Detailed information of a specific step run.
type StepOperationInfoResponseArgs struct {
	// Unique identifier to track the request for ARM-based resources.
	CorrelationId pulumi.StringInput `pulumi:"correlationId"`
	// The name of the ARM deployment initiated as part of the step.
	DeploymentName pulumi.StringInput `pulumi:"deploymentName"`
	// End time of the action in UTC.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// The errors, if any, for the action.
	Error CloudErrorBodyResponsePtrInput `pulumi:"error"`
	// Last time in UTC this operation was updated.
	LastUpdatedTime pulumi.StringInput `pulumi:"lastUpdatedTime"`
	// Start time of the action in UTC.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (StepOperationInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StepOperationInfoResponse)(nil)).Elem()
}

func (i StepOperationInfoResponseArgs) ToStepOperationInfoResponseOutput() StepOperationInfoResponseOutput {
	return i.ToStepOperationInfoResponseOutputWithContext(context.Background())
}

func (i StepOperationInfoResponseArgs) ToStepOperationInfoResponseOutputWithContext(ctx context.Context) StepOperationInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StepOperationInfoResponseOutput)
}

// Detailed information of a specific step run.
type StepOperationInfoResponseOutput struct{ *pulumi.OutputState }

func (StepOperationInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StepOperationInfoResponse)(nil)).Elem()
}

func (o StepOperationInfoResponseOutput) ToStepOperationInfoResponseOutput() StepOperationInfoResponseOutput {
	return o
}

func (o StepOperationInfoResponseOutput) ToStepOperationInfoResponseOutputWithContext(ctx context.Context) StepOperationInfoResponseOutput {
	return o
}

// Unique identifier to track the request for ARM-based resources.
func (o StepOperationInfoResponseOutput) CorrelationId() pulumi.StringOutput {
	return o.ApplyT(func(v StepOperationInfoResponse) string { return v.CorrelationId }).(pulumi.StringOutput)
}

// The name of the ARM deployment initiated as part of the step.
func (o StepOperationInfoResponseOutput) DeploymentName() pulumi.StringOutput {
	return o.ApplyT(func(v StepOperationInfoResponse) string { return v.DeploymentName }).(pulumi.StringOutput)
}

// End time of the action in UTC.
func (o StepOperationInfoResponseOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v StepOperationInfoResponse) string { return v.EndTime }).(pulumi.StringOutput)
}

// The errors, if any, for the action.
func (o StepOperationInfoResponseOutput) Error() CloudErrorBodyResponsePtrOutput {
	return o.ApplyT(func(v StepOperationInfoResponse) *CloudErrorBodyResponse { return v.Error }).(CloudErrorBodyResponsePtrOutput)
}

// Last time in UTC this operation was updated.
func (o StepOperationInfoResponseOutput) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v StepOperationInfoResponse) string { return v.LastUpdatedTime }).(pulumi.StringOutput)
}

// Start time of the action in UTC.
func (o StepOperationInfoResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v StepOperationInfoResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// The properties of a step resource.
type StepProperties struct {
	// The type of step.
	StepType string `pulumi:"stepType"`
}

// StepPropertiesInput is an input type that accepts StepPropertiesArgs and StepPropertiesOutput values.
// You can construct a concrete instance of `StepPropertiesInput` via:
//
//          StepPropertiesArgs{...}
type StepPropertiesInput interface {
	pulumi.Input

	ToStepPropertiesOutput() StepPropertiesOutput
	ToStepPropertiesOutputWithContext(context.Context) StepPropertiesOutput
}

// The properties of a step resource.
type StepPropertiesArgs struct {
	// The type of step.
	StepType pulumi.StringInput `pulumi:"stepType"`
}

func (StepPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StepProperties)(nil)).Elem()
}

func (i StepPropertiesArgs) ToStepPropertiesOutput() StepPropertiesOutput {
	return i.ToStepPropertiesOutputWithContext(context.Background())
}

func (i StepPropertiesArgs) ToStepPropertiesOutputWithContext(ctx context.Context) StepPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StepPropertiesOutput)
}

func (i StepPropertiesArgs) ToStepPropertiesPtrOutput() StepPropertiesPtrOutput {
	return i.ToStepPropertiesPtrOutputWithContext(context.Background())
}

func (i StepPropertiesArgs) ToStepPropertiesPtrOutputWithContext(ctx context.Context) StepPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StepPropertiesOutput).ToStepPropertiesPtrOutputWithContext(ctx)
}

// StepPropertiesPtrInput is an input type that accepts StepPropertiesArgs, StepPropertiesPtr and StepPropertiesPtrOutput values.
// You can construct a concrete instance of `StepPropertiesPtrInput` via:
//
//          StepPropertiesArgs{...}
//
//  or:
//
//          nil
type StepPropertiesPtrInput interface {
	pulumi.Input

	ToStepPropertiesPtrOutput() StepPropertiesPtrOutput
	ToStepPropertiesPtrOutputWithContext(context.Context) StepPropertiesPtrOutput
}

type stepPropertiesPtrType StepPropertiesArgs

func StepPropertiesPtr(v *StepPropertiesArgs) StepPropertiesPtrInput {
	return (*stepPropertiesPtrType)(v)
}

func (*stepPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StepProperties)(nil)).Elem()
}

func (i *stepPropertiesPtrType) ToStepPropertiesPtrOutput() StepPropertiesPtrOutput {
	return i.ToStepPropertiesPtrOutputWithContext(context.Background())
}

func (i *stepPropertiesPtrType) ToStepPropertiesPtrOutputWithContext(ctx context.Context) StepPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StepPropertiesPtrOutput)
}

// The properties of a step resource.
type StepPropertiesOutput struct{ *pulumi.OutputState }

func (StepPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StepProperties)(nil)).Elem()
}

func (o StepPropertiesOutput) ToStepPropertiesOutput() StepPropertiesOutput {
	return o
}

func (o StepPropertiesOutput) ToStepPropertiesOutputWithContext(ctx context.Context) StepPropertiesOutput {
	return o
}

func (o StepPropertiesOutput) ToStepPropertiesPtrOutput() StepPropertiesPtrOutput {
	return o.ToStepPropertiesPtrOutputWithContext(context.Background())
}

func (o StepPropertiesOutput) ToStepPropertiesPtrOutputWithContext(ctx context.Context) StepPropertiesPtrOutput {
	return o.ApplyT(func(v StepProperties) *StepProperties {
		return &v
	}).(StepPropertiesPtrOutput)
}

// The type of step.
func (o StepPropertiesOutput) StepType() pulumi.StringOutput {
	return o.ApplyT(func(v StepProperties) string { return v.StepType }).(pulumi.StringOutput)
}

type StepPropertiesPtrOutput struct{ *pulumi.OutputState }

func (StepPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StepProperties)(nil)).Elem()
}

func (o StepPropertiesPtrOutput) ToStepPropertiesPtrOutput() StepPropertiesPtrOutput {
	return o
}

func (o StepPropertiesPtrOutput) ToStepPropertiesPtrOutputWithContext(ctx context.Context) StepPropertiesPtrOutput {
	return o
}

func (o StepPropertiesPtrOutput) Elem() StepPropertiesOutput {
	return o.ApplyT(func(v *StepProperties) StepProperties { return *v }).(StepPropertiesOutput)
}

// The type of step.
func (o StepPropertiesPtrOutput) StepType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StepProperties) *string {
		if v == nil {
			return nil
		}
		return &v.StepType
	}).(pulumi.StringPtrOutput)
}

// The properties of a step resource.
type StepPropertiesResponse struct {
	// The type of step.
	StepType string `pulumi:"stepType"`
}

// StepPropertiesResponseInput is an input type that accepts StepPropertiesResponseArgs and StepPropertiesResponseOutput values.
// You can construct a concrete instance of `StepPropertiesResponseInput` via:
//
//          StepPropertiesResponseArgs{...}
type StepPropertiesResponseInput interface {
	pulumi.Input

	ToStepPropertiesResponseOutput() StepPropertiesResponseOutput
	ToStepPropertiesResponseOutputWithContext(context.Context) StepPropertiesResponseOutput
}

// The properties of a step resource.
type StepPropertiesResponseArgs struct {
	// The type of step.
	StepType pulumi.StringInput `pulumi:"stepType"`
}

func (StepPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StepPropertiesResponse)(nil)).Elem()
}

func (i StepPropertiesResponseArgs) ToStepPropertiesResponseOutput() StepPropertiesResponseOutput {
	return i.ToStepPropertiesResponseOutputWithContext(context.Background())
}

func (i StepPropertiesResponseArgs) ToStepPropertiesResponseOutputWithContext(ctx context.Context) StepPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StepPropertiesResponseOutput)
}

func (i StepPropertiesResponseArgs) ToStepPropertiesResponsePtrOutput() StepPropertiesResponsePtrOutput {
	return i.ToStepPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i StepPropertiesResponseArgs) ToStepPropertiesResponsePtrOutputWithContext(ctx context.Context) StepPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StepPropertiesResponseOutput).ToStepPropertiesResponsePtrOutputWithContext(ctx)
}

// StepPropertiesResponsePtrInput is an input type that accepts StepPropertiesResponseArgs, StepPropertiesResponsePtr and StepPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `StepPropertiesResponsePtrInput` via:
//
//          StepPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type StepPropertiesResponsePtrInput interface {
	pulumi.Input

	ToStepPropertiesResponsePtrOutput() StepPropertiesResponsePtrOutput
	ToStepPropertiesResponsePtrOutputWithContext(context.Context) StepPropertiesResponsePtrOutput
}

type stepPropertiesResponsePtrType StepPropertiesResponseArgs

func StepPropertiesResponsePtr(v *StepPropertiesResponseArgs) StepPropertiesResponsePtrInput {
	return (*stepPropertiesResponsePtrType)(v)
}

func (*stepPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StepPropertiesResponse)(nil)).Elem()
}

func (i *stepPropertiesResponsePtrType) ToStepPropertiesResponsePtrOutput() StepPropertiesResponsePtrOutput {
	return i.ToStepPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *stepPropertiesResponsePtrType) ToStepPropertiesResponsePtrOutputWithContext(ctx context.Context) StepPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StepPropertiesResponsePtrOutput)
}

// The properties of a step resource.
type StepPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StepPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StepPropertiesResponse)(nil)).Elem()
}

func (o StepPropertiesResponseOutput) ToStepPropertiesResponseOutput() StepPropertiesResponseOutput {
	return o
}

func (o StepPropertiesResponseOutput) ToStepPropertiesResponseOutputWithContext(ctx context.Context) StepPropertiesResponseOutput {
	return o
}

func (o StepPropertiesResponseOutput) ToStepPropertiesResponsePtrOutput() StepPropertiesResponsePtrOutput {
	return o.ToStepPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o StepPropertiesResponseOutput) ToStepPropertiesResponsePtrOutputWithContext(ctx context.Context) StepPropertiesResponsePtrOutput {
	return o.ApplyT(func(v StepPropertiesResponse) *StepPropertiesResponse {
		return &v
	}).(StepPropertiesResponsePtrOutput)
}

// The type of step.
func (o StepPropertiesResponseOutput) StepType() pulumi.StringOutput {
	return o.ApplyT(func(v StepPropertiesResponse) string { return v.StepType }).(pulumi.StringOutput)
}

type StepPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (StepPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StepPropertiesResponse)(nil)).Elem()
}

func (o StepPropertiesResponsePtrOutput) ToStepPropertiesResponsePtrOutput() StepPropertiesResponsePtrOutput {
	return o
}

func (o StepPropertiesResponsePtrOutput) ToStepPropertiesResponsePtrOutputWithContext(ctx context.Context) StepPropertiesResponsePtrOutput {
	return o
}

func (o StepPropertiesResponsePtrOutput) Elem() StepPropertiesResponseOutput {
	return o.ApplyT(func(v *StepPropertiesResponse) StepPropertiesResponse { return *v }).(StepPropertiesResponseOutput)
}

// The type of step.
func (o StepPropertiesResponsePtrOutput) StepType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StepPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StepType
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AuthenticationOutput{})
	pulumi.RegisterOutputType(AuthenticationPtrOutput{})
	pulumi.RegisterOutputType(AuthenticationResponseOutput{})
	pulumi.RegisterOutputType(AuthenticationResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudErrorBodyResponseOutput{})
	pulumi.RegisterOutputType(CloudErrorBodyResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudErrorBodyResponseArrayOutput{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityPtrOutput{})
	pulumi.RegisterOutputType(IdentityResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(MessageResponseOutput{})
	pulumi.RegisterOutputType(MessageResponseArrayOutput{})
	pulumi.RegisterOutputType(PrePostStepOutput{})
	pulumi.RegisterOutputType(PrePostStepArrayOutput{})
	pulumi.RegisterOutputType(PrePostStepResponseOutput{})
	pulumi.RegisterOutputType(PrePostStepResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceOperationResponseOutput{})
	pulumi.RegisterOutputType(ResourceOperationResponseArrayOutput{})
	pulumi.RegisterOutputType(RolloutOperationInfoResponseOutput{})
	pulumi.RegisterOutputType(RolloutStepResponseOutput{})
	pulumi.RegisterOutputType(RolloutStepResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceResponseOutput{})
	pulumi.RegisterOutputType(ServiceResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceUnitArtifactsOutput{})
	pulumi.RegisterOutputType(ServiceUnitArtifactsPtrOutput{})
	pulumi.RegisterOutputType(ServiceUnitArtifactsResponseOutput{})
	pulumi.RegisterOutputType(ServiceUnitArtifactsResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceUnitResponseOutput{})
	pulumi.RegisterOutputType(ServiceUnitResponseArrayOutput{})
	pulumi.RegisterOutputType(StepGroupOutput{})
	pulumi.RegisterOutputType(StepGroupArrayOutput{})
	pulumi.RegisterOutputType(StepGroupResponseOutput{})
	pulumi.RegisterOutputType(StepGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(StepOperationInfoResponseOutput{})
	pulumi.RegisterOutputType(StepPropertiesOutput{})
	pulumi.RegisterOutputType(StepPropertiesPtrOutput{})
	pulumi.RegisterOutputType(StepPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StepPropertiesResponsePtrOutput{})
}
