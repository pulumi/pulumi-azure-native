// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170426

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The prediction resource format.
type Prediction struct {
	pulumi.CustomResourceState

	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The prediction definition.
	Properties PredictionResponseOutput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewPrediction registers a new resource with the given unique name, arguments, and options.
func NewPrediction(ctx *pulumi.Context,
	name string, args *PredictionArgs, opts ...pulumi.ResourceOption) (*Prediction, error) {
	if args == nil || args.HubName == nil {
		return nil, errors.New("missing required argument 'HubName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &PredictionArgs{}
	}
	var resource Prediction
	err := ctx.RegisterResource("azurerm:customerinsights/v20170426:Prediction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrediction gets an existing Prediction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrediction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PredictionState, opts ...pulumi.ResourceOption) (*Prediction, error) {
	var resource Prediction
	err := ctx.ReadResource("azurerm:customerinsights/v20170426:Prediction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Prediction resources.
type predictionState struct {
	// Resource name.
	Name *string `pulumi:"name"`
	// The prediction definition.
	Properties *PredictionResponse `pulumi:"properties"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type PredictionState struct {
	// Resource name.
	Name pulumi.StringPtrInput
	// The prediction definition.
	Properties PredictionResponsePtrInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (PredictionState) ElementType() reflect.Type {
	return reflect.TypeOf((*predictionState)(nil)).Elem()
}

type predictionArgs struct {
	// The name of the hub.
	HubName string `pulumi:"hubName"`
	// The name of the Prediction.
	Name string `pulumi:"name"`
	// The prediction definition.
	Properties *PredictionDefinition `pulumi:"properties"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a Prediction resource.
type PredictionArgs struct {
	// The name of the hub.
	HubName pulumi.StringInput
	// The name of the Prediction.
	Name pulumi.StringInput
	// The prediction definition.
	Properties PredictionDefinitionPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
}

func (PredictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*predictionArgs)(nil)).Elem()
}
