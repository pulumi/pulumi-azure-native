// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170101

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The Role Assignment resource format.
type RoleAssignment struct {
	pulumi.CustomResourceState

	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Role Assignment definition.
	Properties RoleAssignmentResponseOutput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewRoleAssignment registers a new resource with the given unique name, arguments, and options.
func NewRoleAssignment(ctx *pulumi.Context,
	name string, args *RoleAssignmentArgs, opts ...pulumi.ResourceOption) (*RoleAssignment, error) {
	if args == nil || args.HubName == nil {
		return nil, errors.New("missing required argument 'HubName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.Principals == nil {
		return nil, errors.New("missing required argument 'Principals'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.Role == nil {
		return nil, errors.New("missing required argument 'Role'")
	}
	if args == nil {
		args = &RoleAssignmentArgs{}
	}
	var resource RoleAssignment
	err := ctx.RegisterResource("azurerm:customerinsights/v20170101:RoleAssignment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRoleAssignment gets an existing RoleAssignment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRoleAssignment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RoleAssignmentState, opts ...pulumi.ResourceOption) (*RoleAssignment, error) {
	var resource RoleAssignment
	err := ctx.ReadResource("azurerm:customerinsights/v20170101:RoleAssignment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RoleAssignment resources.
type roleAssignmentState struct {
	// Resource name.
	Name *string `pulumi:"name"`
	// The Role Assignment definition.
	Properties *RoleAssignmentResponse `pulumi:"properties"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type RoleAssignmentState struct {
	// Resource name.
	Name pulumi.StringPtrInput
	// The Role Assignment definition.
	Properties RoleAssignmentResponsePtrInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (RoleAssignmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*roleAssignmentState)(nil)).Elem()
}

type roleAssignmentArgs struct {
	// Widget types set for the assignment.
	ConflationPolicies *ResourceSetDescription `pulumi:"conflationPolicies"`
	// Connectors set for the assignment.
	Connectors *ResourceSetDescription `pulumi:"connectors"`
	// Localized description for the metadata.
	Description map[string]string `pulumi:"description"`
	// Localized display names for the metadata.
	DisplayName map[string]string `pulumi:"displayName"`
	// The name of the hub.
	HubName string `pulumi:"hubName"`
	// Interactions set for the assignment.
	Interactions *ResourceSetDescription `pulumi:"interactions"`
	// Kpis set for the assignment.
	Kpis *ResourceSetDescription `pulumi:"kpis"`
	// Links set for the assignment.
	Links *ResourceSetDescription `pulumi:"links"`
	// The assignment name
	Name string `pulumi:"name"`
	// The principals being assigned to.
	Principals []AssignmentPrincipal `pulumi:"principals"`
	// Profiles set for the assignment.
	Profiles *ResourceSetDescription `pulumi:"profiles"`
	// The Role assignments set for the relationship links.
	RelationshipLinks *ResourceSetDescription `pulumi:"relationshipLinks"`
	// The Role assignments set for the relationships.
	Relationships *ResourceSetDescription `pulumi:"relationships"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Type of roles.
	Role string `pulumi:"role"`
	// The Role assignments set for the assignment.
	RoleAssignments *ResourceSetDescription `pulumi:"roleAssignments"`
	// Sas Policies set for the assignment.
	SasPolicies *ResourceSetDescription `pulumi:"sasPolicies"`
	// The Role assignments set for the assignment.
	Segments *ResourceSetDescription `pulumi:"segments"`
	// Views set for the assignment.
	Views *ResourceSetDescription `pulumi:"views"`
	// Widget types set for the assignment.
	WidgetTypes *ResourceSetDescription `pulumi:"widgetTypes"`
}

// The set of arguments for constructing a RoleAssignment resource.
type RoleAssignmentArgs struct {
	// Widget types set for the assignment.
	ConflationPolicies ResourceSetDescriptionPtrInput
	// Connectors set for the assignment.
	Connectors ResourceSetDescriptionPtrInput
	// Localized description for the metadata.
	Description pulumi.StringMapInput
	// Localized display names for the metadata.
	DisplayName pulumi.StringMapInput
	// The name of the hub.
	HubName pulumi.StringInput
	// Interactions set for the assignment.
	Interactions ResourceSetDescriptionPtrInput
	// Kpis set for the assignment.
	Kpis ResourceSetDescriptionPtrInput
	// Links set for the assignment.
	Links ResourceSetDescriptionPtrInput
	// The assignment name
	Name pulumi.StringInput
	// The principals being assigned to.
	Principals AssignmentPrincipalArrayInput
	// Profiles set for the assignment.
	Profiles ResourceSetDescriptionPtrInput
	// The Role assignments set for the relationship links.
	RelationshipLinks ResourceSetDescriptionPtrInput
	// The Role assignments set for the relationships.
	Relationships ResourceSetDescriptionPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// Type of roles.
	Role pulumi.StringInput
	// The Role assignments set for the assignment.
	RoleAssignments ResourceSetDescriptionPtrInput
	// Sas Policies set for the assignment.
	SasPolicies ResourceSetDescriptionPtrInput
	// The Role assignments set for the assignment.
	Segments ResourceSetDescriptionPtrInput
	// Views set for the assignment.
	Views ResourceSetDescriptionPtrInput
	// Widget types set for the assignment.
	WidgetTypes ResourceSetDescriptionPtrInput
}

func (RoleAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*roleAssignmentArgs)(nil)).Elem()
}
