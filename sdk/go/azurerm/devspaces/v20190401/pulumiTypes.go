// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190401

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ControllerType struct {
	// Region where the Azure resource is located.
	Location string `pulumi:"location"`
	// The name of the resource.
	Name       string                       `pulumi:"name"`
	Properties ControllerPropertiesResponse `pulumi:"properties"`
	// Model representing SKU for Azure Dev Spaces Controller.
	Sku SkuResponse `pulumi:"sku"`
	// Tags for the Azure resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type string `pulumi:"type"`
}

// ControllerTypeInput is an input type that accepts ControllerTypeArgs and ControllerTypeOutput values.
// You can construct a concrete instance of `ControllerTypeInput` via:
//
//          ControllerTypeArgs{...}
type ControllerTypeInput interface {
	pulumi.Input

	ToControllerTypeOutput() ControllerTypeOutput
	ToControllerTypeOutputWithContext(context.Context) ControllerTypeOutput
}

type ControllerTypeArgs struct {
	// Region where the Azure resource is located.
	Location pulumi.StringInput `pulumi:"location"`
	// The name of the resource.
	Name       pulumi.StringInput                `pulumi:"name"`
	Properties ControllerPropertiesResponseInput `pulumi:"properties"`
	// Model representing SKU for Azure Dev Spaces Controller.
	Sku SkuResponseInput `pulumi:"sku"`
	// Tags for the Azure resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ControllerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ControllerType)(nil)).Elem()
}

func (i ControllerTypeArgs) ToControllerTypeOutput() ControllerTypeOutput {
	return i.ToControllerTypeOutputWithContext(context.Background())
}

func (i ControllerTypeArgs) ToControllerTypeOutputWithContext(ctx context.Context) ControllerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControllerTypeOutput)
}

type ControllerTypeOutput struct{ *pulumi.OutputState }

func (ControllerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ControllerType)(nil)).Elem()
}

func (o ControllerTypeOutput) ToControllerTypeOutput() ControllerTypeOutput {
	return o
}

func (o ControllerTypeOutput) ToControllerTypeOutputWithContext(ctx context.Context) ControllerTypeOutput {
	return o
}

// Region where the Azure resource is located.
func (o ControllerTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ControllerType) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource.
func (o ControllerTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ControllerType) string { return v.Name }).(pulumi.StringOutput)
}

func (o ControllerTypeOutput) Properties() ControllerPropertiesResponseOutput {
	return o.ApplyT(func(v ControllerType) ControllerPropertiesResponse { return v.Properties }).(ControllerPropertiesResponseOutput)
}

// Model representing SKU for Azure Dev Spaces Controller.
func (o ControllerTypeOutput) Sku() SkuResponseOutput {
	return o.ApplyT(func(v ControllerType) SkuResponse { return v.Sku }).(SkuResponseOutput)
}

// Tags for the Azure resource.
func (o ControllerTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ControllerType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o ControllerTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ControllerType) string { return v.Type }).(pulumi.StringOutput)
}

type ControllerConnectionDetailsResponse struct {
	// Base class for types that supply values used to connect to container orchestrators
	OrchestratorSpecificConnectionDetails *OrchestratorSpecificConnectionDetailsResponse `pulumi:"orchestratorSpecificConnectionDetails"`
}

// ControllerConnectionDetailsResponseInput is an input type that accepts ControllerConnectionDetailsResponseArgs and ControllerConnectionDetailsResponseOutput values.
// You can construct a concrete instance of `ControllerConnectionDetailsResponseInput` via:
//
//          ControllerConnectionDetailsResponseArgs{...}
type ControllerConnectionDetailsResponseInput interface {
	pulumi.Input

	ToControllerConnectionDetailsResponseOutput() ControllerConnectionDetailsResponseOutput
	ToControllerConnectionDetailsResponseOutputWithContext(context.Context) ControllerConnectionDetailsResponseOutput
}

type ControllerConnectionDetailsResponseArgs struct {
	// Base class for types that supply values used to connect to container orchestrators
	OrchestratorSpecificConnectionDetails OrchestratorSpecificConnectionDetailsResponsePtrInput `pulumi:"orchestratorSpecificConnectionDetails"`
}

func (ControllerConnectionDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ControllerConnectionDetailsResponse)(nil)).Elem()
}

func (i ControllerConnectionDetailsResponseArgs) ToControllerConnectionDetailsResponseOutput() ControllerConnectionDetailsResponseOutput {
	return i.ToControllerConnectionDetailsResponseOutputWithContext(context.Background())
}

func (i ControllerConnectionDetailsResponseArgs) ToControllerConnectionDetailsResponseOutputWithContext(ctx context.Context) ControllerConnectionDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControllerConnectionDetailsResponseOutput)
}

// ControllerConnectionDetailsResponseArrayInput is an input type that accepts ControllerConnectionDetailsResponseArray and ControllerConnectionDetailsResponseArrayOutput values.
// You can construct a concrete instance of `ControllerConnectionDetailsResponseArrayInput` via:
//
//          ControllerConnectionDetailsResponseArray{ ControllerConnectionDetailsResponseArgs{...} }
type ControllerConnectionDetailsResponseArrayInput interface {
	pulumi.Input

	ToControllerConnectionDetailsResponseArrayOutput() ControllerConnectionDetailsResponseArrayOutput
	ToControllerConnectionDetailsResponseArrayOutputWithContext(context.Context) ControllerConnectionDetailsResponseArrayOutput
}

type ControllerConnectionDetailsResponseArray []ControllerConnectionDetailsResponseInput

func (ControllerConnectionDetailsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ControllerConnectionDetailsResponse)(nil)).Elem()
}

func (i ControllerConnectionDetailsResponseArray) ToControllerConnectionDetailsResponseArrayOutput() ControllerConnectionDetailsResponseArrayOutput {
	return i.ToControllerConnectionDetailsResponseArrayOutputWithContext(context.Background())
}

func (i ControllerConnectionDetailsResponseArray) ToControllerConnectionDetailsResponseArrayOutputWithContext(ctx context.Context) ControllerConnectionDetailsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControllerConnectionDetailsResponseArrayOutput)
}

type ControllerConnectionDetailsResponseOutput struct{ *pulumi.OutputState }

func (ControllerConnectionDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ControllerConnectionDetailsResponse)(nil)).Elem()
}

func (o ControllerConnectionDetailsResponseOutput) ToControllerConnectionDetailsResponseOutput() ControllerConnectionDetailsResponseOutput {
	return o
}

func (o ControllerConnectionDetailsResponseOutput) ToControllerConnectionDetailsResponseOutputWithContext(ctx context.Context) ControllerConnectionDetailsResponseOutput {
	return o
}

// Base class for types that supply values used to connect to container orchestrators
func (o ControllerConnectionDetailsResponseOutput) OrchestratorSpecificConnectionDetails() OrchestratorSpecificConnectionDetailsResponsePtrOutput {
	return o.ApplyT(func(v ControllerConnectionDetailsResponse) *OrchestratorSpecificConnectionDetailsResponse {
		return v.OrchestratorSpecificConnectionDetails
	}).(OrchestratorSpecificConnectionDetailsResponsePtrOutput)
}

type ControllerConnectionDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (ControllerConnectionDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ControllerConnectionDetailsResponse)(nil)).Elem()
}

func (o ControllerConnectionDetailsResponseArrayOutput) ToControllerConnectionDetailsResponseArrayOutput() ControllerConnectionDetailsResponseArrayOutput {
	return o
}

func (o ControllerConnectionDetailsResponseArrayOutput) ToControllerConnectionDetailsResponseArrayOutputWithContext(ctx context.Context) ControllerConnectionDetailsResponseArrayOutput {
	return o
}

func (o ControllerConnectionDetailsResponseArrayOutput) Index(i pulumi.IntInput) ControllerConnectionDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ControllerConnectionDetailsResponse {
		return vs[0].([]ControllerConnectionDetailsResponse)[vs[1].(int)]
	}).(ControllerConnectionDetailsResponseOutput)
}

type ControllerProperties struct {
	// Credentials of the target container host (base64).
	TargetContainerHostCredentialsBase64 string `pulumi:"targetContainerHostCredentialsBase64"`
	// Resource ID of the target container host
	TargetContainerHostResourceId string `pulumi:"targetContainerHostResourceId"`
}

// ControllerPropertiesInput is an input type that accepts ControllerPropertiesArgs and ControllerPropertiesOutput values.
// You can construct a concrete instance of `ControllerPropertiesInput` via:
//
//          ControllerPropertiesArgs{...}
type ControllerPropertiesInput interface {
	pulumi.Input

	ToControllerPropertiesOutput() ControllerPropertiesOutput
	ToControllerPropertiesOutputWithContext(context.Context) ControllerPropertiesOutput
}

type ControllerPropertiesArgs struct {
	// Credentials of the target container host (base64).
	TargetContainerHostCredentialsBase64 pulumi.StringInput `pulumi:"targetContainerHostCredentialsBase64"`
	// Resource ID of the target container host
	TargetContainerHostResourceId pulumi.StringInput `pulumi:"targetContainerHostResourceId"`
}

func (ControllerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ControllerProperties)(nil)).Elem()
}

func (i ControllerPropertiesArgs) ToControllerPropertiesOutput() ControllerPropertiesOutput {
	return i.ToControllerPropertiesOutputWithContext(context.Background())
}

func (i ControllerPropertiesArgs) ToControllerPropertiesOutputWithContext(ctx context.Context) ControllerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControllerPropertiesOutput)
}

func (i ControllerPropertiesArgs) ToControllerPropertiesPtrOutput() ControllerPropertiesPtrOutput {
	return i.ToControllerPropertiesPtrOutputWithContext(context.Background())
}

func (i ControllerPropertiesArgs) ToControllerPropertiesPtrOutputWithContext(ctx context.Context) ControllerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControllerPropertiesOutput).ToControllerPropertiesPtrOutputWithContext(ctx)
}

// ControllerPropertiesPtrInput is an input type that accepts ControllerPropertiesArgs, ControllerPropertiesPtr and ControllerPropertiesPtrOutput values.
// You can construct a concrete instance of `ControllerPropertiesPtrInput` via:
//
//          ControllerPropertiesArgs{...}
//
//  or:
//
//          nil
type ControllerPropertiesPtrInput interface {
	pulumi.Input

	ToControllerPropertiesPtrOutput() ControllerPropertiesPtrOutput
	ToControllerPropertiesPtrOutputWithContext(context.Context) ControllerPropertiesPtrOutput
}

type controllerPropertiesPtrType ControllerPropertiesArgs

func ControllerPropertiesPtr(v *ControllerPropertiesArgs) ControllerPropertiesPtrInput {
	return (*controllerPropertiesPtrType)(v)
}

func (*controllerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ControllerProperties)(nil)).Elem()
}

func (i *controllerPropertiesPtrType) ToControllerPropertiesPtrOutput() ControllerPropertiesPtrOutput {
	return i.ToControllerPropertiesPtrOutputWithContext(context.Background())
}

func (i *controllerPropertiesPtrType) ToControllerPropertiesPtrOutputWithContext(ctx context.Context) ControllerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControllerPropertiesPtrOutput)
}

type ControllerPropertiesOutput struct{ *pulumi.OutputState }

func (ControllerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ControllerProperties)(nil)).Elem()
}

func (o ControllerPropertiesOutput) ToControllerPropertiesOutput() ControllerPropertiesOutput {
	return o
}

func (o ControllerPropertiesOutput) ToControllerPropertiesOutputWithContext(ctx context.Context) ControllerPropertiesOutput {
	return o
}

func (o ControllerPropertiesOutput) ToControllerPropertiesPtrOutput() ControllerPropertiesPtrOutput {
	return o.ToControllerPropertiesPtrOutputWithContext(context.Background())
}

func (o ControllerPropertiesOutput) ToControllerPropertiesPtrOutputWithContext(ctx context.Context) ControllerPropertiesPtrOutput {
	return o.ApplyT(func(v ControllerProperties) *ControllerProperties {
		return &v
	}).(ControllerPropertiesPtrOutput)
}

// Credentials of the target container host (base64).
func (o ControllerPropertiesOutput) TargetContainerHostCredentialsBase64() pulumi.StringOutput {
	return o.ApplyT(func(v ControllerProperties) string { return v.TargetContainerHostCredentialsBase64 }).(pulumi.StringOutput)
}

// Resource ID of the target container host
func (o ControllerPropertiesOutput) TargetContainerHostResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ControllerProperties) string { return v.TargetContainerHostResourceId }).(pulumi.StringOutput)
}

type ControllerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ControllerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ControllerProperties)(nil)).Elem()
}

func (o ControllerPropertiesPtrOutput) ToControllerPropertiesPtrOutput() ControllerPropertiesPtrOutput {
	return o
}

func (o ControllerPropertiesPtrOutput) ToControllerPropertiesPtrOutputWithContext(ctx context.Context) ControllerPropertiesPtrOutput {
	return o
}

func (o ControllerPropertiesPtrOutput) Elem() ControllerPropertiesOutput {
	return o.ApplyT(func(v *ControllerProperties) ControllerProperties { return *v }).(ControllerPropertiesOutput)
}

// Credentials of the target container host (base64).
func (o ControllerPropertiesPtrOutput) TargetContainerHostCredentialsBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControllerProperties) *string {
		if v == nil {
			return nil
		}
		return &v.TargetContainerHostCredentialsBase64
	}).(pulumi.StringPtrOutput)
}

// Resource ID of the target container host
func (o ControllerPropertiesPtrOutput) TargetContainerHostResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControllerProperties) *string {
		if v == nil {
			return nil
		}
		return &v.TargetContainerHostResourceId
	}).(pulumi.StringPtrOutput)
}

type ControllerPropertiesResponse struct {
	// DNS name for accessing DataPlane services
	DataPlaneFqdn string `pulumi:"dataPlaneFqdn"`
	// DNS suffix for public endpoints running in the Azure Dev Spaces Controller.
	HostSuffix string `pulumi:"hostSuffix"`
	// Provisioning state of the Azure Dev Spaces Controller.
	ProvisioningState string `pulumi:"provisioningState"`
	// DNS of the target container host's API server
	TargetContainerHostApiServerFqdn string `pulumi:"targetContainerHostApiServerFqdn"`
	// Credentials of the target container host (base64).
	TargetContainerHostCredentialsBase64 string `pulumi:"targetContainerHostCredentialsBase64"`
	// Resource ID of the target container host
	TargetContainerHostResourceId string `pulumi:"targetContainerHostResourceId"`
}

// ControllerPropertiesResponseInput is an input type that accepts ControllerPropertiesResponseArgs and ControllerPropertiesResponseOutput values.
// You can construct a concrete instance of `ControllerPropertiesResponseInput` via:
//
//          ControllerPropertiesResponseArgs{...}
type ControllerPropertiesResponseInput interface {
	pulumi.Input

	ToControllerPropertiesResponseOutput() ControllerPropertiesResponseOutput
	ToControllerPropertiesResponseOutputWithContext(context.Context) ControllerPropertiesResponseOutput
}

type ControllerPropertiesResponseArgs struct {
	// DNS name for accessing DataPlane services
	DataPlaneFqdn pulumi.StringInput `pulumi:"dataPlaneFqdn"`
	// DNS suffix for public endpoints running in the Azure Dev Spaces Controller.
	HostSuffix pulumi.StringInput `pulumi:"hostSuffix"`
	// Provisioning state of the Azure Dev Spaces Controller.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// DNS of the target container host's API server
	TargetContainerHostApiServerFqdn pulumi.StringInput `pulumi:"targetContainerHostApiServerFqdn"`
	// Credentials of the target container host (base64).
	TargetContainerHostCredentialsBase64 pulumi.StringInput `pulumi:"targetContainerHostCredentialsBase64"`
	// Resource ID of the target container host
	TargetContainerHostResourceId pulumi.StringInput `pulumi:"targetContainerHostResourceId"`
}

func (ControllerPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ControllerPropertiesResponse)(nil)).Elem()
}

func (i ControllerPropertiesResponseArgs) ToControllerPropertiesResponseOutput() ControllerPropertiesResponseOutput {
	return i.ToControllerPropertiesResponseOutputWithContext(context.Background())
}

func (i ControllerPropertiesResponseArgs) ToControllerPropertiesResponseOutputWithContext(ctx context.Context) ControllerPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControllerPropertiesResponseOutput)
}

func (i ControllerPropertiesResponseArgs) ToControllerPropertiesResponsePtrOutput() ControllerPropertiesResponsePtrOutput {
	return i.ToControllerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ControllerPropertiesResponseArgs) ToControllerPropertiesResponsePtrOutputWithContext(ctx context.Context) ControllerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControllerPropertiesResponseOutput).ToControllerPropertiesResponsePtrOutputWithContext(ctx)
}

// ControllerPropertiesResponsePtrInput is an input type that accepts ControllerPropertiesResponseArgs, ControllerPropertiesResponsePtr and ControllerPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ControllerPropertiesResponsePtrInput` via:
//
//          ControllerPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ControllerPropertiesResponsePtrInput interface {
	pulumi.Input

	ToControllerPropertiesResponsePtrOutput() ControllerPropertiesResponsePtrOutput
	ToControllerPropertiesResponsePtrOutputWithContext(context.Context) ControllerPropertiesResponsePtrOutput
}

type controllerPropertiesResponsePtrType ControllerPropertiesResponseArgs

func ControllerPropertiesResponsePtr(v *ControllerPropertiesResponseArgs) ControllerPropertiesResponsePtrInput {
	return (*controllerPropertiesResponsePtrType)(v)
}

func (*controllerPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ControllerPropertiesResponse)(nil)).Elem()
}

func (i *controllerPropertiesResponsePtrType) ToControllerPropertiesResponsePtrOutput() ControllerPropertiesResponsePtrOutput {
	return i.ToControllerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *controllerPropertiesResponsePtrType) ToControllerPropertiesResponsePtrOutputWithContext(ctx context.Context) ControllerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControllerPropertiesResponsePtrOutput)
}

type ControllerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ControllerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ControllerPropertiesResponse)(nil)).Elem()
}

func (o ControllerPropertiesResponseOutput) ToControllerPropertiesResponseOutput() ControllerPropertiesResponseOutput {
	return o
}

func (o ControllerPropertiesResponseOutput) ToControllerPropertiesResponseOutputWithContext(ctx context.Context) ControllerPropertiesResponseOutput {
	return o
}

func (o ControllerPropertiesResponseOutput) ToControllerPropertiesResponsePtrOutput() ControllerPropertiesResponsePtrOutput {
	return o.ToControllerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ControllerPropertiesResponseOutput) ToControllerPropertiesResponsePtrOutputWithContext(ctx context.Context) ControllerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ControllerPropertiesResponse) *ControllerPropertiesResponse {
		return &v
	}).(ControllerPropertiesResponsePtrOutput)
}

// DNS name for accessing DataPlane services
func (o ControllerPropertiesResponseOutput) DataPlaneFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v ControllerPropertiesResponse) string { return v.DataPlaneFqdn }).(pulumi.StringOutput)
}

// DNS suffix for public endpoints running in the Azure Dev Spaces Controller.
func (o ControllerPropertiesResponseOutput) HostSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v ControllerPropertiesResponse) string { return v.HostSuffix }).(pulumi.StringOutput)
}

// Provisioning state of the Azure Dev Spaces Controller.
func (o ControllerPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ControllerPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// DNS of the target container host's API server
func (o ControllerPropertiesResponseOutput) TargetContainerHostApiServerFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v ControllerPropertiesResponse) string { return v.TargetContainerHostApiServerFqdn }).(pulumi.StringOutput)
}

// Credentials of the target container host (base64).
func (o ControllerPropertiesResponseOutput) TargetContainerHostCredentialsBase64() pulumi.StringOutput {
	return o.ApplyT(func(v ControllerPropertiesResponse) string { return v.TargetContainerHostCredentialsBase64 }).(pulumi.StringOutput)
}

// Resource ID of the target container host
func (o ControllerPropertiesResponseOutput) TargetContainerHostResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ControllerPropertiesResponse) string { return v.TargetContainerHostResourceId }).(pulumi.StringOutput)
}

type ControllerPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ControllerPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ControllerPropertiesResponse)(nil)).Elem()
}

func (o ControllerPropertiesResponsePtrOutput) ToControllerPropertiesResponsePtrOutput() ControllerPropertiesResponsePtrOutput {
	return o
}

func (o ControllerPropertiesResponsePtrOutput) ToControllerPropertiesResponsePtrOutputWithContext(ctx context.Context) ControllerPropertiesResponsePtrOutput {
	return o
}

func (o ControllerPropertiesResponsePtrOutput) Elem() ControllerPropertiesResponseOutput {
	return o.ApplyT(func(v *ControllerPropertiesResponse) ControllerPropertiesResponse { return *v }).(ControllerPropertiesResponseOutput)
}

// DNS name for accessing DataPlane services
func (o ControllerPropertiesResponsePtrOutput) DataPlaneFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControllerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataPlaneFqdn
	}).(pulumi.StringPtrOutput)
}

// DNS suffix for public endpoints running in the Azure Dev Spaces Controller.
func (o ControllerPropertiesResponsePtrOutput) HostSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControllerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.HostSuffix
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the Azure Dev Spaces Controller.
func (o ControllerPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControllerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// DNS of the target container host's API server
func (o ControllerPropertiesResponsePtrOutput) TargetContainerHostApiServerFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControllerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetContainerHostApiServerFqdn
	}).(pulumi.StringPtrOutput)
}

// Credentials of the target container host (base64).
func (o ControllerPropertiesResponsePtrOutput) TargetContainerHostCredentialsBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControllerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetContainerHostCredentialsBase64
	}).(pulumi.StringPtrOutput)
}

// Resource ID of the target container host
func (o ControllerPropertiesResponsePtrOutput) TargetContainerHostResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControllerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetContainerHostResourceId
	}).(pulumi.StringPtrOutput)
}

// Base class for types that supply values used to connect to container orchestrators
type OrchestratorSpecificConnectionDetailsResponse struct {
	// Gets the Instance type.
	InstanceType string `pulumi:"instanceType"`
}

// OrchestratorSpecificConnectionDetailsResponseInput is an input type that accepts OrchestratorSpecificConnectionDetailsResponseArgs and OrchestratorSpecificConnectionDetailsResponseOutput values.
// You can construct a concrete instance of `OrchestratorSpecificConnectionDetailsResponseInput` via:
//
//          OrchestratorSpecificConnectionDetailsResponseArgs{...}
type OrchestratorSpecificConnectionDetailsResponseInput interface {
	pulumi.Input

	ToOrchestratorSpecificConnectionDetailsResponseOutput() OrchestratorSpecificConnectionDetailsResponseOutput
	ToOrchestratorSpecificConnectionDetailsResponseOutputWithContext(context.Context) OrchestratorSpecificConnectionDetailsResponseOutput
}

// Base class for types that supply values used to connect to container orchestrators
type OrchestratorSpecificConnectionDetailsResponseArgs struct {
	// Gets the Instance type.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
}

func (OrchestratorSpecificConnectionDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrchestratorSpecificConnectionDetailsResponse)(nil)).Elem()
}

func (i OrchestratorSpecificConnectionDetailsResponseArgs) ToOrchestratorSpecificConnectionDetailsResponseOutput() OrchestratorSpecificConnectionDetailsResponseOutput {
	return i.ToOrchestratorSpecificConnectionDetailsResponseOutputWithContext(context.Background())
}

func (i OrchestratorSpecificConnectionDetailsResponseArgs) ToOrchestratorSpecificConnectionDetailsResponseOutputWithContext(ctx context.Context) OrchestratorSpecificConnectionDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrchestratorSpecificConnectionDetailsResponseOutput)
}

func (i OrchestratorSpecificConnectionDetailsResponseArgs) ToOrchestratorSpecificConnectionDetailsResponsePtrOutput() OrchestratorSpecificConnectionDetailsResponsePtrOutput {
	return i.ToOrchestratorSpecificConnectionDetailsResponsePtrOutputWithContext(context.Background())
}

func (i OrchestratorSpecificConnectionDetailsResponseArgs) ToOrchestratorSpecificConnectionDetailsResponsePtrOutputWithContext(ctx context.Context) OrchestratorSpecificConnectionDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrchestratorSpecificConnectionDetailsResponseOutput).ToOrchestratorSpecificConnectionDetailsResponsePtrOutputWithContext(ctx)
}

// OrchestratorSpecificConnectionDetailsResponsePtrInput is an input type that accepts OrchestratorSpecificConnectionDetailsResponseArgs, OrchestratorSpecificConnectionDetailsResponsePtr and OrchestratorSpecificConnectionDetailsResponsePtrOutput values.
// You can construct a concrete instance of `OrchestratorSpecificConnectionDetailsResponsePtrInput` via:
//
//          OrchestratorSpecificConnectionDetailsResponseArgs{...}
//
//  or:
//
//          nil
type OrchestratorSpecificConnectionDetailsResponsePtrInput interface {
	pulumi.Input

	ToOrchestratorSpecificConnectionDetailsResponsePtrOutput() OrchestratorSpecificConnectionDetailsResponsePtrOutput
	ToOrchestratorSpecificConnectionDetailsResponsePtrOutputWithContext(context.Context) OrchestratorSpecificConnectionDetailsResponsePtrOutput
}

type orchestratorSpecificConnectionDetailsResponsePtrType OrchestratorSpecificConnectionDetailsResponseArgs

func OrchestratorSpecificConnectionDetailsResponsePtr(v *OrchestratorSpecificConnectionDetailsResponseArgs) OrchestratorSpecificConnectionDetailsResponsePtrInput {
	return (*orchestratorSpecificConnectionDetailsResponsePtrType)(v)
}

func (*orchestratorSpecificConnectionDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrchestratorSpecificConnectionDetailsResponse)(nil)).Elem()
}

func (i *orchestratorSpecificConnectionDetailsResponsePtrType) ToOrchestratorSpecificConnectionDetailsResponsePtrOutput() OrchestratorSpecificConnectionDetailsResponsePtrOutput {
	return i.ToOrchestratorSpecificConnectionDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *orchestratorSpecificConnectionDetailsResponsePtrType) ToOrchestratorSpecificConnectionDetailsResponsePtrOutputWithContext(ctx context.Context) OrchestratorSpecificConnectionDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrchestratorSpecificConnectionDetailsResponsePtrOutput)
}

// Base class for types that supply values used to connect to container orchestrators
type OrchestratorSpecificConnectionDetailsResponseOutput struct{ *pulumi.OutputState }

func (OrchestratorSpecificConnectionDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrchestratorSpecificConnectionDetailsResponse)(nil)).Elem()
}

func (o OrchestratorSpecificConnectionDetailsResponseOutput) ToOrchestratorSpecificConnectionDetailsResponseOutput() OrchestratorSpecificConnectionDetailsResponseOutput {
	return o
}

func (o OrchestratorSpecificConnectionDetailsResponseOutput) ToOrchestratorSpecificConnectionDetailsResponseOutputWithContext(ctx context.Context) OrchestratorSpecificConnectionDetailsResponseOutput {
	return o
}

func (o OrchestratorSpecificConnectionDetailsResponseOutput) ToOrchestratorSpecificConnectionDetailsResponsePtrOutput() OrchestratorSpecificConnectionDetailsResponsePtrOutput {
	return o.ToOrchestratorSpecificConnectionDetailsResponsePtrOutputWithContext(context.Background())
}

func (o OrchestratorSpecificConnectionDetailsResponseOutput) ToOrchestratorSpecificConnectionDetailsResponsePtrOutputWithContext(ctx context.Context) OrchestratorSpecificConnectionDetailsResponsePtrOutput {
	return o.ApplyT(func(v OrchestratorSpecificConnectionDetailsResponse) *OrchestratorSpecificConnectionDetailsResponse {
		return &v
	}).(OrchestratorSpecificConnectionDetailsResponsePtrOutput)
}

// Gets the Instance type.
func (o OrchestratorSpecificConnectionDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v OrchestratorSpecificConnectionDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

type OrchestratorSpecificConnectionDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (OrchestratorSpecificConnectionDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrchestratorSpecificConnectionDetailsResponse)(nil)).Elem()
}

func (o OrchestratorSpecificConnectionDetailsResponsePtrOutput) ToOrchestratorSpecificConnectionDetailsResponsePtrOutput() OrchestratorSpecificConnectionDetailsResponsePtrOutput {
	return o
}

func (o OrchestratorSpecificConnectionDetailsResponsePtrOutput) ToOrchestratorSpecificConnectionDetailsResponsePtrOutputWithContext(ctx context.Context) OrchestratorSpecificConnectionDetailsResponsePtrOutput {
	return o
}

func (o OrchestratorSpecificConnectionDetailsResponsePtrOutput) Elem() OrchestratorSpecificConnectionDetailsResponseOutput {
	return o.ApplyT(func(v *OrchestratorSpecificConnectionDetailsResponse) OrchestratorSpecificConnectionDetailsResponse {
		return *v
	}).(OrchestratorSpecificConnectionDetailsResponseOutput)
}

// Gets the Instance type.
func (o OrchestratorSpecificConnectionDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrchestratorSpecificConnectionDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// Model representing SKU for Azure Dev Spaces Controller.
type Sku struct {
	// The name of the SKU for Azure Dev Spaces Controller.
	Name string `pulumi:"name"`
	// The tier of the SKU for Azure Dev Spaces Controller.
	Tier *string `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// Model representing SKU for Azure Dev Spaces Controller.
type SkuArgs struct {
	// The name of the SKU for Azure Dev Spaces Controller.
	Name pulumi.StringInput `pulumi:"name"`
	// The tier of the SKU for Azure Dev Spaces Controller.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// Model representing SKU for Azure Dev Spaces Controller.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The name of the SKU for Azure Dev Spaces Controller.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The tier of the SKU for Azure Dev Spaces Controller.
func (o SkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// The name of the SKU for Azure Dev Spaces Controller.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The tier of the SKU for Azure Dev Spaces Controller.
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Model representing SKU for Azure Dev Spaces Controller.
type SkuResponse struct {
	// The name of the SKU for Azure Dev Spaces Controller.
	Name string `pulumi:"name"`
	// The tier of the SKU for Azure Dev Spaces Controller.
	Tier *string `pulumi:"tier"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// Model representing SKU for Azure Dev Spaces Controller.
type SkuResponseArgs struct {
	// The name of the SKU for Azure Dev Spaces Controller.
	Name pulumi.StringInput `pulumi:"name"`
	// The tier of the SKU for Azure Dev Spaces Controller.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// Model representing SKU for Azure Dev Spaces Controller.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// The name of the SKU for Azure Dev Spaces Controller.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The tier of the SKU for Azure Dev Spaces Controller.
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// The name of the SKU for Azure Dev Spaces Controller.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The tier of the SKU for Azure Dev Spaces Controller.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ControllerTypeOutput{})
	pulumi.RegisterOutputType(ControllerConnectionDetailsResponseOutput{})
	pulumi.RegisterOutputType(ControllerConnectionDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(ControllerPropertiesOutput{})
	pulumi.RegisterOutputType(ControllerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ControllerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ControllerPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(OrchestratorSpecificConnectionDetailsResponseOutput{})
	pulumi.RegisterOutputType(OrchestratorSpecificConnectionDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
}
