// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package security

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type LocationJitNetworkAccessPolicy struct {
	pulumi.CustomResourceState

	// Kind of the resource
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Location where the resource is stored
	Location pulumi.StringOutput `pulumi:"location"`
	// Resource name
	Name       pulumi.StringOutput                            `pulumi:"name"`
	Properties JitNetworkAccessPolicyPropertiesResponseOutput `pulumi:"properties"`
	// Resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewLocationJitNetworkAccessPolicy registers a new resource with the given unique name, arguments, and options.
func NewLocationJitNetworkAccessPolicy(ctx *pulumi.Context,
	name string, args *LocationJitNetworkAccessPolicyArgs, opts ...pulumi.ResourceOption) (*LocationJitNetworkAccessPolicy, error) {
	if args == nil || args.AscLocation == nil {
		return nil, errors.New("missing required argument 'AscLocation'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.Properties == nil {
		return nil, errors.New("missing required argument 'Properties'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &LocationJitNetworkAccessPolicyArgs{}
	}
	var resource LocationJitNetworkAccessPolicy
	err := ctx.RegisterResource("azurerm:security:LocationJitNetworkAccessPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocationJitNetworkAccessPolicy gets an existing LocationJitNetworkAccessPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocationJitNetworkAccessPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocationJitNetworkAccessPolicyState, opts ...pulumi.ResourceOption) (*LocationJitNetworkAccessPolicy, error) {
	var resource LocationJitNetworkAccessPolicy
	err := ctx.ReadResource("azurerm:security:LocationJitNetworkAccessPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LocationJitNetworkAccessPolicy resources.
type locationJitNetworkAccessPolicyState struct {
	// Kind of the resource
	Kind *string `pulumi:"kind"`
	// Location where the resource is stored
	Location *string `pulumi:"location"`
	// Resource name
	Name       *string                                   `pulumi:"name"`
	Properties *JitNetworkAccessPolicyPropertiesResponse `pulumi:"properties"`
	// Resource type
	Type *string `pulumi:"type"`
}

type LocationJitNetworkAccessPolicyState struct {
	// Kind of the resource
	Kind pulumi.StringPtrInput
	// Location where the resource is stored
	Location pulumi.StringPtrInput
	// Resource name
	Name       pulumi.StringPtrInput
	Properties JitNetworkAccessPolicyPropertiesResponsePtrInput
	// Resource type
	Type pulumi.StringPtrInput
}

func (LocationJitNetworkAccessPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*locationJitNetworkAccessPolicyState)(nil)).Elem()
}

type locationJitNetworkAccessPolicyArgs struct {
	// The location where ASC stores the data of the subscription. can be retrieved from Get locations
	AscLocation string `pulumi:"ascLocation"`
	// Kind of the resource
	Kind *string `pulumi:"kind"`
	// Name of a Just-in-Time access configuration policy.
	Name       string                           `pulumi:"name"`
	Properties JitNetworkAccessPolicyProperties `pulumi:"properties"`
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a LocationJitNetworkAccessPolicy resource.
type LocationJitNetworkAccessPolicyArgs struct {
	// The location where ASC stores the data of the subscription. can be retrieved from Get locations
	AscLocation pulumi.StringInput
	// Kind of the resource
	Kind pulumi.StringPtrInput
	// Name of a Just-in-Time access configuration policy.
	Name       pulumi.StringInput
	Properties JitNetworkAccessPolicyPropertiesInput
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
}

func (LocationJitNetworkAccessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*locationJitNetworkAccessPolicyArgs)(nil)).Elem()
}
