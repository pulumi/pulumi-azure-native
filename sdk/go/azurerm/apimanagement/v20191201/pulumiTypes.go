// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20191201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Description of an additional API Management resource location.
type AdditionalLocation struct {
	// Property only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in this additional location.
	DisableGateway *bool `pulumi:"disableGateway"`
	// The location name of the additional region among Azure Data center regions.
	Location string `pulumi:"location"`
	// SKU properties of the API Management service.
	Sku ApiManagementServiceSkuProperties `pulumi:"sku"`
	// Virtual network configuration for the location.
	VirtualNetworkConfiguration *VirtualNetworkConfiguration `pulumi:"virtualNetworkConfiguration"`
}

// AdditionalLocationInput is an input type that accepts AdditionalLocationArgs and AdditionalLocationOutput values.
// You can construct a concrete instance of `AdditionalLocationInput` via:
//
//          AdditionalLocationArgs{...}
type AdditionalLocationInput interface {
	pulumi.Input

	ToAdditionalLocationOutput() AdditionalLocationOutput
	ToAdditionalLocationOutputWithContext(context.Context) AdditionalLocationOutput
}

// Description of an additional API Management resource location.
type AdditionalLocationArgs struct {
	// Property only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in this additional location.
	DisableGateway pulumi.BoolPtrInput `pulumi:"disableGateway"`
	// The location name of the additional region among Azure Data center regions.
	Location pulumi.StringInput `pulumi:"location"`
	// SKU properties of the API Management service.
	Sku ApiManagementServiceSkuPropertiesInput `pulumi:"sku"`
	// Virtual network configuration for the location.
	VirtualNetworkConfiguration VirtualNetworkConfigurationPtrInput `pulumi:"virtualNetworkConfiguration"`
}

func (AdditionalLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalLocation)(nil)).Elem()
}

func (i AdditionalLocationArgs) ToAdditionalLocationOutput() AdditionalLocationOutput {
	return i.ToAdditionalLocationOutputWithContext(context.Background())
}

func (i AdditionalLocationArgs) ToAdditionalLocationOutputWithContext(ctx context.Context) AdditionalLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalLocationOutput)
}

// AdditionalLocationArrayInput is an input type that accepts AdditionalLocationArray and AdditionalLocationArrayOutput values.
// You can construct a concrete instance of `AdditionalLocationArrayInput` via:
//
//          AdditionalLocationArray{ AdditionalLocationArgs{...} }
type AdditionalLocationArrayInput interface {
	pulumi.Input

	ToAdditionalLocationArrayOutput() AdditionalLocationArrayOutput
	ToAdditionalLocationArrayOutputWithContext(context.Context) AdditionalLocationArrayOutput
}

type AdditionalLocationArray []AdditionalLocationInput

func (AdditionalLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalLocation)(nil)).Elem()
}

func (i AdditionalLocationArray) ToAdditionalLocationArrayOutput() AdditionalLocationArrayOutput {
	return i.ToAdditionalLocationArrayOutputWithContext(context.Background())
}

func (i AdditionalLocationArray) ToAdditionalLocationArrayOutputWithContext(ctx context.Context) AdditionalLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalLocationArrayOutput)
}

// Description of an additional API Management resource location.
type AdditionalLocationResponse struct {
	// Property only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in this additional location.
	DisableGateway *bool `pulumi:"disableGateway"`
	// Gateway URL of the API Management service in the Region.
	GatewayRegionalUrl string `pulumi:"gatewayRegionalUrl"`
	// The location name of the additional region among Azure Data center regions.
	Location string `pulumi:"location"`
	// Private Static Load Balanced IP addresses of the API Management service which is deployed in an Internal Virtual Network in a particular additional location. Available only for Basic, Standard and Premium SKU.
	PrivateIPAddresses []string `pulumi:"privateIPAddresses"`
	// Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
	PublicIPAddresses []string `pulumi:"publicIPAddresses"`
	// SKU properties of the API Management service.
	Sku ApiManagementServiceSkuPropertiesResponse `pulumi:"sku"`
	// Virtual network configuration for the location.
	VirtualNetworkConfiguration *VirtualNetworkConfigurationResponse `pulumi:"virtualNetworkConfiguration"`
}

// Description of an additional API Management resource location.
type AdditionalLocationResponseOutput struct{ *pulumi.OutputState }

func (AdditionalLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalLocationResponse)(nil)).Elem()
}

func (o AdditionalLocationResponseOutput) ToAdditionalLocationResponseOutput() AdditionalLocationResponseOutput {
	return o
}

func (o AdditionalLocationResponseOutput) ToAdditionalLocationResponseOutputWithContext(ctx context.Context) AdditionalLocationResponseOutput {
	return o
}

// Property only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in this additional location.
func (o AdditionalLocationResponseOutput) DisableGateway() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdditionalLocationResponse) *bool { return v.DisableGateway }).(pulumi.BoolPtrOutput)
}

// Gateway URL of the API Management service in the Region.
func (o AdditionalLocationResponseOutput) GatewayRegionalUrl() pulumi.StringOutput {
	return o.ApplyT(func(v AdditionalLocationResponse) string { return v.GatewayRegionalUrl }).(pulumi.StringOutput)
}

// The location name of the additional region among Azure Data center regions.
func (o AdditionalLocationResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v AdditionalLocationResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Private Static Load Balanced IP addresses of the API Management service which is deployed in an Internal Virtual Network in a particular additional location. Available only for Basic, Standard and Premium SKU.
func (o AdditionalLocationResponseOutput) PrivateIPAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AdditionalLocationResponse) []string { return v.PrivateIPAddresses }).(pulumi.StringArrayOutput)
}

// Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
func (o AdditionalLocationResponseOutput) PublicIPAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AdditionalLocationResponse) []string { return v.PublicIPAddresses }).(pulumi.StringArrayOutput)
}

// SKU properties of the API Management service.
func (o AdditionalLocationResponseOutput) Sku() ApiManagementServiceSkuPropertiesResponseOutput {
	return o.ApplyT(func(v AdditionalLocationResponse) ApiManagementServiceSkuPropertiesResponse { return v.Sku }).(ApiManagementServiceSkuPropertiesResponseOutput)
}

// Virtual network configuration for the location.
func (o AdditionalLocationResponseOutput) VirtualNetworkConfiguration() VirtualNetworkConfigurationResponsePtrOutput {
	return o.ApplyT(func(v AdditionalLocationResponse) *VirtualNetworkConfigurationResponse {
		return v.VirtualNetworkConfiguration
	}).(VirtualNetworkConfigurationResponsePtrOutput)
}

type AdditionalLocationResponseArrayOutput struct{ *pulumi.OutputState }

func (AdditionalLocationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalLocationResponse)(nil)).Elem()
}

func (o AdditionalLocationResponseArrayOutput) ToAdditionalLocationResponseArrayOutput() AdditionalLocationResponseArrayOutput {
	return o
}

func (o AdditionalLocationResponseArrayOutput) ToAdditionalLocationResponseArrayOutputWithContext(ctx context.Context) AdditionalLocationResponseArrayOutput {
	return o
}

func (o AdditionalLocationResponseArrayOutput) Index(i pulumi.IntInput) AdditionalLocationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdditionalLocationResponse {
		return vs[0].([]AdditionalLocationResponse)[vs[1].(int)]
	}).(AdditionalLocationResponseOutput)
}

// Criteria to limit import of WSDL to a subset of the document.
type ApiCreateOrUpdatePropertiesWsdlSelector struct {
	// Name of endpoint(port) to import from WSDL
	WsdlEndpointName *string `pulumi:"wsdlEndpointName"`
	// Name of service to import from WSDL
	WsdlServiceName *string `pulumi:"wsdlServiceName"`
}

// ApiCreateOrUpdatePropertiesWsdlSelectorInput is an input type that accepts ApiCreateOrUpdatePropertiesWsdlSelectorArgs and ApiCreateOrUpdatePropertiesWsdlSelectorOutput values.
// You can construct a concrete instance of `ApiCreateOrUpdatePropertiesWsdlSelectorInput` via:
//
//          ApiCreateOrUpdatePropertiesWsdlSelectorArgs{...}
type ApiCreateOrUpdatePropertiesWsdlSelectorInput interface {
	pulumi.Input

	ToApiCreateOrUpdatePropertiesWsdlSelectorOutput() ApiCreateOrUpdatePropertiesWsdlSelectorOutput
	ToApiCreateOrUpdatePropertiesWsdlSelectorOutputWithContext(context.Context) ApiCreateOrUpdatePropertiesWsdlSelectorOutput
}

// Criteria to limit import of WSDL to a subset of the document.
type ApiCreateOrUpdatePropertiesWsdlSelectorArgs struct {
	// Name of endpoint(port) to import from WSDL
	WsdlEndpointName pulumi.StringPtrInput `pulumi:"wsdlEndpointName"`
	// Name of service to import from WSDL
	WsdlServiceName pulumi.StringPtrInput `pulumi:"wsdlServiceName"`
}

func (ApiCreateOrUpdatePropertiesWsdlSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiCreateOrUpdatePropertiesWsdlSelector)(nil)).Elem()
}

func (i ApiCreateOrUpdatePropertiesWsdlSelectorArgs) ToApiCreateOrUpdatePropertiesWsdlSelectorOutput() ApiCreateOrUpdatePropertiesWsdlSelectorOutput {
	return i.ToApiCreateOrUpdatePropertiesWsdlSelectorOutputWithContext(context.Background())
}

func (i ApiCreateOrUpdatePropertiesWsdlSelectorArgs) ToApiCreateOrUpdatePropertiesWsdlSelectorOutputWithContext(ctx context.Context) ApiCreateOrUpdatePropertiesWsdlSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiCreateOrUpdatePropertiesWsdlSelectorOutput)
}

func (i ApiCreateOrUpdatePropertiesWsdlSelectorArgs) ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput() ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput {
	return i.ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(context.Background())
}

func (i ApiCreateOrUpdatePropertiesWsdlSelectorArgs) ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(ctx context.Context) ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiCreateOrUpdatePropertiesWsdlSelectorOutput).ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(ctx)
}

// ApiCreateOrUpdatePropertiesWsdlSelectorPtrInput is an input type that accepts ApiCreateOrUpdatePropertiesWsdlSelectorArgs, ApiCreateOrUpdatePropertiesWsdlSelectorPtr and ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput values.
// You can construct a concrete instance of `ApiCreateOrUpdatePropertiesWsdlSelectorPtrInput` via:
//
//          ApiCreateOrUpdatePropertiesWsdlSelectorArgs{...}
//
//  or:
//
//          nil
type ApiCreateOrUpdatePropertiesWsdlSelectorPtrInput interface {
	pulumi.Input

	ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput() ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput
	ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(context.Context) ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput
}

type apiCreateOrUpdatePropertiesWsdlSelectorPtrType ApiCreateOrUpdatePropertiesWsdlSelectorArgs

func ApiCreateOrUpdatePropertiesWsdlSelectorPtr(v *ApiCreateOrUpdatePropertiesWsdlSelectorArgs) ApiCreateOrUpdatePropertiesWsdlSelectorPtrInput {
	return (*apiCreateOrUpdatePropertiesWsdlSelectorPtrType)(v)
}

func (*apiCreateOrUpdatePropertiesWsdlSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiCreateOrUpdatePropertiesWsdlSelector)(nil)).Elem()
}

func (i *apiCreateOrUpdatePropertiesWsdlSelectorPtrType) ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput() ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput {
	return i.ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(context.Background())
}

func (i *apiCreateOrUpdatePropertiesWsdlSelectorPtrType) ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(ctx context.Context) ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput)
}

// Identity properties of the Api Management service resource.
type ApiManagementServiceIdentity struct {
	// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
	Type string `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity
	// dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
	//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]UserIdentityProperties `pulumi:"userAssignedIdentities"`
}

// ApiManagementServiceIdentityInput is an input type that accepts ApiManagementServiceIdentityArgs and ApiManagementServiceIdentityOutput values.
// You can construct a concrete instance of `ApiManagementServiceIdentityInput` via:
//
//          ApiManagementServiceIdentityArgs{...}
type ApiManagementServiceIdentityInput interface {
	pulumi.Input

	ToApiManagementServiceIdentityOutput() ApiManagementServiceIdentityOutput
	ToApiManagementServiceIdentityOutputWithContext(context.Context) ApiManagementServiceIdentityOutput
}

// Identity properties of the Api Management service resource.
type ApiManagementServiceIdentityArgs struct {
	// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
	Type pulumi.StringInput `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity
	// dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
	//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities UserIdentityPropertiesMapInput `pulumi:"userAssignedIdentities"`
}

func (ApiManagementServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementServiceIdentity)(nil)).Elem()
}

func (i ApiManagementServiceIdentityArgs) ToApiManagementServiceIdentityOutput() ApiManagementServiceIdentityOutput {
	return i.ToApiManagementServiceIdentityOutputWithContext(context.Background())
}

func (i ApiManagementServiceIdentityArgs) ToApiManagementServiceIdentityOutputWithContext(ctx context.Context) ApiManagementServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceIdentityOutput)
}

func (i ApiManagementServiceIdentityArgs) ToApiManagementServiceIdentityPtrOutput() ApiManagementServiceIdentityPtrOutput {
	return i.ToApiManagementServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ApiManagementServiceIdentityArgs) ToApiManagementServiceIdentityPtrOutputWithContext(ctx context.Context) ApiManagementServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceIdentityOutput).ToApiManagementServiceIdentityPtrOutputWithContext(ctx)
}

// ApiManagementServiceIdentityPtrInput is an input type that accepts ApiManagementServiceIdentityArgs, ApiManagementServiceIdentityPtr and ApiManagementServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ApiManagementServiceIdentityPtrInput` via:
//
//          ApiManagementServiceIdentityArgs{...}
//
//  or:
//
//          nil
type ApiManagementServiceIdentityPtrInput interface {
	pulumi.Input

	ToApiManagementServiceIdentityPtrOutput() ApiManagementServiceIdentityPtrOutput
	ToApiManagementServiceIdentityPtrOutputWithContext(context.Context) ApiManagementServiceIdentityPtrOutput
}

type apiManagementServiceIdentityPtrType ApiManagementServiceIdentityArgs

func ApiManagementServiceIdentityPtr(v *ApiManagementServiceIdentityArgs) ApiManagementServiceIdentityPtrInput {
	return (*apiManagementServiceIdentityPtrType)(v)
}

func (*apiManagementServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementServiceIdentity)(nil)).Elem()
}

func (i *apiManagementServiceIdentityPtrType) ToApiManagementServiceIdentityPtrOutput() ApiManagementServiceIdentityPtrOutput {
	return i.ToApiManagementServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *apiManagementServiceIdentityPtrType) ToApiManagementServiceIdentityPtrOutputWithContext(ctx context.Context) ApiManagementServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceIdentityPtrOutput)
}

// Identity properties of the Api Management service resource.
type ApiManagementServiceIdentityResponse struct {
	// The principal id of the identity.
	PrincipalId string `pulumi:"principalId"`
	// The client tenant id of the identity.
	TenantId string `pulumi:"tenantId"`
	// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
	Type string `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity
	// dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
	//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]UserIdentityPropertiesResponse `pulumi:"userAssignedIdentities"`
}

// Identity properties of the Api Management service resource.
type ApiManagementServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ApiManagementServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementServiceIdentityResponse)(nil)).Elem()
}

func (o ApiManagementServiceIdentityResponseOutput) ToApiManagementServiceIdentityResponseOutput() ApiManagementServiceIdentityResponseOutput {
	return o
}

func (o ApiManagementServiceIdentityResponseOutput) ToApiManagementServiceIdentityResponseOutputWithContext(ctx context.Context) ApiManagementServiceIdentityResponseOutput {
	return o
}

func (o ApiManagementServiceIdentityResponseOutput) ToApiManagementServiceIdentityResponsePtrOutput() ApiManagementServiceIdentityResponsePtrOutput {
	return o.ToApiManagementServiceIdentityResponsePtrOutputWithContext(context.Background())
}

func (o ApiManagementServiceIdentityResponseOutput) ToApiManagementServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ApiManagementServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v ApiManagementServiceIdentityResponse) *ApiManagementServiceIdentityResponse {
		return &v
	}).(ApiManagementServiceIdentityResponsePtrOutput)
}

// The principal id of the identity.
func (o ApiManagementServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The client tenant id of the identity.
func (o ApiManagementServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
func (o ApiManagementServiceIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServiceIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The list of user identities associated with the resource. The user identity
// dictionary key references will be ARM resource ids in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ApiManagementServiceIdentityResponseOutput) UserAssignedIdentities() UserIdentityPropertiesResponseMapOutput {
	return o.ApplyT(func(v ApiManagementServiceIdentityResponse) map[string]UserIdentityPropertiesResponse {
		return v.UserAssignedIdentities
	}).(UserIdentityPropertiesResponseMapOutput)
}

type ApiManagementServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiManagementServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementServiceIdentityResponse)(nil)).Elem()
}

func (o ApiManagementServiceIdentityResponsePtrOutput) ToApiManagementServiceIdentityResponsePtrOutput() ApiManagementServiceIdentityResponsePtrOutput {
	return o
}

func (o ApiManagementServiceIdentityResponsePtrOutput) ToApiManagementServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ApiManagementServiceIdentityResponsePtrOutput {
	return o
}

func (o ApiManagementServiceIdentityResponsePtrOutput) Elem() ApiManagementServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ApiManagementServiceIdentityResponse) ApiManagementServiceIdentityResponse { return *v }).(ApiManagementServiceIdentityResponseOutput)
}

// The principal id of the identity.
func (o ApiManagementServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The client tenant id of the identity.
func (o ApiManagementServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
func (o ApiManagementServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity
// dictionary key references will be ARM resource ids in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ApiManagementServiceIdentityResponsePtrOutput) UserAssignedIdentities() UserIdentityPropertiesResponseMapOutput {
	return o.ApplyT(func(v *ApiManagementServiceIdentityResponse) map[string]UserIdentityPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserIdentityPropertiesResponseMapOutput)
}

// API Management service resource SKU properties.
type ApiManagementServiceSkuProperties struct {
	// Capacity of the SKU (number of deployed units of the SKU). For Consumption SKU capacity must be specified as 0.
	Capacity int `pulumi:"capacity"`
	// Name of the Sku.
	Name string `pulumi:"name"`
}

// ApiManagementServiceSkuPropertiesInput is an input type that accepts ApiManagementServiceSkuPropertiesArgs and ApiManagementServiceSkuPropertiesOutput values.
// You can construct a concrete instance of `ApiManagementServiceSkuPropertiesInput` via:
//
//          ApiManagementServiceSkuPropertiesArgs{...}
type ApiManagementServiceSkuPropertiesInput interface {
	pulumi.Input

	ToApiManagementServiceSkuPropertiesOutput() ApiManagementServiceSkuPropertiesOutput
	ToApiManagementServiceSkuPropertiesOutputWithContext(context.Context) ApiManagementServiceSkuPropertiesOutput
}

// API Management service resource SKU properties.
type ApiManagementServiceSkuPropertiesArgs struct {
	// Capacity of the SKU (number of deployed units of the SKU). For Consumption SKU capacity must be specified as 0.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// Name of the Sku.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ApiManagementServiceSkuPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementServiceSkuProperties)(nil)).Elem()
}

func (i ApiManagementServiceSkuPropertiesArgs) ToApiManagementServiceSkuPropertiesOutput() ApiManagementServiceSkuPropertiesOutput {
	return i.ToApiManagementServiceSkuPropertiesOutputWithContext(context.Background())
}

func (i ApiManagementServiceSkuPropertiesArgs) ToApiManagementServiceSkuPropertiesOutputWithContext(ctx context.Context) ApiManagementServiceSkuPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceSkuPropertiesOutput)
}

func (i ApiManagementServiceSkuPropertiesArgs) ToApiManagementServiceSkuPropertiesPtrOutput() ApiManagementServiceSkuPropertiesPtrOutput {
	return i.ToApiManagementServiceSkuPropertiesPtrOutputWithContext(context.Background())
}

func (i ApiManagementServiceSkuPropertiesArgs) ToApiManagementServiceSkuPropertiesPtrOutputWithContext(ctx context.Context) ApiManagementServiceSkuPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceSkuPropertiesOutput).ToApiManagementServiceSkuPropertiesPtrOutputWithContext(ctx)
}

// ApiManagementServiceSkuPropertiesPtrInput is an input type that accepts ApiManagementServiceSkuPropertiesArgs, ApiManagementServiceSkuPropertiesPtr and ApiManagementServiceSkuPropertiesPtrOutput values.
// You can construct a concrete instance of `ApiManagementServiceSkuPropertiesPtrInput` via:
//
//          ApiManagementServiceSkuPropertiesArgs{...}
//
//  or:
//
//          nil
type ApiManagementServiceSkuPropertiesPtrInput interface {
	pulumi.Input

	ToApiManagementServiceSkuPropertiesPtrOutput() ApiManagementServiceSkuPropertiesPtrOutput
	ToApiManagementServiceSkuPropertiesPtrOutputWithContext(context.Context) ApiManagementServiceSkuPropertiesPtrOutput
}

type apiManagementServiceSkuPropertiesPtrType ApiManagementServiceSkuPropertiesArgs

func ApiManagementServiceSkuPropertiesPtr(v *ApiManagementServiceSkuPropertiesArgs) ApiManagementServiceSkuPropertiesPtrInput {
	return (*apiManagementServiceSkuPropertiesPtrType)(v)
}

func (*apiManagementServiceSkuPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementServiceSkuProperties)(nil)).Elem()
}

func (i *apiManagementServiceSkuPropertiesPtrType) ToApiManagementServiceSkuPropertiesPtrOutput() ApiManagementServiceSkuPropertiesPtrOutput {
	return i.ToApiManagementServiceSkuPropertiesPtrOutputWithContext(context.Background())
}

func (i *apiManagementServiceSkuPropertiesPtrType) ToApiManagementServiceSkuPropertiesPtrOutputWithContext(ctx context.Context) ApiManagementServiceSkuPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceSkuPropertiesPtrOutput)
}

// API Management service resource SKU properties.
type ApiManagementServiceSkuPropertiesResponse struct {
	// Capacity of the SKU (number of deployed units of the SKU). For Consumption SKU capacity must be specified as 0.
	Capacity int `pulumi:"capacity"`
	// Name of the Sku.
	Name string `pulumi:"name"`
}

// API Management service resource SKU properties.
type ApiManagementServiceSkuPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApiManagementServiceSkuPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementServiceSkuPropertiesResponse)(nil)).Elem()
}

func (o ApiManagementServiceSkuPropertiesResponseOutput) ToApiManagementServiceSkuPropertiesResponseOutput() ApiManagementServiceSkuPropertiesResponseOutput {
	return o
}

func (o ApiManagementServiceSkuPropertiesResponseOutput) ToApiManagementServiceSkuPropertiesResponseOutputWithContext(ctx context.Context) ApiManagementServiceSkuPropertiesResponseOutput {
	return o
}

func (o ApiManagementServiceSkuPropertiesResponseOutput) ToApiManagementServiceSkuPropertiesResponsePtrOutput() ApiManagementServiceSkuPropertiesResponsePtrOutput {
	return o.ToApiManagementServiceSkuPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ApiManagementServiceSkuPropertiesResponseOutput) ToApiManagementServiceSkuPropertiesResponsePtrOutputWithContext(ctx context.Context) ApiManagementServiceSkuPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ApiManagementServiceSkuPropertiesResponse) *ApiManagementServiceSkuPropertiesResponse {
		return &v
	}).(ApiManagementServiceSkuPropertiesResponsePtrOutput)
}

// Capacity of the SKU (number of deployed units of the SKU). For Consumption SKU capacity must be specified as 0.
func (o ApiManagementServiceSkuPropertiesResponseOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v ApiManagementServiceSkuPropertiesResponse) int { return v.Capacity }).(pulumi.IntOutput)
}

// Name of the Sku.
func (o ApiManagementServiceSkuPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServiceSkuPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

type ApiManagementServiceSkuPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiManagementServiceSkuPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementServiceSkuPropertiesResponse)(nil)).Elem()
}

func (o ApiManagementServiceSkuPropertiesResponsePtrOutput) ToApiManagementServiceSkuPropertiesResponsePtrOutput() ApiManagementServiceSkuPropertiesResponsePtrOutput {
	return o
}

func (o ApiManagementServiceSkuPropertiesResponsePtrOutput) ToApiManagementServiceSkuPropertiesResponsePtrOutputWithContext(ctx context.Context) ApiManagementServiceSkuPropertiesResponsePtrOutput {
	return o
}

func (o ApiManagementServiceSkuPropertiesResponsePtrOutput) Elem() ApiManagementServiceSkuPropertiesResponseOutput {
	return o.ApplyT(func(v *ApiManagementServiceSkuPropertiesResponse) ApiManagementServiceSkuPropertiesResponse {
		return *v
	}).(ApiManagementServiceSkuPropertiesResponseOutput)
}

// Capacity of the SKU (number of deployed units of the SKU). For Consumption SKU capacity must be specified as 0.
func (o ApiManagementServiceSkuPropertiesResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApiManagementServiceSkuPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Name of the Sku.
func (o ApiManagementServiceSkuPropertiesResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServiceSkuPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Control Plane Apis version constraint for the API Management service.
type ApiVersionConstraint struct {
	// Limit control plane API calls to API Management service with version equal to or newer than this value.
	MinApiVersion *string `pulumi:"minApiVersion"`
}

// ApiVersionConstraintInput is an input type that accepts ApiVersionConstraintArgs and ApiVersionConstraintOutput values.
// You can construct a concrete instance of `ApiVersionConstraintInput` via:
//
//          ApiVersionConstraintArgs{...}
type ApiVersionConstraintInput interface {
	pulumi.Input

	ToApiVersionConstraintOutput() ApiVersionConstraintOutput
	ToApiVersionConstraintOutputWithContext(context.Context) ApiVersionConstraintOutput
}

// Control Plane Apis version constraint for the API Management service.
type ApiVersionConstraintArgs struct {
	// Limit control plane API calls to API Management service with version equal to or newer than this value.
	MinApiVersion pulumi.StringPtrInput `pulumi:"minApiVersion"`
}

func (ApiVersionConstraintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiVersionConstraint)(nil)).Elem()
}

func (i ApiVersionConstraintArgs) ToApiVersionConstraintOutput() ApiVersionConstraintOutput {
	return i.ToApiVersionConstraintOutputWithContext(context.Background())
}

func (i ApiVersionConstraintArgs) ToApiVersionConstraintOutputWithContext(ctx context.Context) ApiVersionConstraintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiVersionConstraintOutput)
}

func (i ApiVersionConstraintArgs) ToApiVersionConstraintPtrOutput() ApiVersionConstraintPtrOutput {
	return i.ToApiVersionConstraintPtrOutputWithContext(context.Background())
}

func (i ApiVersionConstraintArgs) ToApiVersionConstraintPtrOutputWithContext(ctx context.Context) ApiVersionConstraintPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiVersionConstraintOutput).ToApiVersionConstraintPtrOutputWithContext(ctx)
}

// ApiVersionConstraintPtrInput is an input type that accepts ApiVersionConstraintArgs, ApiVersionConstraintPtr and ApiVersionConstraintPtrOutput values.
// You can construct a concrete instance of `ApiVersionConstraintPtrInput` via:
//
//          ApiVersionConstraintArgs{...}
//
//  or:
//
//          nil
type ApiVersionConstraintPtrInput interface {
	pulumi.Input

	ToApiVersionConstraintPtrOutput() ApiVersionConstraintPtrOutput
	ToApiVersionConstraintPtrOutputWithContext(context.Context) ApiVersionConstraintPtrOutput
}

type apiVersionConstraintPtrType ApiVersionConstraintArgs

func ApiVersionConstraintPtr(v *ApiVersionConstraintArgs) ApiVersionConstraintPtrInput {
	return (*apiVersionConstraintPtrType)(v)
}

func (*apiVersionConstraintPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiVersionConstraint)(nil)).Elem()
}

func (i *apiVersionConstraintPtrType) ToApiVersionConstraintPtrOutput() ApiVersionConstraintPtrOutput {
	return i.ToApiVersionConstraintPtrOutputWithContext(context.Background())
}

func (i *apiVersionConstraintPtrType) ToApiVersionConstraintPtrOutputWithContext(ctx context.Context) ApiVersionConstraintPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiVersionConstraintPtrOutput)
}

// Control Plane Apis version constraint for the API Management service.
type ApiVersionConstraintResponse struct {
	// Limit control plane API calls to API Management service with version equal to or newer than this value.
	MinApiVersion *string `pulumi:"minApiVersion"`
}

// Control Plane Apis version constraint for the API Management service.
type ApiVersionConstraintResponseOutput struct{ *pulumi.OutputState }

func (ApiVersionConstraintResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiVersionConstraintResponse)(nil)).Elem()
}

func (o ApiVersionConstraintResponseOutput) ToApiVersionConstraintResponseOutput() ApiVersionConstraintResponseOutput {
	return o
}

func (o ApiVersionConstraintResponseOutput) ToApiVersionConstraintResponseOutputWithContext(ctx context.Context) ApiVersionConstraintResponseOutput {
	return o
}

func (o ApiVersionConstraintResponseOutput) ToApiVersionConstraintResponsePtrOutput() ApiVersionConstraintResponsePtrOutput {
	return o.ToApiVersionConstraintResponsePtrOutputWithContext(context.Background())
}

func (o ApiVersionConstraintResponseOutput) ToApiVersionConstraintResponsePtrOutputWithContext(ctx context.Context) ApiVersionConstraintResponsePtrOutput {
	return o.ApplyT(func(v ApiVersionConstraintResponse) *ApiVersionConstraintResponse {
		return &v
	}).(ApiVersionConstraintResponsePtrOutput)
}

// Limit control plane API calls to API Management service with version equal to or newer than this value.
func (o ApiVersionConstraintResponseOutput) MinApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionConstraintResponse) *string { return v.MinApiVersion }).(pulumi.StringPtrOutput)
}

type ApiVersionConstraintResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiVersionConstraintResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiVersionConstraintResponse)(nil)).Elem()
}

func (o ApiVersionConstraintResponsePtrOutput) ToApiVersionConstraintResponsePtrOutput() ApiVersionConstraintResponsePtrOutput {
	return o
}

func (o ApiVersionConstraintResponsePtrOutput) ToApiVersionConstraintResponsePtrOutputWithContext(ctx context.Context) ApiVersionConstraintResponsePtrOutput {
	return o
}

func (o ApiVersionConstraintResponsePtrOutput) Elem() ApiVersionConstraintResponseOutput {
	return o.ApplyT(func(v *ApiVersionConstraintResponse) ApiVersionConstraintResponse { return *v }).(ApiVersionConstraintResponseOutput)
}

// Limit control plane API calls to API Management service with version equal to or newer than this value.
func (o ApiVersionConstraintResponsePtrOutput) MinApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionConstraintResponse) *string {
		if v == nil {
			return nil
		}
		return v.MinApiVersion
	}).(pulumi.StringPtrOutput)
}

// An API Version Set contains the common configuration for a set of API Versions relating
type ApiVersionSetContractDetails struct {
	// Description of API Version Set.
	Description *string `pulumi:"description"`
	// Identifier for existing API Version Set. Omit this value to create a new Version Set.
	Id *string `pulumi:"id"`
	// The display Name of the API Version Set.
	Name *string `pulumi:"name"`
	// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
	VersionHeaderName *string `pulumi:"versionHeaderName"`
	// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
	VersionQueryName *string `pulumi:"versionQueryName"`
	// An value that determines where the API Version identifer will be located in a HTTP request.
	VersioningScheme *string `pulumi:"versioningScheme"`
}

// ApiVersionSetContractDetailsInput is an input type that accepts ApiVersionSetContractDetailsArgs and ApiVersionSetContractDetailsOutput values.
// You can construct a concrete instance of `ApiVersionSetContractDetailsInput` via:
//
//          ApiVersionSetContractDetailsArgs{...}
type ApiVersionSetContractDetailsInput interface {
	pulumi.Input

	ToApiVersionSetContractDetailsOutput() ApiVersionSetContractDetailsOutput
	ToApiVersionSetContractDetailsOutputWithContext(context.Context) ApiVersionSetContractDetailsOutput
}

// An API Version Set contains the common configuration for a set of API Versions relating
type ApiVersionSetContractDetailsArgs struct {
	// Description of API Version Set.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Identifier for existing API Version Set. Omit this value to create a new Version Set.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The display Name of the API Version Set.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
	VersionHeaderName pulumi.StringPtrInput `pulumi:"versionHeaderName"`
	// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
	VersionQueryName pulumi.StringPtrInput `pulumi:"versionQueryName"`
	// An value that determines where the API Version identifer will be located in a HTTP request.
	VersioningScheme pulumi.StringPtrInput `pulumi:"versioningScheme"`
}

func (ApiVersionSetContractDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiVersionSetContractDetails)(nil)).Elem()
}

func (i ApiVersionSetContractDetailsArgs) ToApiVersionSetContractDetailsOutput() ApiVersionSetContractDetailsOutput {
	return i.ToApiVersionSetContractDetailsOutputWithContext(context.Background())
}

func (i ApiVersionSetContractDetailsArgs) ToApiVersionSetContractDetailsOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiVersionSetContractDetailsOutput)
}

func (i ApiVersionSetContractDetailsArgs) ToApiVersionSetContractDetailsPtrOutput() ApiVersionSetContractDetailsPtrOutput {
	return i.ToApiVersionSetContractDetailsPtrOutputWithContext(context.Background())
}

func (i ApiVersionSetContractDetailsArgs) ToApiVersionSetContractDetailsPtrOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiVersionSetContractDetailsOutput).ToApiVersionSetContractDetailsPtrOutputWithContext(ctx)
}

// ApiVersionSetContractDetailsPtrInput is an input type that accepts ApiVersionSetContractDetailsArgs, ApiVersionSetContractDetailsPtr and ApiVersionSetContractDetailsPtrOutput values.
// You can construct a concrete instance of `ApiVersionSetContractDetailsPtrInput` via:
//
//          ApiVersionSetContractDetailsArgs{...}
//
//  or:
//
//          nil
type ApiVersionSetContractDetailsPtrInput interface {
	pulumi.Input

	ToApiVersionSetContractDetailsPtrOutput() ApiVersionSetContractDetailsPtrOutput
	ToApiVersionSetContractDetailsPtrOutputWithContext(context.Context) ApiVersionSetContractDetailsPtrOutput
}

type apiVersionSetContractDetailsPtrType ApiVersionSetContractDetailsArgs

func ApiVersionSetContractDetailsPtr(v *ApiVersionSetContractDetailsArgs) ApiVersionSetContractDetailsPtrInput {
	return (*apiVersionSetContractDetailsPtrType)(v)
}

func (*apiVersionSetContractDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiVersionSetContractDetails)(nil)).Elem()
}

func (i *apiVersionSetContractDetailsPtrType) ToApiVersionSetContractDetailsPtrOutput() ApiVersionSetContractDetailsPtrOutput {
	return i.ToApiVersionSetContractDetailsPtrOutputWithContext(context.Background())
}

func (i *apiVersionSetContractDetailsPtrType) ToApiVersionSetContractDetailsPtrOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiVersionSetContractDetailsPtrOutput)
}

// An API Version Set contains the common configuration for a set of API Versions relating
type ApiVersionSetContractDetailsResponse struct {
	// Description of API Version Set.
	Description *string `pulumi:"description"`
	// Identifier for existing API Version Set. Omit this value to create a new Version Set.
	Id *string `pulumi:"id"`
	// The display Name of the API Version Set.
	Name *string `pulumi:"name"`
	// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
	VersionHeaderName *string `pulumi:"versionHeaderName"`
	// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
	VersionQueryName *string `pulumi:"versionQueryName"`
	// An value that determines where the API Version identifer will be located in a HTTP request.
	VersioningScheme *string `pulumi:"versioningScheme"`
}

// An API Version Set contains the common configuration for a set of API Versions relating
type ApiVersionSetContractDetailsResponseOutput struct{ *pulumi.OutputState }

func (ApiVersionSetContractDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiVersionSetContractDetailsResponse)(nil)).Elem()
}

func (o ApiVersionSetContractDetailsResponseOutput) ToApiVersionSetContractDetailsResponseOutput() ApiVersionSetContractDetailsResponseOutput {
	return o
}

func (o ApiVersionSetContractDetailsResponseOutput) ToApiVersionSetContractDetailsResponseOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsResponseOutput {
	return o
}

func (o ApiVersionSetContractDetailsResponseOutput) ToApiVersionSetContractDetailsResponsePtrOutput() ApiVersionSetContractDetailsResponsePtrOutput {
	return o.ToApiVersionSetContractDetailsResponsePtrOutputWithContext(context.Background())
}

func (o ApiVersionSetContractDetailsResponseOutput) ToApiVersionSetContractDetailsResponsePtrOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsResponsePtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetailsResponse) *ApiVersionSetContractDetailsResponse {
		return &v
	}).(ApiVersionSetContractDetailsResponsePtrOutput)
}

// Description of API Version Set.
func (o ApiVersionSetContractDetailsResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetailsResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Identifier for existing API Version Set. Omit this value to create a new Version Set.
func (o ApiVersionSetContractDetailsResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetailsResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The display Name of the API Version Set.
func (o ApiVersionSetContractDetailsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetailsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
func (o ApiVersionSetContractDetailsResponseOutput) VersionHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetailsResponse) *string { return v.VersionHeaderName }).(pulumi.StringPtrOutput)
}

// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
func (o ApiVersionSetContractDetailsResponseOutput) VersionQueryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetailsResponse) *string { return v.VersionQueryName }).(pulumi.StringPtrOutput)
}

// An value that determines where the API Version identifer will be located in a HTTP request.
func (o ApiVersionSetContractDetailsResponseOutput) VersioningScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetailsResponse) *string { return v.VersioningScheme }).(pulumi.StringPtrOutput)
}

type ApiVersionSetContractDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiVersionSetContractDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiVersionSetContractDetailsResponse)(nil)).Elem()
}

func (o ApiVersionSetContractDetailsResponsePtrOutput) ToApiVersionSetContractDetailsResponsePtrOutput() ApiVersionSetContractDetailsResponsePtrOutput {
	return o
}

func (o ApiVersionSetContractDetailsResponsePtrOutput) ToApiVersionSetContractDetailsResponsePtrOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsResponsePtrOutput {
	return o
}

func (o ApiVersionSetContractDetailsResponsePtrOutput) Elem() ApiVersionSetContractDetailsResponseOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetailsResponse) ApiVersionSetContractDetailsResponse { return *v }).(ApiVersionSetContractDetailsResponseOutput)
}

// Description of API Version Set.
func (o ApiVersionSetContractDetailsResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Identifier for existing API Version Set. Omit this value to create a new Version Set.
func (o ApiVersionSetContractDetailsResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The display Name of the API Version Set.
func (o ApiVersionSetContractDetailsResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
func (o ApiVersionSetContractDetailsResponsePtrOutput) VersionHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VersionHeaderName
	}).(pulumi.StringPtrOutput)
}

// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
func (o ApiVersionSetContractDetailsResponsePtrOutput) VersionQueryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VersionQueryName
	}).(pulumi.StringPtrOutput)
}

// An value that determines where the API Version identifer will be located in a HTTP request.
func (o ApiVersionSetContractDetailsResponsePtrOutput) VersioningScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VersioningScheme
	}).(pulumi.StringPtrOutput)
}

// API Authentication Settings.
type AuthenticationSettingsContract struct {
	// OAuth2 Authentication settings
	OAuth2 *OAuth2AuthenticationSettingsContract `pulumi:"oAuth2"`
	// OpenID Connect Authentication Settings
	Openid *OpenIdAuthenticationSettingsContract `pulumi:"openid"`
}

// AuthenticationSettingsContractInput is an input type that accepts AuthenticationSettingsContractArgs and AuthenticationSettingsContractOutput values.
// You can construct a concrete instance of `AuthenticationSettingsContractInput` via:
//
//          AuthenticationSettingsContractArgs{...}
type AuthenticationSettingsContractInput interface {
	pulumi.Input

	ToAuthenticationSettingsContractOutput() AuthenticationSettingsContractOutput
	ToAuthenticationSettingsContractOutputWithContext(context.Context) AuthenticationSettingsContractOutput
}

// API Authentication Settings.
type AuthenticationSettingsContractArgs struct {
	// OAuth2 Authentication settings
	OAuth2 OAuth2AuthenticationSettingsContractPtrInput `pulumi:"oAuth2"`
	// OpenID Connect Authentication Settings
	Openid OpenIdAuthenticationSettingsContractPtrInput `pulumi:"openid"`
}

func (AuthenticationSettingsContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationSettingsContract)(nil)).Elem()
}

func (i AuthenticationSettingsContractArgs) ToAuthenticationSettingsContractOutput() AuthenticationSettingsContractOutput {
	return i.ToAuthenticationSettingsContractOutputWithContext(context.Background())
}

func (i AuthenticationSettingsContractArgs) ToAuthenticationSettingsContractOutputWithContext(ctx context.Context) AuthenticationSettingsContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingsContractOutput)
}

func (i AuthenticationSettingsContractArgs) ToAuthenticationSettingsContractPtrOutput() AuthenticationSettingsContractPtrOutput {
	return i.ToAuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (i AuthenticationSettingsContractArgs) ToAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) AuthenticationSettingsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingsContractOutput).ToAuthenticationSettingsContractPtrOutputWithContext(ctx)
}

// AuthenticationSettingsContractPtrInput is an input type that accepts AuthenticationSettingsContractArgs, AuthenticationSettingsContractPtr and AuthenticationSettingsContractPtrOutput values.
// You can construct a concrete instance of `AuthenticationSettingsContractPtrInput` via:
//
//          AuthenticationSettingsContractArgs{...}
//
//  or:
//
//          nil
type AuthenticationSettingsContractPtrInput interface {
	pulumi.Input

	ToAuthenticationSettingsContractPtrOutput() AuthenticationSettingsContractPtrOutput
	ToAuthenticationSettingsContractPtrOutputWithContext(context.Context) AuthenticationSettingsContractPtrOutput
}

type authenticationSettingsContractPtrType AuthenticationSettingsContractArgs

func AuthenticationSettingsContractPtr(v *AuthenticationSettingsContractArgs) AuthenticationSettingsContractPtrInput {
	return (*authenticationSettingsContractPtrType)(v)
}

func (*authenticationSettingsContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationSettingsContract)(nil)).Elem()
}

func (i *authenticationSettingsContractPtrType) ToAuthenticationSettingsContractPtrOutput() AuthenticationSettingsContractPtrOutput {
	return i.ToAuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (i *authenticationSettingsContractPtrType) ToAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) AuthenticationSettingsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingsContractPtrOutput)
}

// API Authentication Settings.
type AuthenticationSettingsContractResponse struct {
	// OAuth2 Authentication settings
	OAuth2 *OAuth2AuthenticationSettingsContractResponse `pulumi:"oAuth2"`
	// OpenID Connect Authentication Settings
	Openid *OpenIdAuthenticationSettingsContractResponse `pulumi:"openid"`
}

// API Authentication Settings.
type AuthenticationSettingsContractResponseOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingsContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationSettingsContractResponse)(nil)).Elem()
}

func (o AuthenticationSettingsContractResponseOutput) ToAuthenticationSettingsContractResponseOutput() AuthenticationSettingsContractResponseOutput {
	return o
}

func (o AuthenticationSettingsContractResponseOutput) ToAuthenticationSettingsContractResponseOutputWithContext(ctx context.Context) AuthenticationSettingsContractResponseOutput {
	return o
}

func (o AuthenticationSettingsContractResponseOutput) ToAuthenticationSettingsContractResponsePtrOutput() AuthenticationSettingsContractResponsePtrOutput {
	return o.ToAuthenticationSettingsContractResponsePtrOutputWithContext(context.Background())
}

func (o AuthenticationSettingsContractResponseOutput) ToAuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) AuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v AuthenticationSettingsContractResponse) *AuthenticationSettingsContractResponse {
		return &v
	}).(AuthenticationSettingsContractResponsePtrOutput)
}

// OAuth2 Authentication settings
func (o AuthenticationSettingsContractResponseOutput) OAuth2() OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v AuthenticationSettingsContractResponse) *OAuth2AuthenticationSettingsContractResponse {
		return v.OAuth2
	}).(OAuth2AuthenticationSettingsContractResponsePtrOutput)
}

// OpenID Connect Authentication Settings
func (o AuthenticationSettingsContractResponseOutput) Openid() OpenIdAuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v AuthenticationSettingsContractResponse) *OpenIdAuthenticationSettingsContractResponse {
		return v.Openid
	}).(OpenIdAuthenticationSettingsContractResponsePtrOutput)
}

type AuthenticationSettingsContractResponsePtrOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingsContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationSettingsContractResponse)(nil)).Elem()
}

func (o AuthenticationSettingsContractResponsePtrOutput) ToAuthenticationSettingsContractResponsePtrOutput() AuthenticationSettingsContractResponsePtrOutput {
	return o
}

func (o AuthenticationSettingsContractResponsePtrOutput) ToAuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) AuthenticationSettingsContractResponsePtrOutput {
	return o
}

func (o AuthenticationSettingsContractResponsePtrOutput) Elem() AuthenticationSettingsContractResponseOutput {
	return o.ApplyT(func(v *AuthenticationSettingsContractResponse) AuthenticationSettingsContractResponse { return *v }).(AuthenticationSettingsContractResponseOutput)
}

// OAuth2 Authentication settings
func (o AuthenticationSettingsContractResponsePtrOutput) OAuth2() OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v *AuthenticationSettingsContractResponse) *OAuth2AuthenticationSettingsContractResponse {
		if v == nil {
			return nil
		}
		return v.OAuth2
	}).(OAuth2AuthenticationSettingsContractResponsePtrOutput)
}

// OpenID Connect Authentication Settings
func (o AuthenticationSettingsContractResponsePtrOutput) Openid() OpenIdAuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v *AuthenticationSettingsContractResponse) *OpenIdAuthenticationSettingsContractResponse {
		if v == nil {
			return nil
		}
		return v.Openid
	}).(OpenIdAuthenticationSettingsContractResponsePtrOutput)
}

// Authorization header information.
type BackendAuthorizationHeaderCredentials struct {
	// Authentication Parameter value.
	Parameter string `pulumi:"parameter"`
	// Authentication Scheme name.
	Scheme string `pulumi:"scheme"`
}

// BackendAuthorizationHeaderCredentialsInput is an input type that accepts BackendAuthorizationHeaderCredentialsArgs and BackendAuthorizationHeaderCredentialsOutput values.
// You can construct a concrete instance of `BackendAuthorizationHeaderCredentialsInput` via:
//
//          BackendAuthorizationHeaderCredentialsArgs{...}
type BackendAuthorizationHeaderCredentialsInput interface {
	pulumi.Input

	ToBackendAuthorizationHeaderCredentialsOutput() BackendAuthorizationHeaderCredentialsOutput
	ToBackendAuthorizationHeaderCredentialsOutputWithContext(context.Context) BackendAuthorizationHeaderCredentialsOutput
}

// Authorization header information.
type BackendAuthorizationHeaderCredentialsArgs struct {
	// Authentication Parameter value.
	Parameter pulumi.StringInput `pulumi:"parameter"`
	// Authentication Scheme name.
	Scheme pulumi.StringInput `pulumi:"scheme"`
}

func (BackendAuthorizationHeaderCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAuthorizationHeaderCredentials)(nil)).Elem()
}

func (i BackendAuthorizationHeaderCredentialsArgs) ToBackendAuthorizationHeaderCredentialsOutput() BackendAuthorizationHeaderCredentialsOutput {
	return i.ToBackendAuthorizationHeaderCredentialsOutputWithContext(context.Background())
}

func (i BackendAuthorizationHeaderCredentialsArgs) ToBackendAuthorizationHeaderCredentialsOutputWithContext(ctx context.Context) BackendAuthorizationHeaderCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAuthorizationHeaderCredentialsOutput)
}

func (i BackendAuthorizationHeaderCredentialsArgs) ToBackendAuthorizationHeaderCredentialsPtrOutput() BackendAuthorizationHeaderCredentialsPtrOutput {
	return i.ToBackendAuthorizationHeaderCredentialsPtrOutputWithContext(context.Background())
}

func (i BackendAuthorizationHeaderCredentialsArgs) ToBackendAuthorizationHeaderCredentialsPtrOutputWithContext(ctx context.Context) BackendAuthorizationHeaderCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAuthorizationHeaderCredentialsOutput).ToBackendAuthorizationHeaderCredentialsPtrOutputWithContext(ctx)
}

// BackendAuthorizationHeaderCredentialsPtrInput is an input type that accepts BackendAuthorizationHeaderCredentialsArgs, BackendAuthorizationHeaderCredentialsPtr and BackendAuthorizationHeaderCredentialsPtrOutput values.
// You can construct a concrete instance of `BackendAuthorizationHeaderCredentialsPtrInput` via:
//
//          BackendAuthorizationHeaderCredentialsArgs{...}
//
//  or:
//
//          nil
type BackendAuthorizationHeaderCredentialsPtrInput interface {
	pulumi.Input

	ToBackendAuthorizationHeaderCredentialsPtrOutput() BackendAuthorizationHeaderCredentialsPtrOutput
	ToBackendAuthorizationHeaderCredentialsPtrOutputWithContext(context.Context) BackendAuthorizationHeaderCredentialsPtrOutput
}

type backendAuthorizationHeaderCredentialsPtrType BackendAuthorizationHeaderCredentialsArgs

func BackendAuthorizationHeaderCredentialsPtr(v *BackendAuthorizationHeaderCredentialsArgs) BackendAuthorizationHeaderCredentialsPtrInput {
	return (*backendAuthorizationHeaderCredentialsPtrType)(v)
}

func (*backendAuthorizationHeaderCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendAuthorizationHeaderCredentials)(nil)).Elem()
}

func (i *backendAuthorizationHeaderCredentialsPtrType) ToBackendAuthorizationHeaderCredentialsPtrOutput() BackendAuthorizationHeaderCredentialsPtrOutput {
	return i.ToBackendAuthorizationHeaderCredentialsPtrOutputWithContext(context.Background())
}

func (i *backendAuthorizationHeaderCredentialsPtrType) ToBackendAuthorizationHeaderCredentialsPtrOutputWithContext(ctx context.Context) BackendAuthorizationHeaderCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAuthorizationHeaderCredentialsPtrOutput)
}

// Authorization header information.
type BackendAuthorizationHeaderCredentialsResponse struct {
	// Authentication Parameter value.
	Parameter string `pulumi:"parameter"`
	// Authentication Scheme name.
	Scheme string `pulumi:"scheme"`
}

// Authorization header information.
type BackendAuthorizationHeaderCredentialsResponseOutput struct{ *pulumi.OutputState }

func (BackendAuthorizationHeaderCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAuthorizationHeaderCredentialsResponse)(nil)).Elem()
}

func (o BackendAuthorizationHeaderCredentialsResponseOutput) ToBackendAuthorizationHeaderCredentialsResponseOutput() BackendAuthorizationHeaderCredentialsResponseOutput {
	return o
}

func (o BackendAuthorizationHeaderCredentialsResponseOutput) ToBackendAuthorizationHeaderCredentialsResponseOutputWithContext(ctx context.Context) BackendAuthorizationHeaderCredentialsResponseOutput {
	return o
}

func (o BackendAuthorizationHeaderCredentialsResponseOutput) ToBackendAuthorizationHeaderCredentialsResponsePtrOutput() BackendAuthorizationHeaderCredentialsResponsePtrOutput {
	return o.ToBackendAuthorizationHeaderCredentialsResponsePtrOutputWithContext(context.Background())
}

func (o BackendAuthorizationHeaderCredentialsResponseOutput) ToBackendAuthorizationHeaderCredentialsResponsePtrOutputWithContext(ctx context.Context) BackendAuthorizationHeaderCredentialsResponsePtrOutput {
	return o.ApplyT(func(v BackendAuthorizationHeaderCredentialsResponse) *BackendAuthorizationHeaderCredentialsResponse {
		return &v
	}).(BackendAuthorizationHeaderCredentialsResponsePtrOutput)
}

// Authentication Parameter value.
func (o BackendAuthorizationHeaderCredentialsResponseOutput) Parameter() pulumi.StringOutput {
	return o.ApplyT(func(v BackendAuthorizationHeaderCredentialsResponse) string { return v.Parameter }).(pulumi.StringOutput)
}

// Authentication Scheme name.
func (o BackendAuthorizationHeaderCredentialsResponseOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v BackendAuthorizationHeaderCredentialsResponse) string { return v.Scheme }).(pulumi.StringOutput)
}

type BackendAuthorizationHeaderCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (BackendAuthorizationHeaderCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendAuthorizationHeaderCredentialsResponse)(nil)).Elem()
}

func (o BackendAuthorizationHeaderCredentialsResponsePtrOutput) ToBackendAuthorizationHeaderCredentialsResponsePtrOutput() BackendAuthorizationHeaderCredentialsResponsePtrOutput {
	return o
}

func (o BackendAuthorizationHeaderCredentialsResponsePtrOutput) ToBackendAuthorizationHeaderCredentialsResponsePtrOutputWithContext(ctx context.Context) BackendAuthorizationHeaderCredentialsResponsePtrOutput {
	return o
}

func (o BackendAuthorizationHeaderCredentialsResponsePtrOutput) Elem() BackendAuthorizationHeaderCredentialsResponseOutput {
	return o.ApplyT(func(v *BackendAuthorizationHeaderCredentialsResponse) BackendAuthorizationHeaderCredentialsResponse {
		return *v
	}).(BackendAuthorizationHeaderCredentialsResponseOutput)
}

// Authentication Parameter value.
func (o BackendAuthorizationHeaderCredentialsResponsePtrOutput) Parameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendAuthorizationHeaderCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Parameter
	}).(pulumi.StringPtrOutput)
}

// Authentication Scheme name.
func (o BackendAuthorizationHeaderCredentialsResponsePtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendAuthorizationHeaderCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Scheme
	}).(pulumi.StringPtrOutput)
}

// Details of the Credentials used to connect to Backend.
type BackendCredentialsContract struct {
	// Authorization header authentication
	Authorization *BackendAuthorizationHeaderCredentials `pulumi:"authorization"`
	// List of Client Certificate Thumbprint.
	Certificate []string `pulumi:"certificate"`
	// Header Parameter description.
	Header map[string][]string `pulumi:"header"`
	// Query Parameter description.
	Query map[string][]string `pulumi:"query"`
}

// BackendCredentialsContractInput is an input type that accepts BackendCredentialsContractArgs and BackendCredentialsContractOutput values.
// You can construct a concrete instance of `BackendCredentialsContractInput` via:
//
//          BackendCredentialsContractArgs{...}
type BackendCredentialsContractInput interface {
	pulumi.Input

	ToBackendCredentialsContractOutput() BackendCredentialsContractOutput
	ToBackendCredentialsContractOutputWithContext(context.Context) BackendCredentialsContractOutput
}

// Details of the Credentials used to connect to Backend.
type BackendCredentialsContractArgs struct {
	// Authorization header authentication
	Authorization BackendAuthorizationHeaderCredentialsPtrInput `pulumi:"authorization"`
	// List of Client Certificate Thumbprint.
	Certificate pulumi.StringArrayInput `pulumi:"certificate"`
	// Header Parameter description.
	Header pulumi.StringArrayMapInput `pulumi:"header"`
	// Query Parameter description.
	Query pulumi.StringArrayMapInput `pulumi:"query"`
}

func (BackendCredentialsContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendCredentialsContract)(nil)).Elem()
}

func (i BackendCredentialsContractArgs) ToBackendCredentialsContractOutput() BackendCredentialsContractOutput {
	return i.ToBackendCredentialsContractOutputWithContext(context.Background())
}

func (i BackendCredentialsContractArgs) ToBackendCredentialsContractOutputWithContext(ctx context.Context) BackendCredentialsContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendCredentialsContractOutput)
}

func (i BackendCredentialsContractArgs) ToBackendCredentialsContractPtrOutput() BackendCredentialsContractPtrOutput {
	return i.ToBackendCredentialsContractPtrOutputWithContext(context.Background())
}

func (i BackendCredentialsContractArgs) ToBackendCredentialsContractPtrOutputWithContext(ctx context.Context) BackendCredentialsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendCredentialsContractOutput).ToBackendCredentialsContractPtrOutputWithContext(ctx)
}

// BackendCredentialsContractPtrInput is an input type that accepts BackendCredentialsContractArgs, BackendCredentialsContractPtr and BackendCredentialsContractPtrOutput values.
// You can construct a concrete instance of `BackendCredentialsContractPtrInput` via:
//
//          BackendCredentialsContractArgs{...}
//
//  or:
//
//          nil
type BackendCredentialsContractPtrInput interface {
	pulumi.Input

	ToBackendCredentialsContractPtrOutput() BackendCredentialsContractPtrOutput
	ToBackendCredentialsContractPtrOutputWithContext(context.Context) BackendCredentialsContractPtrOutput
}

type backendCredentialsContractPtrType BackendCredentialsContractArgs

func BackendCredentialsContractPtr(v *BackendCredentialsContractArgs) BackendCredentialsContractPtrInput {
	return (*backendCredentialsContractPtrType)(v)
}

func (*backendCredentialsContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendCredentialsContract)(nil)).Elem()
}

func (i *backendCredentialsContractPtrType) ToBackendCredentialsContractPtrOutput() BackendCredentialsContractPtrOutput {
	return i.ToBackendCredentialsContractPtrOutputWithContext(context.Background())
}

func (i *backendCredentialsContractPtrType) ToBackendCredentialsContractPtrOutputWithContext(ctx context.Context) BackendCredentialsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendCredentialsContractPtrOutput)
}

// Details of the Credentials used to connect to Backend.
type BackendCredentialsContractResponse struct {
	// Authorization header authentication
	Authorization *BackendAuthorizationHeaderCredentialsResponse `pulumi:"authorization"`
	// List of Client Certificate Thumbprint.
	Certificate []string `pulumi:"certificate"`
	// Header Parameter description.
	Header map[string][]string `pulumi:"header"`
	// Query Parameter description.
	Query map[string][]string `pulumi:"query"`
}

// Details of the Credentials used to connect to Backend.
type BackendCredentialsContractResponseOutput struct{ *pulumi.OutputState }

func (BackendCredentialsContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendCredentialsContractResponse)(nil)).Elem()
}

func (o BackendCredentialsContractResponseOutput) ToBackendCredentialsContractResponseOutput() BackendCredentialsContractResponseOutput {
	return o
}

func (o BackendCredentialsContractResponseOutput) ToBackendCredentialsContractResponseOutputWithContext(ctx context.Context) BackendCredentialsContractResponseOutput {
	return o
}

func (o BackendCredentialsContractResponseOutput) ToBackendCredentialsContractResponsePtrOutput() BackendCredentialsContractResponsePtrOutput {
	return o.ToBackendCredentialsContractResponsePtrOutputWithContext(context.Background())
}

func (o BackendCredentialsContractResponseOutput) ToBackendCredentialsContractResponsePtrOutputWithContext(ctx context.Context) BackendCredentialsContractResponsePtrOutput {
	return o.ApplyT(func(v BackendCredentialsContractResponse) *BackendCredentialsContractResponse {
		return &v
	}).(BackendCredentialsContractResponsePtrOutput)
}

// Authorization header authentication
func (o BackendCredentialsContractResponseOutput) Authorization() BackendAuthorizationHeaderCredentialsResponsePtrOutput {
	return o.ApplyT(func(v BackendCredentialsContractResponse) *BackendAuthorizationHeaderCredentialsResponse {
		return v.Authorization
	}).(BackendAuthorizationHeaderCredentialsResponsePtrOutput)
}

// List of Client Certificate Thumbprint.
func (o BackendCredentialsContractResponseOutput) Certificate() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackendCredentialsContractResponse) []string { return v.Certificate }).(pulumi.StringArrayOutput)
}

// Header Parameter description.
func (o BackendCredentialsContractResponseOutput) Header() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v BackendCredentialsContractResponse) map[string][]string { return v.Header }).(pulumi.StringArrayMapOutput)
}

// Query Parameter description.
func (o BackendCredentialsContractResponseOutput) Query() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v BackendCredentialsContractResponse) map[string][]string { return v.Query }).(pulumi.StringArrayMapOutput)
}

type BackendCredentialsContractResponsePtrOutput struct{ *pulumi.OutputState }

func (BackendCredentialsContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendCredentialsContractResponse)(nil)).Elem()
}

func (o BackendCredentialsContractResponsePtrOutput) ToBackendCredentialsContractResponsePtrOutput() BackendCredentialsContractResponsePtrOutput {
	return o
}

func (o BackendCredentialsContractResponsePtrOutput) ToBackendCredentialsContractResponsePtrOutputWithContext(ctx context.Context) BackendCredentialsContractResponsePtrOutput {
	return o
}

func (o BackendCredentialsContractResponsePtrOutput) Elem() BackendCredentialsContractResponseOutput {
	return o.ApplyT(func(v *BackendCredentialsContractResponse) BackendCredentialsContractResponse { return *v }).(BackendCredentialsContractResponseOutput)
}

// Authorization header authentication
func (o BackendCredentialsContractResponsePtrOutput) Authorization() BackendAuthorizationHeaderCredentialsResponsePtrOutput {
	return o.ApplyT(func(v *BackendCredentialsContractResponse) *BackendAuthorizationHeaderCredentialsResponse {
		if v == nil {
			return nil
		}
		return v.Authorization
	}).(BackendAuthorizationHeaderCredentialsResponsePtrOutput)
}

// List of Client Certificate Thumbprint.
func (o BackendCredentialsContractResponsePtrOutput) Certificate() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackendCredentialsContractResponse) []string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringArrayOutput)
}

// Header Parameter description.
func (o BackendCredentialsContractResponsePtrOutput) Header() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v *BackendCredentialsContractResponse) map[string][]string {
		if v == nil {
			return nil
		}
		return v.Header
	}).(pulumi.StringArrayMapOutput)
}

// Query Parameter description.
func (o BackendCredentialsContractResponsePtrOutput) Query() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v *BackendCredentialsContractResponse) map[string][]string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringArrayMapOutput)
}

// Properties specific to the Backend Type.
type BackendProperties struct {
	// Backend Service Fabric Cluster Properties
	ServiceFabricCluster *BackendServiceFabricClusterProperties `pulumi:"serviceFabricCluster"`
}

// BackendPropertiesInput is an input type that accepts BackendPropertiesArgs and BackendPropertiesOutput values.
// You can construct a concrete instance of `BackendPropertiesInput` via:
//
//          BackendPropertiesArgs{...}
type BackendPropertiesInput interface {
	pulumi.Input

	ToBackendPropertiesOutput() BackendPropertiesOutput
	ToBackendPropertiesOutputWithContext(context.Context) BackendPropertiesOutput
}

// Properties specific to the Backend Type.
type BackendPropertiesArgs struct {
	// Backend Service Fabric Cluster Properties
	ServiceFabricCluster BackendServiceFabricClusterPropertiesPtrInput `pulumi:"serviceFabricCluster"`
}

func (BackendPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendProperties)(nil)).Elem()
}

func (i BackendPropertiesArgs) ToBackendPropertiesOutput() BackendPropertiesOutput {
	return i.ToBackendPropertiesOutputWithContext(context.Background())
}

func (i BackendPropertiesArgs) ToBackendPropertiesOutputWithContext(ctx context.Context) BackendPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPropertiesOutput)
}

func (i BackendPropertiesArgs) ToBackendPropertiesPtrOutput() BackendPropertiesPtrOutput {
	return i.ToBackendPropertiesPtrOutputWithContext(context.Background())
}

func (i BackendPropertiesArgs) ToBackendPropertiesPtrOutputWithContext(ctx context.Context) BackendPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPropertiesOutput).ToBackendPropertiesPtrOutputWithContext(ctx)
}

// BackendPropertiesPtrInput is an input type that accepts BackendPropertiesArgs, BackendPropertiesPtr and BackendPropertiesPtrOutput values.
// You can construct a concrete instance of `BackendPropertiesPtrInput` via:
//
//          BackendPropertiesArgs{...}
//
//  or:
//
//          nil
type BackendPropertiesPtrInput interface {
	pulumi.Input

	ToBackendPropertiesPtrOutput() BackendPropertiesPtrOutput
	ToBackendPropertiesPtrOutputWithContext(context.Context) BackendPropertiesPtrOutput
}

type backendPropertiesPtrType BackendPropertiesArgs

func BackendPropertiesPtr(v *BackendPropertiesArgs) BackendPropertiesPtrInput {
	return (*backendPropertiesPtrType)(v)
}

func (*backendPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendProperties)(nil)).Elem()
}

func (i *backendPropertiesPtrType) ToBackendPropertiesPtrOutput() BackendPropertiesPtrOutput {
	return i.ToBackendPropertiesPtrOutputWithContext(context.Background())
}

func (i *backendPropertiesPtrType) ToBackendPropertiesPtrOutputWithContext(ctx context.Context) BackendPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPropertiesPtrOutput)
}

// Properties specific to the Backend Type.
type BackendPropertiesResponse struct {
	// Backend Service Fabric Cluster Properties
	ServiceFabricCluster *BackendServiceFabricClusterPropertiesResponse `pulumi:"serviceFabricCluster"`
}

// Properties specific to the Backend Type.
type BackendPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BackendPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendPropertiesResponse)(nil)).Elem()
}

func (o BackendPropertiesResponseOutput) ToBackendPropertiesResponseOutput() BackendPropertiesResponseOutput {
	return o
}

func (o BackendPropertiesResponseOutput) ToBackendPropertiesResponseOutputWithContext(ctx context.Context) BackendPropertiesResponseOutput {
	return o
}

func (o BackendPropertiesResponseOutput) ToBackendPropertiesResponsePtrOutput() BackendPropertiesResponsePtrOutput {
	return o.ToBackendPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o BackendPropertiesResponseOutput) ToBackendPropertiesResponsePtrOutputWithContext(ctx context.Context) BackendPropertiesResponsePtrOutput {
	return o.ApplyT(func(v BackendPropertiesResponse) *BackendPropertiesResponse {
		return &v
	}).(BackendPropertiesResponsePtrOutput)
}

// Backend Service Fabric Cluster Properties
func (o BackendPropertiesResponseOutput) ServiceFabricCluster() BackendServiceFabricClusterPropertiesResponsePtrOutput {
	return o.ApplyT(func(v BackendPropertiesResponse) *BackendServiceFabricClusterPropertiesResponse {
		return v.ServiceFabricCluster
	}).(BackendServiceFabricClusterPropertiesResponsePtrOutput)
}

type BackendPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (BackendPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendPropertiesResponse)(nil)).Elem()
}

func (o BackendPropertiesResponsePtrOutput) ToBackendPropertiesResponsePtrOutput() BackendPropertiesResponsePtrOutput {
	return o
}

func (o BackendPropertiesResponsePtrOutput) ToBackendPropertiesResponsePtrOutputWithContext(ctx context.Context) BackendPropertiesResponsePtrOutput {
	return o
}

func (o BackendPropertiesResponsePtrOutput) Elem() BackendPropertiesResponseOutput {
	return o.ApplyT(func(v *BackendPropertiesResponse) BackendPropertiesResponse { return *v }).(BackendPropertiesResponseOutput)
}

// Backend Service Fabric Cluster Properties
func (o BackendPropertiesResponsePtrOutput) ServiceFabricCluster() BackendServiceFabricClusterPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *BackendPropertiesResponse) *BackendServiceFabricClusterPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.ServiceFabricCluster
	}).(BackendServiceFabricClusterPropertiesResponsePtrOutput)
}

// Details of the Backend WebProxy Server to use in the Request to Backend.
type BackendProxyContract struct {
	// Password to connect to the WebProxy Server
	Password *string `pulumi:"password"`
	// WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.
	Url string `pulumi:"url"`
	// Username to connect to the WebProxy server
	Username *string `pulumi:"username"`
}

// BackendProxyContractInput is an input type that accepts BackendProxyContractArgs and BackendProxyContractOutput values.
// You can construct a concrete instance of `BackendProxyContractInput` via:
//
//          BackendProxyContractArgs{...}
type BackendProxyContractInput interface {
	pulumi.Input

	ToBackendProxyContractOutput() BackendProxyContractOutput
	ToBackendProxyContractOutputWithContext(context.Context) BackendProxyContractOutput
}

// Details of the Backend WebProxy Server to use in the Request to Backend.
type BackendProxyContractArgs struct {
	// Password to connect to the WebProxy Server
	Password pulumi.StringPtrInput `pulumi:"password"`
	// WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.
	Url pulumi.StringInput `pulumi:"url"`
	// Username to connect to the WebProxy server
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (BackendProxyContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendProxyContract)(nil)).Elem()
}

func (i BackendProxyContractArgs) ToBackendProxyContractOutput() BackendProxyContractOutput {
	return i.ToBackendProxyContractOutputWithContext(context.Background())
}

func (i BackendProxyContractArgs) ToBackendProxyContractOutputWithContext(ctx context.Context) BackendProxyContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendProxyContractOutput)
}

func (i BackendProxyContractArgs) ToBackendProxyContractPtrOutput() BackendProxyContractPtrOutput {
	return i.ToBackendProxyContractPtrOutputWithContext(context.Background())
}

func (i BackendProxyContractArgs) ToBackendProxyContractPtrOutputWithContext(ctx context.Context) BackendProxyContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendProxyContractOutput).ToBackendProxyContractPtrOutputWithContext(ctx)
}

// BackendProxyContractPtrInput is an input type that accepts BackendProxyContractArgs, BackendProxyContractPtr and BackendProxyContractPtrOutput values.
// You can construct a concrete instance of `BackendProxyContractPtrInput` via:
//
//          BackendProxyContractArgs{...}
//
//  or:
//
//          nil
type BackendProxyContractPtrInput interface {
	pulumi.Input

	ToBackendProxyContractPtrOutput() BackendProxyContractPtrOutput
	ToBackendProxyContractPtrOutputWithContext(context.Context) BackendProxyContractPtrOutput
}

type backendProxyContractPtrType BackendProxyContractArgs

func BackendProxyContractPtr(v *BackendProxyContractArgs) BackendProxyContractPtrInput {
	return (*backendProxyContractPtrType)(v)
}

func (*backendProxyContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendProxyContract)(nil)).Elem()
}

func (i *backendProxyContractPtrType) ToBackendProxyContractPtrOutput() BackendProxyContractPtrOutput {
	return i.ToBackendProxyContractPtrOutputWithContext(context.Background())
}

func (i *backendProxyContractPtrType) ToBackendProxyContractPtrOutputWithContext(ctx context.Context) BackendProxyContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendProxyContractPtrOutput)
}

// Details of the Backend WebProxy Server to use in the Request to Backend.
type BackendProxyContractResponse struct {
	// Password to connect to the WebProxy Server
	Password *string `pulumi:"password"`
	// WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.
	Url string `pulumi:"url"`
	// Username to connect to the WebProxy server
	Username *string `pulumi:"username"`
}

// Details of the Backend WebProxy Server to use in the Request to Backend.
type BackendProxyContractResponseOutput struct{ *pulumi.OutputState }

func (BackendProxyContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendProxyContractResponse)(nil)).Elem()
}

func (o BackendProxyContractResponseOutput) ToBackendProxyContractResponseOutput() BackendProxyContractResponseOutput {
	return o
}

func (o BackendProxyContractResponseOutput) ToBackendProxyContractResponseOutputWithContext(ctx context.Context) BackendProxyContractResponseOutput {
	return o
}

func (o BackendProxyContractResponseOutput) ToBackendProxyContractResponsePtrOutput() BackendProxyContractResponsePtrOutput {
	return o.ToBackendProxyContractResponsePtrOutputWithContext(context.Background())
}

func (o BackendProxyContractResponseOutput) ToBackendProxyContractResponsePtrOutputWithContext(ctx context.Context) BackendProxyContractResponsePtrOutput {
	return o.ApplyT(func(v BackendProxyContractResponse) *BackendProxyContractResponse {
		return &v
	}).(BackendProxyContractResponsePtrOutput)
}

// Password to connect to the WebProxy Server
func (o BackendProxyContractResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendProxyContractResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.
func (o BackendProxyContractResponseOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v BackendProxyContractResponse) string { return v.Url }).(pulumi.StringOutput)
}

// Username to connect to the WebProxy server
func (o BackendProxyContractResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendProxyContractResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type BackendProxyContractResponsePtrOutput struct{ *pulumi.OutputState }

func (BackendProxyContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendProxyContractResponse)(nil)).Elem()
}

func (o BackendProxyContractResponsePtrOutput) ToBackendProxyContractResponsePtrOutput() BackendProxyContractResponsePtrOutput {
	return o
}

func (o BackendProxyContractResponsePtrOutput) ToBackendProxyContractResponsePtrOutputWithContext(ctx context.Context) BackendProxyContractResponsePtrOutput {
	return o
}

func (o BackendProxyContractResponsePtrOutput) Elem() BackendProxyContractResponseOutput {
	return o.ApplyT(func(v *BackendProxyContractResponse) BackendProxyContractResponse { return *v }).(BackendProxyContractResponseOutput)
}

// Password to connect to the WebProxy Server
func (o BackendProxyContractResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendProxyContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.
func (o BackendProxyContractResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendProxyContractResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// Username to connect to the WebProxy server
func (o BackendProxyContractResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendProxyContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Properties of the Service Fabric Type Backend.
type BackendServiceFabricClusterProperties struct {
	// The client certificate thumbprint for the management endpoint.
	ClientCertificatethumbprint string `pulumi:"clientCertificatethumbprint"`
	// The cluster management endpoint.
	ManagementEndpoints []string `pulumi:"managementEndpoints"`
	// Maximum number of retries while attempting resolve the partition.
	MaxPartitionResolutionRetries *int `pulumi:"maxPartitionResolutionRetries"`
	// Thumbprints of certificates cluster management service uses for tls communication
	ServerCertificateThumbprints []string `pulumi:"serverCertificateThumbprints"`
	// Server X509 Certificate Names Collection
	ServerX509Names []X509CertificateName `pulumi:"serverX509Names"`
}

// BackendServiceFabricClusterPropertiesInput is an input type that accepts BackendServiceFabricClusterPropertiesArgs and BackendServiceFabricClusterPropertiesOutput values.
// You can construct a concrete instance of `BackendServiceFabricClusterPropertiesInput` via:
//
//          BackendServiceFabricClusterPropertiesArgs{...}
type BackendServiceFabricClusterPropertiesInput interface {
	pulumi.Input

	ToBackendServiceFabricClusterPropertiesOutput() BackendServiceFabricClusterPropertiesOutput
	ToBackendServiceFabricClusterPropertiesOutputWithContext(context.Context) BackendServiceFabricClusterPropertiesOutput
}

// Properties of the Service Fabric Type Backend.
type BackendServiceFabricClusterPropertiesArgs struct {
	// The client certificate thumbprint for the management endpoint.
	ClientCertificatethumbprint pulumi.StringInput `pulumi:"clientCertificatethumbprint"`
	// The cluster management endpoint.
	ManagementEndpoints pulumi.StringArrayInput `pulumi:"managementEndpoints"`
	// Maximum number of retries while attempting resolve the partition.
	MaxPartitionResolutionRetries pulumi.IntPtrInput `pulumi:"maxPartitionResolutionRetries"`
	// Thumbprints of certificates cluster management service uses for tls communication
	ServerCertificateThumbprints pulumi.StringArrayInput `pulumi:"serverCertificateThumbprints"`
	// Server X509 Certificate Names Collection
	ServerX509Names X509CertificateNameArrayInput `pulumi:"serverX509Names"`
}

func (BackendServiceFabricClusterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceFabricClusterProperties)(nil)).Elem()
}

func (i BackendServiceFabricClusterPropertiesArgs) ToBackendServiceFabricClusterPropertiesOutput() BackendServiceFabricClusterPropertiesOutput {
	return i.ToBackendServiceFabricClusterPropertiesOutputWithContext(context.Background())
}

func (i BackendServiceFabricClusterPropertiesArgs) ToBackendServiceFabricClusterPropertiesOutputWithContext(ctx context.Context) BackendServiceFabricClusterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServiceFabricClusterPropertiesOutput)
}

func (i BackendServiceFabricClusterPropertiesArgs) ToBackendServiceFabricClusterPropertiesPtrOutput() BackendServiceFabricClusterPropertiesPtrOutput {
	return i.ToBackendServiceFabricClusterPropertiesPtrOutputWithContext(context.Background())
}

func (i BackendServiceFabricClusterPropertiesArgs) ToBackendServiceFabricClusterPropertiesPtrOutputWithContext(ctx context.Context) BackendServiceFabricClusterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServiceFabricClusterPropertiesOutput).ToBackendServiceFabricClusterPropertiesPtrOutputWithContext(ctx)
}

// BackendServiceFabricClusterPropertiesPtrInput is an input type that accepts BackendServiceFabricClusterPropertiesArgs, BackendServiceFabricClusterPropertiesPtr and BackendServiceFabricClusterPropertiesPtrOutput values.
// You can construct a concrete instance of `BackendServiceFabricClusterPropertiesPtrInput` via:
//
//          BackendServiceFabricClusterPropertiesArgs{...}
//
//  or:
//
//          nil
type BackendServiceFabricClusterPropertiesPtrInput interface {
	pulumi.Input

	ToBackendServiceFabricClusterPropertiesPtrOutput() BackendServiceFabricClusterPropertiesPtrOutput
	ToBackendServiceFabricClusterPropertiesPtrOutputWithContext(context.Context) BackendServiceFabricClusterPropertiesPtrOutput
}

type backendServiceFabricClusterPropertiesPtrType BackendServiceFabricClusterPropertiesArgs

func BackendServiceFabricClusterPropertiesPtr(v *BackendServiceFabricClusterPropertiesArgs) BackendServiceFabricClusterPropertiesPtrInput {
	return (*backendServiceFabricClusterPropertiesPtrType)(v)
}

func (*backendServiceFabricClusterPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendServiceFabricClusterProperties)(nil)).Elem()
}

func (i *backendServiceFabricClusterPropertiesPtrType) ToBackendServiceFabricClusterPropertiesPtrOutput() BackendServiceFabricClusterPropertiesPtrOutput {
	return i.ToBackendServiceFabricClusterPropertiesPtrOutputWithContext(context.Background())
}

func (i *backendServiceFabricClusterPropertiesPtrType) ToBackendServiceFabricClusterPropertiesPtrOutputWithContext(ctx context.Context) BackendServiceFabricClusterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServiceFabricClusterPropertiesPtrOutput)
}

// Properties of the Service Fabric Type Backend.
type BackendServiceFabricClusterPropertiesResponse struct {
	// The client certificate thumbprint for the management endpoint.
	ClientCertificatethumbprint string `pulumi:"clientCertificatethumbprint"`
	// The cluster management endpoint.
	ManagementEndpoints []string `pulumi:"managementEndpoints"`
	// Maximum number of retries while attempting resolve the partition.
	MaxPartitionResolutionRetries *int `pulumi:"maxPartitionResolutionRetries"`
	// Thumbprints of certificates cluster management service uses for tls communication
	ServerCertificateThumbprints []string `pulumi:"serverCertificateThumbprints"`
	// Server X509 Certificate Names Collection
	ServerX509Names []X509CertificateNameResponse `pulumi:"serverX509Names"`
}

// Properties of the Service Fabric Type Backend.
type BackendServiceFabricClusterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BackendServiceFabricClusterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceFabricClusterPropertiesResponse)(nil)).Elem()
}

func (o BackendServiceFabricClusterPropertiesResponseOutput) ToBackendServiceFabricClusterPropertiesResponseOutput() BackendServiceFabricClusterPropertiesResponseOutput {
	return o
}

func (o BackendServiceFabricClusterPropertiesResponseOutput) ToBackendServiceFabricClusterPropertiesResponseOutputWithContext(ctx context.Context) BackendServiceFabricClusterPropertiesResponseOutput {
	return o
}

func (o BackendServiceFabricClusterPropertiesResponseOutput) ToBackendServiceFabricClusterPropertiesResponsePtrOutput() BackendServiceFabricClusterPropertiesResponsePtrOutput {
	return o.ToBackendServiceFabricClusterPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o BackendServiceFabricClusterPropertiesResponseOutput) ToBackendServiceFabricClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) BackendServiceFabricClusterPropertiesResponsePtrOutput {
	return o.ApplyT(func(v BackendServiceFabricClusterPropertiesResponse) *BackendServiceFabricClusterPropertiesResponse {
		return &v
	}).(BackendServiceFabricClusterPropertiesResponsePtrOutput)
}

// The client certificate thumbprint for the management endpoint.
func (o BackendServiceFabricClusterPropertiesResponseOutput) ClientCertificatethumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v BackendServiceFabricClusterPropertiesResponse) string { return v.ClientCertificatethumbprint }).(pulumi.StringOutput)
}

// The cluster management endpoint.
func (o BackendServiceFabricClusterPropertiesResponseOutput) ManagementEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackendServiceFabricClusterPropertiesResponse) []string { return v.ManagementEndpoints }).(pulumi.StringArrayOutput)
}

// Maximum number of retries while attempting resolve the partition.
func (o BackendServiceFabricClusterPropertiesResponseOutput) MaxPartitionResolutionRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendServiceFabricClusterPropertiesResponse) *int { return v.MaxPartitionResolutionRetries }).(pulumi.IntPtrOutput)
}

// Thumbprints of certificates cluster management service uses for tls communication
func (o BackendServiceFabricClusterPropertiesResponseOutput) ServerCertificateThumbprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackendServiceFabricClusterPropertiesResponse) []string { return v.ServerCertificateThumbprints }).(pulumi.StringArrayOutput)
}

// Server X509 Certificate Names Collection
func (o BackendServiceFabricClusterPropertiesResponseOutput) ServerX509Names() X509CertificateNameResponseArrayOutput {
	return o.ApplyT(func(v BackendServiceFabricClusterPropertiesResponse) []X509CertificateNameResponse {
		return v.ServerX509Names
	}).(X509CertificateNameResponseArrayOutput)
}

type BackendServiceFabricClusterPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (BackendServiceFabricClusterPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendServiceFabricClusterPropertiesResponse)(nil)).Elem()
}

func (o BackendServiceFabricClusterPropertiesResponsePtrOutput) ToBackendServiceFabricClusterPropertiesResponsePtrOutput() BackendServiceFabricClusterPropertiesResponsePtrOutput {
	return o
}

func (o BackendServiceFabricClusterPropertiesResponsePtrOutput) ToBackendServiceFabricClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) BackendServiceFabricClusterPropertiesResponsePtrOutput {
	return o
}

func (o BackendServiceFabricClusterPropertiesResponsePtrOutput) Elem() BackendServiceFabricClusterPropertiesResponseOutput {
	return o.ApplyT(func(v *BackendServiceFabricClusterPropertiesResponse) BackendServiceFabricClusterPropertiesResponse {
		return *v
	}).(BackendServiceFabricClusterPropertiesResponseOutput)
}

// The client certificate thumbprint for the management endpoint.
func (o BackendServiceFabricClusterPropertiesResponsePtrOutput) ClientCertificatethumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendServiceFabricClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClientCertificatethumbprint
	}).(pulumi.StringPtrOutput)
}

// The cluster management endpoint.
func (o BackendServiceFabricClusterPropertiesResponsePtrOutput) ManagementEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackendServiceFabricClusterPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.ManagementEndpoints
	}).(pulumi.StringArrayOutput)
}

// Maximum number of retries while attempting resolve the partition.
func (o BackendServiceFabricClusterPropertiesResponsePtrOutput) MaxPartitionResolutionRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackendServiceFabricClusterPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxPartitionResolutionRetries
	}).(pulumi.IntPtrOutput)
}

// Thumbprints of certificates cluster management service uses for tls communication
func (o BackendServiceFabricClusterPropertiesResponsePtrOutput) ServerCertificateThumbprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackendServiceFabricClusterPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.ServerCertificateThumbprints
	}).(pulumi.StringArrayOutput)
}

// Server X509 Certificate Names Collection
func (o BackendServiceFabricClusterPropertiesResponsePtrOutput) ServerX509Names() X509CertificateNameResponseArrayOutput {
	return o.ApplyT(func(v *BackendServiceFabricClusterPropertiesResponse) []X509CertificateNameResponse {
		if v == nil {
			return nil
		}
		return v.ServerX509Names
	}).(X509CertificateNameResponseArrayOutput)
}

// Properties controlling TLS Certificate Validation.
type BackendTlsProperties struct {
	// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host.
	ValidateCertificateChain *bool `pulumi:"validateCertificateChain"`
	// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host.
	ValidateCertificateName *bool `pulumi:"validateCertificateName"`
}

// BackendTlsPropertiesInput is an input type that accepts BackendTlsPropertiesArgs and BackendTlsPropertiesOutput values.
// You can construct a concrete instance of `BackendTlsPropertiesInput` via:
//
//          BackendTlsPropertiesArgs{...}
type BackendTlsPropertiesInput interface {
	pulumi.Input

	ToBackendTlsPropertiesOutput() BackendTlsPropertiesOutput
	ToBackendTlsPropertiesOutputWithContext(context.Context) BackendTlsPropertiesOutput
}

// Properties controlling TLS Certificate Validation.
type BackendTlsPropertiesArgs struct {
	// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host.
	ValidateCertificateChain pulumi.BoolPtrInput `pulumi:"validateCertificateChain"`
	// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host.
	ValidateCertificateName pulumi.BoolPtrInput `pulumi:"validateCertificateName"`
}

func (BackendTlsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendTlsProperties)(nil)).Elem()
}

func (i BackendTlsPropertiesArgs) ToBackendTlsPropertiesOutput() BackendTlsPropertiesOutput {
	return i.ToBackendTlsPropertiesOutputWithContext(context.Background())
}

func (i BackendTlsPropertiesArgs) ToBackendTlsPropertiesOutputWithContext(ctx context.Context) BackendTlsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendTlsPropertiesOutput)
}

func (i BackendTlsPropertiesArgs) ToBackendTlsPropertiesPtrOutput() BackendTlsPropertiesPtrOutput {
	return i.ToBackendTlsPropertiesPtrOutputWithContext(context.Background())
}

func (i BackendTlsPropertiesArgs) ToBackendTlsPropertiesPtrOutputWithContext(ctx context.Context) BackendTlsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendTlsPropertiesOutput).ToBackendTlsPropertiesPtrOutputWithContext(ctx)
}

// BackendTlsPropertiesPtrInput is an input type that accepts BackendTlsPropertiesArgs, BackendTlsPropertiesPtr and BackendTlsPropertiesPtrOutput values.
// You can construct a concrete instance of `BackendTlsPropertiesPtrInput` via:
//
//          BackendTlsPropertiesArgs{...}
//
//  or:
//
//          nil
type BackendTlsPropertiesPtrInput interface {
	pulumi.Input

	ToBackendTlsPropertiesPtrOutput() BackendTlsPropertiesPtrOutput
	ToBackendTlsPropertiesPtrOutputWithContext(context.Context) BackendTlsPropertiesPtrOutput
}

type backendTlsPropertiesPtrType BackendTlsPropertiesArgs

func BackendTlsPropertiesPtr(v *BackendTlsPropertiesArgs) BackendTlsPropertiesPtrInput {
	return (*backendTlsPropertiesPtrType)(v)
}

func (*backendTlsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendTlsProperties)(nil)).Elem()
}

func (i *backendTlsPropertiesPtrType) ToBackendTlsPropertiesPtrOutput() BackendTlsPropertiesPtrOutput {
	return i.ToBackendTlsPropertiesPtrOutputWithContext(context.Background())
}

func (i *backendTlsPropertiesPtrType) ToBackendTlsPropertiesPtrOutputWithContext(ctx context.Context) BackendTlsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendTlsPropertiesPtrOutput)
}

// Properties controlling TLS Certificate Validation.
type BackendTlsPropertiesResponse struct {
	// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host.
	ValidateCertificateChain *bool `pulumi:"validateCertificateChain"`
	// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host.
	ValidateCertificateName *bool `pulumi:"validateCertificateName"`
}

// Properties controlling TLS Certificate Validation.
type BackendTlsPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BackendTlsPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendTlsPropertiesResponse)(nil)).Elem()
}

func (o BackendTlsPropertiesResponseOutput) ToBackendTlsPropertiesResponseOutput() BackendTlsPropertiesResponseOutput {
	return o
}

func (o BackendTlsPropertiesResponseOutput) ToBackendTlsPropertiesResponseOutputWithContext(ctx context.Context) BackendTlsPropertiesResponseOutput {
	return o
}

func (o BackendTlsPropertiesResponseOutput) ToBackendTlsPropertiesResponsePtrOutput() BackendTlsPropertiesResponsePtrOutput {
	return o.ToBackendTlsPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o BackendTlsPropertiesResponseOutput) ToBackendTlsPropertiesResponsePtrOutputWithContext(ctx context.Context) BackendTlsPropertiesResponsePtrOutput {
	return o.ApplyT(func(v BackendTlsPropertiesResponse) *BackendTlsPropertiesResponse {
		return &v
	}).(BackendTlsPropertiesResponsePtrOutput)
}

// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host.
func (o BackendTlsPropertiesResponseOutput) ValidateCertificateChain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackendTlsPropertiesResponse) *bool { return v.ValidateCertificateChain }).(pulumi.BoolPtrOutput)
}

// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host.
func (o BackendTlsPropertiesResponseOutput) ValidateCertificateName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackendTlsPropertiesResponse) *bool { return v.ValidateCertificateName }).(pulumi.BoolPtrOutput)
}

type BackendTlsPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (BackendTlsPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendTlsPropertiesResponse)(nil)).Elem()
}

func (o BackendTlsPropertiesResponsePtrOutput) ToBackendTlsPropertiesResponsePtrOutput() BackendTlsPropertiesResponsePtrOutput {
	return o
}

func (o BackendTlsPropertiesResponsePtrOutput) ToBackendTlsPropertiesResponsePtrOutputWithContext(ctx context.Context) BackendTlsPropertiesResponsePtrOutput {
	return o
}

func (o BackendTlsPropertiesResponsePtrOutput) Elem() BackendTlsPropertiesResponseOutput {
	return o.ApplyT(func(v *BackendTlsPropertiesResponse) BackendTlsPropertiesResponse { return *v }).(BackendTlsPropertiesResponseOutput)
}

// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host.
func (o BackendTlsPropertiesResponsePtrOutput) ValidateCertificateChain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackendTlsPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ValidateCertificateChain
	}).(pulumi.BoolPtrOutput)
}

// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host.
func (o BackendTlsPropertiesResponsePtrOutput) ValidateCertificateName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackendTlsPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ValidateCertificateName
	}).(pulumi.BoolPtrOutput)
}

// Body logging settings.
type BodyDiagnosticSettings struct {
	// Number of request body bytes to log.
	Bytes *int `pulumi:"bytes"`
}

// BodyDiagnosticSettingsInput is an input type that accepts BodyDiagnosticSettingsArgs and BodyDiagnosticSettingsOutput values.
// You can construct a concrete instance of `BodyDiagnosticSettingsInput` via:
//
//          BodyDiagnosticSettingsArgs{...}
type BodyDiagnosticSettingsInput interface {
	pulumi.Input

	ToBodyDiagnosticSettingsOutput() BodyDiagnosticSettingsOutput
	ToBodyDiagnosticSettingsOutputWithContext(context.Context) BodyDiagnosticSettingsOutput
}

// Body logging settings.
type BodyDiagnosticSettingsArgs struct {
	// Number of request body bytes to log.
	Bytes pulumi.IntPtrInput `pulumi:"bytes"`
}

func (BodyDiagnosticSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BodyDiagnosticSettings)(nil)).Elem()
}

func (i BodyDiagnosticSettingsArgs) ToBodyDiagnosticSettingsOutput() BodyDiagnosticSettingsOutput {
	return i.ToBodyDiagnosticSettingsOutputWithContext(context.Background())
}

func (i BodyDiagnosticSettingsArgs) ToBodyDiagnosticSettingsOutputWithContext(ctx context.Context) BodyDiagnosticSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BodyDiagnosticSettingsOutput)
}

func (i BodyDiagnosticSettingsArgs) ToBodyDiagnosticSettingsPtrOutput() BodyDiagnosticSettingsPtrOutput {
	return i.ToBodyDiagnosticSettingsPtrOutputWithContext(context.Background())
}

func (i BodyDiagnosticSettingsArgs) ToBodyDiagnosticSettingsPtrOutputWithContext(ctx context.Context) BodyDiagnosticSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BodyDiagnosticSettingsOutput).ToBodyDiagnosticSettingsPtrOutputWithContext(ctx)
}

// BodyDiagnosticSettingsPtrInput is an input type that accepts BodyDiagnosticSettingsArgs, BodyDiagnosticSettingsPtr and BodyDiagnosticSettingsPtrOutput values.
// You can construct a concrete instance of `BodyDiagnosticSettingsPtrInput` via:
//
//          BodyDiagnosticSettingsArgs{...}
//
//  or:
//
//          nil
type BodyDiagnosticSettingsPtrInput interface {
	pulumi.Input

	ToBodyDiagnosticSettingsPtrOutput() BodyDiagnosticSettingsPtrOutput
	ToBodyDiagnosticSettingsPtrOutputWithContext(context.Context) BodyDiagnosticSettingsPtrOutput
}

type bodyDiagnosticSettingsPtrType BodyDiagnosticSettingsArgs

func BodyDiagnosticSettingsPtr(v *BodyDiagnosticSettingsArgs) BodyDiagnosticSettingsPtrInput {
	return (*bodyDiagnosticSettingsPtrType)(v)
}

func (*bodyDiagnosticSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BodyDiagnosticSettings)(nil)).Elem()
}

func (i *bodyDiagnosticSettingsPtrType) ToBodyDiagnosticSettingsPtrOutput() BodyDiagnosticSettingsPtrOutput {
	return i.ToBodyDiagnosticSettingsPtrOutputWithContext(context.Background())
}

func (i *bodyDiagnosticSettingsPtrType) ToBodyDiagnosticSettingsPtrOutputWithContext(ctx context.Context) BodyDiagnosticSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BodyDiagnosticSettingsPtrOutput)
}

// Body logging settings.
type BodyDiagnosticSettingsResponse struct {
	// Number of request body bytes to log.
	Bytes *int `pulumi:"bytes"`
}

// Body logging settings.
type BodyDiagnosticSettingsResponseOutput struct{ *pulumi.OutputState }

func (BodyDiagnosticSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BodyDiagnosticSettingsResponse)(nil)).Elem()
}

func (o BodyDiagnosticSettingsResponseOutput) ToBodyDiagnosticSettingsResponseOutput() BodyDiagnosticSettingsResponseOutput {
	return o
}

func (o BodyDiagnosticSettingsResponseOutput) ToBodyDiagnosticSettingsResponseOutputWithContext(ctx context.Context) BodyDiagnosticSettingsResponseOutput {
	return o
}

func (o BodyDiagnosticSettingsResponseOutput) ToBodyDiagnosticSettingsResponsePtrOutput() BodyDiagnosticSettingsResponsePtrOutput {
	return o.ToBodyDiagnosticSettingsResponsePtrOutputWithContext(context.Background())
}

func (o BodyDiagnosticSettingsResponseOutput) ToBodyDiagnosticSettingsResponsePtrOutputWithContext(ctx context.Context) BodyDiagnosticSettingsResponsePtrOutput {
	return o.ApplyT(func(v BodyDiagnosticSettingsResponse) *BodyDiagnosticSettingsResponse {
		return &v
	}).(BodyDiagnosticSettingsResponsePtrOutput)
}

// Number of request body bytes to log.
func (o BodyDiagnosticSettingsResponseOutput) Bytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BodyDiagnosticSettingsResponse) *int { return v.Bytes }).(pulumi.IntPtrOutput)
}

type BodyDiagnosticSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (BodyDiagnosticSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BodyDiagnosticSettingsResponse)(nil)).Elem()
}

func (o BodyDiagnosticSettingsResponsePtrOutput) ToBodyDiagnosticSettingsResponsePtrOutput() BodyDiagnosticSettingsResponsePtrOutput {
	return o
}

func (o BodyDiagnosticSettingsResponsePtrOutput) ToBodyDiagnosticSettingsResponsePtrOutputWithContext(ctx context.Context) BodyDiagnosticSettingsResponsePtrOutput {
	return o
}

func (o BodyDiagnosticSettingsResponsePtrOutput) Elem() BodyDiagnosticSettingsResponseOutput {
	return o.ApplyT(func(v *BodyDiagnosticSettingsResponse) BodyDiagnosticSettingsResponse { return *v }).(BodyDiagnosticSettingsResponseOutput)
}

// Number of request body bytes to log.
func (o BodyDiagnosticSettingsResponsePtrOutput) Bytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BodyDiagnosticSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Bytes
	}).(pulumi.IntPtrOutput)
}

// Certificate configuration which consist of non-trusted intermediates and root certificates.
type CertificateConfiguration struct {
	// Certificate information.
	Certificate *CertificateInformation `pulumi:"certificate"`
	// Certificate Password.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// Base64 Encoded certificate.
	EncodedCertificate *string `pulumi:"encodedCertificate"`
	// The System.Security.Cryptography.x509certificates.StoreName certificate store location. Only Root and CertificateAuthority are valid locations.
	StoreName string `pulumi:"storeName"`
}

// CertificateConfigurationInput is an input type that accepts CertificateConfigurationArgs and CertificateConfigurationOutput values.
// You can construct a concrete instance of `CertificateConfigurationInput` via:
//
//          CertificateConfigurationArgs{...}
type CertificateConfigurationInput interface {
	pulumi.Input

	ToCertificateConfigurationOutput() CertificateConfigurationOutput
	ToCertificateConfigurationOutputWithContext(context.Context) CertificateConfigurationOutput
}

// Certificate configuration which consist of non-trusted intermediates and root certificates.
type CertificateConfigurationArgs struct {
	// Certificate information.
	Certificate CertificateInformationPtrInput `pulumi:"certificate"`
	// Certificate Password.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	// Base64 Encoded certificate.
	EncodedCertificate pulumi.StringPtrInput `pulumi:"encodedCertificate"`
	// The System.Security.Cryptography.x509certificates.StoreName certificate store location. Only Root and CertificateAuthority are valid locations.
	StoreName pulumi.StringInput `pulumi:"storeName"`
}

func (CertificateConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfiguration)(nil)).Elem()
}

func (i CertificateConfigurationArgs) ToCertificateConfigurationOutput() CertificateConfigurationOutput {
	return i.ToCertificateConfigurationOutputWithContext(context.Background())
}

func (i CertificateConfigurationArgs) ToCertificateConfigurationOutputWithContext(ctx context.Context) CertificateConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigurationOutput)
}

// CertificateConfigurationArrayInput is an input type that accepts CertificateConfigurationArray and CertificateConfigurationArrayOutput values.
// You can construct a concrete instance of `CertificateConfigurationArrayInput` via:
//
//          CertificateConfigurationArray{ CertificateConfigurationArgs{...} }
type CertificateConfigurationArrayInput interface {
	pulumi.Input

	ToCertificateConfigurationArrayOutput() CertificateConfigurationArrayOutput
	ToCertificateConfigurationArrayOutputWithContext(context.Context) CertificateConfigurationArrayOutput
}

type CertificateConfigurationArray []CertificateConfigurationInput

func (CertificateConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateConfiguration)(nil)).Elem()
}

func (i CertificateConfigurationArray) ToCertificateConfigurationArrayOutput() CertificateConfigurationArrayOutput {
	return i.ToCertificateConfigurationArrayOutputWithContext(context.Background())
}

func (i CertificateConfigurationArray) ToCertificateConfigurationArrayOutputWithContext(ctx context.Context) CertificateConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigurationArrayOutput)
}

// Certificate configuration which consist of non-trusted intermediates and root certificates.
type CertificateConfigurationResponse struct {
	// Certificate information.
	Certificate *CertificateInformationResponse `pulumi:"certificate"`
	// Certificate Password.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// Base64 Encoded certificate.
	EncodedCertificate *string `pulumi:"encodedCertificate"`
	// The System.Security.Cryptography.x509certificates.StoreName certificate store location. Only Root and CertificateAuthority are valid locations.
	StoreName string `pulumi:"storeName"`
}

// Certificate configuration which consist of non-trusted intermediates and root certificates.
type CertificateConfigurationResponseOutput struct{ *pulumi.OutputState }

func (CertificateConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigurationResponse)(nil)).Elem()
}

func (o CertificateConfigurationResponseOutput) ToCertificateConfigurationResponseOutput() CertificateConfigurationResponseOutput {
	return o
}

func (o CertificateConfigurationResponseOutput) ToCertificateConfigurationResponseOutputWithContext(ctx context.Context) CertificateConfigurationResponseOutput {
	return o
}

// Certificate information.
func (o CertificateConfigurationResponseOutput) Certificate() CertificateInformationResponsePtrOutput {
	return o.ApplyT(func(v CertificateConfigurationResponse) *CertificateInformationResponse { return v.Certificate }).(CertificateInformationResponsePtrOutput)
}

// Certificate Password.
func (o CertificateConfigurationResponseOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfigurationResponse) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

// Base64 Encoded certificate.
func (o CertificateConfigurationResponseOutput) EncodedCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfigurationResponse) *string { return v.EncodedCertificate }).(pulumi.StringPtrOutput)
}

// The System.Security.Cryptography.x509certificates.StoreName certificate store location. Only Root and CertificateAuthority are valid locations.
func (o CertificateConfigurationResponseOutput) StoreName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateConfigurationResponse) string { return v.StoreName }).(pulumi.StringOutput)
}

type CertificateConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (CertificateConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateConfigurationResponse)(nil)).Elem()
}

func (o CertificateConfigurationResponseArrayOutput) ToCertificateConfigurationResponseArrayOutput() CertificateConfigurationResponseArrayOutput {
	return o
}

func (o CertificateConfigurationResponseArrayOutput) ToCertificateConfigurationResponseArrayOutputWithContext(ctx context.Context) CertificateConfigurationResponseArrayOutput {
	return o
}

func (o CertificateConfigurationResponseArrayOutput) Index(i pulumi.IntInput) CertificateConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateConfigurationResponse {
		return vs[0].([]CertificateConfigurationResponse)[vs[1].(int)]
	}).(CertificateConfigurationResponseOutput)
}

// SSL certificate information.
type CertificateInformation struct {
	// Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	Expiry string `pulumi:"expiry"`
	// Subject of the certificate.
	Subject string `pulumi:"subject"`
	// Thumbprint of the certificate.
	Thumbprint string `pulumi:"thumbprint"`
}

// CertificateInformationInput is an input type that accepts CertificateInformationArgs and CertificateInformationOutput values.
// You can construct a concrete instance of `CertificateInformationInput` via:
//
//          CertificateInformationArgs{...}
type CertificateInformationInput interface {
	pulumi.Input

	ToCertificateInformationOutput() CertificateInformationOutput
	ToCertificateInformationOutputWithContext(context.Context) CertificateInformationOutput
}

// SSL certificate information.
type CertificateInformationArgs struct {
	// Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	Expiry pulumi.StringInput `pulumi:"expiry"`
	// Subject of the certificate.
	Subject pulumi.StringInput `pulumi:"subject"`
	// Thumbprint of the certificate.
	Thumbprint pulumi.StringInput `pulumi:"thumbprint"`
}

func (CertificateInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateInformation)(nil)).Elem()
}

func (i CertificateInformationArgs) ToCertificateInformationOutput() CertificateInformationOutput {
	return i.ToCertificateInformationOutputWithContext(context.Background())
}

func (i CertificateInformationArgs) ToCertificateInformationOutputWithContext(ctx context.Context) CertificateInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateInformationOutput)
}

func (i CertificateInformationArgs) ToCertificateInformationPtrOutput() CertificateInformationPtrOutput {
	return i.ToCertificateInformationPtrOutputWithContext(context.Background())
}

func (i CertificateInformationArgs) ToCertificateInformationPtrOutputWithContext(ctx context.Context) CertificateInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateInformationOutput).ToCertificateInformationPtrOutputWithContext(ctx)
}

// CertificateInformationPtrInput is an input type that accepts CertificateInformationArgs, CertificateInformationPtr and CertificateInformationPtrOutput values.
// You can construct a concrete instance of `CertificateInformationPtrInput` via:
//
//          CertificateInformationArgs{...}
//
//  or:
//
//          nil
type CertificateInformationPtrInput interface {
	pulumi.Input

	ToCertificateInformationPtrOutput() CertificateInformationPtrOutput
	ToCertificateInformationPtrOutputWithContext(context.Context) CertificateInformationPtrOutput
}

type certificateInformationPtrType CertificateInformationArgs

func CertificateInformationPtr(v *CertificateInformationArgs) CertificateInformationPtrInput {
	return (*certificateInformationPtrType)(v)
}

func (*certificateInformationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateInformation)(nil)).Elem()
}

func (i *certificateInformationPtrType) ToCertificateInformationPtrOutput() CertificateInformationPtrOutput {
	return i.ToCertificateInformationPtrOutputWithContext(context.Background())
}

func (i *certificateInformationPtrType) ToCertificateInformationPtrOutputWithContext(ctx context.Context) CertificateInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateInformationPtrOutput)
}

// SSL certificate information.
type CertificateInformationResponse struct {
	// Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	Expiry string `pulumi:"expiry"`
	// Subject of the certificate.
	Subject string `pulumi:"subject"`
	// Thumbprint of the certificate.
	Thumbprint string `pulumi:"thumbprint"`
}

// SSL certificate information.
type CertificateInformationResponseOutput struct{ *pulumi.OutputState }

func (CertificateInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateInformationResponse)(nil)).Elem()
}

func (o CertificateInformationResponseOutput) ToCertificateInformationResponseOutput() CertificateInformationResponseOutput {
	return o
}

func (o CertificateInformationResponseOutput) ToCertificateInformationResponseOutputWithContext(ctx context.Context) CertificateInformationResponseOutput {
	return o
}

func (o CertificateInformationResponseOutput) ToCertificateInformationResponsePtrOutput() CertificateInformationResponsePtrOutput {
	return o.ToCertificateInformationResponsePtrOutputWithContext(context.Background())
}

func (o CertificateInformationResponseOutput) ToCertificateInformationResponsePtrOutputWithContext(ctx context.Context) CertificateInformationResponsePtrOutput {
	return o.ApplyT(func(v CertificateInformationResponse) *CertificateInformationResponse {
		return &v
	}).(CertificateInformationResponsePtrOutput)
}

// Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o CertificateInformationResponseOutput) Expiry() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateInformationResponse) string { return v.Expiry }).(pulumi.StringOutput)
}

// Subject of the certificate.
func (o CertificateInformationResponseOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateInformationResponse) string { return v.Subject }).(pulumi.StringOutput)
}

// Thumbprint of the certificate.
func (o CertificateInformationResponseOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateInformationResponse) string { return v.Thumbprint }).(pulumi.StringOutput)
}

type CertificateInformationResponsePtrOutput struct{ *pulumi.OutputState }

func (CertificateInformationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateInformationResponse)(nil)).Elem()
}

func (o CertificateInformationResponsePtrOutput) ToCertificateInformationResponsePtrOutput() CertificateInformationResponsePtrOutput {
	return o
}

func (o CertificateInformationResponsePtrOutput) ToCertificateInformationResponsePtrOutputWithContext(ctx context.Context) CertificateInformationResponsePtrOutput {
	return o
}

func (o CertificateInformationResponsePtrOutput) Elem() CertificateInformationResponseOutput {
	return o.ApplyT(func(v *CertificateInformationResponse) CertificateInformationResponse { return *v }).(CertificateInformationResponseOutput)
}

// Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o CertificateInformationResponsePtrOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Expiry
	}).(pulumi.StringPtrOutput)
}

// Subject of the certificate.
func (o CertificateInformationResponsePtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// Thumbprint of the certificate.
func (o CertificateInformationResponsePtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// Email Template Parameter contract.
type EmailTemplateParametersContractProperties struct {
	// Template parameter description.
	Description *string `pulumi:"description"`
	// Template parameter name.
	Name *string `pulumi:"name"`
	// Template parameter title.
	Title *string `pulumi:"title"`
}

// EmailTemplateParametersContractPropertiesInput is an input type that accepts EmailTemplateParametersContractPropertiesArgs and EmailTemplateParametersContractPropertiesOutput values.
// You can construct a concrete instance of `EmailTemplateParametersContractPropertiesInput` via:
//
//          EmailTemplateParametersContractPropertiesArgs{...}
type EmailTemplateParametersContractPropertiesInput interface {
	pulumi.Input

	ToEmailTemplateParametersContractPropertiesOutput() EmailTemplateParametersContractPropertiesOutput
	ToEmailTemplateParametersContractPropertiesOutputWithContext(context.Context) EmailTemplateParametersContractPropertiesOutput
}

// Email Template Parameter contract.
type EmailTemplateParametersContractPropertiesArgs struct {
	// Template parameter description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Template parameter name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Template parameter title.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (EmailTemplateParametersContractPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailTemplateParametersContractProperties)(nil)).Elem()
}

func (i EmailTemplateParametersContractPropertiesArgs) ToEmailTemplateParametersContractPropertiesOutput() EmailTemplateParametersContractPropertiesOutput {
	return i.ToEmailTemplateParametersContractPropertiesOutputWithContext(context.Background())
}

func (i EmailTemplateParametersContractPropertiesArgs) ToEmailTemplateParametersContractPropertiesOutputWithContext(ctx context.Context) EmailTemplateParametersContractPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailTemplateParametersContractPropertiesOutput)
}

// EmailTemplateParametersContractPropertiesArrayInput is an input type that accepts EmailTemplateParametersContractPropertiesArray and EmailTemplateParametersContractPropertiesArrayOutput values.
// You can construct a concrete instance of `EmailTemplateParametersContractPropertiesArrayInput` via:
//
//          EmailTemplateParametersContractPropertiesArray{ EmailTemplateParametersContractPropertiesArgs{...} }
type EmailTemplateParametersContractPropertiesArrayInput interface {
	pulumi.Input

	ToEmailTemplateParametersContractPropertiesArrayOutput() EmailTemplateParametersContractPropertiesArrayOutput
	ToEmailTemplateParametersContractPropertiesArrayOutputWithContext(context.Context) EmailTemplateParametersContractPropertiesArrayOutput
}

type EmailTemplateParametersContractPropertiesArray []EmailTemplateParametersContractPropertiesInput

func (EmailTemplateParametersContractPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailTemplateParametersContractProperties)(nil)).Elem()
}

func (i EmailTemplateParametersContractPropertiesArray) ToEmailTemplateParametersContractPropertiesArrayOutput() EmailTemplateParametersContractPropertiesArrayOutput {
	return i.ToEmailTemplateParametersContractPropertiesArrayOutputWithContext(context.Background())
}

func (i EmailTemplateParametersContractPropertiesArray) ToEmailTemplateParametersContractPropertiesArrayOutputWithContext(ctx context.Context) EmailTemplateParametersContractPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailTemplateParametersContractPropertiesArrayOutput)
}

// Email Template Parameter contract.
type EmailTemplateParametersContractPropertiesResponse struct {
	// Template parameter description.
	Description *string `pulumi:"description"`
	// Template parameter name.
	Name *string `pulumi:"name"`
	// Template parameter title.
	Title *string `pulumi:"title"`
}

// Email Template Parameter contract.
type EmailTemplateParametersContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (EmailTemplateParametersContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailTemplateParametersContractPropertiesResponse)(nil)).Elem()
}

func (o EmailTemplateParametersContractPropertiesResponseOutput) ToEmailTemplateParametersContractPropertiesResponseOutput() EmailTemplateParametersContractPropertiesResponseOutput {
	return o
}

func (o EmailTemplateParametersContractPropertiesResponseOutput) ToEmailTemplateParametersContractPropertiesResponseOutputWithContext(ctx context.Context) EmailTemplateParametersContractPropertiesResponseOutput {
	return o
}

// Template parameter description.
func (o EmailTemplateParametersContractPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailTemplateParametersContractPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Template parameter name.
func (o EmailTemplateParametersContractPropertiesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailTemplateParametersContractPropertiesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Template parameter title.
func (o EmailTemplateParametersContractPropertiesResponseOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailTemplateParametersContractPropertiesResponse) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type EmailTemplateParametersContractPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (EmailTemplateParametersContractPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailTemplateParametersContractPropertiesResponse)(nil)).Elem()
}

func (o EmailTemplateParametersContractPropertiesResponseArrayOutput) ToEmailTemplateParametersContractPropertiesResponseArrayOutput() EmailTemplateParametersContractPropertiesResponseArrayOutput {
	return o
}

func (o EmailTemplateParametersContractPropertiesResponseArrayOutput) ToEmailTemplateParametersContractPropertiesResponseArrayOutputWithContext(ctx context.Context) EmailTemplateParametersContractPropertiesResponseArrayOutput {
	return o
}

func (o EmailTemplateParametersContractPropertiesResponseArrayOutput) Index(i pulumi.IntInput) EmailTemplateParametersContractPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EmailTemplateParametersContractPropertiesResponse {
		return vs[0].([]EmailTemplateParametersContractPropertiesResponse)[vs[1].(int)]
	}).(EmailTemplateParametersContractPropertiesResponseOutput)
}

// Group contract Properties.
type GroupContractPropertiesResponse struct {
	// true if the group is one of the three system groups (Administrators, Developers, or Guests); otherwise false.
	BuiltIn bool `pulumi:"builtIn"`
	// Group description. Can contain HTML formatting tags.
	Description *string `pulumi:"description"`
	// Group name.
	DisplayName string `pulumi:"displayName"`
	// For external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null.
	ExternalId *string `pulumi:"externalId"`
	// Group type.
	Type *string `pulumi:"type"`
}

// Group contract Properties.
type GroupContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (GroupContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContractPropertiesResponse)(nil)).Elem()
}

func (o GroupContractPropertiesResponseOutput) ToGroupContractPropertiesResponseOutput() GroupContractPropertiesResponseOutput {
	return o
}

func (o GroupContractPropertiesResponseOutput) ToGroupContractPropertiesResponseOutputWithContext(ctx context.Context) GroupContractPropertiesResponseOutput {
	return o
}

// true if the group is one of the three system groups (Administrators, Developers, or Guests); otherwise false.
func (o GroupContractPropertiesResponseOutput) BuiltIn() pulumi.BoolOutput {
	return o.ApplyT(func(v GroupContractPropertiesResponse) bool { return v.BuiltIn }).(pulumi.BoolOutput)
}

// Group description. Can contain HTML formatting tags.
func (o GroupContractPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContractPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Group name.
func (o GroupContractPropertiesResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GroupContractPropertiesResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// For external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null.
func (o GroupContractPropertiesResponseOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContractPropertiesResponse) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// Group type.
func (o GroupContractPropertiesResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContractPropertiesResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GroupContractPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (GroupContractPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContractPropertiesResponse)(nil)).Elem()
}

func (o GroupContractPropertiesResponseArrayOutput) ToGroupContractPropertiesResponseArrayOutput() GroupContractPropertiesResponseArrayOutput {
	return o
}

func (o GroupContractPropertiesResponseArrayOutput) ToGroupContractPropertiesResponseArrayOutputWithContext(ctx context.Context) GroupContractPropertiesResponseArrayOutput {
	return o
}

func (o GroupContractPropertiesResponseArrayOutput) Index(i pulumi.IntInput) GroupContractPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupContractPropertiesResponse {
		return vs[0].([]GroupContractPropertiesResponse)[vs[1].(int)]
	}).(GroupContractPropertiesResponseOutput)
}

// Custom hostname configuration.
type HostnameConfiguration struct {
	// Certificate information.
	Certificate *CertificateInformation `pulumi:"certificate"`
	// Certificate Password.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to Proxy Hostname Type.
	DefaultSslBinding *bool `pulumi:"defaultSslBinding"`
	// Base64 Encoded certificate.
	EncodedCertificate *string `pulumi:"encodedCertificate"`
	// Hostname to configure on the Api Management service.
	HostName string `pulumi:"hostName"`
	// Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with MSI. The secret should be of type *application/x-pkcs12*
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Specify true to always negotiate client certificate on the hostname. Default Value is false.
	NegotiateClientCertificate *bool `pulumi:"negotiateClientCertificate"`
	// Hostname type.
	Type string `pulumi:"type"`
}

// HostnameConfigurationInput is an input type that accepts HostnameConfigurationArgs and HostnameConfigurationOutput values.
// You can construct a concrete instance of `HostnameConfigurationInput` via:
//
//          HostnameConfigurationArgs{...}
type HostnameConfigurationInput interface {
	pulumi.Input

	ToHostnameConfigurationOutput() HostnameConfigurationOutput
	ToHostnameConfigurationOutputWithContext(context.Context) HostnameConfigurationOutput
}

// Custom hostname configuration.
type HostnameConfigurationArgs struct {
	// Certificate information.
	Certificate CertificateInformationPtrInput `pulumi:"certificate"`
	// Certificate Password.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	// Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to Proxy Hostname Type.
	DefaultSslBinding pulumi.BoolPtrInput `pulumi:"defaultSslBinding"`
	// Base64 Encoded certificate.
	EncodedCertificate pulumi.StringPtrInput `pulumi:"encodedCertificate"`
	// Hostname to configure on the Api Management service.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with MSI. The secret should be of type *application/x-pkcs12*
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Specify true to always negotiate client certificate on the hostname. Default Value is false.
	NegotiateClientCertificate pulumi.BoolPtrInput `pulumi:"negotiateClientCertificate"`
	// Hostname type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HostnameConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostnameConfiguration)(nil)).Elem()
}

func (i HostnameConfigurationArgs) ToHostnameConfigurationOutput() HostnameConfigurationOutput {
	return i.ToHostnameConfigurationOutputWithContext(context.Background())
}

func (i HostnameConfigurationArgs) ToHostnameConfigurationOutputWithContext(ctx context.Context) HostnameConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostnameConfigurationOutput)
}

// HostnameConfigurationArrayInput is an input type that accepts HostnameConfigurationArray and HostnameConfigurationArrayOutput values.
// You can construct a concrete instance of `HostnameConfigurationArrayInput` via:
//
//          HostnameConfigurationArray{ HostnameConfigurationArgs{...} }
type HostnameConfigurationArrayInput interface {
	pulumi.Input

	ToHostnameConfigurationArrayOutput() HostnameConfigurationArrayOutput
	ToHostnameConfigurationArrayOutputWithContext(context.Context) HostnameConfigurationArrayOutput
}

type HostnameConfigurationArray []HostnameConfigurationInput

func (HostnameConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostnameConfiguration)(nil)).Elem()
}

func (i HostnameConfigurationArray) ToHostnameConfigurationArrayOutput() HostnameConfigurationArrayOutput {
	return i.ToHostnameConfigurationArrayOutputWithContext(context.Background())
}

func (i HostnameConfigurationArray) ToHostnameConfigurationArrayOutputWithContext(ctx context.Context) HostnameConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostnameConfigurationArrayOutput)
}

// Custom hostname configuration.
type HostnameConfigurationResponse struct {
	// Certificate information.
	Certificate *CertificateInformationResponse `pulumi:"certificate"`
	// Certificate Password.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to Proxy Hostname Type.
	DefaultSslBinding *bool `pulumi:"defaultSslBinding"`
	// Base64 Encoded certificate.
	EncodedCertificate *string `pulumi:"encodedCertificate"`
	// Hostname to configure on the Api Management service.
	HostName string `pulumi:"hostName"`
	// Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with MSI. The secret should be of type *application/x-pkcs12*
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Specify true to always negotiate client certificate on the hostname. Default Value is false.
	NegotiateClientCertificate *bool `pulumi:"negotiateClientCertificate"`
	// Hostname type.
	Type string `pulumi:"type"`
}

// Custom hostname configuration.
type HostnameConfigurationResponseOutput struct{ *pulumi.OutputState }

func (HostnameConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostnameConfigurationResponse)(nil)).Elem()
}

func (o HostnameConfigurationResponseOutput) ToHostnameConfigurationResponseOutput() HostnameConfigurationResponseOutput {
	return o
}

func (o HostnameConfigurationResponseOutput) ToHostnameConfigurationResponseOutputWithContext(ctx context.Context) HostnameConfigurationResponseOutput {
	return o
}

// Certificate information.
func (o HostnameConfigurationResponseOutput) Certificate() CertificateInformationResponsePtrOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) *CertificateInformationResponse { return v.Certificate }).(CertificateInformationResponsePtrOutput)
}

// Certificate Password.
func (o HostnameConfigurationResponseOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

// Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to Proxy Hostname Type.
func (o HostnameConfigurationResponseOutput) DefaultSslBinding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) *bool { return v.DefaultSslBinding }).(pulumi.BoolPtrOutput)
}

// Base64 Encoded certificate.
func (o HostnameConfigurationResponseOutput) EncodedCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) *string { return v.EncodedCertificate }).(pulumi.StringPtrOutput)
}

// Hostname to configure on the Api Management service.
func (o HostnameConfigurationResponseOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) string { return v.HostName }).(pulumi.StringOutput)
}

// Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with MSI. The secret should be of type *application/x-pkcs12*
func (o HostnameConfigurationResponseOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Specify true to always negotiate client certificate on the hostname. Default Value is false.
func (o HostnameConfigurationResponseOutput) NegotiateClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) *bool { return v.NegotiateClientCertificate }).(pulumi.BoolPtrOutput)
}

// Hostname type.
func (o HostnameConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type HostnameConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (HostnameConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostnameConfigurationResponse)(nil)).Elem()
}

func (o HostnameConfigurationResponseArrayOutput) ToHostnameConfigurationResponseArrayOutput() HostnameConfigurationResponseArrayOutput {
	return o
}

func (o HostnameConfigurationResponseArrayOutput) ToHostnameConfigurationResponseArrayOutputWithContext(ctx context.Context) HostnameConfigurationResponseArrayOutput {
	return o
}

func (o HostnameConfigurationResponseArrayOutput) Index(i pulumi.IntInput) HostnameConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostnameConfigurationResponse {
		return vs[0].([]HostnameConfigurationResponse)[vs[1].(int)]
	}).(HostnameConfigurationResponseOutput)
}

// Http message diagnostic settings.
type HttpMessageDiagnostic struct {
	// Body logging settings.
	Body *BodyDiagnosticSettings `pulumi:"body"`
	// Array of HTTP Headers to log.
	Headers []string `pulumi:"headers"`
}

// HttpMessageDiagnosticInput is an input type that accepts HttpMessageDiagnosticArgs and HttpMessageDiagnosticOutput values.
// You can construct a concrete instance of `HttpMessageDiagnosticInput` via:
//
//          HttpMessageDiagnosticArgs{...}
type HttpMessageDiagnosticInput interface {
	pulumi.Input

	ToHttpMessageDiagnosticOutput() HttpMessageDiagnosticOutput
	ToHttpMessageDiagnosticOutputWithContext(context.Context) HttpMessageDiagnosticOutput
}

// Http message diagnostic settings.
type HttpMessageDiagnosticArgs struct {
	// Body logging settings.
	Body BodyDiagnosticSettingsPtrInput `pulumi:"body"`
	// Array of HTTP Headers to log.
	Headers pulumi.StringArrayInput `pulumi:"headers"`
}

func (HttpMessageDiagnosticArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpMessageDiagnostic)(nil)).Elem()
}

func (i HttpMessageDiagnosticArgs) ToHttpMessageDiagnosticOutput() HttpMessageDiagnosticOutput {
	return i.ToHttpMessageDiagnosticOutputWithContext(context.Background())
}

func (i HttpMessageDiagnosticArgs) ToHttpMessageDiagnosticOutputWithContext(ctx context.Context) HttpMessageDiagnosticOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpMessageDiagnosticOutput)
}

func (i HttpMessageDiagnosticArgs) ToHttpMessageDiagnosticPtrOutput() HttpMessageDiagnosticPtrOutput {
	return i.ToHttpMessageDiagnosticPtrOutputWithContext(context.Background())
}

func (i HttpMessageDiagnosticArgs) ToHttpMessageDiagnosticPtrOutputWithContext(ctx context.Context) HttpMessageDiagnosticPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpMessageDiagnosticOutput).ToHttpMessageDiagnosticPtrOutputWithContext(ctx)
}

// HttpMessageDiagnosticPtrInput is an input type that accepts HttpMessageDiagnosticArgs, HttpMessageDiagnosticPtr and HttpMessageDiagnosticPtrOutput values.
// You can construct a concrete instance of `HttpMessageDiagnosticPtrInput` via:
//
//          HttpMessageDiagnosticArgs{...}
//
//  or:
//
//          nil
type HttpMessageDiagnosticPtrInput interface {
	pulumi.Input

	ToHttpMessageDiagnosticPtrOutput() HttpMessageDiagnosticPtrOutput
	ToHttpMessageDiagnosticPtrOutputWithContext(context.Context) HttpMessageDiagnosticPtrOutput
}

type httpMessageDiagnosticPtrType HttpMessageDiagnosticArgs

func HttpMessageDiagnosticPtr(v *HttpMessageDiagnosticArgs) HttpMessageDiagnosticPtrInput {
	return (*httpMessageDiagnosticPtrType)(v)
}

func (*httpMessageDiagnosticPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpMessageDiagnostic)(nil)).Elem()
}

func (i *httpMessageDiagnosticPtrType) ToHttpMessageDiagnosticPtrOutput() HttpMessageDiagnosticPtrOutput {
	return i.ToHttpMessageDiagnosticPtrOutputWithContext(context.Background())
}

func (i *httpMessageDiagnosticPtrType) ToHttpMessageDiagnosticPtrOutputWithContext(ctx context.Context) HttpMessageDiagnosticPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpMessageDiagnosticPtrOutput)
}

// Http message diagnostic settings.
type HttpMessageDiagnosticResponse struct {
	// Body logging settings.
	Body *BodyDiagnosticSettingsResponse `pulumi:"body"`
	// Array of HTTP Headers to log.
	Headers []string `pulumi:"headers"`
}

// Http message diagnostic settings.
type HttpMessageDiagnosticResponseOutput struct{ *pulumi.OutputState }

func (HttpMessageDiagnosticResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpMessageDiagnosticResponse)(nil)).Elem()
}

func (o HttpMessageDiagnosticResponseOutput) ToHttpMessageDiagnosticResponseOutput() HttpMessageDiagnosticResponseOutput {
	return o
}

func (o HttpMessageDiagnosticResponseOutput) ToHttpMessageDiagnosticResponseOutputWithContext(ctx context.Context) HttpMessageDiagnosticResponseOutput {
	return o
}

func (o HttpMessageDiagnosticResponseOutput) ToHttpMessageDiagnosticResponsePtrOutput() HttpMessageDiagnosticResponsePtrOutput {
	return o.ToHttpMessageDiagnosticResponsePtrOutputWithContext(context.Background())
}

func (o HttpMessageDiagnosticResponseOutput) ToHttpMessageDiagnosticResponsePtrOutputWithContext(ctx context.Context) HttpMessageDiagnosticResponsePtrOutput {
	return o.ApplyT(func(v HttpMessageDiagnosticResponse) *HttpMessageDiagnosticResponse {
		return &v
	}).(HttpMessageDiagnosticResponsePtrOutput)
}

// Body logging settings.
func (o HttpMessageDiagnosticResponseOutput) Body() BodyDiagnosticSettingsResponsePtrOutput {
	return o.ApplyT(func(v HttpMessageDiagnosticResponse) *BodyDiagnosticSettingsResponse { return v.Body }).(BodyDiagnosticSettingsResponsePtrOutput)
}

// Array of HTTP Headers to log.
func (o HttpMessageDiagnosticResponseOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HttpMessageDiagnosticResponse) []string { return v.Headers }).(pulumi.StringArrayOutput)
}

type HttpMessageDiagnosticResponsePtrOutput struct{ *pulumi.OutputState }

func (HttpMessageDiagnosticResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpMessageDiagnosticResponse)(nil)).Elem()
}

func (o HttpMessageDiagnosticResponsePtrOutput) ToHttpMessageDiagnosticResponsePtrOutput() HttpMessageDiagnosticResponsePtrOutput {
	return o
}

func (o HttpMessageDiagnosticResponsePtrOutput) ToHttpMessageDiagnosticResponsePtrOutputWithContext(ctx context.Context) HttpMessageDiagnosticResponsePtrOutput {
	return o
}

func (o HttpMessageDiagnosticResponsePtrOutput) Elem() HttpMessageDiagnosticResponseOutput {
	return o.ApplyT(func(v *HttpMessageDiagnosticResponse) HttpMessageDiagnosticResponse { return *v }).(HttpMessageDiagnosticResponseOutput)
}

// Body logging settings.
func (o HttpMessageDiagnosticResponsePtrOutput) Body() BodyDiagnosticSettingsResponsePtrOutput {
	return o.ApplyT(func(v *HttpMessageDiagnosticResponse) *BodyDiagnosticSettingsResponse {
		if v == nil {
			return nil
		}
		return v.Body
	}).(BodyDiagnosticSettingsResponsePtrOutput)
}

// Array of HTTP Headers to log.
func (o HttpMessageDiagnosticResponsePtrOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HttpMessageDiagnosticResponse) []string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringArrayOutput)
}

// API OAuth2 Authentication settings details.
type OAuth2AuthenticationSettingsContract struct {
	// OAuth authorization server identifier.
	AuthorizationServerId *string `pulumi:"authorizationServerId"`
	// operations scope.
	Scope *string `pulumi:"scope"`
}

// OAuth2AuthenticationSettingsContractInput is an input type that accepts OAuth2AuthenticationSettingsContractArgs and OAuth2AuthenticationSettingsContractOutput values.
// You can construct a concrete instance of `OAuth2AuthenticationSettingsContractInput` via:
//
//          OAuth2AuthenticationSettingsContractArgs{...}
type OAuth2AuthenticationSettingsContractInput interface {
	pulumi.Input

	ToOAuth2AuthenticationSettingsContractOutput() OAuth2AuthenticationSettingsContractOutput
	ToOAuth2AuthenticationSettingsContractOutputWithContext(context.Context) OAuth2AuthenticationSettingsContractOutput
}

// API OAuth2 Authentication settings details.
type OAuth2AuthenticationSettingsContractArgs struct {
	// OAuth authorization server identifier.
	AuthorizationServerId pulumi.StringPtrInput `pulumi:"authorizationServerId"`
	// operations scope.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
}

func (OAuth2AuthenticationSettingsContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OAuth2AuthenticationSettingsContract)(nil)).Elem()
}

func (i OAuth2AuthenticationSettingsContractArgs) ToOAuth2AuthenticationSettingsContractOutput() OAuth2AuthenticationSettingsContractOutput {
	return i.ToOAuth2AuthenticationSettingsContractOutputWithContext(context.Background())
}

func (i OAuth2AuthenticationSettingsContractArgs) ToOAuth2AuthenticationSettingsContractOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuth2AuthenticationSettingsContractOutput)
}

func (i OAuth2AuthenticationSettingsContractArgs) ToOAuth2AuthenticationSettingsContractPtrOutput() OAuth2AuthenticationSettingsContractPtrOutput {
	return i.ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (i OAuth2AuthenticationSettingsContractArgs) ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuth2AuthenticationSettingsContractOutput).ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(ctx)
}

// OAuth2AuthenticationSettingsContractPtrInput is an input type that accepts OAuth2AuthenticationSettingsContractArgs, OAuth2AuthenticationSettingsContractPtr and OAuth2AuthenticationSettingsContractPtrOutput values.
// You can construct a concrete instance of `OAuth2AuthenticationSettingsContractPtrInput` via:
//
//          OAuth2AuthenticationSettingsContractArgs{...}
//
//  or:
//
//          nil
type OAuth2AuthenticationSettingsContractPtrInput interface {
	pulumi.Input

	ToOAuth2AuthenticationSettingsContractPtrOutput() OAuth2AuthenticationSettingsContractPtrOutput
	ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(context.Context) OAuth2AuthenticationSettingsContractPtrOutput
}

type oauth2AuthenticationSettingsContractPtrType OAuth2AuthenticationSettingsContractArgs

func OAuth2AuthenticationSettingsContractPtr(v *OAuth2AuthenticationSettingsContractArgs) OAuth2AuthenticationSettingsContractPtrInput {
	return (*oauth2AuthenticationSettingsContractPtrType)(v)
}

func (*oauth2AuthenticationSettingsContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OAuth2AuthenticationSettingsContract)(nil)).Elem()
}

func (i *oauth2AuthenticationSettingsContractPtrType) ToOAuth2AuthenticationSettingsContractPtrOutput() OAuth2AuthenticationSettingsContractPtrOutput {
	return i.ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (i *oauth2AuthenticationSettingsContractPtrType) ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuth2AuthenticationSettingsContractPtrOutput)
}

// API OAuth2 Authentication settings details.
type OAuth2AuthenticationSettingsContractResponse struct {
	// OAuth authorization server identifier.
	AuthorizationServerId *string `pulumi:"authorizationServerId"`
	// operations scope.
	Scope *string `pulumi:"scope"`
}

// API OAuth2 Authentication settings details.
type OAuth2AuthenticationSettingsContractResponseOutput struct{ *pulumi.OutputState }

func (OAuth2AuthenticationSettingsContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OAuth2AuthenticationSettingsContractResponse)(nil)).Elem()
}

func (o OAuth2AuthenticationSettingsContractResponseOutput) ToOAuth2AuthenticationSettingsContractResponseOutput() OAuth2AuthenticationSettingsContractResponseOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractResponseOutput) ToOAuth2AuthenticationSettingsContractResponseOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractResponseOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractResponseOutput) ToOAuth2AuthenticationSettingsContractResponsePtrOutput() OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return o.ToOAuth2AuthenticationSettingsContractResponsePtrOutputWithContext(context.Background())
}

func (o OAuth2AuthenticationSettingsContractResponseOutput) ToOAuth2AuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v OAuth2AuthenticationSettingsContractResponse) *OAuth2AuthenticationSettingsContractResponse {
		return &v
	}).(OAuth2AuthenticationSettingsContractResponsePtrOutput)
}

// OAuth authorization server identifier.
func (o OAuth2AuthenticationSettingsContractResponseOutput) AuthorizationServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthenticationSettingsContractResponse) *string { return v.AuthorizationServerId }).(pulumi.StringPtrOutput)
}

// operations scope.
func (o OAuth2AuthenticationSettingsContractResponseOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthenticationSettingsContractResponse) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type OAuth2AuthenticationSettingsContractResponsePtrOutput struct{ *pulumi.OutputState }

func (OAuth2AuthenticationSettingsContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OAuth2AuthenticationSettingsContractResponse)(nil)).Elem()
}

func (o OAuth2AuthenticationSettingsContractResponsePtrOutput) ToOAuth2AuthenticationSettingsContractResponsePtrOutput() OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractResponsePtrOutput) ToOAuth2AuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractResponsePtrOutput) Elem() OAuth2AuthenticationSettingsContractResponseOutput {
	return o.ApplyT(func(v *OAuth2AuthenticationSettingsContractResponse) OAuth2AuthenticationSettingsContractResponse {
		return *v
	}).(OAuth2AuthenticationSettingsContractResponseOutput)
}

// OAuth authorization server identifier.
func (o OAuth2AuthenticationSettingsContractResponsePtrOutput) AuthorizationServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth2AuthenticationSettingsContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationServerId
	}).(pulumi.StringPtrOutput)
}

// operations scope.
func (o OAuth2AuthenticationSettingsContractResponsePtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth2AuthenticationSettingsContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// API OAuth2 Authentication settings details.
type OpenIdAuthenticationSettingsContract struct {
	// How to send token to the server.
	BearerTokenSendingMethods []string `pulumi:"bearerTokenSendingMethods"`
	// OAuth authorization server identifier.
	OpenidProviderId *string `pulumi:"openidProviderId"`
}

// OpenIdAuthenticationSettingsContractInput is an input type that accepts OpenIdAuthenticationSettingsContractArgs and OpenIdAuthenticationSettingsContractOutput values.
// You can construct a concrete instance of `OpenIdAuthenticationSettingsContractInput` via:
//
//          OpenIdAuthenticationSettingsContractArgs{...}
type OpenIdAuthenticationSettingsContractInput interface {
	pulumi.Input

	ToOpenIdAuthenticationSettingsContractOutput() OpenIdAuthenticationSettingsContractOutput
	ToOpenIdAuthenticationSettingsContractOutputWithContext(context.Context) OpenIdAuthenticationSettingsContractOutput
}

// API OAuth2 Authentication settings details.
type OpenIdAuthenticationSettingsContractArgs struct {
	// How to send token to the server.
	BearerTokenSendingMethods pulumi.StringArrayInput `pulumi:"bearerTokenSendingMethods"`
	// OAuth authorization server identifier.
	OpenidProviderId pulumi.StringPtrInput `pulumi:"openidProviderId"`
}

func (OpenIdAuthenticationSettingsContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdAuthenticationSettingsContract)(nil)).Elem()
}

func (i OpenIdAuthenticationSettingsContractArgs) ToOpenIdAuthenticationSettingsContractOutput() OpenIdAuthenticationSettingsContractOutput {
	return i.ToOpenIdAuthenticationSettingsContractOutputWithContext(context.Background())
}

func (i OpenIdAuthenticationSettingsContractArgs) ToOpenIdAuthenticationSettingsContractOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdAuthenticationSettingsContractOutput)
}

func (i OpenIdAuthenticationSettingsContractArgs) ToOpenIdAuthenticationSettingsContractPtrOutput() OpenIdAuthenticationSettingsContractPtrOutput {
	return i.ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (i OpenIdAuthenticationSettingsContractArgs) ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdAuthenticationSettingsContractOutput).ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(ctx)
}

// OpenIdAuthenticationSettingsContractPtrInput is an input type that accepts OpenIdAuthenticationSettingsContractArgs, OpenIdAuthenticationSettingsContractPtr and OpenIdAuthenticationSettingsContractPtrOutput values.
// You can construct a concrete instance of `OpenIdAuthenticationSettingsContractPtrInput` via:
//
//          OpenIdAuthenticationSettingsContractArgs{...}
//
//  or:
//
//          nil
type OpenIdAuthenticationSettingsContractPtrInput interface {
	pulumi.Input

	ToOpenIdAuthenticationSettingsContractPtrOutput() OpenIdAuthenticationSettingsContractPtrOutput
	ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(context.Context) OpenIdAuthenticationSettingsContractPtrOutput
}

type openIdAuthenticationSettingsContractPtrType OpenIdAuthenticationSettingsContractArgs

func OpenIdAuthenticationSettingsContractPtr(v *OpenIdAuthenticationSettingsContractArgs) OpenIdAuthenticationSettingsContractPtrInput {
	return (*openIdAuthenticationSettingsContractPtrType)(v)
}

func (*openIdAuthenticationSettingsContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIdAuthenticationSettingsContract)(nil)).Elem()
}

func (i *openIdAuthenticationSettingsContractPtrType) ToOpenIdAuthenticationSettingsContractPtrOutput() OpenIdAuthenticationSettingsContractPtrOutput {
	return i.ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (i *openIdAuthenticationSettingsContractPtrType) ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdAuthenticationSettingsContractPtrOutput)
}

// API OAuth2 Authentication settings details.
type OpenIdAuthenticationSettingsContractResponse struct {
	// How to send token to the server.
	BearerTokenSendingMethods []string `pulumi:"bearerTokenSendingMethods"`
	// OAuth authorization server identifier.
	OpenidProviderId *string `pulumi:"openidProviderId"`
}

// API OAuth2 Authentication settings details.
type OpenIdAuthenticationSettingsContractResponseOutput struct{ *pulumi.OutputState }

func (OpenIdAuthenticationSettingsContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdAuthenticationSettingsContractResponse)(nil)).Elem()
}

func (o OpenIdAuthenticationSettingsContractResponseOutput) ToOpenIdAuthenticationSettingsContractResponseOutput() OpenIdAuthenticationSettingsContractResponseOutput {
	return o
}

func (o OpenIdAuthenticationSettingsContractResponseOutput) ToOpenIdAuthenticationSettingsContractResponseOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractResponseOutput {
	return o
}

func (o OpenIdAuthenticationSettingsContractResponseOutput) ToOpenIdAuthenticationSettingsContractResponsePtrOutput() OpenIdAuthenticationSettingsContractResponsePtrOutput {
	return o.ToOpenIdAuthenticationSettingsContractResponsePtrOutputWithContext(context.Background())
}

func (o OpenIdAuthenticationSettingsContractResponseOutput) ToOpenIdAuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v OpenIdAuthenticationSettingsContractResponse) *OpenIdAuthenticationSettingsContractResponse {
		return &v
	}).(OpenIdAuthenticationSettingsContractResponsePtrOutput)
}

// How to send token to the server.
func (o OpenIdAuthenticationSettingsContractResponseOutput) BearerTokenSendingMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OpenIdAuthenticationSettingsContractResponse) []string { return v.BearerTokenSendingMethods }).(pulumi.StringArrayOutput)
}

// OAuth authorization server identifier.
func (o OpenIdAuthenticationSettingsContractResponseOutput) OpenidProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIdAuthenticationSettingsContractResponse) *string { return v.OpenidProviderId }).(pulumi.StringPtrOutput)
}

type OpenIdAuthenticationSettingsContractResponsePtrOutput struct{ *pulumi.OutputState }

func (OpenIdAuthenticationSettingsContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIdAuthenticationSettingsContractResponse)(nil)).Elem()
}

func (o OpenIdAuthenticationSettingsContractResponsePtrOutput) ToOpenIdAuthenticationSettingsContractResponsePtrOutput() OpenIdAuthenticationSettingsContractResponsePtrOutput {
	return o
}

func (o OpenIdAuthenticationSettingsContractResponsePtrOutput) ToOpenIdAuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractResponsePtrOutput {
	return o
}

func (o OpenIdAuthenticationSettingsContractResponsePtrOutput) Elem() OpenIdAuthenticationSettingsContractResponseOutput {
	return o.ApplyT(func(v *OpenIdAuthenticationSettingsContractResponse) OpenIdAuthenticationSettingsContractResponse {
		return *v
	}).(OpenIdAuthenticationSettingsContractResponseOutput)
}

// How to send token to the server.
func (o OpenIdAuthenticationSettingsContractResponsePtrOutput) BearerTokenSendingMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OpenIdAuthenticationSettingsContractResponse) []string {
		if v == nil {
			return nil
		}
		return v.BearerTokenSendingMethods
	}).(pulumi.StringArrayOutput)
}

// OAuth authorization server identifier.
func (o OpenIdAuthenticationSettingsContractResponsePtrOutput) OpenidProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIdAuthenticationSettingsContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.OpenidProviderId
	}).(pulumi.StringPtrOutput)
}

// Operation parameters details.
type ParameterContract struct {
	// Default parameter value.
	DefaultValue *string `pulumi:"defaultValue"`
	// Parameter description.
	Description *string `pulumi:"description"`
	// Parameter name.
	Name string `pulumi:"name"`
	// Specifies whether parameter is required or not.
	Required *bool `pulumi:"required"`
	// Parameter type.
	Type string `pulumi:"type"`
	// Parameter values.
	Values []string `pulumi:"values"`
}

// ParameterContractInput is an input type that accepts ParameterContractArgs and ParameterContractOutput values.
// You can construct a concrete instance of `ParameterContractInput` via:
//
//          ParameterContractArgs{...}
type ParameterContractInput interface {
	pulumi.Input

	ToParameterContractOutput() ParameterContractOutput
	ToParameterContractOutputWithContext(context.Context) ParameterContractOutput
}

// Operation parameters details.
type ParameterContractArgs struct {
	// Default parameter value.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// Parameter description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Parameter name.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies whether parameter is required or not.
	Required pulumi.BoolPtrInput `pulumi:"required"`
	// Parameter type.
	Type pulumi.StringInput `pulumi:"type"`
	// Parameter values.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ParameterContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterContract)(nil)).Elem()
}

func (i ParameterContractArgs) ToParameterContractOutput() ParameterContractOutput {
	return i.ToParameterContractOutputWithContext(context.Background())
}

func (i ParameterContractArgs) ToParameterContractOutputWithContext(ctx context.Context) ParameterContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterContractOutput)
}

// ParameterContractArrayInput is an input type that accepts ParameterContractArray and ParameterContractArrayOutput values.
// You can construct a concrete instance of `ParameterContractArrayInput` via:
//
//          ParameterContractArray{ ParameterContractArgs{...} }
type ParameterContractArrayInput interface {
	pulumi.Input

	ToParameterContractArrayOutput() ParameterContractArrayOutput
	ToParameterContractArrayOutputWithContext(context.Context) ParameterContractArrayOutput
}

type ParameterContractArray []ParameterContractInput

func (ParameterContractArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterContract)(nil)).Elem()
}

func (i ParameterContractArray) ToParameterContractArrayOutput() ParameterContractArrayOutput {
	return i.ToParameterContractArrayOutputWithContext(context.Background())
}

func (i ParameterContractArray) ToParameterContractArrayOutputWithContext(ctx context.Context) ParameterContractArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterContractArrayOutput)
}

// Operation parameters details.
type ParameterContractResponse struct {
	// Default parameter value.
	DefaultValue *string `pulumi:"defaultValue"`
	// Parameter description.
	Description *string `pulumi:"description"`
	// Parameter name.
	Name string `pulumi:"name"`
	// Specifies whether parameter is required or not.
	Required *bool `pulumi:"required"`
	// Parameter type.
	Type string `pulumi:"type"`
	// Parameter values.
	Values []string `pulumi:"values"`
}

// Operation parameters details.
type ParameterContractResponseOutput struct{ *pulumi.OutputState }

func (ParameterContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterContractResponse)(nil)).Elem()
}

func (o ParameterContractResponseOutput) ToParameterContractResponseOutput() ParameterContractResponseOutput {
	return o
}

func (o ParameterContractResponseOutput) ToParameterContractResponseOutputWithContext(ctx context.Context) ParameterContractResponseOutput {
	return o
}

// Default parameter value.
func (o ParameterContractResponseOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterContractResponse) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// Parameter description.
func (o ParameterContractResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterContractResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Parameter name.
func (o ParameterContractResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterContractResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies whether parameter is required or not.
func (o ParameterContractResponseOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ParameterContractResponse) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

// Parameter type.
func (o ParameterContractResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterContractResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Parameter values.
func (o ParameterContractResponseOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ParameterContractResponse) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ParameterContractResponseArrayOutput struct{ *pulumi.OutputState }

func (ParameterContractResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterContractResponse)(nil)).Elem()
}

func (o ParameterContractResponseArrayOutput) ToParameterContractResponseArrayOutput() ParameterContractResponseArrayOutput {
	return o
}

func (o ParameterContractResponseArrayOutput) ToParameterContractResponseArrayOutputWithContext(ctx context.Context) ParameterContractResponseArrayOutput {
	return o
}

func (o ParameterContractResponseArrayOutput) Index(i pulumi.IntInput) ParameterContractResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ParameterContractResponse {
		return vs[0].([]ParameterContractResponse)[vs[1].(int)]
	}).(ParameterContractResponseOutput)
}

// Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
type PipelineDiagnosticSettings struct {
	// Diagnostic settings for request.
	Request *HttpMessageDiagnostic `pulumi:"request"`
	// Diagnostic settings for response.
	Response *HttpMessageDiagnostic `pulumi:"response"`
}

// PipelineDiagnosticSettingsInput is an input type that accepts PipelineDiagnosticSettingsArgs and PipelineDiagnosticSettingsOutput values.
// You can construct a concrete instance of `PipelineDiagnosticSettingsInput` via:
//
//          PipelineDiagnosticSettingsArgs{...}
type PipelineDiagnosticSettingsInput interface {
	pulumi.Input

	ToPipelineDiagnosticSettingsOutput() PipelineDiagnosticSettingsOutput
	ToPipelineDiagnosticSettingsOutputWithContext(context.Context) PipelineDiagnosticSettingsOutput
}

// Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
type PipelineDiagnosticSettingsArgs struct {
	// Diagnostic settings for request.
	Request HttpMessageDiagnosticPtrInput `pulumi:"request"`
	// Diagnostic settings for response.
	Response HttpMessageDiagnosticPtrInput `pulumi:"response"`
}

func (PipelineDiagnosticSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDiagnosticSettings)(nil)).Elem()
}

func (i PipelineDiagnosticSettingsArgs) ToPipelineDiagnosticSettingsOutput() PipelineDiagnosticSettingsOutput {
	return i.ToPipelineDiagnosticSettingsOutputWithContext(context.Background())
}

func (i PipelineDiagnosticSettingsArgs) ToPipelineDiagnosticSettingsOutputWithContext(ctx context.Context) PipelineDiagnosticSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDiagnosticSettingsOutput)
}

func (i PipelineDiagnosticSettingsArgs) ToPipelineDiagnosticSettingsPtrOutput() PipelineDiagnosticSettingsPtrOutput {
	return i.ToPipelineDiagnosticSettingsPtrOutputWithContext(context.Background())
}

func (i PipelineDiagnosticSettingsArgs) ToPipelineDiagnosticSettingsPtrOutputWithContext(ctx context.Context) PipelineDiagnosticSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDiagnosticSettingsOutput).ToPipelineDiagnosticSettingsPtrOutputWithContext(ctx)
}

// PipelineDiagnosticSettingsPtrInput is an input type that accepts PipelineDiagnosticSettingsArgs, PipelineDiagnosticSettingsPtr and PipelineDiagnosticSettingsPtrOutput values.
// You can construct a concrete instance of `PipelineDiagnosticSettingsPtrInput` via:
//
//          PipelineDiagnosticSettingsArgs{...}
//
//  or:
//
//          nil
type PipelineDiagnosticSettingsPtrInput interface {
	pulumi.Input

	ToPipelineDiagnosticSettingsPtrOutput() PipelineDiagnosticSettingsPtrOutput
	ToPipelineDiagnosticSettingsPtrOutputWithContext(context.Context) PipelineDiagnosticSettingsPtrOutput
}

type pipelineDiagnosticSettingsPtrType PipelineDiagnosticSettingsArgs

func PipelineDiagnosticSettingsPtr(v *PipelineDiagnosticSettingsArgs) PipelineDiagnosticSettingsPtrInput {
	return (*pipelineDiagnosticSettingsPtrType)(v)
}

func (*pipelineDiagnosticSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineDiagnosticSettings)(nil)).Elem()
}

func (i *pipelineDiagnosticSettingsPtrType) ToPipelineDiagnosticSettingsPtrOutput() PipelineDiagnosticSettingsPtrOutput {
	return i.ToPipelineDiagnosticSettingsPtrOutputWithContext(context.Background())
}

func (i *pipelineDiagnosticSettingsPtrType) ToPipelineDiagnosticSettingsPtrOutputWithContext(ctx context.Context) PipelineDiagnosticSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDiagnosticSettingsPtrOutput)
}

// Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
type PipelineDiagnosticSettingsResponse struct {
	// Diagnostic settings for request.
	Request *HttpMessageDiagnosticResponse `pulumi:"request"`
	// Diagnostic settings for response.
	Response *HttpMessageDiagnosticResponse `pulumi:"response"`
}

// Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
type PipelineDiagnosticSettingsResponseOutput struct{ *pulumi.OutputState }

func (PipelineDiagnosticSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDiagnosticSettingsResponse)(nil)).Elem()
}

func (o PipelineDiagnosticSettingsResponseOutput) ToPipelineDiagnosticSettingsResponseOutput() PipelineDiagnosticSettingsResponseOutput {
	return o
}

func (o PipelineDiagnosticSettingsResponseOutput) ToPipelineDiagnosticSettingsResponseOutputWithContext(ctx context.Context) PipelineDiagnosticSettingsResponseOutput {
	return o
}

func (o PipelineDiagnosticSettingsResponseOutput) ToPipelineDiagnosticSettingsResponsePtrOutput() PipelineDiagnosticSettingsResponsePtrOutput {
	return o.ToPipelineDiagnosticSettingsResponsePtrOutputWithContext(context.Background())
}

func (o PipelineDiagnosticSettingsResponseOutput) ToPipelineDiagnosticSettingsResponsePtrOutputWithContext(ctx context.Context) PipelineDiagnosticSettingsResponsePtrOutput {
	return o.ApplyT(func(v PipelineDiagnosticSettingsResponse) *PipelineDiagnosticSettingsResponse {
		return &v
	}).(PipelineDiagnosticSettingsResponsePtrOutput)
}

// Diagnostic settings for request.
func (o PipelineDiagnosticSettingsResponseOutput) Request() HttpMessageDiagnosticResponsePtrOutput {
	return o.ApplyT(func(v PipelineDiagnosticSettingsResponse) *HttpMessageDiagnosticResponse { return v.Request }).(HttpMessageDiagnosticResponsePtrOutput)
}

// Diagnostic settings for response.
func (o PipelineDiagnosticSettingsResponseOutput) Response() HttpMessageDiagnosticResponsePtrOutput {
	return o.ApplyT(func(v PipelineDiagnosticSettingsResponse) *HttpMessageDiagnosticResponse { return v.Response }).(HttpMessageDiagnosticResponsePtrOutput)
}

type PipelineDiagnosticSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PipelineDiagnosticSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineDiagnosticSettingsResponse)(nil)).Elem()
}

func (o PipelineDiagnosticSettingsResponsePtrOutput) ToPipelineDiagnosticSettingsResponsePtrOutput() PipelineDiagnosticSettingsResponsePtrOutput {
	return o
}

func (o PipelineDiagnosticSettingsResponsePtrOutput) ToPipelineDiagnosticSettingsResponsePtrOutputWithContext(ctx context.Context) PipelineDiagnosticSettingsResponsePtrOutput {
	return o
}

func (o PipelineDiagnosticSettingsResponsePtrOutput) Elem() PipelineDiagnosticSettingsResponseOutput {
	return o.ApplyT(func(v *PipelineDiagnosticSettingsResponse) PipelineDiagnosticSettingsResponse { return *v }).(PipelineDiagnosticSettingsResponseOutput)
}

// Diagnostic settings for request.
func (o PipelineDiagnosticSettingsResponsePtrOutput) Request() HttpMessageDiagnosticResponsePtrOutput {
	return o.ApplyT(func(v *PipelineDiagnosticSettingsResponse) *HttpMessageDiagnosticResponse {
		if v == nil {
			return nil
		}
		return v.Request
	}).(HttpMessageDiagnosticResponsePtrOutput)
}

// Diagnostic settings for response.
func (o PipelineDiagnosticSettingsResponsePtrOutput) Response() HttpMessageDiagnosticResponsePtrOutput {
	return o.ApplyT(func(v *PipelineDiagnosticSettingsResponse) *HttpMessageDiagnosticResponse {
		if v == nil {
			return nil
		}
		return v.Response
	}).(HttpMessageDiagnosticResponsePtrOutput)
}

// Operation request/response representation details.
type RepresentationContract struct {
	// Specifies a registered or custom content type for this representation, e.g. application/xml.
	ContentType string `pulumi:"contentType"`
	// Collection of form parameters. Required if 'contentType' value is either 'application/x-www-form-urlencoded' or 'multipart/form-data'..
	FormParameters []ParameterContract `pulumi:"formParameters"`
	// An example of the representation.
	Sample *string `pulumi:"sample"`
	// Schema identifier. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
	SchemaId *string `pulumi:"schemaId"`
	// Type name defined by the schema. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
	TypeName *string `pulumi:"typeName"`
}

// RepresentationContractInput is an input type that accepts RepresentationContractArgs and RepresentationContractOutput values.
// You can construct a concrete instance of `RepresentationContractInput` via:
//
//          RepresentationContractArgs{...}
type RepresentationContractInput interface {
	pulumi.Input

	ToRepresentationContractOutput() RepresentationContractOutput
	ToRepresentationContractOutputWithContext(context.Context) RepresentationContractOutput
}

// Operation request/response representation details.
type RepresentationContractArgs struct {
	// Specifies a registered or custom content type for this representation, e.g. application/xml.
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// Collection of form parameters. Required if 'contentType' value is either 'application/x-www-form-urlencoded' or 'multipart/form-data'..
	FormParameters ParameterContractArrayInput `pulumi:"formParameters"`
	// An example of the representation.
	Sample pulumi.StringPtrInput `pulumi:"sample"`
	// Schema identifier. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
	SchemaId pulumi.StringPtrInput `pulumi:"schemaId"`
	// Type name defined by the schema. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
}

func (RepresentationContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepresentationContract)(nil)).Elem()
}

func (i RepresentationContractArgs) ToRepresentationContractOutput() RepresentationContractOutput {
	return i.ToRepresentationContractOutputWithContext(context.Background())
}

func (i RepresentationContractArgs) ToRepresentationContractOutputWithContext(ctx context.Context) RepresentationContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepresentationContractOutput)
}

// RepresentationContractArrayInput is an input type that accepts RepresentationContractArray and RepresentationContractArrayOutput values.
// You can construct a concrete instance of `RepresentationContractArrayInput` via:
//
//          RepresentationContractArray{ RepresentationContractArgs{...} }
type RepresentationContractArrayInput interface {
	pulumi.Input

	ToRepresentationContractArrayOutput() RepresentationContractArrayOutput
	ToRepresentationContractArrayOutputWithContext(context.Context) RepresentationContractArrayOutput
}

type RepresentationContractArray []RepresentationContractInput

func (RepresentationContractArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepresentationContract)(nil)).Elem()
}

func (i RepresentationContractArray) ToRepresentationContractArrayOutput() RepresentationContractArrayOutput {
	return i.ToRepresentationContractArrayOutputWithContext(context.Background())
}

func (i RepresentationContractArray) ToRepresentationContractArrayOutputWithContext(ctx context.Context) RepresentationContractArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepresentationContractArrayOutput)
}

// Operation request/response representation details.
type RepresentationContractResponse struct {
	// Specifies a registered or custom content type for this representation, e.g. application/xml.
	ContentType string `pulumi:"contentType"`
	// Collection of form parameters. Required if 'contentType' value is either 'application/x-www-form-urlencoded' or 'multipart/form-data'..
	FormParameters []ParameterContractResponse `pulumi:"formParameters"`
	// An example of the representation.
	Sample *string `pulumi:"sample"`
	// Schema identifier. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
	SchemaId *string `pulumi:"schemaId"`
	// Type name defined by the schema. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
	TypeName *string `pulumi:"typeName"`
}

// Operation request/response representation details.
type RepresentationContractResponseOutput struct{ *pulumi.OutputState }

func (RepresentationContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepresentationContractResponse)(nil)).Elem()
}

func (o RepresentationContractResponseOutput) ToRepresentationContractResponseOutput() RepresentationContractResponseOutput {
	return o
}

func (o RepresentationContractResponseOutput) ToRepresentationContractResponseOutputWithContext(ctx context.Context) RepresentationContractResponseOutput {
	return o
}

// Specifies a registered or custom content type for this representation, e.g. application/xml.
func (o RepresentationContractResponseOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v RepresentationContractResponse) string { return v.ContentType }).(pulumi.StringOutput)
}

// Collection of form parameters. Required if 'contentType' value is either 'application/x-www-form-urlencoded' or 'multipart/form-data'..
func (o RepresentationContractResponseOutput) FormParameters() ParameterContractResponseArrayOutput {
	return o.ApplyT(func(v RepresentationContractResponse) []ParameterContractResponse { return v.FormParameters }).(ParameterContractResponseArrayOutput)
}

// An example of the representation.
func (o RepresentationContractResponseOutput) Sample() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepresentationContractResponse) *string { return v.Sample }).(pulumi.StringPtrOutput)
}

// Schema identifier. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
func (o RepresentationContractResponseOutput) SchemaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepresentationContractResponse) *string { return v.SchemaId }).(pulumi.StringPtrOutput)
}

// Type name defined by the schema. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
func (o RepresentationContractResponseOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepresentationContractResponse) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

type RepresentationContractResponseArrayOutput struct{ *pulumi.OutputState }

func (RepresentationContractResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepresentationContractResponse)(nil)).Elem()
}

func (o RepresentationContractResponseArrayOutput) ToRepresentationContractResponseArrayOutput() RepresentationContractResponseArrayOutput {
	return o
}

func (o RepresentationContractResponseArrayOutput) ToRepresentationContractResponseArrayOutputWithContext(ctx context.Context) RepresentationContractResponseArrayOutput {
	return o
}

func (o RepresentationContractResponseArrayOutput) Index(i pulumi.IntInput) RepresentationContractResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepresentationContractResponse {
		return vs[0].([]RepresentationContractResponse)[vs[1].(int)]
	}).(RepresentationContractResponseOutput)
}

// Operation request details.
type RequestContract struct {
	// Operation request description.
	Description *string `pulumi:"description"`
	// Collection of operation request headers.
	Headers []ParameterContract `pulumi:"headers"`
	// Collection of operation request query parameters.
	QueryParameters []ParameterContract `pulumi:"queryParameters"`
	// Collection of operation request representations.
	Representations []RepresentationContract `pulumi:"representations"`
}

// RequestContractInput is an input type that accepts RequestContractArgs and RequestContractOutput values.
// You can construct a concrete instance of `RequestContractInput` via:
//
//          RequestContractArgs{...}
type RequestContractInput interface {
	pulumi.Input

	ToRequestContractOutput() RequestContractOutput
	ToRequestContractOutputWithContext(context.Context) RequestContractOutput
}

// Operation request details.
type RequestContractArgs struct {
	// Operation request description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Collection of operation request headers.
	Headers ParameterContractArrayInput `pulumi:"headers"`
	// Collection of operation request query parameters.
	QueryParameters ParameterContractArrayInput `pulumi:"queryParameters"`
	// Collection of operation request representations.
	Representations RepresentationContractArrayInput `pulumi:"representations"`
}

func (RequestContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestContract)(nil)).Elem()
}

func (i RequestContractArgs) ToRequestContractOutput() RequestContractOutput {
	return i.ToRequestContractOutputWithContext(context.Background())
}

func (i RequestContractArgs) ToRequestContractOutputWithContext(ctx context.Context) RequestContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestContractOutput)
}

func (i RequestContractArgs) ToRequestContractPtrOutput() RequestContractPtrOutput {
	return i.ToRequestContractPtrOutputWithContext(context.Background())
}

func (i RequestContractArgs) ToRequestContractPtrOutputWithContext(ctx context.Context) RequestContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestContractOutput).ToRequestContractPtrOutputWithContext(ctx)
}

// RequestContractPtrInput is an input type that accepts RequestContractArgs, RequestContractPtr and RequestContractPtrOutput values.
// You can construct a concrete instance of `RequestContractPtrInput` via:
//
//          RequestContractArgs{...}
//
//  or:
//
//          nil
type RequestContractPtrInput interface {
	pulumi.Input

	ToRequestContractPtrOutput() RequestContractPtrOutput
	ToRequestContractPtrOutputWithContext(context.Context) RequestContractPtrOutput
}

type requestContractPtrType RequestContractArgs

func RequestContractPtr(v *RequestContractArgs) RequestContractPtrInput {
	return (*requestContractPtrType)(v)
}

func (*requestContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestContract)(nil)).Elem()
}

func (i *requestContractPtrType) ToRequestContractPtrOutput() RequestContractPtrOutput {
	return i.ToRequestContractPtrOutputWithContext(context.Background())
}

func (i *requestContractPtrType) ToRequestContractPtrOutputWithContext(ctx context.Context) RequestContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestContractPtrOutput)
}

// Operation request details.
type RequestContractResponse struct {
	// Operation request description.
	Description *string `pulumi:"description"`
	// Collection of operation request headers.
	Headers []ParameterContractResponse `pulumi:"headers"`
	// Collection of operation request query parameters.
	QueryParameters []ParameterContractResponse `pulumi:"queryParameters"`
	// Collection of operation request representations.
	Representations []RepresentationContractResponse `pulumi:"representations"`
}

// Operation request details.
type RequestContractResponseOutput struct{ *pulumi.OutputState }

func (RequestContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestContractResponse)(nil)).Elem()
}

func (o RequestContractResponseOutput) ToRequestContractResponseOutput() RequestContractResponseOutput {
	return o
}

func (o RequestContractResponseOutput) ToRequestContractResponseOutputWithContext(ctx context.Context) RequestContractResponseOutput {
	return o
}

func (o RequestContractResponseOutput) ToRequestContractResponsePtrOutput() RequestContractResponsePtrOutput {
	return o.ToRequestContractResponsePtrOutputWithContext(context.Background())
}

func (o RequestContractResponseOutput) ToRequestContractResponsePtrOutputWithContext(ctx context.Context) RequestContractResponsePtrOutput {
	return o.ApplyT(func(v RequestContractResponse) *RequestContractResponse {
		return &v
	}).(RequestContractResponsePtrOutput)
}

// Operation request description.
func (o RequestContractResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestContractResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Collection of operation request headers.
func (o RequestContractResponseOutput) Headers() ParameterContractResponseArrayOutput {
	return o.ApplyT(func(v RequestContractResponse) []ParameterContractResponse { return v.Headers }).(ParameterContractResponseArrayOutput)
}

// Collection of operation request query parameters.
func (o RequestContractResponseOutput) QueryParameters() ParameterContractResponseArrayOutput {
	return o.ApplyT(func(v RequestContractResponse) []ParameterContractResponse { return v.QueryParameters }).(ParameterContractResponseArrayOutput)
}

// Collection of operation request representations.
func (o RequestContractResponseOutput) Representations() RepresentationContractResponseArrayOutput {
	return o.ApplyT(func(v RequestContractResponse) []RepresentationContractResponse { return v.Representations }).(RepresentationContractResponseArrayOutput)
}

type RequestContractResponsePtrOutput struct{ *pulumi.OutputState }

func (RequestContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestContractResponse)(nil)).Elem()
}

func (o RequestContractResponsePtrOutput) ToRequestContractResponsePtrOutput() RequestContractResponsePtrOutput {
	return o
}

func (o RequestContractResponsePtrOutput) ToRequestContractResponsePtrOutputWithContext(ctx context.Context) RequestContractResponsePtrOutput {
	return o
}

func (o RequestContractResponsePtrOutput) Elem() RequestContractResponseOutput {
	return o.ApplyT(func(v *RequestContractResponse) RequestContractResponse { return *v }).(RequestContractResponseOutput)
}

// Operation request description.
func (o RequestContractResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Collection of operation request headers.
func (o RequestContractResponsePtrOutput) Headers() ParameterContractResponseArrayOutput {
	return o.ApplyT(func(v *RequestContractResponse) []ParameterContractResponse {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(ParameterContractResponseArrayOutput)
}

// Collection of operation request query parameters.
func (o RequestContractResponsePtrOutput) QueryParameters() ParameterContractResponseArrayOutput {
	return o.ApplyT(func(v *RequestContractResponse) []ParameterContractResponse {
		if v == nil {
			return nil
		}
		return v.QueryParameters
	}).(ParameterContractResponseArrayOutput)
}

// Collection of operation request representations.
func (o RequestContractResponsePtrOutput) Representations() RepresentationContractResponseArrayOutput {
	return o.ApplyT(func(v *RequestContractResponse) []RepresentationContractResponse {
		if v == nil {
			return nil
		}
		return v.Representations
	}).(RepresentationContractResponseArrayOutput)
}

// Resource location data properties.
type ResourceLocationDataContract struct {
	// The city or locality where the resource is located.
	City *string `pulumi:"city"`
	// The country or region where the resource is located.
	CountryOrRegion *string `pulumi:"countryOrRegion"`
	// The district, state, or province where the resource is located.
	District *string `pulumi:"district"`
	// A canonical name for the geographic or physical location.
	Name string `pulumi:"name"`
}

// ResourceLocationDataContractInput is an input type that accepts ResourceLocationDataContractArgs and ResourceLocationDataContractOutput values.
// You can construct a concrete instance of `ResourceLocationDataContractInput` via:
//
//          ResourceLocationDataContractArgs{...}
type ResourceLocationDataContractInput interface {
	pulumi.Input

	ToResourceLocationDataContractOutput() ResourceLocationDataContractOutput
	ToResourceLocationDataContractOutputWithContext(context.Context) ResourceLocationDataContractOutput
}

// Resource location data properties.
type ResourceLocationDataContractArgs struct {
	// The city or locality where the resource is located.
	City pulumi.StringPtrInput `pulumi:"city"`
	// The country or region where the resource is located.
	CountryOrRegion pulumi.StringPtrInput `pulumi:"countryOrRegion"`
	// The district, state, or province where the resource is located.
	District pulumi.StringPtrInput `pulumi:"district"`
	// A canonical name for the geographic or physical location.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ResourceLocationDataContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceLocationDataContract)(nil)).Elem()
}

func (i ResourceLocationDataContractArgs) ToResourceLocationDataContractOutput() ResourceLocationDataContractOutput {
	return i.ToResourceLocationDataContractOutputWithContext(context.Background())
}

func (i ResourceLocationDataContractArgs) ToResourceLocationDataContractOutputWithContext(ctx context.Context) ResourceLocationDataContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceLocationDataContractOutput)
}

func (i ResourceLocationDataContractArgs) ToResourceLocationDataContractPtrOutput() ResourceLocationDataContractPtrOutput {
	return i.ToResourceLocationDataContractPtrOutputWithContext(context.Background())
}

func (i ResourceLocationDataContractArgs) ToResourceLocationDataContractPtrOutputWithContext(ctx context.Context) ResourceLocationDataContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceLocationDataContractOutput).ToResourceLocationDataContractPtrOutputWithContext(ctx)
}

// ResourceLocationDataContractPtrInput is an input type that accepts ResourceLocationDataContractArgs, ResourceLocationDataContractPtr and ResourceLocationDataContractPtrOutput values.
// You can construct a concrete instance of `ResourceLocationDataContractPtrInput` via:
//
//          ResourceLocationDataContractArgs{...}
//
//  or:
//
//          nil
type ResourceLocationDataContractPtrInput interface {
	pulumi.Input

	ToResourceLocationDataContractPtrOutput() ResourceLocationDataContractPtrOutput
	ToResourceLocationDataContractPtrOutputWithContext(context.Context) ResourceLocationDataContractPtrOutput
}

type resourceLocationDataContractPtrType ResourceLocationDataContractArgs

func ResourceLocationDataContractPtr(v *ResourceLocationDataContractArgs) ResourceLocationDataContractPtrInput {
	return (*resourceLocationDataContractPtrType)(v)
}

func (*resourceLocationDataContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceLocationDataContract)(nil)).Elem()
}

func (i *resourceLocationDataContractPtrType) ToResourceLocationDataContractPtrOutput() ResourceLocationDataContractPtrOutput {
	return i.ToResourceLocationDataContractPtrOutputWithContext(context.Background())
}

func (i *resourceLocationDataContractPtrType) ToResourceLocationDataContractPtrOutputWithContext(ctx context.Context) ResourceLocationDataContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceLocationDataContractPtrOutput)
}

// Resource location data properties.
type ResourceLocationDataContractResponse struct {
	// The city or locality where the resource is located.
	City *string `pulumi:"city"`
	// The country or region where the resource is located.
	CountryOrRegion *string `pulumi:"countryOrRegion"`
	// The district, state, or province where the resource is located.
	District *string `pulumi:"district"`
	// A canonical name for the geographic or physical location.
	Name string `pulumi:"name"`
}

// Resource location data properties.
type ResourceLocationDataContractResponseOutput struct{ *pulumi.OutputState }

func (ResourceLocationDataContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceLocationDataContractResponse)(nil)).Elem()
}

func (o ResourceLocationDataContractResponseOutput) ToResourceLocationDataContractResponseOutput() ResourceLocationDataContractResponseOutput {
	return o
}

func (o ResourceLocationDataContractResponseOutput) ToResourceLocationDataContractResponseOutputWithContext(ctx context.Context) ResourceLocationDataContractResponseOutput {
	return o
}

func (o ResourceLocationDataContractResponseOutput) ToResourceLocationDataContractResponsePtrOutput() ResourceLocationDataContractResponsePtrOutput {
	return o.ToResourceLocationDataContractResponsePtrOutputWithContext(context.Background())
}

func (o ResourceLocationDataContractResponseOutput) ToResourceLocationDataContractResponsePtrOutputWithContext(ctx context.Context) ResourceLocationDataContractResponsePtrOutput {
	return o.ApplyT(func(v ResourceLocationDataContractResponse) *ResourceLocationDataContractResponse {
		return &v
	}).(ResourceLocationDataContractResponsePtrOutput)
}

// The city or locality where the resource is located.
func (o ResourceLocationDataContractResponseOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceLocationDataContractResponse) *string { return v.City }).(pulumi.StringPtrOutput)
}

// The country or region where the resource is located.
func (o ResourceLocationDataContractResponseOutput) CountryOrRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceLocationDataContractResponse) *string { return v.CountryOrRegion }).(pulumi.StringPtrOutput)
}

// The district, state, or province where the resource is located.
func (o ResourceLocationDataContractResponseOutput) District() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceLocationDataContractResponse) *string { return v.District }).(pulumi.StringPtrOutput)
}

// A canonical name for the geographic or physical location.
func (o ResourceLocationDataContractResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceLocationDataContractResponse) string { return v.Name }).(pulumi.StringOutput)
}

type ResourceLocationDataContractResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceLocationDataContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceLocationDataContractResponse)(nil)).Elem()
}

func (o ResourceLocationDataContractResponsePtrOutput) ToResourceLocationDataContractResponsePtrOutput() ResourceLocationDataContractResponsePtrOutput {
	return o
}

func (o ResourceLocationDataContractResponsePtrOutput) ToResourceLocationDataContractResponsePtrOutputWithContext(ctx context.Context) ResourceLocationDataContractResponsePtrOutput {
	return o
}

func (o ResourceLocationDataContractResponsePtrOutput) Elem() ResourceLocationDataContractResponseOutput {
	return o.ApplyT(func(v *ResourceLocationDataContractResponse) ResourceLocationDataContractResponse { return *v }).(ResourceLocationDataContractResponseOutput)
}

// The city or locality where the resource is located.
func (o ResourceLocationDataContractResponsePtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceLocationDataContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

// The country or region where the resource is located.
func (o ResourceLocationDataContractResponsePtrOutput) CountryOrRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceLocationDataContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.CountryOrRegion
	}).(pulumi.StringPtrOutput)
}

// The district, state, or province where the resource is located.
func (o ResourceLocationDataContractResponsePtrOutput) District() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceLocationDataContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.District
	}).(pulumi.StringPtrOutput)
}

// A canonical name for the geographic or physical location.
func (o ResourceLocationDataContractResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceLocationDataContractResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Operation response details.
type ResponseContract struct {
	// Operation response description.
	Description *string `pulumi:"description"`
	// Collection of operation response headers.
	Headers []ParameterContract `pulumi:"headers"`
	// Collection of operation response representations.
	Representations []RepresentationContract `pulumi:"representations"`
	// Operation response HTTP status code.
	StatusCode int `pulumi:"statusCode"`
}

// ResponseContractInput is an input type that accepts ResponseContractArgs and ResponseContractOutput values.
// You can construct a concrete instance of `ResponseContractInput` via:
//
//          ResponseContractArgs{...}
type ResponseContractInput interface {
	pulumi.Input

	ToResponseContractOutput() ResponseContractOutput
	ToResponseContractOutputWithContext(context.Context) ResponseContractOutput
}

// Operation response details.
type ResponseContractArgs struct {
	// Operation response description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Collection of operation response headers.
	Headers ParameterContractArrayInput `pulumi:"headers"`
	// Collection of operation response representations.
	Representations RepresentationContractArrayInput `pulumi:"representations"`
	// Operation response HTTP status code.
	StatusCode pulumi.IntInput `pulumi:"statusCode"`
}

func (ResponseContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseContract)(nil)).Elem()
}

func (i ResponseContractArgs) ToResponseContractOutput() ResponseContractOutput {
	return i.ToResponseContractOutputWithContext(context.Background())
}

func (i ResponseContractArgs) ToResponseContractOutputWithContext(ctx context.Context) ResponseContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseContractOutput)
}

// ResponseContractArrayInput is an input type that accepts ResponseContractArray and ResponseContractArrayOutput values.
// You can construct a concrete instance of `ResponseContractArrayInput` via:
//
//          ResponseContractArray{ ResponseContractArgs{...} }
type ResponseContractArrayInput interface {
	pulumi.Input

	ToResponseContractArrayOutput() ResponseContractArrayOutput
	ToResponseContractArrayOutputWithContext(context.Context) ResponseContractArrayOutput
}

type ResponseContractArray []ResponseContractInput

func (ResponseContractArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponseContract)(nil)).Elem()
}

func (i ResponseContractArray) ToResponseContractArrayOutput() ResponseContractArrayOutput {
	return i.ToResponseContractArrayOutputWithContext(context.Background())
}

func (i ResponseContractArray) ToResponseContractArrayOutputWithContext(ctx context.Context) ResponseContractArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseContractArrayOutput)
}

// Operation response details.
type ResponseContractResponse struct {
	// Operation response description.
	Description *string `pulumi:"description"`
	// Collection of operation response headers.
	Headers []ParameterContractResponse `pulumi:"headers"`
	// Collection of operation response representations.
	Representations []RepresentationContractResponse `pulumi:"representations"`
	// Operation response HTTP status code.
	StatusCode int `pulumi:"statusCode"`
}

// Operation response details.
type ResponseContractResponseOutput struct{ *pulumi.OutputState }

func (ResponseContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseContractResponse)(nil)).Elem()
}

func (o ResponseContractResponseOutput) ToResponseContractResponseOutput() ResponseContractResponseOutput {
	return o
}

func (o ResponseContractResponseOutput) ToResponseContractResponseOutputWithContext(ctx context.Context) ResponseContractResponseOutput {
	return o
}

// Operation response description.
func (o ResponseContractResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponseContractResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Collection of operation response headers.
func (o ResponseContractResponseOutput) Headers() ParameterContractResponseArrayOutput {
	return o.ApplyT(func(v ResponseContractResponse) []ParameterContractResponse { return v.Headers }).(ParameterContractResponseArrayOutput)
}

// Collection of operation response representations.
func (o ResponseContractResponseOutput) Representations() RepresentationContractResponseArrayOutput {
	return o.ApplyT(func(v ResponseContractResponse) []RepresentationContractResponse { return v.Representations }).(RepresentationContractResponseArrayOutput)
}

// Operation response HTTP status code.
func (o ResponseContractResponseOutput) StatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v ResponseContractResponse) int { return v.StatusCode }).(pulumi.IntOutput)
}

type ResponseContractResponseArrayOutput struct{ *pulumi.OutputState }

func (ResponseContractResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponseContractResponse)(nil)).Elem()
}

func (o ResponseContractResponseArrayOutput) ToResponseContractResponseArrayOutput() ResponseContractResponseArrayOutput {
	return o
}

func (o ResponseContractResponseArrayOutput) ToResponseContractResponseArrayOutputWithContext(ctx context.Context) ResponseContractResponseArrayOutput {
	return o
}

func (o ResponseContractResponseArrayOutput) Index(i pulumi.IntInput) ResponseContractResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponseContractResponse {
		return vs[0].([]ResponseContractResponse)[vs[1].(int)]
	}).(ResponseContractResponseOutput)
}

// Sampling settings for Diagnostic.
type SamplingSettings struct {
	// Rate of sampling for fixed-rate sampling.
	Percentage *float64 `pulumi:"percentage"`
	// Sampling type.
	SamplingType *string `pulumi:"samplingType"`
}

// SamplingSettingsInput is an input type that accepts SamplingSettingsArgs and SamplingSettingsOutput values.
// You can construct a concrete instance of `SamplingSettingsInput` via:
//
//          SamplingSettingsArgs{...}
type SamplingSettingsInput interface {
	pulumi.Input

	ToSamplingSettingsOutput() SamplingSettingsOutput
	ToSamplingSettingsOutputWithContext(context.Context) SamplingSettingsOutput
}

// Sampling settings for Diagnostic.
type SamplingSettingsArgs struct {
	// Rate of sampling for fixed-rate sampling.
	Percentage pulumi.Float64PtrInput `pulumi:"percentage"`
	// Sampling type.
	SamplingType pulumi.StringPtrInput `pulumi:"samplingType"`
}

func (SamplingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SamplingSettings)(nil)).Elem()
}

func (i SamplingSettingsArgs) ToSamplingSettingsOutput() SamplingSettingsOutput {
	return i.ToSamplingSettingsOutputWithContext(context.Background())
}

func (i SamplingSettingsArgs) ToSamplingSettingsOutputWithContext(ctx context.Context) SamplingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamplingSettingsOutput)
}

func (i SamplingSettingsArgs) ToSamplingSettingsPtrOutput() SamplingSettingsPtrOutput {
	return i.ToSamplingSettingsPtrOutputWithContext(context.Background())
}

func (i SamplingSettingsArgs) ToSamplingSettingsPtrOutputWithContext(ctx context.Context) SamplingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamplingSettingsOutput).ToSamplingSettingsPtrOutputWithContext(ctx)
}

// SamplingSettingsPtrInput is an input type that accepts SamplingSettingsArgs, SamplingSettingsPtr and SamplingSettingsPtrOutput values.
// You can construct a concrete instance of `SamplingSettingsPtrInput` via:
//
//          SamplingSettingsArgs{...}
//
//  or:
//
//          nil
type SamplingSettingsPtrInput interface {
	pulumi.Input

	ToSamplingSettingsPtrOutput() SamplingSettingsPtrOutput
	ToSamplingSettingsPtrOutputWithContext(context.Context) SamplingSettingsPtrOutput
}

type samplingSettingsPtrType SamplingSettingsArgs

func SamplingSettingsPtr(v *SamplingSettingsArgs) SamplingSettingsPtrInput {
	return (*samplingSettingsPtrType)(v)
}

func (*samplingSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SamplingSettings)(nil)).Elem()
}

func (i *samplingSettingsPtrType) ToSamplingSettingsPtrOutput() SamplingSettingsPtrOutput {
	return i.ToSamplingSettingsPtrOutputWithContext(context.Background())
}

func (i *samplingSettingsPtrType) ToSamplingSettingsPtrOutputWithContext(ctx context.Context) SamplingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamplingSettingsPtrOutput)
}

// Sampling settings for Diagnostic.
type SamplingSettingsResponse struct {
	// Rate of sampling for fixed-rate sampling.
	Percentage *float64 `pulumi:"percentage"`
	// Sampling type.
	SamplingType *string `pulumi:"samplingType"`
}

// Sampling settings for Diagnostic.
type SamplingSettingsResponseOutput struct{ *pulumi.OutputState }

func (SamplingSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamplingSettingsResponse)(nil)).Elem()
}

func (o SamplingSettingsResponseOutput) ToSamplingSettingsResponseOutput() SamplingSettingsResponseOutput {
	return o
}

func (o SamplingSettingsResponseOutput) ToSamplingSettingsResponseOutputWithContext(ctx context.Context) SamplingSettingsResponseOutput {
	return o
}

func (o SamplingSettingsResponseOutput) ToSamplingSettingsResponsePtrOutput() SamplingSettingsResponsePtrOutput {
	return o.ToSamplingSettingsResponsePtrOutputWithContext(context.Background())
}

func (o SamplingSettingsResponseOutput) ToSamplingSettingsResponsePtrOutputWithContext(ctx context.Context) SamplingSettingsResponsePtrOutput {
	return o.ApplyT(func(v SamplingSettingsResponse) *SamplingSettingsResponse {
		return &v
	}).(SamplingSettingsResponsePtrOutput)
}

// Rate of sampling for fixed-rate sampling.
func (o SamplingSettingsResponseOutput) Percentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SamplingSettingsResponse) *float64 { return v.Percentage }).(pulumi.Float64PtrOutput)
}

// Sampling type.
func (o SamplingSettingsResponseOutput) SamplingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamplingSettingsResponse) *string { return v.SamplingType }).(pulumi.StringPtrOutput)
}

type SamplingSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (SamplingSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SamplingSettingsResponse)(nil)).Elem()
}

func (o SamplingSettingsResponsePtrOutput) ToSamplingSettingsResponsePtrOutput() SamplingSettingsResponsePtrOutput {
	return o
}

func (o SamplingSettingsResponsePtrOutput) ToSamplingSettingsResponsePtrOutputWithContext(ctx context.Context) SamplingSettingsResponsePtrOutput {
	return o
}

func (o SamplingSettingsResponsePtrOutput) Elem() SamplingSettingsResponseOutput {
	return o.ApplyT(func(v *SamplingSettingsResponse) SamplingSettingsResponse { return *v }).(SamplingSettingsResponseOutput)
}

// Rate of sampling for fixed-rate sampling.
func (o SamplingSettingsResponsePtrOutput) Percentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SamplingSettingsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Percentage
	}).(pulumi.Float64PtrOutput)
}

// Sampling type.
func (o SamplingSettingsResponsePtrOutput) SamplingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SamplingSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SamplingType
	}).(pulumi.StringPtrOutput)
}

// Subscription key parameter names details.
type SubscriptionKeyParameterNamesContract struct {
	// Subscription key header name.
	Header *string `pulumi:"header"`
	// Subscription key query string parameter name.
	Query *string `pulumi:"query"`
}

// SubscriptionKeyParameterNamesContractInput is an input type that accepts SubscriptionKeyParameterNamesContractArgs and SubscriptionKeyParameterNamesContractOutput values.
// You can construct a concrete instance of `SubscriptionKeyParameterNamesContractInput` via:
//
//          SubscriptionKeyParameterNamesContractArgs{...}
type SubscriptionKeyParameterNamesContractInput interface {
	pulumi.Input

	ToSubscriptionKeyParameterNamesContractOutput() SubscriptionKeyParameterNamesContractOutput
	ToSubscriptionKeyParameterNamesContractOutputWithContext(context.Context) SubscriptionKeyParameterNamesContractOutput
}

// Subscription key parameter names details.
type SubscriptionKeyParameterNamesContractArgs struct {
	// Subscription key header name.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Subscription key query string parameter name.
	Query pulumi.StringPtrInput `pulumi:"query"`
}

func (SubscriptionKeyParameterNamesContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionKeyParameterNamesContract)(nil)).Elem()
}

func (i SubscriptionKeyParameterNamesContractArgs) ToSubscriptionKeyParameterNamesContractOutput() SubscriptionKeyParameterNamesContractOutput {
	return i.ToSubscriptionKeyParameterNamesContractOutputWithContext(context.Background())
}

func (i SubscriptionKeyParameterNamesContractArgs) ToSubscriptionKeyParameterNamesContractOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionKeyParameterNamesContractOutput)
}

func (i SubscriptionKeyParameterNamesContractArgs) ToSubscriptionKeyParameterNamesContractPtrOutput() SubscriptionKeyParameterNamesContractPtrOutput {
	return i.ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(context.Background())
}

func (i SubscriptionKeyParameterNamesContractArgs) ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionKeyParameterNamesContractOutput).ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(ctx)
}

// SubscriptionKeyParameterNamesContractPtrInput is an input type that accepts SubscriptionKeyParameterNamesContractArgs, SubscriptionKeyParameterNamesContractPtr and SubscriptionKeyParameterNamesContractPtrOutput values.
// You can construct a concrete instance of `SubscriptionKeyParameterNamesContractPtrInput` via:
//
//          SubscriptionKeyParameterNamesContractArgs{...}
//
//  or:
//
//          nil
type SubscriptionKeyParameterNamesContractPtrInput interface {
	pulumi.Input

	ToSubscriptionKeyParameterNamesContractPtrOutput() SubscriptionKeyParameterNamesContractPtrOutput
	ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(context.Context) SubscriptionKeyParameterNamesContractPtrOutput
}

type subscriptionKeyParameterNamesContractPtrType SubscriptionKeyParameterNamesContractArgs

func SubscriptionKeyParameterNamesContractPtr(v *SubscriptionKeyParameterNamesContractArgs) SubscriptionKeyParameterNamesContractPtrInput {
	return (*subscriptionKeyParameterNamesContractPtrType)(v)
}

func (*subscriptionKeyParameterNamesContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionKeyParameterNamesContract)(nil)).Elem()
}

func (i *subscriptionKeyParameterNamesContractPtrType) ToSubscriptionKeyParameterNamesContractPtrOutput() SubscriptionKeyParameterNamesContractPtrOutput {
	return i.ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(context.Background())
}

func (i *subscriptionKeyParameterNamesContractPtrType) ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionKeyParameterNamesContractPtrOutput)
}

// Subscription key parameter names details.
type SubscriptionKeyParameterNamesContractResponse struct {
	// Subscription key header name.
	Header *string `pulumi:"header"`
	// Subscription key query string parameter name.
	Query *string `pulumi:"query"`
}

// Subscription key parameter names details.
type SubscriptionKeyParameterNamesContractResponseOutput struct{ *pulumi.OutputState }

func (SubscriptionKeyParameterNamesContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionKeyParameterNamesContractResponse)(nil)).Elem()
}

func (o SubscriptionKeyParameterNamesContractResponseOutput) ToSubscriptionKeyParameterNamesContractResponseOutput() SubscriptionKeyParameterNamesContractResponseOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractResponseOutput) ToSubscriptionKeyParameterNamesContractResponseOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractResponseOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractResponseOutput) ToSubscriptionKeyParameterNamesContractResponsePtrOutput() SubscriptionKeyParameterNamesContractResponsePtrOutput {
	return o.ToSubscriptionKeyParameterNamesContractResponsePtrOutputWithContext(context.Background())
}

func (o SubscriptionKeyParameterNamesContractResponseOutput) ToSubscriptionKeyParameterNamesContractResponsePtrOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractResponsePtrOutput {
	return o.ApplyT(func(v SubscriptionKeyParameterNamesContractResponse) *SubscriptionKeyParameterNamesContractResponse {
		return &v
	}).(SubscriptionKeyParameterNamesContractResponsePtrOutput)
}

// Subscription key header name.
func (o SubscriptionKeyParameterNamesContractResponseOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionKeyParameterNamesContractResponse) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Subscription key query string parameter name.
func (o SubscriptionKeyParameterNamesContractResponseOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionKeyParameterNamesContractResponse) *string { return v.Query }).(pulumi.StringPtrOutput)
}

type SubscriptionKeyParameterNamesContractResponsePtrOutput struct{ *pulumi.OutputState }

func (SubscriptionKeyParameterNamesContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionKeyParameterNamesContractResponse)(nil)).Elem()
}

func (o SubscriptionKeyParameterNamesContractResponsePtrOutput) ToSubscriptionKeyParameterNamesContractResponsePtrOutput() SubscriptionKeyParameterNamesContractResponsePtrOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractResponsePtrOutput) ToSubscriptionKeyParameterNamesContractResponsePtrOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractResponsePtrOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractResponsePtrOutput) Elem() SubscriptionKeyParameterNamesContractResponseOutput {
	return o.ApplyT(func(v *SubscriptionKeyParameterNamesContractResponse) SubscriptionKeyParameterNamesContractResponse {
		return *v
	}).(SubscriptionKeyParameterNamesContractResponseOutput)
}

// Subscription key header name.
func (o SubscriptionKeyParameterNamesContractResponsePtrOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionKeyParameterNamesContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.Header
	}).(pulumi.StringPtrOutput)
}

// Subscription key query string parameter name.
func (o SubscriptionKeyParameterNamesContractResponsePtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionKeyParameterNamesContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

// OAuth acquire token request body parameter (www-url-form-encoded).
type TokenBodyParameterContract struct {
	// body parameter name.
	Name string `pulumi:"name"`
	// body parameter value.
	Value string `pulumi:"value"`
}

// TokenBodyParameterContractInput is an input type that accepts TokenBodyParameterContractArgs and TokenBodyParameterContractOutput values.
// You can construct a concrete instance of `TokenBodyParameterContractInput` via:
//
//          TokenBodyParameterContractArgs{...}
type TokenBodyParameterContractInput interface {
	pulumi.Input

	ToTokenBodyParameterContractOutput() TokenBodyParameterContractOutput
	ToTokenBodyParameterContractOutputWithContext(context.Context) TokenBodyParameterContractOutput
}

// OAuth acquire token request body parameter (www-url-form-encoded).
type TokenBodyParameterContractArgs struct {
	// body parameter name.
	Name pulumi.StringInput `pulumi:"name"`
	// body parameter value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TokenBodyParameterContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TokenBodyParameterContract)(nil)).Elem()
}

func (i TokenBodyParameterContractArgs) ToTokenBodyParameterContractOutput() TokenBodyParameterContractOutput {
	return i.ToTokenBodyParameterContractOutputWithContext(context.Background())
}

func (i TokenBodyParameterContractArgs) ToTokenBodyParameterContractOutputWithContext(ctx context.Context) TokenBodyParameterContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TokenBodyParameterContractOutput)
}

// TokenBodyParameterContractArrayInput is an input type that accepts TokenBodyParameterContractArray and TokenBodyParameterContractArrayOutput values.
// You can construct a concrete instance of `TokenBodyParameterContractArrayInput` via:
//
//          TokenBodyParameterContractArray{ TokenBodyParameterContractArgs{...} }
type TokenBodyParameterContractArrayInput interface {
	pulumi.Input

	ToTokenBodyParameterContractArrayOutput() TokenBodyParameterContractArrayOutput
	ToTokenBodyParameterContractArrayOutputWithContext(context.Context) TokenBodyParameterContractArrayOutput
}

type TokenBodyParameterContractArray []TokenBodyParameterContractInput

func (TokenBodyParameterContractArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TokenBodyParameterContract)(nil)).Elem()
}

func (i TokenBodyParameterContractArray) ToTokenBodyParameterContractArrayOutput() TokenBodyParameterContractArrayOutput {
	return i.ToTokenBodyParameterContractArrayOutputWithContext(context.Background())
}

func (i TokenBodyParameterContractArray) ToTokenBodyParameterContractArrayOutputWithContext(ctx context.Context) TokenBodyParameterContractArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TokenBodyParameterContractArrayOutput)
}

// OAuth acquire token request body parameter (www-url-form-encoded).
type TokenBodyParameterContractResponse struct {
	// body parameter name.
	Name string `pulumi:"name"`
	// body parameter value.
	Value string `pulumi:"value"`
}

// OAuth acquire token request body parameter (www-url-form-encoded).
type TokenBodyParameterContractResponseOutput struct{ *pulumi.OutputState }

func (TokenBodyParameterContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TokenBodyParameterContractResponse)(nil)).Elem()
}

func (o TokenBodyParameterContractResponseOutput) ToTokenBodyParameterContractResponseOutput() TokenBodyParameterContractResponseOutput {
	return o
}

func (o TokenBodyParameterContractResponseOutput) ToTokenBodyParameterContractResponseOutputWithContext(ctx context.Context) TokenBodyParameterContractResponseOutput {
	return o
}

// body parameter name.
func (o TokenBodyParameterContractResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TokenBodyParameterContractResponse) string { return v.Name }).(pulumi.StringOutput)
}

// body parameter value.
func (o TokenBodyParameterContractResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TokenBodyParameterContractResponse) string { return v.Value }).(pulumi.StringOutput)
}

type TokenBodyParameterContractResponseArrayOutput struct{ *pulumi.OutputState }

func (TokenBodyParameterContractResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TokenBodyParameterContractResponse)(nil)).Elem()
}

func (o TokenBodyParameterContractResponseArrayOutput) ToTokenBodyParameterContractResponseArrayOutput() TokenBodyParameterContractResponseArrayOutput {
	return o
}

func (o TokenBodyParameterContractResponseArrayOutput) ToTokenBodyParameterContractResponseArrayOutputWithContext(ctx context.Context) TokenBodyParameterContractResponseArrayOutput {
	return o
}

func (o TokenBodyParameterContractResponseArrayOutput) Index(i pulumi.IntInput) TokenBodyParameterContractResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TokenBodyParameterContractResponse {
		return vs[0].([]TokenBodyParameterContractResponse)[vs[1].(int)]
	}).(TokenBodyParameterContractResponseOutput)
}

// User identity details.
type UserIdentityContract struct {
	// Identifier value within provider.
	Id *string `pulumi:"id"`
	// Identity provider name.
	Provider *string `pulumi:"provider"`
}

// UserIdentityContractInput is an input type that accepts UserIdentityContractArgs and UserIdentityContractOutput values.
// You can construct a concrete instance of `UserIdentityContractInput` via:
//
//          UserIdentityContractArgs{...}
type UserIdentityContractInput interface {
	pulumi.Input

	ToUserIdentityContractOutput() UserIdentityContractOutput
	ToUserIdentityContractOutputWithContext(context.Context) UserIdentityContractOutput
}

// User identity details.
type UserIdentityContractArgs struct {
	// Identifier value within provider.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Identity provider name.
	Provider pulumi.StringPtrInput `pulumi:"provider"`
}

func (UserIdentityContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityContract)(nil)).Elem()
}

func (i UserIdentityContractArgs) ToUserIdentityContractOutput() UserIdentityContractOutput {
	return i.ToUserIdentityContractOutputWithContext(context.Background())
}

func (i UserIdentityContractArgs) ToUserIdentityContractOutputWithContext(ctx context.Context) UserIdentityContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityContractOutput)
}

// UserIdentityContractArrayInput is an input type that accepts UserIdentityContractArray and UserIdentityContractArrayOutput values.
// You can construct a concrete instance of `UserIdentityContractArrayInput` via:
//
//          UserIdentityContractArray{ UserIdentityContractArgs{...} }
type UserIdentityContractArrayInput interface {
	pulumi.Input

	ToUserIdentityContractArrayOutput() UserIdentityContractArrayOutput
	ToUserIdentityContractArrayOutputWithContext(context.Context) UserIdentityContractArrayOutput
}

type UserIdentityContractArray []UserIdentityContractInput

func (UserIdentityContractArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserIdentityContract)(nil)).Elem()
}

func (i UserIdentityContractArray) ToUserIdentityContractArrayOutput() UserIdentityContractArrayOutput {
	return i.ToUserIdentityContractArrayOutputWithContext(context.Background())
}

func (i UserIdentityContractArray) ToUserIdentityContractArrayOutputWithContext(ctx context.Context) UserIdentityContractArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityContractArrayOutput)
}

// User identity details.
type UserIdentityContractResponse struct {
	// Identifier value within provider.
	Id *string `pulumi:"id"`
	// Identity provider name.
	Provider *string `pulumi:"provider"`
}

// User identity details.
type UserIdentityContractResponseOutput struct{ *pulumi.OutputState }

func (UserIdentityContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityContractResponse)(nil)).Elem()
}

func (o UserIdentityContractResponseOutput) ToUserIdentityContractResponseOutput() UserIdentityContractResponseOutput {
	return o
}

func (o UserIdentityContractResponseOutput) ToUserIdentityContractResponseOutputWithContext(ctx context.Context) UserIdentityContractResponseOutput {
	return o
}

// Identifier value within provider.
func (o UserIdentityContractResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityContractResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Identity provider name.
func (o UserIdentityContractResponseOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityContractResponse) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

type UserIdentityContractResponseArrayOutput struct{ *pulumi.OutputState }

func (UserIdentityContractResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserIdentityContractResponse)(nil)).Elem()
}

func (o UserIdentityContractResponseArrayOutput) ToUserIdentityContractResponseArrayOutput() UserIdentityContractResponseArrayOutput {
	return o
}

func (o UserIdentityContractResponseArrayOutput) ToUserIdentityContractResponseArrayOutputWithContext(ctx context.Context) UserIdentityContractResponseArrayOutput {
	return o
}

func (o UserIdentityContractResponseArrayOutput) Index(i pulumi.IntInput) UserIdentityContractResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserIdentityContractResponse {
		return vs[0].([]UserIdentityContractResponse)[vs[1].(int)]
	}).(UserIdentityContractResponseOutput)
}

type UserIdentityProperties struct {
	// The client id of user assigned identity.
	ClientId *string `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId *string `pulumi:"principalId"`
}

// UserIdentityPropertiesInput is an input type that accepts UserIdentityPropertiesArgs and UserIdentityPropertiesOutput values.
// You can construct a concrete instance of `UserIdentityPropertiesInput` via:
//
//          UserIdentityPropertiesArgs{...}
type UserIdentityPropertiesInput interface {
	pulumi.Input

	ToUserIdentityPropertiesOutput() UserIdentityPropertiesOutput
	ToUserIdentityPropertiesOutputWithContext(context.Context) UserIdentityPropertiesOutput
}

type UserIdentityPropertiesArgs struct {
	// The client id of user assigned identity.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
}

func (UserIdentityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityProperties)(nil)).Elem()
}

func (i UserIdentityPropertiesArgs) ToUserIdentityPropertiesOutput() UserIdentityPropertiesOutput {
	return i.ToUserIdentityPropertiesOutputWithContext(context.Background())
}

func (i UserIdentityPropertiesArgs) ToUserIdentityPropertiesOutputWithContext(ctx context.Context) UserIdentityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityPropertiesOutput)
}

// UserIdentityPropertiesMapInput is an input type that accepts UserIdentityPropertiesMap and UserIdentityPropertiesMapOutput values.
// You can construct a concrete instance of `UserIdentityPropertiesMapInput` via:
//
//          UserIdentityPropertiesMap{ "key": UserIdentityPropertiesArgs{...} }
type UserIdentityPropertiesMapInput interface {
	pulumi.Input

	ToUserIdentityPropertiesMapOutput() UserIdentityPropertiesMapOutput
	ToUserIdentityPropertiesMapOutputWithContext(context.Context) UserIdentityPropertiesMapOutput
}

type UserIdentityPropertiesMap map[string]UserIdentityPropertiesInput

func (UserIdentityPropertiesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserIdentityProperties)(nil)).Elem()
}

func (i UserIdentityPropertiesMap) ToUserIdentityPropertiesMapOutput() UserIdentityPropertiesMapOutput {
	return i.ToUserIdentityPropertiesMapOutputWithContext(context.Background())
}

func (i UserIdentityPropertiesMap) ToUserIdentityPropertiesMapOutputWithContext(ctx context.Context) UserIdentityPropertiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityPropertiesMapOutput)
}

type UserIdentityPropertiesResponse struct {
	// The client id of user assigned identity.
	ClientId *string `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId *string `pulumi:"principalId"`
}

type UserIdentityPropertiesResponseOutput struct{ *pulumi.OutputState }

func (UserIdentityPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityPropertiesResponse)(nil)).Elem()
}

func (o UserIdentityPropertiesResponseOutput) ToUserIdentityPropertiesResponseOutput() UserIdentityPropertiesResponseOutput {
	return o
}

func (o UserIdentityPropertiesResponseOutput) ToUserIdentityPropertiesResponseOutputWithContext(ctx context.Context) UserIdentityPropertiesResponseOutput {
	return o
}

// The client id of user assigned identity.
func (o UserIdentityPropertiesResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityPropertiesResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The principal id of user assigned identity.
func (o UserIdentityPropertiesResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityPropertiesResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

type UserIdentityPropertiesResponseMapOutput struct{ *pulumi.OutputState }

func (UserIdentityPropertiesResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserIdentityPropertiesResponse)(nil)).Elem()
}

func (o UserIdentityPropertiesResponseMapOutput) ToUserIdentityPropertiesResponseMapOutput() UserIdentityPropertiesResponseMapOutput {
	return o
}

func (o UserIdentityPropertiesResponseMapOutput) ToUserIdentityPropertiesResponseMapOutputWithContext(ctx context.Context) UserIdentityPropertiesResponseMapOutput {
	return o
}

func (o UserIdentityPropertiesResponseMapOutput) MapIndex(k pulumi.StringInput) UserIdentityPropertiesResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserIdentityPropertiesResponse {
		return vs[0].(map[string]UserIdentityPropertiesResponse)[vs[1].(string)]
	}).(UserIdentityPropertiesResponseOutput)
}

// Configuration of a virtual network to which API Management service is deployed.
type VirtualNetworkConfiguration struct {
	// The full resource ID of a subnet in a virtual network to deploy the API Management service in.
	SubnetResourceId *string `pulumi:"subnetResourceId"`
}

// VirtualNetworkConfigurationInput is an input type that accepts VirtualNetworkConfigurationArgs and VirtualNetworkConfigurationOutput values.
// You can construct a concrete instance of `VirtualNetworkConfigurationInput` via:
//
//          VirtualNetworkConfigurationArgs{...}
type VirtualNetworkConfigurationInput interface {
	pulumi.Input

	ToVirtualNetworkConfigurationOutput() VirtualNetworkConfigurationOutput
	ToVirtualNetworkConfigurationOutputWithContext(context.Context) VirtualNetworkConfigurationOutput
}

// Configuration of a virtual network to which API Management service is deployed.
type VirtualNetworkConfigurationArgs struct {
	// The full resource ID of a subnet in a virtual network to deploy the API Management service in.
	SubnetResourceId pulumi.StringPtrInput `pulumi:"subnetResourceId"`
}

func (VirtualNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkConfiguration)(nil)).Elem()
}

func (i VirtualNetworkConfigurationArgs) ToVirtualNetworkConfigurationOutput() VirtualNetworkConfigurationOutput {
	return i.ToVirtualNetworkConfigurationOutputWithContext(context.Background())
}

func (i VirtualNetworkConfigurationArgs) ToVirtualNetworkConfigurationOutputWithContext(ctx context.Context) VirtualNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkConfigurationOutput)
}

func (i VirtualNetworkConfigurationArgs) ToVirtualNetworkConfigurationPtrOutput() VirtualNetworkConfigurationPtrOutput {
	return i.ToVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkConfigurationArgs) ToVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkConfigurationOutput).ToVirtualNetworkConfigurationPtrOutputWithContext(ctx)
}

// VirtualNetworkConfigurationPtrInput is an input type that accepts VirtualNetworkConfigurationArgs, VirtualNetworkConfigurationPtr and VirtualNetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkConfigurationPtrInput` via:
//
//          VirtualNetworkConfigurationArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkConfigurationPtrInput interface {
	pulumi.Input

	ToVirtualNetworkConfigurationPtrOutput() VirtualNetworkConfigurationPtrOutput
	ToVirtualNetworkConfigurationPtrOutputWithContext(context.Context) VirtualNetworkConfigurationPtrOutput
}

type virtualNetworkConfigurationPtrType VirtualNetworkConfigurationArgs

func VirtualNetworkConfigurationPtr(v *VirtualNetworkConfigurationArgs) VirtualNetworkConfigurationPtrInput {
	return (*virtualNetworkConfigurationPtrType)(v)
}

func (*virtualNetworkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkConfiguration)(nil)).Elem()
}

func (i *virtualNetworkConfigurationPtrType) ToVirtualNetworkConfigurationPtrOutput() VirtualNetworkConfigurationPtrOutput {
	return i.ToVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkConfigurationPtrType) ToVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkConfigurationPtrOutput)
}

// Configuration of a virtual network to which API Management service is deployed.
type VirtualNetworkConfigurationResponse struct {
	// The full resource ID of a subnet in a virtual network to deploy the API Management service in.
	SubnetResourceId *string `pulumi:"subnetResourceId"`
	// The name of the subnet.
	Subnetname string `pulumi:"subnetname"`
	// The virtual network ID. This is typically a GUID. Expect a null GUID by default.
	Vnetid string `pulumi:"vnetid"`
}

// Configuration of a virtual network to which API Management service is deployed.
type VirtualNetworkConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkConfigurationResponse)(nil)).Elem()
}

func (o VirtualNetworkConfigurationResponseOutput) ToVirtualNetworkConfigurationResponseOutput() VirtualNetworkConfigurationResponseOutput {
	return o
}

func (o VirtualNetworkConfigurationResponseOutput) ToVirtualNetworkConfigurationResponseOutputWithContext(ctx context.Context) VirtualNetworkConfigurationResponseOutput {
	return o
}

func (o VirtualNetworkConfigurationResponseOutput) ToVirtualNetworkConfigurationResponsePtrOutput() VirtualNetworkConfigurationResponsePtrOutput {
	return o.ToVirtualNetworkConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkConfigurationResponseOutput) ToVirtualNetworkConfigurationResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkConfigurationResponse) *VirtualNetworkConfigurationResponse {
		return &v
	}).(VirtualNetworkConfigurationResponsePtrOutput)
}

// The full resource ID of a subnet in a virtual network to deploy the API Management service in.
func (o VirtualNetworkConfigurationResponseOutput) SubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkConfigurationResponse) *string { return v.SubnetResourceId }).(pulumi.StringPtrOutput)
}

// The name of the subnet.
func (o VirtualNetworkConfigurationResponseOutput) Subnetname() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkConfigurationResponse) string { return v.Subnetname }).(pulumi.StringOutput)
}

// The virtual network ID. This is typically a GUID. Expect a null GUID by default.
func (o VirtualNetworkConfigurationResponseOutput) Vnetid() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkConfigurationResponse) string { return v.Vnetid }).(pulumi.StringOutput)
}

type VirtualNetworkConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkConfigurationResponse)(nil)).Elem()
}

func (o VirtualNetworkConfigurationResponsePtrOutput) ToVirtualNetworkConfigurationResponsePtrOutput() VirtualNetworkConfigurationResponsePtrOutput {
	return o
}

func (o VirtualNetworkConfigurationResponsePtrOutput) ToVirtualNetworkConfigurationResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationResponsePtrOutput {
	return o
}

func (o VirtualNetworkConfigurationResponsePtrOutput) Elem() VirtualNetworkConfigurationResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkConfigurationResponse) VirtualNetworkConfigurationResponse { return *v }).(VirtualNetworkConfigurationResponseOutput)
}

// The full resource ID of a subnet in a virtual network to deploy the API Management service in.
func (o VirtualNetworkConfigurationResponsePtrOutput) SubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubnetResourceId
	}).(pulumi.StringPtrOutput)
}

// The name of the subnet.
func (o VirtualNetworkConfigurationResponsePtrOutput) Subnetname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Subnetname
	}).(pulumi.StringPtrOutput)
}

// The virtual network ID. This is typically a GUID. Expect a null GUID by default.
func (o VirtualNetworkConfigurationResponsePtrOutput) Vnetid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Vnetid
	}).(pulumi.StringPtrOutput)
}

// Properties of server X509Names.
type X509CertificateName struct {
	// Thumbprint for the Issuer of the Certificate.
	IssuerCertificateThumbprint *string `pulumi:"issuerCertificateThumbprint"`
	// Common Name of the Certificate.
	Name *string `pulumi:"name"`
}

// X509CertificateNameInput is an input type that accepts X509CertificateNameArgs and X509CertificateNameOutput values.
// You can construct a concrete instance of `X509CertificateNameInput` via:
//
//          X509CertificateNameArgs{...}
type X509CertificateNameInput interface {
	pulumi.Input

	ToX509CertificateNameOutput() X509CertificateNameOutput
	ToX509CertificateNameOutputWithContext(context.Context) X509CertificateNameOutput
}

// Properties of server X509Names.
type X509CertificateNameArgs struct {
	// Thumbprint for the Issuer of the Certificate.
	IssuerCertificateThumbprint pulumi.StringPtrInput `pulumi:"issuerCertificateThumbprint"`
	// Common Name of the Certificate.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (X509CertificateNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X509CertificateName)(nil)).Elem()
}

func (i X509CertificateNameArgs) ToX509CertificateNameOutput() X509CertificateNameOutput {
	return i.ToX509CertificateNameOutputWithContext(context.Background())
}

func (i X509CertificateNameArgs) ToX509CertificateNameOutputWithContext(ctx context.Context) X509CertificateNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X509CertificateNameOutput)
}

// X509CertificateNameArrayInput is an input type that accepts X509CertificateNameArray and X509CertificateNameArrayOutput values.
// You can construct a concrete instance of `X509CertificateNameArrayInput` via:
//
//          X509CertificateNameArray{ X509CertificateNameArgs{...} }
type X509CertificateNameArrayInput interface {
	pulumi.Input

	ToX509CertificateNameArrayOutput() X509CertificateNameArrayOutput
	ToX509CertificateNameArrayOutputWithContext(context.Context) X509CertificateNameArrayOutput
}

type X509CertificateNameArray []X509CertificateNameInput

func (X509CertificateNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X509CertificateName)(nil)).Elem()
}

func (i X509CertificateNameArray) ToX509CertificateNameArrayOutput() X509CertificateNameArrayOutput {
	return i.ToX509CertificateNameArrayOutputWithContext(context.Background())
}

func (i X509CertificateNameArray) ToX509CertificateNameArrayOutputWithContext(ctx context.Context) X509CertificateNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X509CertificateNameArrayOutput)
}

// Properties of server X509Names.
type X509CertificateNameResponse struct {
	// Thumbprint for the Issuer of the Certificate.
	IssuerCertificateThumbprint *string `pulumi:"issuerCertificateThumbprint"`
	// Common Name of the Certificate.
	Name *string `pulumi:"name"`
}

// Properties of server X509Names.
type X509CertificateNameResponseOutput struct{ *pulumi.OutputState }

func (X509CertificateNameResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X509CertificateNameResponse)(nil)).Elem()
}

func (o X509CertificateNameResponseOutput) ToX509CertificateNameResponseOutput() X509CertificateNameResponseOutput {
	return o
}

func (o X509CertificateNameResponseOutput) ToX509CertificateNameResponseOutputWithContext(ctx context.Context) X509CertificateNameResponseOutput {
	return o
}

// Thumbprint for the Issuer of the Certificate.
func (o X509CertificateNameResponseOutput) IssuerCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X509CertificateNameResponse) *string { return v.IssuerCertificateThumbprint }).(pulumi.StringPtrOutput)
}

// Common Name of the Certificate.
func (o X509CertificateNameResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X509CertificateNameResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type X509CertificateNameResponseArrayOutput struct{ *pulumi.OutputState }

func (X509CertificateNameResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X509CertificateNameResponse)(nil)).Elem()
}

func (o X509CertificateNameResponseArrayOutput) ToX509CertificateNameResponseArrayOutput() X509CertificateNameResponseArrayOutput {
	return o
}

func (o X509CertificateNameResponseArrayOutput) ToX509CertificateNameResponseArrayOutputWithContext(ctx context.Context) X509CertificateNameResponseArrayOutput {
	return o
}

func (o X509CertificateNameResponseArrayOutput) Index(i pulumi.IntInput) X509CertificateNameResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) X509CertificateNameResponse {
		return vs[0].([]X509CertificateNameResponse)[vs[1].(int)]
	}).(X509CertificateNameResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AdditionalLocationOutput{})
	pulumi.RegisterOutputType(AdditionalLocationArrayOutput{})
	pulumi.RegisterOutputType(AdditionalLocationResponseOutput{})
	pulumi.RegisterOutputType(AdditionalLocationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApiCreateOrUpdatePropertiesWsdlSelectorOutput{})
	pulumi.RegisterOutputType(ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceIdentityOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceSkuPropertiesOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceSkuPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceSkuPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceSkuPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiVersionConstraintOutput{})
	pulumi.RegisterOutputType(ApiVersionConstraintPtrOutput{})
	pulumi.RegisterOutputType(ApiVersionConstraintResponseOutput{})
	pulumi.RegisterOutputType(ApiVersionConstraintResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiVersionSetContractDetailsOutput{})
	pulumi.RegisterOutputType(ApiVersionSetContractDetailsPtrOutput{})
	pulumi.RegisterOutputType(ApiVersionSetContractDetailsResponseOutput{})
	pulumi.RegisterOutputType(ApiVersionSetContractDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingsContractOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingsContractPtrOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingsContractResponseOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingsContractResponsePtrOutput{})
	pulumi.RegisterOutputType(BackendAuthorizationHeaderCredentialsOutput{})
	pulumi.RegisterOutputType(BackendAuthorizationHeaderCredentialsPtrOutput{})
	pulumi.RegisterOutputType(BackendAuthorizationHeaderCredentialsResponseOutput{})
	pulumi.RegisterOutputType(BackendAuthorizationHeaderCredentialsResponsePtrOutput{})
	pulumi.RegisterOutputType(BackendCredentialsContractOutput{})
	pulumi.RegisterOutputType(BackendCredentialsContractPtrOutput{})
	pulumi.RegisterOutputType(BackendCredentialsContractResponseOutput{})
	pulumi.RegisterOutputType(BackendCredentialsContractResponsePtrOutput{})
	pulumi.RegisterOutputType(BackendPropertiesOutput{})
	pulumi.RegisterOutputType(BackendPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BackendPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BackendPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(BackendProxyContractOutput{})
	pulumi.RegisterOutputType(BackendProxyContractPtrOutput{})
	pulumi.RegisterOutputType(BackendProxyContractResponseOutput{})
	pulumi.RegisterOutputType(BackendProxyContractResponsePtrOutput{})
	pulumi.RegisterOutputType(BackendServiceFabricClusterPropertiesOutput{})
	pulumi.RegisterOutputType(BackendServiceFabricClusterPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BackendServiceFabricClusterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BackendServiceFabricClusterPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(BackendTlsPropertiesOutput{})
	pulumi.RegisterOutputType(BackendTlsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BackendTlsPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BackendTlsPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(BodyDiagnosticSettingsOutput{})
	pulumi.RegisterOutputType(BodyDiagnosticSettingsPtrOutput{})
	pulumi.RegisterOutputType(BodyDiagnosticSettingsResponseOutput{})
	pulumi.RegisterOutputType(BodyDiagnosticSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(CertificateConfigurationOutput{})
	pulumi.RegisterOutputType(CertificateConfigurationArrayOutput{})
	pulumi.RegisterOutputType(CertificateConfigurationResponseOutput{})
	pulumi.RegisterOutputType(CertificateConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(CertificateInformationOutput{})
	pulumi.RegisterOutputType(CertificateInformationPtrOutput{})
	pulumi.RegisterOutputType(CertificateInformationResponseOutput{})
	pulumi.RegisterOutputType(CertificateInformationResponsePtrOutput{})
	pulumi.RegisterOutputType(EmailTemplateParametersContractPropertiesOutput{})
	pulumi.RegisterOutputType(EmailTemplateParametersContractPropertiesArrayOutput{})
	pulumi.RegisterOutputType(EmailTemplateParametersContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(EmailTemplateParametersContractPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(GroupContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(GroupContractPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(HostnameConfigurationOutput{})
	pulumi.RegisterOutputType(HostnameConfigurationArrayOutput{})
	pulumi.RegisterOutputType(HostnameConfigurationResponseOutput{})
	pulumi.RegisterOutputType(HostnameConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(HttpMessageDiagnosticOutput{})
	pulumi.RegisterOutputType(HttpMessageDiagnosticPtrOutput{})
	pulumi.RegisterOutputType(HttpMessageDiagnosticResponseOutput{})
	pulumi.RegisterOutputType(HttpMessageDiagnosticResponsePtrOutput{})
	pulumi.RegisterOutputType(OAuth2AuthenticationSettingsContractOutput{})
	pulumi.RegisterOutputType(OAuth2AuthenticationSettingsContractPtrOutput{})
	pulumi.RegisterOutputType(OAuth2AuthenticationSettingsContractResponseOutput{})
	pulumi.RegisterOutputType(OAuth2AuthenticationSettingsContractResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenIdAuthenticationSettingsContractOutput{})
	pulumi.RegisterOutputType(OpenIdAuthenticationSettingsContractPtrOutput{})
	pulumi.RegisterOutputType(OpenIdAuthenticationSettingsContractResponseOutput{})
	pulumi.RegisterOutputType(OpenIdAuthenticationSettingsContractResponsePtrOutput{})
	pulumi.RegisterOutputType(ParameterContractOutput{})
	pulumi.RegisterOutputType(ParameterContractArrayOutput{})
	pulumi.RegisterOutputType(ParameterContractResponseOutput{})
	pulumi.RegisterOutputType(ParameterContractResponseArrayOutput{})
	pulumi.RegisterOutputType(PipelineDiagnosticSettingsOutput{})
	pulumi.RegisterOutputType(PipelineDiagnosticSettingsPtrOutput{})
	pulumi.RegisterOutputType(PipelineDiagnosticSettingsResponseOutput{})
	pulumi.RegisterOutputType(PipelineDiagnosticSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(RepresentationContractOutput{})
	pulumi.RegisterOutputType(RepresentationContractArrayOutput{})
	pulumi.RegisterOutputType(RepresentationContractResponseOutput{})
	pulumi.RegisterOutputType(RepresentationContractResponseArrayOutput{})
	pulumi.RegisterOutputType(RequestContractOutput{})
	pulumi.RegisterOutputType(RequestContractPtrOutput{})
	pulumi.RegisterOutputType(RequestContractResponseOutput{})
	pulumi.RegisterOutputType(RequestContractResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceLocationDataContractOutput{})
	pulumi.RegisterOutputType(ResourceLocationDataContractPtrOutput{})
	pulumi.RegisterOutputType(ResourceLocationDataContractResponseOutput{})
	pulumi.RegisterOutputType(ResourceLocationDataContractResponsePtrOutput{})
	pulumi.RegisterOutputType(ResponseContractOutput{})
	pulumi.RegisterOutputType(ResponseContractArrayOutput{})
	pulumi.RegisterOutputType(ResponseContractResponseOutput{})
	pulumi.RegisterOutputType(ResponseContractResponseArrayOutput{})
	pulumi.RegisterOutputType(SamplingSettingsOutput{})
	pulumi.RegisterOutputType(SamplingSettingsPtrOutput{})
	pulumi.RegisterOutputType(SamplingSettingsResponseOutput{})
	pulumi.RegisterOutputType(SamplingSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(SubscriptionKeyParameterNamesContractOutput{})
	pulumi.RegisterOutputType(SubscriptionKeyParameterNamesContractPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionKeyParameterNamesContractResponseOutput{})
	pulumi.RegisterOutputType(SubscriptionKeyParameterNamesContractResponsePtrOutput{})
	pulumi.RegisterOutputType(TokenBodyParameterContractOutput{})
	pulumi.RegisterOutputType(TokenBodyParameterContractArrayOutput{})
	pulumi.RegisterOutputType(TokenBodyParameterContractResponseOutput{})
	pulumi.RegisterOutputType(TokenBodyParameterContractResponseArrayOutput{})
	pulumi.RegisterOutputType(UserIdentityContractOutput{})
	pulumi.RegisterOutputType(UserIdentityContractArrayOutput{})
	pulumi.RegisterOutputType(UserIdentityContractResponseOutput{})
	pulumi.RegisterOutputType(UserIdentityContractResponseArrayOutput{})
	pulumi.RegisterOutputType(UserIdentityPropertiesOutput{})
	pulumi.RegisterOutputType(UserIdentityPropertiesMapOutput{})
	pulumi.RegisterOutputType(UserIdentityPropertiesResponseOutput{})
	pulumi.RegisterOutputType(UserIdentityPropertiesResponseMapOutput{})
	pulumi.RegisterOutputType(VirtualNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualNetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(X509CertificateNameOutput{})
	pulumi.RegisterOutputType(X509CertificateNameArrayOutput{})
	pulumi.RegisterOutputType(X509CertificateNameResponseOutput{})
	pulumi.RegisterOutputType(X509CertificateNameResponseArrayOutput{})
}
