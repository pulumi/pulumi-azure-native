// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20191201

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Content type contract details.
type ContentType struct {
	pulumi.CustomResourceState

	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Properties of the content type.
	Properties ContentTypeContractPropertiesResponseOutput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewContentType registers a new resource with the given unique name, arguments, and options.
func NewContentType(ctx *pulumi.Context,
	name string, args *ContentTypeArgs, opts ...pulumi.ResourceOption) (*ContentType, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.ServiceName == nil {
		return nil, errors.New("missing required argument 'ServiceName'")
	}
	if args == nil {
		args = &ContentTypeArgs{}
	}
	var resource ContentType
	err := ctx.RegisterResource("azurerm:apimanagement/v20191201:ContentType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContentType gets an existing ContentType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContentType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContentTypeState, opts ...pulumi.ResourceOption) (*ContentType, error) {
	var resource ContentType
	err := ctx.ReadResource("azurerm:apimanagement/v20191201:ContentType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContentType resources.
type contentTypeState struct {
	// Resource name.
	Name *string `pulumi:"name"`
	// Properties of the content type.
	Properties *ContentTypeContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type *string `pulumi:"type"`
}

type ContentTypeState struct {
	// Resource name.
	Name pulumi.StringPtrInput
	// Properties of the content type.
	Properties ContentTypeContractPropertiesResponsePtrInput
	// Resource type for API Management resource.
	Type pulumi.StringPtrInput
}

func (ContentTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*contentTypeState)(nil)).Elem()
}

type contentTypeArgs struct {
	// Content type identifier.
	Name string `pulumi:"name"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
}

// The set of arguments for constructing a ContentType resource.
type ContentTypeArgs struct {
	// Content type identifier.
	Name pulumi.StringInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// The name of the API Management service.
	ServiceName pulumi.StringInput
}

func (ContentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*contentTypeArgs)(nil)).Elem()
}
