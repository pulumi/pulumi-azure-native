// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Issue Attachment Contract details.
type ServiceApiIssueAttachment struct {
	pulumi.CustomResourceState

	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Properties of the Issue Attachment.
	Properties IssueAttachmentContractPropertiesResponseOutput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewServiceApiIssueAttachment registers a new resource with the given unique name, arguments, and options.
func NewServiceApiIssueAttachment(ctx *pulumi.Context,
	name string, args *ServiceApiIssueAttachmentArgs, opts ...pulumi.ResourceOption) (*ServiceApiIssueAttachment, error) {
	if args == nil || args.ApiId == nil {
		return nil, errors.New("missing required argument 'ApiId'")
	}
	if args == nil || args.IssueId == nil {
		return nil, errors.New("missing required argument 'IssueId'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.ServiceName == nil {
		return nil, errors.New("missing required argument 'ServiceName'")
	}
	if args == nil {
		args = &ServiceApiIssueAttachmentArgs{}
	}
	var resource ServiceApiIssueAttachment
	err := ctx.RegisterResource("azurerm:apimanagement:ServiceApiIssueAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceApiIssueAttachment gets an existing ServiceApiIssueAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceApiIssueAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceApiIssueAttachmentState, opts ...pulumi.ResourceOption) (*ServiceApiIssueAttachment, error) {
	var resource ServiceApiIssueAttachment
	err := ctx.ReadResource("azurerm:apimanagement:ServiceApiIssueAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceApiIssueAttachment resources.
type serviceApiIssueAttachmentState struct {
	// Resource name.
	Name *string `pulumi:"name"`
	// Properties of the Issue Attachment.
	Properties *IssueAttachmentContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type *string `pulumi:"type"`
}

type ServiceApiIssueAttachmentState struct {
	// Resource name.
	Name pulumi.StringPtrInput
	// Properties of the Issue Attachment.
	Properties IssueAttachmentContractPropertiesResponsePtrInput
	// Resource type for API Management resource.
	Type pulumi.StringPtrInput
}

func (ServiceApiIssueAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceApiIssueAttachmentState)(nil)).Elem()
}

type serviceApiIssueAttachmentArgs struct {
	// API identifier. Must be unique in the current API Management service instance.
	ApiId string `pulumi:"apiId"`
	// Issue identifier. Must be unique in the current API Management service instance.
	IssueId string `pulumi:"issueId"`
	// Attachment identifier within an Issue. Must be unique in the current Issue.
	Name string `pulumi:"name"`
	// Properties of the Issue Attachment.
	Properties *IssueAttachmentContractProperties `pulumi:"properties"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
}

// The set of arguments for constructing a ServiceApiIssueAttachment resource.
type ServiceApiIssueAttachmentArgs struct {
	// API identifier. Must be unique in the current API Management service instance.
	ApiId pulumi.StringInput
	// Issue identifier. Must be unique in the current API Management service instance.
	IssueId pulumi.StringInput
	// Attachment identifier within an Issue. Must be unique in the current Issue.
	Name pulumi.StringInput
	// Properties of the Issue Attachment.
	Properties IssueAttachmentContractPropertiesPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// The name of the API Management service.
	ServiceName pulumi.StringInput
}

func (ServiceApiIssueAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceApiIssueAttachmentArgs)(nil)).Elem()
}
