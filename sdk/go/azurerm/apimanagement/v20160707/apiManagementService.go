// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20160707

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Description of an API Management service resource.
type ApiManagementService struct {
	pulumi.CustomResourceState

	// ETag of the resource.
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// Datacenter location of the API Management service.
	Location pulumi.StringOutput `pulumi:"location"`
	// Name of the API Management service.
	Name pulumi.StringOutput `pulumi:"name"`
	// Properties of the API Management service.
	Properties ApiManagementServicePropertiesResponseOutput `pulumi:"properties"`
	// SKU properties of the API Management service.
	Sku ApiManagementServiceSkuPropertiesResponseOutput `pulumi:"sku"`
	// API Management service tags. A maximum of 10 tags can be provided for a resource, and each tag must have a key no greater than 128 characters (and a value no greater than 256 characters).
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type of the API Management service.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewApiManagementService registers a new resource with the given unique name, arguments, and options.
func NewApiManagementService(ctx *pulumi.Context,
	name string, args *ApiManagementServiceArgs, opts ...pulumi.ResourceOption) (*ApiManagementService, error) {
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.PublisherEmail == nil {
		return nil, errors.New("missing required argument 'PublisherEmail'")
	}
	if args == nil || args.PublisherName == nil {
		return nil, errors.New("missing required argument 'PublisherName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.Sku == nil {
		return nil, errors.New("missing required argument 'Sku'")
	}
	if args == nil {
		args = &ApiManagementServiceArgs{}
	}
	var resource ApiManagementService
	err := ctx.RegisterResource("azurerm:apimanagement/v20160707:ApiManagementService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiManagementService gets an existing ApiManagementService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiManagementService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiManagementServiceState, opts ...pulumi.ResourceOption) (*ApiManagementService, error) {
	var resource ApiManagementService
	err := ctx.ReadResource("azurerm:apimanagement/v20160707:ApiManagementService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiManagementService resources.
type apiManagementServiceState struct {
	// ETag of the resource.
	Etag *string `pulumi:"etag"`
	// Datacenter location of the API Management service.
	Location *string `pulumi:"location"`
	// Name of the API Management service.
	Name *string `pulumi:"name"`
	// Properties of the API Management service.
	Properties *ApiManagementServicePropertiesResponse `pulumi:"properties"`
	// SKU properties of the API Management service.
	Sku *ApiManagementServiceSkuPropertiesResponse `pulumi:"sku"`
	// API Management service tags. A maximum of 10 tags can be provided for a resource, and each tag must have a key no greater than 128 characters (and a value no greater than 256 characters).
	Tags map[string]string `pulumi:"tags"`
	// Resource type of the API Management service.
	Type *string `pulumi:"type"`
}

type ApiManagementServiceState struct {
	// ETag of the resource.
	Etag pulumi.StringPtrInput
	// Datacenter location of the API Management service.
	Location pulumi.StringPtrInput
	// Name of the API Management service.
	Name pulumi.StringPtrInput
	// Properties of the API Management service.
	Properties ApiManagementServicePropertiesResponsePtrInput
	// SKU properties of the API Management service.
	Sku ApiManagementServiceSkuPropertiesResponsePtrInput
	// API Management service tags. A maximum of 10 tags can be provided for a resource, and each tag must have a key no greater than 128 characters (and a value no greater than 256 characters).
	Tags pulumi.StringMapInput
	// Resource type of the API Management service.
	Type pulumi.StringPtrInput
}

func (ApiManagementServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiManagementServiceState)(nil)).Elem()
}

type apiManagementServiceArgs struct {
	// Additional datacenter locations of the API Management service.
	AdditionalLocations []AdditionalRegion `pulumi:"additionalLocations"`
	// Addresser email.
	AddresserEmail *string `pulumi:"addresserEmail"`
	// Custom properties of the API Management service, like disabling TLS 1.0.
	CustomProperties map[string]string `pulumi:"customProperties"`
	// ETag of the resource.
	Etag *string `pulumi:"etag"`
	// Custom hostname configuration of the API Management service.
	HostnameConfigurations []HostnameConfiguration `pulumi:"hostnameConfigurations"`
	// Datacenter location of the API Management service.
	Location string `pulumi:"location"`
	// The name of the API Management service.
	Name string `pulumi:"name"`
	// Publisher email.
	PublisherEmail string `pulumi:"publisherEmail"`
	// Publisher name.
	PublisherName string `pulumi:"publisherName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// SKU properties of the API Management service.
	Sku ApiManagementServiceSkuProperties `pulumi:"sku"`
	// API Management service tags. A maximum of 10 tags can be provided for a resource, and each tag must have a key no greater than 128 characters (and a value no greater than 256 characters).
	Tags map[string]string `pulumi:"tags"`
	// The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.
	VpnType *string `pulumi:"vpnType"`
	// Virtual network configuration of the API Management service.
	Vpnconfiguration *VirtualNetworkConfiguration `pulumi:"vpnconfiguration"`
}

// The set of arguments for constructing a ApiManagementService resource.
type ApiManagementServiceArgs struct {
	// Additional datacenter locations of the API Management service.
	AdditionalLocations AdditionalRegionArrayInput
	// Addresser email.
	AddresserEmail pulumi.StringPtrInput
	// Custom properties of the API Management service, like disabling TLS 1.0.
	CustomProperties pulumi.StringMapInput
	// ETag of the resource.
	Etag pulumi.StringPtrInput
	// Custom hostname configuration of the API Management service.
	HostnameConfigurations HostnameConfigurationArrayInput
	// Datacenter location of the API Management service.
	Location pulumi.StringInput
	// The name of the API Management service.
	Name pulumi.StringInput
	// Publisher email.
	PublisherEmail pulumi.StringInput
	// Publisher name.
	PublisherName pulumi.StringInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// SKU properties of the API Management service.
	Sku ApiManagementServiceSkuPropertiesInput
	// API Management service tags. A maximum of 10 tags can be provided for a resource, and each tag must have a key no greater than 128 characters (and a value no greater than 256 characters).
	Tags pulumi.StringMapInput
	// The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.
	VpnType pulumi.StringPtrInput
	// Virtual network configuration of the API Management service.
	Vpnconfiguration VirtualNetworkConfigurationPtrInput
}

func (ApiManagementServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiManagementServiceArgs)(nil)).Elem()
}
