// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Api details.
type ServiceApi struct {
	pulumi.CustomResourceState

	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Api entity contract properties.
	Properties ApiContractPropertiesResponseOutput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewServiceApi registers a new resource with the given unique name, arguments, and options.
func NewServiceApi(ctx *pulumi.Context,
	name string, args *ServiceApiArgs, opts ...pulumi.ResourceOption) (*ServiceApi, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.ServiceName == nil {
		return nil, errors.New("missing required argument 'ServiceName'")
	}
	if args == nil {
		args = &ServiceApiArgs{}
	}
	var resource ServiceApi
	err := ctx.RegisterResource("azurerm:apimanagement:ServiceApi", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceApi gets an existing ServiceApi resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceApi(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceApiState, opts ...pulumi.ResourceOption) (*ServiceApi, error) {
	var resource ServiceApi
	err := ctx.ReadResource("azurerm:apimanagement:ServiceApi", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceApi resources.
type serviceApiState struct {
	// Resource name.
	Name *string `pulumi:"name"`
	// Api entity contract properties.
	Properties *ApiContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type *string `pulumi:"type"`
}

type ServiceApiState struct {
	// Resource name.
	Name pulumi.StringPtrInput
	// Api entity contract properties.
	Properties ApiContractPropertiesResponsePtrInput
	// Resource type for API Management resource.
	Type pulumi.StringPtrInput
}

func (ServiceApiState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceApiState)(nil)).Elem()
}

type serviceApiArgs struct {
	// API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
	Name string `pulumi:"name"`
	// Api entity create of update properties.
	Properties *ApiCreateOrUpdateProperties `pulumi:"properties"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
}

// The set of arguments for constructing a ServiceApi resource.
type ServiceApiArgs struct {
	// API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
	Name pulumi.StringInput
	// Api entity create of update properties.
	Properties ApiCreateOrUpdatePropertiesPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// The name of the API Management service.
	ServiceName pulumi.StringInput
}

func (ServiceApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceApiArgs)(nil)).Elem()
}
