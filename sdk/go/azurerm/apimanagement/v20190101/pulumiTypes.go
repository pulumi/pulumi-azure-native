// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Description of an additional API Management resource location.
type AdditionalLocation struct {
	// The location name of the additional region among Azure Data center regions.
	Location string `pulumi:"location"`
	// SKU properties of the API Management service.
	Sku ApiManagementServiceSkuProperties `pulumi:"sku"`
	// Virtual network configuration for the location.
	VirtualNetworkConfiguration *VirtualNetworkConfiguration `pulumi:"virtualNetworkConfiguration"`
}

// AdditionalLocationInput is an input type that accepts AdditionalLocationArgs and AdditionalLocationOutput values.
// You can construct a concrete instance of `AdditionalLocationInput` via:
//
//          AdditionalLocationArgs{...}
type AdditionalLocationInput interface {
	pulumi.Input

	ToAdditionalLocationOutput() AdditionalLocationOutput
	ToAdditionalLocationOutputWithContext(context.Context) AdditionalLocationOutput
}

// Description of an additional API Management resource location.
type AdditionalLocationArgs struct {
	// The location name of the additional region among Azure Data center regions.
	Location pulumi.StringInput `pulumi:"location"`
	// SKU properties of the API Management service.
	Sku ApiManagementServiceSkuPropertiesInput `pulumi:"sku"`
	// Virtual network configuration for the location.
	VirtualNetworkConfiguration VirtualNetworkConfigurationPtrInput `pulumi:"virtualNetworkConfiguration"`
}

func (AdditionalLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalLocation)(nil)).Elem()
}

func (i AdditionalLocationArgs) ToAdditionalLocationOutput() AdditionalLocationOutput {
	return i.ToAdditionalLocationOutputWithContext(context.Background())
}

func (i AdditionalLocationArgs) ToAdditionalLocationOutputWithContext(ctx context.Context) AdditionalLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalLocationOutput)
}

// AdditionalLocationArrayInput is an input type that accepts AdditionalLocationArray and AdditionalLocationArrayOutput values.
// You can construct a concrete instance of `AdditionalLocationArrayInput` via:
//
//          AdditionalLocationArray{ AdditionalLocationArgs{...} }
type AdditionalLocationArrayInput interface {
	pulumi.Input

	ToAdditionalLocationArrayOutput() AdditionalLocationArrayOutput
	ToAdditionalLocationArrayOutputWithContext(context.Context) AdditionalLocationArrayOutput
}

type AdditionalLocationArray []AdditionalLocationInput

func (AdditionalLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalLocation)(nil)).Elem()
}

func (i AdditionalLocationArray) ToAdditionalLocationArrayOutput() AdditionalLocationArrayOutput {
	return i.ToAdditionalLocationArrayOutputWithContext(context.Background())
}

func (i AdditionalLocationArray) ToAdditionalLocationArrayOutputWithContext(ctx context.Context) AdditionalLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalLocationArrayOutput)
}

// Description of an additional API Management resource location.
type AdditionalLocationOutput struct{ *pulumi.OutputState }

func (AdditionalLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalLocation)(nil)).Elem()
}

func (o AdditionalLocationOutput) ToAdditionalLocationOutput() AdditionalLocationOutput {
	return o
}

func (o AdditionalLocationOutput) ToAdditionalLocationOutputWithContext(ctx context.Context) AdditionalLocationOutput {
	return o
}

// The location name of the additional region among Azure Data center regions.
func (o AdditionalLocationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v AdditionalLocation) string { return v.Location }).(pulumi.StringOutput)
}

// SKU properties of the API Management service.
func (o AdditionalLocationOutput) Sku() ApiManagementServiceSkuPropertiesOutput {
	return o.ApplyT(func(v AdditionalLocation) ApiManagementServiceSkuProperties { return v.Sku }).(ApiManagementServiceSkuPropertiesOutput)
}

// Virtual network configuration for the location.
func (o AdditionalLocationOutput) VirtualNetworkConfiguration() VirtualNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v AdditionalLocation) *VirtualNetworkConfiguration { return v.VirtualNetworkConfiguration }).(VirtualNetworkConfigurationPtrOutput)
}

type AdditionalLocationArrayOutput struct{ *pulumi.OutputState }

func (AdditionalLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalLocation)(nil)).Elem()
}

func (o AdditionalLocationArrayOutput) ToAdditionalLocationArrayOutput() AdditionalLocationArrayOutput {
	return o
}

func (o AdditionalLocationArrayOutput) ToAdditionalLocationArrayOutputWithContext(ctx context.Context) AdditionalLocationArrayOutput {
	return o
}

func (o AdditionalLocationArrayOutput) Index(i pulumi.IntInput) AdditionalLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdditionalLocation {
		return vs[0].([]AdditionalLocation)[vs[1].(int)]
	}).(AdditionalLocationOutput)
}

// Description of an additional API Management resource location.
type AdditionalLocationResponse struct {
	// Gateway URL of the API Management service in the Region.
	GatewayRegionalUrl string `pulumi:"gatewayRegionalUrl"`
	// The location name of the additional region among Azure Data center regions.
	Location string `pulumi:"location"`
	// Private Static Load Balanced IP addresses of the API Management service which is deployed in an Internal Virtual Network in a particular additional location. Available only for Basic, Standard and Premium SKU.
	PrivateIPAddresses []string `pulumi:"privateIPAddresses"`
	// Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
	PublicIPAddresses []string `pulumi:"publicIPAddresses"`
	// SKU properties of the API Management service.
	Sku ApiManagementServiceSkuPropertiesResponse `pulumi:"sku"`
	// Virtual network configuration for the location.
	VirtualNetworkConfiguration *VirtualNetworkConfigurationResponse `pulumi:"virtualNetworkConfiguration"`
}

// AdditionalLocationResponseInput is an input type that accepts AdditionalLocationResponseArgs and AdditionalLocationResponseOutput values.
// You can construct a concrete instance of `AdditionalLocationResponseInput` via:
//
//          AdditionalLocationResponseArgs{...}
type AdditionalLocationResponseInput interface {
	pulumi.Input

	ToAdditionalLocationResponseOutput() AdditionalLocationResponseOutput
	ToAdditionalLocationResponseOutputWithContext(context.Context) AdditionalLocationResponseOutput
}

// Description of an additional API Management resource location.
type AdditionalLocationResponseArgs struct {
	// Gateway URL of the API Management service in the Region.
	GatewayRegionalUrl pulumi.StringInput `pulumi:"gatewayRegionalUrl"`
	// The location name of the additional region among Azure Data center regions.
	Location pulumi.StringInput `pulumi:"location"`
	// Private Static Load Balanced IP addresses of the API Management service which is deployed in an Internal Virtual Network in a particular additional location. Available only for Basic, Standard and Premium SKU.
	PrivateIPAddresses pulumi.StringArrayInput `pulumi:"privateIPAddresses"`
	// Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
	PublicIPAddresses pulumi.StringArrayInput `pulumi:"publicIPAddresses"`
	// SKU properties of the API Management service.
	Sku ApiManagementServiceSkuPropertiesResponseInput `pulumi:"sku"`
	// Virtual network configuration for the location.
	VirtualNetworkConfiguration VirtualNetworkConfigurationResponsePtrInput `pulumi:"virtualNetworkConfiguration"`
}

func (AdditionalLocationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalLocationResponse)(nil)).Elem()
}

func (i AdditionalLocationResponseArgs) ToAdditionalLocationResponseOutput() AdditionalLocationResponseOutput {
	return i.ToAdditionalLocationResponseOutputWithContext(context.Background())
}

func (i AdditionalLocationResponseArgs) ToAdditionalLocationResponseOutputWithContext(ctx context.Context) AdditionalLocationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalLocationResponseOutput)
}

// AdditionalLocationResponseArrayInput is an input type that accepts AdditionalLocationResponseArray and AdditionalLocationResponseArrayOutput values.
// You can construct a concrete instance of `AdditionalLocationResponseArrayInput` via:
//
//          AdditionalLocationResponseArray{ AdditionalLocationResponseArgs{...} }
type AdditionalLocationResponseArrayInput interface {
	pulumi.Input

	ToAdditionalLocationResponseArrayOutput() AdditionalLocationResponseArrayOutput
	ToAdditionalLocationResponseArrayOutputWithContext(context.Context) AdditionalLocationResponseArrayOutput
}

type AdditionalLocationResponseArray []AdditionalLocationResponseInput

func (AdditionalLocationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalLocationResponse)(nil)).Elem()
}

func (i AdditionalLocationResponseArray) ToAdditionalLocationResponseArrayOutput() AdditionalLocationResponseArrayOutput {
	return i.ToAdditionalLocationResponseArrayOutputWithContext(context.Background())
}

func (i AdditionalLocationResponseArray) ToAdditionalLocationResponseArrayOutputWithContext(ctx context.Context) AdditionalLocationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalLocationResponseArrayOutput)
}

// Description of an additional API Management resource location.
type AdditionalLocationResponseOutput struct{ *pulumi.OutputState }

func (AdditionalLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalLocationResponse)(nil)).Elem()
}

func (o AdditionalLocationResponseOutput) ToAdditionalLocationResponseOutput() AdditionalLocationResponseOutput {
	return o
}

func (o AdditionalLocationResponseOutput) ToAdditionalLocationResponseOutputWithContext(ctx context.Context) AdditionalLocationResponseOutput {
	return o
}

// Gateway URL of the API Management service in the Region.
func (o AdditionalLocationResponseOutput) GatewayRegionalUrl() pulumi.StringOutput {
	return o.ApplyT(func(v AdditionalLocationResponse) string { return v.GatewayRegionalUrl }).(pulumi.StringOutput)
}

// The location name of the additional region among Azure Data center regions.
func (o AdditionalLocationResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v AdditionalLocationResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Private Static Load Balanced IP addresses of the API Management service which is deployed in an Internal Virtual Network in a particular additional location. Available only for Basic, Standard and Premium SKU.
func (o AdditionalLocationResponseOutput) PrivateIPAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AdditionalLocationResponse) []string { return v.PrivateIPAddresses }).(pulumi.StringArrayOutput)
}

// Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
func (o AdditionalLocationResponseOutput) PublicIPAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AdditionalLocationResponse) []string { return v.PublicIPAddresses }).(pulumi.StringArrayOutput)
}

// SKU properties of the API Management service.
func (o AdditionalLocationResponseOutput) Sku() ApiManagementServiceSkuPropertiesResponseOutput {
	return o.ApplyT(func(v AdditionalLocationResponse) ApiManagementServiceSkuPropertiesResponse { return v.Sku }).(ApiManagementServiceSkuPropertiesResponseOutput)
}

// Virtual network configuration for the location.
func (o AdditionalLocationResponseOutput) VirtualNetworkConfiguration() VirtualNetworkConfigurationResponsePtrOutput {
	return o.ApplyT(func(v AdditionalLocationResponse) *VirtualNetworkConfigurationResponse {
		return v.VirtualNetworkConfiguration
	}).(VirtualNetworkConfigurationResponsePtrOutput)
}

type AdditionalLocationResponseArrayOutput struct{ *pulumi.OutputState }

func (AdditionalLocationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalLocationResponse)(nil)).Elem()
}

func (o AdditionalLocationResponseArrayOutput) ToAdditionalLocationResponseArrayOutput() AdditionalLocationResponseArrayOutput {
	return o
}

func (o AdditionalLocationResponseArrayOutput) ToAdditionalLocationResponseArrayOutputWithContext(ctx context.Context) AdditionalLocationResponseArrayOutput {
	return o
}

func (o AdditionalLocationResponseArrayOutput) Index(i pulumi.IntInput) AdditionalLocationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdditionalLocationResponse {
		return vs[0].([]AdditionalLocationResponse)[vs[1].(int)]
	}).(AdditionalLocationResponseOutput)
}

// Api details.
type ApiType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Api entity contract properties.
	Properties ApiContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// ApiTypeInput is an input type that accepts ApiTypeArgs and ApiTypeOutput values.
// You can construct a concrete instance of `ApiTypeInput` via:
//
//          ApiTypeArgs{...}
type ApiTypeInput interface {
	pulumi.Input

	ToApiTypeOutput() ApiTypeOutput
	ToApiTypeOutputWithContext(context.Context) ApiTypeOutput
}

// Api details.
type ApiTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Api entity contract properties.
	Properties ApiContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApiTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiType)(nil)).Elem()
}

func (i ApiTypeArgs) ToApiTypeOutput() ApiTypeOutput {
	return i.ToApiTypeOutputWithContext(context.Background())
}

func (i ApiTypeArgs) ToApiTypeOutputWithContext(ctx context.Context) ApiTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiTypeOutput)
}

// Api details.
type ApiTypeOutput struct{ *pulumi.OutputState }

func (ApiTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiType)(nil)).Elem()
}

func (o ApiTypeOutput) ToApiTypeOutput() ApiTypeOutput {
	return o
}

func (o ApiTypeOutput) ToApiTypeOutputWithContext(ctx context.Context) ApiTypeOutput {
	return o
}

// Resource name.
func (o ApiTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiType) string { return v.Name }).(pulumi.StringOutput)
}

// Api entity contract properties.
func (o ApiTypeOutput) Properties() ApiContractPropertiesResponseOutput {
	return o.ApplyT(func(v ApiType) ApiContractPropertiesResponse { return v.Properties }).(ApiContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o ApiTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiType) string { return v.Type }).(pulumi.StringOutput)
}

// Api Entity Properties
type ApiContractPropertiesResponse struct {
	// Describes the Revision of the Api. If no value is provided, default revision 1 is created
	ApiRevision *string `pulumi:"apiRevision"`
	// Description of the Api Revision.
	ApiRevisionDescription *string `pulumi:"apiRevisionDescription"`
	// Indicates the Version identifier of the API if the API is versioned
	ApiVersion *string `pulumi:"apiVersion"`
	// Description of the Api Version.
	ApiVersionDescription *string `pulumi:"apiVersionDescription"`
	// Version set details
	ApiVersionSet *ApiVersionSetContractDetailsResponse `pulumi:"apiVersionSet"`
	// A resource identifier for the related ApiVersionSet.
	ApiVersionSetId *string `pulumi:"apiVersionSetId"`
	// Collection of authentication settings included into this API.
	AuthenticationSettings *AuthenticationSettingsContractResponse `pulumi:"authenticationSettings"`
	// Description of the API. May include HTML formatting tags.
	Description *string `pulumi:"description"`
	// API name. Must be 1 to 300 characters long.
	DisplayName *string `pulumi:"displayName"`
	// Indicates if API revision is current api revision.
	IsCurrent *bool `pulumi:"isCurrent"`
	// Indicates if API revision is accessible via the gateway.
	IsOnline bool `pulumi:"isOnline"`
	// Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
	Path string `pulumi:"path"`
	// Describes on which protocols the operations in this API can be invoked.
	Protocols []string `pulumi:"protocols"`
	// Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.
	ServiceUrl *string `pulumi:"serviceUrl"`
	// API identifier of the source API.
	SourceApiId *string `pulumi:"sourceApiId"`
	// Protocols over which API is made available.
	SubscriptionKeyParameterNames *SubscriptionKeyParameterNamesContractResponse `pulumi:"subscriptionKeyParameterNames"`
	// Specifies whether an API or Product subscription is required for accessing the API.
	SubscriptionRequired *bool `pulumi:"subscriptionRequired"`
	// Type of API.
	Type *string `pulumi:"type"`
}

// ApiContractPropertiesResponseInput is an input type that accepts ApiContractPropertiesResponseArgs and ApiContractPropertiesResponseOutput values.
// You can construct a concrete instance of `ApiContractPropertiesResponseInput` via:
//
//          ApiContractPropertiesResponseArgs{...}
type ApiContractPropertiesResponseInput interface {
	pulumi.Input

	ToApiContractPropertiesResponseOutput() ApiContractPropertiesResponseOutput
	ToApiContractPropertiesResponseOutputWithContext(context.Context) ApiContractPropertiesResponseOutput
}

// Api Entity Properties
type ApiContractPropertiesResponseArgs struct {
	// Describes the Revision of the Api. If no value is provided, default revision 1 is created
	ApiRevision pulumi.StringPtrInput `pulumi:"apiRevision"`
	// Description of the Api Revision.
	ApiRevisionDescription pulumi.StringPtrInput `pulumi:"apiRevisionDescription"`
	// Indicates the Version identifier of the API if the API is versioned
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Description of the Api Version.
	ApiVersionDescription pulumi.StringPtrInput `pulumi:"apiVersionDescription"`
	// Version set details
	ApiVersionSet ApiVersionSetContractDetailsResponsePtrInput `pulumi:"apiVersionSet"`
	// A resource identifier for the related ApiVersionSet.
	ApiVersionSetId pulumi.StringPtrInput `pulumi:"apiVersionSetId"`
	// Collection of authentication settings included into this API.
	AuthenticationSettings AuthenticationSettingsContractResponsePtrInput `pulumi:"authenticationSettings"`
	// Description of the API. May include HTML formatting tags.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// API name. Must be 1 to 300 characters long.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Indicates if API revision is current api revision.
	IsCurrent pulumi.BoolPtrInput `pulumi:"isCurrent"`
	// Indicates if API revision is accessible via the gateway.
	IsOnline pulumi.BoolInput `pulumi:"isOnline"`
	// Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
	Path pulumi.StringInput `pulumi:"path"`
	// Describes on which protocols the operations in this API can be invoked.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
	// Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.
	ServiceUrl pulumi.StringPtrInput `pulumi:"serviceUrl"`
	// API identifier of the source API.
	SourceApiId pulumi.StringPtrInput `pulumi:"sourceApiId"`
	// Protocols over which API is made available.
	SubscriptionKeyParameterNames SubscriptionKeyParameterNamesContractResponsePtrInput `pulumi:"subscriptionKeyParameterNames"`
	// Specifies whether an API or Product subscription is required for accessing the API.
	SubscriptionRequired pulumi.BoolPtrInput `pulumi:"subscriptionRequired"`
	// Type of API.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApiContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiContractPropertiesResponse)(nil)).Elem()
}

func (i ApiContractPropertiesResponseArgs) ToApiContractPropertiesResponseOutput() ApiContractPropertiesResponseOutput {
	return i.ToApiContractPropertiesResponseOutputWithContext(context.Background())
}

func (i ApiContractPropertiesResponseArgs) ToApiContractPropertiesResponseOutputWithContext(ctx context.Context) ApiContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiContractPropertiesResponseOutput)
}

func (i ApiContractPropertiesResponseArgs) ToApiContractPropertiesResponsePtrOutput() ApiContractPropertiesResponsePtrOutput {
	return i.ToApiContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ApiContractPropertiesResponseArgs) ToApiContractPropertiesResponsePtrOutputWithContext(ctx context.Context) ApiContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiContractPropertiesResponseOutput).ToApiContractPropertiesResponsePtrOutputWithContext(ctx)
}

// ApiContractPropertiesResponsePtrInput is an input type that accepts ApiContractPropertiesResponseArgs, ApiContractPropertiesResponsePtr and ApiContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ApiContractPropertiesResponsePtrInput` via:
//
//          ApiContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ApiContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToApiContractPropertiesResponsePtrOutput() ApiContractPropertiesResponsePtrOutput
	ToApiContractPropertiesResponsePtrOutputWithContext(context.Context) ApiContractPropertiesResponsePtrOutput
}

type apiContractPropertiesResponsePtrType ApiContractPropertiesResponseArgs

func ApiContractPropertiesResponsePtr(v *ApiContractPropertiesResponseArgs) ApiContractPropertiesResponsePtrInput {
	return (*apiContractPropertiesResponsePtrType)(v)
}

func (*apiContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiContractPropertiesResponse)(nil)).Elem()
}

func (i *apiContractPropertiesResponsePtrType) ToApiContractPropertiesResponsePtrOutput() ApiContractPropertiesResponsePtrOutput {
	return i.ToApiContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *apiContractPropertiesResponsePtrType) ToApiContractPropertiesResponsePtrOutputWithContext(ctx context.Context) ApiContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiContractPropertiesResponsePtrOutput)
}

// Api Entity Properties
type ApiContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApiContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiContractPropertiesResponse)(nil)).Elem()
}

func (o ApiContractPropertiesResponseOutput) ToApiContractPropertiesResponseOutput() ApiContractPropertiesResponseOutput {
	return o
}

func (o ApiContractPropertiesResponseOutput) ToApiContractPropertiesResponseOutputWithContext(ctx context.Context) ApiContractPropertiesResponseOutput {
	return o
}

func (o ApiContractPropertiesResponseOutput) ToApiContractPropertiesResponsePtrOutput() ApiContractPropertiesResponsePtrOutput {
	return o.ToApiContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ApiContractPropertiesResponseOutput) ToApiContractPropertiesResponsePtrOutputWithContext(ctx context.Context) ApiContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ApiContractPropertiesResponse) *ApiContractPropertiesResponse {
		return &v
	}).(ApiContractPropertiesResponsePtrOutput)
}

// Describes the Revision of the Api. If no value is provided, default revision 1 is created
func (o ApiContractPropertiesResponseOutput) ApiRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiContractPropertiesResponse) *string { return v.ApiRevision }).(pulumi.StringPtrOutput)
}

// Description of the Api Revision.
func (o ApiContractPropertiesResponseOutput) ApiRevisionDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiContractPropertiesResponse) *string { return v.ApiRevisionDescription }).(pulumi.StringPtrOutput)
}

// Indicates the Version identifier of the API if the API is versioned
func (o ApiContractPropertiesResponseOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiContractPropertiesResponse) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Description of the Api Version.
func (o ApiContractPropertiesResponseOutput) ApiVersionDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiContractPropertiesResponse) *string { return v.ApiVersionDescription }).(pulumi.StringPtrOutput)
}

// Version set details
func (o ApiContractPropertiesResponseOutput) ApiVersionSet() ApiVersionSetContractDetailsResponsePtrOutput {
	return o.ApplyT(func(v ApiContractPropertiesResponse) *ApiVersionSetContractDetailsResponse { return v.ApiVersionSet }).(ApiVersionSetContractDetailsResponsePtrOutput)
}

// A resource identifier for the related ApiVersionSet.
func (o ApiContractPropertiesResponseOutput) ApiVersionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiContractPropertiesResponse) *string { return v.ApiVersionSetId }).(pulumi.StringPtrOutput)
}

// Collection of authentication settings included into this API.
func (o ApiContractPropertiesResponseOutput) AuthenticationSettings() AuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v ApiContractPropertiesResponse) *AuthenticationSettingsContractResponse {
		return v.AuthenticationSettings
	}).(AuthenticationSettingsContractResponsePtrOutput)
}

// Description of the API. May include HTML formatting tags.
func (o ApiContractPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiContractPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// API name. Must be 1 to 300 characters long.
func (o ApiContractPropertiesResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiContractPropertiesResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Indicates if API revision is current api revision.
func (o ApiContractPropertiesResponseOutput) IsCurrent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiContractPropertiesResponse) *bool { return v.IsCurrent }).(pulumi.BoolPtrOutput)
}

// Indicates if API revision is accessible via the gateway.
func (o ApiContractPropertiesResponseOutput) IsOnline() pulumi.BoolOutput {
	return o.ApplyT(func(v ApiContractPropertiesResponse) bool { return v.IsOnline }).(pulumi.BoolOutput)
}

// Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
func (o ApiContractPropertiesResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ApiContractPropertiesResponse) string { return v.Path }).(pulumi.StringOutput)
}

// Describes on which protocols the operations in this API can be invoked.
func (o ApiContractPropertiesResponseOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiContractPropertiesResponse) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.
func (o ApiContractPropertiesResponseOutput) ServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiContractPropertiesResponse) *string { return v.ServiceUrl }).(pulumi.StringPtrOutput)
}

// API identifier of the source API.
func (o ApiContractPropertiesResponseOutput) SourceApiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiContractPropertiesResponse) *string { return v.SourceApiId }).(pulumi.StringPtrOutput)
}

// Protocols over which API is made available.
func (o ApiContractPropertiesResponseOutput) SubscriptionKeyParameterNames() SubscriptionKeyParameterNamesContractResponsePtrOutput {
	return o.ApplyT(func(v ApiContractPropertiesResponse) *SubscriptionKeyParameterNamesContractResponse {
		return v.SubscriptionKeyParameterNames
	}).(SubscriptionKeyParameterNamesContractResponsePtrOutput)
}

// Specifies whether an API or Product subscription is required for accessing the API.
func (o ApiContractPropertiesResponseOutput) SubscriptionRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiContractPropertiesResponse) *bool { return v.SubscriptionRequired }).(pulumi.BoolPtrOutput)
}

// Type of API.
func (o ApiContractPropertiesResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiContractPropertiesResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApiContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiContractPropertiesResponse)(nil)).Elem()
}

func (o ApiContractPropertiesResponsePtrOutput) ToApiContractPropertiesResponsePtrOutput() ApiContractPropertiesResponsePtrOutput {
	return o
}

func (o ApiContractPropertiesResponsePtrOutput) ToApiContractPropertiesResponsePtrOutputWithContext(ctx context.Context) ApiContractPropertiesResponsePtrOutput {
	return o
}

func (o ApiContractPropertiesResponsePtrOutput) Elem() ApiContractPropertiesResponseOutput {
	return o.ApplyT(func(v *ApiContractPropertiesResponse) ApiContractPropertiesResponse { return *v }).(ApiContractPropertiesResponseOutput)
}

// Describes the Revision of the Api. If no value is provided, default revision 1 is created
func (o ApiContractPropertiesResponsePtrOutput) ApiRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiRevision
	}).(pulumi.StringPtrOutput)
}

// Description of the Api Revision.
func (o ApiContractPropertiesResponsePtrOutput) ApiRevisionDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiRevisionDescription
	}).(pulumi.StringPtrOutput)
}

// Indicates the Version identifier of the API if the API is versioned
func (o ApiContractPropertiesResponsePtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Description of the Api Version.
func (o ApiContractPropertiesResponsePtrOutput) ApiVersionDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersionDescription
	}).(pulumi.StringPtrOutput)
}

// Version set details
func (o ApiContractPropertiesResponsePtrOutput) ApiVersionSet() ApiVersionSetContractDetailsResponsePtrOutput {
	return o.ApplyT(func(v *ApiContractPropertiesResponse) *ApiVersionSetContractDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ApiVersionSet
	}).(ApiVersionSetContractDetailsResponsePtrOutput)
}

// A resource identifier for the related ApiVersionSet.
func (o ApiContractPropertiesResponsePtrOutput) ApiVersionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersionSetId
	}).(pulumi.StringPtrOutput)
}

// Collection of authentication settings included into this API.
func (o ApiContractPropertiesResponsePtrOutput) AuthenticationSettings() AuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v *ApiContractPropertiesResponse) *AuthenticationSettingsContractResponse {
		if v == nil {
			return nil
		}
		return v.AuthenticationSettings
	}).(AuthenticationSettingsContractResponsePtrOutput)
}

// Description of the API. May include HTML formatting tags.
func (o ApiContractPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// API name. Must be 1 to 300 characters long.
func (o ApiContractPropertiesResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Indicates if API revision is current api revision.
func (o ApiContractPropertiesResponsePtrOutput) IsCurrent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApiContractPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsCurrent
	}).(pulumi.BoolPtrOutput)
}

// Indicates if API revision is accessible via the gateway.
func (o ApiContractPropertiesResponsePtrOutput) IsOnline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApiContractPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsOnline
	}).(pulumi.BoolPtrOutput)
}

// Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
func (o ApiContractPropertiesResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Describes on which protocols the operations in this API can be invoked.
func (o ApiContractPropertiesResponsePtrOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiContractPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Protocols
	}).(pulumi.StringArrayOutput)
}

// Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.
func (o ApiContractPropertiesResponsePtrOutput) ServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceUrl
	}).(pulumi.StringPtrOutput)
}

// API identifier of the source API.
func (o ApiContractPropertiesResponsePtrOutput) SourceApiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SourceApiId
	}).(pulumi.StringPtrOutput)
}

// Protocols over which API is made available.
func (o ApiContractPropertiesResponsePtrOutput) SubscriptionKeyParameterNames() SubscriptionKeyParameterNamesContractResponsePtrOutput {
	return o.ApplyT(func(v *ApiContractPropertiesResponse) *SubscriptionKeyParameterNamesContractResponse {
		if v == nil {
			return nil
		}
		return v.SubscriptionKeyParameterNames
	}).(SubscriptionKeyParameterNamesContractResponsePtrOutput)
}

// Specifies whether an API or Product subscription is required for accessing the API.
func (o ApiContractPropertiesResponsePtrOutput) SubscriptionRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApiContractPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SubscriptionRequired
	}).(pulumi.BoolPtrOutput)
}

// Type of API.
func (o ApiContractPropertiesResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Criteria to limit import of WSDL to a subset of the document.
type ApiCreateOrUpdatePropertiesProperties struct {
	// Name of endpoint(port) to import from WSDL
	WsdlEndpointName *string `pulumi:"wsdlEndpointName"`
	// Name of service to import from WSDL
	WsdlServiceName *string `pulumi:"wsdlServiceName"`
}

// ApiCreateOrUpdatePropertiesPropertiesInput is an input type that accepts ApiCreateOrUpdatePropertiesPropertiesArgs and ApiCreateOrUpdatePropertiesPropertiesOutput values.
// You can construct a concrete instance of `ApiCreateOrUpdatePropertiesPropertiesInput` via:
//
//          ApiCreateOrUpdatePropertiesPropertiesArgs{...}
type ApiCreateOrUpdatePropertiesPropertiesInput interface {
	pulumi.Input

	ToApiCreateOrUpdatePropertiesPropertiesOutput() ApiCreateOrUpdatePropertiesPropertiesOutput
	ToApiCreateOrUpdatePropertiesPropertiesOutputWithContext(context.Context) ApiCreateOrUpdatePropertiesPropertiesOutput
}

// Criteria to limit import of WSDL to a subset of the document.
type ApiCreateOrUpdatePropertiesPropertiesArgs struct {
	// Name of endpoint(port) to import from WSDL
	WsdlEndpointName pulumi.StringPtrInput `pulumi:"wsdlEndpointName"`
	// Name of service to import from WSDL
	WsdlServiceName pulumi.StringPtrInput `pulumi:"wsdlServiceName"`
}

func (ApiCreateOrUpdatePropertiesPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiCreateOrUpdatePropertiesProperties)(nil)).Elem()
}

func (i ApiCreateOrUpdatePropertiesPropertiesArgs) ToApiCreateOrUpdatePropertiesPropertiesOutput() ApiCreateOrUpdatePropertiesPropertiesOutput {
	return i.ToApiCreateOrUpdatePropertiesPropertiesOutputWithContext(context.Background())
}

func (i ApiCreateOrUpdatePropertiesPropertiesArgs) ToApiCreateOrUpdatePropertiesPropertiesOutputWithContext(ctx context.Context) ApiCreateOrUpdatePropertiesPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiCreateOrUpdatePropertiesPropertiesOutput)
}

func (i ApiCreateOrUpdatePropertiesPropertiesArgs) ToApiCreateOrUpdatePropertiesPropertiesPtrOutput() ApiCreateOrUpdatePropertiesPropertiesPtrOutput {
	return i.ToApiCreateOrUpdatePropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (i ApiCreateOrUpdatePropertiesPropertiesArgs) ToApiCreateOrUpdatePropertiesPropertiesPtrOutputWithContext(ctx context.Context) ApiCreateOrUpdatePropertiesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiCreateOrUpdatePropertiesPropertiesOutput).ToApiCreateOrUpdatePropertiesPropertiesPtrOutputWithContext(ctx)
}

// ApiCreateOrUpdatePropertiesPropertiesPtrInput is an input type that accepts ApiCreateOrUpdatePropertiesPropertiesArgs, ApiCreateOrUpdatePropertiesPropertiesPtr and ApiCreateOrUpdatePropertiesPropertiesPtrOutput values.
// You can construct a concrete instance of `ApiCreateOrUpdatePropertiesPropertiesPtrInput` via:
//
//          ApiCreateOrUpdatePropertiesPropertiesArgs{...}
//
//  or:
//
//          nil
type ApiCreateOrUpdatePropertiesPropertiesPtrInput interface {
	pulumi.Input

	ToApiCreateOrUpdatePropertiesPropertiesPtrOutput() ApiCreateOrUpdatePropertiesPropertiesPtrOutput
	ToApiCreateOrUpdatePropertiesPropertiesPtrOutputWithContext(context.Context) ApiCreateOrUpdatePropertiesPropertiesPtrOutput
}

type apiCreateOrUpdatePropertiesPropertiesPtrType ApiCreateOrUpdatePropertiesPropertiesArgs

func ApiCreateOrUpdatePropertiesPropertiesPtr(v *ApiCreateOrUpdatePropertiesPropertiesArgs) ApiCreateOrUpdatePropertiesPropertiesPtrInput {
	return (*apiCreateOrUpdatePropertiesPropertiesPtrType)(v)
}

func (*apiCreateOrUpdatePropertiesPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiCreateOrUpdatePropertiesProperties)(nil)).Elem()
}

func (i *apiCreateOrUpdatePropertiesPropertiesPtrType) ToApiCreateOrUpdatePropertiesPropertiesPtrOutput() ApiCreateOrUpdatePropertiesPropertiesPtrOutput {
	return i.ToApiCreateOrUpdatePropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (i *apiCreateOrUpdatePropertiesPropertiesPtrType) ToApiCreateOrUpdatePropertiesPropertiesPtrOutputWithContext(ctx context.Context) ApiCreateOrUpdatePropertiesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiCreateOrUpdatePropertiesPropertiesPtrOutput)
}

// Criteria to limit import of WSDL to a subset of the document.
type ApiCreateOrUpdatePropertiesPropertiesOutput struct{ *pulumi.OutputState }

func (ApiCreateOrUpdatePropertiesPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiCreateOrUpdatePropertiesProperties)(nil)).Elem()
}

func (o ApiCreateOrUpdatePropertiesPropertiesOutput) ToApiCreateOrUpdatePropertiesPropertiesOutput() ApiCreateOrUpdatePropertiesPropertiesOutput {
	return o
}

func (o ApiCreateOrUpdatePropertiesPropertiesOutput) ToApiCreateOrUpdatePropertiesPropertiesOutputWithContext(ctx context.Context) ApiCreateOrUpdatePropertiesPropertiesOutput {
	return o
}

func (o ApiCreateOrUpdatePropertiesPropertiesOutput) ToApiCreateOrUpdatePropertiesPropertiesPtrOutput() ApiCreateOrUpdatePropertiesPropertiesPtrOutput {
	return o.ToApiCreateOrUpdatePropertiesPropertiesPtrOutputWithContext(context.Background())
}

func (o ApiCreateOrUpdatePropertiesPropertiesOutput) ToApiCreateOrUpdatePropertiesPropertiesPtrOutputWithContext(ctx context.Context) ApiCreateOrUpdatePropertiesPropertiesPtrOutput {
	return o.ApplyT(func(v ApiCreateOrUpdatePropertiesProperties) *ApiCreateOrUpdatePropertiesProperties {
		return &v
	}).(ApiCreateOrUpdatePropertiesPropertiesPtrOutput)
}

// Name of endpoint(port) to import from WSDL
func (o ApiCreateOrUpdatePropertiesPropertiesOutput) WsdlEndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiCreateOrUpdatePropertiesProperties) *string { return v.WsdlEndpointName }).(pulumi.StringPtrOutput)
}

// Name of service to import from WSDL
func (o ApiCreateOrUpdatePropertiesPropertiesOutput) WsdlServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiCreateOrUpdatePropertiesProperties) *string { return v.WsdlServiceName }).(pulumi.StringPtrOutput)
}

type ApiCreateOrUpdatePropertiesPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ApiCreateOrUpdatePropertiesPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiCreateOrUpdatePropertiesProperties)(nil)).Elem()
}

func (o ApiCreateOrUpdatePropertiesPropertiesPtrOutput) ToApiCreateOrUpdatePropertiesPropertiesPtrOutput() ApiCreateOrUpdatePropertiesPropertiesPtrOutput {
	return o
}

func (o ApiCreateOrUpdatePropertiesPropertiesPtrOutput) ToApiCreateOrUpdatePropertiesPropertiesPtrOutputWithContext(ctx context.Context) ApiCreateOrUpdatePropertiesPropertiesPtrOutput {
	return o
}

func (o ApiCreateOrUpdatePropertiesPropertiesPtrOutput) Elem() ApiCreateOrUpdatePropertiesPropertiesOutput {
	return o.ApplyT(func(v *ApiCreateOrUpdatePropertiesProperties) ApiCreateOrUpdatePropertiesProperties { return *v }).(ApiCreateOrUpdatePropertiesPropertiesOutput)
}

// Name of endpoint(port) to import from WSDL
func (o ApiCreateOrUpdatePropertiesPropertiesPtrOutput) WsdlEndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiCreateOrUpdatePropertiesProperties) *string {
		if v == nil {
			return nil
		}
		return v.WsdlEndpointName
	}).(pulumi.StringPtrOutput)
}

// Name of service to import from WSDL
func (o ApiCreateOrUpdatePropertiesPropertiesPtrOutput) WsdlServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiCreateOrUpdatePropertiesProperties) *string {
		if v == nil {
			return nil
		}
		return v.WsdlServiceName
	}).(pulumi.StringPtrOutput)
}

// Diagnostic details.
type ApiDiagnosticType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Diagnostic entity contract properties.
	Properties DiagnosticContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// ApiDiagnosticTypeInput is an input type that accepts ApiDiagnosticTypeArgs and ApiDiagnosticTypeOutput values.
// You can construct a concrete instance of `ApiDiagnosticTypeInput` via:
//
//          ApiDiagnosticTypeArgs{...}
type ApiDiagnosticTypeInput interface {
	pulumi.Input

	ToApiDiagnosticTypeOutput() ApiDiagnosticTypeOutput
	ToApiDiagnosticTypeOutputWithContext(context.Context) ApiDiagnosticTypeOutput
}

// Diagnostic details.
type ApiDiagnosticTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Diagnostic entity contract properties.
	Properties DiagnosticContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApiDiagnosticTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticType)(nil)).Elem()
}

func (i ApiDiagnosticTypeArgs) ToApiDiagnosticTypeOutput() ApiDiagnosticTypeOutput {
	return i.ToApiDiagnosticTypeOutputWithContext(context.Background())
}

func (i ApiDiagnosticTypeArgs) ToApiDiagnosticTypeOutputWithContext(ctx context.Context) ApiDiagnosticTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticTypeOutput)
}

// Diagnostic details.
type ApiDiagnosticTypeOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticType)(nil)).Elem()
}

func (o ApiDiagnosticTypeOutput) ToApiDiagnosticTypeOutput() ApiDiagnosticTypeOutput {
	return o
}

func (o ApiDiagnosticTypeOutput) ToApiDiagnosticTypeOutputWithContext(ctx context.Context) ApiDiagnosticTypeOutput {
	return o
}

// Resource name.
func (o ApiDiagnosticTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiDiagnosticType) string { return v.Name }).(pulumi.StringOutput)
}

// Diagnostic entity contract properties.
func (o ApiDiagnosticTypeOutput) Properties() DiagnosticContractPropertiesResponseOutput {
	return o.ApplyT(func(v ApiDiagnosticType) DiagnosticContractPropertiesResponse { return v.Properties }).(DiagnosticContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o ApiDiagnosticTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiDiagnosticType) string { return v.Type }).(pulumi.StringOutput)
}

// Issue Contract details.
type ApiIssueType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the Issue.
	Properties IssueContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// ApiIssueTypeInput is an input type that accepts ApiIssueTypeArgs and ApiIssueTypeOutput values.
// You can construct a concrete instance of `ApiIssueTypeInput` via:
//
//          ApiIssueTypeArgs{...}
type ApiIssueTypeInput interface {
	pulumi.Input

	ToApiIssueTypeOutput() ApiIssueTypeOutput
	ToApiIssueTypeOutputWithContext(context.Context) ApiIssueTypeOutput
}

// Issue Contract details.
type ApiIssueTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the Issue.
	Properties IssueContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApiIssueTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiIssueType)(nil)).Elem()
}

func (i ApiIssueTypeArgs) ToApiIssueTypeOutput() ApiIssueTypeOutput {
	return i.ToApiIssueTypeOutputWithContext(context.Background())
}

func (i ApiIssueTypeArgs) ToApiIssueTypeOutputWithContext(ctx context.Context) ApiIssueTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiIssueTypeOutput)
}

// Issue Contract details.
type ApiIssueTypeOutput struct{ *pulumi.OutputState }

func (ApiIssueTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiIssueType)(nil)).Elem()
}

func (o ApiIssueTypeOutput) ToApiIssueTypeOutput() ApiIssueTypeOutput {
	return o
}

func (o ApiIssueTypeOutput) ToApiIssueTypeOutputWithContext(ctx context.Context) ApiIssueTypeOutput {
	return o
}

// Resource name.
func (o ApiIssueTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiIssueType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the Issue.
func (o ApiIssueTypeOutput) Properties() IssueContractPropertiesResponseOutput {
	return o.ApplyT(func(v ApiIssueType) IssueContractPropertiesResponse { return v.Properties }).(IssueContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o ApiIssueTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiIssueType) string { return v.Type }).(pulumi.StringOutput)
}

// Issue Attachment Contract details.
type ApiIssueAttachmentType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the Issue Attachment.
	Properties IssueAttachmentContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// ApiIssueAttachmentTypeInput is an input type that accepts ApiIssueAttachmentTypeArgs and ApiIssueAttachmentTypeOutput values.
// You can construct a concrete instance of `ApiIssueAttachmentTypeInput` via:
//
//          ApiIssueAttachmentTypeArgs{...}
type ApiIssueAttachmentTypeInput interface {
	pulumi.Input

	ToApiIssueAttachmentTypeOutput() ApiIssueAttachmentTypeOutput
	ToApiIssueAttachmentTypeOutputWithContext(context.Context) ApiIssueAttachmentTypeOutput
}

// Issue Attachment Contract details.
type ApiIssueAttachmentTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the Issue Attachment.
	Properties IssueAttachmentContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApiIssueAttachmentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiIssueAttachmentType)(nil)).Elem()
}

func (i ApiIssueAttachmentTypeArgs) ToApiIssueAttachmentTypeOutput() ApiIssueAttachmentTypeOutput {
	return i.ToApiIssueAttachmentTypeOutputWithContext(context.Background())
}

func (i ApiIssueAttachmentTypeArgs) ToApiIssueAttachmentTypeOutputWithContext(ctx context.Context) ApiIssueAttachmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiIssueAttachmentTypeOutput)
}

// Issue Attachment Contract details.
type ApiIssueAttachmentTypeOutput struct{ *pulumi.OutputState }

func (ApiIssueAttachmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiIssueAttachmentType)(nil)).Elem()
}

func (o ApiIssueAttachmentTypeOutput) ToApiIssueAttachmentTypeOutput() ApiIssueAttachmentTypeOutput {
	return o
}

func (o ApiIssueAttachmentTypeOutput) ToApiIssueAttachmentTypeOutputWithContext(ctx context.Context) ApiIssueAttachmentTypeOutput {
	return o
}

// Resource name.
func (o ApiIssueAttachmentTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiIssueAttachmentType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the Issue Attachment.
func (o ApiIssueAttachmentTypeOutput) Properties() IssueAttachmentContractPropertiesResponseOutput {
	return o.ApplyT(func(v ApiIssueAttachmentType) IssueAttachmentContractPropertiesResponse { return v.Properties }).(IssueAttachmentContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o ApiIssueAttachmentTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiIssueAttachmentType) string { return v.Type }).(pulumi.StringOutput)
}

// Issue Comment Contract details.
type ApiIssueCommentType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the Issue Comment.
	Properties IssueCommentContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// ApiIssueCommentTypeInput is an input type that accepts ApiIssueCommentTypeArgs and ApiIssueCommentTypeOutput values.
// You can construct a concrete instance of `ApiIssueCommentTypeInput` via:
//
//          ApiIssueCommentTypeArgs{...}
type ApiIssueCommentTypeInput interface {
	pulumi.Input

	ToApiIssueCommentTypeOutput() ApiIssueCommentTypeOutput
	ToApiIssueCommentTypeOutputWithContext(context.Context) ApiIssueCommentTypeOutput
}

// Issue Comment Contract details.
type ApiIssueCommentTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the Issue Comment.
	Properties IssueCommentContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApiIssueCommentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiIssueCommentType)(nil)).Elem()
}

func (i ApiIssueCommentTypeArgs) ToApiIssueCommentTypeOutput() ApiIssueCommentTypeOutput {
	return i.ToApiIssueCommentTypeOutputWithContext(context.Background())
}

func (i ApiIssueCommentTypeArgs) ToApiIssueCommentTypeOutputWithContext(ctx context.Context) ApiIssueCommentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiIssueCommentTypeOutput)
}

// Issue Comment Contract details.
type ApiIssueCommentTypeOutput struct{ *pulumi.OutputState }

func (ApiIssueCommentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiIssueCommentType)(nil)).Elem()
}

func (o ApiIssueCommentTypeOutput) ToApiIssueCommentTypeOutput() ApiIssueCommentTypeOutput {
	return o
}

func (o ApiIssueCommentTypeOutput) ToApiIssueCommentTypeOutputWithContext(ctx context.Context) ApiIssueCommentTypeOutput {
	return o
}

// Resource name.
func (o ApiIssueCommentTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiIssueCommentType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the Issue Comment.
func (o ApiIssueCommentTypeOutput) Properties() IssueCommentContractPropertiesResponseOutput {
	return o.ApplyT(func(v ApiIssueCommentType) IssueCommentContractPropertiesResponse { return v.Properties }).(IssueCommentContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o ApiIssueCommentTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiIssueCommentType) string { return v.Type }).(pulumi.StringOutput)
}

// A single API Management service resource in List or Get response.
type ApiManagementServiceType struct {
	// ETag of the resource.
	Etag string `pulumi:"etag"`
	// Managed service identity of the Api Management service.
	Identity *ApiManagementServiceIdentityResponse `pulumi:"identity"`
	// Resource location.
	Location string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the API Management service.
	Properties ApiManagementServicePropertiesResponse `pulumi:"properties"`
	// SKU properties of the API Management service.
	Sku ApiManagementServiceSkuPropertiesResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type for API Management resource is set to Microsoft.ApiManagement.
	Type string `pulumi:"type"`
}

// ApiManagementServiceTypeInput is an input type that accepts ApiManagementServiceTypeArgs and ApiManagementServiceTypeOutput values.
// You can construct a concrete instance of `ApiManagementServiceTypeInput` via:
//
//          ApiManagementServiceTypeArgs{...}
type ApiManagementServiceTypeInput interface {
	pulumi.Input

	ToApiManagementServiceTypeOutput() ApiManagementServiceTypeOutput
	ToApiManagementServiceTypeOutputWithContext(context.Context) ApiManagementServiceTypeOutput
}

// A single API Management service resource in List or Get response.
type ApiManagementServiceTypeArgs struct {
	// ETag of the resource.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Managed service identity of the Api Management service.
	Identity ApiManagementServiceIdentityResponsePtrInput `pulumi:"identity"`
	// Resource location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the API Management service.
	Properties ApiManagementServicePropertiesResponseInput `pulumi:"properties"`
	// SKU properties of the API Management service.
	Sku ApiManagementServiceSkuPropertiesResponseInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type for API Management resource is set to Microsoft.ApiManagement.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApiManagementServiceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementServiceType)(nil)).Elem()
}

func (i ApiManagementServiceTypeArgs) ToApiManagementServiceTypeOutput() ApiManagementServiceTypeOutput {
	return i.ToApiManagementServiceTypeOutputWithContext(context.Background())
}

func (i ApiManagementServiceTypeArgs) ToApiManagementServiceTypeOutputWithContext(ctx context.Context) ApiManagementServiceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceTypeOutput)
}

// A single API Management service resource in List or Get response.
type ApiManagementServiceTypeOutput struct{ *pulumi.OutputState }

func (ApiManagementServiceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementServiceType)(nil)).Elem()
}

func (o ApiManagementServiceTypeOutput) ToApiManagementServiceTypeOutput() ApiManagementServiceTypeOutput {
	return o
}

func (o ApiManagementServiceTypeOutput) ToApiManagementServiceTypeOutputWithContext(ctx context.Context) ApiManagementServiceTypeOutput {
	return o
}

// ETag of the resource.
func (o ApiManagementServiceTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServiceType) string { return v.Etag }).(pulumi.StringOutput)
}

// Managed service identity of the Api Management service.
func (o ApiManagementServiceTypeOutput) Identity() ApiManagementServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v ApiManagementServiceType) *ApiManagementServiceIdentityResponse { return v.Identity }).(ApiManagementServiceIdentityResponsePtrOutput)
}

// Resource location.
func (o ApiManagementServiceTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServiceType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name.
func (o ApiManagementServiceTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServiceType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the API Management service.
func (o ApiManagementServiceTypeOutput) Properties() ApiManagementServicePropertiesResponseOutput {
	return o.ApplyT(func(v ApiManagementServiceType) ApiManagementServicePropertiesResponse { return v.Properties }).(ApiManagementServicePropertiesResponseOutput)
}

// SKU properties of the API Management service.
func (o ApiManagementServiceTypeOutput) Sku() ApiManagementServiceSkuPropertiesResponseOutput {
	return o.ApplyT(func(v ApiManagementServiceType) ApiManagementServiceSkuPropertiesResponse { return v.Sku }).(ApiManagementServiceSkuPropertiesResponseOutput)
}

// Resource tags.
func (o ApiManagementServiceTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApiManagementServiceType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type for API Management resource is set to Microsoft.ApiManagement.
func (o ApiManagementServiceTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServiceType) string { return v.Type }).(pulumi.StringOutput)
}

// Identity properties of the Api Management service resource.
type ApiManagementServiceIdentity struct {
	// The identity type. Currently the only supported type is 'SystemAssigned'.
	Type string `pulumi:"type"`
}

// ApiManagementServiceIdentityInput is an input type that accepts ApiManagementServiceIdentityArgs and ApiManagementServiceIdentityOutput values.
// You can construct a concrete instance of `ApiManagementServiceIdentityInput` via:
//
//          ApiManagementServiceIdentityArgs{...}
type ApiManagementServiceIdentityInput interface {
	pulumi.Input

	ToApiManagementServiceIdentityOutput() ApiManagementServiceIdentityOutput
	ToApiManagementServiceIdentityOutputWithContext(context.Context) ApiManagementServiceIdentityOutput
}

// Identity properties of the Api Management service resource.
type ApiManagementServiceIdentityArgs struct {
	// The identity type. Currently the only supported type is 'SystemAssigned'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApiManagementServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementServiceIdentity)(nil)).Elem()
}

func (i ApiManagementServiceIdentityArgs) ToApiManagementServiceIdentityOutput() ApiManagementServiceIdentityOutput {
	return i.ToApiManagementServiceIdentityOutputWithContext(context.Background())
}

func (i ApiManagementServiceIdentityArgs) ToApiManagementServiceIdentityOutputWithContext(ctx context.Context) ApiManagementServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceIdentityOutput)
}

func (i ApiManagementServiceIdentityArgs) ToApiManagementServiceIdentityPtrOutput() ApiManagementServiceIdentityPtrOutput {
	return i.ToApiManagementServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ApiManagementServiceIdentityArgs) ToApiManagementServiceIdentityPtrOutputWithContext(ctx context.Context) ApiManagementServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceIdentityOutput).ToApiManagementServiceIdentityPtrOutputWithContext(ctx)
}

// ApiManagementServiceIdentityPtrInput is an input type that accepts ApiManagementServiceIdentityArgs, ApiManagementServiceIdentityPtr and ApiManagementServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ApiManagementServiceIdentityPtrInput` via:
//
//          ApiManagementServiceIdentityArgs{...}
//
//  or:
//
//          nil
type ApiManagementServiceIdentityPtrInput interface {
	pulumi.Input

	ToApiManagementServiceIdentityPtrOutput() ApiManagementServiceIdentityPtrOutput
	ToApiManagementServiceIdentityPtrOutputWithContext(context.Context) ApiManagementServiceIdentityPtrOutput
}

type apiManagementServiceIdentityPtrType ApiManagementServiceIdentityArgs

func ApiManagementServiceIdentityPtr(v *ApiManagementServiceIdentityArgs) ApiManagementServiceIdentityPtrInput {
	return (*apiManagementServiceIdentityPtrType)(v)
}

func (*apiManagementServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementServiceIdentity)(nil)).Elem()
}

func (i *apiManagementServiceIdentityPtrType) ToApiManagementServiceIdentityPtrOutput() ApiManagementServiceIdentityPtrOutput {
	return i.ToApiManagementServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *apiManagementServiceIdentityPtrType) ToApiManagementServiceIdentityPtrOutputWithContext(ctx context.Context) ApiManagementServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceIdentityPtrOutput)
}

// Identity properties of the Api Management service resource.
type ApiManagementServiceIdentityOutput struct{ *pulumi.OutputState }

func (ApiManagementServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementServiceIdentity)(nil)).Elem()
}

func (o ApiManagementServiceIdentityOutput) ToApiManagementServiceIdentityOutput() ApiManagementServiceIdentityOutput {
	return o
}

func (o ApiManagementServiceIdentityOutput) ToApiManagementServiceIdentityOutputWithContext(ctx context.Context) ApiManagementServiceIdentityOutput {
	return o
}

func (o ApiManagementServiceIdentityOutput) ToApiManagementServiceIdentityPtrOutput() ApiManagementServiceIdentityPtrOutput {
	return o.ToApiManagementServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ApiManagementServiceIdentityOutput) ToApiManagementServiceIdentityPtrOutputWithContext(ctx context.Context) ApiManagementServiceIdentityPtrOutput {
	return o.ApplyT(func(v ApiManagementServiceIdentity) *ApiManagementServiceIdentity {
		return &v
	}).(ApiManagementServiceIdentityPtrOutput)
}

// The identity type. Currently the only supported type is 'SystemAssigned'.
func (o ApiManagementServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type ApiManagementServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ApiManagementServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementServiceIdentity)(nil)).Elem()
}

func (o ApiManagementServiceIdentityPtrOutput) ToApiManagementServiceIdentityPtrOutput() ApiManagementServiceIdentityPtrOutput {
	return o
}

func (o ApiManagementServiceIdentityPtrOutput) ToApiManagementServiceIdentityPtrOutputWithContext(ctx context.Context) ApiManagementServiceIdentityPtrOutput {
	return o
}

func (o ApiManagementServiceIdentityPtrOutput) Elem() ApiManagementServiceIdentityOutput {
	return o.ApplyT(func(v *ApiManagementServiceIdentity) ApiManagementServiceIdentity { return *v }).(ApiManagementServiceIdentityOutput)
}

// The identity type. Currently the only supported type is 'SystemAssigned'.
func (o ApiManagementServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity properties of the Api Management service resource.
type ApiManagementServiceIdentityResponse struct {
	// The principal id of the identity.
	PrincipalId string `pulumi:"principalId"`
	// The client tenant id of the identity.
	TenantId string `pulumi:"tenantId"`
	// The identity type. Currently the only supported type is 'SystemAssigned'.
	Type string `pulumi:"type"`
}

// ApiManagementServiceIdentityResponseInput is an input type that accepts ApiManagementServiceIdentityResponseArgs and ApiManagementServiceIdentityResponseOutput values.
// You can construct a concrete instance of `ApiManagementServiceIdentityResponseInput` via:
//
//          ApiManagementServiceIdentityResponseArgs{...}
type ApiManagementServiceIdentityResponseInput interface {
	pulumi.Input

	ToApiManagementServiceIdentityResponseOutput() ApiManagementServiceIdentityResponseOutput
	ToApiManagementServiceIdentityResponseOutputWithContext(context.Context) ApiManagementServiceIdentityResponseOutput
}

// Identity properties of the Api Management service resource.
type ApiManagementServiceIdentityResponseArgs struct {
	// The principal id of the identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The client tenant id of the identity.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The identity type. Currently the only supported type is 'SystemAssigned'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApiManagementServiceIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementServiceIdentityResponse)(nil)).Elem()
}

func (i ApiManagementServiceIdentityResponseArgs) ToApiManagementServiceIdentityResponseOutput() ApiManagementServiceIdentityResponseOutput {
	return i.ToApiManagementServiceIdentityResponseOutputWithContext(context.Background())
}

func (i ApiManagementServiceIdentityResponseArgs) ToApiManagementServiceIdentityResponseOutputWithContext(ctx context.Context) ApiManagementServiceIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceIdentityResponseOutput)
}

func (i ApiManagementServiceIdentityResponseArgs) ToApiManagementServiceIdentityResponsePtrOutput() ApiManagementServiceIdentityResponsePtrOutput {
	return i.ToApiManagementServiceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i ApiManagementServiceIdentityResponseArgs) ToApiManagementServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ApiManagementServiceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceIdentityResponseOutput).ToApiManagementServiceIdentityResponsePtrOutputWithContext(ctx)
}

// ApiManagementServiceIdentityResponsePtrInput is an input type that accepts ApiManagementServiceIdentityResponseArgs, ApiManagementServiceIdentityResponsePtr and ApiManagementServiceIdentityResponsePtrOutput values.
// You can construct a concrete instance of `ApiManagementServiceIdentityResponsePtrInput` via:
//
//          ApiManagementServiceIdentityResponseArgs{...}
//
//  or:
//
//          nil
type ApiManagementServiceIdentityResponsePtrInput interface {
	pulumi.Input

	ToApiManagementServiceIdentityResponsePtrOutput() ApiManagementServiceIdentityResponsePtrOutput
	ToApiManagementServiceIdentityResponsePtrOutputWithContext(context.Context) ApiManagementServiceIdentityResponsePtrOutput
}

type apiManagementServiceIdentityResponsePtrType ApiManagementServiceIdentityResponseArgs

func ApiManagementServiceIdentityResponsePtr(v *ApiManagementServiceIdentityResponseArgs) ApiManagementServiceIdentityResponsePtrInput {
	return (*apiManagementServiceIdentityResponsePtrType)(v)
}

func (*apiManagementServiceIdentityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementServiceIdentityResponse)(nil)).Elem()
}

func (i *apiManagementServiceIdentityResponsePtrType) ToApiManagementServiceIdentityResponsePtrOutput() ApiManagementServiceIdentityResponsePtrOutput {
	return i.ToApiManagementServiceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *apiManagementServiceIdentityResponsePtrType) ToApiManagementServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ApiManagementServiceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceIdentityResponsePtrOutput)
}

// Identity properties of the Api Management service resource.
type ApiManagementServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ApiManagementServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementServiceIdentityResponse)(nil)).Elem()
}

func (o ApiManagementServiceIdentityResponseOutput) ToApiManagementServiceIdentityResponseOutput() ApiManagementServiceIdentityResponseOutput {
	return o
}

func (o ApiManagementServiceIdentityResponseOutput) ToApiManagementServiceIdentityResponseOutputWithContext(ctx context.Context) ApiManagementServiceIdentityResponseOutput {
	return o
}

func (o ApiManagementServiceIdentityResponseOutput) ToApiManagementServiceIdentityResponsePtrOutput() ApiManagementServiceIdentityResponsePtrOutput {
	return o.ToApiManagementServiceIdentityResponsePtrOutputWithContext(context.Background())
}

func (o ApiManagementServiceIdentityResponseOutput) ToApiManagementServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ApiManagementServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v ApiManagementServiceIdentityResponse) *ApiManagementServiceIdentityResponse {
		return &v
	}).(ApiManagementServiceIdentityResponsePtrOutput)
}

// The principal id of the identity.
func (o ApiManagementServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The client tenant id of the identity.
func (o ApiManagementServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type. Currently the only supported type is 'SystemAssigned'.
func (o ApiManagementServiceIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServiceIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApiManagementServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiManagementServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementServiceIdentityResponse)(nil)).Elem()
}

func (o ApiManagementServiceIdentityResponsePtrOutput) ToApiManagementServiceIdentityResponsePtrOutput() ApiManagementServiceIdentityResponsePtrOutput {
	return o
}

func (o ApiManagementServiceIdentityResponsePtrOutput) ToApiManagementServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ApiManagementServiceIdentityResponsePtrOutput {
	return o
}

func (o ApiManagementServiceIdentityResponsePtrOutput) Elem() ApiManagementServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ApiManagementServiceIdentityResponse) ApiManagementServiceIdentityResponse { return *v }).(ApiManagementServiceIdentityResponseOutput)
}

// The principal id of the identity.
func (o ApiManagementServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The client tenant id of the identity.
func (o ApiManagementServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type. Currently the only supported type is 'SystemAssigned'.
func (o ApiManagementServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of an API Management service resource description.
type ApiManagementServicePropertiesResponse struct {
	// Additional datacenter locations of the API Management service.
	AdditionalLocations []AdditionalLocationResponse `pulumi:"additionalLocations"`
	// List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed is 10.
	Certificates []CertificateConfigurationResponse `pulumi:"certificates"`
	// Creation UTC date of the API Management service.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	CreatedAtUtc string `pulumi:"createdAtUtc"`
	// Custom properties of the API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2).</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` can be used to disable just TLS 1.1 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` can be used to disable TLS 1.0 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2` can be used to enable HTTP2 protocol on an API Management service.</br>Not specifying any of these properties on PATCH operation will reset omitted properties' values to their defaults. For all the settings except Http2 the default value is `True` if the service was created on or before April 1st 2018 and `False` otherwise. Http2 setting's default value is `False`.</br></br>You can disable any of next ciphers by using settings `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.[cipher_name]`: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA. For example, `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256`:`false`. The default value is `true` for them.
	CustomProperties map[string]string `pulumi:"customProperties"`
	// Developer Portal endpoint URL of the API Management service.
	DeveloperPortalUrl string `pulumi:"developerPortalUrl"`
	// Property only meant to be used for Consumption SKU Service. This enforces a client certificate to be presented on each request to the gateway. This also enables the ability to authenticate the certificate in the policy on the gateway.
	EnableClientCertificate *bool `pulumi:"enableClientCertificate"`
	// Gateway URL of the API Management service in the Default Region.
	GatewayRegionalUrl string `pulumi:"gatewayRegionalUrl"`
	// Gateway URL of the API Management service.
	GatewayUrl string `pulumi:"gatewayUrl"`
	// Custom hostname configuration of the API Management service.
	HostnameConfigurations []HostnameConfigurationResponse `pulumi:"hostnameConfigurations"`
	// Management API endpoint URL of the API Management service.
	ManagementApiUrl string `pulumi:"managementApiUrl"`
	// Email address from which the notification will be sent.
	NotificationSenderEmail *string `pulumi:"notificationSenderEmail"`
	// Publisher portal endpoint Url of the API Management service.
	PortalUrl string `pulumi:"portalUrl"`
	// Private Static Load Balanced IP addresses of the API Management service in Primary region which is deployed in an Internal Virtual Network. Available only for Basic, Standard and Premium SKU.
	PrivateIPAddresses []string `pulumi:"privateIPAddresses"`
	// The current provisioning state of the API Management service which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Static Load Balanced IP addresses of the API Management service in Primary region. Available only for Basic, Standard and Premium SKU.
	PublicIPAddresses []string `pulumi:"publicIPAddresses"`
	// Publisher email.
	PublisherEmail string `pulumi:"publisherEmail"`
	// Publisher name.
	PublisherName string `pulumi:"publisherName"`
	// SCM endpoint URL of the API Management service.
	ScmUrl string `pulumi:"scmUrl"`
	// The provisioning state of the API Management service, which is targeted by the long running operation started on the service.
	TargetProvisioningState string `pulumi:"targetProvisioningState"`
	// Virtual network configuration of the API Management service.
	VirtualNetworkConfiguration *VirtualNetworkConfigurationResponse `pulumi:"virtualNetworkConfiguration"`
	// The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.
	VirtualNetworkType *string `pulumi:"virtualNetworkType"`
}

// ApiManagementServicePropertiesResponseInput is an input type that accepts ApiManagementServicePropertiesResponseArgs and ApiManagementServicePropertiesResponseOutput values.
// You can construct a concrete instance of `ApiManagementServicePropertiesResponseInput` via:
//
//          ApiManagementServicePropertiesResponseArgs{...}
type ApiManagementServicePropertiesResponseInput interface {
	pulumi.Input

	ToApiManagementServicePropertiesResponseOutput() ApiManagementServicePropertiesResponseOutput
	ToApiManagementServicePropertiesResponseOutputWithContext(context.Context) ApiManagementServicePropertiesResponseOutput
}

// Properties of an API Management service resource description.
type ApiManagementServicePropertiesResponseArgs struct {
	// Additional datacenter locations of the API Management service.
	AdditionalLocations AdditionalLocationResponseArrayInput `pulumi:"additionalLocations"`
	// List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed is 10.
	Certificates CertificateConfigurationResponseArrayInput `pulumi:"certificates"`
	// Creation UTC date of the API Management service.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	CreatedAtUtc pulumi.StringInput `pulumi:"createdAtUtc"`
	// Custom properties of the API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2).</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` can be used to disable just TLS 1.1 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` can be used to disable TLS 1.0 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2` can be used to enable HTTP2 protocol on an API Management service.</br>Not specifying any of these properties on PATCH operation will reset omitted properties' values to their defaults. For all the settings except Http2 the default value is `True` if the service was created on or before April 1st 2018 and `False` otherwise. Http2 setting's default value is `False`.</br></br>You can disable any of next ciphers by using settings `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.[cipher_name]`: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA. For example, `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256`:`false`. The default value is `true` for them.
	CustomProperties pulumi.StringMapInput `pulumi:"customProperties"`
	// Developer Portal endpoint URL of the API Management service.
	DeveloperPortalUrl pulumi.StringInput `pulumi:"developerPortalUrl"`
	// Property only meant to be used for Consumption SKU Service. This enforces a client certificate to be presented on each request to the gateway. This also enables the ability to authenticate the certificate in the policy on the gateway.
	EnableClientCertificate pulumi.BoolPtrInput `pulumi:"enableClientCertificate"`
	// Gateway URL of the API Management service in the Default Region.
	GatewayRegionalUrl pulumi.StringInput `pulumi:"gatewayRegionalUrl"`
	// Gateway URL of the API Management service.
	GatewayUrl pulumi.StringInput `pulumi:"gatewayUrl"`
	// Custom hostname configuration of the API Management service.
	HostnameConfigurations HostnameConfigurationResponseArrayInput `pulumi:"hostnameConfigurations"`
	// Management API endpoint URL of the API Management service.
	ManagementApiUrl pulumi.StringInput `pulumi:"managementApiUrl"`
	// Email address from which the notification will be sent.
	NotificationSenderEmail pulumi.StringPtrInput `pulumi:"notificationSenderEmail"`
	// Publisher portal endpoint Url of the API Management service.
	PortalUrl pulumi.StringInput `pulumi:"portalUrl"`
	// Private Static Load Balanced IP addresses of the API Management service in Primary region which is deployed in an Internal Virtual Network. Available only for Basic, Standard and Premium SKU.
	PrivateIPAddresses pulumi.StringArrayInput `pulumi:"privateIPAddresses"`
	// The current provisioning state of the API Management service which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Public Static Load Balanced IP addresses of the API Management service in Primary region. Available only for Basic, Standard and Premium SKU.
	PublicIPAddresses pulumi.StringArrayInput `pulumi:"publicIPAddresses"`
	// Publisher email.
	PublisherEmail pulumi.StringInput `pulumi:"publisherEmail"`
	// Publisher name.
	PublisherName pulumi.StringInput `pulumi:"publisherName"`
	// SCM endpoint URL of the API Management service.
	ScmUrl pulumi.StringInput `pulumi:"scmUrl"`
	// The provisioning state of the API Management service, which is targeted by the long running operation started on the service.
	TargetProvisioningState pulumi.StringInput `pulumi:"targetProvisioningState"`
	// Virtual network configuration of the API Management service.
	VirtualNetworkConfiguration VirtualNetworkConfigurationResponsePtrInput `pulumi:"virtualNetworkConfiguration"`
	// The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.
	VirtualNetworkType pulumi.StringPtrInput `pulumi:"virtualNetworkType"`
}

func (ApiManagementServicePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementServicePropertiesResponse)(nil)).Elem()
}

func (i ApiManagementServicePropertiesResponseArgs) ToApiManagementServicePropertiesResponseOutput() ApiManagementServicePropertiesResponseOutput {
	return i.ToApiManagementServicePropertiesResponseOutputWithContext(context.Background())
}

func (i ApiManagementServicePropertiesResponseArgs) ToApiManagementServicePropertiesResponseOutputWithContext(ctx context.Context) ApiManagementServicePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServicePropertiesResponseOutput)
}

func (i ApiManagementServicePropertiesResponseArgs) ToApiManagementServicePropertiesResponsePtrOutput() ApiManagementServicePropertiesResponsePtrOutput {
	return i.ToApiManagementServicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ApiManagementServicePropertiesResponseArgs) ToApiManagementServicePropertiesResponsePtrOutputWithContext(ctx context.Context) ApiManagementServicePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServicePropertiesResponseOutput).ToApiManagementServicePropertiesResponsePtrOutputWithContext(ctx)
}

// ApiManagementServicePropertiesResponsePtrInput is an input type that accepts ApiManagementServicePropertiesResponseArgs, ApiManagementServicePropertiesResponsePtr and ApiManagementServicePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ApiManagementServicePropertiesResponsePtrInput` via:
//
//          ApiManagementServicePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ApiManagementServicePropertiesResponsePtrInput interface {
	pulumi.Input

	ToApiManagementServicePropertiesResponsePtrOutput() ApiManagementServicePropertiesResponsePtrOutput
	ToApiManagementServicePropertiesResponsePtrOutputWithContext(context.Context) ApiManagementServicePropertiesResponsePtrOutput
}

type apiManagementServicePropertiesResponsePtrType ApiManagementServicePropertiesResponseArgs

func ApiManagementServicePropertiesResponsePtr(v *ApiManagementServicePropertiesResponseArgs) ApiManagementServicePropertiesResponsePtrInput {
	return (*apiManagementServicePropertiesResponsePtrType)(v)
}

func (*apiManagementServicePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementServicePropertiesResponse)(nil)).Elem()
}

func (i *apiManagementServicePropertiesResponsePtrType) ToApiManagementServicePropertiesResponsePtrOutput() ApiManagementServicePropertiesResponsePtrOutput {
	return i.ToApiManagementServicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *apiManagementServicePropertiesResponsePtrType) ToApiManagementServicePropertiesResponsePtrOutputWithContext(ctx context.Context) ApiManagementServicePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServicePropertiesResponsePtrOutput)
}

// Properties of an API Management service resource description.
type ApiManagementServicePropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApiManagementServicePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementServicePropertiesResponse)(nil)).Elem()
}

func (o ApiManagementServicePropertiesResponseOutput) ToApiManagementServicePropertiesResponseOutput() ApiManagementServicePropertiesResponseOutput {
	return o
}

func (o ApiManagementServicePropertiesResponseOutput) ToApiManagementServicePropertiesResponseOutputWithContext(ctx context.Context) ApiManagementServicePropertiesResponseOutput {
	return o
}

func (o ApiManagementServicePropertiesResponseOutput) ToApiManagementServicePropertiesResponsePtrOutput() ApiManagementServicePropertiesResponsePtrOutput {
	return o.ToApiManagementServicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ApiManagementServicePropertiesResponseOutput) ToApiManagementServicePropertiesResponsePtrOutputWithContext(ctx context.Context) ApiManagementServicePropertiesResponsePtrOutput {
	return o.ApplyT(func(v ApiManagementServicePropertiesResponse) *ApiManagementServicePropertiesResponse {
		return &v
	}).(ApiManagementServicePropertiesResponsePtrOutput)
}

// Additional datacenter locations of the API Management service.
func (o ApiManagementServicePropertiesResponseOutput) AdditionalLocations() AdditionalLocationResponseArrayOutput {
	return o.ApplyT(func(v ApiManagementServicePropertiesResponse) []AdditionalLocationResponse {
		return v.AdditionalLocations
	}).(AdditionalLocationResponseArrayOutput)
}

// List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed is 10.
func (o ApiManagementServicePropertiesResponseOutput) Certificates() CertificateConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApiManagementServicePropertiesResponse) []CertificateConfigurationResponse {
		return v.Certificates
	}).(CertificateConfigurationResponseArrayOutput)
}

// Creation UTC date of the API Management service.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o ApiManagementServicePropertiesResponseOutput) CreatedAtUtc() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServicePropertiesResponse) string { return v.CreatedAtUtc }).(pulumi.StringOutput)
}

// Custom properties of the API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2).</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` can be used to disable just TLS 1.1 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` can be used to disable TLS 1.0 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2` can be used to enable HTTP2 protocol on an API Management service.</br>Not specifying any of these properties on PATCH operation will reset omitted properties' values to their defaults. For all the settings except Http2 the default value is `True` if the service was created on or before April 1st 2018 and `False` otherwise. Http2 setting's default value is `False`.</br></br>You can disable any of next ciphers by using settings `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.[cipher_name]`: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA. For example, `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256`:`false`. The default value is `true` for them.
func (o ApiManagementServicePropertiesResponseOutput) CustomProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApiManagementServicePropertiesResponse) map[string]string { return v.CustomProperties }).(pulumi.StringMapOutput)
}

// Developer Portal endpoint URL of the API Management service.
func (o ApiManagementServicePropertiesResponseOutput) DeveloperPortalUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServicePropertiesResponse) string { return v.DeveloperPortalUrl }).(pulumi.StringOutput)
}

// Property only meant to be used for Consumption SKU Service. This enforces a client certificate to be presented on each request to the gateway. This also enables the ability to authenticate the certificate in the policy on the gateway.
func (o ApiManagementServicePropertiesResponseOutput) EnableClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiManagementServicePropertiesResponse) *bool { return v.EnableClientCertificate }).(pulumi.BoolPtrOutput)
}

// Gateway URL of the API Management service in the Default Region.
func (o ApiManagementServicePropertiesResponseOutput) GatewayRegionalUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServicePropertiesResponse) string { return v.GatewayRegionalUrl }).(pulumi.StringOutput)
}

// Gateway URL of the API Management service.
func (o ApiManagementServicePropertiesResponseOutput) GatewayUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServicePropertiesResponse) string { return v.GatewayUrl }).(pulumi.StringOutput)
}

// Custom hostname configuration of the API Management service.
func (o ApiManagementServicePropertiesResponseOutput) HostnameConfigurations() HostnameConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApiManagementServicePropertiesResponse) []HostnameConfigurationResponse {
		return v.HostnameConfigurations
	}).(HostnameConfigurationResponseArrayOutput)
}

// Management API endpoint URL of the API Management service.
func (o ApiManagementServicePropertiesResponseOutput) ManagementApiUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServicePropertiesResponse) string { return v.ManagementApiUrl }).(pulumi.StringOutput)
}

// Email address from which the notification will be sent.
func (o ApiManagementServicePropertiesResponseOutput) NotificationSenderEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiManagementServicePropertiesResponse) *string { return v.NotificationSenderEmail }).(pulumi.StringPtrOutput)
}

// Publisher portal endpoint Url of the API Management service.
func (o ApiManagementServicePropertiesResponseOutput) PortalUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServicePropertiesResponse) string { return v.PortalUrl }).(pulumi.StringOutput)
}

// Private Static Load Balanced IP addresses of the API Management service in Primary region which is deployed in an Internal Virtual Network. Available only for Basic, Standard and Premium SKU.
func (o ApiManagementServicePropertiesResponseOutput) PrivateIPAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiManagementServicePropertiesResponse) []string { return v.PrivateIPAddresses }).(pulumi.StringArrayOutput)
}

// The current provisioning state of the API Management service which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
func (o ApiManagementServicePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServicePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Static Load Balanced IP addresses of the API Management service in Primary region. Available only for Basic, Standard and Premium SKU.
func (o ApiManagementServicePropertiesResponseOutput) PublicIPAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiManagementServicePropertiesResponse) []string { return v.PublicIPAddresses }).(pulumi.StringArrayOutput)
}

// Publisher email.
func (o ApiManagementServicePropertiesResponseOutput) PublisherEmail() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServicePropertiesResponse) string { return v.PublisherEmail }).(pulumi.StringOutput)
}

// Publisher name.
func (o ApiManagementServicePropertiesResponseOutput) PublisherName() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServicePropertiesResponse) string { return v.PublisherName }).(pulumi.StringOutput)
}

// SCM endpoint URL of the API Management service.
func (o ApiManagementServicePropertiesResponseOutput) ScmUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServicePropertiesResponse) string { return v.ScmUrl }).(pulumi.StringOutput)
}

// The provisioning state of the API Management service, which is targeted by the long running operation started on the service.
func (o ApiManagementServicePropertiesResponseOutput) TargetProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServicePropertiesResponse) string { return v.TargetProvisioningState }).(pulumi.StringOutput)
}

// Virtual network configuration of the API Management service.
func (o ApiManagementServicePropertiesResponseOutput) VirtualNetworkConfiguration() VirtualNetworkConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ApiManagementServicePropertiesResponse) *VirtualNetworkConfigurationResponse {
		return v.VirtualNetworkConfiguration
	}).(VirtualNetworkConfigurationResponsePtrOutput)
}

// The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.
func (o ApiManagementServicePropertiesResponseOutput) VirtualNetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiManagementServicePropertiesResponse) *string { return v.VirtualNetworkType }).(pulumi.StringPtrOutput)
}

type ApiManagementServicePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiManagementServicePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementServicePropertiesResponse)(nil)).Elem()
}

func (o ApiManagementServicePropertiesResponsePtrOutput) ToApiManagementServicePropertiesResponsePtrOutput() ApiManagementServicePropertiesResponsePtrOutput {
	return o
}

func (o ApiManagementServicePropertiesResponsePtrOutput) ToApiManagementServicePropertiesResponsePtrOutputWithContext(ctx context.Context) ApiManagementServicePropertiesResponsePtrOutput {
	return o
}

func (o ApiManagementServicePropertiesResponsePtrOutput) Elem() ApiManagementServicePropertiesResponseOutput {
	return o.ApplyT(func(v *ApiManagementServicePropertiesResponse) ApiManagementServicePropertiesResponse { return *v }).(ApiManagementServicePropertiesResponseOutput)
}

// Additional datacenter locations of the API Management service.
func (o ApiManagementServicePropertiesResponsePtrOutput) AdditionalLocations() AdditionalLocationResponseArrayOutput {
	return o.ApplyT(func(v *ApiManagementServicePropertiesResponse) []AdditionalLocationResponse {
		if v == nil {
			return nil
		}
		return v.AdditionalLocations
	}).(AdditionalLocationResponseArrayOutput)
}

// List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed is 10.
func (o ApiManagementServicePropertiesResponsePtrOutput) Certificates() CertificateConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *ApiManagementServicePropertiesResponse) []CertificateConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.Certificates
	}).(CertificateConfigurationResponseArrayOutput)
}

// Creation UTC date of the API Management service.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o ApiManagementServicePropertiesResponsePtrOutput) CreatedAtUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedAtUtc
	}).(pulumi.StringPtrOutput)
}

// Custom properties of the API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2).</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` can be used to disable just TLS 1.1 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` can be used to disable TLS 1.0 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2` can be used to enable HTTP2 protocol on an API Management service.</br>Not specifying any of these properties on PATCH operation will reset omitted properties' values to their defaults. For all the settings except Http2 the default value is `True` if the service was created on or before April 1st 2018 and `False` otherwise. Http2 setting's default value is `False`.</br></br>You can disable any of next ciphers by using settings `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.[cipher_name]`: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA. For example, `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256`:`false`. The default value is `true` for them.
func (o ApiManagementServicePropertiesResponsePtrOutput) CustomProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApiManagementServicePropertiesResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomProperties
	}).(pulumi.StringMapOutput)
}

// Developer Portal endpoint URL of the API Management service.
func (o ApiManagementServicePropertiesResponsePtrOutput) DeveloperPortalUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DeveloperPortalUrl
	}).(pulumi.StringPtrOutput)
}

// Property only meant to be used for Consumption SKU Service. This enforces a client certificate to be presented on each request to the gateway. This also enables the ability to authenticate the certificate in the policy on the gateway.
func (o ApiManagementServicePropertiesResponsePtrOutput) EnableClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApiManagementServicePropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableClientCertificate
	}).(pulumi.BoolPtrOutput)
}

// Gateway URL of the API Management service in the Default Region.
func (o ApiManagementServicePropertiesResponsePtrOutput) GatewayRegionalUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.GatewayRegionalUrl
	}).(pulumi.StringPtrOutput)
}

// Gateway URL of the API Management service.
func (o ApiManagementServicePropertiesResponsePtrOutput) GatewayUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.GatewayUrl
	}).(pulumi.StringPtrOutput)
}

// Custom hostname configuration of the API Management service.
func (o ApiManagementServicePropertiesResponsePtrOutput) HostnameConfigurations() HostnameConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *ApiManagementServicePropertiesResponse) []HostnameConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.HostnameConfigurations
	}).(HostnameConfigurationResponseArrayOutput)
}

// Management API endpoint URL of the API Management service.
func (o ApiManagementServicePropertiesResponsePtrOutput) ManagementApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ManagementApiUrl
	}).(pulumi.StringPtrOutput)
}

// Email address from which the notification will be sent.
func (o ApiManagementServicePropertiesResponsePtrOutput) NotificationSenderEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.NotificationSenderEmail
	}).(pulumi.StringPtrOutput)
}

// Publisher portal endpoint Url of the API Management service.
func (o ApiManagementServicePropertiesResponsePtrOutput) PortalUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PortalUrl
	}).(pulumi.StringPtrOutput)
}

// Private Static Load Balanced IP addresses of the API Management service in Primary region which is deployed in an Internal Virtual Network. Available only for Basic, Standard and Premium SKU.
func (o ApiManagementServicePropertiesResponsePtrOutput) PrivateIPAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiManagementServicePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddresses
	}).(pulumi.StringArrayOutput)
}

// The current provisioning state of the API Management service which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
func (o ApiManagementServicePropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Public Static Load Balanced IP addresses of the API Management service in Primary region. Available only for Basic, Standard and Premium SKU.
func (o ApiManagementServicePropertiesResponsePtrOutput) PublicIPAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiManagementServicePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.PublicIPAddresses
	}).(pulumi.StringArrayOutput)
}

// Publisher email.
func (o ApiManagementServicePropertiesResponsePtrOutput) PublisherEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PublisherEmail
	}).(pulumi.StringPtrOutput)
}

// Publisher name.
func (o ApiManagementServicePropertiesResponsePtrOutput) PublisherName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PublisherName
	}).(pulumi.StringPtrOutput)
}

// SCM endpoint URL of the API Management service.
func (o ApiManagementServicePropertiesResponsePtrOutput) ScmUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ScmUrl
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the API Management service, which is targeted by the long running operation started on the service.
func (o ApiManagementServicePropertiesResponsePtrOutput) TargetProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Virtual network configuration of the API Management service.
func (o ApiManagementServicePropertiesResponsePtrOutput) VirtualNetworkConfiguration() VirtualNetworkConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ApiManagementServicePropertiesResponse) *VirtualNetworkConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkConfiguration
	}).(VirtualNetworkConfigurationResponsePtrOutput)
}

// The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.
func (o ApiManagementServicePropertiesResponsePtrOutput) VirtualNetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkType
	}).(pulumi.StringPtrOutput)
}

// API Management service resource SKU properties.
type ApiManagementServiceSkuProperties struct {
	// Capacity of the SKU (number of deployed units of the SKU).
	Capacity *int `pulumi:"capacity"`
	// Name of the Sku.
	Name string `pulumi:"name"`
}

// ApiManagementServiceSkuPropertiesInput is an input type that accepts ApiManagementServiceSkuPropertiesArgs and ApiManagementServiceSkuPropertiesOutput values.
// You can construct a concrete instance of `ApiManagementServiceSkuPropertiesInput` via:
//
//          ApiManagementServiceSkuPropertiesArgs{...}
type ApiManagementServiceSkuPropertiesInput interface {
	pulumi.Input

	ToApiManagementServiceSkuPropertiesOutput() ApiManagementServiceSkuPropertiesOutput
	ToApiManagementServiceSkuPropertiesOutputWithContext(context.Context) ApiManagementServiceSkuPropertiesOutput
}

// API Management service resource SKU properties.
type ApiManagementServiceSkuPropertiesArgs struct {
	// Capacity of the SKU (number of deployed units of the SKU).
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Name of the Sku.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ApiManagementServiceSkuPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementServiceSkuProperties)(nil)).Elem()
}

func (i ApiManagementServiceSkuPropertiesArgs) ToApiManagementServiceSkuPropertiesOutput() ApiManagementServiceSkuPropertiesOutput {
	return i.ToApiManagementServiceSkuPropertiesOutputWithContext(context.Background())
}

func (i ApiManagementServiceSkuPropertiesArgs) ToApiManagementServiceSkuPropertiesOutputWithContext(ctx context.Context) ApiManagementServiceSkuPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceSkuPropertiesOutput)
}

func (i ApiManagementServiceSkuPropertiesArgs) ToApiManagementServiceSkuPropertiesPtrOutput() ApiManagementServiceSkuPropertiesPtrOutput {
	return i.ToApiManagementServiceSkuPropertiesPtrOutputWithContext(context.Background())
}

func (i ApiManagementServiceSkuPropertiesArgs) ToApiManagementServiceSkuPropertiesPtrOutputWithContext(ctx context.Context) ApiManagementServiceSkuPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceSkuPropertiesOutput).ToApiManagementServiceSkuPropertiesPtrOutputWithContext(ctx)
}

// ApiManagementServiceSkuPropertiesPtrInput is an input type that accepts ApiManagementServiceSkuPropertiesArgs, ApiManagementServiceSkuPropertiesPtr and ApiManagementServiceSkuPropertiesPtrOutput values.
// You can construct a concrete instance of `ApiManagementServiceSkuPropertiesPtrInput` via:
//
//          ApiManagementServiceSkuPropertiesArgs{...}
//
//  or:
//
//          nil
type ApiManagementServiceSkuPropertiesPtrInput interface {
	pulumi.Input

	ToApiManagementServiceSkuPropertiesPtrOutput() ApiManagementServiceSkuPropertiesPtrOutput
	ToApiManagementServiceSkuPropertiesPtrOutputWithContext(context.Context) ApiManagementServiceSkuPropertiesPtrOutput
}

type apiManagementServiceSkuPropertiesPtrType ApiManagementServiceSkuPropertiesArgs

func ApiManagementServiceSkuPropertiesPtr(v *ApiManagementServiceSkuPropertiesArgs) ApiManagementServiceSkuPropertiesPtrInput {
	return (*apiManagementServiceSkuPropertiesPtrType)(v)
}

func (*apiManagementServiceSkuPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementServiceSkuProperties)(nil)).Elem()
}

func (i *apiManagementServiceSkuPropertiesPtrType) ToApiManagementServiceSkuPropertiesPtrOutput() ApiManagementServiceSkuPropertiesPtrOutput {
	return i.ToApiManagementServiceSkuPropertiesPtrOutputWithContext(context.Background())
}

func (i *apiManagementServiceSkuPropertiesPtrType) ToApiManagementServiceSkuPropertiesPtrOutputWithContext(ctx context.Context) ApiManagementServiceSkuPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceSkuPropertiesPtrOutput)
}

// API Management service resource SKU properties.
type ApiManagementServiceSkuPropertiesOutput struct{ *pulumi.OutputState }

func (ApiManagementServiceSkuPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementServiceSkuProperties)(nil)).Elem()
}

func (o ApiManagementServiceSkuPropertiesOutput) ToApiManagementServiceSkuPropertiesOutput() ApiManagementServiceSkuPropertiesOutput {
	return o
}

func (o ApiManagementServiceSkuPropertiesOutput) ToApiManagementServiceSkuPropertiesOutputWithContext(ctx context.Context) ApiManagementServiceSkuPropertiesOutput {
	return o
}

func (o ApiManagementServiceSkuPropertiesOutput) ToApiManagementServiceSkuPropertiesPtrOutput() ApiManagementServiceSkuPropertiesPtrOutput {
	return o.ToApiManagementServiceSkuPropertiesPtrOutputWithContext(context.Background())
}

func (o ApiManagementServiceSkuPropertiesOutput) ToApiManagementServiceSkuPropertiesPtrOutputWithContext(ctx context.Context) ApiManagementServiceSkuPropertiesPtrOutput {
	return o.ApplyT(func(v ApiManagementServiceSkuProperties) *ApiManagementServiceSkuProperties {
		return &v
	}).(ApiManagementServiceSkuPropertiesPtrOutput)
}

// Capacity of the SKU (number of deployed units of the SKU).
func (o ApiManagementServiceSkuPropertiesOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiManagementServiceSkuProperties) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Name of the Sku.
func (o ApiManagementServiceSkuPropertiesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServiceSkuProperties) string { return v.Name }).(pulumi.StringOutput)
}

type ApiManagementServiceSkuPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ApiManagementServiceSkuPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementServiceSkuProperties)(nil)).Elem()
}

func (o ApiManagementServiceSkuPropertiesPtrOutput) ToApiManagementServiceSkuPropertiesPtrOutput() ApiManagementServiceSkuPropertiesPtrOutput {
	return o
}

func (o ApiManagementServiceSkuPropertiesPtrOutput) ToApiManagementServiceSkuPropertiesPtrOutputWithContext(ctx context.Context) ApiManagementServiceSkuPropertiesPtrOutput {
	return o
}

func (o ApiManagementServiceSkuPropertiesPtrOutput) Elem() ApiManagementServiceSkuPropertiesOutput {
	return o.ApplyT(func(v *ApiManagementServiceSkuProperties) ApiManagementServiceSkuProperties { return *v }).(ApiManagementServiceSkuPropertiesOutput)
}

// Capacity of the SKU (number of deployed units of the SKU).
func (o ApiManagementServiceSkuPropertiesPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApiManagementServiceSkuProperties) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Name of the Sku.
func (o ApiManagementServiceSkuPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServiceSkuProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// API Management service resource SKU properties.
type ApiManagementServiceSkuPropertiesResponse struct {
	// Capacity of the SKU (number of deployed units of the SKU).
	Capacity *int `pulumi:"capacity"`
	// Name of the Sku.
	Name string `pulumi:"name"`
}

// ApiManagementServiceSkuPropertiesResponseInput is an input type that accepts ApiManagementServiceSkuPropertiesResponseArgs and ApiManagementServiceSkuPropertiesResponseOutput values.
// You can construct a concrete instance of `ApiManagementServiceSkuPropertiesResponseInput` via:
//
//          ApiManagementServiceSkuPropertiesResponseArgs{...}
type ApiManagementServiceSkuPropertiesResponseInput interface {
	pulumi.Input

	ToApiManagementServiceSkuPropertiesResponseOutput() ApiManagementServiceSkuPropertiesResponseOutput
	ToApiManagementServiceSkuPropertiesResponseOutputWithContext(context.Context) ApiManagementServiceSkuPropertiesResponseOutput
}

// API Management service resource SKU properties.
type ApiManagementServiceSkuPropertiesResponseArgs struct {
	// Capacity of the SKU (number of deployed units of the SKU).
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Name of the Sku.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ApiManagementServiceSkuPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementServiceSkuPropertiesResponse)(nil)).Elem()
}

func (i ApiManagementServiceSkuPropertiesResponseArgs) ToApiManagementServiceSkuPropertiesResponseOutput() ApiManagementServiceSkuPropertiesResponseOutput {
	return i.ToApiManagementServiceSkuPropertiesResponseOutputWithContext(context.Background())
}

func (i ApiManagementServiceSkuPropertiesResponseArgs) ToApiManagementServiceSkuPropertiesResponseOutputWithContext(ctx context.Context) ApiManagementServiceSkuPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceSkuPropertiesResponseOutput)
}

func (i ApiManagementServiceSkuPropertiesResponseArgs) ToApiManagementServiceSkuPropertiesResponsePtrOutput() ApiManagementServiceSkuPropertiesResponsePtrOutput {
	return i.ToApiManagementServiceSkuPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ApiManagementServiceSkuPropertiesResponseArgs) ToApiManagementServiceSkuPropertiesResponsePtrOutputWithContext(ctx context.Context) ApiManagementServiceSkuPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceSkuPropertiesResponseOutput).ToApiManagementServiceSkuPropertiesResponsePtrOutputWithContext(ctx)
}

// ApiManagementServiceSkuPropertiesResponsePtrInput is an input type that accepts ApiManagementServiceSkuPropertiesResponseArgs, ApiManagementServiceSkuPropertiesResponsePtr and ApiManagementServiceSkuPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ApiManagementServiceSkuPropertiesResponsePtrInput` via:
//
//          ApiManagementServiceSkuPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ApiManagementServiceSkuPropertiesResponsePtrInput interface {
	pulumi.Input

	ToApiManagementServiceSkuPropertiesResponsePtrOutput() ApiManagementServiceSkuPropertiesResponsePtrOutput
	ToApiManagementServiceSkuPropertiesResponsePtrOutputWithContext(context.Context) ApiManagementServiceSkuPropertiesResponsePtrOutput
}

type apiManagementServiceSkuPropertiesResponsePtrType ApiManagementServiceSkuPropertiesResponseArgs

func ApiManagementServiceSkuPropertiesResponsePtr(v *ApiManagementServiceSkuPropertiesResponseArgs) ApiManagementServiceSkuPropertiesResponsePtrInput {
	return (*apiManagementServiceSkuPropertiesResponsePtrType)(v)
}

func (*apiManagementServiceSkuPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementServiceSkuPropertiesResponse)(nil)).Elem()
}

func (i *apiManagementServiceSkuPropertiesResponsePtrType) ToApiManagementServiceSkuPropertiesResponsePtrOutput() ApiManagementServiceSkuPropertiesResponsePtrOutput {
	return i.ToApiManagementServiceSkuPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *apiManagementServiceSkuPropertiesResponsePtrType) ToApiManagementServiceSkuPropertiesResponsePtrOutputWithContext(ctx context.Context) ApiManagementServiceSkuPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceSkuPropertiesResponsePtrOutput)
}

// API Management service resource SKU properties.
type ApiManagementServiceSkuPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApiManagementServiceSkuPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementServiceSkuPropertiesResponse)(nil)).Elem()
}

func (o ApiManagementServiceSkuPropertiesResponseOutput) ToApiManagementServiceSkuPropertiesResponseOutput() ApiManagementServiceSkuPropertiesResponseOutput {
	return o
}

func (o ApiManagementServiceSkuPropertiesResponseOutput) ToApiManagementServiceSkuPropertiesResponseOutputWithContext(ctx context.Context) ApiManagementServiceSkuPropertiesResponseOutput {
	return o
}

func (o ApiManagementServiceSkuPropertiesResponseOutput) ToApiManagementServiceSkuPropertiesResponsePtrOutput() ApiManagementServiceSkuPropertiesResponsePtrOutput {
	return o.ToApiManagementServiceSkuPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ApiManagementServiceSkuPropertiesResponseOutput) ToApiManagementServiceSkuPropertiesResponsePtrOutputWithContext(ctx context.Context) ApiManagementServiceSkuPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ApiManagementServiceSkuPropertiesResponse) *ApiManagementServiceSkuPropertiesResponse {
		return &v
	}).(ApiManagementServiceSkuPropertiesResponsePtrOutput)
}

// Capacity of the SKU (number of deployed units of the SKU).
func (o ApiManagementServiceSkuPropertiesResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiManagementServiceSkuPropertiesResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Name of the Sku.
func (o ApiManagementServiceSkuPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServiceSkuPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

type ApiManagementServiceSkuPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiManagementServiceSkuPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementServiceSkuPropertiesResponse)(nil)).Elem()
}

func (o ApiManagementServiceSkuPropertiesResponsePtrOutput) ToApiManagementServiceSkuPropertiesResponsePtrOutput() ApiManagementServiceSkuPropertiesResponsePtrOutput {
	return o
}

func (o ApiManagementServiceSkuPropertiesResponsePtrOutput) ToApiManagementServiceSkuPropertiesResponsePtrOutputWithContext(ctx context.Context) ApiManagementServiceSkuPropertiesResponsePtrOutput {
	return o
}

func (o ApiManagementServiceSkuPropertiesResponsePtrOutput) Elem() ApiManagementServiceSkuPropertiesResponseOutput {
	return o.ApplyT(func(v *ApiManagementServiceSkuPropertiesResponse) ApiManagementServiceSkuPropertiesResponse {
		return *v
	}).(ApiManagementServiceSkuPropertiesResponseOutput)
}

// Capacity of the SKU (number of deployed units of the SKU).
func (o ApiManagementServiceSkuPropertiesResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApiManagementServiceSkuPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Name of the Sku.
func (o ApiManagementServiceSkuPropertiesResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServiceSkuPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Api Operation details.
type ApiOperationType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the Operation Contract.
	Properties OperationContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// ApiOperationTypeInput is an input type that accepts ApiOperationTypeArgs and ApiOperationTypeOutput values.
// You can construct a concrete instance of `ApiOperationTypeInput` via:
//
//          ApiOperationTypeArgs{...}
type ApiOperationTypeInput interface {
	pulumi.Input

	ToApiOperationTypeOutput() ApiOperationTypeOutput
	ToApiOperationTypeOutputWithContext(context.Context) ApiOperationTypeOutput
}

// Api Operation details.
type ApiOperationTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the Operation Contract.
	Properties OperationContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApiOperationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationType)(nil)).Elem()
}

func (i ApiOperationTypeArgs) ToApiOperationTypeOutput() ApiOperationTypeOutput {
	return i.ToApiOperationTypeOutputWithContext(context.Background())
}

func (i ApiOperationTypeArgs) ToApiOperationTypeOutputWithContext(ctx context.Context) ApiOperationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationTypeOutput)
}

// Api Operation details.
type ApiOperationTypeOutput struct{ *pulumi.OutputState }

func (ApiOperationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationType)(nil)).Elem()
}

func (o ApiOperationTypeOutput) ToApiOperationTypeOutput() ApiOperationTypeOutput {
	return o
}

func (o ApiOperationTypeOutput) ToApiOperationTypeOutputWithContext(ctx context.Context) ApiOperationTypeOutput {
	return o
}

// Resource name.
func (o ApiOperationTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the Operation Contract.
func (o ApiOperationTypeOutput) Properties() OperationContractPropertiesResponseOutput {
	return o.ApplyT(func(v ApiOperationType) OperationContractPropertiesResponse { return v.Properties }).(OperationContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o ApiOperationTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationType) string { return v.Type }).(pulumi.StringOutput)
}

// Policy Contract details.
type ApiOperationPolicyType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the Policy.
	Properties PolicyContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// ApiOperationPolicyTypeInput is an input type that accepts ApiOperationPolicyTypeArgs and ApiOperationPolicyTypeOutput values.
// You can construct a concrete instance of `ApiOperationPolicyTypeInput` via:
//
//          ApiOperationPolicyTypeArgs{...}
type ApiOperationPolicyTypeInput interface {
	pulumi.Input

	ToApiOperationPolicyTypeOutput() ApiOperationPolicyTypeOutput
	ToApiOperationPolicyTypeOutputWithContext(context.Context) ApiOperationPolicyTypeOutput
}

// Policy Contract details.
type ApiOperationPolicyTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the Policy.
	Properties PolicyContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApiOperationPolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationPolicyType)(nil)).Elem()
}

func (i ApiOperationPolicyTypeArgs) ToApiOperationPolicyTypeOutput() ApiOperationPolicyTypeOutput {
	return i.ToApiOperationPolicyTypeOutputWithContext(context.Background())
}

func (i ApiOperationPolicyTypeArgs) ToApiOperationPolicyTypeOutputWithContext(ctx context.Context) ApiOperationPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationPolicyTypeOutput)
}

// Policy Contract details.
type ApiOperationPolicyTypeOutput struct{ *pulumi.OutputState }

func (ApiOperationPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationPolicyType)(nil)).Elem()
}

func (o ApiOperationPolicyTypeOutput) ToApiOperationPolicyTypeOutput() ApiOperationPolicyTypeOutput {
	return o
}

func (o ApiOperationPolicyTypeOutput) ToApiOperationPolicyTypeOutputWithContext(ctx context.Context) ApiOperationPolicyTypeOutput {
	return o
}

// Resource name.
func (o ApiOperationPolicyTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationPolicyType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the Policy.
func (o ApiOperationPolicyTypeOutput) Properties() PolicyContractPropertiesResponseOutput {
	return o.ApplyT(func(v ApiOperationPolicyType) PolicyContractPropertiesResponse { return v.Properties }).(PolicyContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o ApiOperationPolicyTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationPolicyType) string { return v.Type }).(pulumi.StringOutput)
}

// Policy Contract details.
type ApiPolicyType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the Policy.
	Properties PolicyContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// ApiPolicyTypeInput is an input type that accepts ApiPolicyTypeArgs and ApiPolicyTypeOutput values.
// You can construct a concrete instance of `ApiPolicyTypeInput` via:
//
//          ApiPolicyTypeArgs{...}
type ApiPolicyTypeInput interface {
	pulumi.Input

	ToApiPolicyTypeOutput() ApiPolicyTypeOutput
	ToApiPolicyTypeOutputWithContext(context.Context) ApiPolicyTypeOutput
}

// Policy Contract details.
type ApiPolicyTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the Policy.
	Properties PolicyContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApiPolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiPolicyType)(nil)).Elem()
}

func (i ApiPolicyTypeArgs) ToApiPolicyTypeOutput() ApiPolicyTypeOutput {
	return i.ToApiPolicyTypeOutputWithContext(context.Background())
}

func (i ApiPolicyTypeArgs) ToApiPolicyTypeOutputWithContext(ctx context.Context) ApiPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiPolicyTypeOutput)
}

// Policy Contract details.
type ApiPolicyTypeOutput struct{ *pulumi.OutputState }

func (ApiPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiPolicyType)(nil)).Elem()
}

func (o ApiPolicyTypeOutput) ToApiPolicyTypeOutput() ApiPolicyTypeOutput {
	return o
}

func (o ApiPolicyTypeOutput) ToApiPolicyTypeOutputWithContext(ctx context.Context) ApiPolicyTypeOutput {
	return o
}

// Resource name.
func (o ApiPolicyTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiPolicyType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the Policy.
func (o ApiPolicyTypeOutput) Properties() PolicyContractPropertiesResponseOutput {
	return o.ApplyT(func(v ApiPolicyType) PolicyContractPropertiesResponse { return v.Properties }).(PolicyContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o ApiPolicyTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiPolicyType) string { return v.Type }).(pulumi.StringOutput)
}

// ApiRelease details.
type ApiReleaseType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// ApiRelease entity contract properties.
	Properties ApiReleaseContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// ApiReleaseTypeInput is an input type that accepts ApiReleaseTypeArgs and ApiReleaseTypeOutput values.
// You can construct a concrete instance of `ApiReleaseTypeInput` via:
//
//          ApiReleaseTypeArgs{...}
type ApiReleaseTypeInput interface {
	pulumi.Input

	ToApiReleaseTypeOutput() ApiReleaseTypeOutput
	ToApiReleaseTypeOutputWithContext(context.Context) ApiReleaseTypeOutput
}

// ApiRelease details.
type ApiReleaseTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// ApiRelease entity contract properties.
	Properties ApiReleaseContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApiReleaseTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiReleaseType)(nil)).Elem()
}

func (i ApiReleaseTypeArgs) ToApiReleaseTypeOutput() ApiReleaseTypeOutput {
	return i.ToApiReleaseTypeOutputWithContext(context.Background())
}

func (i ApiReleaseTypeArgs) ToApiReleaseTypeOutputWithContext(ctx context.Context) ApiReleaseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiReleaseTypeOutput)
}

// ApiRelease details.
type ApiReleaseTypeOutput struct{ *pulumi.OutputState }

func (ApiReleaseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiReleaseType)(nil)).Elem()
}

func (o ApiReleaseTypeOutput) ToApiReleaseTypeOutput() ApiReleaseTypeOutput {
	return o
}

func (o ApiReleaseTypeOutput) ToApiReleaseTypeOutputWithContext(ctx context.Context) ApiReleaseTypeOutput {
	return o
}

// Resource name.
func (o ApiReleaseTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiReleaseType) string { return v.Name }).(pulumi.StringOutput)
}

// ApiRelease entity contract properties.
func (o ApiReleaseTypeOutput) Properties() ApiReleaseContractPropertiesResponseOutput {
	return o.ApplyT(func(v ApiReleaseType) ApiReleaseContractPropertiesResponse { return v.Properties }).(ApiReleaseContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o ApiReleaseTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiReleaseType) string { return v.Type }).(pulumi.StringOutput)
}

// API Release details
type ApiReleaseContractPropertiesResponse struct {
	// Identifier of the API the release belongs to.
	ApiId *string `pulumi:"apiId"`
	// The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
	CreatedDateTime string `pulumi:"createdDateTime"`
	// Release Notes
	Notes *string `pulumi:"notes"`
	// The time the API release was updated.
	UpdatedDateTime string `pulumi:"updatedDateTime"`
}

// ApiReleaseContractPropertiesResponseInput is an input type that accepts ApiReleaseContractPropertiesResponseArgs and ApiReleaseContractPropertiesResponseOutput values.
// You can construct a concrete instance of `ApiReleaseContractPropertiesResponseInput` via:
//
//          ApiReleaseContractPropertiesResponseArgs{...}
type ApiReleaseContractPropertiesResponseInput interface {
	pulumi.Input

	ToApiReleaseContractPropertiesResponseOutput() ApiReleaseContractPropertiesResponseOutput
	ToApiReleaseContractPropertiesResponseOutputWithContext(context.Context) ApiReleaseContractPropertiesResponseOutput
}

// API Release details
type ApiReleaseContractPropertiesResponseArgs struct {
	// Identifier of the API the release belongs to.
	ApiId pulumi.StringPtrInput `pulumi:"apiId"`
	// The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
	CreatedDateTime pulumi.StringInput `pulumi:"createdDateTime"`
	// Release Notes
	Notes pulumi.StringPtrInput `pulumi:"notes"`
	// The time the API release was updated.
	UpdatedDateTime pulumi.StringInput `pulumi:"updatedDateTime"`
}

func (ApiReleaseContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiReleaseContractPropertiesResponse)(nil)).Elem()
}

func (i ApiReleaseContractPropertiesResponseArgs) ToApiReleaseContractPropertiesResponseOutput() ApiReleaseContractPropertiesResponseOutput {
	return i.ToApiReleaseContractPropertiesResponseOutputWithContext(context.Background())
}

func (i ApiReleaseContractPropertiesResponseArgs) ToApiReleaseContractPropertiesResponseOutputWithContext(ctx context.Context) ApiReleaseContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiReleaseContractPropertiesResponseOutput)
}

func (i ApiReleaseContractPropertiesResponseArgs) ToApiReleaseContractPropertiesResponsePtrOutput() ApiReleaseContractPropertiesResponsePtrOutput {
	return i.ToApiReleaseContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ApiReleaseContractPropertiesResponseArgs) ToApiReleaseContractPropertiesResponsePtrOutputWithContext(ctx context.Context) ApiReleaseContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiReleaseContractPropertiesResponseOutput).ToApiReleaseContractPropertiesResponsePtrOutputWithContext(ctx)
}

// ApiReleaseContractPropertiesResponsePtrInput is an input type that accepts ApiReleaseContractPropertiesResponseArgs, ApiReleaseContractPropertiesResponsePtr and ApiReleaseContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ApiReleaseContractPropertiesResponsePtrInput` via:
//
//          ApiReleaseContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ApiReleaseContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToApiReleaseContractPropertiesResponsePtrOutput() ApiReleaseContractPropertiesResponsePtrOutput
	ToApiReleaseContractPropertiesResponsePtrOutputWithContext(context.Context) ApiReleaseContractPropertiesResponsePtrOutput
}

type apiReleaseContractPropertiesResponsePtrType ApiReleaseContractPropertiesResponseArgs

func ApiReleaseContractPropertiesResponsePtr(v *ApiReleaseContractPropertiesResponseArgs) ApiReleaseContractPropertiesResponsePtrInput {
	return (*apiReleaseContractPropertiesResponsePtrType)(v)
}

func (*apiReleaseContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiReleaseContractPropertiesResponse)(nil)).Elem()
}

func (i *apiReleaseContractPropertiesResponsePtrType) ToApiReleaseContractPropertiesResponsePtrOutput() ApiReleaseContractPropertiesResponsePtrOutput {
	return i.ToApiReleaseContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *apiReleaseContractPropertiesResponsePtrType) ToApiReleaseContractPropertiesResponsePtrOutputWithContext(ctx context.Context) ApiReleaseContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiReleaseContractPropertiesResponsePtrOutput)
}

// API Release details
type ApiReleaseContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApiReleaseContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiReleaseContractPropertiesResponse)(nil)).Elem()
}

func (o ApiReleaseContractPropertiesResponseOutput) ToApiReleaseContractPropertiesResponseOutput() ApiReleaseContractPropertiesResponseOutput {
	return o
}

func (o ApiReleaseContractPropertiesResponseOutput) ToApiReleaseContractPropertiesResponseOutputWithContext(ctx context.Context) ApiReleaseContractPropertiesResponseOutput {
	return o
}

func (o ApiReleaseContractPropertiesResponseOutput) ToApiReleaseContractPropertiesResponsePtrOutput() ApiReleaseContractPropertiesResponsePtrOutput {
	return o.ToApiReleaseContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ApiReleaseContractPropertiesResponseOutput) ToApiReleaseContractPropertiesResponsePtrOutputWithContext(ctx context.Context) ApiReleaseContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ApiReleaseContractPropertiesResponse) *ApiReleaseContractPropertiesResponse {
		return &v
	}).(ApiReleaseContractPropertiesResponsePtrOutput)
}

// Identifier of the API the release belongs to.
func (o ApiReleaseContractPropertiesResponseOutput) ApiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReleaseContractPropertiesResponse) *string { return v.ApiId }).(pulumi.StringPtrOutput)
}

// The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
func (o ApiReleaseContractPropertiesResponseOutput) CreatedDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ApiReleaseContractPropertiesResponse) string { return v.CreatedDateTime }).(pulumi.StringOutput)
}

// Release Notes
func (o ApiReleaseContractPropertiesResponseOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReleaseContractPropertiesResponse) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

// The time the API release was updated.
func (o ApiReleaseContractPropertiesResponseOutput) UpdatedDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ApiReleaseContractPropertiesResponse) string { return v.UpdatedDateTime }).(pulumi.StringOutput)
}

type ApiReleaseContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiReleaseContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiReleaseContractPropertiesResponse)(nil)).Elem()
}

func (o ApiReleaseContractPropertiesResponsePtrOutput) ToApiReleaseContractPropertiesResponsePtrOutput() ApiReleaseContractPropertiesResponsePtrOutput {
	return o
}

func (o ApiReleaseContractPropertiesResponsePtrOutput) ToApiReleaseContractPropertiesResponsePtrOutputWithContext(ctx context.Context) ApiReleaseContractPropertiesResponsePtrOutput {
	return o
}

func (o ApiReleaseContractPropertiesResponsePtrOutput) Elem() ApiReleaseContractPropertiesResponseOutput {
	return o.ApplyT(func(v *ApiReleaseContractPropertiesResponse) ApiReleaseContractPropertiesResponse { return *v }).(ApiReleaseContractPropertiesResponseOutput)
}

// Identifier of the API the release belongs to.
func (o ApiReleaseContractPropertiesResponsePtrOutput) ApiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReleaseContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiId
	}).(pulumi.StringPtrOutput)
}

// The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
func (o ApiReleaseContractPropertiesResponsePtrOutput) CreatedDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReleaseContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedDateTime
	}).(pulumi.StringPtrOutput)
}

// Release Notes
func (o ApiReleaseContractPropertiesResponsePtrOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReleaseContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Notes
	}).(pulumi.StringPtrOutput)
}

// The time the API release was updated.
func (o ApiReleaseContractPropertiesResponsePtrOutput) UpdatedDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReleaseContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UpdatedDateTime
	}).(pulumi.StringPtrOutput)
}

// Schema Contract details.
type ApiSchemaType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the Schema.
	Properties SchemaContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// ApiSchemaTypeInput is an input type that accepts ApiSchemaTypeArgs and ApiSchemaTypeOutput values.
// You can construct a concrete instance of `ApiSchemaTypeInput` via:
//
//          ApiSchemaTypeArgs{...}
type ApiSchemaTypeInput interface {
	pulumi.Input

	ToApiSchemaTypeOutput() ApiSchemaTypeOutput
	ToApiSchemaTypeOutputWithContext(context.Context) ApiSchemaTypeOutput
}

// Schema Contract details.
type ApiSchemaTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the Schema.
	Properties SchemaContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApiSchemaTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiSchemaType)(nil)).Elem()
}

func (i ApiSchemaTypeArgs) ToApiSchemaTypeOutput() ApiSchemaTypeOutput {
	return i.ToApiSchemaTypeOutputWithContext(context.Background())
}

func (i ApiSchemaTypeArgs) ToApiSchemaTypeOutputWithContext(ctx context.Context) ApiSchemaTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiSchemaTypeOutput)
}

// Schema Contract details.
type ApiSchemaTypeOutput struct{ *pulumi.OutputState }

func (ApiSchemaTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiSchemaType)(nil)).Elem()
}

func (o ApiSchemaTypeOutput) ToApiSchemaTypeOutput() ApiSchemaTypeOutput {
	return o
}

func (o ApiSchemaTypeOutput) ToApiSchemaTypeOutputWithContext(ctx context.Context) ApiSchemaTypeOutput {
	return o
}

// Resource name.
func (o ApiSchemaTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiSchemaType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the Schema.
func (o ApiSchemaTypeOutput) Properties() SchemaContractPropertiesResponseOutput {
	return o.ApplyT(func(v ApiSchemaType) SchemaContractPropertiesResponse { return v.Properties }).(SchemaContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o ApiSchemaTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiSchemaType) string { return v.Type }).(pulumi.StringOutput)
}

// Contract details.
type ApiTagDescriptionType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// TagDescription entity contract properties.
	Properties TagDescriptionContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// ApiTagDescriptionTypeInput is an input type that accepts ApiTagDescriptionTypeArgs and ApiTagDescriptionTypeOutput values.
// You can construct a concrete instance of `ApiTagDescriptionTypeInput` via:
//
//          ApiTagDescriptionTypeArgs{...}
type ApiTagDescriptionTypeInput interface {
	pulumi.Input

	ToApiTagDescriptionTypeOutput() ApiTagDescriptionTypeOutput
	ToApiTagDescriptionTypeOutputWithContext(context.Context) ApiTagDescriptionTypeOutput
}

// Contract details.
type ApiTagDescriptionTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// TagDescription entity contract properties.
	Properties TagDescriptionContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApiTagDescriptionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiTagDescriptionType)(nil)).Elem()
}

func (i ApiTagDescriptionTypeArgs) ToApiTagDescriptionTypeOutput() ApiTagDescriptionTypeOutput {
	return i.ToApiTagDescriptionTypeOutputWithContext(context.Background())
}

func (i ApiTagDescriptionTypeArgs) ToApiTagDescriptionTypeOutputWithContext(ctx context.Context) ApiTagDescriptionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiTagDescriptionTypeOutput)
}

// Contract details.
type ApiTagDescriptionTypeOutput struct{ *pulumi.OutputState }

func (ApiTagDescriptionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiTagDescriptionType)(nil)).Elem()
}

func (o ApiTagDescriptionTypeOutput) ToApiTagDescriptionTypeOutput() ApiTagDescriptionTypeOutput {
	return o
}

func (o ApiTagDescriptionTypeOutput) ToApiTagDescriptionTypeOutputWithContext(ctx context.Context) ApiTagDescriptionTypeOutput {
	return o
}

// Resource name.
func (o ApiTagDescriptionTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiTagDescriptionType) string { return v.Name }).(pulumi.StringOutput)
}

// TagDescription entity contract properties.
func (o ApiTagDescriptionTypeOutput) Properties() TagDescriptionContractPropertiesResponseOutput {
	return o.ApplyT(func(v ApiTagDescriptionType) TagDescriptionContractPropertiesResponse { return v.Properties }).(TagDescriptionContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o ApiTagDescriptionTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiTagDescriptionType) string { return v.Type }).(pulumi.StringOutput)
}

// Api Version Set Contract details.
type ApiVersionSetType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Api VersionSet contract properties.
	Properties ApiVersionSetContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// ApiVersionSetTypeInput is an input type that accepts ApiVersionSetTypeArgs and ApiVersionSetTypeOutput values.
// You can construct a concrete instance of `ApiVersionSetTypeInput` via:
//
//          ApiVersionSetTypeArgs{...}
type ApiVersionSetTypeInput interface {
	pulumi.Input

	ToApiVersionSetTypeOutput() ApiVersionSetTypeOutput
	ToApiVersionSetTypeOutputWithContext(context.Context) ApiVersionSetTypeOutput
}

// Api Version Set Contract details.
type ApiVersionSetTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Api VersionSet contract properties.
	Properties ApiVersionSetContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApiVersionSetTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiVersionSetType)(nil)).Elem()
}

func (i ApiVersionSetTypeArgs) ToApiVersionSetTypeOutput() ApiVersionSetTypeOutput {
	return i.ToApiVersionSetTypeOutputWithContext(context.Background())
}

func (i ApiVersionSetTypeArgs) ToApiVersionSetTypeOutputWithContext(ctx context.Context) ApiVersionSetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiVersionSetTypeOutput)
}

// Api Version Set Contract details.
type ApiVersionSetTypeOutput struct{ *pulumi.OutputState }

func (ApiVersionSetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiVersionSetType)(nil)).Elem()
}

func (o ApiVersionSetTypeOutput) ToApiVersionSetTypeOutput() ApiVersionSetTypeOutput {
	return o
}

func (o ApiVersionSetTypeOutput) ToApiVersionSetTypeOutputWithContext(ctx context.Context) ApiVersionSetTypeOutput {
	return o
}

// Resource name.
func (o ApiVersionSetTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiVersionSetType) string { return v.Name }).(pulumi.StringOutput)
}

// Api VersionSet contract properties.
func (o ApiVersionSetTypeOutput) Properties() ApiVersionSetContractPropertiesResponseOutput {
	return o.ApplyT(func(v ApiVersionSetType) ApiVersionSetContractPropertiesResponse { return v.Properties }).(ApiVersionSetContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o ApiVersionSetTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiVersionSetType) string { return v.Type }).(pulumi.StringOutput)
}

// An API Version Set contains the common configuration for a set of API Versions relating
type ApiVersionSetContractDetails struct {
	// Description of API Version Set.
	Description *string `pulumi:"description"`
	// Identifier for existing API Version Set. Omit this value to create a new Version Set.
	Id *string `pulumi:"id"`
	// The display Name of the API Version Set.
	Name *string `pulumi:"name"`
	// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
	VersionHeaderName *string `pulumi:"versionHeaderName"`
	// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
	VersionQueryName *string `pulumi:"versionQueryName"`
	// An value that determines where the API Version identifer will be located in a HTTP request.
	VersioningScheme *string `pulumi:"versioningScheme"`
}

// ApiVersionSetContractDetailsInput is an input type that accepts ApiVersionSetContractDetailsArgs and ApiVersionSetContractDetailsOutput values.
// You can construct a concrete instance of `ApiVersionSetContractDetailsInput` via:
//
//          ApiVersionSetContractDetailsArgs{...}
type ApiVersionSetContractDetailsInput interface {
	pulumi.Input

	ToApiVersionSetContractDetailsOutput() ApiVersionSetContractDetailsOutput
	ToApiVersionSetContractDetailsOutputWithContext(context.Context) ApiVersionSetContractDetailsOutput
}

// An API Version Set contains the common configuration for a set of API Versions relating
type ApiVersionSetContractDetailsArgs struct {
	// Description of API Version Set.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Identifier for existing API Version Set. Omit this value to create a new Version Set.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The display Name of the API Version Set.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
	VersionHeaderName pulumi.StringPtrInput `pulumi:"versionHeaderName"`
	// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
	VersionQueryName pulumi.StringPtrInput `pulumi:"versionQueryName"`
	// An value that determines where the API Version identifer will be located in a HTTP request.
	VersioningScheme pulumi.StringPtrInput `pulumi:"versioningScheme"`
}

func (ApiVersionSetContractDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiVersionSetContractDetails)(nil)).Elem()
}

func (i ApiVersionSetContractDetailsArgs) ToApiVersionSetContractDetailsOutput() ApiVersionSetContractDetailsOutput {
	return i.ToApiVersionSetContractDetailsOutputWithContext(context.Background())
}

func (i ApiVersionSetContractDetailsArgs) ToApiVersionSetContractDetailsOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiVersionSetContractDetailsOutput)
}

func (i ApiVersionSetContractDetailsArgs) ToApiVersionSetContractDetailsPtrOutput() ApiVersionSetContractDetailsPtrOutput {
	return i.ToApiVersionSetContractDetailsPtrOutputWithContext(context.Background())
}

func (i ApiVersionSetContractDetailsArgs) ToApiVersionSetContractDetailsPtrOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiVersionSetContractDetailsOutput).ToApiVersionSetContractDetailsPtrOutputWithContext(ctx)
}

// ApiVersionSetContractDetailsPtrInput is an input type that accepts ApiVersionSetContractDetailsArgs, ApiVersionSetContractDetailsPtr and ApiVersionSetContractDetailsPtrOutput values.
// You can construct a concrete instance of `ApiVersionSetContractDetailsPtrInput` via:
//
//          ApiVersionSetContractDetailsArgs{...}
//
//  or:
//
//          nil
type ApiVersionSetContractDetailsPtrInput interface {
	pulumi.Input

	ToApiVersionSetContractDetailsPtrOutput() ApiVersionSetContractDetailsPtrOutput
	ToApiVersionSetContractDetailsPtrOutputWithContext(context.Context) ApiVersionSetContractDetailsPtrOutput
}

type apiVersionSetContractDetailsPtrType ApiVersionSetContractDetailsArgs

func ApiVersionSetContractDetailsPtr(v *ApiVersionSetContractDetailsArgs) ApiVersionSetContractDetailsPtrInput {
	return (*apiVersionSetContractDetailsPtrType)(v)
}

func (*apiVersionSetContractDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiVersionSetContractDetails)(nil)).Elem()
}

func (i *apiVersionSetContractDetailsPtrType) ToApiVersionSetContractDetailsPtrOutput() ApiVersionSetContractDetailsPtrOutput {
	return i.ToApiVersionSetContractDetailsPtrOutputWithContext(context.Background())
}

func (i *apiVersionSetContractDetailsPtrType) ToApiVersionSetContractDetailsPtrOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiVersionSetContractDetailsPtrOutput)
}

// An API Version Set contains the common configuration for a set of API Versions relating
type ApiVersionSetContractDetailsOutput struct{ *pulumi.OutputState }

func (ApiVersionSetContractDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiVersionSetContractDetails)(nil)).Elem()
}

func (o ApiVersionSetContractDetailsOutput) ToApiVersionSetContractDetailsOutput() ApiVersionSetContractDetailsOutput {
	return o
}

func (o ApiVersionSetContractDetailsOutput) ToApiVersionSetContractDetailsOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsOutput {
	return o
}

func (o ApiVersionSetContractDetailsOutput) ToApiVersionSetContractDetailsPtrOutput() ApiVersionSetContractDetailsPtrOutput {
	return o.ToApiVersionSetContractDetailsPtrOutputWithContext(context.Background())
}

func (o ApiVersionSetContractDetailsOutput) ToApiVersionSetContractDetailsPtrOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetails) *ApiVersionSetContractDetails {
		return &v
	}).(ApiVersionSetContractDetailsPtrOutput)
}

// Description of API Version Set.
func (o ApiVersionSetContractDetailsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetails) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Identifier for existing API Version Set. Omit this value to create a new Version Set.
func (o ApiVersionSetContractDetailsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetails) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The display Name of the API Version Set.
func (o ApiVersionSetContractDetailsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetails) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
func (o ApiVersionSetContractDetailsOutput) VersionHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetails) *string { return v.VersionHeaderName }).(pulumi.StringPtrOutput)
}

// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
func (o ApiVersionSetContractDetailsOutput) VersionQueryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetails) *string { return v.VersionQueryName }).(pulumi.StringPtrOutput)
}

// An value that determines where the API Version identifer will be located in a HTTP request.
func (o ApiVersionSetContractDetailsOutput) VersioningScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetails) *string { return v.VersioningScheme }).(pulumi.StringPtrOutput)
}

type ApiVersionSetContractDetailsPtrOutput struct{ *pulumi.OutputState }

func (ApiVersionSetContractDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiVersionSetContractDetails)(nil)).Elem()
}

func (o ApiVersionSetContractDetailsPtrOutput) ToApiVersionSetContractDetailsPtrOutput() ApiVersionSetContractDetailsPtrOutput {
	return o
}

func (o ApiVersionSetContractDetailsPtrOutput) ToApiVersionSetContractDetailsPtrOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsPtrOutput {
	return o
}

func (o ApiVersionSetContractDetailsPtrOutput) Elem() ApiVersionSetContractDetailsOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetails) ApiVersionSetContractDetails { return *v }).(ApiVersionSetContractDetailsOutput)
}

// Description of API Version Set.
func (o ApiVersionSetContractDetailsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetails) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Identifier for existing API Version Set. Omit this value to create a new Version Set.
func (o ApiVersionSetContractDetailsPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetails) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The display Name of the API Version Set.
func (o ApiVersionSetContractDetailsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetails) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
func (o ApiVersionSetContractDetailsPtrOutput) VersionHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetails) *string {
		if v == nil {
			return nil
		}
		return v.VersionHeaderName
	}).(pulumi.StringPtrOutput)
}

// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
func (o ApiVersionSetContractDetailsPtrOutput) VersionQueryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetails) *string {
		if v == nil {
			return nil
		}
		return v.VersionQueryName
	}).(pulumi.StringPtrOutput)
}

// An value that determines where the API Version identifer will be located in a HTTP request.
func (o ApiVersionSetContractDetailsPtrOutput) VersioningScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetails) *string {
		if v == nil {
			return nil
		}
		return v.VersioningScheme
	}).(pulumi.StringPtrOutput)
}

// An API Version Set contains the common configuration for a set of API Versions relating
type ApiVersionSetContractDetailsResponse struct {
	// Description of API Version Set.
	Description *string `pulumi:"description"`
	// Identifier for existing API Version Set. Omit this value to create a new Version Set.
	Id *string `pulumi:"id"`
	// The display Name of the API Version Set.
	Name *string `pulumi:"name"`
	// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
	VersionHeaderName *string `pulumi:"versionHeaderName"`
	// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
	VersionQueryName *string `pulumi:"versionQueryName"`
	// An value that determines where the API Version identifer will be located in a HTTP request.
	VersioningScheme *string `pulumi:"versioningScheme"`
}

// ApiVersionSetContractDetailsResponseInput is an input type that accepts ApiVersionSetContractDetailsResponseArgs and ApiVersionSetContractDetailsResponseOutput values.
// You can construct a concrete instance of `ApiVersionSetContractDetailsResponseInput` via:
//
//          ApiVersionSetContractDetailsResponseArgs{...}
type ApiVersionSetContractDetailsResponseInput interface {
	pulumi.Input

	ToApiVersionSetContractDetailsResponseOutput() ApiVersionSetContractDetailsResponseOutput
	ToApiVersionSetContractDetailsResponseOutputWithContext(context.Context) ApiVersionSetContractDetailsResponseOutput
}

// An API Version Set contains the common configuration for a set of API Versions relating
type ApiVersionSetContractDetailsResponseArgs struct {
	// Description of API Version Set.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Identifier for existing API Version Set. Omit this value to create a new Version Set.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The display Name of the API Version Set.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
	VersionHeaderName pulumi.StringPtrInput `pulumi:"versionHeaderName"`
	// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
	VersionQueryName pulumi.StringPtrInput `pulumi:"versionQueryName"`
	// An value that determines where the API Version identifer will be located in a HTTP request.
	VersioningScheme pulumi.StringPtrInput `pulumi:"versioningScheme"`
}

func (ApiVersionSetContractDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiVersionSetContractDetailsResponse)(nil)).Elem()
}

func (i ApiVersionSetContractDetailsResponseArgs) ToApiVersionSetContractDetailsResponseOutput() ApiVersionSetContractDetailsResponseOutput {
	return i.ToApiVersionSetContractDetailsResponseOutputWithContext(context.Background())
}

func (i ApiVersionSetContractDetailsResponseArgs) ToApiVersionSetContractDetailsResponseOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiVersionSetContractDetailsResponseOutput)
}

func (i ApiVersionSetContractDetailsResponseArgs) ToApiVersionSetContractDetailsResponsePtrOutput() ApiVersionSetContractDetailsResponsePtrOutput {
	return i.ToApiVersionSetContractDetailsResponsePtrOutputWithContext(context.Background())
}

func (i ApiVersionSetContractDetailsResponseArgs) ToApiVersionSetContractDetailsResponsePtrOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiVersionSetContractDetailsResponseOutput).ToApiVersionSetContractDetailsResponsePtrOutputWithContext(ctx)
}

// ApiVersionSetContractDetailsResponsePtrInput is an input type that accepts ApiVersionSetContractDetailsResponseArgs, ApiVersionSetContractDetailsResponsePtr and ApiVersionSetContractDetailsResponsePtrOutput values.
// You can construct a concrete instance of `ApiVersionSetContractDetailsResponsePtrInput` via:
//
//          ApiVersionSetContractDetailsResponseArgs{...}
//
//  or:
//
//          nil
type ApiVersionSetContractDetailsResponsePtrInput interface {
	pulumi.Input

	ToApiVersionSetContractDetailsResponsePtrOutput() ApiVersionSetContractDetailsResponsePtrOutput
	ToApiVersionSetContractDetailsResponsePtrOutputWithContext(context.Context) ApiVersionSetContractDetailsResponsePtrOutput
}

type apiVersionSetContractDetailsResponsePtrType ApiVersionSetContractDetailsResponseArgs

func ApiVersionSetContractDetailsResponsePtr(v *ApiVersionSetContractDetailsResponseArgs) ApiVersionSetContractDetailsResponsePtrInput {
	return (*apiVersionSetContractDetailsResponsePtrType)(v)
}

func (*apiVersionSetContractDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiVersionSetContractDetailsResponse)(nil)).Elem()
}

func (i *apiVersionSetContractDetailsResponsePtrType) ToApiVersionSetContractDetailsResponsePtrOutput() ApiVersionSetContractDetailsResponsePtrOutput {
	return i.ToApiVersionSetContractDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *apiVersionSetContractDetailsResponsePtrType) ToApiVersionSetContractDetailsResponsePtrOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiVersionSetContractDetailsResponsePtrOutput)
}

// An API Version Set contains the common configuration for a set of API Versions relating
type ApiVersionSetContractDetailsResponseOutput struct{ *pulumi.OutputState }

func (ApiVersionSetContractDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiVersionSetContractDetailsResponse)(nil)).Elem()
}

func (o ApiVersionSetContractDetailsResponseOutput) ToApiVersionSetContractDetailsResponseOutput() ApiVersionSetContractDetailsResponseOutput {
	return o
}

func (o ApiVersionSetContractDetailsResponseOutput) ToApiVersionSetContractDetailsResponseOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsResponseOutput {
	return o
}

func (o ApiVersionSetContractDetailsResponseOutput) ToApiVersionSetContractDetailsResponsePtrOutput() ApiVersionSetContractDetailsResponsePtrOutput {
	return o.ToApiVersionSetContractDetailsResponsePtrOutputWithContext(context.Background())
}

func (o ApiVersionSetContractDetailsResponseOutput) ToApiVersionSetContractDetailsResponsePtrOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsResponsePtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetailsResponse) *ApiVersionSetContractDetailsResponse {
		return &v
	}).(ApiVersionSetContractDetailsResponsePtrOutput)
}

// Description of API Version Set.
func (o ApiVersionSetContractDetailsResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetailsResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Identifier for existing API Version Set. Omit this value to create a new Version Set.
func (o ApiVersionSetContractDetailsResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetailsResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The display Name of the API Version Set.
func (o ApiVersionSetContractDetailsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetailsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
func (o ApiVersionSetContractDetailsResponseOutput) VersionHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetailsResponse) *string { return v.VersionHeaderName }).(pulumi.StringPtrOutput)
}

// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
func (o ApiVersionSetContractDetailsResponseOutput) VersionQueryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetailsResponse) *string { return v.VersionQueryName }).(pulumi.StringPtrOutput)
}

// An value that determines where the API Version identifer will be located in a HTTP request.
func (o ApiVersionSetContractDetailsResponseOutput) VersioningScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetailsResponse) *string { return v.VersioningScheme }).(pulumi.StringPtrOutput)
}

type ApiVersionSetContractDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiVersionSetContractDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiVersionSetContractDetailsResponse)(nil)).Elem()
}

func (o ApiVersionSetContractDetailsResponsePtrOutput) ToApiVersionSetContractDetailsResponsePtrOutput() ApiVersionSetContractDetailsResponsePtrOutput {
	return o
}

func (o ApiVersionSetContractDetailsResponsePtrOutput) ToApiVersionSetContractDetailsResponsePtrOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsResponsePtrOutput {
	return o
}

func (o ApiVersionSetContractDetailsResponsePtrOutput) Elem() ApiVersionSetContractDetailsResponseOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetailsResponse) ApiVersionSetContractDetailsResponse { return *v }).(ApiVersionSetContractDetailsResponseOutput)
}

// Description of API Version Set.
func (o ApiVersionSetContractDetailsResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Identifier for existing API Version Set. Omit this value to create a new Version Set.
func (o ApiVersionSetContractDetailsResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The display Name of the API Version Set.
func (o ApiVersionSetContractDetailsResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
func (o ApiVersionSetContractDetailsResponsePtrOutput) VersionHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VersionHeaderName
	}).(pulumi.StringPtrOutput)
}

// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
func (o ApiVersionSetContractDetailsResponsePtrOutput) VersionQueryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VersionQueryName
	}).(pulumi.StringPtrOutput)
}

// An value that determines where the API Version identifer will be located in a HTTP request.
func (o ApiVersionSetContractDetailsResponsePtrOutput) VersioningScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VersioningScheme
	}).(pulumi.StringPtrOutput)
}

// Properties of an API Version Set.
type ApiVersionSetContractPropertiesResponse struct {
	// Description of API Version Set.
	Description *string `pulumi:"description"`
	// Name of API Version Set
	DisplayName string `pulumi:"displayName"`
	// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
	VersionHeaderName *string `pulumi:"versionHeaderName"`
	// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
	VersionQueryName *string `pulumi:"versionQueryName"`
	// An value that determines where the API Version identifer will be located in a HTTP request.
	VersioningScheme string `pulumi:"versioningScheme"`
}

// ApiVersionSetContractPropertiesResponseInput is an input type that accepts ApiVersionSetContractPropertiesResponseArgs and ApiVersionSetContractPropertiesResponseOutput values.
// You can construct a concrete instance of `ApiVersionSetContractPropertiesResponseInput` via:
//
//          ApiVersionSetContractPropertiesResponseArgs{...}
type ApiVersionSetContractPropertiesResponseInput interface {
	pulumi.Input

	ToApiVersionSetContractPropertiesResponseOutput() ApiVersionSetContractPropertiesResponseOutput
	ToApiVersionSetContractPropertiesResponseOutputWithContext(context.Context) ApiVersionSetContractPropertiesResponseOutput
}

// Properties of an API Version Set.
type ApiVersionSetContractPropertiesResponseArgs struct {
	// Description of API Version Set.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of API Version Set
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
	VersionHeaderName pulumi.StringPtrInput `pulumi:"versionHeaderName"`
	// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
	VersionQueryName pulumi.StringPtrInput `pulumi:"versionQueryName"`
	// An value that determines where the API Version identifer will be located in a HTTP request.
	VersioningScheme pulumi.StringInput `pulumi:"versioningScheme"`
}

func (ApiVersionSetContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiVersionSetContractPropertiesResponse)(nil)).Elem()
}

func (i ApiVersionSetContractPropertiesResponseArgs) ToApiVersionSetContractPropertiesResponseOutput() ApiVersionSetContractPropertiesResponseOutput {
	return i.ToApiVersionSetContractPropertiesResponseOutputWithContext(context.Background())
}

func (i ApiVersionSetContractPropertiesResponseArgs) ToApiVersionSetContractPropertiesResponseOutputWithContext(ctx context.Context) ApiVersionSetContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiVersionSetContractPropertiesResponseOutput)
}

func (i ApiVersionSetContractPropertiesResponseArgs) ToApiVersionSetContractPropertiesResponsePtrOutput() ApiVersionSetContractPropertiesResponsePtrOutput {
	return i.ToApiVersionSetContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ApiVersionSetContractPropertiesResponseArgs) ToApiVersionSetContractPropertiesResponsePtrOutputWithContext(ctx context.Context) ApiVersionSetContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiVersionSetContractPropertiesResponseOutput).ToApiVersionSetContractPropertiesResponsePtrOutputWithContext(ctx)
}

// ApiVersionSetContractPropertiesResponsePtrInput is an input type that accepts ApiVersionSetContractPropertiesResponseArgs, ApiVersionSetContractPropertiesResponsePtr and ApiVersionSetContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ApiVersionSetContractPropertiesResponsePtrInput` via:
//
//          ApiVersionSetContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ApiVersionSetContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToApiVersionSetContractPropertiesResponsePtrOutput() ApiVersionSetContractPropertiesResponsePtrOutput
	ToApiVersionSetContractPropertiesResponsePtrOutputWithContext(context.Context) ApiVersionSetContractPropertiesResponsePtrOutput
}

type apiVersionSetContractPropertiesResponsePtrType ApiVersionSetContractPropertiesResponseArgs

func ApiVersionSetContractPropertiesResponsePtr(v *ApiVersionSetContractPropertiesResponseArgs) ApiVersionSetContractPropertiesResponsePtrInput {
	return (*apiVersionSetContractPropertiesResponsePtrType)(v)
}

func (*apiVersionSetContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiVersionSetContractPropertiesResponse)(nil)).Elem()
}

func (i *apiVersionSetContractPropertiesResponsePtrType) ToApiVersionSetContractPropertiesResponsePtrOutput() ApiVersionSetContractPropertiesResponsePtrOutput {
	return i.ToApiVersionSetContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *apiVersionSetContractPropertiesResponsePtrType) ToApiVersionSetContractPropertiesResponsePtrOutputWithContext(ctx context.Context) ApiVersionSetContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiVersionSetContractPropertiesResponsePtrOutput)
}

// Properties of an API Version Set.
type ApiVersionSetContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApiVersionSetContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiVersionSetContractPropertiesResponse)(nil)).Elem()
}

func (o ApiVersionSetContractPropertiesResponseOutput) ToApiVersionSetContractPropertiesResponseOutput() ApiVersionSetContractPropertiesResponseOutput {
	return o
}

func (o ApiVersionSetContractPropertiesResponseOutput) ToApiVersionSetContractPropertiesResponseOutputWithContext(ctx context.Context) ApiVersionSetContractPropertiesResponseOutput {
	return o
}

func (o ApiVersionSetContractPropertiesResponseOutput) ToApiVersionSetContractPropertiesResponsePtrOutput() ApiVersionSetContractPropertiesResponsePtrOutput {
	return o.ToApiVersionSetContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ApiVersionSetContractPropertiesResponseOutput) ToApiVersionSetContractPropertiesResponsePtrOutputWithContext(ctx context.Context) ApiVersionSetContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractPropertiesResponse) *ApiVersionSetContractPropertiesResponse {
		return &v
	}).(ApiVersionSetContractPropertiesResponsePtrOutput)
}

// Description of API Version Set.
func (o ApiVersionSetContractPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of API Version Set
func (o ApiVersionSetContractPropertiesResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ApiVersionSetContractPropertiesResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
func (o ApiVersionSetContractPropertiesResponseOutput) VersionHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractPropertiesResponse) *string { return v.VersionHeaderName }).(pulumi.StringPtrOutput)
}

// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
func (o ApiVersionSetContractPropertiesResponseOutput) VersionQueryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractPropertiesResponse) *string { return v.VersionQueryName }).(pulumi.StringPtrOutput)
}

// An value that determines where the API Version identifer will be located in a HTTP request.
func (o ApiVersionSetContractPropertiesResponseOutput) VersioningScheme() pulumi.StringOutput {
	return o.ApplyT(func(v ApiVersionSetContractPropertiesResponse) string { return v.VersioningScheme }).(pulumi.StringOutput)
}

type ApiVersionSetContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiVersionSetContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiVersionSetContractPropertiesResponse)(nil)).Elem()
}

func (o ApiVersionSetContractPropertiesResponsePtrOutput) ToApiVersionSetContractPropertiesResponsePtrOutput() ApiVersionSetContractPropertiesResponsePtrOutput {
	return o
}

func (o ApiVersionSetContractPropertiesResponsePtrOutput) ToApiVersionSetContractPropertiesResponsePtrOutputWithContext(ctx context.Context) ApiVersionSetContractPropertiesResponsePtrOutput {
	return o
}

func (o ApiVersionSetContractPropertiesResponsePtrOutput) Elem() ApiVersionSetContractPropertiesResponseOutput {
	return o.ApplyT(func(v *ApiVersionSetContractPropertiesResponse) ApiVersionSetContractPropertiesResponse { return *v }).(ApiVersionSetContractPropertiesResponseOutput)
}

// Description of API Version Set.
func (o ApiVersionSetContractPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Name of API Version Set
func (o ApiVersionSetContractPropertiesResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
func (o ApiVersionSetContractPropertiesResponsePtrOutput) VersionHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.VersionHeaderName
	}).(pulumi.StringPtrOutput)
}

// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
func (o ApiVersionSetContractPropertiesResponsePtrOutput) VersionQueryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.VersionQueryName
	}).(pulumi.StringPtrOutput)
}

// An value that determines where the API Version identifer will be located in a HTTP request.
func (o ApiVersionSetContractPropertiesResponsePtrOutput) VersioningScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VersioningScheme
	}).(pulumi.StringPtrOutput)
}

// API Authentication Settings.
type AuthenticationSettingsContract struct {
	// OAuth2 Authentication settings
	OAuth2 *OAuth2AuthenticationSettingsContract `pulumi:"oAuth2"`
	// OpenID Connect Authentication Settings
	Openid *OpenIdAuthenticationSettingsContract `pulumi:"openid"`
}

// AuthenticationSettingsContractInput is an input type that accepts AuthenticationSettingsContractArgs and AuthenticationSettingsContractOutput values.
// You can construct a concrete instance of `AuthenticationSettingsContractInput` via:
//
//          AuthenticationSettingsContractArgs{...}
type AuthenticationSettingsContractInput interface {
	pulumi.Input

	ToAuthenticationSettingsContractOutput() AuthenticationSettingsContractOutput
	ToAuthenticationSettingsContractOutputWithContext(context.Context) AuthenticationSettingsContractOutput
}

// API Authentication Settings.
type AuthenticationSettingsContractArgs struct {
	// OAuth2 Authentication settings
	OAuth2 OAuth2AuthenticationSettingsContractPtrInput `pulumi:"oAuth2"`
	// OpenID Connect Authentication Settings
	Openid OpenIdAuthenticationSettingsContractPtrInput `pulumi:"openid"`
}

func (AuthenticationSettingsContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationSettingsContract)(nil)).Elem()
}

func (i AuthenticationSettingsContractArgs) ToAuthenticationSettingsContractOutput() AuthenticationSettingsContractOutput {
	return i.ToAuthenticationSettingsContractOutputWithContext(context.Background())
}

func (i AuthenticationSettingsContractArgs) ToAuthenticationSettingsContractOutputWithContext(ctx context.Context) AuthenticationSettingsContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingsContractOutput)
}

func (i AuthenticationSettingsContractArgs) ToAuthenticationSettingsContractPtrOutput() AuthenticationSettingsContractPtrOutput {
	return i.ToAuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (i AuthenticationSettingsContractArgs) ToAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) AuthenticationSettingsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingsContractOutput).ToAuthenticationSettingsContractPtrOutputWithContext(ctx)
}

// AuthenticationSettingsContractPtrInput is an input type that accepts AuthenticationSettingsContractArgs, AuthenticationSettingsContractPtr and AuthenticationSettingsContractPtrOutput values.
// You can construct a concrete instance of `AuthenticationSettingsContractPtrInput` via:
//
//          AuthenticationSettingsContractArgs{...}
//
//  or:
//
//          nil
type AuthenticationSettingsContractPtrInput interface {
	pulumi.Input

	ToAuthenticationSettingsContractPtrOutput() AuthenticationSettingsContractPtrOutput
	ToAuthenticationSettingsContractPtrOutputWithContext(context.Context) AuthenticationSettingsContractPtrOutput
}

type authenticationSettingsContractPtrType AuthenticationSettingsContractArgs

func AuthenticationSettingsContractPtr(v *AuthenticationSettingsContractArgs) AuthenticationSettingsContractPtrInput {
	return (*authenticationSettingsContractPtrType)(v)
}

func (*authenticationSettingsContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationSettingsContract)(nil)).Elem()
}

func (i *authenticationSettingsContractPtrType) ToAuthenticationSettingsContractPtrOutput() AuthenticationSettingsContractPtrOutput {
	return i.ToAuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (i *authenticationSettingsContractPtrType) ToAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) AuthenticationSettingsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingsContractPtrOutput)
}

// API Authentication Settings.
type AuthenticationSettingsContractOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingsContractOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationSettingsContract)(nil)).Elem()
}

func (o AuthenticationSettingsContractOutput) ToAuthenticationSettingsContractOutput() AuthenticationSettingsContractOutput {
	return o
}

func (o AuthenticationSettingsContractOutput) ToAuthenticationSettingsContractOutputWithContext(ctx context.Context) AuthenticationSettingsContractOutput {
	return o
}

func (o AuthenticationSettingsContractOutput) ToAuthenticationSettingsContractPtrOutput() AuthenticationSettingsContractPtrOutput {
	return o.ToAuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (o AuthenticationSettingsContractOutput) ToAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) AuthenticationSettingsContractPtrOutput {
	return o.ApplyT(func(v AuthenticationSettingsContract) *AuthenticationSettingsContract {
		return &v
	}).(AuthenticationSettingsContractPtrOutput)
}

// OAuth2 Authentication settings
func (o AuthenticationSettingsContractOutput) OAuth2() OAuth2AuthenticationSettingsContractPtrOutput {
	return o.ApplyT(func(v AuthenticationSettingsContract) *OAuth2AuthenticationSettingsContract { return v.OAuth2 }).(OAuth2AuthenticationSettingsContractPtrOutput)
}

// OpenID Connect Authentication Settings
func (o AuthenticationSettingsContractOutput) Openid() OpenIdAuthenticationSettingsContractPtrOutput {
	return o.ApplyT(func(v AuthenticationSettingsContract) *OpenIdAuthenticationSettingsContract { return v.Openid }).(OpenIdAuthenticationSettingsContractPtrOutput)
}

type AuthenticationSettingsContractPtrOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingsContractPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationSettingsContract)(nil)).Elem()
}

func (o AuthenticationSettingsContractPtrOutput) ToAuthenticationSettingsContractPtrOutput() AuthenticationSettingsContractPtrOutput {
	return o
}

func (o AuthenticationSettingsContractPtrOutput) ToAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) AuthenticationSettingsContractPtrOutput {
	return o
}

func (o AuthenticationSettingsContractPtrOutput) Elem() AuthenticationSettingsContractOutput {
	return o.ApplyT(func(v *AuthenticationSettingsContract) AuthenticationSettingsContract { return *v }).(AuthenticationSettingsContractOutput)
}

// OAuth2 Authentication settings
func (o AuthenticationSettingsContractPtrOutput) OAuth2() OAuth2AuthenticationSettingsContractPtrOutput {
	return o.ApplyT(func(v *AuthenticationSettingsContract) *OAuth2AuthenticationSettingsContract {
		if v == nil {
			return nil
		}
		return v.OAuth2
	}).(OAuth2AuthenticationSettingsContractPtrOutput)
}

// OpenID Connect Authentication Settings
func (o AuthenticationSettingsContractPtrOutput) Openid() OpenIdAuthenticationSettingsContractPtrOutput {
	return o.ApplyT(func(v *AuthenticationSettingsContract) *OpenIdAuthenticationSettingsContract {
		if v == nil {
			return nil
		}
		return v.Openid
	}).(OpenIdAuthenticationSettingsContractPtrOutput)
}

// API Authentication Settings.
type AuthenticationSettingsContractResponse struct {
	// OAuth2 Authentication settings
	OAuth2 *OAuth2AuthenticationSettingsContractResponse `pulumi:"oAuth2"`
	// OpenID Connect Authentication Settings
	Openid *OpenIdAuthenticationSettingsContractResponse `pulumi:"openid"`
}

// AuthenticationSettingsContractResponseInput is an input type that accepts AuthenticationSettingsContractResponseArgs and AuthenticationSettingsContractResponseOutput values.
// You can construct a concrete instance of `AuthenticationSettingsContractResponseInput` via:
//
//          AuthenticationSettingsContractResponseArgs{...}
type AuthenticationSettingsContractResponseInput interface {
	pulumi.Input

	ToAuthenticationSettingsContractResponseOutput() AuthenticationSettingsContractResponseOutput
	ToAuthenticationSettingsContractResponseOutputWithContext(context.Context) AuthenticationSettingsContractResponseOutput
}

// API Authentication Settings.
type AuthenticationSettingsContractResponseArgs struct {
	// OAuth2 Authentication settings
	OAuth2 OAuth2AuthenticationSettingsContractResponsePtrInput `pulumi:"oAuth2"`
	// OpenID Connect Authentication Settings
	Openid OpenIdAuthenticationSettingsContractResponsePtrInput `pulumi:"openid"`
}

func (AuthenticationSettingsContractResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationSettingsContractResponse)(nil)).Elem()
}

func (i AuthenticationSettingsContractResponseArgs) ToAuthenticationSettingsContractResponseOutput() AuthenticationSettingsContractResponseOutput {
	return i.ToAuthenticationSettingsContractResponseOutputWithContext(context.Background())
}

func (i AuthenticationSettingsContractResponseArgs) ToAuthenticationSettingsContractResponseOutputWithContext(ctx context.Context) AuthenticationSettingsContractResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingsContractResponseOutput)
}

func (i AuthenticationSettingsContractResponseArgs) ToAuthenticationSettingsContractResponsePtrOutput() AuthenticationSettingsContractResponsePtrOutput {
	return i.ToAuthenticationSettingsContractResponsePtrOutputWithContext(context.Background())
}

func (i AuthenticationSettingsContractResponseArgs) ToAuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) AuthenticationSettingsContractResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingsContractResponseOutput).ToAuthenticationSettingsContractResponsePtrOutputWithContext(ctx)
}

// AuthenticationSettingsContractResponsePtrInput is an input type that accepts AuthenticationSettingsContractResponseArgs, AuthenticationSettingsContractResponsePtr and AuthenticationSettingsContractResponsePtrOutput values.
// You can construct a concrete instance of `AuthenticationSettingsContractResponsePtrInput` via:
//
//          AuthenticationSettingsContractResponseArgs{...}
//
//  or:
//
//          nil
type AuthenticationSettingsContractResponsePtrInput interface {
	pulumi.Input

	ToAuthenticationSettingsContractResponsePtrOutput() AuthenticationSettingsContractResponsePtrOutput
	ToAuthenticationSettingsContractResponsePtrOutputWithContext(context.Context) AuthenticationSettingsContractResponsePtrOutput
}

type authenticationSettingsContractResponsePtrType AuthenticationSettingsContractResponseArgs

func AuthenticationSettingsContractResponsePtr(v *AuthenticationSettingsContractResponseArgs) AuthenticationSettingsContractResponsePtrInput {
	return (*authenticationSettingsContractResponsePtrType)(v)
}

func (*authenticationSettingsContractResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationSettingsContractResponse)(nil)).Elem()
}

func (i *authenticationSettingsContractResponsePtrType) ToAuthenticationSettingsContractResponsePtrOutput() AuthenticationSettingsContractResponsePtrOutput {
	return i.ToAuthenticationSettingsContractResponsePtrOutputWithContext(context.Background())
}

func (i *authenticationSettingsContractResponsePtrType) ToAuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) AuthenticationSettingsContractResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingsContractResponsePtrOutput)
}

// API Authentication Settings.
type AuthenticationSettingsContractResponseOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingsContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationSettingsContractResponse)(nil)).Elem()
}

func (o AuthenticationSettingsContractResponseOutput) ToAuthenticationSettingsContractResponseOutput() AuthenticationSettingsContractResponseOutput {
	return o
}

func (o AuthenticationSettingsContractResponseOutput) ToAuthenticationSettingsContractResponseOutputWithContext(ctx context.Context) AuthenticationSettingsContractResponseOutput {
	return o
}

func (o AuthenticationSettingsContractResponseOutput) ToAuthenticationSettingsContractResponsePtrOutput() AuthenticationSettingsContractResponsePtrOutput {
	return o.ToAuthenticationSettingsContractResponsePtrOutputWithContext(context.Background())
}

func (o AuthenticationSettingsContractResponseOutput) ToAuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) AuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v AuthenticationSettingsContractResponse) *AuthenticationSettingsContractResponse {
		return &v
	}).(AuthenticationSettingsContractResponsePtrOutput)
}

// OAuth2 Authentication settings
func (o AuthenticationSettingsContractResponseOutput) OAuth2() OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v AuthenticationSettingsContractResponse) *OAuth2AuthenticationSettingsContractResponse {
		return v.OAuth2
	}).(OAuth2AuthenticationSettingsContractResponsePtrOutput)
}

// OpenID Connect Authentication Settings
func (o AuthenticationSettingsContractResponseOutput) Openid() OpenIdAuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v AuthenticationSettingsContractResponse) *OpenIdAuthenticationSettingsContractResponse {
		return v.Openid
	}).(OpenIdAuthenticationSettingsContractResponsePtrOutput)
}

type AuthenticationSettingsContractResponsePtrOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingsContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationSettingsContractResponse)(nil)).Elem()
}

func (o AuthenticationSettingsContractResponsePtrOutput) ToAuthenticationSettingsContractResponsePtrOutput() AuthenticationSettingsContractResponsePtrOutput {
	return o
}

func (o AuthenticationSettingsContractResponsePtrOutput) ToAuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) AuthenticationSettingsContractResponsePtrOutput {
	return o
}

func (o AuthenticationSettingsContractResponsePtrOutput) Elem() AuthenticationSettingsContractResponseOutput {
	return o.ApplyT(func(v *AuthenticationSettingsContractResponse) AuthenticationSettingsContractResponse { return *v }).(AuthenticationSettingsContractResponseOutput)
}

// OAuth2 Authentication settings
func (o AuthenticationSettingsContractResponsePtrOutput) OAuth2() OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v *AuthenticationSettingsContractResponse) *OAuth2AuthenticationSettingsContractResponse {
		if v == nil {
			return nil
		}
		return v.OAuth2
	}).(OAuth2AuthenticationSettingsContractResponsePtrOutput)
}

// OpenID Connect Authentication Settings
func (o AuthenticationSettingsContractResponsePtrOutput) Openid() OpenIdAuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v *AuthenticationSettingsContractResponse) *OpenIdAuthenticationSettingsContractResponse {
		if v == nil {
			return nil
		}
		return v.Openid
	}).(OpenIdAuthenticationSettingsContractResponsePtrOutput)
}

// External OAuth authorization server settings.
type AuthorizationServerType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the External OAuth authorization server Contract.
	Properties AuthorizationServerContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// AuthorizationServerTypeInput is an input type that accepts AuthorizationServerTypeArgs and AuthorizationServerTypeOutput values.
// You can construct a concrete instance of `AuthorizationServerTypeInput` via:
//
//          AuthorizationServerTypeArgs{...}
type AuthorizationServerTypeInput interface {
	pulumi.Input

	ToAuthorizationServerTypeOutput() AuthorizationServerTypeOutput
	ToAuthorizationServerTypeOutputWithContext(context.Context) AuthorizationServerTypeOutput
}

// External OAuth authorization server settings.
type AuthorizationServerTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the External OAuth authorization server Contract.
	Properties AuthorizationServerContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AuthorizationServerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationServerType)(nil)).Elem()
}

func (i AuthorizationServerTypeArgs) ToAuthorizationServerTypeOutput() AuthorizationServerTypeOutput {
	return i.ToAuthorizationServerTypeOutputWithContext(context.Background())
}

func (i AuthorizationServerTypeArgs) ToAuthorizationServerTypeOutputWithContext(ctx context.Context) AuthorizationServerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationServerTypeOutput)
}

// External OAuth authorization server settings.
type AuthorizationServerTypeOutput struct{ *pulumi.OutputState }

func (AuthorizationServerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationServerType)(nil)).Elem()
}

func (o AuthorizationServerTypeOutput) ToAuthorizationServerTypeOutput() AuthorizationServerTypeOutput {
	return o
}

func (o AuthorizationServerTypeOutput) ToAuthorizationServerTypeOutputWithContext(ctx context.Context) AuthorizationServerTypeOutput {
	return o
}

// Resource name.
func (o AuthorizationServerTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationServerType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the External OAuth authorization server Contract.
func (o AuthorizationServerTypeOutput) Properties() AuthorizationServerContractPropertiesResponseOutput {
	return o.ApplyT(func(v AuthorizationServerType) AuthorizationServerContractPropertiesResponse { return v.Properties }).(AuthorizationServerContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o AuthorizationServerTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationServerType) string { return v.Type }).(pulumi.StringOutput)
}

// External OAuth authorization server settings Properties.
type AuthorizationServerContractPropertiesResponse struct {
	// OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.
	AuthorizationEndpoint string `pulumi:"authorizationEndpoint"`
	// HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional.
	AuthorizationMethods []string `pulumi:"authorizationMethods"`
	// Specifies the mechanism by which access token is passed to the API.
	BearerTokenSendingMethods []string `pulumi:"bearerTokenSendingMethods"`
	// Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format.
	ClientAuthenticationMethod []string `pulumi:"clientAuthenticationMethod"`
	// Client or app id registered with this authorization server.
	ClientId string `pulumi:"clientId"`
	// Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced.
	ClientRegistrationEndpoint string `pulumi:"clientRegistrationEndpoint"`
	// Client or app secret registered with this authorization server.
	ClientSecret *string `pulumi:"clientSecret"`
	// Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values.
	DefaultScope *string `pulumi:"defaultScope"`
	// Description of the authorization server. Can contain HTML formatting tags.
	Description *string `pulumi:"description"`
	// User-friendly authorization server name.
	DisplayName string `pulumi:"displayName"`
	// Form of an authorization grant, which the client uses to request the access token.
	GrantTypes []string `pulumi:"grantTypes"`
	// Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password.
	ResourceOwnerPassword *string `pulumi:"resourceOwnerPassword"`
	// Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username.
	ResourceOwnerUsername *string `pulumi:"resourceOwnerUsername"`
	// If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security.
	SupportState *bool `pulumi:"supportState"`
	// Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {"name" : "name value", "value": "a value"}.
	TokenBodyParameters []TokenBodyParameterContractResponse `pulumi:"tokenBodyParameters"`
	// OAuth token endpoint. Contains absolute URI to entity being referenced.
	TokenEndpoint *string `pulumi:"tokenEndpoint"`
}

// AuthorizationServerContractPropertiesResponseInput is an input type that accepts AuthorizationServerContractPropertiesResponseArgs and AuthorizationServerContractPropertiesResponseOutput values.
// You can construct a concrete instance of `AuthorizationServerContractPropertiesResponseInput` via:
//
//          AuthorizationServerContractPropertiesResponseArgs{...}
type AuthorizationServerContractPropertiesResponseInput interface {
	pulumi.Input

	ToAuthorizationServerContractPropertiesResponseOutput() AuthorizationServerContractPropertiesResponseOutput
	ToAuthorizationServerContractPropertiesResponseOutputWithContext(context.Context) AuthorizationServerContractPropertiesResponseOutput
}

// External OAuth authorization server settings Properties.
type AuthorizationServerContractPropertiesResponseArgs struct {
	// OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.
	AuthorizationEndpoint pulumi.StringInput `pulumi:"authorizationEndpoint"`
	// HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional.
	AuthorizationMethods pulumi.StringArrayInput `pulumi:"authorizationMethods"`
	// Specifies the mechanism by which access token is passed to the API.
	BearerTokenSendingMethods pulumi.StringArrayInput `pulumi:"bearerTokenSendingMethods"`
	// Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format.
	ClientAuthenticationMethod pulumi.StringArrayInput `pulumi:"clientAuthenticationMethod"`
	// Client or app id registered with this authorization server.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced.
	ClientRegistrationEndpoint pulumi.StringInput `pulumi:"clientRegistrationEndpoint"`
	// Client or app secret registered with this authorization server.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values.
	DefaultScope pulumi.StringPtrInput `pulumi:"defaultScope"`
	// Description of the authorization server. Can contain HTML formatting tags.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// User-friendly authorization server name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Form of an authorization grant, which the client uses to request the access token.
	GrantTypes pulumi.StringArrayInput `pulumi:"grantTypes"`
	// Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password.
	ResourceOwnerPassword pulumi.StringPtrInput `pulumi:"resourceOwnerPassword"`
	// Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username.
	ResourceOwnerUsername pulumi.StringPtrInput `pulumi:"resourceOwnerUsername"`
	// If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security.
	SupportState pulumi.BoolPtrInput `pulumi:"supportState"`
	// Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {"name" : "name value", "value": "a value"}.
	TokenBodyParameters TokenBodyParameterContractResponseArrayInput `pulumi:"tokenBodyParameters"`
	// OAuth token endpoint. Contains absolute URI to entity being referenced.
	TokenEndpoint pulumi.StringPtrInput `pulumi:"tokenEndpoint"`
}

func (AuthorizationServerContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationServerContractPropertiesResponse)(nil)).Elem()
}

func (i AuthorizationServerContractPropertiesResponseArgs) ToAuthorizationServerContractPropertiesResponseOutput() AuthorizationServerContractPropertiesResponseOutput {
	return i.ToAuthorizationServerContractPropertiesResponseOutputWithContext(context.Background())
}

func (i AuthorizationServerContractPropertiesResponseArgs) ToAuthorizationServerContractPropertiesResponseOutputWithContext(ctx context.Context) AuthorizationServerContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationServerContractPropertiesResponseOutput)
}

func (i AuthorizationServerContractPropertiesResponseArgs) ToAuthorizationServerContractPropertiesResponsePtrOutput() AuthorizationServerContractPropertiesResponsePtrOutput {
	return i.ToAuthorizationServerContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i AuthorizationServerContractPropertiesResponseArgs) ToAuthorizationServerContractPropertiesResponsePtrOutputWithContext(ctx context.Context) AuthorizationServerContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationServerContractPropertiesResponseOutput).ToAuthorizationServerContractPropertiesResponsePtrOutputWithContext(ctx)
}

// AuthorizationServerContractPropertiesResponsePtrInput is an input type that accepts AuthorizationServerContractPropertiesResponseArgs, AuthorizationServerContractPropertiesResponsePtr and AuthorizationServerContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `AuthorizationServerContractPropertiesResponsePtrInput` via:
//
//          AuthorizationServerContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type AuthorizationServerContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToAuthorizationServerContractPropertiesResponsePtrOutput() AuthorizationServerContractPropertiesResponsePtrOutput
	ToAuthorizationServerContractPropertiesResponsePtrOutputWithContext(context.Context) AuthorizationServerContractPropertiesResponsePtrOutput
}

type authorizationServerContractPropertiesResponsePtrType AuthorizationServerContractPropertiesResponseArgs

func AuthorizationServerContractPropertiesResponsePtr(v *AuthorizationServerContractPropertiesResponseArgs) AuthorizationServerContractPropertiesResponsePtrInput {
	return (*authorizationServerContractPropertiesResponsePtrType)(v)
}

func (*authorizationServerContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationServerContractPropertiesResponse)(nil)).Elem()
}

func (i *authorizationServerContractPropertiesResponsePtrType) ToAuthorizationServerContractPropertiesResponsePtrOutput() AuthorizationServerContractPropertiesResponsePtrOutput {
	return i.ToAuthorizationServerContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *authorizationServerContractPropertiesResponsePtrType) ToAuthorizationServerContractPropertiesResponsePtrOutputWithContext(ctx context.Context) AuthorizationServerContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationServerContractPropertiesResponsePtrOutput)
}

// External OAuth authorization server settings Properties.
type AuthorizationServerContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AuthorizationServerContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationServerContractPropertiesResponse)(nil)).Elem()
}

func (o AuthorizationServerContractPropertiesResponseOutput) ToAuthorizationServerContractPropertiesResponseOutput() AuthorizationServerContractPropertiesResponseOutput {
	return o
}

func (o AuthorizationServerContractPropertiesResponseOutput) ToAuthorizationServerContractPropertiesResponseOutputWithContext(ctx context.Context) AuthorizationServerContractPropertiesResponseOutput {
	return o
}

func (o AuthorizationServerContractPropertiesResponseOutput) ToAuthorizationServerContractPropertiesResponsePtrOutput() AuthorizationServerContractPropertiesResponsePtrOutput {
	return o.ToAuthorizationServerContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AuthorizationServerContractPropertiesResponseOutput) ToAuthorizationServerContractPropertiesResponsePtrOutputWithContext(ctx context.Context) AuthorizationServerContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AuthorizationServerContractPropertiesResponse) *AuthorizationServerContractPropertiesResponse {
		return &v
	}).(AuthorizationServerContractPropertiesResponsePtrOutput)
}

// OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.
func (o AuthorizationServerContractPropertiesResponseOutput) AuthorizationEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationServerContractPropertiesResponse) string { return v.AuthorizationEndpoint }).(pulumi.StringOutput)
}

// HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional.
func (o AuthorizationServerContractPropertiesResponseOutput) AuthorizationMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationServerContractPropertiesResponse) []string { return v.AuthorizationMethods }).(pulumi.StringArrayOutput)
}

// Specifies the mechanism by which access token is passed to the API.
func (o AuthorizationServerContractPropertiesResponseOutput) BearerTokenSendingMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationServerContractPropertiesResponse) []string { return v.BearerTokenSendingMethods }).(pulumi.StringArrayOutput)
}

// Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format.
func (o AuthorizationServerContractPropertiesResponseOutput) ClientAuthenticationMethod() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationServerContractPropertiesResponse) []string { return v.ClientAuthenticationMethod }).(pulumi.StringArrayOutput)
}

// Client or app id registered with this authorization server.
func (o AuthorizationServerContractPropertiesResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationServerContractPropertiesResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced.
func (o AuthorizationServerContractPropertiesResponseOutput) ClientRegistrationEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationServerContractPropertiesResponse) string { return v.ClientRegistrationEndpoint }).(pulumi.StringOutput)
}

// Client or app secret registered with this authorization server.
func (o AuthorizationServerContractPropertiesResponseOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationServerContractPropertiesResponse) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values.
func (o AuthorizationServerContractPropertiesResponseOutput) DefaultScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationServerContractPropertiesResponse) *string { return v.DefaultScope }).(pulumi.StringPtrOutput)
}

// Description of the authorization server. Can contain HTML formatting tags.
func (o AuthorizationServerContractPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationServerContractPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// User-friendly authorization server name.
func (o AuthorizationServerContractPropertiesResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationServerContractPropertiesResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Form of an authorization grant, which the client uses to request the access token.
func (o AuthorizationServerContractPropertiesResponseOutput) GrantTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationServerContractPropertiesResponse) []string { return v.GrantTypes }).(pulumi.StringArrayOutput)
}

// Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password.
func (o AuthorizationServerContractPropertiesResponseOutput) ResourceOwnerPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationServerContractPropertiesResponse) *string { return v.ResourceOwnerPassword }).(pulumi.StringPtrOutput)
}

// Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username.
func (o AuthorizationServerContractPropertiesResponseOutput) ResourceOwnerUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationServerContractPropertiesResponse) *string { return v.ResourceOwnerUsername }).(pulumi.StringPtrOutput)
}

// If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security.
func (o AuthorizationServerContractPropertiesResponseOutput) SupportState() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthorizationServerContractPropertiesResponse) *bool { return v.SupportState }).(pulumi.BoolPtrOutput)
}

// Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {"name" : "name value", "value": "a value"}.
func (o AuthorizationServerContractPropertiesResponseOutput) TokenBodyParameters() TokenBodyParameterContractResponseArrayOutput {
	return o.ApplyT(func(v AuthorizationServerContractPropertiesResponse) []TokenBodyParameterContractResponse {
		return v.TokenBodyParameters
	}).(TokenBodyParameterContractResponseArrayOutput)
}

// OAuth token endpoint. Contains absolute URI to entity being referenced.
func (o AuthorizationServerContractPropertiesResponseOutput) TokenEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationServerContractPropertiesResponse) *string { return v.TokenEndpoint }).(pulumi.StringPtrOutput)
}

type AuthorizationServerContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AuthorizationServerContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationServerContractPropertiesResponse)(nil)).Elem()
}

func (o AuthorizationServerContractPropertiesResponsePtrOutput) ToAuthorizationServerContractPropertiesResponsePtrOutput() AuthorizationServerContractPropertiesResponsePtrOutput {
	return o
}

func (o AuthorizationServerContractPropertiesResponsePtrOutput) ToAuthorizationServerContractPropertiesResponsePtrOutputWithContext(ctx context.Context) AuthorizationServerContractPropertiesResponsePtrOutput {
	return o
}

func (o AuthorizationServerContractPropertiesResponsePtrOutput) Elem() AuthorizationServerContractPropertiesResponseOutput {
	return o.ApplyT(func(v *AuthorizationServerContractPropertiesResponse) AuthorizationServerContractPropertiesResponse {
		return *v
	}).(AuthorizationServerContractPropertiesResponseOutput)
}

// OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.
func (o AuthorizationServerContractPropertiesResponsePtrOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationServerContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AuthorizationEndpoint
	}).(pulumi.StringPtrOutput)
}

// HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional.
func (o AuthorizationServerContractPropertiesResponsePtrOutput) AuthorizationMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationServerContractPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.AuthorizationMethods
	}).(pulumi.StringArrayOutput)
}

// Specifies the mechanism by which access token is passed to the API.
func (o AuthorizationServerContractPropertiesResponsePtrOutput) BearerTokenSendingMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationServerContractPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.BearerTokenSendingMethods
	}).(pulumi.StringArrayOutput)
}

// Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format.
func (o AuthorizationServerContractPropertiesResponsePtrOutput) ClientAuthenticationMethod() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationServerContractPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.ClientAuthenticationMethod
	}).(pulumi.StringArrayOutput)
}

// Client or app id registered with this authorization server.
func (o AuthorizationServerContractPropertiesResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationServerContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced.
func (o AuthorizationServerContractPropertiesResponsePtrOutput) ClientRegistrationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationServerContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClientRegistrationEndpoint
	}).(pulumi.StringPtrOutput)
}

// Client or app secret registered with this authorization server.
func (o AuthorizationServerContractPropertiesResponsePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationServerContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values.
func (o AuthorizationServerContractPropertiesResponsePtrOutput) DefaultScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationServerContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultScope
	}).(pulumi.StringPtrOutput)
}

// Description of the authorization server. Can contain HTML formatting tags.
func (o AuthorizationServerContractPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationServerContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// User-friendly authorization server name.
func (o AuthorizationServerContractPropertiesResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationServerContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Form of an authorization grant, which the client uses to request the access token.
func (o AuthorizationServerContractPropertiesResponsePtrOutput) GrantTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationServerContractPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.GrantTypes
	}).(pulumi.StringArrayOutput)
}

// Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password.
func (o AuthorizationServerContractPropertiesResponsePtrOutput) ResourceOwnerPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationServerContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceOwnerPassword
	}).(pulumi.StringPtrOutput)
}

// Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username.
func (o AuthorizationServerContractPropertiesResponsePtrOutput) ResourceOwnerUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationServerContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceOwnerUsername
	}).(pulumi.StringPtrOutput)
}

// If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security.
func (o AuthorizationServerContractPropertiesResponsePtrOutput) SupportState() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthorizationServerContractPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SupportState
	}).(pulumi.BoolPtrOutput)
}

// Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {"name" : "name value", "value": "a value"}.
func (o AuthorizationServerContractPropertiesResponsePtrOutput) TokenBodyParameters() TokenBodyParameterContractResponseArrayOutput {
	return o.ApplyT(func(v *AuthorizationServerContractPropertiesResponse) []TokenBodyParameterContractResponse {
		if v == nil {
			return nil
		}
		return v.TokenBodyParameters
	}).(TokenBodyParameterContractResponseArrayOutput)
}

// OAuth token endpoint. Contains absolute URI to entity being referenced.
func (o AuthorizationServerContractPropertiesResponsePtrOutput) TokenEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationServerContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TokenEndpoint
	}).(pulumi.StringPtrOutput)
}

// Backend details.
type BackendType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Backend entity contract properties.
	Properties BackendContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// BackendTypeInput is an input type that accepts BackendTypeArgs and BackendTypeOutput values.
// You can construct a concrete instance of `BackendTypeInput` via:
//
//          BackendTypeArgs{...}
type BackendTypeInput interface {
	pulumi.Input

	ToBackendTypeOutput() BackendTypeOutput
	ToBackendTypeOutputWithContext(context.Context) BackendTypeOutput
}

// Backend details.
type BackendTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Backend entity contract properties.
	Properties BackendContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BackendTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendType)(nil)).Elem()
}

func (i BackendTypeArgs) ToBackendTypeOutput() BackendTypeOutput {
	return i.ToBackendTypeOutputWithContext(context.Background())
}

func (i BackendTypeArgs) ToBackendTypeOutputWithContext(ctx context.Context) BackendTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendTypeOutput)
}

// Backend details.
type BackendTypeOutput struct{ *pulumi.OutputState }

func (BackendTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendType)(nil)).Elem()
}

func (o BackendTypeOutput) ToBackendTypeOutput() BackendTypeOutput {
	return o
}

func (o BackendTypeOutput) ToBackendTypeOutputWithContext(ctx context.Context) BackendTypeOutput {
	return o
}

// Resource name.
func (o BackendTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BackendType) string { return v.Name }).(pulumi.StringOutput)
}

// Backend entity contract properties.
func (o BackendTypeOutput) Properties() BackendContractPropertiesResponseOutput {
	return o.ApplyT(func(v BackendType) BackendContractPropertiesResponse { return v.Properties }).(BackendContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o BackendTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BackendType) string { return v.Type }).(pulumi.StringOutput)
}

// Authorization header information.
type BackendAuthorizationHeaderCredentials struct {
	// Authentication Parameter value.
	Parameter string `pulumi:"parameter"`
	// Authentication Scheme name.
	Scheme string `pulumi:"scheme"`
}

// BackendAuthorizationHeaderCredentialsInput is an input type that accepts BackendAuthorizationHeaderCredentialsArgs and BackendAuthorizationHeaderCredentialsOutput values.
// You can construct a concrete instance of `BackendAuthorizationHeaderCredentialsInput` via:
//
//          BackendAuthorizationHeaderCredentialsArgs{...}
type BackendAuthorizationHeaderCredentialsInput interface {
	pulumi.Input

	ToBackendAuthorizationHeaderCredentialsOutput() BackendAuthorizationHeaderCredentialsOutput
	ToBackendAuthorizationHeaderCredentialsOutputWithContext(context.Context) BackendAuthorizationHeaderCredentialsOutput
}

// Authorization header information.
type BackendAuthorizationHeaderCredentialsArgs struct {
	// Authentication Parameter value.
	Parameter pulumi.StringInput `pulumi:"parameter"`
	// Authentication Scheme name.
	Scheme pulumi.StringInput `pulumi:"scheme"`
}

func (BackendAuthorizationHeaderCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAuthorizationHeaderCredentials)(nil)).Elem()
}

func (i BackendAuthorizationHeaderCredentialsArgs) ToBackendAuthorizationHeaderCredentialsOutput() BackendAuthorizationHeaderCredentialsOutput {
	return i.ToBackendAuthorizationHeaderCredentialsOutputWithContext(context.Background())
}

func (i BackendAuthorizationHeaderCredentialsArgs) ToBackendAuthorizationHeaderCredentialsOutputWithContext(ctx context.Context) BackendAuthorizationHeaderCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAuthorizationHeaderCredentialsOutput)
}

func (i BackendAuthorizationHeaderCredentialsArgs) ToBackendAuthorizationHeaderCredentialsPtrOutput() BackendAuthorizationHeaderCredentialsPtrOutput {
	return i.ToBackendAuthorizationHeaderCredentialsPtrOutputWithContext(context.Background())
}

func (i BackendAuthorizationHeaderCredentialsArgs) ToBackendAuthorizationHeaderCredentialsPtrOutputWithContext(ctx context.Context) BackendAuthorizationHeaderCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAuthorizationHeaderCredentialsOutput).ToBackendAuthorizationHeaderCredentialsPtrOutputWithContext(ctx)
}

// BackendAuthorizationHeaderCredentialsPtrInput is an input type that accepts BackendAuthorizationHeaderCredentialsArgs, BackendAuthorizationHeaderCredentialsPtr and BackendAuthorizationHeaderCredentialsPtrOutput values.
// You can construct a concrete instance of `BackendAuthorizationHeaderCredentialsPtrInput` via:
//
//          BackendAuthorizationHeaderCredentialsArgs{...}
//
//  or:
//
//          nil
type BackendAuthorizationHeaderCredentialsPtrInput interface {
	pulumi.Input

	ToBackendAuthorizationHeaderCredentialsPtrOutput() BackendAuthorizationHeaderCredentialsPtrOutput
	ToBackendAuthorizationHeaderCredentialsPtrOutputWithContext(context.Context) BackendAuthorizationHeaderCredentialsPtrOutput
}

type backendAuthorizationHeaderCredentialsPtrType BackendAuthorizationHeaderCredentialsArgs

func BackendAuthorizationHeaderCredentialsPtr(v *BackendAuthorizationHeaderCredentialsArgs) BackendAuthorizationHeaderCredentialsPtrInput {
	return (*backendAuthorizationHeaderCredentialsPtrType)(v)
}

func (*backendAuthorizationHeaderCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendAuthorizationHeaderCredentials)(nil)).Elem()
}

func (i *backendAuthorizationHeaderCredentialsPtrType) ToBackendAuthorizationHeaderCredentialsPtrOutput() BackendAuthorizationHeaderCredentialsPtrOutput {
	return i.ToBackendAuthorizationHeaderCredentialsPtrOutputWithContext(context.Background())
}

func (i *backendAuthorizationHeaderCredentialsPtrType) ToBackendAuthorizationHeaderCredentialsPtrOutputWithContext(ctx context.Context) BackendAuthorizationHeaderCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAuthorizationHeaderCredentialsPtrOutput)
}

// Authorization header information.
type BackendAuthorizationHeaderCredentialsOutput struct{ *pulumi.OutputState }

func (BackendAuthorizationHeaderCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAuthorizationHeaderCredentials)(nil)).Elem()
}

func (o BackendAuthorizationHeaderCredentialsOutput) ToBackendAuthorizationHeaderCredentialsOutput() BackendAuthorizationHeaderCredentialsOutput {
	return o
}

func (o BackendAuthorizationHeaderCredentialsOutput) ToBackendAuthorizationHeaderCredentialsOutputWithContext(ctx context.Context) BackendAuthorizationHeaderCredentialsOutput {
	return o
}

func (o BackendAuthorizationHeaderCredentialsOutput) ToBackendAuthorizationHeaderCredentialsPtrOutput() BackendAuthorizationHeaderCredentialsPtrOutput {
	return o.ToBackendAuthorizationHeaderCredentialsPtrOutputWithContext(context.Background())
}

func (o BackendAuthorizationHeaderCredentialsOutput) ToBackendAuthorizationHeaderCredentialsPtrOutputWithContext(ctx context.Context) BackendAuthorizationHeaderCredentialsPtrOutput {
	return o.ApplyT(func(v BackendAuthorizationHeaderCredentials) *BackendAuthorizationHeaderCredentials {
		return &v
	}).(BackendAuthorizationHeaderCredentialsPtrOutput)
}

// Authentication Parameter value.
func (o BackendAuthorizationHeaderCredentialsOutput) Parameter() pulumi.StringOutput {
	return o.ApplyT(func(v BackendAuthorizationHeaderCredentials) string { return v.Parameter }).(pulumi.StringOutput)
}

// Authentication Scheme name.
func (o BackendAuthorizationHeaderCredentialsOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v BackendAuthorizationHeaderCredentials) string { return v.Scheme }).(pulumi.StringOutput)
}

type BackendAuthorizationHeaderCredentialsPtrOutput struct{ *pulumi.OutputState }

func (BackendAuthorizationHeaderCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendAuthorizationHeaderCredentials)(nil)).Elem()
}

func (o BackendAuthorizationHeaderCredentialsPtrOutput) ToBackendAuthorizationHeaderCredentialsPtrOutput() BackendAuthorizationHeaderCredentialsPtrOutput {
	return o
}

func (o BackendAuthorizationHeaderCredentialsPtrOutput) ToBackendAuthorizationHeaderCredentialsPtrOutputWithContext(ctx context.Context) BackendAuthorizationHeaderCredentialsPtrOutput {
	return o
}

func (o BackendAuthorizationHeaderCredentialsPtrOutput) Elem() BackendAuthorizationHeaderCredentialsOutput {
	return o.ApplyT(func(v *BackendAuthorizationHeaderCredentials) BackendAuthorizationHeaderCredentials { return *v }).(BackendAuthorizationHeaderCredentialsOutput)
}

// Authentication Parameter value.
func (o BackendAuthorizationHeaderCredentialsPtrOutput) Parameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendAuthorizationHeaderCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Parameter
	}).(pulumi.StringPtrOutput)
}

// Authentication Scheme name.
func (o BackendAuthorizationHeaderCredentialsPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendAuthorizationHeaderCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Scheme
	}).(pulumi.StringPtrOutput)
}

// Authorization header information.
type BackendAuthorizationHeaderCredentialsResponse struct {
	// Authentication Parameter value.
	Parameter string `pulumi:"parameter"`
	// Authentication Scheme name.
	Scheme string `pulumi:"scheme"`
}

// BackendAuthorizationHeaderCredentialsResponseInput is an input type that accepts BackendAuthorizationHeaderCredentialsResponseArgs and BackendAuthorizationHeaderCredentialsResponseOutput values.
// You can construct a concrete instance of `BackendAuthorizationHeaderCredentialsResponseInput` via:
//
//          BackendAuthorizationHeaderCredentialsResponseArgs{...}
type BackendAuthorizationHeaderCredentialsResponseInput interface {
	pulumi.Input

	ToBackendAuthorizationHeaderCredentialsResponseOutput() BackendAuthorizationHeaderCredentialsResponseOutput
	ToBackendAuthorizationHeaderCredentialsResponseOutputWithContext(context.Context) BackendAuthorizationHeaderCredentialsResponseOutput
}

// Authorization header information.
type BackendAuthorizationHeaderCredentialsResponseArgs struct {
	// Authentication Parameter value.
	Parameter pulumi.StringInput `pulumi:"parameter"`
	// Authentication Scheme name.
	Scheme pulumi.StringInput `pulumi:"scheme"`
}

func (BackendAuthorizationHeaderCredentialsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAuthorizationHeaderCredentialsResponse)(nil)).Elem()
}

func (i BackendAuthorizationHeaderCredentialsResponseArgs) ToBackendAuthorizationHeaderCredentialsResponseOutput() BackendAuthorizationHeaderCredentialsResponseOutput {
	return i.ToBackendAuthorizationHeaderCredentialsResponseOutputWithContext(context.Background())
}

func (i BackendAuthorizationHeaderCredentialsResponseArgs) ToBackendAuthorizationHeaderCredentialsResponseOutputWithContext(ctx context.Context) BackendAuthorizationHeaderCredentialsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAuthorizationHeaderCredentialsResponseOutput)
}

func (i BackendAuthorizationHeaderCredentialsResponseArgs) ToBackendAuthorizationHeaderCredentialsResponsePtrOutput() BackendAuthorizationHeaderCredentialsResponsePtrOutput {
	return i.ToBackendAuthorizationHeaderCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i BackendAuthorizationHeaderCredentialsResponseArgs) ToBackendAuthorizationHeaderCredentialsResponsePtrOutputWithContext(ctx context.Context) BackendAuthorizationHeaderCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAuthorizationHeaderCredentialsResponseOutput).ToBackendAuthorizationHeaderCredentialsResponsePtrOutputWithContext(ctx)
}

// BackendAuthorizationHeaderCredentialsResponsePtrInput is an input type that accepts BackendAuthorizationHeaderCredentialsResponseArgs, BackendAuthorizationHeaderCredentialsResponsePtr and BackendAuthorizationHeaderCredentialsResponsePtrOutput values.
// You can construct a concrete instance of `BackendAuthorizationHeaderCredentialsResponsePtrInput` via:
//
//          BackendAuthorizationHeaderCredentialsResponseArgs{...}
//
//  or:
//
//          nil
type BackendAuthorizationHeaderCredentialsResponsePtrInput interface {
	pulumi.Input

	ToBackendAuthorizationHeaderCredentialsResponsePtrOutput() BackendAuthorizationHeaderCredentialsResponsePtrOutput
	ToBackendAuthorizationHeaderCredentialsResponsePtrOutputWithContext(context.Context) BackendAuthorizationHeaderCredentialsResponsePtrOutput
}

type backendAuthorizationHeaderCredentialsResponsePtrType BackendAuthorizationHeaderCredentialsResponseArgs

func BackendAuthorizationHeaderCredentialsResponsePtr(v *BackendAuthorizationHeaderCredentialsResponseArgs) BackendAuthorizationHeaderCredentialsResponsePtrInput {
	return (*backendAuthorizationHeaderCredentialsResponsePtrType)(v)
}

func (*backendAuthorizationHeaderCredentialsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendAuthorizationHeaderCredentialsResponse)(nil)).Elem()
}

func (i *backendAuthorizationHeaderCredentialsResponsePtrType) ToBackendAuthorizationHeaderCredentialsResponsePtrOutput() BackendAuthorizationHeaderCredentialsResponsePtrOutput {
	return i.ToBackendAuthorizationHeaderCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i *backendAuthorizationHeaderCredentialsResponsePtrType) ToBackendAuthorizationHeaderCredentialsResponsePtrOutputWithContext(ctx context.Context) BackendAuthorizationHeaderCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAuthorizationHeaderCredentialsResponsePtrOutput)
}

// Authorization header information.
type BackendAuthorizationHeaderCredentialsResponseOutput struct{ *pulumi.OutputState }

func (BackendAuthorizationHeaderCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAuthorizationHeaderCredentialsResponse)(nil)).Elem()
}

func (o BackendAuthorizationHeaderCredentialsResponseOutput) ToBackendAuthorizationHeaderCredentialsResponseOutput() BackendAuthorizationHeaderCredentialsResponseOutput {
	return o
}

func (o BackendAuthorizationHeaderCredentialsResponseOutput) ToBackendAuthorizationHeaderCredentialsResponseOutputWithContext(ctx context.Context) BackendAuthorizationHeaderCredentialsResponseOutput {
	return o
}

func (o BackendAuthorizationHeaderCredentialsResponseOutput) ToBackendAuthorizationHeaderCredentialsResponsePtrOutput() BackendAuthorizationHeaderCredentialsResponsePtrOutput {
	return o.ToBackendAuthorizationHeaderCredentialsResponsePtrOutputWithContext(context.Background())
}

func (o BackendAuthorizationHeaderCredentialsResponseOutput) ToBackendAuthorizationHeaderCredentialsResponsePtrOutputWithContext(ctx context.Context) BackendAuthorizationHeaderCredentialsResponsePtrOutput {
	return o.ApplyT(func(v BackendAuthorizationHeaderCredentialsResponse) *BackendAuthorizationHeaderCredentialsResponse {
		return &v
	}).(BackendAuthorizationHeaderCredentialsResponsePtrOutput)
}

// Authentication Parameter value.
func (o BackendAuthorizationHeaderCredentialsResponseOutput) Parameter() pulumi.StringOutput {
	return o.ApplyT(func(v BackendAuthorizationHeaderCredentialsResponse) string { return v.Parameter }).(pulumi.StringOutput)
}

// Authentication Scheme name.
func (o BackendAuthorizationHeaderCredentialsResponseOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v BackendAuthorizationHeaderCredentialsResponse) string { return v.Scheme }).(pulumi.StringOutput)
}

type BackendAuthorizationHeaderCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (BackendAuthorizationHeaderCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendAuthorizationHeaderCredentialsResponse)(nil)).Elem()
}

func (o BackendAuthorizationHeaderCredentialsResponsePtrOutput) ToBackendAuthorizationHeaderCredentialsResponsePtrOutput() BackendAuthorizationHeaderCredentialsResponsePtrOutput {
	return o
}

func (o BackendAuthorizationHeaderCredentialsResponsePtrOutput) ToBackendAuthorizationHeaderCredentialsResponsePtrOutputWithContext(ctx context.Context) BackendAuthorizationHeaderCredentialsResponsePtrOutput {
	return o
}

func (o BackendAuthorizationHeaderCredentialsResponsePtrOutput) Elem() BackendAuthorizationHeaderCredentialsResponseOutput {
	return o.ApplyT(func(v *BackendAuthorizationHeaderCredentialsResponse) BackendAuthorizationHeaderCredentialsResponse {
		return *v
	}).(BackendAuthorizationHeaderCredentialsResponseOutput)
}

// Authentication Parameter value.
func (o BackendAuthorizationHeaderCredentialsResponsePtrOutput) Parameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendAuthorizationHeaderCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Parameter
	}).(pulumi.StringPtrOutput)
}

// Authentication Scheme name.
func (o BackendAuthorizationHeaderCredentialsResponsePtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendAuthorizationHeaderCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Scheme
	}).(pulumi.StringPtrOutput)
}

// Parameters supplied to the Create Backend operation.
type BackendContractPropertiesResponse struct {
	// Backend Credentials Contract Properties
	Credentials *BackendCredentialsContractResponse `pulumi:"credentials"`
	// Backend Description.
	Description *string `pulumi:"description"`
	// Backend Properties contract
	Properties *BackendPropertiesResponse `pulumi:"properties"`
	// Backend communication protocol.
	Protocol string `pulumi:"protocol"`
	// Backend Proxy Contract Properties
	Proxy *BackendProxyContractResponse `pulumi:"proxy"`
	// Management Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or Api Apps.
	ResourceId *string `pulumi:"resourceId"`
	// Backend Title.
	Title *string `pulumi:"title"`
	// Backend TLS Properties
	Tls *BackendTlsPropertiesResponse `pulumi:"tls"`
	// Runtime Url of the Backend.
	Url string `pulumi:"url"`
}

// BackendContractPropertiesResponseInput is an input type that accepts BackendContractPropertiesResponseArgs and BackendContractPropertiesResponseOutput values.
// You can construct a concrete instance of `BackendContractPropertiesResponseInput` via:
//
//          BackendContractPropertiesResponseArgs{...}
type BackendContractPropertiesResponseInput interface {
	pulumi.Input

	ToBackendContractPropertiesResponseOutput() BackendContractPropertiesResponseOutput
	ToBackendContractPropertiesResponseOutputWithContext(context.Context) BackendContractPropertiesResponseOutput
}

// Parameters supplied to the Create Backend operation.
type BackendContractPropertiesResponseArgs struct {
	// Backend Credentials Contract Properties
	Credentials BackendCredentialsContractResponsePtrInput `pulumi:"credentials"`
	// Backend Description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Backend Properties contract
	Properties BackendPropertiesResponsePtrInput `pulumi:"properties"`
	// Backend communication protocol.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Backend Proxy Contract Properties
	Proxy BackendProxyContractResponsePtrInput `pulumi:"proxy"`
	// Management Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or Api Apps.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// Backend Title.
	Title pulumi.StringPtrInput `pulumi:"title"`
	// Backend TLS Properties
	Tls BackendTlsPropertiesResponsePtrInput `pulumi:"tls"`
	// Runtime Url of the Backend.
	Url pulumi.StringInput `pulumi:"url"`
}

func (BackendContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendContractPropertiesResponse)(nil)).Elem()
}

func (i BackendContractPropertiesResponseArgs) ToBackendContractPropertiesResponseOutput() BackendContractPropertiesResponseOutput {
	return i.ToBackendContractPropertiesResponseOutputWithContext(context.Background())
}

func (i BackendContractPropertiesResponseArgs) ToBackendContractPropertiesResponseOutputWithContext(ctx context.Context) BackendContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendContractPropertiesResponseOutput)
}

func (i BackendContractPropertiesResponseArgs) ToBackendContractPropertiesResponsePtrOutput() BackendContractPropertiesResponsePtrOutput {
	return i.ToBackendContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i BackendContractPropertiesResponseArgs) ToBackendContractPropertiesResponsePtrOutputWithContext(ctx context.Context) BackendContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendContractPropertiesResponseOutput).ToBackendContractPropertiesResponsePtrOutputWithContext(ctx)
}

// BackendContractPropertiesResponsePtrInput is an input type that accepts BackendContractPropertiesResponseArgs, BackendContractPropertiesResponsePtr and BackendContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `BackendContractPropertiesResponsePtrInput` via:
//
//          BackendContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type BackendContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToBackendContractPropertiesResponsePtrOutput() BackendContractPropertiesResponsePtrOutput
	ToBackendContractPropertiesResponsePtrOutputWithContext(context.Context) BackendContractPropertiesResponsePtrOutput
}

type backendContractPropertiesResponsePtrType BackendContractPropertiesResponseArgs

func BackendContractPropertiesResponsePtr(v *BackendContractPropertiesResponseArgs) BackendContractPropertiesResponsePtrInput {
	return (*backendContractPropertiesResponsePtrType)(v)
}

func (*backendContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendContractPropertiesResponse)(nil)).Elem()
}

func (i *backendContractPropertiesResponsePtrType) ToBackendContractPropertiesResponsePtrOutput() BackendContractPropertiesResponsePtrOutput {
	return i.ToBackendContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *backendContractPropertiesResponsePtrType) ToBackendContractPropertiesResponsePtrOutputWithContext(ctx context.Context) BackendContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendContractPropertiesResponsePtrOutput)
}

// Parameters supplied to the Create Backend operation.
type BackendContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BackendContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendContractPropertiesResponse)(nil)).Elem()
}

func (o BackendContractPropertiesResponseOutput) ToBackendContractPropertiesResponseOutput() BackendContractPropertiesResponseOutput {
	return o
}

func (o BackendContractPropertiesResponseOutput) ToBackendContractPropertiesResponseOutputWithContext(ctx context.Context) BackendContractPropertiesResponseOutput {
	return o
}

func (o BackendContractPropertiesResponseOutput) ToBackendContractPropertiesResponsePtrOutput() BackendContractPropertiesResponsePtrOutput {
	return o.ToBackendContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o BackendContractPropertiesResponseOutput) ToBackendContractPropertiesResponsePtrOutputWithContext(ctx context.Context) BackendContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v BackendContractPropertiesResponse) *BackendContractPropertiesResponse {
		return &v
	}).(BackendContractPropertiesResponsePtrOutput)
}

// Backend Credentials Contract Properties
func (o BackendContractPropertiesResponseOutput) Credentials() BackendCredentialsContractResponsePtrOutput {
	return o.ApplyT(func(v BackendContractPropertiesResponse) *BackendCredentialsContractResponse { return v.Credentials }).(BackendCredentialsContractResponsePtrOutput)
}

// Backend Description.
func (o BackendContractPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendContractPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Backend Properties contract
func (o BackendContractPropertiesResponseOutput) Properties() BackendPropertiesResponsePtrOutput {
	return o.ApplyT(func(v BackendContractPropertiesResponse) *BackendPropertiesResponse { return v.Properties }).(BackendPropertiesResponsePtrOutput)
}

// Backend communication protocol.
func (o BackendContractPropertiesResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v BackendContractPropertiesResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// Backend Proxy Contract Properties
func (o BackendContractPropertiesResponseOutput) Proxy() BackendProxyContractResponsePtrOutput {
	return o.ApplyT(func(v BackendContractPropertiesResponse) *BackendProxyContractResponse { return v.Proxy }).(BackendProxyContractResponsePtrOutput)
}

// Management Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or Api Apps.
func (o BackendContractPropertiesResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendContractPropertiesResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Backend Title.
func (o BackendContractPropertiesResponseOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendContractPropertiesResponse) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// Backend TLS Properties
func (o BackendContractPropertiesResponseOutput) Tls() BackendTlsPropertiesResponsePtrOutput {
	return o.ApplyT(func(v BackendContractPropertiesResponse) *BackendTlsPropertiesResponse { return v.Tls }).(BackendTlsPropertiesResponsePtrOutput)
}

// Runtime Url of the Backend.
func (o BackendContractPropertiesResponseOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v BackendContractPropertiesResponse) string { return v.Url }).(pulumi.StringOutput)
}

type BackendContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (BackendContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendContractPropertiesResponse)(nil)).Elem()
}

func (o BackendContractPropertiesResponsePtrOutput) ToBackendContractPropertiesResponsePtrOutput() BackendContractPropertiesResponsePtrOutput {
	return o
}

func (o BackendContractPropertiesResponsePtrOutput) ToBackendContractPropertiesResponsePtrOutputWithContext(ctx context.Context) BackendContractPropertiesResponsePtrOutput {
	return o
}

func (o BackendContractPropertiesResponsePtrOutput) Elem() BackendContractPropertiesResponseOutput {
	return o.ApplyT(func(v *BackendContractPropertiesResponse) BackendContractPropertiesResponse { return *v }).(BackendContractPropertiesResponseOutput)
}

// Backend Credentials Contract Properties
func (o BackendContractPropertiesResponsePtrOutput) Credentials() BackendCredentialsContractResponsePtrOutput {
	return o.ApplyT(func(v *BackendContractPropertiesResponse) *BackendCredentialsContractResponse {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(BackendCredentialsContractResponsePtrOutput)
}

// Backend Description.
func (o BackendContractPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Backend Properties contract
func (o BackendContractPropertiesResponsePtrOutput) Properties() BackendPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *BackendContractPropertiesResponse) *BackendPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(BackendPropertiesResponsePtrOutput)
}

// Backend communication protocol.
func (o BackendContractPropertiesResponsePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Backend Proxy Contract Properties
func (o BackendContractPropertiesResponsePtrOutput) Proxy() BackendProxyContractResponsePtrOutput {
	return o.ApplyT(func(v *BackendContractPropertiesResponse) *BackendProxyContractResponse {
		if v == nil {
			return nil
		}
		return v.Proxy
	}).(BackendProxyContractResponsePtrOutput)
}

// Management Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or Api Apps.
func (o BackendContractPropertiesResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Backend Title.
func (o BackendContractPropertiesResponsePtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Backend TLS Properties
func (o BackendContractPropertiesResponsePtrOutput) Tls() BackendTlsPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *BackendContractPropertiesResponse) *BackendTlsPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(BackendTlsPropertiesResponsePtrOutput)
}

// Runtime Url of the Backend.
func (o BackendContractPropertiesResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// Details of the Credentials used to connect to Backend.
type BackendCredentialsContract struct {
	// Authorization header authentication
	Authorization *BackendAuthorizationHeaderCredentials `pulumi:"authorization"`
	// List of Client Certificate Thumbprint.
	Certificate []string `pulumi:"certificate"`
	// Header Parameter description.
	Header map[string][]string `pulumi:"header"`
	// Query Parameter description.
	Query map[string][]string `pulumi:"query"`
}

// BackendCredentialsContractInput is an input type that accepts BackendCredentialsContractArgs and BackendCredentialsContractOutput values.
// You can construct a concrete instance of `BackendCredentialsContractInput` via:
//
//          BackendCredentialsContractArgs{...}
type BackendCredentialsContractInput interface {
	pulumi.Input

	ToBackendCredentialsContractOutput() BackendCredentialsContractOutput
	ToBackendCredentialsContractOutputWithContext(context.Context) BackendCredentialsContractOutput
}

// Details of the Credentials used to connect to Backend.
type BackendCredentialsContractArgs struct {
	// Authorization header authentication
	Authorization BackendAuthorizationHeaderCredentialsPtrInput `pulumi:"authorization"`
	// List of Client Certificate Thumbprint.
	Certificate pulumi.StringArrayInput `pulumi:"certificate"`
	// Header Parameter description.
	Header pulumi.StringArrayMapInput `pulumi:"header"`
	// Query Parameter description.
	Query pulumi.StringArrayMapInput `pulumi:"query"`
}

func (BackendCredentialsContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendCredentialsContract)(nil)).Elem()
}

func (i BackendCredentialsContractArgs) ToBackendCredentialsContractOutput() BackendCredentialsContractOutput {
	return i.ToBackendCredentialsContractOutputWithContext(context.Background())
}

func (i BackendCredentialsContractArgs) ToBackendCredentialsContractOutputWithContext(ctx context.Context) BackendCredentialsContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendCredentialsContractOutput)
}

func (i BackendCredentialsContractArgs) ToBackendCredentialsContractPtrOutput() BackendCredentialsContractPtrOutput {
	return i.ToBackendCredentialsContractPtrOutputWithContext(context.Background())
}

func (i BackendCredentialsContractArgs) ToBackendCredentialsContractPtrOutputWithContext(ctx context.Context) BackendCredentialsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendCredentialsContractOutput).ToBackendCredentialsContractPtrOutputWithContext(ctx)
}

// BackendCredentialsContractPtrInput is an input type that accepts BackendCredentialsContractArgs, BackendCredentialsContractPtr and BackendCredentialsContractPtrOutput values.
// You can construct a concrete instance of `BackendCredentialsContractPtrInput` via:
//
//          BackendCredentialsContractArgs{...}
//
//  or:
//
//          nil
type BackendCredentialsContractPtrInput interface {
	pulumi.Input

	ToBackendCredentialsContractPtrOutput() BackendCredentialsContractPtrOutput
	ToBackendCredentialsContractPtrOutputWithContext(context.Context) BackendCredentialsContractPtrOutput
}

type backendCredentialsContractPtrType BackendCredentialsContractArgs

func BackendCredentialsContractPtr(v *BackendCredentialsContractArgs) BackendCredentialsContractPtrInput {
	return (*backendCredentialsContractPtrType)(v)
}

func (*backendCredentialsContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendCredentialsContract)(nil)).Elem()
}

func (i *backendCredentialsContractPtrType) ToBackendCredentialsContractPtrOutput() BackendCredentialsContractPtrOutput {
	return i.ToBackendCredentialsContractPtrOutputWithContext(context.Background())
}

func (i *backendCredentialsContractPtrType) ToBackendCredentialsContractPtrOutputWithContext(ctx context.Context) BackendCredentialsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendCredentialsContractPtrOutput)
}

// Details of the Credentials used to connect to Backend.
type BackendCredentialsContractOutput struct{ *pulumi.OutputState }

func (BackendCredentialsContractOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendCredentialsContract)(nil)).Elem()
}

func (o BackendCredentialsContractOutput) ToBackendCredentialsContractOutput() BackendCredentialsContractOutput {
	return o
}

func (o BackendCredentialsContractOutput) ToBackendCredentialsContractOutputWithContext(ctx context.Context) BackendCredentialsContractOutput {
	return o
}

func (o BackendCredentialsContractOutput) ToBackendCredentialsContractPtrOutput() BackendCredentialsContractPtrOutput {
	return o.ToBackendCredentialsContractPtrOutputWithContext(context.Background())
}

func (o BackendCredentialsContractOutput) ToBackendCredentialsContractPtrOutputWithContext(ctx context.Context) BackendCredentialsContractPtrOutput {
	return o.ApplyT(func(v BackendCredentialsContract) *BackendCredentialsContract {
		return &v
	}).(BackendCredentialsContractPtrOutput)
}

// Authorization header authentication
func (o BackendCredentialsContractOutput) Authorization() BackendAuthorizationHeaderCredentialsPtrOutput {
	return o.ApplyT(func(v BackendCredentialsContract) *BackendAuthorizationHeaderCredentials { return v.Authorization }).(BackendAuthorizationHeaderCredentialsPtrOutput)
}

// List of Client Certificate Thumbprint.
func (o BackendCredentialsContractOutput) Certificate() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackendCredentialsContract) []string { return v.Certificate }).(pulumi.StringArrayOutput)
}

// Header Parameter description.
func (o BackendCredentialsContractOutput) Header() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v BackendCredentialsContract) map[string][]string { return v.Header }).(pulumi.StringArrayMapOutput)
}

// Query Parameter description.
func (o BackendCredentialsContractOutput) Query() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v BackendCredentialsContract) map[string][]string { return v.Query }).(pulumi.StringArrayMapOutput)
}

type BackendCredentialsContractPtrOutput struct{ *pulumi.OutputState }

func (BackendCredentialsContractPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendCredentialsContract)(nil)).Elem()
}

func (o BackendCredentialsContractPtrOutput) ToBackendCredentialsContractPtrOutput() BackendCredentialsContractPtrOutput {
	return o
}

func (o BackendCredentialsContractPtrOutput) ToBackendCredentialsContractPtrOutputWithContext(ctx context.Context) BackendCredentialsContractPtrOutput {
	return o
}

func (o BackendCredentialsContractPtrOutput) Elem() BackendCredentialsContractOutput {
	return o.ApplyT(func(v *BackendCredentialsContract) BackendCredentialsContract { return *v }).(BackendCredentialsContractOutput)
}

// Authorization header authentication
func (o BackendCredentialsContractPtrOutput) Authorization() BackendAuthorizationHeaderCredentialsPtrOutput {
	return o.ApplyT(func(v *BackendCredentialsContract) *BackendAuthorizationHeaderCredentials {
		if v == nil {
			return nil
		}
		return v.Authorization
	}).(BackendAuthorizationHeaderCredentialsPtrOutput)
}

// List of Client Certificate Thumbprint.
func (o BackendCredentialsContractPtrOutput) Certificate() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackendCredentialsContract) []string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringArrayOutput)
}

// Header Parameter description.
func (o BackendCredentialsContractPtrOutput) Header() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v *BackendCredentialsContract) map[string][]string {
		if v == nil {
			return nil
		}
		return v.Header
	}).(pulumi.StringArrayMapOutput)
}

// Query Parameter description.
func (o BackendCredentialsContractPtrOutput) Query() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v *BackendCredentialsContract) map[string][]string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringArrayMapOutput)
}

// Details of the Credentials used to connect to Backend.
type BackendCredentialsContractResponse struct {
	// Authorization header authentication
	Authorization *BackendAuthorizationHeaderCredentialsResponse `pulumi:"authorization"`
	// List of Client Certificate Thumbprint.
	Certificate []string `pulumi:"certificate"`
	// Header Parameter description.
	Header map[string][]string `pulumi:"header"`
	// Query Parameter description.
	Query map[string][]string `pulumi:"query"`
}

// BackendCredentialsContractResponseInput is an input type that accepts BackendCredentialsContractResponseArgs and BackendCredentialsContractResponseOutput values.
// You can construct a concrete instance of `BackendCredentialsContractResponseInput` via:
//
//          BackendCredentialsContractResponseArgs{...}
type BackendCredentialsContractResponseInput interface {
	pulumi.Input

	ToBackendCredentialsContractResponseOutput() BackendCredentialsContractResponseOutput
	ToBackendCredentialsContractResponseOutputWithContext(context.Context) BackendCredentialsContractResponseOutput
}

// Details of the Credentials used to connect to Backend.
type BackendCredentialsContractResponseArgs struct {
	// Authorization header authentication
	Authorization BackendAuthorizationHeaderCredentialsResponsePtrInput `pulumi:"authorization"`
	// List of Client Certificate Thumbprint.
	Certificate pulumi.StringArrayInput `pulumi:"certificate"`
	// Header Parameter description.
	Header pulumi.StringArrayMapInput `pulumi:"header"`
	// Query Parameter description.
	Query pulumi.StringArrayMapInput `pulumi:"query"`
}

func (BackendCredentialsContractResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendCredentialsContractResponse)(nil)).Elem()
}

func (i BackendCredentialsContractResponseArgs) ToBackendCredentialsContractResponseOutput() BackendCredentialsContractResponseOutput {
	return i.ToBackendCredentialsContractResponseOutputWithContext(context.Background())
}

func (i BackendCredentialsContractResponseArgs) ToBackendCredentialsContractResponseOutputWithContext(ctx context.Context) BackendCredentialsContractResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendCredentialsContractResponseOutput)
}

func (i BackendCredentialsContractResponseArgs) ToBackendCredentialsContractResponsePtrOutput() BackendCredentialsContractResponsePtrOutput {
	return i.ToBackendCredentialsContractResponsePtrOutputWithContext(context.Background())
}

func (i BackendCredentialsContractResponseArgs) ToBackendCredentialsContractResponsePtrOutputWithContext(ctx context.Context) BackendCredentialsContractResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendCredentialsContractResponseOutput).ToBackendCredentialsContractResponsePtrOutputWithContext(ctx)
}

// BackendCredentialsContractResponsePtrInput is an input type that accepts BackendCredentialsContractResponseArgs, BackendCredentialsContractResponsePtr and BackendCredentialsContractResponsePtrOutput values.
// You can construct a concrete instance of `BackendCredentialsContractResponsePtrInput` via:
//
//          BackendCredentialsContractResponseArgs{...}
//
//  or:
//
//          nil
type BackendCredentialsContractResponsePtrInput interface {
	pulumi.Input

	ToBackendCredentialsContractResponsePtrOutput() BackendCredentialsContractResponsePtrOutput
	ToBackendCredentialsContractResponsePtrOutputWithContext(context.Context) BackendCredentialsContractResponsePtrOutput
}

type backendCredentialsContractResponsePtrType BackendCredentialsContractResponseArgs

func BackendCredentialsContractResponsePtr(v *BackendCredentialsContractResponseArgs) BackendCredentialsContractResponsePtrInput {
	return (*backendCredentialsContractResponsePtrType)(v)
}

func (*backendCredentialsContractResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendCredentialsContractResponse)(nil)).Elem()
}

func (i *backendCredentialsContractResponsePtrType) ToBackendCredentialsContractResponsePtrOutput() BackendCredentialsContractResponsePtrOutput {
	return i.ToBackendCredentialsContractResponsePtrOutputWithContext(context.Background())
}

func (i *backendCredentialsContractResponsePtrType) ToBackendCredentialsContractResponsePtrOutputWithContext(ctx context.Context) BackendCredentialsContractResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendCredentialsContractResponsePtrOutput)
}

// Details of the Credentials used to connect to Backend.
type BackendCredentialsContractResponseOutput struct{ *pulumi.OutputState }

func (BackendCredentialsContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendCredentialsContractResponse)(nil)).Elem()
}

func (o BackendCredentialsContractResponseOutput) ToBackendCredentialsContractResponseOutput() BackendCredentialsContractResponseOutput {
	return o
}

func (o BackendCredentialsContractResponseOutput) ToBackendCredentialsContractResponseOutputWithContext(ctx context.Context) BackendCredentialsContractResponseOutput {
	return o
}

func (o BackendCredentialsContractResponseOutput) ToBackendCredentialsContractResponsePtrOutput() BackendCredentialsContractResponsePtrOutput {
	return o.ToBackendCredentialsContractResponsePtrOutputWithContext(context.Background())
}

func (o BackendCredentialsContractResponseOutput) ToBackendCredentialsContractResponsePtrOutputWithContext(ctx context.Context) BackendCredentialsContractResponsePtrOutput {
	return o.ApplyT(func(v BackendCredentialsContractResponse) *BackendCredentialsContractResponse {
		return &v
	}).(BackendCredentialsContractResponsePtrOutput)
}

// Authorization header authentication
func (o BackendCredentialsContractResponseOutput) Authorization() BackendAuthorizationHeaderCredentialsResponsePtrOutput {
	return o.ApplyT(func(v BackendCredentialsContractResponse) *BackendAuthorizationHeaderCredentialsResponse {
		return v.Authorization
	}).(BackendAuthorizationHeaderCredentialsResponsePtrOutput)
}

// List of Client Certificate Thumbprint.
func (o BackendCredentialsContractResponseOutput) Certificate() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackendCredentialsContractResponse) []string { return v.Certificate }).(pulumi.StringArrayOutput)
}

// Header Parameter description.
func (o BackendCredentialsContractResponseOutput) Header() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v BackendCredentialsContractResponse) map[string][]string { return v.Header }).(pulumi.StringArrayMapOutput)
}

// Query Parameter description.
func (o BackendCredentialsContractResponseOutput) Query() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v BackendCredentialsContractResponse) map[string][]string { return v.Query }).(pulumi.StringArrayMapOutput)
}

type BackendCredentialsContractResponsePtrOutput struct{ *pulumi.OutputState }

func (BackendCredentialsContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendCredentialsContractResponse)(nil)).Elem()
}

func (o BackendCredentialsContractResponsePtrOutput) ToBackendCredentialsContractResponsePtrOutput() BackendCredentialsContractResponsePtrOutput {
	return o
}

func (o BackendCredentialsContractResponsePtrOutput) ToBackendCredentialsContractResponsePtrOutputWithContext(ctx context.Context) BackendCredentialsContractResponsePtrOutput {
	return o
}

func (o BackendCredentialsContractResponsePtrOutput) Elem() BackendCredentialsContractResponseOutput {
	return o.ApplyT(func(v *BackendCredentialsContractResponse) BackendCredentialsContractResponse { return *v }).(BackendCredentialsContractResponseOutput)
}

// Authorization header authentication
func (o BackendCredentialsContractResponsePtrOutput) Authorization() BackendAuthorizationHeaderCredentialsResponsePtrOutput {
	return o.ApplyT(func(v *BackendCredentialsContractResponse) *BackendAuthorizationHeaderCredentialsResponse {
		if v == nil {
			return nil
		}
		return v.Authorization
	}).(BackendAuthorizationHeaderCredentialsResponsePtrOutput)
}

// List of Client Certificate Thumbprint.
func (o BackendCredentialsContractResponsePtrOutput) Certificate() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackendCredentialsContractResponse) []string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringArrayOutput)
}

// Header Parameter description.
func (o BackendCredentialsContractResponsePtrOutput) Header() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v *BackendCredentialsContractResponse) map[string][]string {
		if v == nil {
			return nil
		}
		return v.Header
	}).(pulumi.StringArrayMapOutput)
}

// Query Parameter description.
func (o BackendCredentialsContractResponsePtrOutput) Query() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v *BackendCredentialsContractResponse) map[string][]string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringArrayMapOutput)
}

// Properties specific to the Backend Type.
type BackendProperties struct {
	// Backend Service Fabric Cluster Properties
	ServiceFabricCluster *BackendServiceFabricClusterProperties `pulumi:"serviceFabricCluster"`
}

// BackendPropertiesInput is an input type that accepts BackendPropertiesArgs and BackendPropertiesOutput values.
// You can construct a concrete instance of `BackendPropertiesInput` via:
//
//          BackendPropertiesArgs{...}
type BackendPropertiesInput interface {
	pulumi.Input

	ToBackendPropertiesOutput() BackendPropertiesOutput
	ToBackendPropertiesOutputWithContext(context.Context) BackendPropertiesOutput
}

// Properties specific to the Backend Type.
type BackendPropertiesArgs struct {
	// Backend Service Fabric Cluster Properties
	ServiceFabricCluster BackendServiceFabricClusterPropertiesPtrInput `pulumi:"serviceFabricCluster"`
}

func (BackendPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendProperties)(nil)).Elem()
}

func (i BackendPropertiesArgs) ToBackendPropertiesOutput() BackendPropertiesOutput {
	return i.ToBackendPropertiesOutputWithContext(context.Background())
}

func (i BackendPropertiesArgs) ToBackendPropertiesOutputWithContext(ctx context.Context) BackendPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPropertiesOutput)
}

func (i BackendPropertiesArgs) ToBackendPropertiesPtrOutput() BackendPropertiesPtrOutput {
	return i.ToBackendPropertiesPtrOutputWithContext(context.Background())
}

func (i BackendPropertiesArgs) ToBackendPropertiesPtrOutputWithContext(ctx context.Context) BackendPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPropertiesOutput).ToBackendPropertiesPtrOutputWithContext(ctx)
}

// BackendPropertiesPtrInput is an input type that accepts BackendPropertiesArgs, BackendPropertiesPtr and BackendPropertiesPtrOutput values.
// You can construct a concrete instance of `BackendPropertiesPtrInput` via:
//
//          BackendPropertiesArgs{...}
//
//  or:
//
//          nil
type BackendPropertiesPtrInput interface {
	pulumi.Input

	ToBackendPropertiesPtrOutput() BackendPropertiesPtrOutput
	ToBackendPropertiesPtrOutputWithContext(context.Context) BackendPropertiesPtrOutput
}

type backendPropertiesPtrType BackendPropertiesArgs

func BackendPropertiesPtr(v *BackendPropertiesArgs) BackendPropertiesPtrInput {
	return (*backendPropertiesPtrType)(v)
}

func (*backendPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendProperties)(nil)).Elem()
}

func (i *backendPropertiesPtrType) ToBackendPropertiesPtrOutput() BackendPropertiesPtrOutput {
	return i.ToBackendPropertiesPtrOutputWithContext(context.Background())
}

func (i *backendPropertiesPtrType) ToBackendPropertiesPtrOutputWithContext(ctx context.Context) BackendPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPropertiesPtrOutput)
}

// Properties specific to the Backend Type.
type BackendPropertiesOutput struct{ *pulumi.OutputState }

func (BackendPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendProperties)(nil)).Elem()
}

func (o BackendPropertiesOutput) ToBackendPropertiesOutput() BackendPropertiesOutput {
	return o
}

func (o BackendPropertiesOutput) ToBackendPropertiesOutputWithContext(ctx context.Context) BackendPropertiesOutput {
	return o
}

func (o BackendPropertiesOutput) ToBackendPropertiesPtrOutput() BackendPropertiesPtrOutput {
	return o.ToBackendPropertiesPtrOutputWithContext(context.Background())
}

func (o BackendPropertiesOutput) ToBackendPropertiesPtrOutputWithContext(ctx context.Context) BackendPropertiesPtrOutput {
	return o.ApplyT(func(v BackendProperties) *BackendProperties {
		return &v
	}).(BackendPropertiesPtrOutput)
}

// Backend Service Fabric Cluster Properties
func (o BackendPropertiesOutput) ServiceFabricCluster() BackendServiceFabricClusterPropertiesPtrOutput {
	return o.ApplyT(func(v BackendProperties) *BackendServiceFabricClusterProperties { return v.ServiceFabricCluster }).(BackendServiceFabricClusterPropertiesPtrOutput)
}

type BackendPropertiesPtrOutput struct{ *pulumi.OutputState }

func (BackendPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendProperties)(nil)).Elem()
}

func (o BackendPropertiesPtrOutput) ToBackendPropertiesPtrOutput() BackendPropertiesPtrOutput {
	return o
}

func (o BackendPropertiesPtrOutput) ToBackendPropertiesPtrOutputWithContext(ctx context.Context) BackendPropertiesPtrOutput {
	return o
}

func (o BackendPropertiesPtrOutput) Elem() BackendPropertiesOutput {
	return o.ApplyT(func(v *BackendProperties) BackendProperties { return *v }).(BackendPropertiesOutput)
}

// Backend Service Fabric Cluster Properties
func (o BackendPropertiesPtrOutput) ServiceFabricCluster() BackendServiceFabricClusterPropertiesPtrOutput {
	return o.ApplyT(func(v *BackendProperties) *BackendServiceFabricClusterProperties {
		if v == nil {
			return nil
		}
		return v.ServiceFabricCluster
	}).(BackendServiceFabricClusterPropertiesPtrOutput)
}

// Properties specific to the Backend Type.
type BackendPropertiesResponse struct {
	// Backend Service Fabric Cluster Properties
	ServiceFabricCluster *BackendServiceFabricClusterPropertiesResponse `pulumi:"serviceFabricCluster"`
}

// BackendPropertiesResponseInput is an input type that accepts BackendPropertiesResponseArgs and BackendPropertiesResponseOutput values.
// You can construct a concrete instance of `BackendPropertiesResponseInput` via:
//
//          BackendPropertiesResponseArgs{...}
type BackendPropertiesResponseInput interface {
	pulumi.Input

	ToBackendPropertiesResponseOutput() BackendPropertiesResponseOutput
	ToBackendPropertiesResponseOutputWithContext(context.Context) BackendPropertiesResponseOutput
}

// Properties specific to the Backend Type.
type BackendPropertiesResponseArgs struct {
	// Backend Service Fabric Cluster Properties
	ServiceFabricCluster BackendServiceFabricClusterPropertiesResponsePtrInput `pulumi:"serviceFabricCluster"`
}

func (BackendPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendPropertiesResponse)(nil)).Elem()
}

func (i BackendPropertiesResponseArgs) ToBackendPropertiesResponseOutput() BackendPropertiesResponseOutput {
	return i.ToBackendPropertiesResponseOutputWithContext(context.Background())
}

func (i BackendPropertiesResponseArgs) ToBackendPropertiesResponseOutputWithContext(ctx context.Context) BackendPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPropertiesResponseOutput)
}

func (i BackendPropertiesResponseArgs) ToBackendPropertiesResponsePtrOutput() BackendPropertiesResponsePtrOutput {
	return i.ToBackendPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i BackendPropertiesResponseArgs) ToBackendPropertiesResponsePtrOutputWithContext(ctx context.Context) BackendPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPropertiesResponseOutput).ToBackendPropertiesResponsePtrOutputWithContext(ctx)
}

// BackendPropertiesResponsePtrInput is an input type that accepts BackendPropertiesResponseArgs, BackendPropertiesResponsePtr and BackendPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `BackendPropertiesResponsePtrInput` via:
//
//          BackendPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type BackendPropertiesResponsePtrInput interface {
	pulumi.Input

	ToBackendPropertiesResponsePtrOutput() BackendPropertiesResponsePtrOutput
	ToBackendPropertiesResponsePtrOutputWithContext(context.Context) BackendPropertiesResponsePtrOutput
}

type backendPropertiesResponsePtrType BackendPropertiesResponseArgs

func BackendPropertiesResponsePtr(v *BackendPropertiesResponseArgs) BackendPropertiesResponsePtrInput {
	return (*backendPropertiesResponsePtrType)(v)
}

func (*backendPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendPropertiesResponse)(nil)).Elem()
}

func (i *backendPropertiesResponsePtrType) ToBackendPropertiesResponsePtrOutput() BackendPropertiesResponsePtrOutput {
	return i.ToBackendPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *backendPropertiesResponsePtrType) ToBackendPropertiesResponsePtrOutputWithContext(ctx context.Context) BackendPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPropertiesResponsePtrOutput)
}

// Properties specific to the Backend Type.
type BackendPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BackendPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendPropertiesResponse)(nil)).Elem()
}

func (o BackendPropertiesResponseOutput) ToBackendPropertiesResponseOutput() BackendPropertiesResponseOutput {
	return o
}

func (o BackendPropertiesResponseOutput) ToBackendPropertiesResponseOutputWithContext(ctx context.Context) BackendPropertiesResponseOutput {
	return o
}

func (o BackendPropertiesResponseOutput) ToBackendPropertiesResponsePtrOutput() BackendPropertiesResponsePtrOutput {
	return o.ToBackendPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o BackendPropertiesResponseOutput) ToBackendPropertiesResponsePtrOutputWithContext(ctx context.Context) BackendPropertiesResponsePtrOutput {
	return o.ApplyT(func(v BackendPropertiesResponse) *BackendPropertiesResponse {
		return &v
	}).(BackendPropertiesResponsePtrOutput)
}

// Backend Service Fabric Cluster Properties
func (o BackendPropertiesResponseOutput) ServiceFabricCluster() BackendServiceFabricClusterPropertiesResponsePtrOutput {
	return o.ApplyT(func(v BackendPropertiesResponse) *BackendServiceFabricClusterPropertiesResponse {
		return v.ServiceFabricCluster
	}).(BackendServiceFabricClusterPropertiesResponsePtrOutput)
}

type BackendPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (BackendPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendPropertiesResponse)(nil)).Elem()
}

func (o BackendPropertiesResponsePtrOutput) ToBackendPropertiesResponsePtrOutput() BackendPropertiesResponsePtrOutput {
	return o
}

func (o BackendPropertiesResponsePtrOutput) ToBackendPropertiesResponsePtrOutputWithContext(ctx context.Context) BackendPropertiesResponsePtrOutput {
	return o
}

func (o BackendPropertiesResponsePtrOutput) Elem() BackendPropertiesResponseOutput {
	return o.ApplyT(func(v *BackendPropertiesResponse) BackendPropertiesResponse { return *v }).(BackendPropertiesResponseOutput)
}

// Backend Service Fabric Cluster Properties
func (o BackendPropertiesResponsePtrOutput) ServiceFabricCluster() BackendServiceFabricClusterPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *BackendPropertiesResponse) *BackendServiceFabricClusterPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.ServiceFabricCluster
	}).(BackendServiceFabricClusterPropertiesResponsePtrOutput)
}

// Details of the Backend WebProxy Server to use in the Request to Backend.
type BackendProxyContract struct {
	// Password to connect to the WebProxy Server
	Password *string `pulumi:"password"`
	// WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.
	Url string `pulumi:"url"`
	// Username to connect to the WebProxy server
	Username *string `pulumi:"username"`
}

// BackendProxyContractInput is an input type that accepts BackendProxyContractArgs and BackendProxyContractOutput values.
// You can construct a concrete instance of `BackendProxyContractInput` via:
//
//          BackendProxyContractArgs{...}
type BackendProxyContractInput interface {
	pulumi.Input

	ToBackendProxyContractOutput() BackendProxyContractOutput
	ToBackendProxyContractOutputWithContext(context.Context) BackendProxyContractOutput
}

// Details of the Backend WebProxy Server to use in the Request to Backend.
type BackendProxyContractArgs struct {
	// Password to connect to the WebProxy Server
	Password pulumi.StringPtrInput `pulumi:"password"`
	// WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.
	Url pulumi.StringInput `pulumi:"url"`
	// Username to connect to the WebProxy server
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (BackendProxyContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendProxyContract)(nil)).Elem()
}

func (i BackendProxyContractArgs) ToBackendProxyContractOutput() BackendProxyContractOutput {
	return i.ToBackendProxyContractOutputWithContext(context.Background())
}

func (i BackendProxyContractArgs) ToBackendProxyContractOutputWithContext(ctx context.Context) BackendProxyContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendProxyContractOutput)
}

func (i BackendProxyContractArgs) ToBackendProxyContractPtrOutput() BackendProxyContractPtrOutput {
	return i.ToBackendProxyContractPtrOutputWithContext(context.Background())
}

func (i BackendProxyContractArgs) ToBackendProxyContractPtrOutputWithContext(ctx context.Context) BackendProxyContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendProxyContractOutput).ToBackendProxyContractPtrOutputWithContext(ctx)
}

// BackendProxyContractPtrInput is an input type that accepts BackendProxyContractArgs, BackendProxyContractPtr and BackendProxyContractPtrOutput values.
// You can construct a concrete instance of `BackendProxyContractPtrInput` via:
//
//          BackendProxyContractArgs{...}
//
//  or:
//
//          nil
type BackendProxyContractPtrInput interface {
	pulumi.Input

	ToBackendProxyContractPtrOutput() BackendProxyContractPtrOutput
	ToBackendProxyContractPtrOutputWithContext(context.Context) BackendProxyContractPtrOutput
}

type backendProxyContractPtrType BackendProxyContractArgs

func BackendProxyContractPtr(v *BackendProxyContractArgs) BackendProxyContractPtrInput {
	return (*backendProxyContractPtrType)(v)
}

func (*backendProxyContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendProxyContract)(nil)).Elem()
}

func (i *backendProxyContractPtrType) ToBackendProxyContractPtrOutput() BackendProxyContractPtrOutput {
	return i.ToBackendProxyContractPtrOutputWithContext(context.Background())
}

func (i *backendProxyContractPtrType) ToBackendProxyContractPtrOutputWithContext(ctx context.Context) BackendProxyContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendProxyContractPtrOutput)
}

// Details of the Backend WebProxy Server to use in the Request to Backend.
type BackendProxyContractOutput struct{ *pulumi.OutputState }

func (BackendProxyContractOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendProxyContract)(nil)).Elem()
}

func (o BackendProxyContractOutput) ToBackendProxyContractOutput() BackendProxyContractOutput {
	return o
}

func (o BackendProxyContractOutput) ToBackendProxyContractOutputWithContext(ctx context.Context) BackendProxyContractOutput {
	return o
}

func (o BackendProxyContractOutput) ToBackendProxyContractPtrOutput() BackendProxyContractPtrOutput {
	return o.ToBackendProxyContractPtrOutputWithContext(context.Background())
}

func (o BackendProxyContractOutput) ToBackendProxyContractPtrOutputWithContext(ctx context.Context) BackendProxyContractPtrOutput {
	return o.ApplyT(func(v BackendProxyContract) *BackendProxyContract {
		return &v
	}).(BackendProxyContractPtrOutput)
}

// Password to connect to the WebProxy Server
func (o BackendProxyContractOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendProxyContract) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.
func (o BackendProxyContractOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v BackendProxyContract) string { return v.Url }).(pulumi.StringOutput)
}

// Username to connect to the WebProxy server
func (o BackendProxyContractOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendProxyContract) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type BackendProxyContractPtrOutput struct{ *pulumi.OutputState }

func (BackendProxyContractPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendProxyContract)(nil)).Elem()
}

func (o BackendProxyContractPtrOutput) ToBackendProxyContractPtrOutput() BackendProxyContractPtrOutput {
	return o
}

func (o BackendProxyContractPtrOutput) ToBackendProxyContractPtrOutputWithContext(ctx context.Context) BackendProxyContractPtrOutput {
	return o
}

func (o BackendProxyContractPtrOutput) Elem() BackendProxyContractOutput {
	return o.ApplyT(func(v *BackendProxyContract) BackendProxyContract { return *v }).(BackendProxyContractOutput)
}

// Password to connect to the WebProxy Server
func (o BackendProxyContractPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendProxyContract) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.
func (o BackendProxyContractPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendProxyContract) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// Username to connect to the WebProxy server
func (o BackendProxyContractPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendProxyContract) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Details of the Backend WebProxy Server to use in the Request to Backend.
type BackendProxyContractResponse struct {
	// Password to connect to the WebProxy Server
	Password *string `pulumi:"password"`
	// WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.
	Url string `pulumi:"url"`
	// Username to connect to the WebProxy server
	Username *string `pulumi:"username"`
}

// BackendProxyContractResponseInput is an input type that accepts BackendProxyContractResponseArgs and BackendProxyContractResponseOutput values.
// You can construct a concrete instance of `BackendProxyContractResponseInput` via:
//
//          BackendProxyContractResponseArgs{...}
type BackendProxyContractResponseInput interface {
	pulumi.Input

	ToBackendProxyContractResponseOutput() BackendProxyContractResponseOutput
	ToBackendProxyContractResponseOutputWithContext(context.Context) BackendProxyContractResponseOutput
}

// Details of the Backend WebProxy Server to use in the Request to Backend.
type BackendProxyContractResponseArgs struct {
	// Password to connect to the WebProxy Server
	Password pulumi.StringPtrInput `pulumi:"password"`
	// WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.
	Url pulumi.StringInput `pulumi:"url"`
	// Username to connect to the WebProxy server
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (BackendProxyContractResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendProxyContractResponse)(nil)).Elem()
}

func (i BackendProxyContractResponseArgs) ToBackendProxyContractResponseOutput() BackendProxyContractResponseOutput {
	return i.ToBackendProxyContractResponseOutputWithContext(context.Background())
}

func (i BackendProxyContractResponseArgs) ToBackendProxyContractResponseOutputWithContext(ctx context.Context) BackendProxyContractResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendProxyContractResponseOutput)
}

func (i BackendProxyContractResponseArgs) ToBackendProxyContractResponsePtrOutput() BackendProxyContractResponsePtrOutput {
	return i.ToBackendProxyContractResponsePtrOutputWithContext(context.Background())
}

func (i BackendProxyContractResponseArgs) ToBackendProxyContractResponsePtrOutputWithContext(ctx context.Context) BackendProxyContractResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendProxyContractResponseOutput).ToBackendProxyContractResponsePtrOutputWithContext(ctx)
}

// BackendProxyContractResponsePtrInput is an input type that accepts BackendProxyContractResponseArgs, BackendProxyContractResponsePtr and BackendProxyContractResponsePtrOutput values.
// You can construct a concrete instance of `BackendProxyContractResponsePtrInput` via:
//
//          BackendProxyContractResponseArgs{...}
//
//  or:
//
//          nil
type BackendProxyContractResponsePtrInput interface {
	pulumi.Input

	ToBackendProxyContractResponsePtrOutput() BackendProxyContractResponsePtrOutput
	ToBackendProxyContractResponsePtrOutputWithContext(context.Context) BackendProxyContractResponsePtrOutput
}

type backendProxyContractResponsePtrType BackendProxyContractResponseArgs

func BackendProxyContractResponsePtr(v *BackendProxyContractResponseArgs) BackendProxyContractResponsePtrInput {
	return (*backendProxyContractResponsePtrType)(v)
}

func (*backendProxyContractResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendProxyContractResponse)(nil)).Elem()
}

func (i *backendProxyContractResponsePtrType) ToBackendProxyContractResponsePtrOutput() BackendProxyContractResponsePtrOutput {
	return i.ToBackendProxyContractResponsePtrOutputWithContext(context.Background())
}

func (i *backendProxyContractResponsePtrType) ToBackendProxyContractResponsePtrOutputWithContext(ctx context.Context) BackendProxyContractResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendProxyContractResponsePtrOutput)
}

// Details of the Backend WebProxy Server to use in the Request to Backend.
type BackendProxyContractResponseOutput struct{ *pulumi.OutputState }

func (BackendProxyContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendProxyContractResponse)(nil)).Elem()
}

func (o BackendProxyContractResponseOutput) ToBackendProxyContractResponseOutput() BackendProxyContractResponseOutput {
	return o
}

func (o BackendProxyContractResponseOutput) ToBackendProxyContractResponseOutputWithContext(ctx context.Context) BackendProxyContractResponseOutput {
	return o
}

func (o BackendProxyContractResponseOutput) ToBackendProxyContractResponsePtrOutput() BackendProxyContractResponsePtrOutput {
	return o.ToBackendProxyContractResponsePtrOutputWithContext(context.Background())
}

func (o BackendProxyContractResponseOutput) ToBackendProxyContractResponsePtrOutputWithContext(ctx context.Context) BackendProxyContractResponsePtrOutput {
	return o.ApplyT(func(v BackendProxyContractResponse) *BackendProxyContractResponse {
		return &v
	}).(BackendProxyContractResponsePtrOutput)
}

// Password to connect to the WebProxy Server
func (o BackendProxyContractResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendProxyContractResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.
func (o BackendProxyContractResponseOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v BackendProxyContractResponse) string { return v.Url }).(pulumi.StringOutput)
}

// Username to connect to the WebProxy server
func (o BackendProxyContractResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendProxyContractResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type BackendProxyContractResponsePtrOutput struct{ *pulumi.OutputState }

func (BackendProxyContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendProxyContractResponse)(nil)).Elem()
}

func (o BackendProxyContractResponsePtrOutput) ToBackendProxyContractResponsePtrOutput() BackendProxyContractResponsePtrOutput {
	return o
}

func (o BackendProxyContractResponsePtrOutput) ToBackendProxyContractResponsePtrOutputWithContext(ctx context.Context) BackendProxyContractResponsePtrOutput {
	return o
}

func (o BackendProxyContractResponsePtrOutput) Elem() BackendProxyContractResponseOutput {
	return o.ApplyT(func(v *BackendProxyContractResponse) BackendProxyContractResponse { return *v }).(BackendProxyContractResponseOutput)
}

// Password to connect to the WebProxy Server
func (o BackendProxyContractResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendProxyContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.
func (o BackendProxyContractResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendProxyContractResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// Username to connect to the WebProxy server
func (o BackendProxyContractResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendProxyContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Properties of the Service Fabric Type Backend.
type BackendServiceFabricClusterProperties struct {
	// The client certificate thumbprint for the management endpoint.
	ClientCertificatethumbprint string `pulumi:"clientCertificatethumbprint"`
	// The cluster management endpoint.
	ManagementEndpoints []string `pulumi:"managementEndpoints"`
	// Maximum number of retries while attempting resolve the partition.
	MaxPartitionResolutionRetries *int `pulumi:"maxPartitionResolutionRetries"`
	// Thumbprints of certificates cluster management service uses for tls communication
	ServerCertificateThumbprints []string `pulumi:"serverCertificateThumbprints"`
	// Server X509 Certificate Names Collection
	ServerX509Names []X509CertificateName `pulumi:"serverX509Names"`
}

// BackendServiceFabricClusterPropertiesInput is an input type that accepts BackendServiceFabricClusterPropertiesArgs and BackendServiceFabricClusterPropertiesOutput values.
// You can construct a concrete instance of `BackendServiceFabricClusterPropertiesInput` via:
//
//          BackendServiceFabricClusterPropertiesArgs{...}
type BackendServiceFabricClusterPropertiesInput interface {
	pulumi.Input

	ToBackendServiceFabricClusterPropertiesOutput() BackendServiceFabricClusterPropertiesOutput
	ToBackendServiceFabricClusterPropertiesOutputWithContext(context.Context) BackendServiceFabricClusterPropertiesOutput
}

// Properties of the Service Fabric Type Backend.
type BackendServiceFabricClusterPropertiesArgs struct {
	// The client certificate thumbprint for the management endpoint.
	ClientCertificatethumbprint pulumi.StringInput `pulumi:"clientCertificatethumbprint"`
	// The cluster management endpoint.
	ManagementEndpoints pulumi.StringArrayInput `pulumi:"managementEndpoints"`
	// Maximum number of retries while attempting resolve the partition.
	MaxPartitionResolutionRetries pulumi.IntPtrInput `pulumi:"maxPartitionResolutionRetries"`
	// Thumbprints of certificates cluster management service uses for tls communication
	ServerCertificateThumbprints pulumi.StringArrayInput `pulumi:"serverCertificateThumbprints"`
	// Server X509 Certificate Names Collection
	ServerX509Names X509CertificateNameArrayInput `pulumi:"serverX509Names"`
}

func (BackendServiceFabricClusterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceFabricClusterProperties)(nil)).Elem()
}

func (i BackendServiceFabricClusterPropertiesArgs) ToBackendServiceFabricClusterPropertiesOutput() BackendServiceFabricClusterPropertiesOutput {
	return i.ToBackendServiceFabricClusterPropertiesOutputWithContext(context.Background())
}

func (i BackendServiceFabricClusterPropertiesArgs) ToBackendServiceFabricClusterPropertiesOutputWithContext(ctx context.Context) BackendServiceFabricClusterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServiceFabricClusterPropertiesOutput)
}

func (i BackendServiceFabricClusterPropertiesArgs) ToBackendServiceFabricClusterPropertiesPtrOutput() BackendServiceFabricClusterPropertiesPtrOutput {
	return i.ToBackendServiceFabricClusterPropertiesPtrOutputWithContext(context.Background())
}

func (i BackendServiceFabricClusterPropertiesArgs) ToBackendServiceFabricClusterPropertiesPtrOutputWithContext(ctx context.Context) BackendServiceFabricClusterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServiceFabricClusterPropertiesOutput).ToBackendServiceFabricClusterPropertiesPtrOutputWithContext(ctx)
}

// BackendServiceFabricClusterPropertiesPtrInput is an input type that accepts BackendServiceFabricClusterPropertiesArgs, BackendServiceFabricClusterPropertiesPtr and BackendServiceFabricClusterPropertiesPtrOutput values.
// You can construct a concrete instance of `BackendServiceFabricClusterPropertiesPtrInput` via:
//
//          BackendServiceFabricClusterPropertiesArgs{...}
//
//  or:
//
//          nil
type BackendServiceFabricClusterPropertiesPtrInput interface {
	pulumi.Input

	ToBackendServiceFabricClusterPropertiesPtrOutput() BackendServiceFabricClusterPropertiesPtrOutput
	ToBackendServiceFabricClusterPropertiesPtrOutputWithContext(context.Context) BackendServiceFabricClusterPropertiesPtrOutput
}

type backendServiceFabricClusterPropertiesPtrType BackendServiceFabricClusterPropertiesArgs

func BackendServiceFabricClusterPropertiesPtr(v *BackendServiceFabricClusterPropertiesArgs) BackendServiceFabricClusterPropertiesPtrInput {
	return (*backendServiceFabricClusterPropertiesPtrType)(v)
}

func (*backendServiceFabricClusterPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendServiceFabricClusterProperties)(nil)).Elem()
}

func (i *backendServiceFabricClusterPropertiesPtrType) ToBackendServiceFabricClusterPropertiesPtrOutput() BackendServiceFabricClusterPropertiesPtrOutput {
	return i.ToBackendServiceFabricClusterPropertiesPtrOutputWithContext(context.Background())
}

func (i *backendServiceFabricClusterPropertiesPtrType) ToBackendServiceFabricClusterPropertiesPtrOutputWithContext(ctx context.Context) BackendServiceFabricClusterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServiceFabricClusterPropertiesPtrOutput)
}

// Properties of the Service Fabric Type Backend.
type BackendServiceFabricClusterPropertiesOutput struct{ *pulumi.OutputState }

func (BackendServiceFabricClusterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceFabricClusterProperties)(nil)).Elem()
}

func (o BackendServiceFabricClusterPropertiesOutput) ToBackendServiceFabricClusterPropertiesOutput() BackendServiceFabricClusterPropertiesOutput {
	return o
}

func (o BackendServiceFabricClusterPropertiesOutput) ToBackendServiceFabricClusterPropertiesOutputWithContext(ctx context.Context) BackendServiceFabricClusterPropertiesOutput {
	return o
}

func (o BackendServiceFabricClusterPropertiesOutput) ToBackendServiceFabricClusterPropertiesPtrOutput() BackendServiceFabricClusterPropertiesPtrOutput {
	return o.ToBackendServiceFabricClusterPropertiesPtrOutputWithContext(context.Background())
}

func (o BackendServiceFabricClusterPropertiesOutput) ToBackendServiceFabricClusterPropertiesPtrOutputWithContext(ctx context.Context) BackendServiceFabricClusterPropertiesPtrOutput {
	return o.ApplyT(func(v BackendServiceFabricClusterProperties) *BackendServiceFabricClusterProperties {
		return &v
	}).(BackendServiceFabricClusterPropertiesPtrOutput)
}

// The client certificate thumbprint for the management endpoint.
func (o BackendServiceFabricClusterPropertiesOutput) ClientCertificatethumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v BackendServiceFabricClusterProperties) string { return v.ClientCertificatethumbprint }).(pulumi.StringOutput)
}

// The cluster management endpoint.
func (o BackendServiceFabricClusterPropertiesOutput) ManagementEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackendServiceFabricClusterProperties) []string { return v.ManagementEndpoints }).(pulumi.StringArrayOutput)
}

// Maximum number of retries while attempting resolve the partition.
func (o BackendServiceFabricClusterPropertiesOutput) MaxPartitionResolutionRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendServiceFabricClusterProperties) *int { return v.MaxPartitionResolutionRetries }).(pulumi.IntPtrOutput)
}

// Thumbprints of certificates cluster management service uses for tls communication
func (o BackendServiceFabricClusterPropertiesOutput) ServerCertificateThumbprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackendServiceFabricClusterProperties) []string { return v.ServerCertificateThumbprints }).(pulumi.StringArrayOutput)
}

// Server X509 Certificate Names Collection
func (o BackendServiceFabricClusterPropertiesOutput) ServerX509Names() X509CertificateNameArrayOutput {
	return o.ApplyT(func(v BackendServiceFabricClusterProperties) []X509CertificateName { return v.ServerX509Names }).(X509CertificateNameArrayOutput)
}

type BackendServiceFabricClusterPropertiesPtrOutput struct{ *pulumi.OutputState }

func (BackendServiceFabricClusterPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendServiceFabricClusterProperties)(nil)).Elem()
}

func (o BackendServiceFabricClusterPropertiesPtrOutput) ToBackendServiceFabricClusterPropertiesPtrOutput() BackendServiceFabricClusterPropertiesPtrOutput {
	return o
}

func (o BackendServiceFabricClusterPropertiesPtrOutput) ToBackendServiceFabricClusterPropertiesPtrOutputWithContext(ctx context.Context) BackendServiceFabricClusterPropertiesPtrOutput {
	return o
}

func (o BackendServiceFabricClusterPropertiesPtrOutput) Elem() BackendServiceFabricClusterPropertiesOutput {
	return o.ApplyT(func(v *BackendServiceFabricClusterProperties) BackendServiceFabricClusterProperties { return *v }).(BackendServiceFabricClusterPropertiesOutput)
}

// The client certificate thumbprint for the management endpoint.
func (o BackendServiceFabricClusterPropertiesPtrOutput) ClientCertificatethumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendServiceFabricClusterProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ClientCertificatethumbprint
	}).(pulumi.StringPtrOutput)
}

// The cluster management endpoint.
func (o BackendServiceFabricClusterPropertiesPtrOutput) ManagementEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackendServiceFabricClusterProperties) []string {
		if v == nil {
			return nil
		}
		return v.ManagementEndpoints
	}).(pulumi.StringArrayOutput)
}

// Maximum number of retries while attempting resolve the partition.
func (o BackendServiceFabricClusterPropertiesPtrOutput) MaxPartitionResolutionRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackendServiceFabricClusterProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxPartitionResolutionRetries
	}).(pulumi.IntPtrOutput)
}

// Thumbprints of certificates cluster management service uses for tls communication
func (o BackendServiceFabricClusterPropertiesPtrOutput) ServerCertificateThumbprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackendServiceFabricClusterProperties) []string {
		if v == nil {
			return nil
		}
		return v.ServerCertificateThumbprints
	}).(pulumi.StringArrayOutput)
}

// Server X509 Certificate Names Collection
func (o BackendServiceFabricClusterPropertiesPtrOutput) ServerX509Names() X509CertificateNameArrayOutput {
	return o.ApplyT(func(v *BackendServiceFabricClusterProperties) []X509CertificateName {
		if v == nil {
			return nil
		}
		return v.ServerX509Names
	}).(X509CertificateNameArrayOutput)
}

// Properties of the Service Fabric Type Backend.
type BackendServiceFabricClusterPropertiesResponse struct {
	// The client certificate thumbprint for the management endpoint.
	ClientCertificatethumbprint string `pulumi:"clientCertificatethumbprint"`
	// The cluster management endpoint.
	ManagementEndpoints []string `pulumi:"managementEndpoints"`
	// Maximum number of retries while attempting resolve the partition.
	MaxPartitionResolutionRetries *int `pulumi:"maxPartitionResolutionRetries"`
	// Thumbprints of certificates cluster management service uses for tls communication
	ServerCertificateThumbprints []string `pulumi:"serverCertificateThumbprints"`
	// Server X509 Certificate Names Collection
	ServerX509Names []X509CertificateNameResponse `pulumi:"serverX509Names"`
}

// BackendServiceFabricClusterPropertiesResponseInput is an input type that accepts BackendServiceFabricClusterPropertiesResponseArgs and BackendServiceFabricClusterPropertiesResponseOutput values.
// You can construct a concrete instance of `BackendServiceFabricClusterPropertiesResponseInput` via:
//
//          BackendServiceFabricClusterPropertiesResponseArgs{...}
type BackendServiceFabricClusterPropertiesResponseInput interface {
	pulumi.Input

	ToBackendServiceFabricClusterPropertiesResponseOutput() BackendServiceFabricClusterPropertiesResponseOutput
	ToBackendServiceFabricClusterPropertiesResponseOutputWithContext(context.Context) BackendServiceFabricClusterPropertiesResponseOutput
}

// Properties of the Service Fabric Type Backend.
type BackendServiceFabricClusterPropertiesResponseArgs struct {
	// The client certificate thumbprint for the management endpoint.
	ClientCertificatethumbprint pulumi.StringInput `pulumi:"clientCertificatethumbprint"`
	// The cluster management endpoint.
	ManagementEndpoints pulumi.StringArrayInput `pulumi:"managementEndpoints"`
	// Maximum number of retries while attempting resolve the partition.
	MaxPartitionResolutionRetries pulumi.IntPtrInput `pulumi:"maxPartitionResolutionRetries"`
	// Thumbprints of certificates cluster management service uses for tls communication
	ServerCertificateThumbprints pulumi.StringArrayInput `pulumi:"serverCertificateThumbprints"`
	// Server X509 Certificate Names Collection
	ServerX509Names X509CertificateNameResponseArrayInput `pulumi:"serverX509Names"`
}

func (BackendServiceFabricClusterPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceFabricClusterPropertiesResponse)(nil)).Elem()
}

func (i BackendServiceFabricClusterPropertiesResponseArgs) ToBackendServiceFabricClusterPropertiesResponseOutput() BackendServiceFabricClusterPropertiesResponseOutput {
	return i.ToBackendServiceFabricClusterPropertiesResponseOutputWithContext(context.Background())
}

func (i BackendServiceFabricClusterPropertiesResponseArgs) ToBackendServiceFabricClusterPropertiesResponseOutputWithContext(ctx context.Context) BackendServiceFabricClusterPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServiceFabricClusterPropertiesResponseOutput)
}

func (i BackendServiceFabricClusterPropertiesResponseArgs) ToBackendServiceFabricClusterPropertiesResponsePtrOutput() BackendServiceFabricClusterPropertiesResponsePtrOutput {
	return i.ToBackendServiceFabricClusterPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i BackendServiceFabricClusterPropertiesResponseArgs) ToBackendServiceFabricClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) BackendServiceFabricClusterPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServiceFabricClusterPropertiesResponseOutput).ToBackendServiceFabricClusterPropertiesResponsePtrOutputWithContext(ctx)
}

// BackendServiceFabricClusterPropertiesResponsePtrInput is an input type that accepts BackendServiceFabricClusterPropertiesResponseArgs, BackendServiceFabricClusterPropertiesResponsePtr and BackendServiceFabricClusterPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `BackendServiceFabricClusterPropertiesResponsePtrInput` via:
//
//          BackendServiceFabricClusterPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type BackendServiceFabricClusterPropertiesResponsePtrInput interface {
	pulumi.Input

	ToBackendServiceFabricClusterPropertiesResponsePtrOutput() BackendServiceFabricClusterPropertiesResponsePtrOutput
	ToBackendServiceFabricClusterPropertiesResponsePtrOutputWithContext(context.Context) BackendServiceFabricClusterPropertiesResponsePtrOutput
}

type backendServiceFabricClusterPropertiesResponsePtrType BackendServiceFabricClusterPropertiesResponseArgs

func BackendServiceFabricClusterPropertiesResponsePtr(v *BackendServiceFabricClusterPropertiesResponseArgs) BackendServiceFabricClusterPropertiesResponsePtrInput {
	return (*backendServiceFabricClusterPropertiesResponsePtrType)(v)
}

func (*backendServiceFabricClusterPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendServiceFabricClusterPropertiesResponse)(nil)).Elem()
}

func (i *backendServiceFabricClusterPropertiesResponsePtrType) ToBackendServiceFabricClusterPropertiesResponsePtrOutput() BackendServiceFabricClusterPropertiesResponsePtrOutput {
	return i.ToBackendServiceFabricClusterPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *backendServiceFabricClusterPropertiesResponsePtrType) ToBackendServiceFabricClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) BackendServiceFabricClusterPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServiceFabricClusterPropertiesResponsePtrOutput)
}

// Properties of the Service Fabric Type Backend.
type BackendServiceFabricClusterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BackendServiceFabricClusterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceFabricClusterPropertiesResponse)(nil)).Elem()
}

func (o BackendServiceFabricClusterPropertiesResponseOutput) ToBackendServiceFabricClusterPropertiesResponseOutput() BackendServiceFabricClusterPropertiesResponseOutput {
	return o
}

func (o BackendServiceFabricClusterPropertiesResponseOutput) ToBackendServiceFabricClusterPropertiesResponseOutputWithContext(ctx context.Context) BackendServiceFabricClusterPropertiesResponseOutput {
	return o
}

func (o BackendServiceFabricClusterPropertiesResponseOutput) ToBackendServiceFabricClusterPropertiesResponsePtrOutput() BackendServiceFabricClusterPropertiesResponsePtrOutput {
	return o.ToBackendServiceFabricClusterPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o BackendServiceFabricClusterPropertiesResponseOutput) ToBackendServiceFabricClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) BackendServiceFabricClusterPropertiesResponsePtrOutput {
	return o.ApplyT(func(v BackendServiceFabricClusterPropertiesResponse) *BackendServiceFabricClusterPropertiesResponse {
		return &v
	}).(BackendServiceFabricClusterPropertiesResponsePtrOutput)
}

// The client certificate thumbprint for the management endpoint.
func (o BackendServiceFabricClusterPropertiesResponseOutput) ClientCertificatethumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v BackendServiceFabricClusterPropertiesResponse) string { return v.ClientCertificatethumbprint }).(pulumi.StringOutput)
}

// The cluster management endpoint.
func (o BackendServiceFabricClusterPropertiesResponseOutput) ManagementEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackendServiceFabricClusterPropertiesResponse) []string { return v.ManagementEndpoints }).(pulumi.StringArrayOutput)
}

// Maximum number of retries while attempting resolve the partition.
func (o BackendServiceFabricClusterPropertiesResponseOutput) MaxPartitionResolutionRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendServiceFabricClusterPropertiesResponse) *int { return v.MaxPartitionResolutionRetries }).(pulumi.IntPtrOutput)
}

// Thumbprints of certificates cluster management service uses for tls communication
func (o BackendServiceFabricClusterPropertiesResponseOutput) ServerCertificateThumbprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackendServiceFabricClusterPropertiesResponse) []string { return v.ServerCertificateThumbprints }).(pulumi.StringArrayOutput)
}

// Server X509 Certificate Names Collection
func (o BackendServiceFabricClusterPropertiesResponseOutput) ServerX509Names() X509CertificateNameResponseArrayOutput {
	return o.ApplyT(func(v BackendServiceFabricClusterPropertiesResponse) []X509CertificateNameResponse {
		return v.ServerX509Names
	}).(X509CertificateNameResponseArrayOutput)
}

type BackendServiceFabricClusterPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (BackendServiceFabricClusterPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendServiceFabricClusterPropertiesResponse)(nil)).Elem()
}

func (o BackendServiceFabricClusterPropertiesResponsePtrOutput) ToBackendServiceFabricClusterPropertiesResponsePtrOutput() BackendServiceFabricClusterPropertiesResponsePtrOutput {
	return o
}

func (o BackendServiceFabricClusterPropertiesResponsePtrOutput) ToBackendServiceFabricClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) BackendServiceFabricClusterPropertiesResponsePtrOutput {
	return o
}

func (o BackendServiceFabricClusterPropertiesResponsePtrOutput) Elem() BackendServiceFabricClusterPropertiesResponseOutput {
	return o.ApplyT(func(v *BackendServiceFabricClusterPropertiesResponse) BackendServiceFabricClusterPropertiesResponse {
		return *v
	}).(BackendServiceFabricClusterPropertiesResponseOutput)
}

// The client certificate thumbprint for the management endpoint.
func (o BackendServiceFabricClusterPropertiesResponsePtrOutput) ClientCertificatethumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendServiceFabricClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClientCertificatethumbprint
	}).(pulumi.StringPtrOutput)
}

// The cluster management endpoint.
func (o BackendServiceFabricClusterPropertiesResponsePtrOutput) ManagementEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackendServiceFabricClusterPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.ManagementEndpoints
	}).(pulumi.StringArrayOutput)
}

// Maximum number of retries while attempting resolve the partition.
func (o BackendServiceFabricClusterPropertiesResponsePtrOutput) MaxPartitionResolutionRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackendServiceFabricClusterPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxPartitionResolutionRetries
	}).(pulumi.IntPtrOutput)
}

// Thumbprints of certificates cluster management service uses for tls communication
func (o BackendServiceFabricClusterPropertiesResponsePtrOutput) ServerCertificateThumbprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackendServiceFabricClusterPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.ServerCertificateThumbprints
	}).(pulumi.StringArrayOutput)
}

// Server X509 Certificate Names Collection
func (o BackendServiceFabricClusterPropertiesResponsePtrOutput) ServerX509Names() X509CertificateNameResponseArrayOutput {
	return o.ApplyT(func(v *BackendServiceFabricClusterPropertiesResponse) []X509CertificateNameResponse {
		if v == nil {
			return nil
		}
		return v.ServerX509Names
	}).(X509CertificateNameResponseArrayOutput)
}

// Properties controlling TLS Certificate Validation.
type BackendTlsProperties struct {
	// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host.
	ValidateCertificateChain *bool `pulumi:"validateCertificateChain"`
	// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host.
	ValidateCertificateName *bool `pulumi:"validateCertificateName"`
}

// BackendTlsPropertiesInput is an input type that accepts BackendTlsPropertiesArgs and BackendTlsPropertiesOutput values.
// You can construct a concrete instance of `BackendTlsPropertiesInput` via:
//
//          BackendTlsPropertiesArgs{...}
type BackendTlsPropertiesInput interface {
	pulumi.Input

	ToBackendTlsPropertiesOutput() BackendTlsPropertiesOutput
	ToBackendTlsPropertiesOutputWithContext(context.Context) BackendTlsPropertiesOutput
}

// Properties controlling TLS Certificate Validation.
type BackendTlsPropertiesArgs struct {
	// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host.
	ValidateCertificateChain pulumi.BoolPtrInput `pulumi:"validateCertificateChain"`
	// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host.
	ValidateCertificateName pulumi.BoolPtrInput `pulumi:"validateCertificateName"`
}

func (BackendTlsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendTlsProperties)(nil)).Elem()
}

func (i BackendTlsPropertiesArgs) ToBackendTlsPropertiesOutput() BackendTlsPropertiesOutput {
	return i.ToBackendTlsPropertiesOutputWithContext(context.Background())
}

func (i BackendTlsPropertiesArgs) ToBackendTlsPropertiesOutputWithContext(ctx context.Context) BackendTlsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendTlsPropertiesOutput)
}

func (i BackendTlsPropertiesArgs) ToBackendTlsPropertiesPtrOutput() BackendTlsPropertiesPtrOutput {
	return i.ToBackendTlsPropertiesPtrOutputWithContext(context.Background())
}

func (i BackendTlsPropertiesArgs) ToBackendTlsPropertiesPtrOutputWithContext(ctx context.Context) BackendTlsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendTlsPropertiesOutput).ToBackendTlsPropertiesPtrOutputWithContext(ctx)
}

// BackendTlsPropertiesPtrInput is an input type that accepts BackendTlsPropertiesArgs, BackendTlsPropertiesPtr and BackendTlsPropertiesPtrOutput values.
// You can construct a concrete instance of `BackendTlsPropertiesPtrInput` via:
//
//          BackendTlsPropertiesArgs{...}
//
//  or:
//
//          nil
type BackendTlsPropertiesPtrInput interface {
	pulumi.Input

	ToBackendTlsPropertiesPtrOutput() BackendTlsPropertiesPtrOutput
	ToBackendTlsPropertiesPtrOutputWithContext(context.Context) BackendTlsPropertiesPtrOutput
}

type backendTlsPropertiesPtrType BackendTlsPropertiesArgs

func BackendTlsPropertiesPtr(v *BackendTlsPropertiesArgs) BackendTlsPropertiesPtrInput {
	return (*backendTlsPropertiesPtrType)(v)
}

func (*backendTlsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendTlsProperties)(nil)).Elem()
}

func (i *backendTlsPropertiesPtrType) ToBackendTlsPropertiesPtrOutput() BackendTlsPropertiesPtrOutput {
	return i.ToBackendTlsPropertiesPtrOutputWithContext(context.Background())
}

func (i *backendTlsPropertiesPtrType) ToBackendTlsPropertiesPtrOutputWithContext(ctx context.Context) BackendTlsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendTlsPropertiesPtrOutput)
}

// Properties controlling TLS Certificate Validation.
type BackendTlsPropertiesOutput struct{ *pulumi.OutputState }

func (BackendTlsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendTlsProperties)(nil)).Elem()
}

func (o BackendTlsPropertiesOutput) ToBackendTlsPropertiesOutput() BackendTlsPropertiesOutput {
	return o
}

func (o BackendTlsPropertiesOutput) ToBackendTlsPropertiesOutputWithContext(ctx context.Context) BackendTlsPropertiesOutput {
	return o
}

func (o BackendTlsPropertiesOutput) ToBackendTlsPropertiesPtrOutput() BackendTlsPropertiesPtrOutput {
	return o.ToBackendTlsPropertiesPtrOutputWithContext(context.Background())
}

func (o BackendTlsPropertiesOutput) ToBackendTlsPropertiesPtrOutputWithContext(ctx context.Context) BackendTlsPropertiesPtrOutput {
	return o.ApplyT(func(v BackendTlsProperties) *BackendTlsProperties {
		return &v
	}).(BackendTlsPropertiesPtrOutput)
}

// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host.
func (o BackendTlsPropertiesOutput) ValidateCertificateChain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackendTlsProperties) *bool { return v.ValidateCertificateChain }).(pulumi.BoolPtrOutput)
}

// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host.
func (o BackendTlsPropertiesOutput) ValidateCertificateName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackendTlsProperties) *bool { return v.ValidateCertificateName }).(pulumi.BoolPtrOutput)
}

type BackendTlsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (BackendTlsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendTlsProperties)(nil)).Elem()
}

func (o BackendTlsPropertiesPtrOutput) ToBackendTlsPropertiesPtrOutput() BackendTlsPropertiesPtrOutput {
	return o
}

func (o BackendTlsPropertiesPtrOutput) ToBackendTlsPropertiesPtrOutputWithContext(ctx context.Context) BackendTlsPropertiesPtrOutput {
	return o
}

func (o BackendTlsPropertiesPtrOutput) Elem() BackendTlsPropertiesOutput {
	return o.ApplyT(func(v *BackendTlsProperties) BackendTlsProperties { return *v }).(BackendTlsPropertiesOutput)
}

// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host.
func (o BackendTlsPropertiesPtrOutput) ValidateCertificateChain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackendTlsProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ValidateCertificateChain
	}).(pulumi.BoolPtrOutput)
}

// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host.
func (o BackendTlsPropertiesPtrOutput) ValidateCertificateName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackendTlsProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ValidateCertificateName
	}).(pulumi.BoolPtrOutput)
}

// Properties controlling TLS Certificate Validation.
type BackendTlsPropertiesResponse struct {
	// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host.
	ValidateCertificateChain *bool `pulumi:"validateCertificateChain"`
	// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host.
	ValidateCertificateName *bool `pulumi:"validateCertificateName"`
}

// BackendTlsPropertiesResponseInput is an input type that accepts BackendTlsPropertiesResponseArgs and BackendTlsPropertiesResponseOutput values.
// You can construct a concrete instance of `BackendTlsPropertiesResponseInput` via:
//
//          BackendTlsPropertiesResponseArgs{...}
type BackendTlsPropertiesResponseInput interface {
	pulumi.Input

	ToBackendTlsPropertiesResponseOutput() BackendTlsPropertiesResponseOutput
	ToBackendTlsPropertiesResponseOutputWithContext(context.Context) BackendTlsPropertiesResponseOutput
}

// Properties controlling TLS Certificate Validation.
type BackendTlsPropertiesResponseArgs struct {
	// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host.
	ValidateCertificateChain pulumi.BoolPtrInput `pulumi:"validateCertificateChain"`
	// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host.
	ValidateCertificateName pulumi.BoolPtrInput `pulumi:"validateCertificateName"`
}

func (BackendTlsPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendTlsPropertiesResponse)(nil)).Elem()
}

func (i BackendTlsPropertiesResponseArgs) ToBackendTlsPropertiesResponseOutput() BackendTlsPropertiesResponseOutput {
	return i.ToBackendTlsPropertiesResponseOutputWithContext(context.Background())
}

func (i BackendTlsPropertiesResponseArgs) ToBackendTlsPropertiesResponseOutputWithContext(ctx context.Context) BackendTlsPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendTlsPropertiesResponseOutput)
}

func (i BackendTlsPropertiesResponseArgs) ToBackendTlsPropertiesResponsePtrOutput() BackendTlsPropertiesResponsePtrOutput {
	return i.ToBackendTlsPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i BackendTlsPropertiesResponseArgs) ToBackendTlsPropertiesResponsePtrOutputWithContext(ctx context.Context) BackendTlsPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendTlsPropertiesResponseOutput).ToBackendTlsPropertiesResponsePtrOutputWithContext(ctx)
}

// BackendTlsPropertiesResponsePtrInput is an input type that accepts BackendTlsPropertiesResponseArgs, BackendTlsPropertiesResponsePtr and BackendTlsPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `BackendTlsPropertiesResponsePtrInput` via:
//
//          BackendTlsPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type BackendTlsPropertiesResponsePtrInput interface {
	pulumi.Input

	ToBackendTlsPropertiesResponsePtrOutput() BackendTlsPropertiesResponsePtrOutput
	ToBackendTlsPropertiesResponsePtrOutputWithContext(context.Context) BackendTlsPropertiesResponsePtrOutput
}

type backendTlsPropertiesResponsePtrType BackendTlsPropertiesResponseArgs

func BackendTlsPropertiesResponsePtr(v *BackendTlsPropertiesResponseArgs) BackendTlsPropertiesResponsePtrInput {
	return (*backendTlsPropertiesResponsePtrType)(v)
}

func (*backendTlsPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendTlsPropertiesResponse)(nil)).Elem()
}

func (i *backendTlsPropertiesResponsePtrType) ToBackendTlsPropertiesResponsePtrOutput() BackendTlsPropertiesResponsePtrOutput {
	return i.ToBackendTlsPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *backendTlsPropertiesResponsePtrType) ToBackendTlsPropertiesResponsePtrOutputWithContext(ctx context.Context) BackendTlsPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendTlsPropertiesResponsePtrOutput)
}

// Properties controlling TLS Certificate Validation.
type BackendTlsPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BackendTlsPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendTlsPropertiesResponse)(nil)).Elem()
}

func (o BackendTlsPropertiesResponseOutput) ToBackendTlsPropertiesResponseOutput() BackendTlsPropertiesResponseOutput {
	return o
}

func (o BackendTlsPropertiesResponseOutput) ToBackendTlsPropertiesResponseOutputWithContext(ctx context.Context) BackendTlsPropertiesResponseOutput {
	return o
}

func (o BackendTlsPropertiesResponseOutput) ToBackendTlsPropertiesResponsePtrOutput() BackendTlsPropertiesResponsePtrOutput {
	return o.ToBackendTlsPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o BackendTlsPropertiesResponseOutput) ToBackendTlsPropertiesResponsePtrOutputWithContext(ctx context.Context) BackendTlsPropertiesResponsePtrOutput {
	return o.ApplyT(func(v BackendTlsPropertiesResponse) *BackendTlsPropertiesResponse {
		return &v
	}).(BackendTlsPropertiesResponsePtrOutput)
}

// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host.
func (o BackendTlsPropertiesResponseOutput) ValidateCertificateChain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackendTlsPropertiesResponse) *bool { return v.ValidateCertificateChain }).(pulumi.BoolPtrOutput)
}

// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host.
func (o BackendTlsPropertiesResponseOutput) ValidateCertificateName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackendTlsPropertiesResponse) *bool { return v.ValidateCertificateName }).(pulumi.BoolPtrOutput)
}

type BackendTlsPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (BackendTlsPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendTlsPropertiesResponse)(nil)).Elem()
}

func (o BackendTlsPropertiesResponsePtrOutput) ToBackendTlsPropertiesResponsePtrOutput() BackendTlsPropertiesResponsePtrOutput {
	return o
}

func (o BackendTlsPropertiesResponsePtrOutput) ToBackendTlsPropertiesResponsePtrOutputWithContext(ctx context.Context) BackendTlsPropertiesResponsePtrOutput {
	return o
}

func (o BackendTlsPropertiesResponsePtrOutput) Elem() BackendTlsPropertiesResponseOutput {
	return o.ApplyT(func(v *BackendTlsPropertiesResponse) BackendTlsPropertiesResponse { return *v }).(BackendTlsPropertiesResponseOutput)
}

// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host.
func (o BackendTlsPropertiesResponsePtrOutput) ValidateCertificateChain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackendTlsPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ValidateCertificateChain
	}).(pulumi.BoolPtrOutput)
}

// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host.
func (o BackendTlsPropertiesResponsePtrOutput) ValidateCertificateName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackendTlsPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ValidateCertificateName
	}).(pulumi.BoolPtrOutput)
}

// Body logging settings.
type BodyDiagnosticSettings struct {
	// Number of request body bytes to log.
	Bytes *int `pulumi:"bytes"`
}

// BodyDiagnosticSettingsInput is an input type that accepts BodyDiagnosticSettingsArgs and BodyDiagnosticSettingsOutput values.
// You can construct a concrete instance of `BodyDiagnosticSettingsInput` via:
//
//          BodyDiagnosticSettingsArgs{...}
type BodyDiagnosticSettingsInput interface {
	pulumi.Input

	ToBodyDiagnosticSettingsOutput() BodyDiagnosticSettingsOutput
	ToBodyDiagnosticSettingsOutputWithContext(context.Context) BodyDiagnosticSettingsOutput
}

// Body logging settings.
type BodyDiagnosticSettingsArgs struct {
	// Number of request body bytes to log.
	Bytes pulumi.IntPtrInput `pulumi:"bytes"`
}

func (BodyDiagnosticSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BodyDiagnosticSettings)(nil)).Elem()
}

func (i BodyDiagnosticSettingsArgs) ToBodyDiagnosticSettingsOutput() BodyDiagnosticSettingsOutput {
	return i.ToBodyDiagnosticSettingsOutputWithContext(context.Background())
}

func (i BodyDiagnosticSettingsArgs) ToBodyDiagnosticSettingsOutputWithContext(ctx context.Context) BodyDiagnosticSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BodyDiagnosticSettingsOutput)
}

func (i BodyDiagnosticSettingsArgs) ToBodyDiagnosticSettingsPtrOutput() BodyDiagnosticSettingsPtrOutput {
	return i.ToBodyDiagnosticSettingsPtrOutputWithContext(context.Background())
}

func (i BodyDiagnosticSettingsArgs) ToBodyDiagnosticSettingsPtrOutputWithContext(ctx context.Context) BodyDiagnosticSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BodyDiagnosticSettingsOutput).ToBodyDiagnosticSettingsPtrOutputWithContext(ctx)
}

// BodyDiagnosticSettingsPtrInput is an input type that accepts BodyDiagnosticSettingsArgs, BodyDiagnosticSettingsPtr and BodyDiagnosticSettingsPtrOutput values.
// You can construct a concrete instance of `BodyDiagnosticSettingsPtrInput` via:
//
//          BodyDiagnosticSettingsArgs{...}
//
//  or:
//
//          nil
type BodyDiagnosticSettingsPtrInput interface {
	pulumi.Input

	ToBodyDiagnosticSettingsPtrOutput() BodyDiagnosticSettingsPtrOutput
	ToBodyDiagnosticSettingsPtrOutputWithContext(context.Context) BodyDiagnosticSettingsPtrOutput
}

type bodyDiagnosticSettingsPtrType BodyDiagnosticSettingsArgs

func BodyDiagnosticSettingsPtr(v *BodyDiagnosticSettingsArgs) BodyDiagnosticSettingsPtrInput {
	return (*bodyDiagnosticSettingsPtrType)(v)
}

func (*bodyDiagnosticSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BodyDiagnosticSettings)(nil)).Elem()
}

func (i *bodyDiagnosticSettingsPtrType) ToBodyDiagnosticSettingsPtrOutput() BodyDiagnosticSettingsPtrOutput {
	return i.ToBodyDiagnosticSettingsPtrOutputWithContext(context.Background())
}

func (i *bodyDiagnosticSettingsPtrType) ToBodyDiagnosticSettingsPtrOutputWithContext(ctx context.Context) BodyDiagnosticSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BodyDiagnosticSettingsPtrOutput)
}

// Body logging settings.
type BodyDiagnosticSettingsOutput struct{ *pulumi.OutputState }

func (BodyDiagnosticSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BodyDiagnosticSettings)(nil)).Elem()
}

func (o BodyDiagnosticSettingsOutput) ToBodyDiagnosticSettingsOutput() BodyDiagnosticSettingsOutput {
	return o
}

func (o BodyDiagnosticSettingsOutput) ToBodyDiagnosticSettingsOutputWithContext(ctx context.Context) BodyDiagnosticSettingsOutput {
	return o
}

func (o BodyDiagnosticSettingsOutput) ToBodyDiagnosticSettingsPtrOutput() BodyDiagnosticSettingsPtrOutput {
	return o.ToBodyDiagnosticSettingsPtrOutputWithContext(context.Background())
}

func (o BodyDiagnosticSettingsOutput) ToBodyDiagnosticSettingsPtrOutputWithContext(ctx context.Context) BodyDiagnosticSettingsPtrOutput {
	return o.ApplyT(func(v BodyDiagnosticSettings) *BodyDiagnosticSettings {
		return &v
	}).(BodyDiagnosticSettingsPtrOutput)
}

// Number of request body bytes to log.
func (o BodyDiagnosticSettingsOutput) Bytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BodyDiagnosticSettings) *int { return v.Bytes }).(pulumi.IntPtrOutput)
}

type BodyDiagnosticSettingsPtrOutput struct{ *pulumi.OutputState }

func (BodyDiagnosticSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BodyDiagnosticSettings)(nil)).Elem()
}

func (o BodyDiagnosticSettingsPtrOutput) ToBodyDiagnosticSettingsPtrOutput() BodyDiagnosticSettingsPtrOutput {
	return o
}

func (o BodyDiagnosticSettingsPtrOutput) ToBodyDiagnosticSettingsPtrOutputWithContext(ctx context.Context) BodyDiagnosticSettingsPtrOutput {
	return o
}

func (o BodyDiagnosticSettingsPtrOutput) Elem() BodyDiagnosticSettingsOutput {
	return o.ApplyT(func(v *BodyDiagnosticSettings) BodyDiagnosticSettings { return *v }).(BodyDiagnosticSettingsOutput)
}

// Number of request body bytes to log.
func (o BodyDiagnosticSettingsPtrOutput) Bytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BodyDiagnosticSettings) *int {
		if v == nil {
			return nil
		}
		return v.Bytes
	}).(pulumi.IntPtrOutput)
}

// Body logging settings.
type BodyDiagnosticSettingsResponse struct {
	// Number of request body bytes to log.
	Bytes *int `pulumi:"bytes"`
}

// BodyDiagnosticSettingsResponseInput is an input type that accepts BodyDiagnosticSettingsResponseArgs and BodyDiagnosticSettingsResponseOutput values.
// You can construct a concrete instance of `BodyDiagnosticSettingsResponseInput` via:
//
//          BodyDiagnosticSettingsResponseArgs{...}
type BodyDiagnosticSettingsResponseInput interface {
	pulumi.Input

	ToBodyDiagnosticSettingsResponseOutput() BodyDiagnosticSettingsResponseOutput
	ToBodyDiagnosticSettingsResponseOutputWithContext(context.Context) BodyDiagnosticSettingsResponseOutput
}

// Body logging settings.
type BodyDiagnosticSettingsResponseArgs struct {
	// Number of request body bytes to log.
	Bytes pulumi.IntPtrInput `pulumi:"bytes"`
}

func (BodyDiagnosticSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BodyDiagnosticSettingsResponse)(nil)).Elem()
}

func (i BodyDiagnosticSettingsResponseArgs) ToBodyDiagnosticSettingsResponseOutput() BodyDiagnosticSettingsResponseOutput {
	return i.ToBodyDiagnosticSettingsResponseOutputWithContext(context.Background())
}

func (i BodyDiagnosticSettingsResponseArgs) ToBodyDiagnosticSettingsResponseOutputWithContext(ctx context.Context) BodyDiagnosticSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BodyDiagnosticSettingsResponseOutput)
}

func (i BodyDiagnosticSettingsResponseArgs) ToBodyDiagnosticSettingsResponsePtrOutput() BodyDiagnosticSettingsResponsePtrOutput {
	return i.ToBodyDiagnosticSettingsResponsePtrOutputWithContext(context.Background())
}

func (i BodyDiagnosticSettingsResponseArgs) ToBodyDiagnosticSettingsResponsePtrOutputWithContext(ctx context.Context) BodyDiagnosticSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BodyDiagnosticSettingsResponseOutput).ToBodyDiagnosticSettingsResponsePtrOutputWithContext(ctx)
}

// BodyDiagnosticSettingsResponsePtrInput is an input type that accepts BodyDiagnosticSettingsResponseArgs, BodyDiagnosticSettingsResponsePtr and BodyDiagnosticSettingsResponsePtrOutput values.
// You can construct a concrete instance of `BodyDiagnosticSettingsResponsePtrInput` via:
//
//          BodyDiagnosticSettingsResponseArgs{...}
//
//  or:
//
//          nil
type BodyDiagnosticSettingsResponsePtrInput interface {
	pulumi.Input

	ToBodyDiagnosticSettingsResponsePtrOutput() BodyDiagnosticSettingsResponsePtrOutput
	ToBodyDiagnosticSettingsResponsePtrOutputWithContext(context.Context) BodyDiagnosticSettingsResponsePtrOutput
}

type bodyDiagnosticSettingsResponsePtrType BodyDiagnosticSettingsResponseArgs

func BodyDiagnosticSettingsResponsePtr(v *BodyDiagnosticSettingsResponseArgs) BodyDiagnosticSettingsResponsePtrInput {
	return (*bodyDiagnosticSettingsResponsePtrType)(v)
}

func (*bodyDiagnosticSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BodyDiagnosticSettingsResponse)(nil)).Elem()
}

func (i *bodyDiagnosticSettingsResponsePtrType) ToBodyDiagnosticSettingsResponsePtrOutput() BodyDiagnosticSettingsResponsePtrOutput {
	return i.ToBodyDiagnosticSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *bodyDiagnosticSettingsResponsePtrType) ToBodyDiagnosticSettingsResponsePtrOutputWithContext(ctx context.Context) BodyDiagnosticSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BodyDiagnosticSettingsResponsePtrOutput)
}

// Body logging settings.
type BodyDiagnosticSettingsResponseOutput struct{ *pulumi.OutputState }

func (BodyDiagnosticSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BodyDiagnosticSettingsResponse)(nil)).Elem()
}

func (o BodyDiagnosticSettingsResponseOutput) ToBodyDiagnosticSettingsResponseOutput() BodyDiagnosticSettingsResponseOutput {
	return o
}

func (o BodyDiagnosticSettingsResponseOutput) ToBodyDiagnosticSettingsResponseOutputWithContext(ctx context.Context) BodyDiagnosticSettingsResponseOutput {
	return o
}

func (o BodyDiagnosticSettingsResponseOutput) ToBodyDiagnosticSettingsResponsePtrOutput() BodyDiagnosticSettingsResponsePtrOutput {
	return o.ToBodyDiagnosticSettingsResponsePtrOutputWithContext(context.Background())
}

func (o BodyDiagnosticSettingsResponseOutput) ToBodyDiagnosticSettingsResponsePtrOutputWithContext(ctx context.Context) BodyDiagnosticSettingsResponsePtrOutput {
	return o.ApplyT(func(v BodyDiagnosticSettingsResponse) *BodyDiagnosticSettingsResponse {
		return &v
	}).(BodyDiagnosticSettingsResponsePtrOutput)
}

// Number of request body bytes to log.
func (o BodyDiagnosticSettingsResponseOutput) Bytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BodyDiagnosticSettingsResponse) *int { return v.Bytes }).(pulumi.IntPtrOutput)
}

type BodyDiagnosticSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (BodyDiagnosticSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BodyDiagnosticSettingsResponse)(nil)).Elem()
}

func (o BodyDiagnosticSettingsResponsePtrOutput) ToBodyDiagnosticSettingsResponsePtrOutput() BodyDiagnosticSettingsResponsePtrOutput {
	return o
}

func (o BodyDiagnosticSettingsResponsePtrOutput) ToBodyDiagnosticSettingsResponsePtrOutputWithContext(ctx context.Context) BodyDiagnosticSettingsResponsePtrOutput {
	return o
}

func (o BodyDiagnosticSettingsResponsePtrOutput) Elem() BodyDiagnosticSettingsResponseOutput {
	return o.ApplyT(func(v *BodyDiagnosticSettingsResponse) BodyDiagnosticSettingsResponse { return *v }).(BodyDiagnosticSettingsResponseOutput)
}

// Number of request body bytes to log.
func (o BodyDiagnosticSettingsResponsePtrOutput) Bytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BodyDiagnosticSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Bytes
	}).(pulumi.IntPtrOutput)
}

// Cache details.
type CacheType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Cache properties details.
	Properties CacheContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// CacheTypeInput is an input type that accepts CacheTypeArgs and CacheTypeOutput values.
// You can construct a concrete instance of `CacheTypeInput` via:
//
//          CacheTypeArgs{...}
type CacheTypeInput interface {
	pulumi.Input

	ToCacheTypeOutput() CacheTypeOutput
	ToCacheTypeOutputWithContext(context.Context) CacheTypeOutput
}

// Cache details.
type CacheTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Cache properties details.
	Properties CacheContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CacheTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheType)(nil)).Elem()
}

func (i CacheTypeArgs) ToCacheTypeOutput() CacheTypeOutput {
	return i.ToCacheTypeOutputWithContext(context.Background())
}

func (i CacheTypeArgs) ToCacheTypeOutputWithContext(ctx context.Context) CacheTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheTypeOutput)
}

// Cache details.
type CacheTypeOutput struct{ *pulumi.OutputState }

func (CacheTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheType)(nil)).Elem()
}

func (o CacheTypeOutput) ToCacheTypeOutput() CacheTypeOutput {
	return o
}

func (o CacheTypeOutput) ToCacheTypeOutputWithContext(ctx context.Context) CacheTypeOutput {
	return o
}

// Resource name.
func (o CacheTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CacheType) string { return v.Name }).(pulumi.StringOutput)
}

// Cache properties details.
func (o CacheTypeOutput) Properties() CacheContractPropertiesResponseOutput {
	return o.ApplyT(func(v CacheType) CacheContractPropertiesResponse { return v.Properties }).(CacheContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o CacheTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CacheType) string { return v.Type }).(pulumi.StringOutput)
}

// Properties of the Cache contract.
type CacheContractPropertiesResponse struct {
	// Runtime connection string to cache
	ConnectionString string `pulumi:"connectionString"`
	// Cache description
	Description *string `pulumi:"description"`
	// Original uri of entity in external system cache points to
	ResourceId *string `pulumi:"resourceId"`
}

// CacheContractPropertiesResponseInput is an input type that accepts CacheContractPropertiesResponseArgs and CacheContractPropertiesResponseOutput values.
// You can construct a concrete instance of `CacheContractPropertiesResponseInput` via:
//
//          CacheContractPropertiesResponseArgs{...}
type CacheContractPropertiesResponseInput interface {
	pulumi.Input

	ToCacheContractPropertiesResponseOutput() CacheContractPropertiesResponseOutput
	ToCacheContractPropertiesResponseOutputWithContext(context.Context) CacheContractPropertiesResponseOutput
}

// Properties of the Cache contract.
type CacheContractPropertiesResponseArgs struct {
	// Runtime connection string to cache
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// Cache description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Original uri of entity in external system cache points to
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (CacheContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheContractPropertiesResponse)(nil)).Elem()
}

func (i CacheContractPropertiesResponseArgs) ToCacheContractPropertiesResponseOutput() CacheContractPropertiesResponseOutput {
	return i.ToCacheContractPropertiesResponseOutputWithContext(context.Background())
}

func (i CacheContractPropertiesResponseArgs) ToCacheContractPropertiesResponseOutputWithContext(ctx context.Context) CacheContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheContractPropertiesResponseOutput)
}

func (i CacheContractPropertiesResponseArgs) ToCacheContractPropertiesResponsePtrOutput() CacheContractPropertiesResponsePtrOutput {
	return i.ToCacheContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i CacheContractPropertiesResponseArgs) ToCacheContractPropertiesResponsePtrOutputWithContext(ctx context.Context) CacheContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheContractPropertiesResponseOutput).ToCacheContractPropertiesResponsePtrOutputWithContext(ctx)
}

// CacheContractPropertiesResponsePtrInput is an input type that accepts CacheContractPropertiesResponseArgs, CacheContractPropertiesResponsePtr and CacheContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `CacheContractPropertiesResponsePtrInput` via:
//
//          CacheContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type CacheContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToCacheContractPropertiesResponsePtrOutput() CacheContractPropertiesResponsePtrOutput
	ToCacheContractPropertiesResponsePtrOutputWithContext(context.Context) CacheContractPropertiesResponsePtrOutput
}

type cacheContractPropertiesResponsePtrType CacheContractPropertiesResponseArgs

func CacheContractPropertiesResponsePtr(v *CacheContractPropertiesResponseArgs) CacheContractPropertiesResponsePtrInput {
	return (*cacheContractPropertiesResponsePtrType)(v)
}

func (*cacheContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheContractPropertiesResponse)(nil)).Elem()
}

func (i *cacheContractPropertiesResponsePtrType) ToCacheContractPropertiesResponsePtrOutput() CacheContractPropertiesResponsePtrOutput {
	return i.ToCacheContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *cacheContractPropertiesResponsePtrType) ToCacheContractPropertiesResponsePtrOutputWithContext(ctx context.Context) CacheContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheContractPropertiesResponsePtrOutput)
}

// Properties of the Cache contract.
type CacheContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CacheContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheContractPropertiesResponse)(nil)).Elem()
}

func (o CacheContractPropertiesResponseOutput) ToCacheContractPropertiesResponseOutput() CacheContractPropertiesResponseOutput {
	return o
}

func (o CacheContractPropertiesResponseOutput) ToCacheContractPropertiesResponseOutputWithContext(ctx context.Context) CacheContractPropertiesResponseOutput {
	return o
}

func (o CacheContractPropertiesResponseOutput) ToCacheContractPropertiesResponsePtrOutput() CacheContractPropertiesResponsePtrOutput {
	return o.ToCacheContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o CacheContractPropertiesResponseOutput) ToCacheContractPropertiesResponsePtrOutputWithContext(ctx context.Context) CacheContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v CacheContractPropertiesResponse) *CacheContractPropertiesResponse {
		return &v
	}).(CacheContractPropertiesResponsePtrOutput)
}

// Runtime connection string to cache
func (o CacheContractPropertiesResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v CacheContractPropertiesResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// Cache description
func (o CacheContractPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheContractPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Original uri of entity in external system cache points to
func (o CacheContractPropertiesResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheContractPropertiesResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type CacheContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CacheContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheContractPropertiesResponse)(nil)).Elem()
}

func (o CacheContractPropertiesResponsePtrOutput) ToCacheContractPropertiesResponsePtrOutput() CacheContractPropertiesResponsePtrOutput {
	return o
}

func (o CacheContractPropertiesResponsePtrOutput) ToCacheContractPropertiesResponsePtrOutputWithContext(ctx context.Context) CacheContractPropertiesResponsePtrOutput {
	return o
}

func (o CacheContractPropertiesResponsePtrOutput) Elem() CacheContractPropertiesResponseOutput {
	return o.ApplyT(func(v *CacheContractPropertiesResponse) CacheContractPropertiesResponse { return *v }).(CacheContractPropertiesResponseOutput)
}

// Runtime connection string to cache
func (o CacheContractPropertiesResponsePtrOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectionString
	}).(pulumi.StringPtrOutput)
}

// Cache description
func (o CacheContractPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Original uri of entity in external system cache points to
func (o CacheContractPropertiesResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Certificate details.
type CertificateType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Certificate properties details.
	Properties CertificateContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// CertificateTypeInput is an input type that accepts CertificateTypeArgs and CertificateTypeOutput values.
// You can construct a concrete instance of `CertificateTypeInput` via:
//
//          CertificateTypeArgs{...}
type CertificateTypeInput interface {
	pulumi.Input

	ToCertificateTypeOutput() CertificateTypeOutput
	ToCertificateTypeOutputWithContext(context.Context) CertificateTypeOutput
}

// Certificate details.
type CertificateTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Certificate properties details.
	Properties CertificateContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CertificateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateType)(nil)).Elem()
}

func (i CertificateTypeArgs) ToCertificateTypeOutput() CertificateTypeOutput {
	return i.ToCertificateTypeOutputWithContext(context.Background())
}

func (i CertificateTypeArgs) ToCertificateTypeOutputWithContext(ctx context.Context) CertificateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTypeOutput)
}

// Certificate details.
type CertificateTypeOutput struct{ *pulumi.OutputState }

func (CertificateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateType)(nil)).Elem()
}

func (o CertificateTypeOutput) ToCertificateTypeOutput() CertificateTypeOutput {
	return o
}

func (o CertificateTypeOutput) ToCertificateTypeOutputWithContext(ctx context.Context) CertificateTypeOutput {
	return o
}

// Resource name.
func (o CertificateTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateType) string { return v.Name }).(pulumi.StringOutput)
}

// Certificate properties details.
func (o CertificateTypeOutput) Properties() CertificateContractPropertiesResponseOutput {
	return o.ApplyT(func(v CertificateType) CertificateContractPropertiesResponse { return v.Properties }).(CertificateContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o CertificateTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateType) string { return v.Type }).(pulumi.StringOutput)
}

// Certificate configuration which consist of non-trusted intermediates and root certificates.
type CertificateConfiguration struct {
	// Certificate information.
	Certificate *CertificateInformation `pulumi:"certificate"`
	// Certificate Password.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// Base64 Encoded certificate.
	EncodedCertificate *string `pulumi:"encodedCertificate"`
	// The System.Security.Cryptography.x509certificates.StoreName certificate store location. Only Root and CertificateAuthority are valid locations.
	StoreName string `pulumi:"storeName"`
}

// CertificateConfigurationInput is an input type that accepts CertificateConfigurationArgs and CertificateConfigurationOutput values.
// You can construct a concrete instance of `CertificateConfigurationInput` via:
//
//          CertificateConfigurationArgs{...}
type CertificateConfigurationInput interface {
	pulumi.Input

	ToCertificateConfigurationOutput() CertificateConfigurationOutput
	ToCertificateConfigurationOutputWithContext(context.Context) CertificateConfigurationOutput
}

// Certificate configuration which consist of non-trusted intermediates and root certificates.
type CertificateConfigurationArgs struct {
	// Certificate information.
	Certificate CertificateInformationPtrInput `pulumi:"certificate"`
	// Certificate Password.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	// Base64 Encoded certificate.
	EncodedCertificate pulumi.StringPtrInput `pulumi:"encodedCertificate"`
	// The System.Security.Cryptography.x509certificates.StoreName certificate store location. Only Root and CertificateAuthority are valid locations.
	StoreName pulumi.StringInput `pulumi:"storeName"`
}

func (CertificateConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfiguration)(nil)).Elem()
}

func (i CertificateConfigurationArgs) ToCertificateConfigurationOutput() CertificateConfigurationOutput {
	return i.ToCertificateConfigurationOutputWithContext(context.Background())
}

func (i CertificateConfigurationArgs) ToCertificateConfigurationOutputWithContext(ctx context.Context) CertificateConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigurationOutput)
}

// CertificateConfigurationArrayInput is an input type that accepts CertificateConfigurationArray and CertificateConfigurationArrayOutput values.
// You can construct a concrete instance of `CertificateConfigurationArrayInput` via:
//
//          CertificateConfigurationArray{ CertificateConfigurationArgs{...} }
type CertificateConfigurationArrayInput interface {
	pulumi.Input

	ToCertificateConfigurationArrayOutput() CertificateConfigurationArrayOutput
	ToCertificateConfigurationArrayOutputWithContext(context.Context) CertificateConfigurationArrayOutput
}

type CertificateConfigurationArray []CertificateConfigurationInput

func (CertificateConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateConfiguration)(nil)).Elem()
}

func (i CertificateConfigurationArray) ToCertificateConfigurationArrayOutput() CertificateConfigurationArrayOutput {
	return i.ToCertificateConfigurationArrayOutputWithContext(context.Background())
}

func (i CertificateConfigurationArray) ToCertificateConfigurationArrayOutputWithContext(ctx context.Context) CertificateConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigurationArrayOutput)
}

// Certificate configuration which consist of non-trusted intermediates and root certificates.
type CertificateConfigurationOutput struct{ *pulumi.OutputState }

func (CertificateConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfiguration)(nil)).Elem()
}

func (o CertificateConfigurationOutput) ToCertificateConfigurationOutput() CertificateConfigurationOutput {
	return o
}

func (o CertificateConfigurationOutput) ToCertificateConfigurationOutputWithContext(ctx context.Context) CertificateConfigurationOutput {
	return o
}

// Certificate information.
func (o CertificateConfigurationOutput) Certificate() CertificateInformationPtrOutput {
	return o.ApplyT(func(v CertificateConfiguration) *CertificateInformation { return v.Certificate }).(CertificateInformationPtrOutput)
}

// Certificate Password.
func (o CertificateConfigurationOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfiguration) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

// Base64 Encoded certificate.
func (o CertificateConfigurationOutput) EncodedCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfiguration) *string { return v.EncodedCertificate }).(pulumi.StringPtrOutput)
}

// The System.Security.Cryptography.x509certificates.StoreName certificate store location. Only Root and CertificateAuthority are valid locations.
func (o CertificateConfigurationOutput) StoreName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateConfiguration) string { return v.StoreName }).(pulumi.StringOutput)
}

type CertificateConfigurationArrayOutput struct{ *pulumi.OutputState }

func (CertificateConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateConfiguration)(nil)).Elem()
}

func (o CertificateConfigurationArrayOutput) ToCertificateConfigurationArrayOutput() CertificateConfigurationArrayOutput {
	return o
}

func (o CertificateConfigurationArrayOutput) ToCertificateConfigurationArrayOutputWithContext(ctx context.Context) CertificateConfigurationArrayOutput {
	return o
}

func (o CertificateConfigurationArrayOutput) Index(i pulumi.IntInput) CertificateConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateConfiguration {
		return vs[0].([]CertificateConfiguration)[vs[1].(int)]
	}).(CertificateConfigurationOutput)
}

// Certificate configuration which consist of non-trusted intermediates and root certificates.
type CertificateConfigurationResponse struct {
	// Certificate information.
	Certificate *CertificateInformationResponse `pulumi:"certificate"`
	// Certificate Password.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// Base64 Encoded certificate.
	EncodedCertificate *string `pulumi:"encodedCertificate"`
	// The System.Security.Cryptography.x509certificates.StoreName certificate store location. Only Root and CertificateAuthority are valid locations.
	StoreName string `pulumi:"storeName"`
}

// CertificateConfigurationResponseInput is an input type that accepts CertificateConfigurationResponseArgs and CertificateConfigurationResponseOutput values.
// You can construct a concrete instance of `CertificateConfigurationResponseInput` via:
//
//          CertificateConfigurationResponseArgs{...}
type CertificateConfigurationResponseInput interface {
	pulumi.Input

	ToCertificateConfigurationResponseOutput() CertificateConfigurationResponseOutput
	ToCertificateConfigurationResponseOutputWithContext(context.Context) CertificateConfigurationResponseOutput
}

// Certificate configuration which consist of non-trusted intermediates and root certificates.
type CertificateConfigurationResponseArgs struct {
	// Certificate information.
	Certificate CertificateInformationResponsePtrInput `pulumi:"certificate"`
	// Certificate Password.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	// Base64 Encoded certificate.
	EncodedCertificate pulumi.StringPtrInput `pulumi:"encodedCertificate"`
	// The System.Security.Cryptography.x509certificates.StoreName certificate store location. Only Root and CertificateAuthority are valid locations.
	StoreName pulumi.StringInput `pulumi:"storeName"`
}

func (CertificateConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigurationResponse)(nil)).Elem()
}

func (i CertificateConfigurationResponseArgs) ToCertificateConfigurationResponseOutput() CertificateConfigurationResponseOutput {
	return i.ToCertificateConfigurationResponseOutputWithContext(context.Background())
}

func (i CertificateConfigurationResponseArgs) ToCertificateConfigurationResponseOutputWithContext(ctx context.Context) CertificateConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigurationResponseOutput)
}

// CertificateConfigurationResponseArrayInput is an input type that accepts CertificateConfigurationResponseArray and CertificateConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `CertificateConfigurationResponseArrayInput` via:
//
//          CertificateConfigurationResponseArray{ CertificateConfigurationResponseArgs{...} }
type CertificateConfigurationResponseArrayInput interface {
	pulumi.Input

	ToCertificateConfigurationResponseArrayOutput() CertificateConfigurationResponseArrayOutput
	ToCertificateConfigurationResponseArrayOutputWithContext(context.Context) CertificateConfigurationResponseArrayOutput
}

type CertificateConfigurationResponseArray []CertificateConfigurationResponseInput

func (CertificateConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateConfigurationResponse)(nil)).Elem()
}

func (i CertificateConfigurationResponseArray) ToCertificateConfigurationResponseArrayOutput() CertificateConfigurationResponseArrayOutput {
	return i.ToCertificateConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i CertificateConfigurationResponseArray) ToCertificateConfigurationResponseArrayOutputWithContext(ctx context.Context) CertificateConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigurationResponseArrayOutput)
}

// Certificate configuration which consist of non-trusted intermediates and root certificates.
type CertificateConfigurationResponseOutput struct{ *pulumi.OutputState }

func (CertificateConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigurationResponse)(nil)).Elem()
}

func (o CertificateConfigurationResponseOutput) ToCertificateConfigurationResponseOutput() CertificateConfigurationResponseOutput {
	return o
}

func (o CertificateConfigurationResponseOutput) ToCertificateConfigurationResponseOutputWithContext(ctx context.Context) CertificateConfigurationResponseOutput {
	return o
}

// Certificate information.
func (o CertificateConfigurationResponseOutput) Certificate() CertificateInformationResponsePtrOutput {
	return o.ApplyT(func(v CertificateConfigurationResponse) *CertificateInformationResponse { return v.Certificate }).(CertificateInformationResponsePtrOutput)
}

// Certificate Password.
func (o CertificateConfigurationResponseOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfigurationResponse) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

// Base64 Encoded certificate.
func (o CertificateConfigurationResponseOutput) EncodedCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfigurationResponse) *string { return v.EncodedCertificate }).(pulumi.StringPtrOutput)
}

// The System.Security.Cryptography.x509certificates.StoreName certificate store location. Only Root and CertificateAuthority are valid locations.
func (o CertificateConfigurationResponseOutput) StoreName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateConfigurationResponse) string { return v.StoreName }).(pulumi.StringOutput)
}

type CertificateConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (CertificateConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateConfigurationResponse)(nil)).Elem()
}

func (o CertificateConfigurationResponseArrayOutput) ToCertificateConfigurationResponseArrayOutput() CertificateConfigurationResponseArrayOutput {
	return o
}

func (o CertificateConfigurationResponseArrayOutput) ToCertificateConfigurationResponseArrayOutputWithContext(ctx context.Context) CertificateConfigurationResponseArrayOutput {
	return o
}

func (o CertificateConfigurationResponseArrayOutput) Index(i pulumi.IntInput) CertificateConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateConfigurationResponse {
		return vs[0].([]CertificateConfigurationResponse)[vs[1].(int)]
	}).(CertificateConfigurationResponseOutput)
}

// Properties of the Certificate contract.
type CertificateContractPropertiesResponse struct {
	// Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	ExpirationDate string `pulumi:"expirationDate"`
	// Subject attribute of the certificate.
	Subject string `pulumi:"subject"`
	// Thumbprint of the certificate.
	Thumbprint string `pulumi:"thumbprint"`
}

// CertificateContractPropertiesResponseInput is an input type that accepts CertificateContractPropertiesResponseArgs and CertificateContractPropertiesResponseOutput values.
// You can construct a concrete instance of `CertificateContractPropertiesResponseInput` via:
//
//          CertificateContractPropertiesResponseArgs{...}
type CertificateContractPropertiesResponseInput interface {
	pulumi.Input

	ToCertificateContractPropertiesResponseOutput() CertificateContractPropertiesResponseOutput
	ToCertificateContractPropertiesResponseOutputWithContext(context.Context) CertificateContractPropertiesResponseOutput
}

// Properties of the Certificate contract.
type CertificateContractPropertiesResponseArgs struct {
	// Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	ExpirationDate pulumi.StringInput `pulumi:"expirationDate"`
	// Subject attribute of the certificate.
	Subject pulumi.StringInput `pulumi:"subject"`
	// Thumbprint of the certificate.
	Thumbprint pulumi.StringInput `pulumi:"thumbprint"`
}

func (CertificateContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateContractPropertiesResponse)(nil)).Elem()
}

func (i CertificateContractPropertiesResponseArgs) ToCertificateContractPropertiesResponseOutput() CertificateContractPropertiesResponseOutput {
	return i.ToCertificateContractPropertiesResponseOutputWithContext(context.Background())
}

func (i CertificateContractPropertiesResponseArgs) ToCertificateContractPropertiesResponseOutputWithContext(ctx context.Context) CertificateContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateContractPropertiesResponseOutput)
}

func (i CertificateContractPropertiesResponseArgs) ToCertificateContractPropertiesResponsePtrOutput() CertificateContractPropertiesResponsePtrOutput {
	return i.ToCertificateContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i CertificateContractPropertiesResponseArgs) ToCertificateContractPropertiesResponsePtrOutputWithContext(ctx context.Context) CertificateContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateContractPropertiesResponseOutput).ToCertificateContractPropertiesResponsePtrOutputWithContext(ctx)
}

// CertificateContractPropertiesResponsePtrInput is an input type that accepts CertificateContractPropertiesResponseArgs, CertificateContractPropertiesResponsePtr and CertificateContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `CertificateContractPropertiesResponsePtrInput` via:
//
//          CertificateContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type CertificateContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToCertificateContractPropertiesResponsePtrOutput() CertificateContractPropertiesResponsePtrOutput
	ToCertificateContractPropertiesResponsePtrOutputWithContext(context.Context) CertificateContractPropertiesResponsePtrOutput
}

type certificateContractPropertiesResponsePtrType CertificateContractPropertiesResponseArgs

func CertificateContractPropertiesResponsePtr(v *CertificateContractPropertiesResponseArgs) CertificateContractPropertiesResponsePtrInput {
	return (*certificateContractPropertiesResponsePtrType)(v)
}

func (*certificateContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateContractPropertiesResponse)(nil)).Elem()
}

func (i *certificateContractPropertiesResponsePtrType) ToCertificateContractPropertiesResponsePtrOutput() CertificateContractPropertiesResponsePtrOutput {
	return i.ToCertificateContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *certificateContractPropertiesResponsePtrType) ToCertificateContractPropertiesResponsePtrOutputWithContext(ctx context.Context) CertificateContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateContractPropertiesResponsePtrOutput)
}

// Properties of the Certificate contract.
type CertificateContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CertificateContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateContractPropertiesResponse)(nil)).Elem()
}

func (o CertificateContractPropertiesResponseOutput) ToCertificateContractPropertiesResponseOutput() CertificateContractPropertiesResponseOutput {
	return o
}

func (o CertificateContractPropertiesResponseOutput) ToCertificateContractPropertiesResponseOutputWithContext(ctx context.Context) CertificateContractPropertiesResponseOutput {
	return o
}

func (o CertificateContractPropertiesResponseOutput) ToCertificateContractPropertiesResponsePtrOutput() CertificateContractPropertiesResponsePtrOutput {
	return o.ToCertificateContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o CertificateContractPropertiesResponseOutput) ToCertificateContractPropertiesResponsePtrOutputWithContext(ctx context.Context) CertificateContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v CertificateContractPropertiesResponse) *CertificateContractPropertiesResponse {
		return &v
	}).(CertificateContractPropertiesResponsePtrOutput)
}

// Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o CertificateContractPropertiesResponseOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateContractPropertiesResponse) string { return v.ExpirationDate }).(pulumi.StringOutput)
}

// Subject attribute of the certificate.
func (o CertificateContractPropertiesResponseOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateContractPropertiesResponse) string { return v.Subject }).(pulumi.StringOutput)
}

// Thumbprint of the certificate.
func (o CertificateContractPropertiesResponseOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateContractPropertiesResponse) string { return v.Thumbprint }).(pulumi.StringOutput)
}

type CertificateContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CertificateContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateContractPropertiesResponse)(nil)).Elem()
}

func (o CertificateContractPropertiesResponsePtrOutput) ToCertificateContractPropertiesResponsePtrOutput() CertificateContractPropertiesResponsePtrOutput {
	return o
}

func (o CertificateContractPropertiesResponsePtrOutput) ToCertificateContractPropertiesResponsePtrOutputWithContext(ctx context.Context) CertificateContractPropertiesResponsePtrOutput {
	return o
}

func (o CertificateContractPropertiesResponsePtrOutput) Elem() CertificateContractPropertiesResponseOutput {
	return o.ApplyT(func(v *CertificateContractPropertiesResponse) CertificateContractPropertiesResponse { return *v }).(CertificateContractPropertiesResponseOutput)
}

// Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o CertificateContractPropertiesResponsePtrOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ExpirationDate
	}).(pulumi.StringPtrOutput)
}

// Subject attribute of the certificate.
func (o CertificateContractPropertiesResponsePtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// Thumbprint of the certificate.
func (o CertificateContractPropertiesResponsePtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// SSL certificate information.
type CertificateInformation struct {
	// Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	Expiry string `pulumi:"expiry"`
	// Subject of the certificate.
	Subject string `pulumi:"subject"`
	// Thumbprint of the certificate.
	Thumbprint string `pulumi:"thumbprint"`
}

// CertificateInformationInput is an input type that accepts CertificateInformationArgs and CertificateInformationOutput values.
// You can construct a concrete instance of `CertificateInformationInput` via:
//
//          CertificateInformationArgs{...}
type CertificateInformationInput interface {
	pulumi.Input

	ToCertificateInformationOutput() CertificateInformationOutput
	ToCertificateInformationOutputWithContext(context.Context) CertificateInformationOutput
}

// SSL certificate information.
type CertificateInformationArgs struct {
	// Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	Expiry pulumi.StringInput `pulumi:"expiry"`
	// Subject of the certificate.
	Subject pulumi.StringInput `pulumi:"subject"`
	// Thumbprint of the certificate.
	Thumbprint pulumi.StringInput `pulumi:"thumbprint"`
}

func (CertificateInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateInformation)(nil)).Elem()
}

func (i CertificateInformationArgs) ToCertificateInformationOutput() CertificateInformationOutput {
	return i.ToCertificateInformationOutputWithContext(context.Background())
}

func (i CertificateInformationArgs) ToCertificateInformationOutputWithContext(ctx context.Context) CertificateInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateInformationOutput)
}

func (i CertificateInformationArgs) ToCertificateInformationPtrOutput() CertificateInformationPtrOutput {
	return i.ToCertificateInformationPtrOutputWithContext(context.Background())
}

func (i CertificateInformationArgs) ToCertificateInformationPtrOutputWithContext(ctx context.Context) CertificateInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateInformationOutput).ToCertificateInformationPtrOutputWithContext(ctx)
}

// CertificateInformationPtrInput is an input type that accepts CertificateInformationArgs, CertificateInformationPtr and CertificateInformationPtrOutput values.
// You can construct a concrete instance of `CertificateInformationPtrInput` via:
//
//          CertificateInformationArgs{...}
//
//  or:
//
//          nil
type CertificateInformationPtrInput interface {
	pulumi.Input

	ToCertificateInformationPtrOutput() CertificateInformationPtrOutput
	ToCertificateInformationPtrOutputWithContext(context.Context) CertificateInformationPtrOutput
}

type certificateInformationPtrType CertificateInformationArgs

func CertificateInformationPtr(v *CertificateInformationArgs) CertificateInformationPtrInput {
	return (*certificateInformationPtrType)(v)
}

func (*certificateInformationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateInformation)(nil)).Elem()
}

func (i *certificateInformationPtrType) ToCertificateInformationPtrOutput() CertificateInformationPtrOutput {
	return i.ToCertificateInformationPtrOutputWithContext(context.Background())
}

func (i *certificateInformationPtrType) ToCertificateInformationPtrOutputWithContext(ctx context.Context) CertificateInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateInformationPtrOutput)
}

// SSL certificate information.
type CertificateInformationOutput struct{ *pulumi.OutputState }

func (CertificateInformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateInformation)(nil)).Elem()
}

func (o CertificateInformationOutput) ToCertificateInformationOutput() CertificateInformationOutput {
	return o
}

func (o CertificateInformationOutput) ToCertificateInformationOutputWithContext(ctx context.Context) CertificateInformationOutput {
	return o
}

func (o CertificateInformationOutput) ToCertificateInformationPtrOutput() CertificateInformationPtrOutput {
	return o.ToCertificateInformationPtrOutputWithContext(context.Background())
}

func (o CertificateInformationOutput) ToCertificateInformationPtrOutputWithContext(ctx context.Context) CertificateInformationPtrOutput {
	return o.ApplyT(func(v CertificateInformation) *CertificateInformation {
		return &v
	}).(CertificateInformationPtrOutput)
}

// Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o CertificateInformationOutput) Expiry() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateInformation) string { return v.Expiry }).(pulumi.StringOutput)
}

// Subject of the certificate.
func (o CertificateInformationOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateInformation) string { return v.Subject }).(pulumi.StringOutput)
}

// Thumbprint of the certificate.
func (o CertificateInformationOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateInformation) string { return v.Thumbprint }).(pulumi.StringOutput)
}

type CertificateInformationPtrOutput struct{ *pulumi.OutputState }

func (CertificateInformationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateInformation)(nil)).Elem()
}

func (o CertificateInformationPtrOutput) ToCertificateInformationPtrOutput() CertificateInformationPtrOutput {
	return o
}

func (o CertificateInformationPtrOutput) ToCertificateInformationPtrOutputWithContext(ctx context.Context) CertificateInformationPtrOutput {
	return o
}

func (o CertificateInformationPtrOutput) Elem() CertificateInformationOutput {
	return o.ApplyT(func(v *CertificateInformation) CertificateInformation { return *v }).(CertificateInformationOutput)
}

// Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o CertificateInformationPtrOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateInformation) *string {
		if v == nil {
			return nil
		}
		return &v.Expiry
	}).(pulumi.StringPtrOutput)
}

// Subject of the certificate.
func (o CertificateInformationPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateInformation) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// Thumbprint of the certificate.
func (o CertificateInformationPtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateInformation) *string {
		if v == nil {
			return nil
		}
		return &v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// SSL certificate information.
type CertificateInformationResponse struct {
	// Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	Expiry string `pulumi:"expiry"`
	// Subject of the certificate.
	Subject string `pulumi:"subject"`
	// Thumbprint of the certificate.
	Thumbprint string `pulumi:"thumbprint"`
}

// CertificateInformationResponseInput is an input type that accepts CertificateInformationResponseArgs and CertificateInformationResponseOutput values.
// You can construct a concrete instance of `CertificateInformationResponseInput` via:
//
//          CertificateInformationResponseArgs{...}
type CertificateInformationResponseInput interface {
	pulumi.Input

	ToCertificateInformationResponseOutput() CertificateInformationResponseOutput
	ToCertificateInformationResponseOutputWithContext(context.Context) CertificateInformationResponseOutput
}

// SSL certificate information.
type CertificateInformationResponseArgs struct {
	// Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	Expiry pulumi.StringInput `pulumi:"expiry"`
	// Subject of the certificate.
	Subject pulumi.StringInput `pulumi:"subject"`
	// Thumbprint of the certificate.
	Thumbprint pulumi.StringInput `pulumi:"thumbprint"`
}

func (CertificateInformationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateInformationResponse)(nil)).Elem()
}

func (i CertificateInformationResponseArgs) ToCertificateInformationResponseOutput() CertificateInformationResponseOutput {
	return i.ToCertificateInformationResponseOutputWithContext(context.Background())
}

func (i CertificateInformationResponseArgs) ToCertificateInformationResponseOutputWithContext(ctx context.Context) CertificateInformationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateInformationResponseOutput)
}

func (i CertificateInformationResponseArgs) ToCertificateInformationResponsePtrOutput() CertificateInformationResponsePtrOutput {
	return i.ToCertificateInformationResponsePtrOutputWithContext(context.Background())
}

func (i CertificateInformationResponseArgs) ToCertificateInformationResponsePtrOutputWithContext(ctx context.Context) CertificateInformationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateInformationResponseOutput).ToCertificateInformationResponsePtrOutputWithContext(ctx)
}

// CertificateInformationResponsePtrInput is an input type that accepts CertificateInformationResponseArgs, CertificateInformationResponsePtr and CertificateInformationResponsePtrOutput values.
// You can construct a concrete instance of `CertificateInformationResponsePtrInput` via:
//
//          CertificateInformationResponseArgs{...}
//
//  or:
//
//          nil
type CertificateInformationResponsePtrInput interface {
	pulumi.Input

	ToCertificateInformationResponsePtrOutput() CertificateInformationResponsePtrOutput
	ToCertificateInformationResponsePtrOutputWithContext(context.Context) CertificateInformationResponsePtrOutput
}

type certificateInformationResponsePtrType CertificateInformationResponseArgs

func CertificateInformationResponsePtr(v *CertificateInformationResponseArgs) CertificateInformationResponsePtrInput {
	return (*certificateInformationResponsePtrType)(v)
}

func (*certificateInformationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateInformationResponse)(nil)).Elem()
}

func (i *certificateInformationResponsePtrType) ToCertificateInformationResponsePtrOutput() CertificateInformationResponsePtrOutput {
	return i.ToCertificateInformationResponsePtrOutputWithContext(context.Background())
}

func (i *certificateInformationResponsePtrType) ToCertificateInformationResponsePtrOutputWithContext(ctx context.Context) CertificateInformationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateInformationResponsePtrOutput)
}

// SSL certificate information.
type CertificateInformationResponseOutput struct{ *pulumi.OutputState }

func (CertificateInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateInformationResponse)(nil)).Elem()
}

func (o CertificateInformationResponseOutput) ToCertificateInformationResponseOutput() CertificateInformationResponseOutput {
	return o
}

func (o CertificateInformationResponseOutput) ToCertificateInformationResponseOutputWithContext(ctx context.Context) CertificateInformationResponseOutput {
	return o
}

func (o CertificateInformationResponseOutput) ToCertificateInformationResponsePtrOutput() CertificateInformationResponsePtrOutput {
	return o.ToCertificateInformationResponsePtrOutputWithContext(context.Background())
}

func (o CertificateInformationResponseOutput) ToCertificateInformationResponsePtrOutputWithContext(ctx context.Context) CertificateInformationResponsePtrOutput {
	return o.ApplyT(func(v CertificateInformationResponse) *CertificateInformationResponse {
		return &v
	}).(CertificateInformationResponsePtrOutput)
}

// Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o CertificateInformationResponseOutput) Expiry() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateInformationResponse) string { return v.Expiry }).(pulumi.StringOutput)
}

// Subject of the certificate.
func (o CertificateInformationResponseOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateInformationResponse) string { return v.Subject }).(pulumi.StringOutput)
}

// Thumbprint of the certificate.
func (o CertificateInformationResponseOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateInformationResponse) string { return v.Thumbprint }).(pulumi.StringOutput)
}

type CertificateInformationResponsePtrOutput struct{ *pulumi.OutputState }

func (CertificateInformationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateInformationResponse)(nil)).Elem()
}

func (o CertificateInformationResponsePtrOutput) ToCertificateInformationResponsePtrOutput() CertificateInformationResponsePtrOutput {
	return o
}

func (o CertificateInformationResponsePtrOutput) ToCertificateInformationResponsePtrOutputWithContext(ctx context.Context) CertificateInformationResponsePtrOutput {
	return o
}

func (o CertificateInformationResponsePtrOutput) Elem() CertificateInformationResponseOutput {
	return o.ApplyT(func(v *CertificateInformationResponse) CertificateInformationResponse { return *v }).(CertificateInformationResponseOutput)
}

// Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o CertificateInformationResponsePtrOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Expiry
	}).(pulumi.StringPtrOutput)
}

// Subject of the certificate.
func (o CertificateInformationResponsePtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// Thumbprint of the certificate.
func (o CertificateInformationResponsePtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateInformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// Diagnostic details.
type DiagnosticType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Diagnostic entity contract properties.
	Properties DiagnosticContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// DiagnosticTypeInput is an input type that accepts DiagnosticTypeArgs and DiagnosticTypeOutput values.
// You can construct a concrete instance of `DiagnosticTypeInput` via:
//
//          DiagnosticTypeArgs{...}
type DiagnosticTypeInput interface {
	pulumi.Input

	ToDiagnosticTypeOutput() DiagnosticTypeOutput
	ToDiagnosticTypeOutputWithContext(context.Context) DiagnosticTypeOutput
}

// Diagnostic details.
type DiagnosticTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Diagnostic entity contract properties.
	Properties DiagnosticContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DiagnosticTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticType)(nil)).Elem()
}

func (i DiagnosticTypeArgs) ToDiagnosticTypeOutput() DiagnosticTypeOutput {
	return i.ToDiagnosticTypeOutputWithContext(context.Background())
}

func (i DiagnosticTypeArgs) ToDiagnosticTypeOutputWithContext(ctx context.Context) DiagnosticTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticTypeOutput)
}

// Diagnostic details.
type DiagnosticTypeOutput struct{ *pulumi.OutputState }

func (DiagnosticTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticType)(nil)).Elem()
}

func (o DiagnosticTypeOutput) ToDiagnosticTypeOutput() DiagnosticTypeOutput {
	return o
}

func (o DiagnosticTypeOutput) ToDiagnosticTypeOutputWithContext(ctx context.Context) DiagnosticTypeOutput {
	return o
}

// Resource name.
func (o DiagnosticTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticType) string { return v.Name }).(pulumi.StringOutput)
}

// Diagnostic entity contract properties.
func (o DiagnosticTypeOutput) Properties() DiagnosticContractPropertiesResponseOutput {
	return o.ApplyT(func(v DiagnosticType) DiagnosticContractPropertiesResponse { return v.Properties }).(DiagnosticContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o DiagnosticTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticType) string { return v.Type }).(pulumi.StringOutput)
}

// Diagnostic Entity Properties
type DiagnosticContractPropertiesResponse struct {
	// Specifies for what type of messages sampling settings should not apply.
	AlwaysLog *string `pulumi:"alwaysLog"`
	// Diagnostic settings for incoming/outgoing HTTP messages to the Backend
	Backend *PipelineDiagnosticSettingsResponse `pulumi:"backend"`
	// Whether to process Correlation Headers coming to Api Management Service. Only applicable to Application Insights diagnostics. Default is true.
	EnableHttpCorrelationHeaders *bool `pulumi:"enableHttpCorrelationHeaders"`
	// Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
	Frontend *PipelineDiagnosticSettingsResponse `pulumi:"frontend"`
	// Sets correlation protocol to use for Application Insights diagnostics.
	HttpCorrelationProtocol *string `pulumi:"httpCorrelationProtocol"`
	// Resource Id of a target logger.
	LoggerId string `pulumi:"loggerId"`
	// Sampling settings for Diagnostic.
	Sampling *SamplingSettingsResponse `pulumi:"sampling"`
	// The verbosity level applied to traces emitted by trace policies.
	Verbosity *string `pulumi:"verbosity"`
}

// DiagnosticContractPropertiesResponseInput is an input type that accepts DiagnosticContractPropertiesResponseArgs and DiagnosticContractPropertiesResponseOutput values.
// You can construct a concrete instance of `DiagnosticContractPropertiesResponseInput` via:
//
//          DiagnosticContractPropertiesResponseArgs{...}
type DiagnosticContractPropertiesResponseInput interface {
	pulumi.Input

	ToDiagnosticContractPropertiesResponseOutput() DiagnosticContractPropertiesResponseOutput
	ToDiagnosticContractPropertiesResponseOutputWithContext(context.Context) DiagnosticContractPropertiesResponseOutput
}

// Diagnostic Entity Properties
type DiagnosticContractPropertiesResponseArgs struct {
	// Specifies for what type of messages sampling settings should not apply.
	AlwaysLog pulumi.StringPtrInput `pulumi:"alwaysLog"`
	// Diagnostic settings for incoming/outgoing HTTP messages to the Backend
	Backend PipelineDiagnosticSettingsResponsePtrInput `pulumi:"backend"`
	// Whether to process Correlation Headers coming to Api Management Service. Only applicable to Application Insights diagnostics. Default is true.
	EnableHttpCorrelationHeaders pulumi.BoolPtrInput `pulumi:"enableHttpCorrelationHeaders"`
	// Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
	Frontend PipelineDiagnosticSettingsResponsePtrInput `pulumi:"frontend"`
	// Sets correlation protocol to use for Application Insights diagnostics.
	HttpCorrelationProtocol pulumi.StringPtrInput `pulumi:"httpCorrelationProtocol"`
	// Resource Id of a target logger.
	LoggerId pulumi.StringInput `pulumi:"loggerId"`
	// Sampling settings for Diagnostic.
	Sampling SamplingSettingsResponsePtrInput `pulumi:"sampling"`
	// The verbosity level applied to traces emitted by trace policies.
	Verbosity pulumi.StringPtrInput `pulumi:"verbosity"`
}

func (DiagnosticContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticContractPropertiesResponse)(nil)).Elem()
}

func (i DiagnosticContractPropertiesResponseArgs) ToDiagnosticContractPropertiesResponseOutput() DiagnosticContractPropertiesResponseOutput {
	return i.ToDiagnosticContractPropertiesResponseOutputWithContext(context.Background())
}

func (i DiagnosticContractPropertiesResponseArgs) ToDiagnosticContractPropertiesResponseOutputWithContext(ctx context.Context) DiagnosticContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticContractPropertiesResponseOutput)
}

func (i DiagnosticContractPropertiesResponseArgs) ToDiagnosticContractPropertiesResponsePtrOutput() DiagnosticContractPropertiesResponsePtrOutput {
	return i.ToDiagnosticContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i DiagnosticContractPropertiesResponseArgs) ToDiagnosticContractPropertiesResponsePtrOutputWithContext(ctx context.Context) DiagnosticContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticContractPropertiesResponseOutput).ToDiagnosticContractPropertiesResponsePtrOutputWithContext(ctx)
}

// DiagnosticContractPropertiesResponsePtrInput is an input type that accepts DiagnosticContractPropertiesResponseArgs, DiagnosticContractPropertiesResponsePtr and DiagnosticContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `DiagnosticContractPropertiesResponsePtrInput` via:
//
//          DiagnosticContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type DiagnosticContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToDiagnosticContractPropertiesResponsePtrOutput() DiagnosticContractPropertiesResponsePtrOutput
	ToDiagnosticContractPropertiesResponsePtrOutputWithContext(context.Context) DiagnosticContractPropertiesResponsePtrOutput
}

type diagnosticContractPropertiesResponsePtrType DiagnosticContractPropertiesResponseArgs

func DiagnosticContractPropertiesResponsePtr(v *DiagnosticContractPropertiesResponseArgs) DiagnosticContractPropertiesResponsePtrInput {
	return (*diagnosticContractPropertiesResponsePtrType)(v)
}

func (*diagnosticContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticContractPropertiesResponse)(nil)).Elem()
}

func (i *diagnosticContractPropertiesResponsePtrType) ToDiagnosticContractPropertiesResponsePtrOutput() DiagnosticContractPropertiesResponsePtrOutput {
	return i.ToDiagnosticContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *diagnosticContractPropertiesResponsePtrType) ToDiagnosticContractPropertiesResponsePtrOutputWithContext(ctx context.Context) DiagnosticContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticContractPropertiesResponsePtrOutput)
}

// Diagnostic Entity Properties
type DiagnosticContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DiagnosticContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticContractPropertiesResponse)(nil)).Elem()
}

func (o DiagnosticContractPropertiesResponseOutput) ToDiagnosticContractPropertiesResponseOutput() DiagnosticContractPropertiesResponseOutput {
	return o
}

func (o DiagnosticContractPropertiesResponseOutput) ToDiagnosticContractPropertiesResponseOutputWithContext(ctx context.Context) DiagnosticContractPropertiesResponseOutput {
	return o
}

func (o DiagnosticContractPropertiesResponseOutput) ToDiagnosticContractPropertiesResponsePtrOutput() DiagnosticContractPropertiesResponsePtrOutput {
	return o.ToDiagnosticContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o DiagnosticContractPropertiesResponseOutput) ToDiagnosticContractPropertiesResponsePtrOutputWithContext(ctx context.Context) DiagnosticContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v DiagnosticContractPropertiesResponse) *DiagnosticContractPropertiesResponse {
		return &v
	}).(DiagnosticContractPropertiesResponsePtrOutput)
}

// Specifies for what type of messages sampling settings should not apply.
func (o DiagnosticContractPropertiesResponseOutput) AlwaysLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiagnosticContractPropertiesResponse) *string { return v.AlwaysLog }).(pulumi.StringPtrOutput)
}

// Diagnostic settings for incoming/outgoing HTTP messages to the Backend
func (o DiagnosticContractPropertiesResponseOutput) Backend() PipelineDiagnosticSettingsResponsePtrOutput {
	return o.ApplyT(func(v DiagnosticContractPropertiesResponse) *PipelineDiagnosticSettingsResponse { return v.Backend }).(PipelineDiagnosticSettingsResponsePtrOutput)
}

// Whether to process Correlation Headers coming to Api Management Service. Only applicable to Application Insights diagnostics. Default is true.
func (o DiagnosticContractPropertiesResponseOutput) EnableHttpCorrelationHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DiagnosticContractPropertiesResponse) *bool { return v.EnableHttpCorrelationHeaders }).(pulumi.BoolPtrOutput)
}

// Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
func (o DiagnosticContractPropertiesResponseOutput) Frontend() PipelineDiagnosticSettingsResponsePtrOutput {
	return o.ApplyT(func(v DiagnosticContractPropertiesResponse) *PipelineDiagnosticSettingsResponse { return v.Frontend }).(PipelineDiagnosticSettingsResponsePtrOutput)
}

// Sets correlation protocol to use for Application Insights diagnostics.
func (o DiagnosticContractPropertiesResponseOutput) HttpCorrelationProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiagnosticContractPropertiesResponse) *string { return v.HttpCorrelationProtocol }).(pulumi.StringPtrOutput)
}

// Resource Id of a target logger.
func (o DiagnosticContractPropertiesResponseOutput) LoggerId() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticContractPropertiesResponse) string { return v.LoggerId }).(pulumi.StringOutput)
}

// Sampling settings for Diagnostic.
func (o DiagnosticContractPropertiesResponseOutput) Sampling() SamplingSettingsResponsePtrOutput {
	return o.ApplyT(func(v DiagnosticContractPropertiesResponse) *SamplingSettingsResponse { return v.Sampling }).(SamplingSettingsResponsePtrOutput)
}

// The verbosity level applied to traces emitted by trace policies.
func (o DiagnosticContractPropertiesResponseOutput) Verbosity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiagnosticContractPropertiesResponse) *string { return v.Verbosity }).(pulumi.StringPtrOutput)
}

type DiagnosticContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DiagnosticContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticContractPropertiesResponse)(nil)).Elem()
}

func (o DiagnosticContractPropertiesResponsePtrOutput) ToDiagnosticContractPropertiesResponsePtrOutput() DiagnosticContractPropertiesResponsePtrOutput {
	return o
}

func (o DiagnosticContractPropertiesResponsePtrOutput) ToDiagnosticContractPropertiesResponsePtrOutputWithContext(ctx context.Context) DiagnosticContractPropertiesResponsePtrOutput {
	return o
}

func (o DiagnosticContractPropertiesResponsePtrOutput) Elem() DiagnosticContractPropertiesResponseOutput {
	return o.ApplyT(func(v *DiagnosticContractPropertiesResponse) DiagnosticContractPropertiesResponse { return *v }).(DiagnosticContractPropertiesResponseOutput)
}

// Specifies for what type of messages sampling settings should not apply.
func (o DiagnosticContractPropertiesResponsePtrOutput) AlwaysLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiagnosticContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AlwaysLog
	}).(pulumi.StringPtrOutput)
}

// Diagnostic settings for incoming/outgoing HTTP messages to the Backend
func (o DiagnosticContractPropertiesResponsePtrOutput) Backend() PipelineDiagnosticSettingsResponsePtrOutput {
	return o.ApplyT(func(v *DiagnosticContractPropertiesResponse) *PipelineDiagnosticSettingsResponse {
		if v == nil {
			return nil
		}
		return v.Backend
	}).(PipelineDiagnosticSettingsResponsePtrOutput)
}

// Whether to process Correlation Headers coming to Api Management Service. Only applicable to Application Insights diagnostics. Default is true.
func (o DiagnosticContractPropertiesResponsePtrOutput) EnableHttpCorrelationHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DiagnosticContractPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableHttpCorrelationHeaders
	}).(pulumi.BoolPtrOutput)
}

// Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
func (o DiagnosticContractPropertiesResponsePtrOutput) Frontend() PipelineDiagnosticSettingsResponsePtrOutput {
	return o.ApplyT(func(v *DiagnosticContractPropertiesResponse) *PipelineDiagnosticSettingsResponse {
		if v == nil {
			return nil
		}
		return v.Frontend
	}).(PipelineDiagnosticSettingsResponsePtrOutput)
}

// Sets correlation protocol to use for Application Insights diagnostics.
func (o DiagnosticContractPropertiesResponsePtrOutput) HttpCorrelationProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiagnosticContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.HttpCorrelationProtocol
	}).(pulumi.StringPtrOutput)
}

// Resource Id of a target logger.
func (o DiagnosticContractPropertiesResponsePtrOutput) LoggerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiagnosticContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LoggerId
	}).(pulumi.StringPtrOutput)
}

// Sampling settings for Diagnostic.
func (o DiagnosticContractPropertiesResponsePtrOutput) Sampling() SamplingSettingsResponsePtrOutput {
	return o.ApplyT(func(v *DiagnosticContractPropertiesResponse) *SamplingSettingsResponse {
		if v == nil {
			return nil
		}
		return v.Sampling
	}).(SamplingSettingsResponsePtrOutput)
}

// The verbosity level applied to traces emitted by trace policies.
func (o DiagnosticContractPropertiesResponsePtrOutput) Verbosity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiagnosticContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Verbosity
	}).(pulumi.StringPtrOutput)
}

// Email Template details.
type EmailTemplateType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Email Template entity contract properties.
	Properties EmailTemplateContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// EmailTemplateTypeInput is an input type that accepts EmailTemplateTypeArgs and EmailTemplateTypeOutput values.
// You can construct a concrete instance of `EmailTemplateTypeInput` via:
//
//          EmailTemplateTypeArgs{...}
type EmailTemplateTypeInput interface {
	pulumi.Input

	ToEmailTemplateTypeOutput() EmailTemplateTypeOutput
	ToEmailTemplateTypeOutputWithContext(context.Context) EmailTemplateTypeOutput
}

// Email Template details.
type EmailTemplateTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Email Template entity contract properties.
	Properties EmailTemplateContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (EmailTemplateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailTemplateType)(nil)).Elem()
}

func (i EmailTemplateTypeArgs) ToEmailTemplateTypeOutput() EmailTemplateTypeOutput {
	return i.ToEmailTemplateTypeOutputWithContext(context.Background())
}

func (i EmailTemplateTypeArgs) ToEmailTemplateTypeOutputWithContext(ctx context.Context) EmailTemplateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailTemplateTypeOutput)
}

// Email Template details.
type EmailTemplateTypeOutput struct{ *pulumi.OutputState }

func (EmailTemplateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailTemplateType)(nil)).Elem()
}

func (o EmailTemplateTypeOutput) ToEmailTemplateTypeOutput() EmailTemplateTypeOutput {
	return o
}

func (o EmailTemplateTypeOutput) ToEmailTemplateTypeOutputWithContext(ctx context.Context) EmailTemplateTypeOutput {
	return o
}

// Resource name.
func (o EmailTemplateTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EmailTemplateType) string { return v.Name }).(pulumi.StringOutput)
}

// Email Template entity contract properties.
func (o EmailTemplateTypeOutput) Properties() EmailTemplateContractPropertiesResponseOutput {
	return o.ApplyT(func(v EmailTemplateType) EmailTemplateContractPropertiesResponse { return v.Properties }).(EmailTemplateContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o EmailTemplateTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EmailTemplateType) string { return v.Type }).(pulumi.StringOutput)
}

// Email Template Contract properties.
type EmailTemplateContractPropertiesResponse struct {
	// Email Template Body. This should be a valid XDocument
	Body string `pulumi:"body"`
	// Description of the Email Template.
	Description *string `pulumi:"description"`
	// Whether the template is the default template provided by Api Management or has been edited.
	IsDefault bool `pulumi:"isDefault"`
	// Email Template Parameter values.
	Parameters []EmailTemplateParametersContractPropertiesResponse `pulumi:"parameters"`
	// Subject of the Template.
	Subject string `pulumi:"subject"`
	// Title of the Template.
	Title *string `pulumi:"title"`
}

// EmailTemplateContractPropertiesResponseInput is an input type that accepts EmailTemplateContractPropertiesResponseArgs and EmailTemplateContractPropertiesResponseOutput values.
// You can construct a concrete instance of `EmailTemplateContractPropertiesResponseInput` via:
//
//          EmailTemplateContractPropertiesResponseArgs{...}
type EmailTemplateContractPropertiesResponseInput interface {
	pulumi.Input

	ToEmailTemplateContractPropertiesResponseOutput() EmailTemplateContractPropertiesResponseOutput
	ToEmailTemplateContractPropertiesResponseOutputWithContext(context.Context) EmailTemplateContractPropertiesResponseOutput
}

// Email Template Contract properties.
type EmailTemplateContractPropertiesResponseArgs struct {
	// Email Template Body. This should be a valid XDocument
	Body pulumi.StringInput `pulumi:"body"`
	// Description of the Email Template.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Whether the template is the default template provided by Api Management or has been edited.
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// Email Template Parameter values.
	Parameters EmailTemplateParametersContractPropertiesResponseArrayInput `pulumi:"parameters"`
	// Subject of the Template.
	Subject pulumi.StringInput `pulumi:"subject"`
	// Title of the Template.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (EmailTemplateContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailTemplateContractPropertiesResponse)(nil)).Elem()
}

func (i EmailTemplateContractPropertiesResponseArgs) ToEmailTemplateContractPropertiesResponseOutput() EmailTemplateContractPropertiesResponseOutput {
	return i.ToEmailTemplateContractPropertiesResponseOutputWithContext(context.Background())
}

func (i EmailTemplateContractPropertiesResponseArgs) ToEmailTemplateContractPropertiesResponseOutputWithContext(ctx context.Context) EmailTemplateContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailTemplateContractPropertiesResponseOutput)
}

func (i EmailTemplateContractPropertiesResponseArgs) ToEmailTemplateContractPropertiesResponsePtrOutput() EmailTemplateContractPropertiesResponsePtrOutput {
	return i.ToEmailTemplateContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i EmailTemplateContractPropertiesResponseArgs) ToEmailTemplateContractPropertiesResponsePtrOutputWithContext(ctx context.Context) EmailTemplateContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailTemplateContractPropertiesResponseOutput).ToEmailTemplateContractPropertiesResponsePtrOutputWithContext(ctx)
}

// EmailTemplateContractPropertiesResponsePtrInput is an input type that accepts EmailTemplateContractPropertiesResponseArgs, EmailTemplateContractPropertiesResponsePtr and EmailTemplateContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `EmailTemplateContractPropertiesResponsePtrInput` via:
//
//          EmailTemplateContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type EmailTemplateContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToEmailTemplateContractPropertiesResponsePtrOutput() EmailTemplateContractPropertiesResponsePtrOutput
	ToEmailTemplateContractPropertiesResponsePtrOutputWithContext(context.Context) EmailTemplateContractPropertiesResponsePtrOutput
}

type emailTemplateContractPropertiesResponsePtrType EmailTemplateContractPropertiesResponseArgs

func EmailTemplateContractPropertiesResponsePtr(v *EmailTemplateContractPropertiesResponseArgs) EmailTemplateContractPropertiesResponsePtrInput {
	return (*emailTemplateContractPropertiesResponsePtrType)(v)
}

func (*emailTemplateContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailTemplateContractPropertiesResponse)(nil)).Elem()
}

func (i *emailTemplateContractPropertiesResponsePtrType) ToEmailTemplateContractPropertiesResponsePtrOutput() EmailTemplateContractPropertiesResponsePtrOutput {
	return i.ToEmailTemplateContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *emailTemplateContractPropertiesResponsePtrType) ToEmailTemplateContractPropertiesResponsePtrOutputWithContext(ctx context.Context) EmailTemplateContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailTemplateContractPropertiesResponsePtrOutput)
}

// Email Template Contract properties.
type EmailTemplateContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (EmailTemplateContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailTemplateContractPropertiesResponse)(nil)).Elem()
}

func (o EmailTemplateContractPropertiesResponseOutput) ToEmailTemplateContractPropertiesResponseOutput() EmailTemplateContractPropertiesResponseOutput {
	return o
}

func (o EmailTemplateContractPropertiesResponseOutput) ToEmailTemplateContractPropertiesResponseOutputWithContext(ctx context.Context) EmailTemplateContractPropertiesResponseOutput {
	return o
}

func (o EmailTemplateContractPropertiesResponseOutput) ToEmailTemplateContractPropertiesResponsePtrOutput() EmailTemplateContractPropertiesResponsePtrOutput {
	return o.ToEmailTemplateContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o EmailTemplateContractPropertiesResponseOutput) ToEmailTemplateContractPropertiesResponsePtrOutputWithContext(ctx context.Context) EmailTemplateContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v EmailTemplateContractPropertiesResponse) *EmailTemplateContractPropertiesResponse {
		return &v
	}).(EmailTemplateContractPropertiesResponsePtrOutput)
}

// Email Template Body. This should be a valid XDocument
func (o EmailTemplateContractPropertiesResponseOutput) Body() pulumi.StringOutput {
	return o.ApplyT(func(v EmailTemplateContractPropertiesResponse) string { return v.Body }).(pulumi.StringOutput)
}

// Description of the Email Template.
func (o EmailTemplateContractPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailTemplateContractPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether the template is the default template provided by Api Management or has been edited.
func (o EmailTemplateContractPropertiesResponseOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v EmailTemplateContractPropertiesResponse) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// Email Template Parameter values.
func (o EmailTemplateContractPropertiesResponseOutput) Parameters() EmailTemplateParametersContractPropertiesResponseArrayOutput {
	return o.ApplyT(func(v EmailTemplateContractPropertiesResponse) []EmailTemplateParametersContractPropertiesResponse {
		return v.Parameters
	}).(EmailTemplateParametersContractPropertiesResponseArrayOutput)
}

// Subject of the Template.
func (o EmailTemplateContractPropertiesResponseOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v EmailTemplateContractPropertiesResponse) string { return v.Subject }).(pulumi.StringOutput)
}

// Title of the Template.
func (o EmailTemplateContractPropertiesResponseOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailTemplateContractPropertiesResponse) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type EmailTemplateContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (EmailTemplateContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailTemplateContractPropertiesResponse)(nil)).Elem()
}

func (o EmailTemplateContractPropertiesResponsePtrOutput) ToEmailTemplateContractPropertiesResponsePtrOutput() EmailTemplateContractPropertiesResponsePtrOutput {
	return o
}

func (o EmailTemplateContractPropertiesResponsePtrOutput) ToEmailTemplateContractPropertiesResponsePtrOutputWithContext(ctx context.Context) EmailTemplateContractPropertiesResponsePtrOutput {
	return o
}

func (o EmailTemplateContractPropertiesResponsePtrOutput) Elem() EmailTemplateContractPropertiesResponseOutput {
	return o.ApplyT(func(v *EmailTemplateContractPropertiesResponse) EmailTemplateContractPropertiesResponse { return *v }).(EmailTemplateContractPropertiesResponseOutput)
}

// Email Template Body. This should be a valid XDocument
func (o EmailTemplateContractPropertiesResponsePtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailTemplateContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Body
	}).(pulumi.StringPtrOutput)
}

// Description of the Email Template.
func (o EmailTemplateContractPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailTemplateContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Whether the template is the default template provided by Api Management or has been edited.
func (o EmailTemplateContractPropertiesResponsePtrOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EmailTemplateContractPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsDefault
	}).(pulumi.BoolPtrOutput)
}

// Email Template Parameter values.
func (o EmailTemplateContractPropertiesResponsePtrOutput) Parameters() EmailTemplateParametersContractPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *EmailTemplateContractPropertiesResponse) []EmailTemplateParametersContractPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(EmailTemplateParametersContractPropertiesResponseArrayOutput)
}

// Subject of the Template.
func (o EmailTemplateContractPropertiesResponsePtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailTemplateContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// Title of the Template.
func (o EmailTemplateContractPropertiesResponsePtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailTemplateContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Email Template Parameter contract.
type EmailTemplateParametersContractProperties struct {
	// Template parameter description.
	Description *string `pulumi:"description"`
	// Template parameter name.
	Name *string `pulumi:"name"`
	// Template parameter title.
	Title *string `pulumi:"title"`
}

// EmailTemplateParametersContractPropertiesInput is an input type that accepts EmailTemplateParametersContractPropertiesArgs and EmailTemplateParametersContractPropertiesOutput values.
// You can construct a concrete instance of `EmailTemplateParametersContractPropertiesInput` via:
//
//          EmailTemplateParametersContractPropertiesArgs{...}
type EmailTemplateParametersContractPropertiesInput interface {
	pulumi.Input

	ToEmailTemplateParametersContractPropertiesOutput() EmailTemplateParametersContractPropertiesOutput
	ToEmailTemplateParametersContractPropertiesOutputWithContext(context.Context) EmailTemplateParametersContractPropertiesOutput
}

// Email Template Parameter contract.
type EmailTemplateParametersContractPropertiesArgs struct {
	// Template parameter description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Template parameter name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Template parameter title.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (EmailTemplateParametersContractPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailTemplateParametersContractProperties)(nil)).Elem()
}

func (i EmailTemplateParametersContractPropertiesArgs) ToEmailTemplateParametersContractPropertiesOutput() EmailTemplateParametersContractPropertiesOutput {
	return i.ToEmailTemplateParametersContractPropertiesOutputWithContext(context.Background())
}

func (i EmailTemplateParametersContractPropertiesArgs) ToEmailTemplateParametersContractPropertiesOutputWithContext(ctx context.Context) EmailTemplateParametersContractPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailTemplateParametersContractPropertiesOutput)
}

// EmailTemplateParametersContractPropertiesArrayInput is an input type that accepts EmailTemplateParametersContractPropertiesArray and EmailTemplateParametersContractPropertiesArrayOutput values.
// You can construct a concrete instance of `EmailTemplateParametersContractPropertiesArrayInput` via:
//
//          EmailTemplateParametersContractPropertiesArray{ EmailTemplateParametersContractPropertiesArgs{...} }
type EmailTemplateParametersContractPropertiesArrayInput interface {
	pulumi.Input

	ToEmailTemplateParametersContractPropertiesArrayOutput() EmailTemplateParametersContractPropertiesArrayOutput
	ToEmailTemplateParametersContractPropertiesArrayOutputWithContext(context.Context) EmailTemplateParametersContractPropertiesArrayOutput
}

type EmailTemplateParametersContractPropertiesArray []EmailTemplateParametersContractPropertiesInput

func (EmailTemplateParametersContractPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailTemplateParametersContractProperties)(nil)).Elem()
}

func (i EmailTemplateParametersContractPropertiesArray) ToEmailTemplateParametersContractPropertiesArrayOutput() EmailTemplateParametersContractPropertiesArrayOutput {
	return i.ToEmailTemplateParametersContractPropertiesArrayOutputWithContext(context.Background())
}

func (i EmailTemplateParametersContractPropertiesArray) ToEmailTemplateParametersContractPropertiesArrayOutputWithContext(ctx context.Context) EmailTemplateParametersContractPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailTemplateParametersContractPropertiesArrayOutput)
}

// Email Template Parameter contract.
type EmailTemplateParametersContractPropertiesOutput struct{ *pulumi.OutputState }

func (EmailTemplateParametersContractPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailTemplateParametersContractProperties)(nil)).Elem()
}

func (o EmailTemplateParametersContractPropertiesOutput) ToEmailTemplateParametersContractPropertiesOutput() EmailTemplateParametersContractPropertiesOutput {
	return o
}

func (o EmailTemplateParametersContractPropertiesOutput) ToEmailTemplateParametersContractPropertiesOutputWithContext(ctx context.Context) EmailTemplateParametersContractPropertiesOutput {
	return o
}

// Template parameter description.
func (o EmailTemplateParametersContractPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailTemplateParametersContractProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Template parameter name.
func (o EmailTemplateParametersContractPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailTemplateParametersContractProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Template parameter title.
func (o EmailTemplateParametersContractPropertiesOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailTemplateParametersContractProperties) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type EmailTemplateParametersContractPropertiesArrayOutput struct{ *pulumi.OutputState }

func (EmailTemplateParametersContractPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailTemplateParametersContractProperties)(nil)).Elem()
}

func (o EmailTemplateParametersContractPropertiesArrayOutput) ToEmailTemplateParametersContractPropertiesArrayOutput() EmailTemplateParametersContractPropertiesArrayOutput {
	return o
}

func (o EmailTemplateParametersContractPropertiesArrayOutput) ToEmailTemplateParametersContractPropertiesArrayOutputWithContext(ctx context.Context) EmailTemplateParametersContractPropertiesArrayOutput {
	return o
}

func (o EmailTemplateParametersContractPropertiesArrayOutput) Index(i pulumi.IntInput) EmailTemplateParametersContractPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EmailTemplateParametersContractProperties {
		return vs[0].([]EmailTemplateParametersContractProperties)[vs[1].(int)]
	}).(EmailTemplateParametersContractPropertiesOutput)
}

// Email Template Parameter contract.
type EmailTemplateParametersContractPropertiesResponse struct {
	// Template parameter description.
	Description *string `pulumi:"description"`
	// Template parameter name.
	Name *string `pulumi:"name"`
	// Template parameter title.
	Title *string `pulumi:"title"`
}

// EmailTemplateParametersContractPropertiesResponseInput is an input type that accepts EmailTemplateParametersContractPropertiesResponseArgs and EmailTemplateParametersContractPropertiesResponseOutput values.
// You can construct a concrete instance of `EmailTemplateParametersContractPropertiesResponseInput` via:
//
//          EmailTemplateParametersContractPropertiesResponseArgs{...}
type EmailTemplateParametersContractPropertiesResponseInput interface {
	pulumi.Input

	ToEmailTemplateParametersContractPropertiesResponseOutput() EmailTemplateParametersContractPropertiesResponseOutput
	ToEmailTemplateParametersContractPropertiesResponseOutputWithContext(context.Context) EmailTemplateParametersContractPropertiesResponseOutput
}

// Email Template Parameter contract.
type EmailTemplateParametersContractPropertiesResponseArgs struct {
	// Template parameter description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Template parameter name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Template parameter title.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (EmailTemplateParametersContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailTemplateParametersContractPropertiesResponse)(nil)).Elem()
}

func (i EmailTemplateParametersContractPropertiesResponseArgs) ToEmailTemplateParametersContractPropertiesResponseOutput() EmailTemplateParametersContractPropertiesResponseOutput {
	return i.ToEmailTemplateParametersContractPropertiesResponseOutputWithContext(context.Background())
}

func (i EmailTemplateParametersContractPropertiesResponseArgs) ToEmailTemplateParametersContractPropertiesResponseOutputWithContext(ctx context.Context) EmailTemplateParametersContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailTemplateParametersContractPropertiesResponseOutput)
}

// EmailTemplateParametersContractPropertiesResponseArrayInput is an input type that accepts EmailTemplateParametersContractPropertiesResponseArray and EmailTemplateParametersContractPropertiesResponseArrayOutput values.
// You can construct a concrete instance of `EmailTemplateParametersContractPropertiesResponseArrayInput` via:
//
//          EmailTemplateParametersContractPropertiesResponseArray{ EmailTemplateParametersContractPropertiesResponseArgs{...} }
type EmailTemplateParametersContractPropertiesResponseArrayInput interface {
	pulumi.Input

	ToEmailTemplateParametersContractPropertiesResponseArrayOutput() EmailTemplateParametersContractPropertiesResponseArrayOutput
	ToEmailTemplateParametersContractPropertiesResponseArrayOutputWithContext(context.Context) EmailTemplateParametersContractPropertiesResponseArrayOutput
}

type EmailTemplateParametersContractPropertiesResponseArray []EmailTemplateParametersContractPropertiesResponseInput

func (EmailTemplateParametersContractPropertiesResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailTemplateParametersContractPropertiesResponse)(nil)).Elem()
}

func (i EmailTemplateParametersContractPropertiesResponseArray) ToEmailTemplateParametersContractPropertiesResponseArrayOutput() EmailTemplateParametersContractPropertiesResponseArrayOutput {
	return i.ToEmailTemplateParametersContractPropertiesResponseArrayOutputWithContext(context.Background())
}

func (i EmailTemplateParametersContractPropertiesResponseArray) ToEmailTemplateParametersContractPropertiesResponseArrayOutputWithContext(ctx context.Context) EmailTemplateParametersContractPropertiesResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailTemplateParametersContractPropertiesResponseArrayOutput)
}

// Email Template Parameter contract.
type EmailTemplateParametersContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (EmailTemplateParametersContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailTemplateParametersContractPropertiesResponse)(nil)).Elem()
}

func (o EmailTemplateParametersContractPropertiesResponseOutput) ToEmailTemplateParametersContractPropertiesResponseOutput() EmailTemplateParametersContractPropertiesResponseOutput {
	return o
}

func (o EmailTemplateParametersContractPropertiesResponseOutput) ToEmailTemplateParametersContractPropertiesResponseOutputWithContext(ctx context.Context) EmailTemplateParametersContractPropertiesResponseOutput {
	return o
}

// Template parameter description.
func (o EmailTemplateParametersContractPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailTemplateParametersContractPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Template parameter name.
func (o EmailTemplateParametersContractPropertiesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailTemplateParametersContractPropertiesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Template parameter title.
func (o EmailTemplateParametersContractPropertiesResponseOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailTemplateParametersContractPropertiesResponse) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type EmailTemplateParametersContractPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (EmailTemplateParametersContractPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EmailTemplateParametersContractPropertiesResponse)(nil)).Elem()
}

func (o EmailTemplateParametersContractPropertiesResponseArrayOutput) ToEmailTemplateParametersContractPropertiesResponseArrayOutput() EmailTemplateParametersContractPropertiesResponseArrayOutput {
	return o
}

func (o EmailTemplateParametersContractPropertiesResponseArrayOutput) ToEmailTemplateParametersContractPropertiesResponseArrayOutputWithContext(ctx context.Context) EmailTemplateParametersContractPropertiesResponseArrayOutput {
	return o
}

func (o EmailTemplateParametersContractPropertiesResponseArrayOutput) Index(i pulumi.IntInput) EmailTemplateParametersContractPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EmailTemplateParametersContractPropertiesResponse {
		return vs[0].([]EmailTemplateParametersContractPropertiesResponse)[vs[1].(int)]
	}).(EmailTemplateParametersContractPropertiesResponseOutput)
}

// Contract details.
type GroupType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Group entity contract properties.
	Properties GroupContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// GroupTypeInput is an input type that accepts GroupTypeArgs and GroupTypeOutput values.
// You can construct a concrete instance of `GroupTypeInput` via:
//
//          GroupTypeArgs{...}
type GroupTypeInput interface {
	pulumi.Input

	ToGroupTypeOutput() GroupTypeOutput
	ToGroupTypeOutputWithContext(context.Context) GroupTypeOutput
}

// Contract details.
type GroupTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Group entity contract properties.
	Properties GroupContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GroupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupType)(nil)).Elem()
}

func (i GroupTypeArgs) ToGroupTypeOutput() GroupTypeOutput {
	return i.ToGroupTypeOutputWithContext(context.Background())
}

func (i GroupTypeArgs) ToGroupTypeOutputWithContext(ctx context.Context) GroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupTypeOutput)
}

// Contract details.
type GroupTypeOutput struct{ *pulumi.OutputState }

func (GroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupType)(nil)).Elem()
}

func (o GroupTypeOutput) ToGroupTypeOutput() GroupTypeOutput {
	return o
}

func (o GroupTypeOutput) ToGroupTypeOutputWithContext(ctx context.Context) GroupTypeOutput {
	return o
}

// Resource name.
func (o GroupTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GroupType) string { return v.Name }).(pulumi.StringOutput)
}

// Group entity contract properties.
func (o GroupTypeOutput) Properties() GroupContractPropertiesResponseOutput {
	return o.ApplyT(func(v GroupType) GroupContractPropertiesResponse { return v.Properties }).(GroupContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o GroupTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GroupType) string { return v.Type }).(pulumi.StringOutput)
}

// Group contract Properties.
type GroupContractPropertiesResponse struct {
	// true if the group is one of the three system groups (Administrators, Developers, or Guests); otherwise false.
	BuiltIn bool `pulumi:"builtIn"`
	// Group description. Can contain HTML formatting tags.
	Description *string `pulumi:"description"`
	// Group name.
	DisplayName string `pulumi:"displayName"`
	// For external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null.
	ExternalId *string `pulumi:"externalId"`
	// Group type.
	Type *string `pulumi:"type"`
}

// GroupContractPropertiesResponseInput is an input type that accepts GroupContractPropertiesResponseArgs and GroupContractPropertiesResponseOutput values.
// You can construct a concrete instance of `GroupContractPropertiesResponseInput` via:
//
//          GroupContractPropertiesResponseArgs{...}
type GroupContractPropertiesResponseInput interface {
	pulumi.Input

	ToGroupContractPropertiesResponseOutput() GroupContractPropertiesResponseOutput
	ToGroupContractPropertiesResponseOutputWithContext(context.Context) GroupContractPropertiesResponseOutput
}

// Group contract Properties.
type GroupContractPropertiesResponseArgs struct {
	// true if the group is one of the three system groups (Administrators, Developers, or Guests); otherwise false.
	BuiltIn pulumi.BoolInput `pulumi:"builtIn"`
	// Group description. Can contain HTML formatting tags.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Group name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// For external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null.
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	// Group type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GroupContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContractPropertiesResponse)(nil)).Elem()
}

func (i GroupContractPropertiesResponseArgs) ToGroupContractPropertiesResponseOutput() GroupContractPropertiesResponseOutput {
	return i.ToGroupContractPropertiesResponseOutputWithContext(context.Background())
}

func (i GroupContractPropertiesResponseArgs) ToGroupContractPropertiesResponseOutputWithContext(ctx context.Context) GroupContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContractPropertiesResponseOutput)
}

func (i GroupContractPropertiesResponseArgs) ToGroupContractPropertiesResponsePtrOutput() GroupContractPropertiesResponsePtrOutput {
	return i.ToGroupContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i GroupContractPropertiesResponseArgs) ToGroupContractPropertiesResponsePtrOutputWithContext(ctx context.Context) GroupContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContractPropertiesResponseOutput).ToGroupContractPropertiesResponsePtrOutputWithContext(ctx)
}

// GroupContractPropertiesResponsePtrInput is an input type that accepts GroupContractPropertiesResponseArgs, GroupContractPropertiesResponsePtr and GroupContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `GroupContractPropertiesResponsePtrInput` via:
//
//          GroupContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type GroupContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToGroupContractPropertiesResponsePtrOutput() GroupContractPropertiesResponsePtrOutput
	ToGroupContractPropertiesResponsePtrOutputWithContext(context.Context) GroupContractPropertiesResponsePtrOutput
}

type groupContractPropertiesResponsePtrType GroupContractPropertiesResponseArgs

func GroupContractPropertiesResponsePtr(v *GroupContractPropertiesResponseArgs) GroupContractPropertiesResponsePtrInput {
	return (*groupContractPropertiesResponsePtrType)(v)
}

func (*groupContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupContractPropertiesResponse)(nil)).Elem()
}

func (i *groupContractPropertiesResponsePtrType) ToGroupContractPropertiesResponsePtrOutput() GroupContractPropertiesResponsePtrOutput {
	return i.ToGroupContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *groupContractPropertiesResponsePtrType) ToGroupContractPropertiesResponsePtrOutputWithContext(ctx context.Context) GroupContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContractPropertiesResponsePtrOutput)
}

// GroupContractPropertiesResponseArrayInput is an input type that accepts GroupContractPropertiesResponseArray and GroupContractPropertiesResponseArrayOutput values.
// You can construct a concrete instance of `GroupContractPropertiesResponseArrayInput` via:
//
//          GroupContractPropertiesResponseArray{ GroupContractPropertiesResponseArgs{...} }
type GroupContractPropertiesResponseArrayInput interface {
	pulumi.Input

	ToGroupContractPropertiesResponseArrayOutput() GroupContractPropertiesResponseArrayOutput
	ToGroupContractPropertiesResponseArrayOutputWithContext(context.Context) GroupContractPropertiesResponseArrayOutput
}

type GroupContractPropertiesResponseArray []GroupContractPropertiesResponseInput

func (GroupContractPropertiesResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContractPropertiesResponse)(nil)).Elem()
}

func (i GroupContractPropertiesResponseArray) ToGroupContractPropertiesResponseArrayOutput() GroupContractPropertiesResponseArrayOutput {
	return i.ToGroupContractPropertiesResponseArrayOutputWithContext(context.Background())
}

func (i GroupContractPropertiesResponseArray) ToGroupContractPropertiesResponseArrayOutputWithContext(ctx context.Context) GroupContractPropertiesResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContractPropertiesResponseArrayOutput)
}

// Group contract Properties.
type GroupContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (GroupContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContractPropertiesResponse)(nil)).Elem()
}

func (o GroupContractPropertiesResponseOutput) ToGroupContractPropertiesResponseOutput() GroupContractPropertiesResponseOutput {
	return o
}

func (o GroupContractPropertiesResponseOutput) ToGroupContractPropertiesResponseOutputWithContext(ctx context.Context) GroupContractPropertiesResponseOutput {
	return o
}

func (o GroupContractPropertiesResponseOutput) ToGroupContractPropertiesResponsePtrOutput() GroupContractPropertiesResponsePtrOutput {
	return o.ToGroupContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o GroupContractPropertiesResponseOutput) ToGroupContractPropertiesResponsePtrOutputWithContext(ctx context.Context) GroupContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v GroupContractPropertiesResponse) *GroupContractPropertiesResponse {
		return &v
	}).(GroupContractPropertiesResponsePtrOutput)
}

// true if the group is one of the three system groups (Administrators, Developers, or Guests); otherwise false.
func (o GroupContractPropertiesResponseOutput) BuiltIn() pulumi.BoolOutput {
	return o.ApplyT(func(v GroupContractPropertiesResponse) bool { return v.BuiltIn }).(pulumi.BoolOutput)
}

// Group description. Can contain HTML formatting tags.
func (o GroupContractPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContractPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Group name.
func (o GroupContractPropertiesResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GroupContractPropertiesResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// For external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null.
func (o GroupContractPropertiesResponseOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContractPropertiesResponse) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// Group type.
func (o GroupContractPropertiesResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContractPropertiesResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GroupContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (GroupContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupContractPropertiesResponse)(nil)).Elem()
}

func (o GroupContractPropertiesResponsePtrOutput) ToGroupContractPropertiesResponsePtrOutput() GroupContractPropertiesResponsePtrOutput {
	return o
}

func (o GroupContractPropertiesResponsePtrOutput) ToGroupContractPropertiesResponsePtrOutputWithContext(ctx context.Context) GroupContractPropertiesResponsePtrOutput {
	return o
}

func (o GroupContractPropertiesResponsePtrOutput) Elem() GroupContractPropertiesResponseOutput {
	return o.ApplyT(func(v *GroupContractPropertiesResponse) GroupContractPropertiesResponse { return *v }).(GroupContractPropertiesResponseOutput)
}

// true if the group is one of the three system groups (Administrators, Developers, or Guests); otherwise false.
func (o GroupContractPropertiesResponsePtrOutput) BuiltIn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GroupContractPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.BuiltIn
	}).(pulumi.BoolPtrOutput)
}

// Group description. Can contain HTML formatting tags.
func (o GroupContractPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Group name.
func (o GroupContractPropertiesResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// For external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null.
func (o GroupContractPropertiesResponsePtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

// Group type.
func (o GroupContractPropertiesResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type GroupContractPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (GroupContractPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContractPropertiesResponse)(nil)).Elem()
}

func (o GroupContractPropertiesResponseArrayOutput) ToGroupContractPropertiesResponseArrayOutput() GroupContractPropertiesResponseArrayOutput {
	return o
}

func (o GroupContractPropertiesResponseArrayOutput) ToGroupContractPropertiesResponseArrayOutputWithContext(ctx context.Context) GroupContractPropertiesResponseArrayOutput {
	return o
}

func (o GroupContractPropertiesResponseArrayOutput) Index(i pulumi.IntInput) GroupContractPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupContractPropertiesResponse {
		return vs[0].([]GroupContractPropertiesResponse)[vs[1].(int)]
	}).(GroupContractPropertiesResponseOutput)
}

// Custom hostname configuration.
type HostnameConfiguration struct {
	// Certificate information.
	Certificate *CertificateInformation `pulumi:"certificate"`
	// Certificate Password.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to Proxy Hostname Type.
	DefaultSslBinding *bool `pulumi:"defaultSslBinding"`
	// Base64 Encoded certificate.
	EncodedCertificate *string `pulumi:"encodedCertificate"`
	// Hostname to configure on the Api Management service.
	HostName string `pulumi:"hostName"`
	// Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with MSI. The secret should be of type *application/x-pkcs12*
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Specify true to always negotiate client certificate on the hostname. Default Value is false.
	NegotiateClientCertificate *bool `pulumi:"negotiateClientCertificate"`
	// Hostname type.
	Type string `pulumi:"type"`
}

// HostnameConfigurationInput is an input type that accepts HostnameConfigurationArgs and HostnameConfigurationOutput values.
// You can construct a concrete instance of `HostnameConfigurationInput` via:
//
//          HostnameConfigurationArgs{...}
type HostnameConfigurationInput interface {
	pulumi.Input

	ToHostnameConfigurationOutput() HostnameConfigurationOutput
	ToHostnameConfigurationOutputWithContext(context.Context) HostnameConfigurationOutput
}

// Custom hostname configuration.
type HostnameConfigurationArgs struct {
	// Certificate information.
	Certificate CertificateInformationPtrInput `pulumi:"certificate"`
	// Certificate Password.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	// Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to Proxy Hostname Type.
	DefaultSslBinding pulumi.BoolPtrInput `pulumi:"defaultSslBinding"`
	// Base64 Encoded certificate.
	EncodedCertificate pulumi.StringPtrInput `pulumi:"encodedCertificate"`
	// Hostname to configure on the Api Management service.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with MSI. The secret should be of type *application/x-pkcs12*
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Specify true to always negotiate client certificate on the hostname. Default Value is false.
	NegotiateClientCertificate pulumi.BoolPtrInput `pulumi:"negotiateClientCertificate"`
	// Hostname type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HostnameConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostnameConfiguration)(nil)).Elem()
}

func (i HostnameConfigurationArgs) ToHostnameConfigurationOutput() HostnameConfigurationOutput {
	return i.ToHostnameConfigurationOutputWithContext(context.Background())
}

func (i HostnameConfigurationArgs) ToHostnameConfigurationOutputWithContext(ctx context.Context) HostnameConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostnameConfigurationOutput)
}

// HostnameConfigurationArrayInput is an input type that accepts HostnameConfigurationArray and HostnameConfigurationArrayOutput values.
// You can construct a concrete instance of `HostnameConfigurationArrayInput` via:
//
//          HostnameConfigurationArray{ HostnameConfigurationArgs{...} }
type HostnameConfigurationArrayInput interface {
	pulumi.Input

	ToHostnameConfigurationArrayOutput() HostnameConfigurationArrayOutput
	ToHostnameConfigurationArrayOutputWithContext(context.Context) HostnameConfigurationArrayOutput
}

type HostnameConfigurationArray []HostnameConfigurationInput

func (HostnameConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostnameConfiguration)(nil)).Elem()
}

func (i HostnameConfigurationArray) ToHostnameConfigurationArrayOutput() HostnameConfigurationArrayOutput {
	return i.ToHostnameConfigurationArrayOutputWithContext(context.Background())
}

func (i HostnameConfigurationArray) ToHostnameConfigurationArrayOutputWithContext(ctx context.Context) HostnameConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostnameConfigurationArrayOutput)
}

// Custom hostname configuration.
type HostnameConfigurationOutput struct{ *pulumi.OutputState }

func (HostnameConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostnameConfiguration)(nil)).Elem()
}

func (o HostnameConfigurationOutput) ToHostnameConfigurationOutput() HostnameConfigurationOutput {
	return o
}

func (o HostnameConfigurationOutput) ToHostnameConfigurationOutputWithContext(ctx context.Context) HostnameConfigurationOutput {
	return o
}

// Certificate information.
func (o HostnameConfigurationOutput) Certificate() CertificateInformationPtrOutput {
	return o.ApplyT(func(v HostnameConfiguration) *CertificateInformation { return v.Certificate }).(CertificateInformationPtrOutput)
}

// Certificate Password.
func (o HostnameConfigurationOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostnameConfiguration) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

// Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to Proxy Hostname Type.
func (o HostnameConfigurationOutput) DefaultSslBinding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostnameConfiguration) *bool { return v.DefaultSslBinding }).(pulumi.BoolPtrOutput)
}

// Base64 Encoded certificate.
func (o HostnameConfigurationOutput) EncodedCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostnameConfiguration) *string { return v.EncodedCertificate }).(pulumi.StringPtrOutput)
}

// Hostname to configure on the Api Management service.
func (o HostnameConfigurationOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v HostnameConfiguration) string { return v.HostName }).(pulumi.StringOutput)
}

// Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with MSI. The secret should be of type *application/x-pkcs12*
func (o HostnameConfigurationOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostnameConfiguration) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Specify true to always negotiate client certificate on the hostname. Default Value is false.
func (o HostnameConfigurationOutput) NegotiateClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostnameConfiguration) *bool { return v.NegotiateClientCertificate }).(pulumi.BoolPtrOutput)
}

// Hostname type.
func (o HostnameConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HostnameConfiguration) string { return v.Type }).(pulumi.StringOutput)
}

type HostnameConfigurationArrayOutput struct{ *pulumi.OutputState }

func (HostnameConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostnameConfiguration)(nil)).Elem()
}

func (o HostnameConfigurationArrayOutput) ToHostnameConfigurationArrayOutput() HostnameConfigurationArrayOutput {
	return o
}

func (o HostnameConfigurationArrayOutput) ToHostnameConfigurationArrayOutputWithContext(ctx context.Context) HostnameConfigurationArrayOutput {
	return o
}

func (o HostnameConfigurationArrayOutput) Index(i pulumi.IntInput) HostnameConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostnameConfiguration {
		return vs[0].([]HostnameConfiguration)[vs[1].(int)]
	}).(HostnameConfigurationOutput)
}

// Custom hostname configuration.
type HostnameConfigurationResponse struct {
	// Certificate information.
	Certificate *CertificateInformationResponse `pulumi:"certificate"`
	// Certificate Password.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to Proxy Hostname Type.
	DefaultSslBinding *bool `pulumi:"defaultSslBinding"`
	// Base64 Encoded certificate.
	EncodedCertificate *string `pulumi:"encodedCertificate"`
	// Hostname to configure on the Api Management service.
	HostName string `pulumi:"hostName"`
	// Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with MSI. The secret should be of type *application/x-pkcs12*
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Specify true to always negotiate client certificate on the hostname. Default Value is false.
	NegotiateClientCertificate *bool `pulumi:"negotiateClientCertificate"`
	// Hostname type.
	Type string `pulumi:"type"`
}

// HostnameConfigurationResponseInput is an input type that accepts HostnameConfigurationResponseArgs and HostnameConfigurationResponseOutput values.
// You can construct a concrete instance of `HostnameConfigurationResponseInput` via:
//
//          HostnameConfigurationResponseArgs{...}
type HostnameConfigurationResponseInput interface {
	pulumi.Input

	ToHostnameConfigurationResponseOutput() HostnameConfigurationResponseOutput
	ToHostnameConfigurationResponseOutputWithContext(context.Context) HostnameConfigurationResponseOutput
}

// Custom hostname configuration.
type HostnameConfigurationResponseArgs struct {
	// Certificate information.
	Certificate CertificateInformationResponsePtrInput `pulumi:"certificate"`
	// Certificate Password.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	// Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to Proxy Hostname Type.
	DefaultSslBinding pulumi.BoolPtrInput `pulumi:"defaultSslBinding"`
	// Base64 Encoded certificate.
	EncodedCertificate pulumi.StringPtrInput `pulumi:"encodedCertificate"`
	// Hostname to configure on the Api Management service.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with MSI. The secret should be of type *application/x-pkcs12*
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Specify true to always negotiate client certificate on the hostname. Default Value is false.
	NegotiateClientCertificate pulumi.BoolPtrInput `pulumi:"negotiateClientCertificate"`
	// Hostname type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HostnameConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostnameConfigurationResponse)(nil)).Elem()
}

func (i HostnameConfigurationResponseArgs) ToHostnameConfigurationResponseOutput() HostnameConfigurationResponseOutput {
	return i.ToHostnameConfigurationResponseOutputWithContext(context.Background())
}

func (i HostnameConfigurationResponseArgs) ToHostnameConfigurationResponseOutputWithContext(ctx context.Context) HostnameConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostnameConfigurationResponseOutput)
}

// HostnameConfigurationResponseArrayInput is an input type that accepts HostnameConfigurationResponseArray and HostnameConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `HostnameConfigurationResponseArrayInput` via:
//
//          HostnameConfigurationResponseArray{ HostnameConfigurationResponseArgs{...} }
type HostnameConfigurationResponseArrayInput interface {
	pulumi.Input

	ToHostnameConfigurationResponseArrayOutput() HostnameConfigurationResponseArrayOutput
	ToHostnameConfigurationResponseArrayOutputWithContext(context.Context) HostnameConfigurationResponseArrayOutput
}

type HostnameConfigurationResponseArray []HostnameConfigurationResponseInput

func (HostnameConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostnameConfigurationResponse)(nil)).Elem()
}

func (i HostnameConfigurationResponseArray) ToHostnameConfigurationResponseArrayOutput() HostnameConfigurationResponseArrayOutput {
	return i.ToHostnameConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i HostnameConfigurationResponseArray) ToHostnameConfigurationResponseArrayOutputWithContext(ctx context.Context) HostnameConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostnameConfigurationResponseArrayOutput)
}

// Custom hostname configuration.
type HostnameConfigurationResponseOutput struct{ *pulumi.OutputState }

func (HostnameConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostnameConfigurationResponse)(nil)).Elem()
}

func (o HostnameConfigurationResponseOutput) ToHostnameConfigurationResponseOutput() HostnameConfigurationResponseOutput {
	return o
}

func (o HostnameConfigurationResponseOutput) ToHostnameConfigurationResponseOutputWithContext(ctx context.Context) HostnameConfigurationResponseOutput {
	return o
}

// Certificate information.
func (o HostnameConfigurationResponseOutput) Certificate() CertificateInformationResponsePtrOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) *CertificateInformationResponse { return v.Certificate }).(CertificateInformationResponsePtrOutput)
}

// Certificate Password.
func (o HostnameConfigurationResponseOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

// Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to Proxy Hostname Type.
func (o HostnameConfigurationResponseOutput) DefaultSslBinding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) *bool { return v.DefaultSslBinding }).(pulumi.BoolPtrOutput)
}

// Base64 Encoded certificate.
func (o HostnameConfigurationResponseOutput) EncodedCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) *string { return v.EncodedCertificate }).(pulumi.StringPtrOutput)
}

// Hostname to configure on the Api Management service.
func (o HostnameConfigurationResponseOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) string { return v.HostName }).(pulumi.StringOutput)
}

// Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with MSI. The secret should be of type *application/x-pkcs12*
func (o HostnameConfigurationResponseOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Specify true to always negotiate client certificate on the hostname. Default Value is false.
func (o HostnameConfigurationResponseOutput) NegotiateClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) *bool { return v.NegotiateClientCertificate }).(pulumi.BoolPtrOutput)
}

// Hostname type.
func (o HostnameConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type HostnameConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (HostnameConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostnameConfigurationResponse)(nil)).Elem()
}

func (o HostnameConfigurationResponseArrayOutput) ToHostnameConfigurationResponseArrayOutput() HostnameConfigurationResponseArrayOutput {
	return o
}

func (o HostnameConfigurationResponseArrayOutput) ToHostnameConfigurationResponseArrayOutputWithContext(ctx context.Context) HostnameConfigurationResponseArrayOutput {
	return o
}

func (o HostnameConfigurationResponseArrayOutput) Index(i pulumi.IntInput) HostnameConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostnameConfigurationResponse {
		return vs[0].([]HostnameConfigurationResponse)[vs[1].(int)]
	}).(HostnameConfigurationResponseOutput)
}

// Http message diagnostic settings.
type HttpMessageDiagnostic struct {
	// Body logging settings.
	Body *BodyDiagnosticSettings `pulumi:"body"`
	// Array of HTTP Headers to log.
	Headers []string `pulumi:"headers"`
}

// HttpMessageDiagnosticInput is an input type that accepts HttpMessageDiagnosticArgs and HttpMessageDiagnosticOutput values.
// You can construct a concrete instance of `HttpMessageDiagnosticInput` via:
//
//          HttpMessageDiagnosticArgs{...}
type HttpMessageDiagnosticInput interface {
	pulumi.Input

	ToHttpMessageDiagnosticOutput() HttpMessageDiagnosticOutput
	ToHttpMessageDiagnosticOutputWithContext(context.Context) HttpMessageDiagnosticOutput
}

// Http message diagnostic settings.
type HttpMessageDiagnosticArgs struct {
	// Body logging settings.
	Body BodyDiagnosticSettingsPtrInput `pulumi:"body"`
	// Array of HTTP Headers to log.
	Headers pulumi.StringArrayInput `pulumi:"headers"`
}

func (HttpMessageDiagnosticArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpMessageDiagnostic)(nil)).Elem()
}

func (i HttpMessageDiagnosticArgs) ToHttpMessageDiagnosticOutput() HttpMessageDiagnosticOutput {
	return i.ToHttpMessageDiagnosticOutputWithContext(context.Background())
}

func (i HttpMessageDiagnosticArgs) ToHttpMessageDiagnosticOutputWithContext(ctx context.Context) HttpMessageDiagnosticOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpMessageDiagnosticOutput)
}

func (i HttpMessageDiagnosticArgs) ToHttpMessageDiagnosticPtrOutput() HttpMessageDiagnosticPtrOutput {
	return i.ToHttpMessageDiagnosticPtrOutputWithContext(context.Background())
}

func (i HttpMessageDiagnosticArgs) ToHttpMessageDiagnosticPtrOutputWithContext(ctx context.Context) HttpMessageDiagnosticPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpMessageDiagnosticOutput).ToHttpMessageDiagnosticPtrOutputWithContext(ctx)
}

// HttpMessageDiagnosticPtrInput is an input type that accepts HttpMessageDiagnosticArgs, HttpMessageDiagnosticPtr and HttpMessageDiagnosticPtrOutput values.
// You can construct a concrete instance of `HttpMessageDiagnosticPtrInput` via:
//
//          HttpMessageDiagnosticArgs{...}
//
//  or:
//
//          nil
type HttpMessageDiagnosticPtrInput interface {
	pulumi.Input

	ToHttpMessageDiagnosticPtrOutput() HttpMessageDiagnosticPtrOutput
	ToHttpMessageDiagnosticPtrOutputWithContext(context.Context) HttpMessageDiagnosticPtrOutput
}

type httpMessageDiagnosticPtrType HttpMessageDiagnosticArgs

func HttpMessageDiagnosticPtr(v *HttpMessageDiagnosticArgs) HttpMessageDiagnosticPtrInput {
	return (*httpMessageDiagnosticPtrType)(v)
}

func (*httpMessageDiagnosticPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpMessageDiagnostic)(nil)).Elem()
}

func (i *httpMessageDiagnosticPtrType) ToHttpMessageDiagnosticPtrOutput() HttpMessageDiagnosticPtrOutput {
	return i.ToHttpMessageDiagnosticPtrOutputWithContext(context.Background())
}

func (i *httpMessageDiagnosticPtrType) ToHttpMessageDiagnosticPtrOutputWithContext(ctx context.Context) HttpMessageDiagnosticPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpMessageDiagnosticPtrOutput)
}

// Http message diagnostic settings.
type HttpMessageDiagnosticOutput struct{ *pulumi.OutputState }

func (HttpMessageDiagnosticOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpMessageDiagnostic)(nil)).Elem()
}

func (o HttpMessageDiagnosticOutput) ToHttpMessageDiagnosticOutput() HttpMessageDiagnosticOutput {
	return o
}

func (o HttpMessageDiagnosticOutput) ToHttpMessageDiagnosticOutputWithContext(ctx context.Context) HttpMessageDiagnosticOutput {
	return o
}

func (o HttpMessageDiagnosticOutput) ToHttpMessageDiagnosticPtrOutput() HttpMessageDiagnosticPtrOutput {
	return o.ToHttpMessageDiagnosticPtrOutputWithContext(context.Background())
}

func (o HttpMessageDiagnosticOutput) ToHttpMessageDiagnosticPtrOutputWithContext(ctx context.Context) HttpMessageDiagnosticPtrOutput {
	return o.ApplyT(func(v HttpMessageDiagnostic) *HttpMessageDiagnostic {
		return &v
	}).(HttpMessageDiagnosticPtrOutput)
}

// Body logging settings.
func (o HttpMessageDiagnosticOutput) Body() BodyDiagnosticSettingsPtrOutput {
	return o.ApplyT(func(v HttpMessageDiagnostic) *BodyDiagnosticSettings { return v.Body }).(BodyDiagnosticSettingsPtrOutput)
}

// Array of HTTP Headers to log.
func (o HttpMessageDiagnosticOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HttpMessageDiagnostic) []string { return v.Headers }).(pulumi.StringArrayOutput)
}

type HttpMessageDiagnosticPtrOutput struct{ *pulumi.OutputState }

func (HttpMessageDiagnosticPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpMessageDiagnostic)(nil)).Elem()
}

func (o HttpMessageDiagnosticPtrOutput) ToHttpMessageDiagnosticPtrOutput() HttpMessageDiagnosticPtrOutput {
	return o
}

func (o HttpMessageDiagnosticPtrOutput) ToHttpMessageDiagnosticPtrOutputWithContext(ctx context.Context) HttpMessageDiagnosticPtrOutput {
	return o
}

func (o HttpMessageDiagnosticPtrOutput) Elem() HttpMessageDiagnosticOutput {
	return o.ApplyT(func(v *HttpMessageDiagnostic) HttpMessageDiagnostic { return *v }).(HttpMessageDiagnosticOutput)
}

// Body logging settings.
func (o HttpMessageDiagnosticPtrOutput) Body() BodyDiagnosticSettingsPtrOutput {
	return o.ApplyT(func(v *HttpMessageDiagnostic) *BodyDiagnosticSettings {
		if v == nil {
			return nil
		}
		return v.Body
	}).(BodyDiagnosticSettingsPtrOutput)
}

// Array of HTTP Headers to log.
func (o HttpMessageDiagnosticPtrOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HttpMessageDiagnostic) []string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringArrayOutput)
}

// Http message diagnostic settings.
type HttpMessageDiagnosticResponse struct {
	// Body logging settings.
	Body *BodyDiagnosticSettingsResponse `pulumi:"body"`
	// Array of HTTP Headers to log.
	Headers []string `pulumi:"headers"`
}

// HttpMessageDiagnosticResponseInput is an input type that accepts HttpMessageDiagnosticResponseArgs and HttpMessageDiagnosticResponseOutput values.
// You can construct a concrete instance of `HttpMessageDiagnosticResponseInput` via:
//
//          HttpMessageDiagnosticResponseArgs{...}
type HttpMessageDiagnosticResponseInput interface {
	pulumi.Input

	ToHttpMessageDiagnosticResponseOutput() HttpMessageDiagnosticResponseOutput
	ToHttpMessageDiagnosticResponseOutputWithContext(context.Context) HttpMessageDiagnosticResponseOutput
}

// Http message diagnostic settings.
type HttpMessageDiagnosticResponseArgs struct {
	// Body logging settings.
	Body BodyDiagnosticSettingsResponsePtrInput `pulumi:"body"`
	// Array of HTTP Headers to log.
	Headers pulumi.StringArrayInput `pulumi:"headers"`
}

func (HttpMessageDiagnosticResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpMessageDiagnosticResponse)(nil)).Elem()
}

func (i HttpMessageDiagnosticResponseArgs) ToHttpMessageDiagnosticResponseOutput() HttpMessageDiagnosticResponseOutput {
	return i.ToHttpMessageDiagnosticResponseOutputWithContext(context.Background())
}

func (i HttpMessageDiagnosticResponseArgs) ToHttpMessageDiagnosticResponseOutputWithContext(ctx context.Context) HttpMessageDiagnosticResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpMessageDiagnosticResponseOutput)
}

func (i HttpMessageDiagnosticResponseArgs) ToHttpMessageDiagnosticResponsePtrOutput() HttpMessageDiagnosticResponsePtrOutput {
	return i.ToHttpMessageDiagnosticResponsePtrOutputWithContext(context.Background())
}

func (i HttpMessageDiagnosticResponseArgs) ToHttpMessageDiagnosticResponsePtrOutputWithContext(ctx context.Context) HttpMessageDiagnosticResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpMessageDiagnosticResponseOutput).ToHttpMessageDiagnosticResponsePtrOutputWithContext(ctx)
}

// HttpMessageDiagnosticResponsePtrInput is an input type that accepts HttpMessageDiagnosticResponseArgs, HttpMessageDiagnosticResponsePtr and HttpMessageDiagnosticResponsePtrOutput values.
// You can construct a concrete instance of `HttpMessageDiagnosticResponsePtrInput` via:
//
//          HttpMessageDiagnosticResponseArgs{...}
//
//  or:
//
//          nil
type HttpMessageDiagnosticResponsePtrInput interface {
	pulumi.Input

	ToHttpMessageDiagnosticResponsePtrOutput() HttpMessageDiagnosticResponsePtrOutput
	ToHttpMessageDiagnosticResponsePtrOutputWithContext(context.Context) HttpMessageDiagnosticResponsePtrOutput
}

type httpMessageDiagnosticResponsePtrType HttpMessageDiagnosticResponseArgs

func HttpMessageDiagnosticResponsePtr(v *HttpMessageDiagnosticResponseArgs) HttpMessageDiagnosticResponsePtrInput {
	return (*httpMessageDiagnosticResponsePtrType)(v)
}

func (*httpMessageDiagnosticResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpMessageDiagnosticResponse)(nil)).Elem()
}

func (i *httpMessageDiagnosticResponsePtrType) ToHttpMessageDiagnosticResponsePtrOutput() HttpMessageDiagnosticResponsePtrOutput {
	return i.ToHttpMessageDiagnosticResponsePtrOutputWithContext(context.Background())
}

func (i *httpMessageDiagnosticResponsePtrType) ToHttpMessageDiagnosticResponsePtrOutputWithContext(ctx context.Context) HttpMessageDiagnosticResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpMessageDiagnosticResponsePtrOutput)
}

// Http message diagnostic settings.
type HttpMessageDiagnosticResponseOutput struct{ *pulumi.OutputState }

func (HttpMessageDiagnosticResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpMessageDiagnosticResponse)(nil)).Elem()
}

func (o HttpMessageDiagnosticResponseOutput) ToHttpMessageDiagnosticResponseOutput() HttpMessageDiagnosticResponseOutput {
	return o
}

func (o HttpMessageDiagnosticResponseOutput) ToHttpMessageDiagnosticResponseOutputWithContext(ctx context.Context) HttpMessageDiagnosticResponseOutput {
	return o
}

func (o HttpMessageDiagnosticResponseOutput) ToHttpMessageDiagnosticResponsePtrOutput() HttpMessageDiagnosticResponsePtrOutput {
	return o.ToHttpMessageDiagnosticResponsePtrOutputWithContext(context.Background())
}

func (o HttpMessageDiagnosticResponseOutput) ToHttpMessageDiagnosticResponsePtrOutputWithContext(ctx context.Context) HttpMessageDiagnosticResponsePtrOutput {
	return o.ApplyT(func(v HttpMessageDiagnosticResponse) *HttpMessageDiagnosticResponse {
		return &v
	}).(HttpMessageDiagnosticResponsePtrOutput)
}

// Body logging settings.
func (o HttpMessageDiagnosticResponseOutput) Body() BodyDiagnosticSettingsResponsePtrOutput {
	return o.ApplyT(func(v HttpMessageDiagnosticResponse) *BodyDiagnosticSettingsResponse { return v.Body }).(BodyDiagnosticSettingsResponsePtrOutput)
}

// Array of HTTP Headers to log.
func (o HttpMessageDiagnosticResponseOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HttpMessageDiagnosticResponse) []string { return v.Headers }).(pulumi.StringArrayOutput)
}

type HttpMessageDiagnosticResponsePtrOutput struct{ *pulumi.OutputState }

func (HttpMessageDiagnosticResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpMessageDiagnosticResponse)(nil)).Elem()
}

func (o HttpMessageDiagnosticResponsePtrOutput) ToHttpMessageDiagnosticResponsePtrOutput() HttpMessageDiagnosticResponsePtrOutput {
	return o
}

func (o HttpMessageDiagnosticResponsePtrOutput) ToHttpMessageDiagnosticResponsePtrOutputWithContext(ctx context.Context) HttpMessageDiagnosticResponsePtrOutput {
	return o
}

func (o HttpMessageDiagnosticResponsePtrOutput) Elem() HttpMessageDiagnosticResponseOutput {
	return o.ApplyT(func(v *HttpMessageDiagnosticResponse) HttpMessageDiagnosticResponse { return *v }).(HttpMessageDiagnosticResponseOutput)
}

// Body logging settings.
func (o HttpMessageDiagnosticResponsePtrOutput) Body() BodyDiagnosticSettingsResponsePtrOutput {
	return o.ApplyT(func(v *HttpMessageDiagnosticResponse) *BodyDiagnosticSettingsResponse {
		if v == nil {
			return nil
		}
		return v.Body
	}).(BodyDiagnosticSettingsResponsePtrOutput)
}

// Array of HTTP Headers to log.
func (o HttpMessageDiagnosticResponsePtrOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HttpMessageDiagnosticResponse) []string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringArrayOutput)
}

// Identity Provider details.
type IdentityProviderType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Identity Provider contract properties.
	Properties IdentityProviderContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// IdentityProviderTypeInput is an input type that accepts IdentityProviderTypeArgs and IdentityProviderTypeOutput values.
// You can construct a concrete instance of `IdentityProviderTypeInput` via:
//
//          IdentityProviderTypeArgs{...}
type IdentityProviderTypeInput interface {
	pulumi.Input

	ToIdentityProviderTypeOutput() IdentityProviderTypeOutput
	ToIdentityProviderTypeOutputWithContext(context.Context) IdentityProviderTypeOutput
}

// Identity Provider details.
type IdentityProviderTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Identity Provider contract properties.
	Properties IdentityProviderContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IdentityProviderTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderType)(nil)).Elem()
}

func (i IdentityProviderTypeArgs) ToIdentityProviderTypeOutput() IdentityProviderTypeOutput {
	return i.ToIdentityProviderTypeOutputWithContext(context.Background())
}

func (i IdentityProviderTypeArgs) ToIdentityProviderTypeOutputWithContext(ctx context.Context) IdentityProviderTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderTypeOutput)
}

// Identity Provider details.
type IdentityProviderTypeOutput struct{ *pulumi.OutputState }

func (IdentityProviderTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderType)(nil)).Elem()
}

func (o IdentityProviderTypeOutput) ToIdentityProviderTypeOutput() IdentityProviderTypeOutput {
	return o
}

func (o IdentityProviderTypeOutput) ToIdentityProviderTypeOutputWithContext(ctx context.Context) IdentityProviderTypeOutput {
	return o
}

// Resource name.
func (o IdentityProviderTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderType) string { return v.Name }).(pulumi.StringOutput)
}

// Identity Provider contract properties.
func (o IdentityProviderTypeOutput) Properties() IdentityProviderContractPropertiesResponseOutput {
	return o.ApplyT(func(v IdentityProviderType) IdentityProviderContractPropertiesResponse { return v.Properties }).(IdentityProviderContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o IdentityProviderTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderType) string { return v.Type }).(pulumi.StringOutput)
}

// The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used to enable access to the API Management service developer portal for all users.
type IdentityProviderContractPropertiesResponse struct {
	// List of Allowed Tenants when configuring Azure Active Directory login.
	AllowedTenants []string `pulumi:"allowedTenants"`
	// OpenID Connect discovery endpoint hostname for AAD or AAD B2C.
	Authority *string `pulumi:"authority"`
	// Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.
	ClientId string `pulumi:"clientId"`
	// Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft.
	ClientSecret string `pulumi:"clientSecret"`
	// Password Reset Policy Name. Only applies to AAD B2C Identity Provider.
	PasswordResetPolicyName *string `pulumi:"passwordResetPolicyName"`
	// Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.
	ProfileEditingPolicyName *string `pulumi:"profileEditingPolicyName"`
	// Signin Policy Name. Only applies to AAD B2C Identity Provider.
	SigninPolicyName *string `pulumi:"signinPolicyName"`
	// The TenantId to use instead of Common when logging into Active Directory
	SigninTenant *string `pulumi:"signinTenant"`
	// Signup Policy Name. Only applies to AAD B2C Identity Provider.
	SignupPolicyName *string `pulumi:"signupPolicyName"`
	// Identity Provider Type identifier.
	Type *string `pulumi:"type"`
}

// IdentityProviderContractPropertiesResponseInput is an input type that accepts IdentityProviderContractPropertiesResponseArgs and IdentityProviderContractPropertiesResponseOutput values.
// You can construct a concrete instance of `IdentityProviderContractPropertiesResponseInput` via:
//
//          IdentityProviderContractPropertiesResponseArgs{...}
type IdentityProviderContractPropertiesResponseInput interface {
	pulumi.Input

	ToIdentityProviderContractPropertiesResponseOutput() IdentityProviderContractPropertiesResponseOutput
	ToIdentityProviderContractPropertiesResponseOutputWithContext(context.Context) IdentityProviderContractPropertiesResponseOutput
}

// The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used to enable access to the API Management service developer portal for all users.
type IdentityProviderContractPropertiesResponseArgs struct {
	// List of Allowed Tenants when configuring Azure Active Directory login.
	AllowedTenants pulumi.StringArrayInput `pulumi:"allowedTenants"`
	// OpenID Connect discovery endpoint hostname for AAD or AAD B2C.
	Authority pulumi.StringPtrInput `pulumi:"authority"`
	// Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// Password Reset Policy Name. Only applies to AAD B2C Identity Provider.
	PasswordResetPolicyName pulumi.StringPtrInput `pulumi:"passwordResetPolicyName"`
	// Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.
	ProfileEditingPolicyName pulumi.StringPtrInput `pulumi:"profileEditingPolicyName"`
	// Signin Policy Name. Only applies to AAD B2C Identity Provider.
	SigninPolicyName pulumi.StringPtrInput `pulumi:"signinPolicyName"`
	// The TenantId to use instead of Common when logging into Active Directory
	SigninTenant pulumi.StringPtrInput `pulumi:"signinTenant"`
	// Signup Policy Name. Only applies to AAD B2C Identity Provider.
	SignupPolicyName pulumi.StringPtrInput `pulumi:"signupPolicyName"`
	// Identity Provider Type identifier.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IdentityProviderContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderContractPropertiesResponse)(nil)).Elem()
}

func (i IdentityProviderContractPropertiesResponseArgs) ToIdentityProviderContractPropertiesResponseOutput() IdentityProviderContractPropertiesResponseOutput {
	return i.ToIdentityProviderContractPropertiesResponseOutputWithContext(context.Background())
}

func (i IdentityProviderContractPropertiesResponseArgs) ToIdentityProviderContractPropertiesResponseOutputWithContext(ctx context.Context) IdentityProviderContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderContractPropertiesResponseOutput)
}

func (i IdentityProviderContractPropertiesResponseArgs) ToIdentityProviderContractPropertiesResponsePtrOutput() IdentityProviderContractPropertiesResponsePtrOutput {
	return i.ToIdentityProviderContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i IdentityProviderContractPropertiesResponseArgs) ToIdentityProviderContractPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityProviderContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderContractPropertiesResponseOutput).ToIdentityProviderContractPropertiesResponsePtrOutputWithContext(ctx)
}

// IdentityProviderContractPropertiesResponsePtrInput is an input type that accepts IdentityProviderContractPropertiesResponseArgs, IdentityProviderContractPropertiesResponsePtr and IdentityProviderContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `IdentityProviderContractPropertiesResponsePtrInput` via:
//
//          IdentityProviderContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type IdentityProviderContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToIdentityProviderContractPropertiesResponsePtrOutput() IdentityProviderContractPropertiesResponsePtrOutput
	ToIdentityProviderContractPropertiesResponsePtrOutputWithContext(context.Context) IdentityProviderContractPropertiesResponsePtrOutput
}

type identityProviderContractPropertiesResponsePtrType IdentityProviderContractPropertiesResponseArgs

func IdentityProviderContractPropertiesResponsePtr(v *IdentityProviderContractPropertiesResponseArgs) IdentityProviderContractPropertiesResponsePtrInput {
	return (*identityProviderContractPropertiesResponsePtrType)(v)
}

func (*identityProviderContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProviderContractPropertiesResponse)(nil)).Elem()
}

func (i *identityProviderContractPropertiesResponsePtrType) ToIdentityProviderContractPropertiesResponsePtrOutput() IdentityProviderContractPropertiesResponsePtrOutput {
	return i.ToIdentityProviderContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *identityProviderContractPropertiesResponsePtrType) ToIdentityProviderContractPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityProviderContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderContractPropertiesResponsePtrOutput)
}

// The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used to enable access to the API Management service developer portal for all users.
type IdentityProviderContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (IdentityProviderContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderContractPropertiesResponse)(nil)).Elem()
}

func (o IdentityProviderContractPropertiesResponseOutput) ToIdentityProviderContractPropertiesResponseOutput() IdentityProviderContractPropertiesResponseOutput {
	return o
}

func (o IdentityProviderContractPropertiesResponseOutput) ToIdentityProviderContractPropertiesResponseOutputWithContext(ctx context.Context) IdentityProviderContractPropertiesResponseOutput {
	return o
}

func (o IdentityProviderContractPropertiesResponseOutput) ToIdentityProviderContractPropertiesResponsePtrOutput() IdentityProviderContractPropertiesResponsePtrOutput {
	return o.ToIdentityProviderContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o IdentityProviderContractPropertiesResponseOutput) ToIdentityProviderContractPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityProviderContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IdentityProviderContractPropertiesResponse) *IdentityProviderContractPropertiesResponse {
		return &v
	}).(IdentityProviderContractPropertiesResponsePtrOutput)
}

// List of Allowed Tenants when configuring Azure Active Directory login.
func (o IdentityProviderContractPropertiesResponseOutput) AllowedTenants() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityProviderContractPropertiesResponse) []string { return v.AllowedTenants }).(pulumi.StringArrayOutput)
}

// OpenID Connect discovery endpoint hostname for AAD or AAD B2C.
func (o IdentityProviderContractPropertiesResponseOutput) Authority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderContractPropertiesResponse) *string { return v.Authority }).(pulumi.StringPtrOutput)
}

// Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.
func (o IdentityProviderContractPropertiesResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderContractPropertiesResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft.
func (o IdentityProviderContractPropertiesResponseOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderContractPropertiesResponse) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// Password Reset Policy Name. Only applies to AAD B2C Identity Provider.
func (o IdentityProviderContractPropertiesResponseOutput) PasswordResetPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderContractPropertiesResponse) *string { return v.PasswordResetPolicyName }).(pulumi.StringPtrOutput)
}

// Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.
func (o IdentityProviderContractPropertiesResponseOutput) ProfileEditingPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderContractPropertiesResponse) *string { return v.ProfileEditingPolicyName }).(pulumi.StringPtrOutput)
}

// Signin Policy Name. Only applies to AAD B2C Identity Provider.
func (o IdentityProviderContractPropertiesResponseOutput) SigninPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderContractPropertiesResponse) *string { return v.SigninPolicyName }).(pulumi.StringPtrOutput)
}

// The TenantId to use instead of Common when logging into Active Directory
func (o IdentityProviderContractPropertiesResponseOutput) SigninTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderContractPropertiesResponse) *string { return v.SigninTenant }).(pulumi.StringPtrOutput)
}

// Signup Policy Name. Only applies to AAD B2C Identity Provider.
func (o IdentityProviderContractPropertiesResponseOutput) SignupPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderContractPropertiesResponse) *string { return v.SignupPolicyName }).(pulumi.StringPtrOutput)
}

// Identity Provider Type identifier.
func (o IdentityProviderContractPropertiesResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderContractPropertiesResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IdentityProviderContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityProviderContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProviderContractPropertiesResponse)(nil)).Elem()
}

func (o IdentityProviderContractPropertiesResponsePtrOutput) ToIdentityProviderContractPropertiesResponsePtrOutput() IdentityProviderContractPropertiesResponsePtrOutput {
	return o
}

func (o IdentityProviderContractPropertiesResponsePtrOutput) ToIdentityProviderContractPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityProviderContractPropertiesResponsePtrOutput {
	return o
}

func (o IdentityProviderContractPropertiesResponsePtrOutput) Elem() IdentityProviderContractPropertiesResponseOutput {
	return o.ApplyT(func(v *IdentityProviderContractPropertiesResponse) IdentityProviderContractPropertiesResponse {
		return *v
	}).(IdentityProviderContractPropertiesResponseOutput)
}

// List of Allowed Tenants when configuring Azure Active Directory login.
func (o IdentityProviderContractPropertiesResponsePtrOutput) AllowedTenants() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityProviderContractPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedTenants
	}).(pulumi.StringArrayOutput)
}

// OpenID Connect discovery endpoint hostname for AAD or AAD B2C.
func (o IdentityProviderContractPropertiesResponsePtrOutput) Authority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Authority
	}).(pulumi.StringPtrOutput)
}

// Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.
func (o IdentityProviderContractPropertiesResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft.
func (o IdentityProviderContractPropertiesResponsePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Password Reset Policy Name. Only applies to AAD B2C Identity Provider.
func (o IdentityProviderContractPropertiesResponsePtrOutput) PasswordResetPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PasswordResetPolicyName
	}).(pulumi.StringPtrOutput)
}

// Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.
func (o IdentityProviderContractPropertiesResponsePtrOutput) ProfileEditingPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProfileEditingPolicyName
	}).(pulumi.StringPtrOutput)
}

// Signin Policy Name. Only applies to AAD B2C Identity Provider.
func (o IdentityProviderContractPropertiesResponsePtrOutput) SigninPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SigninPolicyName
	}).(pulumi.StringPtrOutput)
}

// The TenantId to use instead of Common when logging into Active Directory
func (o IdentityProviderContractPropertiesResponsePtrOutput) SigninTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SigninTenant
	}).(pulumi.StringPtrOutput)
}

// Signup Policy Name. Only applies to AAD B2C Identity Provider.
func (o IdentityProviderContractPropertiesResponsePtrOutput) SignupPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SignupPolicyName
	}).(pulumi.StringPtrOutput)
}

// Identity Provider Type identifier.
func (o IdentityProviderContractPropertiesResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Issue Attachment contract Properties.
type IssueAttachmentContractPropertiesResponse struct {
	// An HTTP link or Base64-encoded binary data.
	Content string `pulumi:"content"`
	// Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded binary data provided in the 'content' property.
	ContentFormat string `pulumi:"contentFormat"`
	// Filename by which the binary data will be saved.
	Title string `pulumi:"title"`
}

// IssueAttachmentContractPropertiesResponseInput is an input type that accepts IssueAttachmentContractPropertiesResponseArgs and IssueAttachmentContractPropertiesResponseOutput values.
// You can construct a concrete instance of `IssueAttachmentContractPropertiesResponseInput` via:
//
//          IssueAttachmentContractPropertiesResponseArgs{...}
type IssueAttachmentContractPropertiesResponseInput interface {
	pulumi.Input

	ToIssueAttachmentContractPropertiesResponseOutput() IssueAttachmentContractPropertiesResponseOutput
	ToIssueAttachmentContractPropertiesResponseOutputWithContext(context.Context) IssueAttachmentContractPropertiesResponseOutput
}

// Issue Attachment contract Properties.
type IssueAttachmentContractPropertiesResponseArgs struct {
	// An HTTP link or Base64-encoded binary data.
	Content pulumi.StringInput `pulumi:"content"`
	// Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded binary data provided in the 'content' property.
	ContentFormat pulumi.StringInput `pulumi:"contentFormat"`
	// Filename by which the binary data will be saved.
	Title pulumi.StringInput `pulumi:"title"`
}

func (IssueAttachmentContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssueAttachmentContractPropertiesResponse)(nil)).Elem()
}

func (i IssueAttachmentContractPropertiesResponseArgs) ToIssueAttachmentContractPropertiesResponseOutput() IssueAttachmentContractPropertiesResponseOutput {
	return i.ToIssueAttachmentContractPropertiesResponseOutputWithContext(context.Background())
}

func (i IssueAttachmentContractPropertiesResponseArgs) ToIssueAttachmentContractPropertiesResponseOutputWithContext(ctx context.Context) IssueAttachmentContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssueAttachmentContractPropertiesResponseOutput)
}

func (i IssueAttachmentContractPropertiesResponseArgs) ToIssueAttachmentContractPropertiesResponsePtrOutput() IssueAttachmentContractPropertiesResponsePtrOutput {
	return i.ToIssueAttachmentContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i IssueAttachmentContractPropertiesResponseArgs) ToIssueAttachmentContractPropertiesResponsePtrOutputWithContext(ctx context.Context) IssueAttachmentContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssueAttachmentContractPropertiesResponseOutput).ToIssueAttachmentContractPropertiesResponsePtrOutputWithContext(ctx)
}

// IssueAttachmentContractPropertiesResponsePtrInput is an input type that accepts IssueAttachmentContractPropertiesResponseArgs, IssueAttachmentContractPropertiesResponsePtr and IssueAttachmentContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `IssueAttachmentContractPropertiesResponsePtrInput` via:
//
//          IssueAttachmentContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type IssueAttachmentContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToIssueAttachmentContractPropertiesResponsePtrOutput() IssueAttachmentContractPropertiesResponsePtrOutput
	ToIssueAttachmentContractPropertiesResponsePtrOutputWithContext(context.Context) IssueAttachmentContractPropertiesResponsePtrOutput
}

type issueAttachmentContractPropertiesResponsePtrType IssueAttachmentContractPropertiesResponseArgs

func IssueAttachmentContractPropertiesResponsePtr(v *IssueAttachmentContractPropertiesResponseArgs) IssueAttachmentContractPropertiesResponsePtrInput {
	return (*issueAttachmentContractPropertiesResponsePtrType)(v)
}

func (*issueAttachmentContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssueAttachmentContractPropertiesResponse)(nil)).Elem()
}

func (i *issueAttachmentContractPropertiesResponsePtrType) ToIssueAttachmentContractPropertiesResponsePtrOutput() IssueAttachmentContractPropertiesResponsePtrOutput {
	return i.ToIssueAttachmentContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *issueAttachmentContractPropertiesResponsePtrType) ToIssueAttachmentContractPropertiesResponsePtrOutputWithContext(ctx context.Context) IssueAttachmentContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssueAttachmentContractPropertiesResponsePtrOutput)
}

// Issue Attachment contract Properties.
type IssueAttachmentContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (IssueAttachmentContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssueAttachmentContractPropertiesResponse)(nil)).Elem()
}

func (o IssueAttachmentContractPropertiesResponseOutput) ToIssueAttachmentContractPropertiesResponseOutput() IssueAttachmentContractPropertiesResponseOutput {
	return o
}

func (o IssueAttachmentContractPropertiesResponseOutput) ToIssueAttachmentContractPropertiesResponseOutputWithContext(ctx context.Context) IssueAttachmentContractPropertiesResponseOutput {
	return o
}

func (o IssueAttachmentContractPropertiesResponseOutput) ToIssueAttachmentContractPropertiesResponsePtrOutput() IssueAttachmentContractPropertiesResponsePtrOutput {
	return o.ToIssueAttachmentContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o IssueAttachmentContractPropertiesResponseOutput) ToIssueAttachmentContractPropertiesResponsePtrOutputWithContext(ctx context.Context) IssueAttachmentContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IssueAttachmentContractPropertiesResponse) *IssueAttachmentContractPropertiesResponse {
		return &v
	}).(IssueAttachmentContractPropertiesResponsePtrOutput)
}

// An HTTP link or Base64-encoded binary data.
func (o IssueAttachmentContractPropertiesResponseOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v IssueAttachmentContractPropertiesResponse) string { return v.Content }).(pulumi.StringOutput)
}

// Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded binary data provided in the 'content' property.
func (o IssueAttachmentContractPropertiesResponseOutput) ContentFormat() pulumi.StringOutput {
	return o.ApplyT(func(v IssueAttachmentContractPropertiesResponse) string { return v.ContentFormat }).(pulumi.StringOutput)
}

// Filename by which the binary data will be saved.
func (o IssueAttachmentContractPropertiesResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IssueAttachmentContractPropertiesResponse) string { return v.Title }).(pulumi.StringOutput)
}

type IssueAttachmentContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (IssueAttachmentContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssueAttachmentContractPropertiesResponse)(nil)).Elem()
}

func (o IssueAttachmentContractPropertiesResponsePtrOutput) ToIssueAttachmentContractPropertiesResponsePtrOutput() IssueAttachmentContractPropertiesResponsePtrOutput {
	return o
}

func (o IssueAttachmentContractPropertiesResponsePtrOutput) ToIssueAttachmentContractPropertiesResponsePtrOutputWithContext(ctx context.Context) IssueAttachmentContractPropertiesResponsePtrOutput {
	return o
}

func (o IssueAttachmentContractPropertiesResponsePtrOutput) Elem() IssueAttachmentContractPropertiesResponseOutput {
	return o.ApplyT(func(v *IssueAttachmentContractPropertiesResponse) IssueAttachmentContractPropertiesResponse {
		return *v
	}).(IssueAttachmentContractPropertiesResponseOutput)
}

// An HTTP link or Base64-encoded binary data.
func (o IssueAttachmentContractPropertiesResponsePtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssueAttachmentContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(pulumi.StringPtrOutput)
}

// Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded binary data provided in the 'content' property.
func (o IssueAttachmentContractPropertiesResponsePtrOutput) ContentFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssueAttachmentContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ContentFormat
	}).(pulumi.StringPtrOutput)
}

// Filename by which the binary data will be saved.
func (o IssueAttachmentContractPropertiesResponsePtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssueAttachmentContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

// Issue Comment contract Properties.
type IssueCommentContractPropertiesResponse struct {
	// Date and time when the comment was created.
	CreatedDate *string `pulumi:"createdDate"`
	// Comment text.
	Text string `pulumi:"text"`
	// A resource identifier for the user who left the comment.
	UserId string `pulumi:"userId"`
}

// IssueCommentContractPropertiesResponseInput is an input type that accepts IssueCommentContractPropertiesResponseArgs and IssueCommentContractPropertiesResponseOutput values.
// You can construct a concrete instance of `IssueCommentContractPropertiesResponseInput` via:
//
//          IssueCommentContractPropertiesResponseArgs{...}
type IssueCommentContractPropertiesResponseInput interface {
	pulumi.Input

	ToIssueCommentContractPropertiesResponseOutput() IssueCommentContractPropertiesResponseOutput
	ToIssueCommentContractPropertiesResponseOutputWithContext(context.Context) IssueCommentContractPropertiesResponseOutput
}

// Issue Comment contract Properties.
type IssueCommentContractPropertiesResponseArgs struct {
	// Date and time when the comment was created.
	CreatedDate pulumi.StringPtrInput `pulumi:"createdDate"`
	// Comment text.
	Text pulumi.StringInput `pulumi:"text"`
	// A resource identifier for the user who left the comment.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (IssueCommentContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssueCommentContractPropertiesResponse)(nil)).Elem()
}

func (i IssueCommentContractPropertiesResponseArgs) ToIssueCommentContractPropertiesResponseOutput() IssueCommentContractPropertiesResponseOutput {
	return i.ToIssueCommentContractPropertiesResponseOutputWithContext(context.Background())
}

func (i IssueCommentContractPropertiesResponseArgs) ToIssueCommentContractPropertiesResponseOutputWithContext(ctx context.Context) IssueCommentContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssueCommentContractPropertiesResponseOutput)
}

func (i IssueCommentContractPropertiesResponseArgs) ToIssueCommentContractPropertiesResponsePtrOutput() IssueCommentContractPropertiesResponsePtrOutput {
	return i.ToIssueCommentContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i IssueCommentContractPropertiesResponseArgs) ToIssueCommentContractPropertiesResponsePtrOutputWithContext(ctx context.Context) IssueCommentContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssueCommentContractPropertiesResponseOutput).ToIssueCommentContractPropertiesResponsePtrOutputWithContext(ctx)
}

// IssueCommentContractPropertiesResponsePtrInput is an input type that accepts IssueCommentContractPropertiesResponseArgs, IssueCommentContractPropertiesResponsePtr and IssueCommentContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `IssueCommentContractPropertiesResponsePtrInput` via:
//
//          IssueCommentContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type IssueCommentContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToIssueCommentContractPropertiesResponsePtrOutput() IssueCommentContractPropertiesResponsePtrOutput
	ToIssueCommentContractPropertiesResponsePtrOutputWithContext(context.Context) IssueCommentContractPropertiesResponsePtrOutput
}

type issueCommentContractPropertiesResponsePtrType IssueCommentContractPropertiesResponseArgs

func IssueCommentContractPropertiesResponsePtr(v *IssueCommentContractPropertiesResponseArgs) IssueCommentContractPropertiesResponsePtrInput {
	return (*issueCommentContractPropertiesResponsePtrType)(v)
}

func (*issueCommentContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssueCommentContractPropertiesResponse)(nil)).Elem()
}

func (i *issueCommentContractPropertiesResponsePtrType) ToIssueCommentContractPropertiesResponsePtrOutput() IssueCommentContractPropertiesResponsePtrOutput {
	return i.ToIssueCommentContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *issueCommentContractPropertiesResponsePtrType) ToIssueCommentContractPropertiesResponsePtrOutputWithContext(ctx context.Context) IssueCommentContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssueCommentContractPropertiesResponsePtrOutput)
}

// Issue Comment contract Properties.
type IssueCommentContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (IssueCommentContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssueCommentContractPropertiesResponse)(nil)).Elem()
}

func (o IssueCommentContractPropertiesResponseOutput) ToIssueCommentContractPropertiesResponseOutput() IssueCommentContractPropertiesResponseOutput {
	return o
}

func (o IssueCommentContractPropertiesResponseOutput) ToIssueCommentContractPropertiesResponseOutputWithContext(ctx context.Context) IssueCommentContractPropertiesResponseOutput {
	return o
}

func (o IssueCommentContractPropertiesResponseOutput) ToIssueCommentContractPropertiesResponsePtrOutput() IssueCommentContractPropertiesResponsePtrOutput {
	return o.ToIssueCommentContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o IssueCommentContractPropertiesResponseOutput) ToIssueCommentContractPropertiesResponsePtrOutputWithContext(ctx context.Context) IssueCommentContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IssueCommentContractPropertiesResponse) *IssueCommentContractPropertiesResponse {
		return &v
	}).(IssueCommentContractPropertiesResponsePtrOutput)
}

// Date and time when the comment was created.
func (o IssueCommentContractPropertiesResponseOutput) CreatedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssueCommentContractPropertiesResponse) *string { return v.CreatedDate }).(pulumi.StringPtrOutput)
}

// Comment text.
func (o IssueCommentContractPropertiesResponseOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v IssueCommentContractPropertiesResponse) string { return v.Text }).(pulumi.StringOutput)
}

// A resource identifier for the user who left the comment.
func (o IssueCommentContractPropertiesResponseOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v IssueCommentContractPropertiesResponse) string { return v.UserId }).(pulumi.StringOutput)
}

type IssueCommentContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (IssueCommentContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssueCommentContractPropertiesResponse)(nil)).Elem()
}

func (o IssueCommentContractPropertiesResponsePtrOutput) ToIssueCommentContractPropertiesResponsePtrOutput() IssueCommentContractPropertiesResponsePtrOutput {
	return o
}

func (o IssueCommentContractPropertiesResponsePtrOutput) ToIssueCommentContractPropertiesResponsePtrOutputWithContext(ctx context.Context) IssueCommentContractPropertiesResponsePtrOutput {
	return o
}

func (o IssueCommentContractPropertiesResponsePtrOutput) Elem() IssueCommentContractPropertiesResponseOutput {
	return o.ApplyT(func(v *IssueCommentContractPropertiesResponse) IssueCommentContractPropertiesResponse { return *v }).(IssueCommentContractPropertiesResponseOutput)
}

// Date and time when the comment was created.
func (o IssueCommentContractPropertiesResponsePtrOutput) CreatedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssueCommentContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedDate
	}).(pulumi.StringPtrOutput)
}

// Comment text.
func (o IssueCommentContractPropertiesResponsePtrOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssueCommentContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Text
	}).(pulumi.StringPtrOutput)
}

// A resource identifier for the user who left the comment.
func (o IssueCommentContractPropertiesResponsePtrOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssueCommentContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserId
	}).(pulumi.StringPtrOutput)
}

// Issue contract Properties.
type IssueContractPropertiesResponse struct {
	// A resource identifier for the API the issue was created for.
	ApiId *string `pulumi:"apiId"`
	// Date and time when the issue was created.
	CreatedDate *string `pulumi:"createdDate"`
	// Text describing the issue.
	Description string `pulumi:"description"`
	// Status of the issue.
	State *string `pulumi:"state"`
	// The issue title.
	Title string `pulumi:"title"`
	// A resource identifier for the user created the issue.
	UserId string `pulumi:"userId"`
}

// IssueContractPropertiesResponseInput is an input type that accepts IssueContractPropertiesResponseArgs and IssueContractPropertiesResponseOutput values.
// You can construct a concrete instance of `IssueContractPropertiesResponseInput` via:
//
//          IssueContractPropertiesResponseArgs{...}
type IssueContractPropertiesResponseInput interface {
	pulumi.Input

	ToIssueContractPropertiesResponseOutput() IssueContractPropertiesResponseOutput
	ToIssueContractPropertiesResponseOutputWithContext(context.Context) IssueContractPropertiesResponseOutput
}

// Issue contract Properties.
type IssueContractPropertiesResponseArgs struct {
	// A resource identifier for the API the issue was created for.
	ApiId pulumi.StringPtrInput `pulumi:"apiId"`
	// Date and time when the issue was created.
	CreatedDate pulumi.StringPtrInput `pulumi:"createdDate"`
	// Text describing the issue.
	Description pulumi.StringInput `pulumi:"description"`
	// Status of the issue.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The issue title.
	Title pulumi.StringInput `pulumi:"title"`
	// A resource identifier for the user created the issue.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (IssueContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IssueContractPropertiesResponse)(nil)).Elem()
}

func (i IssueContractPropertiesResponseArgs) ToIssueContractPropertiesResponseOutput() IssueContractPropertiesResponseOutput {
	return i.ToIssueContractPropertiesResponseOutputWithContext(context.Background())
}

func (i IssueContractPropertiesResponseArgs) ToIssueContractPropertiesResponseOutputWithContext(ctx context.Context) IssueContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssueContractPropertiesResponseOutput)
}

func (i IssueContractPropertiesResponseArgs) ToIssueContractPropertiesResponsePtrOutput() IssueContractPropertiesResponsePtrOutput {
	return i.ToIssueContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i IssueContractPropertiesResponseArgs) ToIssueContractPropertiesResponsePtrOutputWithContext(ctx context.Context) IssueContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssueContractPropertiesResponseOutput).ToIssueContractPropertiesResponsePtrOutputWithContext(ctx)
}

// IssueContractPropertiesResponsePtrInput is an input type that accepts IssueContractPropertiesResponseArgs, IssueContractPropertiesResponsePtr and IssueContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `IssueContractPropertiesResponsePtrInput` via:
//
//          IssueContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type IssueContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToIssueContractPropertiesResponsePtrOutput() IssueContractPropertiesResponsePtrOutput
	ToIssueContractPropertiesResponsePtrOutputWithContext(context.Context) IssueContractPropertiesResponsePtrOutput
}

type issueContractPropertiesResponsePtrType IssueContractPropertiesResponseArgs

func IssueContractPropertiesResponsePtr(v *IssueContractPropertiesResponseArgs) IssueContractPropertiesResponsePtrInput {
	return (*issueContractPropertiesResponsePtrType)(v)
}

func (*issueContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IssueContractPropertiesResponse)(nil)).Elem()
}

func (i *issueContractPropertiesResponsePtrType) ToIssueContractPropertiesResponsePtrOutput() IssueContractPropertiesResponsePtrOutput {
	return i.ToIssueContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *issueContractPropertiesResponsePtrType) ToIssueContractPropertiesResponsePtrOutputWithContext(ctx context.Context) IssueContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IssueContractPropertiesResponsePtrOutput)
}

// Issue contract Properties.
type IssueContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (IssueContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IssueContractPropertiesResponse)(nil)).Elem()
}

func (o IssueContractPropertiesResponseOutput) ToIssueContractPropertiesResponseOutput() IssueContractPropertiesResponseOutput {
	return o
}

func (o IssueContractPropertiesResponseOutput) ToIssueContractPropertiesResponseOutputWithContext(ctx context.Context) IssueContractPropertiesResponseOutput {
	return o
}

func (o IssueContractPropertiesResponseOutput) ToIssueContractPropertiesResponsePtrOutput() IssueContractPropertiesResponsePtrOutput {
	return o.ToIssueContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o IssueContractPropertiesResponseOutput) ToIssueContractPropertiesResponsePtrOutputWithContext(ctx context.Context) IssueContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IssueContractPropertiesResponse) *IssueContractPropertiesResponse {
		return &v
	}).(IssueContractPropertiesResponsePtrOutput)
}

// A resource identifier for the API the issue was created for.
func (o IssueContractPropertiesResponseOutput) ApiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssueContractPropertiesResponse) *string { return v.ApiId }).(pulumi.StringPtrOutput)
}

// Date and time when the issue was created.
func (o IssueContractPropertiesResponseOutput) CreatedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssueContractPropertiesResponse) *string { return v.CreatedDate }).(pulumi.StringPtrOutput)
}

// Text describing the issue.
func (o IssueContractPropertiesResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v IssueContractPropertiesResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Status of the issue.
func (o IssueContractPropertiesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IssueContractPropertiesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The issue title.
func (o IssueContractPropertiesResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IssueContractPropertiesResponse) string { return v.Title }).(pulumi.StringOutput)
}

// A resource identifier for the user created the issue.
func (o IssueContractPropertiesResponseOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v IssueContractPropertiesResponse) string { return v.UserId }).(pulumi.StringOutput)
}

type IssueContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (IssueContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IssueContractPropertiesResponse)(nil)).Elem()
}

func (o IssueContractPropertiesResponsePtrOutput) ToIssueContractPropertiesResponsePtrOutput() IssueContractPropertiesResponsePtrOutput {
	return o
}

func (o IssueContractPropertiesResponsePtrOutput) ToIssueContractPropertiesResponsePtrOutputWithContext(ctx context.Context) IssueContractPropertiesResponsePtrOutput {
	return o
}

func (o IssueContractPropertiesResponsePtrOutput) Elem() IssueContractPropertiesResponseOutput {
	return o.ApplyT(func(v *IssueContractPropertiesResponse) IssueContractPropertiesResponse { return *v }).(IssueContractPropertiesResponseOutput)
}

// A resource identifier for the API the issue was created for.
func (o IssueContractPropertiesResponsePtrOutput) ApiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssueContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiId
	}).(pulumi.StringPtrOutput)
}

// Date and time when the issue was created.
func (o IssueContractPropertiesResponsePtrOutput) CreatedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssueContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedDate
	}).(pulumi.StringPtrOutput)
}

// Text describing the issue.
func (o IssueContractPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssueContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// Status of the issue.
func (o IssueContractPropertiesResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssueContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// The issue title.
func (o IssueContractPropertiesResponsePtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssueContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

// A resource identifier for the user created the issue.
func (o IssueContractPropertiesResponsePtrOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IssueContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserId
	}).(pulumi.StringPtrOutput)
}

// Logger details.
type LoggerType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Logger entity contract properties.
	Properties LoggerContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// LoggerTypeInput is an input type that accepts LoggerTypeArgs and LoggerTypeOutput values.
// You can construct a concrete instance of `LoggerTypeInput` via:
//
//          LoggerTypeArgs{...}
type LoggerTypeInput interface {
	pulumi.Input

	ToLoggerTypeOutput() LoggerTypeOutput
	ToLoggerTypeOutputWithContext(context.Context) LoggerTypeOutput
}

// Logger details.
type LoggerTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Logger entity contract properties.
	Properties LoggerContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LoggerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggerType)(nil)).Elem()
}

func (i LoggerTypeArgs) ToLoggerTypeOutput() LoggerTypeOutput {
	return i.ToLoggerTypeOutputWithContext(context.Background())
}

func (i LoggerTypeArgs) ToLoggerTypeOutputWithContext(ctx context.Context) LoggerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggerTypeOutput)
}

// Logger details.
type LoggerTypeOutput struct{ *pulumi.OutputState }

func (LoggerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggerType)(nil)).Elem()
}

func (o LoggerTypeOutput) ToLoggerTypeOutput() LoggerTypeOutput {
	return o
}

func (o LoggerTypeOutput) ToLoggerTypeOutputWithContext(ctx context.Context) LoggerTypeOutput {
	return o
}

// Resource name.
func (o LoggerTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LoggerType) string { return v.Name }).(pulumi.StringOutput)
}

// Logger entity contract properties.
func (o LoggerTypeOutput) Properties() LoggerContractPropertiesResponseOutput {
	return o.ApplyT(func(v LoggerType) LoggerContractPropertiesResponse { return v.Properties }).(LoggerContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o LoggerTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LoggerType) string { return v.Type }).(pulumi.StringOutput)
}

// The Logger entity in API Management represents an event sink that you can use to log API Management events. Currently the Logger entity supports logging API Management events to Azure Event Hubs.
type LoggerContractPropertiesResponse struct {
	// The name and SendRule connection string of the event hub for azureEventHub logger.
	// Instrumentation key for applicationInsights logger.
	Credentials map[string]string `pulumi:"credentials"`
	// Logger description.
	Description *string `pulumi:"description"`
	// Whether records are buffered in the logger before publishing. Default is assumed to be true.
	IsBuffered *bool `pulumi:"isBuffered"`
	// Logger type.
	LoggerType string `pulumi:"loggerType"`
	// Azure Resource Id of a log target (either Azure Event Hub resource or Azure Application Insights resource).
	ResourceId *string `pulumi:"resourceId"`
}

// LoggerContractPropertiesResponseInput is an input type that accepts LoggerContractPropertiesResponseArgs and LoggerContractPropertiesResponseOutput values.
// You can construct a concrete instance of `LoggerContractPropertiesResponseInput` via:
//
//          LoggerContractPropertiesResponseArgs{...}
type LoggerContractPropertiesResponseInput interface {
	pulumi.Input

	ToLoggerContractPropertiesResponseOutput() LoggerContractPropertiesResponseOutput
	ToLoggerContractPropertiesResponseOutputWithContext(context.Context) LoggerContractPropertiesResponseOutput
}

// The Logger entity in API Management represents an event sink that you can use to log API Management events. Currently the Logger entity supports logging API Management events to Azure Event Hubs.
type LoggerContractPropertiesResponseArgs struct {
	// The name and SendRule connection string of the event hub for azureEventHub logger.
	// Instrumentation key for applicationInsights logger.
	Credentials pulumi.StringMapInput `pulumi:"credentials"`
	// Logger description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Whether records are buffered in the logger before publishing. Default is assumed to be true.
	IsBuffered pulumi.BoolPtrInput `pulumi:"isBuffered"`
	// Logger type.
	LoggerType pulumi.StringInput `pulumi:"loggerType"`
	// Azure Resource Id of a log target (either Azure Event Hub resource or Azure Application Insights resource).
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (LoggerContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggerContractPropertiesResponse)(nil)).Elem()
}

func (i LoggerContractPropertiesResponseArgs) ToLoggerContractPropertiesResponseOutput() LoggerContractPropertiesResponseOutput {
	return i.ToLoggerContractPropertiesResponseOutputWithContext(context.Background())
}

func (i LoggerContractPropertiesResponseArgs) ToLoggerContractPropertiesResponseOutputWithContext(ctx context.Context) LoggerContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggerContractPropertiesResponseOutput)
}

func (i LoggerContractPropertiesResponseArgs) ToLoggerContractPropertiesResponsePtrOutput() LoggerContractPropertiesResponsePtrOutput {
	return i.ToLoggerContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i LoggerContractPropertiesResponseArgs) ToLoggerContractPropertiesResponsePtrOutputWithContext(ctx context.Context) LoggerContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggerContractPropertiesResponseOutput).ToLoggerContractPropertiesResponsePtrOutputWithContext(ctx)
}

// LoggerContractPropertiesResponsePtrInput is an input type that accepts LoggerContractPropertiesResponseArgs, LoggerContractPropertiesResponsePtr and LoggerContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `LoggerContractPropertiesResponsePtrInput` via:
//
//          LoggerContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type LoggerContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToLoggerContractPropertiesResponsePtrOutput() LoggerContractPropertiesResponsePtrOutput
	ToLoggerContractPropertiesResponsePtrOutputWithContext(context.Context) LoggerContractPropertiesResponsePtrOutput
}

type loggerContractPropertiesResponsePtrType LoggerContractPropertiesResponseArgs

func LoggerContractPropertiesResponsePtr(v *LoggerContractPropertiesResponseArgs) LoggerContractPropertiesResponsePtrInput {
	return (*loggerContractPropertiesResponsePtrType)(v)
}

func (*loggerContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggerContractPropertiesResponse)(nil)).Elem()
}

func (i *loggerContractPropertiesResponsePtrType) ToLoggerContractPropertiesResponsePtrOutput() LoggerContractPropertiesResponsePtrOutput {
	return i.ToLoggerContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *loggerContractPropertiesResponsePtrType) ToLoggerContractPropertiesResponsePtrOutputWithContext(ctx context.Context) LoggerContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggerContractPropertiesResponsePtrOutput)
}

// The Logger entity in API Management represents an event sink that you can use to log API Management events. Currently the Logger entity supports logging API Management events to Azure Event Hubs.
type LoggerContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (LoggerContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggerContractPropertiesResponse)(nil)).Elem()
}

func (o LoggerContractPropertiesResponseOutput) ToLoggerContractPropertiesResponseOutput() LoggerContractPropertiesResponseOutput {
	return o
}

func (o LoggerContractPropertiesResponseOutput) ToLoggerContractPropertiesResponseOutputWithContext(ctx context.Context) LoggerContractPropertiesResponseOutput {
	return o
}

func (o LoggerContractPropertiesResponseOutput) ToLoggerContractPropertiesResponsePtrOutput() LoggerContractPropertiesResponsePtrOutput {
	return o.ToLoggerContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o LoggerContractPropertiesResponseOutput) ToLoggerContractPropertiesResponsePtrOutputWithContext(ctx context.Context) LoggerContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LoggerContractPropertiesResponse) *LoggerContractPropertiesResponse {
		return &v
	}).(LoggerContractPropertiesResponsePtrOutput)
}

// The name and SendRule connection string of the event hub for azureEventHub logger.
// Instrumentation key for applicationInsights logger.
func (o LoggerContractPropertiesResponseOutput) Credentials() pulumi.StringMapOutput {
	return o.ApplyT(func(v LoggerContractPropertiesResponse) map[string]string { return v.Credentials }).(pulumi.StringMapOutput)
}

// Logger description.
func (o LoggerContractPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoggerContractPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether records are buffered in the logger before publishing. Default is assumed to be true.
func (o LoggerContractPropertiesResponseOutput) IsBuffered() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoggerContractPropertiesResponse) *bool { return v.IsBuffered }).(pulumi.BoolPtrOutput)
}

// Logger type.
func (o LoggerContractPropertiesResponseOutput) LoggerType() pulumi.StringOutput {
	return o.ApplyT(func(v LoggerContractPropertiesResponse) string { return v.LoggerType }).(pulumi.StringOutput)
}

// Azure Resource Id of a log target (either Azure Event Hub resource or Azure Application Insights resource).
func (o LoggerContractPropertiesResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoggerContractPropertiesResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type LoggerContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (LoggerContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggerContractPropertiesResponse)(nil)).Elem()
}

func (o LoggerContractPropertiesResponsePtrOutput) ToLoggerContractPropertiesResponsePtrOutput() LoggerContractPropertiesResponsePtrOutput {
	return o
}

func (o LoggerContractPropertiesResponsePtrOutput) ToLoggerContractPropertiesResponsePtrOutputWithContext(ctx context.Context) LoggerContractPropertiesResponsePtrOutput {
	return o
}

func (o LoggerContractPropertiesResponsePtrOutput) Elem() LoggerContractPropertiesResponseOutput {
	return o.ApplyT(func(v *LoggerContractPropertiesResponse) LoggerContractPropertiesResponse { return *v }).(LoggerContractPropertiesResponseOutput)
}

// The name and SendRule connection string of the event hub for azureEventHub logger.
// Instrumentation key for applicationInsights logger.
func (o LoggerContractPropertiesResponsePtrOutput) Credentials() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LoggerContractPropertiesResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(pulumi.StringMapOutput)
}

// Logger description.
func (o LoggerContractPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggerContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Whether records are buffered in the logger before publishing. Default is assumed to be true.
func (o LoggerContractPropertiesResponsePtrOutput) IsBuffered() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoggerContractPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsBuffered
	}).(pulumi.BoolPtrOutput)
}

// Logger type.
func (o LoggerContractPropertiesResponsePtrOutput) LoggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggerContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LoggerType
	}).(pulumi.StringPtrOutput)
}

// Azure Resource Id of a log target (either Azure Event Hub resource or Azure Application Insights resource).
func (o LoggerContractPropertiesResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggerContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// API OAuth2 Authentication settings details.
type OAuth2AuthenticationSettingsContract struct {
	// OAuth authorization server identifier.
	AuthorizationServerId *string `pulumi:"authorizationServerId"`
	// operations scope.
	Scope *string `pulumi:"scope"`
}

// OAuth2AuthenticationSettingsContractInput is an input type that accepts OAuth2AuthenticationSettingsContractArgs and OAuth2AuthenticationSettingsContractOutput values.
// You can construct a concrete instance of `OAuth2AuthenticationSettingsContractInput` via:
//
//          OAuth2AuthenticationSettingsContractArgs{...}
type OAuth2AuthenticationSettingsContractInput interface {
	pulumi.Input

	ToOAuth2AuthenticationSettingsContractOutput() OAuth2AuthenticationSettingsContractOutput
	ToOAuth2AuthenticationSettingsContractOutputWithContext(context.Context) OAuth2AuthenticationSettingsContractOutput
}

// API OAuth2 Authentication settings details.
type OAuth2AuthenticationSettingsContractArgs struct {
	// OAuth authorization server identifier.
	AuthorizationServerId pulumi.StringPtrInput `pulumi:"authorizationServerId"`
	// operations scope.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
}

func (OAuth2AuthenticationSettingsContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OAuth2AuthenticationSettingsContract)(nil)).Elem()
}

func (i OAuth2AuthenticationSettingsContractArgs) ToOAuth2AuthenticationSettingsContractOutput() OAuth2AuthenticationSettingsContractOutput {
	return i.ToOAuth2AuthenticationSettingsContractOutputWithContext(context.Background())
}

func (i OAuth2AuthenticationSettingsContractArgs) ToOAuth2AuthenticationSettingsContractOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuth2AuthenticationSettingsContractOutput)
}

func (i OAuth2AuthenticationSettingsContractArgs) ToOAuth2AuthenticationSettingsContractPtrOutput() OAuth2AuthenticationSettingsContractPtrOutput {
	return i.ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (i OAuth2AuthenticationSettingsContractArgs) ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuth2AuthenticationSettingsContractOutput).ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(ctx)
}

// OAuth2AuthenticationSettingsContractPtrInput is an input type that accepts OAuth2AuthenticationSettingsContractArgs, OAuth2AuthenticationSettingsContractPtr and OAuth2AuthenticationSettingsContractPtrOutput values.
// You can construct a concrete instance of `OAuth2AuthenticationSettingsContractPtrInput` via:
//
//          OAuth2AuthenticationSettingsContractArgs{...}
//
//  or:
//
//          nil
type OAuth2AuthenticationSettingsContractPtrInput interface {
	pulumi.Input

	ToOAuth2AuthenticationSettingsContractPtrOutput() OAuth2AuthenticationSettingsContractPtrOutput
	ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(context.Context) OAuth2AuthenticationSettingsContractPtrOutput
}

type oauth2AuthenticationSettingsContractPtrType OAuth2AuthenticationSettingsContractArgs

func OAuth2AuthenticationSettingsContractPtr(v *OAuth2AuthenticationSettingsContractArgs) OAuth2AuthenticationSettingsContractPtrInput {
	return (*oauth2AuthenticationSettingsContractPtrType)(v)
}

func (*oauth2AuthenticationSettingsContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OAuth2AuthenticationSettingsContract)(nil)).Elem()
}

func (i *oauth2AuthenticationSettingsContractPtrType) ToOAuth2AuthenticationSettingsContractPtrOutput() OAuth2AuthenticationSettingsContractPtrOutput {
	return i.ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (i *oauth2AuthenticationSettingsContractPtrType) ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuth2AuthenticationSettingsContractPtrOutput)
}

// API OAuth2 Authentication settings details.
type OAuth2AuthenticationSettingsContractOutput struct{ *pulumi.OutputState }

func (OAuth2AuthenticationSettingsContractOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OAuth2AuthenticationSettingsContract)(nil)).Elem()
}

func (o OAuth2AuthenticationSettingsContractOutput) ToOAuth2AuthenticationSettingsContractOutput() OAuth2AuthenticationSettingsContractOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractOutput) ToOAuth2AuthenticationSettingsContractOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractOutput) ToOAuth2AuthenticationSettingsContractPtrOutput() OAuth2AuthenticationSettingsContractPtrOutput {
	return o.ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (o OAuth2AuthenticationSettingsContractOutput) ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractPtrOutput {
	return o.ApplyT(func(v OAuth2AuthenticationSettingsContract) *OAuth2AuthenticationSettingsContract {
		return &v
	}).(OAuth2AuthenticationSettingsContractPtrOutput)
}

// OAuth authorization server identifier.
func (o OAuth2AuthenticationSettingsContractOutput) AuthorizationServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthenticationSettingsContract) *string { return v.AuthorizationServerId }).(pulumi.StringPtrOutput)
}

// operations scope.
func (o OAuth2AuthenticationSettingsContractOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthenticationSettingsContract) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type OAuth2AuthenticationSettingsContractPtrOutput struct{ *pulumi.OutputState }

func (OAuth2AuthenticationSettingsContractPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OAuth2AuthenticationSettingsContract)(nil)).Elem()
}

func (o OAuth2AuthenticationSettingsContractPtrOutput) ToOAuth2AuthenticationSettingsContractPtrOutput() OAuth2AuthenticationSettingsContractPtrOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractPtrOutput) ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractPtrOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractPtrOutput) Elem() OAuth2AuthenticationSettingsContractOutput {
	return o.ApplyT(func(v *OAuth2AuthenticationSettingsContract) OAuth2AuthenticationSettingsContract { return *v }).(OAuth2AuthenticationSettingsContractOutput)
}

// OAuth authorization server identifier.
func (o OAuth2AuthenticationSettingsContractPtrOutput) AuthorizationServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth2AuthenticationSettingsContract) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationServerId
	}).(pulumi.StringPtrOutput)
}

// operations scope.
func (o OAuth2AuthenticationSettingsContractPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth2AuthenticationSettingsContract) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// API OAuth2 Authentication settings details.
type OAuth2AuthenticationSettingsContractResponse struct {
	// OAuth authorization server identifier.
	AuthorizationServerId *string `pulumi:"authorizationServerId"`
	// operations scope.
	Scope *string `pulumi:"scope"`
}

// OAuth2AuthenticationSettingsContractResponseInput is an input type that accepts OAuth2AuthenticationSettingsContractResponseArgs and OAuth2AuthenticationSettingsContractResponseOutput values.
// You can construct a concrete instance of `OAuth2AuthenticationSettingsContractResponseInput` via:
//
//          OAuth2AuthenticationSettingsContractResponseArgs{...}
type OAuth2AuthenticationSettingsContractResponseInput interface {
	pulumi.Input

	ToOAuth2AuthenticationSettingsContractResponseOutput() OAuth2AuthenticationSettingsContractResponseOutput
	ToOAuth2AuthenticationSettingsContractResponseOutputWithContext(context.Context) OAuth2AuthenticationSettingsContractResponseOutput
}

// API OAuth2 Authentication settings details.
type OAuth2AuthenticationSettingsContractResponseArgs struct {
	// OAuth authorization server identifier.
	AuthorizationServerId pulumi.StringPtrInput `pulumi:"authorizationServerId"`
	// operations scope.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
}

func (OAuth2AuthenticationSettingsContractResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OAuth2AuthenticationSettingsContractResponse)(nil)).Elem()
}

func (i OAuth2AuthenticationSettingsContractResponseArgs) ToOAuth2AuthenticationSettingsContractResponseOutput() OAuth2AuthenticationSettingsContractResponseOutput {
	return i.ToOAuth2AuthenticationSettingsContractResponseOutputWithContext(context.Background())
}

func (i OAuth2AuthenticationSettingsContractResponseArgs) ToOAuth2AuthenticationSettingsContractResponseOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuth2AuthenticationSettingsContractResponseOutput)
}

func (i OAuth2AuthenticationSettingsContractResponseArgs) ToOAuth2AuthenticationSettingsContractResponsePtrOutput() OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return i.ToOAuth2AuthenticationSettingsContractResponsePtrOutputWithContext(context.Background())
}

func (i OAuth2AuthenticationSettingsContractResponseArgs) ToOAuth2AuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuth2AuthenticationSettingsContractResponseOutput).ToOAuth2AuthenticationSettingsContractResponsePtrOutputWithContext(ctx)
}

// OAuth2AuthenticationSettingsContractResponsePtrInput is an input type that accepts OAuth2AuthenticationSettingsContractResponseArgs, OAuth2AuthenticationSettingsContractResponsePtr and OAuth2AuthenticationSettingsContractResponsePtrOutput values.
// You can construct a concrete instance of `OAuth2AuthenticationSettingsContractResponsePtrInput` via:
//
//          OAuth2AuthenticationSettingsContractResponseArgs{...}
//
//  or:
//
//          nil
type OAuth2AuthenticationSettingsContractResponsePtrInput interface {
	pulumi.Input

	ToOAuth2AuthenticationSettingsContractResponsePtrOutput() OAuth2AuthenticationSettingsContractResponsePtrOutput
	ToOAuth2AuthenticationSettingsContractResponsePtrOutputWithContext(context.Context) OAuth2AuthenticationSettingsContractResponsePtrOutput
}

type oauth2AuthenticationSettingsContractResponsePtrType OAuth2AuthenticationSettingsContractResponseArgs

func OAuth2AuthenticationSettingsContractResponsePtr(v *OAuth2AuthenticationSettingsContractResponseArgs) OAuth2AuthenticationSettingsContractResponsePtrInput {
	return (*oauth2AuthenticationSettingsContractResponsePtrType)(v)
}

func (*oauth2AuthenticationSettingsContractResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OAuth2AuthenticationSettingsContractResponse)(nil)).Elem()
}

func (i *oauth2AuthenticationSettingsContractResponsePtrType) ToOAuth2AuthenticationSettingsContractResponsePtrOutput() OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return i.ToOAuth2AuthenticationSettingsContractResponsePtrOutputWithContext(context.Background())
}

func (i *oauth2AuthenticationSettingsContractResponsePtrType) ToOAuth2AuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuth2AuthenticationSettingsContractResponsePtrOutput)
}

// API OAuth2 Authentication settings details.
type OAuth2AuthenticationSettingsContractResponseOutput struct{ *pulumi.OutputState }

func (OAuth2AuthenticationSettingsContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OAuth2AuthenticationSettingsContractResponse)(nil)).Elem()
}

func (o OAuth2AuthenticationSettingsContractResponseOutput) ToOAuth2AuthenticationSettingsContractResponseOutput() OAuth2AuthenticationSettingsContractResponseOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractResponseOutput) ToOAuth2AuthenticationSettingsContractResponseOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractResponseOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractResponseOutput) ToOAuth2AuthenticationSettingsContractResponsePtrOutput() OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return o.ToOAuth2AuthenticationSettingsContractResponsePtrOutputWithContext(context.Background())
}

func (o OAuth2AuthenticationSettingsContractResponseOutput) ToOAuth2AuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v OAuth2AuthenticationSettingsContractResponse) *OAuth2AuthenticationSettingsContractResponse {
		return &v
	}).(OAuth2AuthenticationSettingsContractResponsePtrOutput)
}

// OAuth authorization server identifier.
func (o OAuth2AuthenticationSettingsContractResponseOutput) AuthorizationServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthenticationSettingsContractResponse) *string { return v.AuthorizationServerId }).(pulumi.StringPtrOutput)
}

// operations scope.
func (o OAuth2AuthenticationSettingsContractResponseOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthenticationSettingsContractResponse) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type OAuth2AuthenticationSettingsContractResponsePtrOutput struct{ *pulumi.OutputState }

func (OAuth2AuthenticationSettingsContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OAuth2AuthenticationSettingsContractResponse)(nil)).Elem()
}

func (o OAuth2AuthenticationSettingsContractResponsePtrOutput) ToOAuth2AuthenticationSettingsContractResponsePtrOutput() OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractResponsePtrOutput) ToOAuth2AuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractResponsePtrOutput) Elem() OAuth2AuthenticationSettingsContractResponseOutput {
	return o.ApplyT(func(v *OAuth2AuthenticationSettingsContractResponse) OAuth2AuthenticationSettingsContractResponse {
		return *v
	}).(OAuth2AuthenticationSettingsContractResponseOutput)
}

// OAuth authorization server identifier.
func (o OAuth2AuthenticationSettingsContractResponsePtrOutput) AuthorizationServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth2AuthenticationSettingsContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationServerId
	}).(pulumi.StringPtrOutput)
}

// operations scope.
func (o OAuth2AuthenticationSettingsContractResponsePtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth2AuthenticationSettingsContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// API OAuth2 Authentication settings details.
type OpenIdAuthenticationSettingsContract struct {
	// How to send token to the server.
	BearerTokenSendingMethods []string `pulumi:"bearerTokenSendingMethods"`
	// OAuth authorization server identifier.
	OpenidProviderId *string `pulumi:"openidProviderId"`
}

// OpenIdAuthenticationSettingsContractInput is an input type that accepts OpenIdAuthenticationSettingsContractArgs and OpenIdAuthenticationSettingsContractOutput values.
// You can construct a concrete instance of `OpenIdAuthenticationSettingsContractInput` via:
//
//          OpenIdAuthenticationSettingsContractArgs{...}
type OpenIdAuthenticationSettingsContractInput interface {
	pulumi.Input

	ToOpenIdAuthenticationSettingsContractOutput() OpenIdAuthenticationSettingsContractOutput
	ToOpenIdAuthenticationSettingsContractOutputWithContext(context.Context) OpenIdAuthenticationSettingsContractOutput
}

// API OAuth2 Authentication settings details.
type OpenIdAuthenticationSettingsContractArgs struct {
	// How to send token to the server.
	BearerTokenSendingMethods pulumi.StringArrayInput `pulumi:"bearerTokenSendingMethods"`
	// OAuth authorization server identifier.
	OpenidProviderId pulumi.StringPtrInput `pulumi:"openidProviderId"`
}

func (OpenIdAuthenticationSettingsContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdAuthenticationSettingsContract)(nil)).Elem()
}

func (i OpenIdAuthenticationSettingsContractArgs) ToOpenIdAuthenticationSettingsContractOutput() OpenIdAuthenticationSettingsContractOutput {
	return i.ToOpenIdAuthenticationSettingsContractOutputWithContext(context.Background())
}

func (i OpenIdAuthenticationSettingsContractArgs) ToOpenIdAuthenticationSettingsContractOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdAuthenticationSettingsContractOutput)
}

func (i OpenIdAuthenticationSettingsContractArgs) ToOpenIdAuthenticationSettingsContractPtrOutput() OpenIdAuthenticationSettingsContractPtrOutput {
	return i.ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (i OpenIdAuthenticationSettingsContractArgs) ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdAuthenticationSettingsContractOutput).ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(ctx)
}

// OpenIdAuthenticationSettingsContractPtrInput is an input type that accepts OpenIdAuthenticationSettingsContractArgs, OpenIdAuthenticationSettingsContractPtr and OpenIdAuthenticationSettingsContractPtrOutput values.
// You can construct a concrete instance of `OpenIdAuthenticationSettingsContractPtrInput` via:
//
//          OpenIdAuthenticationSettingsContractArgs{...}
//
//  or:
//
//          nil
type OpenIdAuthenticationSettingsContractPtrInput interface {
	pulumi.Input

	ToOpenIdAuthenticationSettingsContractPtrOutput() OpenIdAuthenticationSettingsContractPtrOutput
	ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(context.Context) OpenIdAuthenticationSettingsContractPtrOutput
}

type openIdAuthenticationSettingsContractPtrType OpenIdAuthenticationSettingsContractArgs

func OpenIdAuthenticationSettingsContractPtr(v *OpenIdAuthenticationSettingsContractArgs) OpenIdAuthenticationSettingsContractPtrInput {
	return (*openIdAuthenticationSettingsContractPtrType)(v)
}

func (*openIdAuthenticationSettingsContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIdAuthenticationSettingsContract)(nil)).Elem()
}

func (i *openIdAuthenticationSettingsContractPtrType) ToOpenIdAuthenticationSettingsContractPtrOutput() OpenIdAuthenticationSettingsContractPtrOutput {
	return i.ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (i *openIdAuthenticationSettingsContractPtrType) ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdAuthenticationSettingsContractPtrOutput)
}

// API OAuth2 Authentication settings details.
type OpenIdAuthenticationSettingsContractOutput struct{ *pulumi.OutputState }

func (OpenIdAuthenticationSettingsContractOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdAuthenticationSettingsContract)(nil)).Elem()
}

func (o OpenIdAuthenticationSettingsContractOutput) ToOpenIdAuthenticationSettingsContractOutput() OpenIdAuthenticationSettingsContractOutput {
	return o
}

func (o OpenIdAuthenticationSettingsContractOutput) ToOpenIdAuthenticationSettingsContractOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractOutput {
	return o
}

func (o OpenIdAuthenticationSettingsContractOutput) ToOpenIdAuthenticationSettingsContractPtrOutput() OpenIdAuthenticationSettingsContractPtrOutput {
	return o.ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (o OpenIdAuthenticationSettingsContractOutput) ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractPtrOutput {
	return o.ApplyT(func(v OpenIdAuthenticationSettingsContract) *OpenIdAuthenticationSettingsContract {
		return &v
	}).(OpenIdAuthenticationSettingsContractPtrOutput)
}

// How to send token to the server.
func (o OpenIdAuthenticationSettingsContractOutput) BearerTokenSendingMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OpenIdAuthenticationSettingsContract) []string { return v.BearerTokenSendingMethods }).(pulumi.StringArrayOutput)
}

// OAuth authorization server identifier.
func (o OpenIdAuthenticationSettingsContractOutput) OpenidProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIdAuthenticationSettingsContract) *string { return v.OpenidProviderId }).(pulumi.StringPtrOutput)
}

type OpenIdAuthenticationSettingsContractPtrOutput struct{ *pulumi.OutputState }

func (OpenIdAuthenticationSettingsContractPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIdAuthenticationSettingsContract)(nil)).Elem()
}

func (o OpenIdAuthenticationSettingsContractPtrOutput) ToOpenIdAuthenticationSettingsContractPtrOutput() OpenIdAuthenticationSettingsContractPtrOutput {
	return o
}

func (o OpenIdAuthenticationSettingsContractPtrOutput) ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractPtrOutput {
	return o
}

func (o OpenIdAuthenticationSettingsContractPtrOutput) Elem() OpenIdAuthenticationSettingsContractOutput {
	return o.ApplyT(func(v *OpenIdAuthenticationSettingsContract) OpenIdAuthenticationSettingsContract { return *v }).(OpenIdAuthenticationSettingsContractOutput)
}

// How to send token to the server.
func (o OpenIdAuthenticationSettingsContractPtrOutput) BearerTokenSendingMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OpenIdAuthenticationSettingsContract) []string {
		if v == nil {
			return nil
		}
		return v.BearerTokenSendingMethods
	}).(pulumi.StringArrayOutput)
}

// OAuth authorization server identifier.
func (o OpenIdAuthenticationSettingsContractPtrOutput) OpenidProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIdAuthenticationSettingsContract) *string {
		if v == nil {
			return nil
		}
		return v.OpenidProviderId
	}).(pulumi.StringPtrOutput)
}

// API OAuth2 Authentication settings details.
type OpenIdAuthenticationSettingsContractResponse struct {
	// How to send token to the server.
	BearerTokenSendingMethods []string `pulumi:"bearerTokenSendingMethods"`
	// OAuth authorization server identifier.
	OpenidProviderId *string `pulumi:"openidProviderId"`
}

// OpenIdAuthenticationSettingsContractResponseInput is an input type that accepts OpenIdAuthenticationSettingsContractResponseArgs and OpenIdAuthenticationSettingsContractResponseOutput values.
// You can construct a concrete instance of `OpenIdAuthenticationSettingsContractResponseInput` via:
//
//          OpenIdAuthenticationSettingsContractResponseArgs{...}
type OpenIdAuthenticationSettingsContractResponseInput interface {
	pulumi.Input

	ToOpenIdAuthenticationSettingsContractResponseOutput() OpenIdAuthenticationSettingsContractResponseOutput
	ToOpenIdAuthenticationSettingsContractResponseOutputWithContext(context.Context) OpenIdAuthenticationSettingsContractResponseOutput
}

// API OAuth2 Authentication settings details.
type OpenIdAuthenticationSettingsContractResponseArgs struct {
	// How to send token to the server.
	BearerTokenSendingMethods pulumi.StringArrayInput `pulumi:"bearerTokenSendingMethods"`
	// OAuth authorization server identifier.
	OpenidProviderId pulumi.StringPtrInput `pulumi:"openidProviderId"`
}

func (OpenIdAuthenticationSettingsContractResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdAuthenticationSettingsContractResponse)(nil)).Elem()
}

func (i OpenIdAuthenticationSettingsContractResponseArgs) ToOpenIdAuthenticationSettingsContractResponseOutput() OpenIdAuthenticationSettingsContractResponseOutput {
	return i.ToOpenIdAuthenticationSettingsContractResponseOutputWithContext(context.Background())
}

func (i OpenIdAuthenticationSettingsContractResponseArgs) ToOpenIdAuthenticationSettingsContractResponseOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdAuthenticationSettingsContractResponseOutput)
}

func (i OpenIdAuthenticationSettingsContractResponseArgs) ToOpenIdAuthenticationSettingsContractResponsePtrOutput() OpenIdAuthenticationSettingsContractResponsePtrOutput {
	return i.ToOpenIdAuthenticationSettingsContractResponsePtrOutputWithContext(context.Background())
}

func (i OpenIdAuthenticationSettingsContractResponseArgs) ToOpenIdAuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdAuthenticationSettingsContractResponseOutput).ToOpenIdAuthenticationSettingsContractResponsePtrOutputWithContext(ctx)
}

// OpenIdAuthenticationSettingsContractResponsePtrInput is an input type that accepts OpenIdAuthenticationSettingsContractResponseArgs, OpenIdAuthenticationSettingsContractResponsePtr and OpenIdAuthenticationSettingsContractResponsePtrOutput values.
// You can construct a concrete instance of `OpenIdAuthenticationSettingsContractResponsePtrInput` via:
//
//          OpenIdAuthenticationSettingsContractResponseArgs{...}
//
//  or:
//
//          nil
type OpenIdAuthenticationSettingsContractResponsePtrInput interface {
	pulumi.Input

	ToOpenIdAuthenticationSettingsContractResponsePtrOutput() OpenIdAuthenticationSettingsContractResponsePtrOutput
	ToOpenIdAuthenticationSettingsContractResponsePtrOutputWithContext(context.Context) OpenIdAuthenticationSettingsContractResponsePtrOutput
}

type openIdAuthenticationSettingsContractResponsePtrType OpenIdAuthenticationSettingsContractResponseArgs

func OpenIdAuthenticationSettingsContractResponsePtr(v *OpenIdAuthenticationSettingsContractResponseArgs) OpenIdAuthenticationSettingsContractResponsePtrInput {
	return (*openIdAuthenticationSettingsContractResponsePtrType)(v)
}

func (*openIdAuthenticationSettingsContractResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIdAuthenticationSettingsContractResponse)(nil)).Elem()
}

func (i *openIdAuthenticationSettingsContractResponsePtrType) ToOpenIdAuthenticationSettingsContractResponsePtrOutput() OpenIdAuthenticationSettingsContractResponsePtrOutput {
	return i.ToOpenIdAuthenticationSettingsContractResponsePtrOutputWithContext(context.Background())
}

func (i *openIdAuthenticationSettingsContractResponsePtrType) ToOpenIdAuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdAuthenticationSettingsContractResponsePtrOutput)
}

// API OAuth2 Authentication settings details.
type OpenIdAuthenticationSettingsContractResponseOutput struct{ *pulumi.OutputState }

func (OpenIdAuthenticationSettingsContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdAuthenticationSettingsContractResponse)(nil)).Elem()
}

func (o OpenIdAuthenticationSettingsContractResponseOutput) ToOpenIdAuthenticationSettingsContractResponseOutput() OpenIdAuthenticationSettingsContractResponseOutput {
	return o
}

func (o OpenIdAuthenticationSettingsContractResponseOutput) ToOpenIdAuthenticationSettingsContractResponseOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractResponseOutput {
	return o
}

func (o OpenIdAuthenticationSettingsContractResponseOutput) ToOpenIdAuthenticationSettingsContractResponsePtrOutput() OpenIdAuthenticationSettingsContractResponsePtrOutput {
	return o.ToOpenIdAuthenticationSettingsContractResponsePtrOutputWithContext(context.Background())
}

func (o OpenIdAuthenticationSettingsContractResponseOutput) ToOpenIdAuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v OpenIdAuthenticationSettingsContractResponse) *OpenIdAuthenticationSettingsContractResponse {
		return &v
	}).(OpenIdAuthenticationSettingsContractResponsePtrOutput)
}

// How to send token to the server.
func (o OpenIdAuthenticationSettingsContractResponseOutput) BearerTokenSendingMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OpenIdAuthenticationSettingsContractResponse) []string { return v.BearerTokenSendingMethods }).(pulumi.StringArrayOutput)
}

// OAuth authorization server identifier.
func (o OpenIdAuthenticationSettingsContractResponseOutput) OpenidProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIdAuthenticationSettingsContractResponse) *string { return v.OpenidProviderId }).(pulumi.StringPtrOutput)
}

type OpenIdAuthenticationSettingsContractResponsePtrOutput struct{ *pulumi.OutputState }

func (OpenIdAuthenticationSettingsContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIdAuthenticationSettingsContractResponse)(nil)).Elem()
}

func (o OpenIdAuthenticationSettingsContractResponsePtrOutput) ToOpenIdAuthenticationSettingsContractResponsePtrOutput() OpenIdAuthenticationSettingsContractResponsePtrOutput {
	return o
}

func (o OpenIdAuthenticationSettingsContractResponsePtrOutput) ToOpenIdAuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractResponsePtrOutput {
	return o
}

func (o OpenIdAuthenticationSettingsContractResponsePtrOutput) Elem() OpenIdAuthenticationSettingsContractResponseOutput {
	return o.ApplyT(func(v *OpenIdAuthenticationSettingsContractResponse) OpenIdAuthenticationSettingsContractResponse {
		return *v
	}).(OpenIdAuthenticationSettingsContractResponseOutput)
}

// How to send token to the server.
func (o OpenIdAuthenticationSettingsContractResponsePtrOutput) BearerTokenSendingMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OpenIdAuthenticationSettingsContractResponse) []string {
		if v == nil {
			return nil
		}
		return v.BearerTokenSendingMethods
	}).(pulumi.StringArrayOutput)
}

// OAuth authorization server identifier.
func (o OpenIdAuthenticationSettingsContractResponsePtrOutput) OpenidProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIdAuthenticationSettingsContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.OpenidProviderId
	}).(pulumi.StringPtrOutput)
}

// OpenId Connect Provider details.
type OpenIdConnectProviderType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// OpenId Connect Provider contract properties.
	Properties OpenidConnectProviderContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// OpenIdConnectProviderTypeInput is an input type that accepts OpenIdConnectProviderTypeArgs and OpenIdConnectProviderTypeOutput values.
// You can construct a concrete instance of `OpenIdConnectProviderTypeInput` via:
//
//          OpenIdConnectProviderTypeArgs{...}
type OpenIdConnectProviderTypeInput interface {
	pulumi.Input

	ToOpenIdConnectProviderTypeOutput() OpenIdConnectProviderTypeOutput
	ToOpenIdConnectProviderTypeOutputWithContext(context.Context) OpenIdConnectProviderTypeOutput
}

// OpenId Connect Provider details.
type OpenIdConnectProviderTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// OpenId Connect Provider contract properties.
	Properties OpenidConnectProviderContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (OpenIdConnectProviderTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdConnectProviderType)(nil)).Elem()
}

func (i OpenIdConnectProviderTypeArgs) ToOpenIdConnectProviderTypeOutput() OpenIdConnectProviderTypeOutput {
	return i.ToOpenIdConnectProviderTypeOutputWithContext(context.Background())
}

func (i OpenIdConnectProviderTypeArgs) ToOpenIdConnectProviderTypeOutputWithContext(ctx context.Context) OpenIdConnectProviderTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdConnectProviderTypeOutput)
}

// OpenId Connect Provider details.
type OpenIdConnectProviderTypeOutput struct{ *pulumi.OutputState }

func (OpenIdConnectProviderTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdConnectProviderType)(nil)).Elem()
}

func (o OpenIdConnectProviderTypeOutput) ToOpenIdConnectProviderTypeOutput() OpenIdConnectProviderTypeOutput {
	return o
}

func (o OpenIdConnectProviderTypeOutput) ToOpenIdConnectProviderTypeOutputWithContext(ctx context.Context) OpenIdConnectProviderTypeOutput {
	return o
}

// Resource name.
func (o OpenIdConnectProviderTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OpenIdConnectProviderType) string { return v.Name }).(pulumi.StringOutput)
}

// OpenId Connect Provider contract properties.
func (o OpenIdConnectProviderTypeOutput) Properties() OpenidConnectProviderContractPropertiesResponseOutput {
	return o.ApplyT(func(v OpenIdConnectProviderType) OpenidConnectProviderContractPropertiesResponse { return v.Properties }).(OpenidConnectProviderContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o OpenIdConnectProviderTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OpenIdConnectProviderType) string { return v.Type }).(pulumi.StringOutput)
}

// OpenID Connect Providers Contract.
type OpenidConnectProviderContractPropertiesResponse struct {
	// Client ID of developer console which is the client application.
	ClientId string `pulumi:"clientId"`
	// Client Secret of developer console which is the client application.
	ClientSecret *string `pulumi:"clientSecret"`
	// User-friendly description of OpenID Connect Provider.
	Description *string `pulumi:"description"`
	// User-friendly OpenID Connect Provider name.
	DisplayName string `pulumi:"displayName"`
	// Metadata endpoint URI.
	MetadataEndpoint string `pulumi:"metadataEndpoint"`
}

// OpenidConnectProviderContractPropertiesResponseInput is an input type that accepts OpenidConnectProviderContractPropertiesResponseArgs and OpenidConnectProviderContractPropertiesResponseOutput values.
// You can construct a concrete instance of `OpenidConnectProviderContractPropertiesResponseInput` via:
//
//          OpenidConnectProviderContractPropertiesResponseArgs{...}
type OpenidConnectProviderContractPropertiesResponseInput interface {
	pulumi.Input

	ToOpenidConnectProviderContractPropertiesResponseOutput() OpenidConnectProviderContractPropertiesResponseOutput
	ToOpenidConnectProviderContractPropertiesResponseOutputWithContext(context.Context) OpenidConnectProviderContractPropertiesResponseOutput
}

// OpenID Connect Providers Contract.
type OpenidConnectProviderContractPropertiesResponseArgs struct {
	// Client ID of developer console which is the client application.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Client Secret of developer console which is the client application.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// User-friendly description of OpenID Connect Provider.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// User-friendly OpenID Connect Provider name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Metadata endpoint URI.
	MetadataEndpoint pulumi.StringInput `pulumi:"metadataEndpoint"`
}

func (OpenidConnectProviderContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenidConnectProviderContractPropertiesResponse)(nil)).Elem()
}

func (i OpenidConnectProviderContractPropertiesResponseArgs) ToOpenidConnectProviderContractPropertiesResponseOutput() OpenidConnectProviderContractPropertiesResponseOutput {
	return i.ToOpenidConnectProviderContractPropertiesResponseOutputWithContext(context.Background())
}

func (i OpenidConnectProviderContractPropertiesResponseArgs) ToOpenidConnectProviderContractPropertiesResponseOutputWithContext(ctx context.Context) OpenidConnectProviderContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenidConnectProviderContractPropertiesResponseOutput)
}

func (i OpenidConnectProviderContractPropertiesResponseArgs) ToOpenidConnectProviderContractPropertiesResponsePtrOutput() OpenidConnectProviderContractPropertiesResponsePtrOutput {
	return i.ToOpenidConnectProviderContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i OpenidConnectProviderContractPropertiesResponseArgs) ToOpenidConnectProviderContractPropertiesResponsePtrOutputWithContext(ctx context.Context) OpenidConnectProviderContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenidConnectProviderContractPropertiesResponseOutput).ToOpenidConnectProviderContractPropertiesResponsePtrOutputWithContext(ctx)
}

// OpenidConnectProviderContractPropertiesResponsePtrInput is an input type that accepts OpenidConnectProviderContractPropertiesResponseArgs, OpenidConnectProviderContractPropertiesResponsePtr and OpenidConnectProviderContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `OpenidConnectProviderContractPropertiesResponsePtrInput` via:
//
//          OpenidConnectProviderContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type OpenidConnectProviderContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToOpenidConnectProviderContractPropertiesResponsePtrOutput() OpenidConnectProviderContractPropertiesResponsePtrOutput
	ToOpenidConnectProviderContractPropertiesResponsePtrOutputWithContext(context.Context) OpenidConnectProviderContractPropertiesResponsePtrOutput
}

type openidConnectProviderContractPropertiesResponsePtrType OpenidConnectProviderContractPropertiesResponseArgs

func OpenidConnectProviderContractPropertiesResponsePtr(v *OpenidConnectProviderContractPropertiesResponseArgs) OpenidConnectProviderContractPropertiesResponsePtrInput {
	return (*openidConnectProviderContractPropertiesResponsePtrType)(v)
}

func (*openidConnectProviderContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenidConnectProviderContractPropertiesResponse)(nil)).Elem()
}

func (i *openidConnectProviderContractPropertiesResponsePtrType) ToOpenidConnectProviderContractPropertiesResponsePtrOutput() OpenidConnectProviderContractPropertiesResponsePtrOutput {
	return i.ToOpenidConnectProviderContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *openidConnectProviderContractPropertiesResponsePtrType) ToOpenidConnectProviderContractPropertiesResponsePtrOutputWithContext(ctx context.Context) OpenidConnectProviderContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenidConnectProviderContractPropertiesResponsePtrOutput)
}

// OpenID Connect Providers Contract.
type OpenidConnectProviderContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (OpenidConnectProviderContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenidConnectProviderContractPropertiesResponse)(nil)).Elem()
}

func (o OpenidConnectProviderContractPropertiesResponseOutput) ToOpenidConnectProviderContractPropertiesResponseOutput() OpenidConnectProviderContractPropertiesResponseOutput {
	return o
}

func (o OpenidConnectProviderContractPropertiesResponseOutput) ToOpenidConnectProviderContractPropertiesResponseOutputWithContext(ctx context.Context) OpenidConnectProviderContractPropertiesResponseOutput {
	return o
}

func (o OpenidConnectProviderContractPropertiesResponseOutput) ToOpenidConnectProviderContractPropertiesResponsePtrOutput() OpenidConnectProviderContractPropertiesResponsePtrOutput {
	return o.ToOpenidConnectProviderContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o OpenidConnectProviderContractPropertiesResponseOutput) ToOpenidConnectProviderContractPropertiesResponsePtrOutputWithContext(ctx context.Context) OpenidConnectProviderContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v OpenidConnectProviderContractPropertiesResponse) *OpenidConnectProviderContractPropertiesResponse {
		return &v
	}).(OpenidConnectProviderContractPropertiesResponsePtrOutput)
}

// Client ID of developer console which is the client application.
func (o OpenidConnectProviderContractPropertiesResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v OpenidConnectProviderContractPropertiesResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// Client Secret of developer console which is the client application.
func (o OpenidConnectProviderContractPropertiesResponseOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenidConnectProviderContractPropertiesResponse) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// User-friendly description of OpenID Connect Provider.
func (o OpenidConnectProviderContractPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenidConnectProviderContractPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// User-friendly OpenID Connect Provider name.
func (o OpenidConnectProviderContractPropertiesResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v OpenidConnectProviderContractPropertiesResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Metadata endpoint URI.
func (o OpenidConnectProviderContractPropertiesResponseOutput) MetadataEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v OpenidConnectProviderContractPropertiesResponse) string { return v.MetadataEndpoint }).(pulumi.StringOutput)
}

type OpenidConnectProviderContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (OpenidConnectProviderContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenidConnectProviderContractPropertiesResponse)(nil)).Elem()
}

func (o OpenidConnectProviderContractPropertiesResponsePtrOutput) ToOpenidConnectProviderContractPropertiesResponsePtrOutput() OpenidConnectProviderContractPropertiesResponsePtrOutput {
	return o
}

func (o OpenidConnectProviderContractPropertiesResponsePtrOutput) ToOpenidConnectProviderContractPropertiesResponsePtrOutputWithContext(ctx context.Context) OpenidConnectProviderContractPropertiesResponsePtrOutput {
	return o
}

func (o OpenidConnectProviderContractPropertiesResponsePtrOutput) Elem() OpenidConnectProviderContractPropertiesResponseOutput {
	return o.ApplyT(func(v *OpenidConnectProviderContractPropertiesResponse) OpenidConnectProviderContractPropertiesResponse {
		return *v
	}).(OpenidConnectProviderContractPropertiesResponseOutput)
}

// Client ID of developer console which is the client application.
func (o OpenidConnectProviderContractPropertiesResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenidConnectProviderContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client Secret of developer console which is the client application.
func (o OpenidConnectProviderContractPropertiesResponsePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenidConnectProviderContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// User-friendly description of OpenID Connect Provider.
func (o OpenidConnectProviderContractPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenidConnectProviderContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// User-friendly OpenID Connect Provider name.
func (o OpenidConnectProviderContractPropertiesResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenidConnectProviderContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Metadata endpoint URI.
func (o OpenidConnectProviderContractPropertiesResponsePtrOutput) MetadataEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenidConnectProviderContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MetadataEndpoint
	}).(pulumi.StringPtrOutput)
}

// Operation Contract Properties
type OperationContractPropertiesResponse struct {
	// Description of the operation. May include HTML formatting tags.
	Description *string `pulumi:"description"`
	// Operation Name.
	DisplayName string `pulumi:"displayName"`
	// A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.
	Method string `pulumi:"method"`
	// Operation Policies
	Policies *string `pulumi:"policies"`
	// An entity containing request details.
	Request *RequestContractResponse `pulumi:"request"`
	// Array of Operation responses.
	Responses []ResponseContractResponse `pulumi:"responses"`
	// Collection of URL template parameters.
	TemplateParameters []ParameterContractResponse `pulumi:"templateParameters"`
	// Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}
	UrlTemplate string `pulumi:"urlTemplate"`
}

// OperationContractPropertiesResponseInput is an input type that accepts OperationContractPropertiesResponseArgs and OperationContractPropertiesResponseOutput values.
// You can construct a concrete instance of `OperationContractPropertiesResponseInput` via:
//
//          OperationContractPropertiesResponseArgs{...}
type OperationContractPropertiesResponseInput interface {
	pulumi.Input

	ToOperationContractPropertiesResponseOutput() OperationContractPropertiesResponseOutput
	ToOperationContractPropertiesResponseOutputWithContext(context.Context) OperationContractPropertiesResponseOutput
}

// Operation Contract Properties
type OperationContractPropertiesResponseArgs struct {
	// Description of the operation. May include HTML formatting tags.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Operation Name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.
	Method pulumi.StringInput `pulumi:"method"`
	// Operation Policies
	Policies pulumi.StringPtrInput `pulumi:"policies"`
	// An entity containing request details.
	Request RequestContractResponsePtrInput `pulumi:"request"`
	// Array of Operation responses.
	Responses ResponseContractResponseArrayInput `pulumi:"responses"`
	// Collection of URL template parameters.
	TemplateParameters ParameterContractResponseArrayInput `pulumi:"templateParameters"`
	// Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}
	UrlTemplate pulumi.StringInput `pulumi:"urlTemplate"`
}

func (OperationContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationContractPropertiesResponse)(nil)).Elem()
}

func (i OperationContractPropertiesResponseArgs) ToOperationContractPropertiesResponseOutput() OperationContractPropertiesResponseOutput {
	return i.ToOperationContractPropertiesResponseOutputWithContext(context.Background())
}

func (i OperationContractPropertiesResponseArgs) ToOperationContractPropertiesResponseOutputWithContext(ctx context.Context) OperationContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationContractPropertiesResponseOutput)
}

func (i OperationContractPropertiesResponseArgs) ToOperationContractPropertiesResponsePtrOutput() OperationContractPropertiesResponsePtrOutput {
	return i.ToOperationContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i OperationContractPropertiesResponseArgs) ToOperationContractPropertiesResponsePtrOutputWithContext(ctx context.Context) OperationContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationContractPropertiesResponseOutput).ToOperationContractPropertiesResponsePtrOutputWithContext(ctx)
}

// OperationContractPropertiesResponsePtrInput is an input type that accepts OperationContractPropertiesResponseArgs, OperationContractPropertiesResponsePtr and OperationContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `OperationContractPropertiesResponsePtrInput` via:
//
//          OperationContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type OperationContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToOperationContractPropertiesResponsePtrOutput() OperationContractPropertiesResponsePtrOutput
	ToOperationContractPropertiesResponsePtrOutputWithContext(context.Context) OperationContractPropertiesResponsePtrOutput
}

type operationContractPropertiesResponsePtrType OperationContractPropertiesResponseArgs

func OperationContractPropertiesResponsePtr(v *OperationContractPropertiesResponseArgs) OperationContractPropertiesResponsePtrInput {
	return (*operationContractPropertiesResponsePtrType)(v)
}

func (*operationContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationContractPropertiesResponse)(nil)).Elem()
}

func (i *operationContractPropertiesResponsePtrType) ToOperationContractPropertiesResponsePtrOutput() OperationContractPropertiesResponsePtrOutput {
	return i.ToOperationContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *operationContractPropertiesResponsePtrType) ToOperationContractPropertiesResponsePtrOutputWithContext(ctx context.Context) OperationContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationContractPropertiesResponsePtrOutput)
}

// Operation Contract Properties
type OperationContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (OperationContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationContractPropertiesResponse)(nil)).Elem()
}

func (o OperationContractPropertiesResponseOutput) ToOperationContractPropertiesResponseOutput() OperationContractPropertiesResponseOutput {
	return o
}

func (o OperationContractPropertiesResponseOutput) ToOperationContractPropertiesResponseOutputWithContext(ctx context.Context) OperationContractPropertiesResponseOutput {
	return o
}

func (o OperationContractPropertiesResponseOutput) ToOperationContractPropertiesResponsePtrOutput() OperationContractPropertiesResponsePtrOutput {
	return o.ToOperationContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o OperationContractPropertiesResponseOutput) ToOperationContractPropertiesResponsePtrOutputWithContext(ctx context.Context) OperationContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v OperationContractPropertiesResponse) *OperationContractPropertiesResponse {
		return &v
	}).(OperationContractPropertiesResponsePtrOutput)
}

// Description of the operation. May include HTML formatting tags.
func (o OperationContractPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OperationContractPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Operation Name.
func (o OperationContractPropertiesResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v OperationContractPropertiesResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.
func (o OperationContractPropertiesResponseOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v OperationContractPropertiesResponse) string { return v.Method }).(pulumi.StringOutput)
}

// Operation Policies
func (o OperationContractPropertiesResponseOutput) Policies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OperationContractPropertiesResponse) *string { return v.Policies }).(pulumi.StringPtrOutput)
}

// An entity containing request details.
func (o OperationContractPropertiesResponseOutput) Request() RequestContractResponsePtrOutput {
	return o.ApplyT(func(v OperationContractPropertiesResponse) *RequestContractResponse { return v.Request }).(RequestContractResponsePtrOutput)
}

// Array of Operation responses.
func (o OperationContractPropertiesResponseOutput) Responses() ResponseContractResponseArrayOutput {
	return o.ApplyT(func(v OperationContractPropertiesResponse) []ResponseContractResponse { return v.Responses }).(ResponseContractResponseArrayOutput)
}

// Collection of URL template parameters.
func (o OperationContractPropertiesResponseOutput) TemplateParameters() ParameterContractResponseArrayOutput {
	return o.ApplyT(func(v OperationContractPropertiesResponse) []ParameterContractResponse { return v.TemplateParameters }).(ParameterContractResponseArrayOutput)
}

// Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}
func (o OperationContractPropertiesResponseOutput) UrlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v OperationContractPropertiesResponse) string { return v.UrlTemplate }).(pulumi.StringOutput)
}

type OperationContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (OperationContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationContractPropertiesResponse)(nil)).Elem()
}

func (o OperationContractPropertiesResponsePtrOutput) ToOperationContractPropertiesResponsePtrOutput() OperationContractPropertiesResponsePtrOutput {
	return o
}

func (o OperationContractPropertiesResponsePtrOutput) ToOperationContractPropertiesResponsePtrOutputWithContext(ctx context.Context) OperationContractPropertiesResponsePtrOutput {
	return o
}

func (o OperationContractPropertiesResponsePtrOutput) Elem() OperationContractPropertiesResponseOutput {
	return o.ApplyT(func(v *OperationContractPropertiesResponse) OperationContractPropertiesResponse { return *v }).(OperationContractPropertiesResponseOutput)
}

// Description of the operation. May include HTML formatting tags.
func (o OperationContractPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OperationContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Operation Name.
func (o OperationContractPropertiesResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OperationContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.
func (o OperationContractPropertiesResponsePtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OperationContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Method
	}).(pulumi.StringPtrOutput)
}

// Operation Policies
func (o OperationContractPropertiesResponsePtrOutput) Policies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OperationContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Policies
	}).(pulumi.StringPtrOutput)
}

// An entity containing request details.
func (o OperationContractPropertiesResponsePtrOutput) Request() RequestContractResponsePtrOutput {
	return o.ApplyT(func(v *OperationContractPropertiesResponse) *RequestContractResponse {
		if v == nil {
			return nil
		}
		return v.Request
	}).(RequestContractResponsePtrOutput)
}

// Array of Operation responses.
func (o OperationContractPropertiesResponsePtrOutput) Responses() ResponseContractResponseArrayOutput {
	return o.ApplyT(func(v *OperationContractPropertiesResponse) []ResponseContractResponse {
		if v == nil {
			return nil
		}
		return v.Responses
	}).(ResponseContractResponseArrayOutput)
}

// Collection of URL template parameters.
func (o OperationContractPropertiesResponsePtrOutput) TemplateParameters() ParameterContractResponseArrayOutput {
	return o.ApplyT(func(v *OperationContractPropertiesResponse) []ParameterContractResponse {
		if v == nil {
			return nil
		}
		return v.TemplateParameters
	}).(ParameterContractResponseArrayOutput)
}

// Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}
func (o OperationContractPropertiesResponsePtrOutput) UrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OperationContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UrlTemplate
	}).(pulumi.StringPtrOutput)
}

// Operation parameters details.
type ParameterContract struct {
	// Default parameter value.
	DefaultValue *string `pulumi:"defaultValue"`
	// Parameter description.
	Description *string `pulumi:"description"`
	// Parameter name.
	Name string `pulumi:"name"`
	// Specifies whether parameter is required or not.
	Required *bool `pulumi:"required"`
	// Parameter type.
	Type string `pulumi:"type"`
	// Parameter values.
	Values []string `pulumi:"values"`
}

// ParameterContractInput is an input type that accepts ParameterContractArgs and ParameterContractOutput values.
// You can construct a concrete instance of `ParameterContractInput` via:
//
//          ParameterContractArgs{...}
type ParameterContractInput interface {
	pulumi.Input

	ToParameterContractOutput() ParameterContractOutput
	ToParameterContractOutputWithContext(context.Context) ParameterContractOutput
}

// Operation parameters details.
type ParameterContractArgs struct {
	// Default parameter value.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// Parameter description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Parameter name.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies whether parameter is required or not.
	Required pulumi.BoolPtrInput `pulumi:"required"`
	// Parameter type.
	Type pulumi.StringInput `pulumi:"type"`
	// Parameter values.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ParameterContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterContract)(nil)).Elem()
}

func (i ParameterContractArgs) ToParameterContractOutput() ParameterContractOutput {
	return i.ToParameterContractOutputWithContext(context.Background())
}

func (i ParameterContractArgs) ToParameterContractOutputWithContext(ctx context.Context) ParameterContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterContractOutput)
}

// ParameterContractArrayInput is an input type that accepts ParameterContractArray and ParameterContractArrayOutput values.
// You can construct a concrete instance of `ParameterContractArrayInput` via:
//
//          ParameterContractArray{ ParameterContractArgs{...} }
type ParameterContractArrayInput interface {
	pulumi.Input

	ToParameterContractArrayOutput() ParameterContractArrayOutput
	ToParameterContractArrayOutputWithContext(context.Context) ParameterContractArrayOutput
}

type ParameterContractArray []ParameterContractInput

func (ParameterContractArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterContract)(nil)).Elem()
}

func (i ParameterContractArray) ToParameterContractArrayOutput() ParameterContractArrayOutput {
	return i.ToParameterContractArrayOutputWithContext(context.Background())
}

func (i ParameterContractArray) ToParameterContractArrayOutputWithContext(ctx context.Context) ParameterContractArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterContractArrayOutput)
}

// Operation parameters details.
type ParameterContractOutput struct{ *pulumi.OutputState }

func (ParameterContractOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterContract)(nil)).Elem()
}

func (o ParameterContractOutput) ToParameterContractOutput() ParameterContractOutput {
	return o
}

func (o ParameterContractOutput) ToParameterContractOutputWithContext(ctx context.Context) ParameterContractOutput {
	return o
}

// Default parameter value.
func (o ParameterContractOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterContract) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// Parameter description.
func (o ParameterContractOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterContract) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Parameter name.
func (o ParameterContractOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterContract) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies whether parameter is required or not.
func (o ParameterContractOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ParameterContract) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

// Parameter type.
func (o ParameterContractOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterContract) string { return v.Type }).(pulumi.StringOutput)
}

// Parameter values.
func (o ParameterContractOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ParameterContract) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ParameterContractArrayOutput struct{ *pulumi.OutputState }

func (ParameterContractArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterContract)(nil)).Elem()
}

func (o ParameterContractArrayOutput) ToParameterContractArrayOutput() ParameterContractArrayOutput {
	return o
}

func (o ParameterContractArrayOutput) ToParameterContractArrayOutputWithContext(ctx context.Context) ParameterContractArrayOutput {
	return o
}

func (o ParameterContractArrayOutput) Index(i pulumi.IntInput) ParameterContractOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ParameterContract {
		return vs[0].([]ParameterContract)[vs[1].(int)]
	}).(ParameterContractOutput)
}

// Operation parameters details.
type ParameterContractResponse struct {
	// Default parameter value.
	DefaultValue *string `pulumi:"defaultValue"`
	// Parameter description.
	Description *string `pulumi:"description"`
	// Parameter name.
	Name string `pulumi:"name"`
	// Specifies whether parameter is required or not.
	Required *bool `pulumi:"required"`
	// Parameter type.
	Type string `pulumi:"type"`
	// Parameter values.
	Values []string `pulumi:"values"`
}

// ParameterContractResponseInput is an input type that accepts ParameterContractResponseArgs and ParameterContractResponseOutput values.
// You can construct a concrete instance of `ParameterContractResponseInput` via:
//
//          ParameterContractResponseArgs{...}
type ParameterContractResponseInput interface {
	pulumi.Input

	ToParameterContractResponseOutput() ParameterContractResponseOutput
	ToParameterContractResponseOutputWithContext(context.Context) ParameterContractResponseOutput
}

// Operation parameters details.
type ParameterContractResponseArgs struct {
	// Default parameter value.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// Parameter description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Parameter name.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies whether parameter is required or not.
	Required pulumi.BoolPtrInput `pulumi:"required"`
	// Parameter type.
	Type pulumi.StringInput `pulumi:"type"`
	// Parameter values.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ParameterContractResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterContractResponse)(nil)).Elem()
}

func (i ParameterContractResponseArgs) ToParameterContractResponseOutput() ParameterContractResponseOutput {
	return i.ToParameterContractResponseOutputWithContext(context.Background())
}

func (i ParameterContractResponseArgs) ToParameterContractResponseOutputWithContext(ctx context.Context) ParameterContractResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterContractResponseOutput)
}

// ParameterContractResponseArrayInput is an input type that accepts ParameterContractResponseArray and ParameterContractResponseArrayOutput values.
// You can construct a concrete instance of `ParameterContractResponseArrayInput` via:
//
//          ParameterContractResponseArray{ ParameterContractResponseArgs{...} }
type ParameterContractResponseArrayInput interface {
	pulumi.Input

	ToParameterContractResponseArrayOutput() ParameterContractResponseArrayOutput
	ToParameterContractResponseArrayOutputWithContext(context.Context) ParameterContractResponseArrayOutput
}

type ParameterContractResponseArray []ParameterContractResponseInput

func (ParameterContractResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterContractResponse)(nil)).Elem()
}

func (i ParameterContractResponseArray) ToParameterContractResponseArrayOutput() ParameterContractResponseArrayOutput {
	return i.ToParameterContractResponseArrayOutputWithContext(context.Background())
}

func (i ParameterContractResponseArray) ToParameterContractResponseArrayOutputWithContext(ctx context.Context) ParameterContractResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterContractResponseArrayOutput)
}

// Operation parameters details.
type ParameterContractResponseOutput struct{ *pulumi.OutputState }

func (ParameterContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterContractResponse)(nil)).Elem()
}

func (o ParameterContractResponseOutput) ToParameterContractResponseOutput() ParameterContractResponseOutput {
	return o
}

func (o ParameterContractResponseOutput) ToParameterContractResponseOutputWithContext(ctx context.Context) ParameterContractResponseOutput {
	return o
}

// Default parameter value.
func (o ParameterContractResponseOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterContractResponse) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// Parameter description.
func (o ParameterContractResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterContractResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Parameter name.
func (o ParameterContractResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterContractResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies whether parameter is required or not.
func (o ParameterContractResponseOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ParameterContractResponse) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

// Parameter type.
func (o ParameterContractResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterContractResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Parameter values.
func (o ParameterContractResponseOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ParameterContractResponse) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ParameterContractResponseArrayOutput struct{ *pulumi.OutputState }

func (ParameterContractResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterContractResponse)(nil)).Elem()
}

func (o ParameterContractResponseArrayOutput) ToParameterContractResponseArrayOutput() ParameterContractResponseArrayOutput {
	return o
}

func (o ParameterContractResponseArrayOutput) ToParameterContractResponseArrayOutputWithContext(ctx context.Context) ParameterContractResponseArrayOutput {
	return o
}

func (o ParameterContractResponseArrayOutput) Index(i pulumi.IntInput) ParameterContractResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ParameterContractResponse {
		return vs[0].([]ParameterContractResponse)[vs[1].(int)]
	}).(ParameterContractResponseOutput)
}

// Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
type PipelineDiagnosticSettings struct {
	// Diagnostic settings for request.
	Request *HttpMessageDiagnostic `pulumi:"request"`
	// Diagnostic settings for response.
	Response *HttpMessageDiagnostic `pulumi:"response"`
}

// PipelineDiagnosticSettingsInput is an input type that accepts PipelineDiagnosticSettingsArgs and PipelineDiagnosticSettingsOutput values.
// You can construct a concrete instance of `PipelineDiagnosticSettingsInput` via:
//
//          PipelineDiagnosticSettingsArgs{...}
type PipelineDiagnosticSettingsInput interface {
	pulumi.Input

	ToPipelineDiagnosticSettingsOutput() PipelineDiagnosticSettingsOutput
	ToPipelineDiagnosticSettingsOutputWithContext(context.Context) PipelineDiagnosticSettingsOutput
}

// Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
type PipelineDiagnosticSettingsArgs struct {
	// Diagnostic settings for request.
	Request HttpMessageDiagnosticPtrInput `pulumi:"request"`
	// Diagnostic settings for response.
	Response HttpMessageDiagnosticPtrInput `pulumi:"response"`
}

func (PipelineDiagnosticSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDiagnosticSettings)(nil)).Elem()
}

func (i PipelineDiagnosticSettingsArgs) ToPipelineDiagnosticSettingsOutput() PipelineDiagnosticSettingsOutput {
	return i.ToPipelineDiagnosticSettingsOutputWithContext(context.Background())
}

func (i PipelineDiagnosticSettingsArgs) ToPipelineDiagnosticSettingsOutputWithContext(ctx context.Context) PipelineDiagnosticSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDiagnosticSettingsOutput)
}

func (i PipelineDiagnosticSettingsArgs) ToPipelineDiagnosticSettingsPtrOutput() PipelineDiagnosticSettingsPtrOutput {
	return i.ToPipelineDiagnosticSettingsPtrOutputWithContext(context.Background())
}

func (i PipelineDiagnosticSettingsArgs) ToPipelineDiagnosticSettingsPtrOutputWithContext(ctx context.Context) PipelineDiagnosticSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDiagnosticSettingsOutput).ToPipelineDiagnosticSettingsPtrOutputWithContext(ctx)
}

// PipelineDiagnosticSettingsPtrInput is an input type that accepts PipelineDiagnosticSettingsArgs, PipelineDiagnosticSettingsPtr and PipelineDiagnosticSettingsPtrOutput values.
// You can construct a concrete instance of `PipelineDiagnosticSettingsPtrInput` via:
//
//          PipelineDiagnosticSettingsArgs{...}
//
//  or:
//
//          nil
type PipelineDiagnosticSettingsPtrInput interface {
	pulumi.Input

	ToPipelineDiagnosticSettingsPtrOutput() PipelineDiagnosticSettingsPtrOutput
	ToPipelineDiagnosticSettingsPtrOutputWithContext(context.Context) PipelineDiagnosticSettingsPtrOutput
}

type pipelineDiagnosticSettingsPtrType PipelineDiagnosticSettingsArgs

func PipelineDiagnosticSettingsPtr(v *PipelineDiagnosticSettingsArgs) PipelineDiagnosticSettingsPtrInput {
	return (*pipelineDiagnosticSettingsPtrType)(v)
}

func (*pipelineDiagnosticSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineDiagnosticSettings)(nil)).Elem()
}

func (i *pipelineDiagnosticSettingsPtrType) ToPipelineDiagnosticSettingsPtrOutput() PipelineDiagnosticSettingsPtrOutput {
	return i.ToPipelineDiagnosticSettingsPtrOutputWithContext(context.Background())
}

func (i *pipelineDiagnosticSettingsPtrType) ToPipelineDiagnosticSettingsPtrOutputWithContext(ctx context.Context) PipelineDiagnosticSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDiagnosticSettingsPtrOutput)
}

// Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
type PipelineDiagnosticSettingsOutput struct{ *pulumi.OutputState }

func (PipelineDiagnosticSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDiagnosticSettings)(nil)).Elem()
}

func (o PipelineDiagnosticSettingsOutput) ToPipelineDiagnosticSettingsOutput() PipelineDiagnosticSettingsOutput {
	return o
}

func (o PipelineDiagnosticSettingsOutput) ToPipelineDiagnosticSettingsOutputWithContext(ctx context.Context) PipelineDiagnosticSettingsOutput {
	return o
}

func (o PipelineDiagnosticSettingsOutput) ToPipelineDiagnosticSettingsPtrOutput() PipelineDiagnosticSettingsPtrOutput {
	return o.ToPipelineDiagnosticSettingsPtrOutputWithContext(context.Background())
}

func (o PipelineDiagnosticSettingsOutput) ToPipelineDiagnosticSettingsPtrOutputWithContext(ctx context.Context) PipelineDiagnosticSettingsPtrOutput {
	return o.ApplyT(func(v PipelineDiagnosticSettings) *PipelineDiagnosticSettings {
		return &v
	}).(PipelineDiagnosticSettingsPtrOutput)
}

// Diagnostic settings for request.
func (o PipelineDiagnosticSettingsOutput) Request() HttpMessageDiagnosticPtrOutput {
	return o.ApplyT(func(v PipelineDiagnosticSettings) *HttpMessageDiagnostic { return v.Request }).(HttpMessageDiagnosticPtrOutput)
}

// Diagnostic settings for response.
func (o PipelineDiagnosticSettingsOutput) Response() HttpMessageDiagnosticPtrOutput {
	return o.ApplyT(func(v PipelineDiagnosticSettings) *HttpMessageDiagnostic { return v.Response }).(HttpMessageDiagnosticPtrOutput)
}

type PipelineDiagnosticSettingsPtrOutput struct{ *pulumi.OutputState }

func (PipelineDiagnosticSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineDiagnosticSettings)(nil)).Elem()
}

func (o PipelineDiagnosticSettingsPtrOutput) ToPipelineDiagnosticSettingsPtrOutput() PipelineDiagnosticSettingsPtrOutput {
	return o
}

func (o PipelineDiagnosticSettingsPtrOutput) ToPipelineDiagnosticSettingsPtrOutputWithContext(ctx context.Context) PipelineDiagnosticSettingsPtrOutput {
	return o
}

func (o PipelineDiagnosticSettingsPtrOutput) Elem() PipelineDiagnosticSettingsOutput {
	return o.ApplyT(func(v *PipelineDiagnosticSettings) PipelineDiagnosticSettings { return *v }).(PipelineDiagnosticSettingsOutput)
}

// Diagnostic settings for request.
func (o PipelineDiagnosticSettingsPtrOutput) Request() HttpMessageDiagnosticPtrOutput {
	return o.ApplyT(func(v *PipelineDiagnosticSettings) *HttpMessageDiagnostic {
		if v == nil {
			return nil
		}
		return v.Request
	}).(HttpMessageDiagnosticPtrOutput)
}

// Diagnostic settings for response.
func (o PipelineDiagnosticSettingsPtrOutput) Response() HttpMessageDiagnosticPtrOutput {
	return o.ApplyT(func(v *PipelineDiagnosticSettings) *HttpMessageDiagnostic {
		if v == nil {
			return nil
		}
		return v.Response
	}).(HttpMessageDiagnosticPtrOutput)
}

// Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
type PipelineDiagnosticSettingsResponse struct {
	// Diagnostic settings for request.
	Request *HttpMessageDiagnosticResponse `pulumi:"request"`
	// Diagnostic settings for response.
	Response *HttpMessageDiagnosticResponse `pulumi:"response"`
}

// PipelineDiagnosticSettingsResponseInput is an input type that accepts PipelineDiagnosticSettingsResponseArgs and PipelineDiagnosticSettingsResponseOutput values.
// You can construct a concrete instance of `PipelineDiagnosticSettingsResponseInput` via:
//
//          PipelineDiagnosticSettingsResponseArgs{...}
type PipelineDiagnosticSettingsResponseInput interface {
	pulumi.Input

	ToPipelineDiagnosticSettingsResponseOutput() PipelineDiagnosticSettingsResponseOutput
	ToPipelineDiagnosticSettingsResponseOutputWithContext(context.Context) PipelineDiagnosticSettingsResponseOutput
}

// Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
type PipelineDiagnosticSettingsResponseArgs struct {
	// Diagnostic settings for request.
	Request HttpMessageDiagnosticResponsePtrInput `pulumi:"request"`
	// Diagnostic settings for response.
	Response HttpMessageDiagnosticResponsePtrInput `pulumi:"response"`
}

func (PipelineDiagnosticSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDiagnosticSettingsResponse)(nil)).Elem()
}

func (i PipelineDiagnosticSettingsResponseArgs) ToPipelineDiagnosticSettingsResponseOutput() PipelineDiagnosticSettingsResponseOutput {
	return i.ToPipelineDiagnosticSettingsResponseOutputWithContext(context.Background())
}

func (i PipelineDiagnosticSettingsResponseArgs) ToPipelineDiagnosticSettingsResponseOutputWithContext(ctx context.Context) PipelineDiagnosticSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDiagnosticSettingsResponseOutput)
}

func (i PipelineDiagnosticSettingsResponseArgs) ToPipelineDiagnosticSettingsResponsePtrOutput() PipelineDiagnosticSettingsResponsePtrOutput {
	return i.ToPipelineDiagnosticSettingsResponsePtrOutputWithContext(context.Background())
}

func (i PipelineDiagnosticSettingsResponseArgs) ToPipelineDiagnosticSettingsResponsePtrOutputWithContext(ctx context.Context) PipelineDiagnosticSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDiagnosticSettingsResponseOutput).ToPipelineDiagnosticSettingsResponsePtrOutputWithContext(ctx)
}

// PipelineDiagnosticSettingsResponsePtrInput is an input type that accepts PipelineDiagnosticSettingsResponseArgs, PipelineDiagnosticSettingsResponsePtr and PipelineDiagnosticSettingsResponsePtrOutput values.
// You can construct a concrete instance of `PipelineDiagnosticSettingsResponsePtrInput` via:
//
//          PipelineDiagnosticSettingsResponseArgs{...}
//
//  or:
//
//          nil
type PipelineDiagnosticSettingsResponsePtrInput interface {
	pulumi.Input

	ToPipelineDiagnosticSettingsResponsePtrOutput() PipelineDiagnosticSettingsResponsePtrOutput
	ToPipelineDiagnosticSettingsResponsePtrOutputWithContext(context.Context) PipelineDiagnosticSettingsResponsePtrOutput
}

type pipelineDiagnosticSettingsResponsePtrType PipelineDiagnosticSettingsResponseArgs

func PipelineDiagnosticSettingsResponsePtr(v *PipelineDiagnosticSettingsResponseArgs) PipelineDiagnosticSettingsResponsePtrInput {
	return (*pipelineDiagnosticSettingsResponsePtrType)(v)
}

func (*pipelineDiagnosticSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineDiagnosticSettingsResponse)(nil)).Elem()
}

func (i *pipelineDiagnosticSettingsResponsePtrType) ToPipelineDiagnosticSettingsResponsePtrOutput() PipelineDiagnosticSettingsResponsePtrOutput {
	return i.ToPipelineDiagnosticSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *pipelineDiagnosticSettingsResponsePtrType) ToPipelineDiagnosticSettingsResponsePtrOutputWithContext(ctx context.Context) PipelineDiagnosticSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDiagnosticSettingsResponsePtrOutput)
}

// Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.
type PipelineDiagnosticSettingsResponseOutput struct{ *pulumi.OutputState }

func (PipelineDiagnosticSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDiagnosticSettingsResponse)(nil)).Elem()
}

func (o PipelineDiagnosticSettingsResponseOutput) ToPipelineDiagnosticSettingsResponseOutput() PipelineDiagnosticSettingsResponseOutput {
	return o
}

func (o PipelineDiagnosticSettingsResponseOutput) ToPipelineDiagnosticSettingsResponseOutputWithContext(ctx context.Context) PipelineDiagnosticSettingsResponseOutput {
	return o
}

func (o PipelineDiagnosticSettingsResponseOutput) ToPipelineDiagnosticSettingsResponsePtrOutput() PipelineDiagnosticSettingsResponsePtrOutput {
	return o.ToPipelineDiagnosticSettingsResponsePtrOutputWithContext(context.Background())
}

func (o PipelineDiagnosticSettingsResponseOutput) ToPipelineDiagnosticSettingsResponsePtrOutputWithContext(ctx context.Context) PipelineDiagnosticSettingsResponsePtrOutput {
	return o.ApplyT(func(v PipelineDiagnosticSettingsResponse) *PipelineDiagnosticSettingsResponse {
		return &v
	}).(PipelineDiagnosticSettingsResponsePtrOutput)
}

// Diagnostic settings for request.
func (o PipelineDiagnosticSettingsResponseOutput) Request() HttpMessageDiagnosticResponsePtrOutput {
	return o.ApplyT(func(v PipelineDiagnosticSettingsResponse) *HttpMessageDiagnosticResponse { return v.Request }).(HttpMessageDiagnosticResponsePtrOutput)
}

// Diagnostic settings for response.
func (o PipelineDiagnosticSettingsResponseOutput) Response() HttpMessageDiagnosticResponsePtrOutput {
	return o.ApplyT(func(v PipelineDiagnosticSettingsResponse) *HttpMessageDiagnosticResponse { return v.Response }).(HttpMessageDiagnosticResponsePtrOutput)
}

type PipelineDiagnosticSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PipelineDiagnosticSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineDiagnosticSettingsResponse)(nil)).Elem()
}

func (o PipelineDiagnosticSettingsResponsePtrOutput) ToPipelineDiagnosticSettingsResponsePtrOutput() PipelineDiagnosticSettingsResponsePtrOutput {
	return o
}

func (o PipelineDiagnosticSettingsResponsePtrOutput) ToPipelineDiagnosticSettingsResponsePtrOutputWithContext(ctx context.Context) PipelineDiagnosticSettingsResponsePtrOutput {
	return o
}

func (o PipelineDiagnosticSettingsResponsePtrOutput) Elem() PipelineDiagnosticSettingsResponseOutput {
	return o.ApplyT(func(v *PipelineDiagnosticSettingsResponse) PipelineDiagnosticSettingsResponse { return *v }).(PipelineDiagnosticSettingsResponseOutput)
}

// Diagnostic settings for request.
func (o PipelineDiagnosticSettingsResponsePtrOutput) Request() HttpMessageDiagnosticResponsePtrOutput {
	return o.ApplyT(func(v *PipelineDiagnosticSettingsResponse) *HttpMessageDiagnosticResponse {
		if v == nil {
			return nil
		}
		return v.Request
	}).(HttpMessageDiagnosticResponsePtrOutput)
}

// Diagnostic settings for response.
func (o PipelineDiagnosticSettingsResponsePtrOutput) Response() HttpMessageDiagnosticResponsePtrOutput {
	return o.ApplyT(func(v *PipelineDiagnosticSettingsResponse) *HttpMessageDiagnosticResponse {
		if v == nil {
			return nil
		}
		return v.Response
	}).(HttpMessageDiagnosticResponsePtrOutput)
}

// Policy Contract details.
type PolicyType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the Policy.
	Properties PolicyContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// PolicyTypeInput is an input type that accepts PolicyTypeArgs and PolicyTypeOutput values.
// You can construct a concrete instance of `PolicyTypeInput` via:
//
//          PolicyTypeArgs{...}
type PolicyTypeInput interface {
	pulumi.Input

	ToPolicyTypeOutput() PolicyTypeOutput
	ToPolicyTypeOutputWithContext(context.Context) PolicyTypeOutput
}

// Policy Contract details.
type PolicyTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the Policy.
	Properties PolicyContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyType)(nil)).Elem()
}

func (i PolicyTypeArgs) ToPolicyTypeOutput() PolicyTypeOutput {
	return i.ToPolicyTypeOutputWithContext(context.Background())
}

func (i PolicyTypeArgs) ToPolicyTypeOutputWithContext(ctx context.Context) PolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTypeOutput)
}

// Policy Contract details.
type PolicyTypeOutput struct{ *pulumi.OutputState }

func (PolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyType)(nil)).Elem()
}

func (o PolicyTypeOutput) ToPolicyTypeOutput() PolicyTypeOutput {
	return o
}

func (o PolicyTypeOutput) ToPolicyTypeOutputWithContext(ctx context.Context) PolicyTypeOutput {
	return o
}

// Resource name.
func (o PolicyTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the Policy.
func (o PolicyTypeOutput) Properties() PolicyContractPropertiesResponseOutput {
	return o.ApplyT(func(v PolicyType) PolicyContractPropertiesResponse { return v.Properties }).(PolicyContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o PolicyTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyType) string { return v.Type }).(pulumi.StringOutput)
}

// Policy contract Properties.
type PolicyContractPropertiesResponse struct {
	// Format of the policyContent.
	Format *string `pulumi:"format"`
	// Contents of the Policy as defined by the format.
	Value string `pulumi:"value"`
}

// PolicyContractPropertiesResponseInput is an input type that accepts PolicyContractPropertiesResponseArgs and PolicyContractPropertiesResponseOutput values.
// You can construct a concrete instance of `PolicyContractPropertiesResponseInput` via:
//
//          PolicyContractPropertiesResponseArgs{...}
type PolicyContractPropertiesResponseInput interface {
	pulumi.Input

	ToPolicyContractPropertiesResponseOutput() PolicyContractPropertiesResponseOutput
	ToPolicyContractPropertiesResponseOutputWithContext(context.Context) PolicyContractPropertiesResponseOutput
}

// Policy contract Properties.
type PolicyContractPropertiesResponseArgs struct {
	// Format of the policyContent.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Contents of the Policy as defined by the format.
	Value pulumi.StringInput `pulumi:"value"`
}

func (PolicyContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyContractPropertiesResponse)(nil)).Elem()
}

func (i PolicyContractPropertiesResponseArgs) ToPolicyContractPropertiesResponseOutput() PolicyContractPropertiesResponseOutput {
	return i.ToPolicyContractPropertiesResponseOutputWithContext(context.Background())
}

func (i PolicyContractPropertiesResponseArgs) ToPolicyContractPropertiesResponseOutputWithContext(ctx context.Context) PolicyContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyContractPropertiesResponseOutput)
}

func (i PolicyContractPropertiesResponseArgs) ToPolicyContractPropertiesResponsePtrOutput() PolicyContractPropertiesResponsePtrOutput {
	return i.ToPolicyContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i PolicyContractPropertiesResponseArgs) ToPolicyContractPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyContractPropertiesResponseOutput).ToPolicyContractPropertiesResponsePtrOutputWithContext(ctx)
}

// PolicyContractPropertiesResponsePtrInput is an input type that accepts PolicyContractPropertiesResponseArgs, PolicyContractPropertiesResponsePtr and PolicyContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `PolicyContractPropertiesResponsePtrInput` via:
//
//          PolicyContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type PolicyContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToPolicyContractPropertiesResponsePtrOutput() PolicyContractPropertiesResponsePtrOutput
	ToPolicyContractPropertiesResponsePtrOutputWithContext(context.Context) PolicyContractPropertiesResponsePtrOutput
}

type policyContractPropertiesResponsePtrType PolicyContractPropertiesResponseArgs

func PolicyContractPropertiesResponsePtr(v *PolicyContractPropertiesResponseArgs) PolicyContractPropertiesResponsePtrInput {
	return (*policyContractPropertiesResponsePtrType)(v)
}

func (*policyContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyContractPropertiesResponse)(nil)).Elem()
}

func (i *policyContractPropertiesResponsePtrType) ToPolicyContractPropertiesResponsePtrOutput() PolicyContractPropertiesResponsePtrOutput {
	return i.ToPolicyContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *policyContractPropertiesResponsePtrType) ToPolicyContractPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyContractPropertiesResponsePtrOutput)
}

// Policy contract Properties.
type PolicyContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PolicyContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyContractPropertiesResponse)(nil)).Elem()
}

func (o PolicyContractPropertiesResponseOutput) ToPolicyContractPropertiesResponseOutput() PolicyContractPropertiesResponseOutput {
	return o
}

func (o PolicyContractPropertiesResponseOutput) ToPolicyContractPropertiesResponseOutputWithContext(ctx context.Context) PolicyContractPropertiesResponseOutput {
	return o
}

func (o PolicyContractPropertiesResponseOutput) ToPolicyContractPropertiesResponsePtrOutput() PolicyContractPropertiesResponsePtrOutput {
	return o.ToPolicyContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o PolicyContractPropertiesResponseOutput) ToPolicyContractPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v PolicyContractPropertiesResponse) *PolicyContractPropertiesResponse {
		return &v
	}).(PolicyContractPropertiesResponsePtrOutput)
}

// Format of the policyContent.
func (o PolicyContractPropertiesResponseOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyContractPropertiesResponse) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Contents of the Policy as defined by the format.
func (o PolicyContractPropertiesResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyContractPropertiesResponse) string { return v.Value }).(pulumi.StringOutput)
}

type PolicyContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PolicyContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyContractPropertiesResponse)(nil)).Elem()
}

func (o PolicyContractPropertiesResponsePtrOutput) ToPolicyContractPropertiesResponsePtrOutput() PolicyContractPropertiesResponsePtrOutput {
	return o
}

func (o PolicyContractPropertiesResponsePtrOutput) ToPolicyContractPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyContractPropertiesResponsePtrOutput {
	return o
}

func (o PolicyContractPropertiesResponsePtrOutput) Elem() PolicyContractPropertiesResponseOutput {
	return o.ApplyT(func(v *PolicyContractPropertiesResponse) PolicyContractPropertiesResponse { return *v }).(PolicyContractPropertiesResponseOutput)
}

// Format of the policyContent.
func (o PolicyContractPropertiesResponsePtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// Contents of the Policy as defined by the format.
func (o PolicyContractPropertiesResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

// Product details.
type ProductType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Product entity contract properties.
	Properties ProductContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// ProductTypeInput is an input type that accepts ProductTypeArgs and ProductTypeOutput values.
// You can construct a concrete instance of `ProductTypeInput` via:
//
//          ProductTypeArgs{...}
type ProductTypeInput interface {
	pulumi.Input

	ToProductTypeOutput() ProductTypeOutput
	ToProductTypeOutputWithContext(context.Context) ProductTypeOutput
}

// Product details.
type ProductTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Product entity contract properties.
	Properties ProductContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ProductTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductType)(nil)).Elem()
}

func (i ProductTypeArgs) ToProductTypeOutput() ProductTypeOutput {
	return i.ToProductTypeOutputWithContext(context.Background())
}

func (i ProductTypeArgs) ToProductTypeOutputWithContext(ctx context.Context) ProductTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductTypeOutput)
}

// Product details.
type ProductTypeOutput struct{ *pulumi.OutputState }

func (ProductTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductType)(nil)).Elem()
}

func (o ProductTypeOutput) ToProductTypeOutput() ProductTypeOutput {
	return o
}

func (o ProductTypeOutput) ToProductTypeOutputWithContext(ctx context.Context) ProductTypeOutput {
	return o
}

// Resource name.
func (o ProductTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProductType) string { return v.Name }).(pulumi.StringOutput)
}

// Product entity contract properties.
func (o ProductTypeOutput) Properties() ProductContractPropertiesResponseOutput {
	return o.ApplyT(func(v ProductType) ProductContractPropertiesResponse { return v.Properties }).(ProductContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o ProductTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProductType) string { return v.Type }).(pulumi.StringOutput)
}

// Product profile.
type ProductContractPropertiesResponse struct {
	// whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of false.
	ApprovalRequired *bool `pulumi:"approvalRequired"`
	// Product description. May include HTML formatting tags.
	Description *string `pulumi:"description"`
	// Product name.
	DisplayName string `pulumi:"displayName"`
	// whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished.
	State *string `pulumi:"state"`
	// Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as "protected" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as "open" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true.
	SubscriptionRequired *bool `pulumi:"subscriptionRequired"`
	// Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false.
	SubscriptionsLimit *int `pulumi:"subscriptionsLimit"`
	// Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process.
	Terms *string `pulumi:"terms"`
}

// ProductContractPropertiesResponseInput is an input type that accepts ProductContractPropertiesResponseArgs and ProductContractPropertiesResponseOutput values.
// You can construct a concrete instance of `ProductContractPropertiesResponseInput` via:
//
//          ProductContractPropertiesResponseArgs{...}
type ProductContractPropertiesResponseInput interface {
	pulumi.Input

	ToProductContractPropertiesResponseOutput() ProductContractPropertiesResponseOutput
	ToProductContractPropertiesResponseOutputWithContext(context.Context) ProductContractPropertiesResponseOutput
}

// Product profile.
type ProductContractPropertiesResponseArgs struct {
	// whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of false.
	ApprovalRequired pulumi.BoolPtrInput `pulumi:"approvalRequired"`
	// Product description. May include HTML formatting tags.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Product name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as "protected" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as "open" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true.
	SubscriptionRequired pulumi.BoolPtrInput `pulumi:"subscriptionRequired"`
	// Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false.
	SubscriptionsLimit pulumi.IntPtrInput `pulumi:"subscriptionsLimit"`
	// Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process.
	Terms pulumi.StringPtrInput `pulumi:"terms"`
}

func (ProductContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductContractPropertiesResponse)(nil)).Elem()
}

func (i ProductContractPropertiesResponseArgs) ToProductContractPropertiesResponseOutput() ProductContractPropertiesResponseOutput {
	return i.ToProductContractPropertiesResponseOutputWithContext(context.Background())
}

func (i ProductContractPropertiesResponseArgs) ToProductContractPropertiesResponseOutputWithContext(ctx context.Context) ProductContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductContractPropertiesResponseOutput)
}

func (i ProductContractPropertiesResponseArgs) ToProductContractPropertiesResponsePtrOutput() ProductContractPropertiesResponsePtrOutput {
	return i.ToProductContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ProductContractPropertiesResponseArgs) ToProductContractPropertiesResponsePtrOutputWithContext(ctx context.Context) ProductContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductContractPropertiesResponseOutput).ToProductContractPropertiesResponsePtrOutputWithContext(ctx)
}

// ProductContractPropertiesResponsePtrInput is an input type that accepts ProductContractPropertiesResponseArgs, ProductContractPropertiesResponsePtr and ProductContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ProductContractPropertiesResponsePtrInput` via:
//
//          ProductContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ProductContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToProductContractPropertiesResponsePtrOutput() ProductContractPropertiesResponsePtrOutput
	ToProductContractPropertiesResponsePtrOutputWithContext(context.Context) ProductContractPropertiesResponsePtrOutput
}

type productContractPropertiesResponsePtrType ProductContractPropertiesResponseArgs

func ProductContractPropertiesResponsePtr(v *ProductContractPropertiesResponseArgs) ProductContractPropertiesResponsePtrInput {
	return (*productContractPropertiesResponsePtrType)(v)
}

func (*productContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductContractPropertiesResponse)(nil)).Elem()
}

func (i *productContractPropertiesResponsePtrType) ToProductContractPropertiesResponsePtrOutput() ProductContractPropertiesResponsePtrOutput {
	return i.ToProductContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *productContractPropertiesResponsePtrType) ToProductContractPropertiesResponsePtrOutputWithContext(ctx context.Context) ProductContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductContractPropertiesResponsePtrOutput)
}

// Product profile.
type ProductContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ProductContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductContractPropertiesResponse)(nil)).Elem()
}

func (o ProductContractPropertiesResponseOutput) ToProductContractPropertiesResponseOutput() ProductContractPropertiesResponseOutput {
	return o
}

func (o ProductContractPropertiesResponseOutput) ToProductContractPropertiesResponseOutputWithContext(ctx context.Context) ProductContractPropertiesResponseOutput {
	return o
}

func (o ProductContractPropertiesResponseOutput) ToProductContractPropertiesResponsePtrOutput() ProductContractPropertiesResponsePtrOutput {
	return o.ToProductContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ProductContractPropertiesResponseOutput) ToProductContractPropertiesResponsePtrOutputWithContext(ctx context.Context) ProductContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ProductContractPropertiesResponse) *ProductContractPropertiesResponse {
		return &v
	}).(ProductContractPropertiesResponsePtrOutput)
}

// whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of false.
func (o ProductContractPropertiesResponseOutput) ApprovalRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProductContractPropertiesResponse) *bool { return v.ApprovalRequired }).(pulumi.BoolPtrOutput)
}

// Product description. May include HTML formatting tags.
func (o ProductContractPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductContractPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Product name.
func (o ProductContractPropertiesResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ProductContractPropertiesResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished.
func (o ProductContractPropertiesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductContractPropertiesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as "protected" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as "open" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true.
func (o ProductContractPropertiesResponseOutput) SubscriptionRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProductContractPropertiesResponse) *bool { return v.SubscriptionRequired }).(pulumi.BoolPtrOutput)
}

// Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false.
func (o ProductContractPropertiesResponseOutput) SubscriptionsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProductContractPropertiesResponse) *int { return v.SubscriptionsLimit }).(pulumi.IntPtrOutput)
}

// Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process.
func (o ProductContractPropertiesResponseOutput) Terms() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductContractPropertiesResponse) *string { return v.Terms }).(pulumi.StringPtrOutput)
}

type ProductContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ProductContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductContractPropertiesResponse)(nil)).Elem()
}

func (o ProductContractPropertiesResponsePtrOutput) ToProductContractPropertiesResponsePtrOutput() ProductContractPropertiesResponsePtrOutput {
	return o
}

func (o ProductContractPropertiesResponsePtrOutput) ToProductContractPropertiesResponsePtrOutputWithContext(ctx context.Context) ProductContractPropertiesResponsePtrOutput {
	return o
}

func (o ProductContractPropertiesResponsePtrOutput) Elem() ProductContractPropertiesResponseOutput {
	return o.ApplyT(func(v *ProductContractPropertiesResponse) ProductContractPropertiesResponse { return *v }).(ProductContractPropertiesResponseOutput)
}

// whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of false.
func (o ProductContractPropertiesResponsePtrOutput) ApprovalRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProductContractPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ApprovalRequired
	}).(pulumi.BoolPtrOutput)
}

// Product description. May include HTML formatting tags.
func (o ProductContractPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Product name.
func (o ProductContractPropertiesResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished.
func (o ProductContractPropertiesResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as "protected" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as "open" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true.
func (o ProductContractPropertiesResponsePtrOutput) SubscriptionRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProductContractPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SubscriptionRequired
	}).(pulumi.BoolPtrOutput)
}

// Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false.
func (o ProductContractPropertiesResponsePtrOutput) SubscriptionsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProductContractPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.SubscriptionsLimit
	}).(pulumi.IntPtrOutput)
}

// Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process.
func (o ProductContractPropertiesResponsePtrOutput) Terms() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Terms
	}).(pulumi.StringPtrOutput)
}

// Policy Contract details.
type ProductPolicyType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Properties of the Policy.
	Properties PolicyContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// ProductPolicyTypeInput is an input type that accepts ProductPolicyTypeArgs and ProductPolicyTypeOutput values.
// You can construct a concrete instance of `ProductPolicyTypeInput` via:
//
//          ProductPolicyTypeArgs{...}
type ProductPolicyTypeInput interface {
	pulumi.Input

	ToProductPolicyTypeOutput() ProductPolicyTypeOutput
	ToProductPolicyTypeOutputWithContext(context.Context) ProductPolicyTypeOutput
}

// Policy Contract details.
type ProductPolicyTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the Policy.
	Properties PolicyContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ProductPolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductPolicyType)(nil)).Elem()
}

func (i ProductPolicyTypeArgs) ToProductPolicyTypeOutput() ProductPolicyTypeOutput {
	return i.ToProductPolicyTypeOutputWithContext(context.Background())
}

func (i ProductPolicyTypeArgs) ToProductPolicyTypeOutputWithContext(ctx context.Context) ProductPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductPolicyTypeOutput)
}

// Policy Contract details.
type ProductPolicyTypeOutput struct{ *pulumi.OutputState }

func (ProductPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductPolicyType)(nil)).Elem()
}

func (o ProductPolicyTypeOutput) ToProductPolicyTypeOutput() ProductPolicyTypeOutput {
	return o
}

func (o ProductPolicyTypeOutput) ToProductPolicyTypeOutputWithContext(ctx context.Context) ProductPolicyTypeOutput {
	return o
}

// Resource name.
func (o ProductPolicyTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProductPolicyType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the Policy.
func (o ProductPolicyTypeOutput) Properties() PolicyContractPropertiesResponseOutput {
	return o.ApplyT(func(v ProductPolicyType) PolicyContractPropertiesResponse { return v.Properties }).(PolicyContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o ProductPolicyTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProductPolicyType) string { return v.Type }).(pulumi.StringOutput)
}

// Property details.
type PropertyType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Property entity contract properties.
	Properties PropertyContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// PropertyTypeInput is an input type that accepts PropertyTypeArgs and PropertyTypeOutput values.
// You can construct a concrete instance of `PropertyTypeInput` via:
//
//          PropertyTypeArgs{...}
type PropertyTypeInput interface {
	pulumi.Input

	ToPropertyTypeOutput() PropertyTypeOutput
	ToPropertyTypeOutputWithContext(context.Context) PropertyTypeOutput
}

// Property details.
type PropertyTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Property entity contract properties.
	Properties PropertyContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PropertyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyType)(nil)).Elem()
}

func (i PropertyTypeArgs) ToPropertyTypeOutput() PropertyTypeOutput {
	return i.ToPropertyTypeOutputWithContext(context.Background())
}

func (i PropertyTypeArgs) ToPropertyTypeOutputWithContext(ctx context.Context) PropertyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyTypeOutput)
}

// Property details.
type PropertyTypeOutput struct{ *pulumi.OutputState }

func (PropertyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyType)(nil)).Elem()
}

func (o PropertyTypeOutput) ToPropertyTypeOutput() PropertyTypeOutput {
	return o
}

func (o PropertyTypeOutput) ToPropertyTypeOutputWithContext(ctx context.Context) PropertyTypeOutput {
	return o
}

// Resource name.
func (o PropertyTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyType) string { return v.Name }).(pulumi.StringOutput)
}

// Property entity contract properties.
func (o PropertyTypeOutput) Properties() PropertyContractPropertiesResponseOutput {
	return o.ApplyT(func(v PropertyType) PropertyContractPropertiesResponse { return v.Properties }).(PropertyContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o PropertyTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyType) string { return v.Type }).(pulumi.StringOutput)
}

// Property Contract properties.
type PropertyContractPropertiesResponse struct {
	// Unique name of Property. It may contain only letters, digits, period, dash, and underscore characters.
	DisplayName string `pulumi:"displayName"`
	// Determines whether the value is a secret and should be encrypted or not. Default value is false.
	Secret *bool `pulumi:"secret"`
	// Optional tags that when provided can be used to filter the property list.
	Tags []string `pulumi:"tags"`
	// Value of the property. Can contain policy expressions. It may not be empty or consist only of whitespace.
	Value string `pulumi:"value"`
}

// PropertyContractPropertiesResponseInput is an input type that accepts PropertyContractPropertiesResponseArgs and PropertyContractPropertiesResponseOutput values.
// You can construct a concrete instance of `PropertyContractPropertiesResponseInput` via:
//
//          PropertyContractPropertiesResponseArgs{...}
type PropertyContractPropertiesResponseInput interface {
	pulumi.Input

	ToPropertyContractPropertiesResponseOutput() PropertyContractPropertiesResponseOutput
	ToPropertyContractPropertiesResponseOutputWithContext(context.Context) PropertyContractPropertiesResponseOutput
}

// Property Contract properties.
type PropertyContractPropertiesResponseArgs struct {
	// Unique name of Property. It may contain only letters, digits, period, dash, and underscore characters.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Determines whether the value is a secret and should be encrypted or not. Default value is false.
	Secret pulumi.BoolPtrInput `pulumi:"secret"`
	// Optional tags that when provided can be used to filter the property list.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Value of the property. Can contain policy expressions. It may not be empty or consist only of whitespace.
	Value pulumi.StringInput `pulumi:"value"`
}

func (PropertyContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyContractPropertiesResponse)(nil)).Elem()
}

func (i PropertyContractPropertiesResponseArgs) ToPropertyContractPropertiesResponseOutput() PropertyContractPropertiesResponseOutput {
	return i.ToPropertyContractPropertiesResponseOutputWithContext(context.Background())
}

func (i PropertyContractPropertiesResponseArgs) ToPropertyContractPropertiesResponseOutputWithContext(ctx context.Context) PropertyContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyContractPropertiesResponseOutput)
}

func (i PropertyContractPropertiesResponseArgs) ToPropertyContractPropertiesResponsePtrOutput() PropertyContractPropertiesResponsePtrOutput {
	return i.ToPropertyContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i PropertyContractPropertiesResponseArgs) ToPropertyContractPropertiesResponsePtrOutputWithContext(ctx context.Context) PropertyContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyContractPropertiesResponseOutput).ToPropertyContractPropertiesResponsePtrOutputWithContext(ctx)
}

// PropertyContractPropertiesResponsePtrInput is an input type that accepts PropertyContractPropertiesResponseArgs, PropertyContractPropertiesResponsePtr and PropertyContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `PropertyContractPropertiesResponsePtrInput` via:
//
//          PropertyContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type PropertyContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToPropertyContractPropertiesResponsePtrOutput() PropertyContractPropertiesResponsePtrOutput
	ToPropertyContractPropertiesResponsePtrOutputWithContext(context.Context) PropertyContractPropertiesResponsePtrOutput
}

type propertyContractPropertiesResponsePtrType PropertyContractPropertiesResponseArgs

func PropertyContractPropertiesResponsePtr(v *PropertyContractPropertiesResponseArgs) PropertyContractPropertiesResponsePtrInput {
	return (*propertyContractPropertiesResponsePtrType)(v)
}

func (*propertyContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyContractPropertiesResponse)(nil)).Elem()
}

func (i *propertyContractPropertiesResponsePtrType) ToPropertyContractPropertiesResponsePtrOutput() PropertyContractPropertiesResponsePtrOutput {
	return i.ToPropertyContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *propertyContractPropertiesResponsePtrType) ToPropertyContractPropertiesResponsePtrOutputWithContext(ctx context.Context) PropertyContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyContractPropertiesResponsePtrOutput)
}

// Property Contract properties.
type PropertyContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PropertyContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyContractPropertiesResponse)(nil)).Elem()
}

func (o PropertyContractPropertiesResponseOutput) ToPropertyContractPropertiesResponseOutput() PropertyContractPropertiesResponseOutput {
	return o
}

func (o PropertyContractPropertiesResponseOutput) ToPropertyContractPropertiesResponseOutputWithContext(ctx context.Context) PropertyContractPropertiesResponseOutput {
	return o
}

func (o PropertyContractPropertiesResponseOutput) ToPropertyContractPropertiesResponsePtrOutput() PropertyContractPropertiesResponsePtrOutput {
	return o.ToPropertyContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o PropertyContractPropertiesResponseOutput) ToPropertyContractPropertiesResponsePtrOutputWithContext(ctx context.Context) PropertyContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v PropertyContractPropertiesResponse) *PropertyContractPropertiesResponse {
		return &v
	}).(PropertyContractPropertiesResponsePtrOutput)
}

// Unique name of Property. It may contain only letters, digits, period, dash, and underscore characters.
func (o PropertyContractPropertiesResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyContractPropertiesResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Determines whether the value is a secret and should be encrypted or not. Default value is false.
func (o PropertyContractPropertiesResponseOutput) Secret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PropertyContractPropertiesResponse) *bool { return v.Secret }).(pulumi.BoolPtrOutput)
}

// Optional tags that when provided can be used to filter the property list.
func (o PropertyContractPropertiesResponseOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PropertyContractPropertiesResponse) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Value of the property. Can contain policy expressions. It may not be empty or consist only of whitespace.
func (o PropertyContractPropertiesResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyContractPropertiesResponse) string { return v.Value }).(pulumi.StringOutput)
}

type PropertyContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PropertyContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyContractPropertiesResponse)(nil)).Elem()
}

func (o PropertyContractPropertiesResponsePtrOutput) ToPropertyContractPropertiesResponsePtrOutput() PropertyContractPropertiesResponsePtrOutput {
	return o
}

func (o PropertyContractPropertiesResponsePtrOutput) ToPropertyContractPropertiesResponsePtrOutputWithContext(ctx context.Context) PropertyContractPropertiesResponsePtrOutput {
	return o
}

func (o PropertyContractPropertiesResponsePtrOutput) Elem() PropertyContractPropertiesResponseOutput {
	return o.ApplyT(func(v *PropertyContractPropertiesResponse) PropertyContractPropertiesResponse { return *v }).(PropertyContractPropertiesResponseOutput)
}

// Unique name of Property. It may contain only letters, digits, period, dash, and underscore characters.
func (o PropertyContractPropertiesResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PropertyContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Determines whether the value is a secret and should be encrypted or not. Default value is false.
func (o PropertyContractPropertiesResponsePtrOutput) Secret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PropertyContractPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.BoolPtrOutput)
}

// Optional tags that when provided can be used to filter the property list.
func (o PropertyContractPropertiesResponsePtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PropertyContractPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// Value of the property. Can contain policy expressions. It may not be empty or consist only of whitespace.
func (o PropertyContractPropertiesResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PropertyContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

// Operation request/response representation details.
type RepresentationContract struct {
	// Specifies a registered or custom content type for this representation, e.g. application/xml.
	ContentType string `pulumi:"contentType"`
	// Collection of form parameters. Required if 'contentType' value is either 'application/x-www-form-urlencoded' or 'multipart/form-data'..
	FormParameters []ParameterContract `pulumi:"formParameters"`
	// An example of the representation.
	Sample *string `pulumi:"sample"`
	// Schema identifier. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
	SchemaId *string `pulumi:"schemaId"`
	// Type name defined by the schema. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
	TypeName *string `pulumi:"typeName"`
}

// RepresentationContractInput is an input type that accepts RepresentationContractArgs and RepresentationContractOutput values.
// You can construct a concrete instance of `RepresentationContractInput` via:
//
//          RepresentationContractArgs{...}
type RepresentationContractInput interface {
	pulumi.Input

	ToRepresentationContractOutput() RepresentationContractOutput
	ToRepresentationContractOutputWithContext(context.Context) RepresentationContractOutput
}

// Operation request/response representation details.
type RepresentationContractArgs struct {
	// Specifies a registered or custom content type for this representation, e.g. application/xml.
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// Collection of form parameters. Required if 'contentType' value is either 'application/x-www-form-urlencoded' or 'multipart/form-data'..
	FormParameters ParameterContractArrayInput `pulumi:"formParameters"`
	// An example of the representation.
	Sample pulumi.StringPtrInput `pulumi:"sample"`
	// Schema identifier. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
	SchemaId pulumi.StringPtrInput `pulumi:"schemaId"`
	// Type name defined by the schema. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
}

func (RepresentationContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepresentationContract)(nil)).Elem()
}

func (i RepresentationContractArgs) ToRepresentationContractOutput() RepresentationContractOutput {
	return i.ToRepresentationContractOutputWithContext(context.Background())
}

func (i RepresentationContractArgs) ToRepresentationContractOutputWithContext(ctx context.Context) RepresentationContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepresentationContractOutput)
}

// RepresentationContractArrayInput is an input type that accepts RepresentationContractArray and RepresentationContractArrayOutput values.
// You can construct a concrete instance of `RepresentationContractArrayInput` via:
//
//          RepresentationContractArray{ RepresentationContractArgs{...} }
type RepresentationContractArrayInput interface {
	pulumi.Input

	ToRepresentationContractArrayOutput() RepresentationContractArrayOutput
	ToRepresentationContractArrayOutputWithContext(context.Context) RepresentationContractArrayOutput
}

type RepresentationContractArray []RepresentationContractInput

func (RepresentationContractArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepresentationContract)(nil)).Elem()
}

func (i RepresentationContractArray) ToRepresentationContractArrayOutput() RepresentationContractArrayOutput {
	return i.ToRepresentationContractArrayOutputWithContext(context.Background())
}

func (i RepresentationContractArray) ToRepresentationContractArrayOutputWithContext(ctx context.Context) RepresentationContractArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepresentationContractArrayOutput)
}

// Operation request/response representation details.
type RepresentationContractOutput struct{ *pulumi.OutputState }

func (RepresentationContractOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepresentationContract)(nil)).Elem()
}

func (o RepresentationContractOutput) ToRepresentationContractOutput() RepresentationContractOutput {
	return o
}

func (o RepresentationContractOutput) ToRepresentationContractOutputWithContext(ctx context.Context) RepresentationContractOutput {
	return o
}

// Specifies a registered or custom content type for this representation, e.g. application/xml.
func (o RepresentationContractOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v RepresentationContract) string { return v.ContentType }).(pulumi.StringOutput)
}

// Collection of form parameters. Required if 'contentType' value is either 'application/x-www-form-urlencoded' or 'multipart/form-data'..
func (o RepresentationContractOutput) FormParameters() ParameterContractArrayOutput {
	return o.ApplyT(func(v RepresentationContract) []ParameterContract { return v.FormParameters }).(ParameterContractArrayOutput)
}

// An example of the representation.
func (o RepresentationContractOutput) Sample() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepresentationContract) *string { return v.Sample }).(pulumi.StringPtrOutput)
}

// Schema identifier. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
func (o RepresentationContractOutput) SchemaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepresentationContract) *string { return v.SchemaId }).(pulumi.StringPtrOutput)
}

// Type name defined by the schema. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
func (o RepresentationContractOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepresentationContract) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

type RepresentationContractArrayOutput struct{ *pulumi.OutputState }

func (RepresentationContractArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepresentationContract)(nil)).Elem()
}

func (o RepresentationContractArrayOutput) ToRepresentationContractArrayOutput() RepresentationContractArrayOutput {
	return o
}

func (o RepresentationContractArrayOutput) ToRepresentationContractArrayOutputWithContext(ctx context.Context) RepresentationContractArrayOutput {
	return o
}

func (o RepresentationContractArrayOutput) Index(i pulumi.IntInput) RepresentationContractOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepresentationContract {
		return vs[0].([]RepresentationContract)[vs[1].(int)]
	}).(RepresentationContractOutput)
}

// Operation request/response representation details.
type RepresentationContractResponse struct {
	// Specifies a registered or custom content type for this representation, e.g. application/xml.
	ContentType string `pulumi:"contentType"`
	// Collection of form parameters. Required if 'contentType' value is either 'application/x-www-form-urlencoded' or 'multipart/form-data'..
	FormParameters []ParameterContractResponse `pulumi:"formParameters"`
	// An example of the representation.
	Sample *string `pulumi:"sample"`
	// Schema identifier. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
	SchemaId *string `pulumi:"schemaId"`
	// Type name defined by the schema. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
	TypeName *string `pulumi:"typeName"`
}

// RepresentationContractResponseInput is an input type that accepts RepresentationContractResponseArgs and RepresentationContractResponseOutput values.
// You can construct a concrete instance of `RepresentationContractResponseInput` via:
//
//          RepresentationContractResponseArgs{...}
type RepresentationContractResponseInput interface {
	pulumi.Input

	ToRepresentationContractResponseOutput() RepresentationContractResponseOutput
	ToRepresentationContractResponseOutputWithContext(context.Context) RepresentationContractResponseOutput
}

// Operation request/response representation details.
type RepresentationContractResponseArgs struct {
	// Specifies a registered or custom content type for this representation, e.g. application/xml.
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// Collection of form parameters. Required if 'contentType' value is either 'application/x-www-form-urlencoded' or 'multipart/form-data'..
	FormParameters ParameterContractResponseArrayInput `pulumi:"formParameters"`
	// An example of the representation.
	Sample pulumi.StringPtrInput `pulumi:"sample"`
	// Schema identifier. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
	SchemaId pulumi.StringPtrInput `pulumi:"schemaId"`
	// Type name defined by the schema. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
}

func (RepresentationContractResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepresentationContractResponse)(nil)).Elem()
}

func (i RepresentationContractResponseArgs) ToRepresentationContractResponseOutput() RepresentationContractResponseOutput {
	return i.ToRepresentationContractResponseOutputWithContext(context.Background())
}

func (i RepresentationContractResponseArgs) ToRepresentationContractResponseOutputWithContext(ctx context.Context) RepresentationContractResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepresentationContractResponseOutput)
}

// RepresentationContractResponseArrayInput is an input type that accepts RepresentationContractResponseArray and RepresentationContractResponseArrayOutput values.
// You can construct a concrete instance of `RepresentationContractResponseArrayInput` via:
//
//          RepresentationContractResponseArray{ RepresentationContractResponseArgs{...} }
type RepresentationContractResponseArrayInput interface {
	pulumi.Input

	ToRepresentationContractResponseArrayOutput() RepresentationContractResponseArrayOutput
	ToRepresentationContractResponseArrayOutputWithContext(context.Context) RepresentationContractResponseArrayOutput
}

type RepresentationContractResponseArray []RepresentationContractResponseInput

func (RepresentationContractResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepresentationContractResponse)(nil)).Elem()
}

func (i RepresentationContractResponseArray) ToRepresentationContractResponseArrayOutput() RepresentationContractResponseArrayOutput {
	return i.ToRepresentationContractResponseArrayOutputWithContext(context.Background())
}

func (i RepresentationContractResponseArray) ToRepresentationContractResponseArrayOutputWithContext(ctx context.Context) RepresentationContractResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepresentationContractResponseArrayOutput)
}

// Operation request/response representation details.
type RepresentationContractResponseOutput struct{ *pulumi.OutputState }

func (RepresentationContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepresentationContractResponse)(nil)).Elem()
}

func (o RepresentationContractResponseOutput) ToRepresentationContractResponseOutput() RepresentationContractResponseOutput {
	return o
}

func (o RepresentationContractResponseOutput) ToRepresentationContractResponseOutputWithContext(ctx context.Context) RepresentationContractResponseOutput {
	return o
}

// Specifies a registered or custom content type for this representation, e.g. application/xml.
func (o RepresentationContractResponseOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v RepresentationContractResponse) string { return v.ContentType }).(pulumi.StringOutput)
}

// Collection of form parameters. Required if 'contentType' value is either 'application/x-www-form-urlencoded' or 'multipart/form-data'..
func (o RepresentationContractResponseOutput) FormParameters() ParameterContractResponseArrayOutput {
	return o.ApplyT(func(v RepresentationContractResponse) []ParameterContractResponse { return v.FormParameters }).(ParameterContractResponseArrayOutput)
}

// An example of the representation.
func (o RepresentationContractResponseOutput) Sample() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepresentationContractResponse) *string { return v.Sample }).(pulumi.StringPtrOutput)
}

// Schema identifier. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
func (o RepresentationContractResponseOutput) SchemaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepresentationContractResponse) *string { return v.SchemaId }).(pulumi.StringPtrOutput)
}

// Type name defined by the schema. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
func (o RepresentationContractResponseOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepresentationContractResponse) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

type RepresentationContractResponseArrayOutput struct{ *pulumi.OutputState }

func (RepresentationContractResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepresentationContractResponse)(nil)).Elem()
}

func (o RepresentationContractResponseArrayOutput) ToRepresentationContractResponseArrayOutput() RepresentationContractResponseArrayOutput {
	return o
}

func (o RepresentationContractResponseArrayOutput) ToRepresentationContractResponseArrayOutputWithContext(ctx context.Context) RepresentationContractResponseArrayOutput {
	return o
}

func (o RepresentationContractResponseArrayOutput) Index(i pulumi.IntInput) RepresentationContractResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepresentationContractResponse {
		return vs[0].([]RepresentationContractResponse)[vs[1].(int)]
	}).(RepresentationContractResponseOutput)
}

// Operation request details.
type RequestContract struct {
	// Operation request description.
	Description *string `pulumi:"description"`
	// Collection of operation request headers.
	Headers []ParameterContract `pulumi:"headers"`
	// Collection of operation request query parameters.
	QueryParameters []ParameterContract `pulumi:"queryParameters"`
	// Collection of operation request representations.
	Representations []RepresentationContract `pulumi:"representations"`
}

// RequestContractInput is an input type that accepts RequestContractArgs and RequestContractOutput values.
// You can construct a concrete instance of `RequestContractInput` via:
//
//          RequestContractArgs{...}
type RequestContractInput interface {
	pulumi.Input

	ToRequestContractOutput() RequestContractOutput
	ToRequestContractOutputWithContext(context.Context) RequestContractOutput
}

// Operation request details.
type RequestContractArgs struct {
	// Operation request description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Collection of operation request headers.
	Headers ParameterContractArrayInput `pulumi:"headers"`
	// Collection of operation request query parameters.
	QueryParameters ParameterContractArrayInput `pulumi:"queryParameters"`
	// Collection of operation request representations.
	Representations RepresentationContractArrayInput `pulumi:"representations"`
}

func (RequestContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestContract)(nil)).Elem()
}

func (i RequestContractArgs) ToRequestContractOutput() RequestContractOutput {
	return i.ToRequestContractOutputWithContext(context.Background())
}

func (i RequestContractArgs) ToRequestContractOutputWithContext(ctx context.Context) RequestContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestContractOutput)
}

func (i RequestContractArgs) ToRequestContractPtrOutput() RequestContractPtrOutput {
	return i.ToRequestContractPtrOutputWithContext(context.Background())
}

func (i RequestContractArgs) ToRequestContractPtrOutputWithContext(ctx context.Context) RequestContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestContractOutput).ToRequestContractPtrOutputWithContext(ctx)
}

// RequestContractPtrInput is an input type that accepts RequestContractArgs, RequestContractPtr and RequestContractPtrOutput values.
// You can construct a concrete instance of `RequestContractPtrInput` via:
//
//          RequestContractArgs{...}
//
//  or:
//
//          nil
type RequestContractPtrInput interface {
	pulumi.Input

	ToRequestContractPtrOutput() RequestContractPtrOutput
	ToRequestContractPtrOutputWithContext(context.Context) RequestContractPtrOutput
}

type requestContractPtrType RequestContractArgs

func RequestContractPtr(v *RequestContractArgs) RequestContractPtrInput {
	return (*requestContractPtrType)(v)
}

func (*requestContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestContract)(nil)).Elem()
}

func (i *requestContractPtrType) ToRequestContractPtrOutput() RequestContractPtrOutput {
	return i.ToRequestContractPtrOutputWithContext(context.Background())
}

func (i *requestContractPtrType) ToRequestContractPtrOutputWithContext(ctx context.Context) RequestContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestContractPtrOutput)
}

// Operation request details.
type RequestContractOutput struct{ *pulumi.OutputState }

func (RequestContractOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestContract)(nil)).Elem()
}

func (o RequestContractOutput) ToRequestContractOutput() RequestContractOutput {
	return o
}

func (o RequestContractOutput) ToRequestContractOutputWithContext(ctx context.Context) RequestContractOutput {
	return o
}

func (o RequestContractOutput) ToRequestContractPtrOutput() RequestContractPtrOutput {
	return o.ToRequestContractPtrOutputWithContext(context.Background())
}

func (o RequestContractOutput) ToRequestContractPtrOutputWithContext(ctx context.Context) RequestContractPtrOutput {
	return o.ApplyT(func(v RequestContract) *RequestContract {
		return &v
	}).(RequestContractPtrOutput)
}

// Operation request description.
func (o RequestContractOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestContract) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Collection of operation request headers.
func (o RequestContractOutput) Headers() ParameterContractArrayOutput {
	return o.ApplyT(func(v RequestContract) []ParameterContract { return v.Headers }).(ParameterContractArrayOutput)
}

// Collection of operation request query parameters.
func (o RequestContractOutput) QueryParameters() ParameterContractArrayOutput {
	return o.ApplyT(func(v RequestContract) []ParameterContract { return v.QueryParameters }).(ParameterContractArrayOutput)
}

// Collection of operation request representations.
func (o RequestContractOutput) Representations() RepresentationContractArrayOutput {
	return o.ApplyT(func(v RequestContract) []RepresentationContract { return v.Representations }).(RepresentationContractArrayOutput)
}

type RequestContractPtrOutput struct{ *pulumi.OutputState }

func (RequestContractPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestContract)(nil)).Elem()
}

func (o RequestContractPtrOutput) ToRequestContractPtrOutput() RequestContractPtrOutput {
	return o
}

func (o RequestContractPtrOutput) ToRequestContractPtrOutputWithContext(ctx context.Context) RequestContractPtrOutput {
	return o
}

func (o RequestContractPtrOutput) Elem() RequestContractOutput {
	return o.ApplyT(func(v *RequestContract) RequestContract { return *v }).(RequestContractOutput)
}

// Operation request description.
func (o RequestContractPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestContract) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Collection of operation request headers.
func (o RequestContractPtrOutput) Headers() ParameterContractArrayOutput {
	return o.ApplyT(func(v *RequestContract) []ParameterContract {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(ParameterContractArrayOutput)
}

// Collection of operation request query parameters.
func (o RequestContractPtrOutput) QueryParameters() ParameterContractArrayOutput {
	return o.ApplyT(func(v *RequestContract) []ParameterContract {
		if v == nil {
			return nil
		}
		return v.QueryParameters
	}).(ParameterContractArrayOutput)
}

// Collection of operation request representations.
func (o RequestContractPtrOutput) Representations() RepresentationContractArrayOutput {
	return o.ApplyT(func(v *RequestContract) []RepresentationContract {
		if v == nil {
			return nil
		}
		return v.Representations
	}).(RepresentationContractArrayOutput)
}

// Operation request details.
type RequestContractResponse struct {
	// Operation request description.
	Description *string `pulumi:"description"`
	// Collection of operation request headers.
	Headers []ParameterContractResponse `pulumi:"headers"`
	// Collection of operation request query parameters.
	QueryParameters []ParameterContractResponse `pulumi:"queryParameters"`
	// Collection of operation request representations.
	Representations []RepresentationContractResponse `pulumi:"representations"`
}

// RequestContractResponseInput is an input type that accepts RequestContractResponseArgs and RequestContractResponseOutput values.
// You can construct a concrete instance of `RequestContractResponseInput` via:
//
//          RequestContractResponseArgs{...}
type RequestContractResponseInput interface {
	pulumi.Input

	ToRequestContractResponseOutput() RequestContractResponseOutput
	ToRequestContractResponseOutputWithContext(context.Context) RequestContractResponseOutput
}

// Operation request details.
type RequestContractResponseArgs struct {
	// Operation request description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Collection of operation request headers.
	Headers ParameterContractResponseArrayInput `pulumi:"headers"`
	// Collection of operation request query parameters.
	QueryParameters ParameterContractResponseArrayInput `pulumi:"queryParameters"`
	// Collection of operation request representations.
	Representations RepresentationContractResponseArrayInput `pulumi:"representations"`
}

func (RequestContractResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestContractResponse)(nil)).Elem()
}

func (i RequestContractResponseArgs) ToRequestContractResponseOutput() RequestContractResponseOutput {
	return i.ToRequestContractResponseOutputWithContext(context.Background())
}

func (i RequestContractResponseArgs) ToRequestContractResponseOutputWithContext(ctx context.Context) RequestContractResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestContractResponseOutput)
}

func (i RequestContractResponseArgs) ToRequestContractResponsePtrOutput() RequestContractResponsePtrOutput {
	return i.ToRequestContractResponsePtrOutputWithContext(context.Background())
}

func (i RequestContractResponseArgs) ToRequestContractResponsePtrOutputWithContext(ctx context.Context) RequestContractResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestContractResponseOutput).ToRequestContractResponsePtrOutputWithContext(ctx)
}

// RequestContractResponsePtrInput is an input type that accepts RequestContractResponseArgs, RequestContractResponsePtr and RequestContractResponsePtrOutput values.
// You can construct a concrete instance of `RequestContractResponsePtrInput` via:
//
//          RequestContractResponseArgs{...}
//
//  or:
//
//          nil
type RequestContractResponsePtrInput interface {
	pulumi.Input

	ToRequestContractResponsePtrOutput() RequestContractResponsePtrOutput
	ToRequestContractResponsePtrOutputWithContext(context.Context) RequestContractResponsePtrOutput
}

type requestContractResponsePtrType RequestContractResponseArgs

func RequestContractResponsePtr(v *RequestContractResponseArgs) RequestContractResponsePtrInput {
	return (*requestContractResponsePtrType)(v)
}

func (*requestContractResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestContractResponse)(nil)).Elem()
}

func (i *requestContractResponsePtrType) ToRequestContractResponsePtrOutput() RequestContractResponsePtrOutput {
	return i.ToRequestContractResponsePtrOutputWithContext(context.Background())
}

func (i *requestContractResponsePtrType) ToRequestContractResponsePtrOutputWithContext(ctx context.Context) RequestContractResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestContractResponsePtrOutput)
}

// Operation request details.
type RequestContractResponseOutput struct{ *pulumi.OutputState }

func (RequestContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestContractResponse)(nil)).Elem()
}

func (o RequestContractResponseOutput) ToRequestContractResponseOutput() RequestContractResponseOutput {
	return o
}

func (o RequestContractResponseOutput) ToRequestContractResponseOutputWithContext(ctx context.Context) RequestContractResponseOutput {
	return o
}

func (o RequestContractResponseOutput) ToRequestContractResponsePtrOutput() RequestContractResponsePtrOutput {
	return o.ToRequestContractResponsePtrOutputWithContext(context.Background())
}

func (o RequestContractResponseOutput) ToRequestContractResponsePtrOutputWithContext(ctx context.Context) RequestContractResponsePtrOutput {
	return o.ApplyT(func(v RequestContractResponse) *RequestContractResponse {
		return &v
	}).(RequestContractResponsePtrOutput)
}

// Operation request description.
func (o RequestContractResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestContractResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Collection of operation request headers.
func (o RequestContractResponseOutput) Headers() ParameterContractResponseArrayOutput {
	return o.ApplyT(func(v RequestContractResponse) []ParameterContractResponse { return v.Headers }).(ParameterContractResponseArrayOutput)
}

// Collection of operation request query parameters.
func (o RequestContractResponseOutput) QueryParameters() ParameterContractResponseArrayOutput {
	return o.ApplyT(func(v RequestContractResponse) []ParameterContractResponse { return v.QueryParameters }).(ParameterContractResponseArrayOutput)
}

// Collection of operation request representations.
func (o RequestContractResponseOutput) Representations() RepresentationContractResponseArrayOutput {
	return o.ApplyT(func(v RequestContractResponse) []RepresentationContractResponse { return v.Representations }).(RepresentationContractResponseArrayOutput)
}

type RequestContractResponsePtrOutput struct{ *pulumi.OutputState }

func (RequestContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestContractResponse)(nil)).Elem()
}

func (o RequestContractResponsePtrOutput) ToRequestContractResponsePtrOutput() RequestContractResponsePtrOutput {
	return o
}

func (o RequestContractResponsePtrOutput) ToRequestContractResponsePtrOutputWithContext(ctx context.Context) RequestContractResponsePtrOutput {
	return o
}

func (o RequestContractResponsePtrOutput) Elem() RequestContractResponseOutput {
	return o.ApplyT(func(v *RequestContractResponse) RequestContractResponse { return *v }).(RequestContractResponseOutput)
}

// Operation request description.
func (o RequestContractResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Collection of operation request headers.
func (o RequestContractResponsePtrOutput) Headers() ParameterContractResponseArrayOutput {
	return o.ApplyT(func(v *RequestContractResponse) []ParameterContractResponse {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(ParameterContractResponseArrayOutput)
}

// Collection of operation request query parameters.
func (o RequestContractResponsePtrOutput) QueryParameters() ParameterContractResponseArrayOutput {
	return o.ApplyT(func(v *RequestContractResponse) []ParameterContractResponse {
		if v == nil {
			return nil
		}
		return v.QueryParameters
	}).(ParameterContractResponseArrayOutput)
}

// Collection of operation request representations.
func (o RequestContractResponsePtrOutput) Representations() RepresentationContractResponseArrayOutput {
	return o.ApplyT(func(v *RequestContractResponse) []RepresentationContractResponse {
		if v == nil {
			return nil
		}
		return v.Representations
	}).(RepresentationContractResponseArrayOutput)
}

// Operation response details.
type ResponseContract struct {
	// Operation response description.
	Description *string `pulumi:"description"`
	// Collection of operation response headers.
	Headers []ParameterContract `pulumi:"headers"`
	// Collection of operation response representations.
	Representations []RepresentationContract `pulumi:"representations"`
	// Operation response HTTP status code.
	StatusCode int `pulumi:"statusCode"`
}

// ResponseContractInput is an input type that accepts ResponseContractArgs and ResponseContractOutput values.
// You can construct a concrete instance of `ResponseContractInput` via:
//
//          ResponseContractArgs{...}
type ResponseContractInput interface {
	pulumi.Input

	ToResponseContractOutput() ResponseContractOutput
	ToResponseContractOutputWithContext(context.Context) ResponseContractOutput
}

// Operation response details.
type ResponseContractArgs struct {
	// Operation response description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Collection of operation response headers.
	Headers ParameterContractArrayInput `pulumi:"headers"`
	// Collection of operation response representations.
	Representations RepresentationContractArrayInput `pulumi:"representations"`
	// Operation response HTTP status code.
	StatusCode pulumi.IntInput `pulumi:"statusCode"`
}

func (ResponseContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseContract)(nil)).Elem()
}

func (i ResponseContractArgs) ToResponseContractOutput() ResponseContractOutput {
	return i.ToResponseContractOutputWithContext(context.Background())
}

func (i ResponseContractArgs) ToResponseContractOutputWithContext(ctx context.Context) ResponseContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseContractOutput)
}

// ResponseContractArrayInput is an input type that accepts ResponseContractArray and ResponseContractArrayOutput values.
// You can construct a concrete instance of `ResponseContractArrayInput` via:
//
//          ResponseContractArray{ ResponseContractArgs{...} }
type ResponseContractArrayInput interface {
	pulumi.Input

	ToResponseContractArrayOutput() ResponseContractArrayOutput
	ToResponseContractArrayOutputWithContext(context.Context) ResponseContractArrayOutput
}

type ResponseContractArray []ResponseContractInput

func (ResponseContractArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponseContract)(nil)).Elem()
}

func (i ResponseContractArray) ToResponseContractArrayOutput() ResponseContractArrayOutput {
	return i.ToResponseContractArrayOutputWithContext(context.Background())
}

func (i ResponseContractArray) ToResponseContractArrayOutputWithContext(ctx context.Context) ResponseContractArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseContractArrayOutput)
}

// Operation response details.
type ResponseContractOutput struct{ *pulumi.OutputState }

func (ResponseContractOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseContract)(nil)).Elem()
}

func (o ResponseContractOutput) ToResponseContractOutput() ResponseContractOutput {
	return o
}

func (o ResponseContractOutput) ToResponseContractOutputWithContext(ctx context.Context) ResponseContractOutput {
	return o
}

// Operation response description.
func (o ResponseContractOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponseContract) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Collection of operation response headers.
func (o ResponseContractOutput) Headers() ParameterContractArrayOutput {
	return o.ApplyT(func(v ResponseContract) []ParameterContract { return v.Headers }).(ParameterContractArrayOutput)
}

// Collection of operation response representations.
func (o ResponseContractOutput) Representations() RepresentationContractArrayOutput {
	return o.ApplyT(func(v ResponseContract) []RepresentationContract { return v.Representations }).(RepresentationContractArrayOutput)
}

// Operation response HTTP status code.
func (o ResponseContractOutput) StatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v ResponseContract) int { return v.StatusCode }).(pulumi.IntOutput)
}

type ResponseContractArrayOutput struct{ *pulumi.OutputState }

func (ResponseContractArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponseContract)(nil)).Elem()
}

func (o ResponseContractArrayOutput) ToResponseContractArrayOutput() ResponseContractArrayOutput {
	return o
}

func (o ResponseContractArrayOutput) ToResponseContractArrayOutputWithContext(ctx context.Context) ResponseContractArrayOutput {
	return o
}

func (o ResponseContractArrayOutput) Index(i pulumi.IntInput) ResponseContractOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponseContract {
		return vs[0].([]ResponseContract)[vs[1].(int)]
	}).(ResponseContractOutput)
}

// Operation response details.
type ResponseContractResponse struct {
	// Operation response description.
	Description *string `pulumi:"description"`
	// Collection of operation response headers.
	Headers []ParameterContractResponse `pulumi:"headers"`
	// Collection of operation response representations.
	Representations []RepresentationContractResponse `pulumi:"representations"`
	// Operation response HTTP status code.
	StatusCode int `pulumi:"statusCode"`
}

// ResponseContractResponseInput is an input type that accepts ResponseContractResponseArgs and ResponseContractResponseOutput values.
// You can construct a concrete instance of `ResponseContractResponseInput` via:
//
//          ResponseContractResponseArgs{...}
type ResponseContractResponseInput interface {
	pulumi.Input

	ToResponseContractResponseOutput() ResponseContractResponseOutput
	ToResponseContractResponseOutputWithContext(context.Context) ResponseContractResponseOutput
}

// Operation response details.
type ResponseContractResponseArgs struct {
	// Operation response description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Collection of operation response headers.
	Headers ParameterContractResponseArrayInput `pulumi:"headers"`
	// Collection of operation response representations.
	Representations RepresentationContractResponseArrayInput `pulumi:"representations"`
	// Operation response HTTP status code.
	StatusCode pulumi.IntInput `pulumi:"statusCode"`
}

func (ResponseContractResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseContractResponse)(nil)).Elem()
}

func (i ResponseContractResponseArgs) ToResponseContractResponseOutput() ResponseContractResponseOutput {
	return i.ToResponseContractResponseOutputWithContext(context.Background())
}

func (i ResponseContractResponseArgs) ToResponseContractResponseOutputWithContext(ctx context.Context) ResponseContractResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseContractResponseOutput)
}

// ResponseContractResponseArrayInput is an input type that accepts ResponseContractResponseArray and ResponseContractResponseArrayOutput values.
// You can construct a concrete instance of `ResponseContractResponseArrayInput` via:
//
//          ResponseContractResponseArray{ ResponseContractResponseArgs{...} }
type ResponseContractResponseArrayInput interface {
	pulumi.Input

	ToResponseContractResponseArrayOutput() ResponseContractResponseArrayOutput
	ToResponseContractResponseArrayOutputWithContext(context.Context) ResponseContractResponseArrayOutput
}

type ResponseContractResponseArray []ResponseContractResponseInput

func (ResponseContractResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponseContractResponse)(nil)).Elem()
}

func (i ResponseContractResponseArray) ToResponseContractResponseArrayOutput() ResponseContractResponseArrayOutput {
	return i.ToResponseContractResponseArrayOutputWithContext(context.Background())
}

func (i ResponseContractResponseArray) ToResponseContractResponseArrayOutputWithContext(ctx context.Context) ResponseContractResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseContractResponseArrayOutput)
}

// Operation response details.
type ResponseContractResponseOutput struct{ *pulumi.OutputState }

func (ResponseContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseContractResponse)(nil)).Elem()
}

func (o ResponseContractResponseOutput) ToResponseContractResponseOutput() ResponseContractResponseOutput {
	return o
}

func (o ResponseContractResponseOutput) ToResponseContractResponseOutputWithContext(ctx context.Context) ResponseContractResponseOutput {
	return o
}

// Operation response description.
func (o ResponseContractResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponseContractResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Collection of operation response headers.
func (o ResponseContractResponseOutput) Headers() ParameterContractResponseArrayOutput {
	return o.ApplyT(func(v ResponseContractResponse) []ParameterContractResponse { return v.Headers }).(ParameterContractResponseArrayOutput)
}

// Collection of operation response representations.
func (o ResponseContractResponseOutput) Representations() RepresentationContractResponseArrayOutput {
	return o.ApplyT(func(v ResponseContractResponse) []RepresentationContractResponse { return v.Representations }).(RepresentationContractResponseArrayOutput)
}

// Operation response HTTP status code.
func (o ResponseContractResponseOutput) StatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v ResponseContractResponse) int { return v.StatusCode }).(pulumi.IntOutput)
}

type ResponseContractResponseArrayOutput struct{ *pulumi.OutputState }

func (ResponseContractResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponseContractResponse)(nil)).Elem()
}

func (o ResponseContractResponseArrayOutput) ToResponseContractResponseArrayOutput() ResponseContractResponseArrayOutput {
	return o
}

func (o ResponseContractResponseArrayOutput) ToResponseContractResponseArrayOutputWithContext(ctx context.Context) ResponseContractResponseArrayOutput {
	return o
}

func (o ResponseContractResponseArrayOutput) Index(i pulumi.IntInput) ResponseContractResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponseContractResponse {
		return vs[0].([]ResponseContractResponse)[vs[1].(int)]
	}).(ResponseContractResponseOutput)
}

// Sampling settings for Diagnostic.
type SamplingSettings struct {
	// Rate of sampling for fixed-rate sampling.
	Percentage *float64 `pulumi:"percentage"`
	// Sampling type.
	SamplingType *string `pulumi:"samplingType"`
}

// SamplingSettingsInput is an input type that accepts SamplingSettingsArgs and SamplingSettingsOutput values.
// You can construct a concrete instance of `SamplingSettingsInput` via:
//
//          SamplingSettingsArgs{...}
type SamplingSettingsInput interface {
	pulumi.Input

	ToSamplingSettingsOutput() SamplingSettingsOutput
	ToSamplingSettingsOutputWithContext(context.Context) SamplingSettingsOutput
}

// Sampling settings for Diagnostic.
type SamplingSettingsArgs struct {
	// Rate of sampling for fixed-rate sampling.
	Percentage pulumi.Float64PtrInput `pulumi:"percentage"`
	// Sampling type.
	SamplingType pulumi.StringPtrInput `pulumi:"samplingType"`
}

func (SamplingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SamplingSettings)(nil)).Elem()
}

func (i SamplingSettingsArgs) ToSamplingSettingsOutput() SamplingSettingsOutput {
	return i.ToSamplingSettingsOutputWithContext(context.Background())
}

func (i SamplingSettingsArgs) ToSamplingSettingsOutputWithContext(ctx context.Context) SamplingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamplingSettingsOutput)
}

func (i SamplingSettingsArgs) ToSamplingSettingsPtrOutput() SamplingSettingsPtrOutput {
	return i.ToSamplingSettingsPtrOutputWithContext(context.Background())
}

func (i SamplingSettingsArgs) ToSamplingSettingsPtrOutputWithContext(ctx context.Context) SamplingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamplingSettingsOutput).ToSamplingSettingsPtrOutputWithContext(ctx)
}

// SamplingSettingsPtrInput is an input type that accepts SamplingSettingsArgs, SamplingSettingsPtr and SamplingSettingsPtrOutput values.
// You can construct a concrete instance of `SamplingSettingsPtrInput` via:
//
//          SamplingSettingsArgs{...}
//
//  or:
//
//          nil
type SamplingSettingsPtrInput interface {
	pulumi.Input

	ToSamplingSettingsPtrOutput() SamplingSettingsPtrOutput
	ToSamplingSettingsPtrOutputWithContext(context.Context) SamplingSettingsPtrOutput
}

type samplingSettingsPtrType SamplingSettingsArgs

func SamplingSettingsPtr(v *SamplingSettingsArgs) SamplingSettingsPtrInput {
	return (*samplingSettingsPtrType)(v)
}

func (*samplingSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SamplingSettings)(nil)).Elem()
}

func (i *samplingSettingsPtrType) ToSamplingSettingsPtrOutput() SamplingSettingsPtrOutput {
	return i.ToSamplingSettingsPtrOutputWithContext(context.Background())
}

func (i *samplingSettingsPtrType) ToSamplingSettingsPtrOutputWithContext(ctx context.Context) SamplingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamplingSettingsPtrOutput)
}

// Sampling settings for Diagnostic.
type SamplingSettingsOutput struct{ *pulumi.OutputState }

func (SamplingSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamplingSettings)(nil)).Elem()
}

func (o SamplingSettingsOutput) ToSamplingSettingsOutput() SamplingSettingsOutput {
	return o
}

func (o SamplingSettingsOutput) ToSamplingSettingsOutputWithContext(ctx context.Context) SamplingSettingsOutput {
	return o
}

func (o SamplingSettingsOutput) ToSamplingSettingsPtrOutput() SamplingSettingsPtrOutput {
	return o.ToSamplingSettingsPtrOutputWithContext(context.Background())
}

func (o SamplingSettingsOutput) ToSamplingSettingsPtrOutputWithContext(ctx context.Context) SamplingSettingsPtrOutput {
	return o.ApplyT(func(v SamplingSettings) *SamplingSettings {
		return &v
	}).(SamplingSettingsPtrOutput)
}

// Rate of sampling for fixed-rate sampling.
func (o SamplingSettingsOutput) Percentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SamplingSettings) *float64 { return v.Percentage }).(pulumi.Float64PtrOutput)
}

// Sampling type.
func (o SamplingSettingsOutput) SamplingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamplingSettings) *string { return v.SamplingType }).(pulumi.StringPtrOutput)
}

type SamplingSettingsPtrOutput struct{ *pulumi.OutputState }

func (SamplingSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SamplingSettings)(nil)).Elem()
}

func (o SamplingSettingsPtrOutput) ToSamplingSettingsPtrOutput() SamplingSettingsPtrOutput {
	return o
}

func (o SamplingSettingsPtrOutput) ToSamplingSettingsPtrOutputWithContext(ctx context.Context) SamplingSettingsPtrOutput {
	return o
}

func (o SamplingSettingsPtrOutput) Elem() SamplingSettingsOutput {
	return o.ApplyT(func(v *SamplingSettings) SamplingSettings { return *v }).(SamplingSettingsOutput)
}

// Rate of sampling for fixed-rate sampling.
func (o SamplingSettingsPtrOutput) Percentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SamplingSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.Percentage
	}).(pulumi.Float64PtrOutput)
}

// Sampling type.
func (o SamplingSettingsPtrOutput) SamplingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SamplingSettings) *string {
		if v == nil {
			return nil
		}
		return v.SamplingType
	}).(pulumi.StringPtrOutput)
}

// Sampling settings for Diagnostic.
type SamplingSettingsResponse struct {
	// Rate of sampling for fixed-rate sampling.
	Percentage *float64 `pulumi:"percentage"`
	// Sampling type.
	SamplingType *string `pulumi:"samplingType"`
}

// SamplingSettingsResponseInput is an input type that accepts SamplingSettingsResponseArgs and SamplingSettingsResponseOutput values.
// You can construct a concrete instance of `SamplingSettingsResponseInput` via:
//
//          SamplingSettingsResponseArgs{...}
type SamplingSettingsResponseInput interface {
	pulumi.Input

	ToSamplingSettingsResponseOutput() SamplingSettingsResponseOutput
	ToSamplingSettingsResponseOutputWithContext(context.Context) SamplingSettingsResponseOutput
}

// Sampling settings for Diagnostic.
type SamplingSettingsResponseArgs struct {
	// Rate of sampling for fixed-rate sampling.
	Percentage pulumi.Float64PtrInput `pulumi:"percentage"`
	// Sampling type.
	SamplingType pulumi.StringPtrInput `pulumi:"samplingType"`
}

func (SamplingSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SamplingSettingsResponse)(nil)).Elem()
}

func (i SamplingSettingsResponseArgs) ToSamplingSettingsResponseOutput() SamplingSettingsResponseOutput {
	return i.ToSamplingSettingsResponseOutputWithContext(context.Background())
}

func (i SamplingSettingsResponseArgs) ToSamplingSettingsResponseOutputWithContext(ctx context.Context) SamplingSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamplingSettingsResponseOutput)
}

func (i SamplingSettingsResponseArgs) ToSamplingSettingsResponsePtrOutput() SamplingSettingsResponsePtrOutput {
	return i.ToSamplingSettingsResponsePtrOutputWithContext(context.Background())
}

func (i SamplingSettingsResponseArgs) ToSamplingSettingsResponsePtrOutputWithContext(ctx context.Context) SamplingSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamplingSettingsResponseOutput).ToSamplingSettingsResponsePtrOutputWithContext(ctx)
}

// SamplingSettingsResponsePtrInput is an input type that accepts SamplingSettingsResponseArgs, SamplingSettingsResponsePtr and SamplingSettingsResponsePtrOutput values.
// You can construct a concrete instance of `SamplingSettingsResponsePtrInput` via:
//
//          SamplingSettingsResponseArgs{...}
//
//  or:
//
//          nil
type SamplingSettingsResponsePtrInput interface {
	pulumi.Input

	ToSamplingSettingsResponsePtrOutput() SamplingSettingsResponsePtrOutput
	ToSamplingSettingsResponsePtrOutputWithContext(context.Context) SamplingSettingsResponsePtrOutput
}

type samplingSettingsResponsePtrType SamplingSettingsResponseArgs

func SamplingSettingsResponsePtr(v *SamplingSettingsResponseArgs) SamplingSettingsResponsePtrInput {
	return (*samplingSettingsResponsePtrType)(v)
}

func (*samplingSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SamplingSettingsResponse)(nil)).Elem()
}

func (i *samplingSettingsResponsePtrType) ToSamplingSettingsResponsePtrOutput() SamplingSettingsResponsePtrOutput {
	return i.ToSamplingSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *samplingSettingsResponsePtrType) ToSamplingSettingsResponsePtrOutputWithContext(ctx context.Context) SamplingSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamplingSettingsResponsePtrOutput)
}

// Sampling settings for Diagnostic.
type SamplingSettingsResponseOutput struct{ *pulumi.OutputState }

func (SamplingSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamplingSettingsResponse)(nil)).Elem()
}

func (o SamplingSettingsResponseOutput) ToSamplingSettingsResponseOutput() SamplingSettingsResponseOutput {
	return o
}

func (o SamplingSettingsResponseOutput) ToSamplingSettingsResponseOutputWithContext(ctx context.Context) SamplingSettingsResponseOutput {
	return o
}

func (o SamplingSettingsResponseOutput) ToSamplingSettingsResponsePtrOutput() SamplingSettingsResponsePtrOutput {
	return o.ToSamplingSettingsResponsePtrOutputWithContext(context.Background())
}

func (o SamplingSettingsResponseOutput) ToSamplingSettingsResponsePtrOutputWithContext(ctx context.Context) SamplingSettingsResponsePtrOutput {
	return o.ApplyT(func(v SamplingSettingsResponse) *SamplingSettingsResponse {
		return &v
	}).(SamplingSettingsResponsePtrOutput)
}

// Rate of sampling for fixed-rate sampling.
func (o SamplingSettingsResponseOutput) Percentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SamplingSettingsResponse) *float64 { return v.Percentage }).(pulumi.Float64PtrOutput)
}

// Sampling type.
func (o SamplingSettingsResponseOutput) SamplingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamplingSettingsResponse) *string { return v.SamplingType }).(pulumi.StringPtrOutput)
}

type SamplingSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (SamplingSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SamplingSettingsResponse)(nil)).Elem()
}

func (o SamplingSettingsResponsePtrOutput) ToSamplingSettingsResponsePtrOutput() SamplingSettingsResponsePtrOutput {
	return o
}

func (o SamplingSettingsResponsePtrOutput) ToSamplingSettingsResponsePtrOutputWithContext(ctx context.Context) SamplingSettingsResponsePtrOutput {
	return o
}

func (o SamplingSettingsResponsePtrOutput) Elem() SamplingSettingsResponseOutput {
	return o.ApplyT(func(v *SamplingSettingsResponse) SamplingSettingsResponse { return *v }).(SamplingSettingsResponseOutput)
}

// Rate of sampling for fixed-rate sampling.
func (o SamplingSettingsResponsePtrOutput) Percentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SamplingSettingsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Percentage
	}).(pulumi.Float64PtrOutput)
}

// Sampling type.
func (o SamplingSettingsResponsePtrOutput) SamplingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SamplingSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SamplingType
	}).(pulumi.StringPtrOutput)
}

// Schema contract Properties.
type SchemaContractPropertiesResponse struct {
	// Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). </br> - `Swagger` Schema use `application/vnd.ms-azure-apim.swagger.definitions+json` </br> - `WSDL` Schema use `application/vnd.ms-azure-apim.xsd+xml` </br> - `OpenApi` Schema use `application/vnd.oai.openapi.components+json` </br> - `WADL Schema` use `application/vnd.ms-azure-apim.wadl.grammars+xml`.
	ContentType string `pulumi:"contentType"`
	// Properties of the Schema Document.
	Document map[string]interface{} `pulumi:"document"`
}

// SchemaContractPropertiesResponseInput is an input type that accepts SchemaContractPropertiesResponseArgs and SchemaContractPropertiesResponseOutput values.
// You can construct a concrete instance of `SchemaContractPropertiesResponseInput` via:
//
//          SchemaContractPropertiesResponseArgs{...}
type SchemaContractPropertiesResponseInput interface {
	pulumi.Input

	ToSchemaContractPropertiesResponseOutput() SchemaContractPropertiesResponseOutput
	ToSchemaContractPropertiesResponseOutputWithContext(context.Context) SchemaContractPropertiesResponseOutput
}

// Schema contract Properties.
type SchemaContractPropertiesResponseArgs struct {
	// Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). </br> - `Swagger` Schema use `application/vnd.ms-azure-apim.swagger.definitions+json` </br> - `WSDL` Schema use `application/vnd.ms-azure-apim.xsd+xml` </br> - `OpenApi` Schema use `application/vnd.oai.openapi.components+json` </br> - `WADL Schema` use `application/vnd.ms-azure-apim.wadl.grammars+xml`.
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// Properties of the Schema Document.
	Document pulumi.MapInput `pulumi:"document"`
}

func (SchemaContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaContractPropertiesResponse)(nil)).Elem()
}

func (i SchemaContractPropertiesResponseArgs) ToSchemaContractPropertiesResponseOutput() SchemaContractPropertiesResponseOutput {
	return i.ToSchemaContractPropertiesResponseOutputWithContext(context.Background())
}

func (i SchemaContractPropertiesResponseArgs) ToSchemaContractPropertiesResponseOutputWithContext(ctx context.Context) SchemaContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaContractPropertiesResponseOutput)
}

func (i SchemaContractPropertiesResponseArgs) ToSchemaContractPropertiesResponsePtrOutput() SchemaContractPropertiesResponsePtrOutput {
	return i.ToSchemaContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i SchemaContractPropertiesResponseArgs) ToSchemaContractPropertiesResponsePtrOutputWithContext(ctx context.Context) SchemaContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaContractPropertiesResponseOutput).ToSchemaContractPropertiesResponsePtrOutputWithContext(ctx)
}

// SchemaContractPropertiesResponsePtrInput is an input type that accepts SchemaContractPropertiesResponseArgs, SchemaContractPropertiesResponsePtr and SchemaContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `SchemaContractPropertiesResponsePtrInput` via:
//
//          SchemaContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type SchemaContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToSchemaContractPropertiesResponsePtrOutput() SchemaContractPropertiesResponsePtrOutput
	ToSchemaContractPropertiesResponsePtrOutputWithContext(context.Context) SchemaContractPropertiesResponsePtrOutput
}

type schemaContractPropertiesResponsePtrType SchemaContractPropertiesResponseArgs

func SchemaContractPropertiesResponsePtr(v *SchemaContractPropertiesResponseArgs) SchemaContractPropertiesResponsePtrInput {
	return (*schemaContractPropertiesResponsePtrType)(v)
}

func (*schemaContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaContractPropertiesResponse)(nil)).Elem()
}

func (i *schemaContractPropertiesResponsePtrType) ToSchemaContractPropertiesResponsePtrOutput() SchemaContractPropertiesResponsePtrOutput {
	return i.ToSchemaContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *schemaContractPropertiesResponsePtrType) ToSchemaContractPropertiesResponsePtrOutputWithContext(ctx context.Context) SchemaContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaContractPropertiesResponsePtrOutput)
}

// Schema contract Properties.
type SchemaContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SchemaContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaContractPropertiesResponse)(nil)).Elem()
}

func (o SchemaContractPropertiesResponseOutput) ToSchemaContractPropertiesResponseOutput() SchemaContractPropertiesResponseOutput {
	return o
}

func (o SchemaContractPropertiesResponseOutput) ToSchemaContractPropertiesResponseOutputWithContext(ctx context.Context) SchemaContractPropertiesResponseOutput {
	return o
}

func (o SchemaContractPropertiesResponseOutput) ToSchemaContractPropertiesResponsePtrOutput() SchemaContractPropertiesResponsePtrOutput {
	return o.ToSchemaContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o SchemaContractPropertiesResponseOutput) ToSchemaContractPropertiesResponsePtrOutputWithContext(ctx context.Context) SchemaContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SchemaContractPropertiesResponse) *SchemaContractPropertiesResponse {
		return &v
	}).(SchemaContractPropertiesResponsePtrOutput)
}

// Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). </br> - `Swagger` Schema use `application/vnd.ms-azure-apim.swagger.definitions+json` </br> - `WSDL` Schema use `application/vnd.ms-azure-apim.xsd+xml` </br> - `OpenApi` Schema use `application/vnd.oai.openapi.components+json` </br> - `WADL Schema` use `application/vnd.ms-azure-apim.wadl.grammars+xml`.
func (o SchemaContractPropertiesResponseOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaContractPropertiesResponse) string { return v.ContentType }).(pulumi.StringOutput)
}

// Properties of the Schema Document.
func (o SchemaContractPropertiesResponseOutput) Document() pulumi.MapOutput {
	return o.ApplyT(func(v SchemaContractPropertiesResponse) map[string]interface{} { return v.Document }).(pulumi.MapOutput)
}

type SchemaContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SchemaContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaContractPropertiesResponse)(nil)).Elem()
}

func (o SchemaContractPropertiesResponsePtrOutput) ToSchemaContractPropertiesResponsePtrOutput() SchemaContractPropertiesResponsePtrOutput {
	return o
}

func (o SchemaContractPropertiesResponsePtrOutput) ToSchemaContractPropertiesResponsePtrOutputWithContext(ctx context.Context) SchemaContractPropertiesResponsePtrOutput {
	return o
}

func (o SchemaContractPropertiesResponsePtrOutput) Elem() SchemaContractPropertiesResponseOutput {
	return o.ApplyT(func(v *SchemaContractPropertiesResponse) SchemaContractPropertiesResponse { return *v }).(SchemaContractPropertiesResponseOutput)
}

// Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). </br> - `Swagger` Schema use `application/vnd.ms-azure-apim.swagger.definitions+json` </br> - `WSDL` Schema use `application/vnd.ms-azure-apim.xsd+xml` </br> - `OpenApi` Schema use `application/vnd.oai.openapi.components+json` </br> - `WADL Schema` use `application/vnd.ms-azure-apim.wadl.grammars+xml`.
func (o SchemaContractPropertiesResponsePtrOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ContentType
	}).(pulumi.StringPtrOutput)
}

// Properties of the Schema Document.
func (o SchemaContractPropertiesResponsePtrOutput) Document() pulumi.MapOutput {
	return o.ApplyT(func(v *SchemaContractPropertiesResponse) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Document
	}).(pulumi.MapOutput)
}

// Subscription details.
type SubscriptionType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Subscription contract properties.
	Properties SubscriptionContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// SubscriptionTypeInput is an input type that accepts SubscriptionTypeArgs and SubscriptionTypeOutput values.
// You can construct a concrete instance of `SubscriptionTypeInput` via:
//
//          SubscriptionTypeArgs{...}
type SubscriptionTypeInput interface {
	pulumi.Input

	ToSubscriptionTypeOutput() SubscriptionTypeOutput
	ToSubscriptionTypeOutputWithContext(context.Context) SubscriptionTypeOutput
}

// Subscription details.
type SubscriptionTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Subscription contract properties.
	Properties SubscriptionContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SubscriptionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionType)(nil)).Elem()
}

func (i SubscriptionTypeArgs) ToSubscriptionTypeOutput() SubscriptionTypeOutput {
	return i.ToSubscriptionTypeOutputWithContext(context.Background())
}

func (i SubscriptionTypeArgs) ToSubscriptionTypeOutputWithContext(ctx context.Context) SubscriptionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionTypeOutput)
}

// Subscription details.
type SubscriptionTypeOutput struct{ *pulumi.OutputState }

func (SubscriptionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionType)(nil)).Elem()
}

func (o SubscriptionTypeOutput) ToSubscriptionTypeOutput() SubscriptionTypeOutput {
	return o
}

func (o SubscriptionTypeOutput) ToSubscriptionTypeOutputWithContext(ctx context.Context) SubscriptionTypeOutput {
	return o
}

// Resource name.
func (o SubscriptionTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionType) string { return v.Name }).(pulumi.StringOutput)
}

// Subscription contract properties.
func (o SubscriptionTypeOutput) Properties() SubscriptionContractPropertiesResponseOutput {
	return o.ApplyT(func(v SubscriptionType) SubscriptionContractPropertiesResponse { return v.Properties }).(SubscriptionContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o SubscriptionTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionType) string { return v.Type }).(pulumi.StringOutput)
}

// Subscription details.
type SubscriptionContractPropertiesResponse struct {
	// Determines whether tracing is enabled
	AllowTracing *bool `pulumi:"allowTracing"`
	// Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	CreatedDate string `pulumi:"createdDate"`
	// The name of the subscription, or null if the subscription has no name.
	DisplayName *string `pulumi:"displayName"`
	// Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is not automatically cancelled. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	EndDate *string `pulumi:"endDate"`
	// Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	ExpirationDate *string `pulumi:"expirationDate"`
	// Upcoming subscription expiration notification date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	NotificationDate *string `pulumi:"notificationDate"`
	// The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{userId} where {userId} is a user identifier.
	OwnerId *string `pulumi:"ownerId"`
	// Subscription primary key.
	PrimaryKey string `pulumi:"primaryKey"`
	// Scope like /products/{productId} or /apis or /apis/{apiId}.
	Scope string `pulumi:"scope"`
	// Subscription secondary key.
	SecondaryKey string `pulumi:"secondaryKey"`
	// Subscription activation date. The setting is for audit purposes only and the subscription is not automatically activated. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	StartDate *string `pulumi:"startDate"`
	// Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.
	State string `pulumi:"state"`
	// Optional subscription comment added by an administrator.
	StateComment *string `pulumi:"stateComment"`
}

// SubscriptionContractPropertiesResponseInput is an input type that accepts SubscriptionContractPropertiesResponseArgs and SubscriptionContractPropertiesResponseOutput values.
// You can construct a concrete instance of `SubscriptionContractPropertiesResponseInput` via:
//
//          SubscriptionContractPropertiesResponseArgs{...}
type SubscriptionContractPropertiesResponseInput interface {
	pulumi.Input

	ToSubscriptionContractPropertiesResponseOutput() SubscriptionContractPropertiesResponseOutput
	ToSubscriptionContractPropertiesResponseOutputWithContext(context.Context) SubscriptionContractPropertiesResponseOutput
}

// Subscription details.
type SubscriptionContractPropertiesResponseArgs struct {
	// Determines whether tracing is enabled
	AllowTracing pulumi.BoolPtrInput `pulumi:"allowTracing"`
	// Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// The name of the subscription, or null if the subscription has no name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is not automatically cancelled. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	EndDate pulumi.StringPtrInput `pulumi:"endDate"`
	// Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	ExpirationDate pulumi.StringPtrInput `pulumi:"expirationDate"`
	// Upcoming subscription expiration notification date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	NotificationDate pulumi.StringPtrInput `pulumi:"notificationDate"`
	// The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{userId} where {userId} is a user identifier.
	OwnerId pulumi.StringPtrInput `pulumi:"ownerId"`
	// Subscription primary key.
	PrimaryKey pulumi.StringInput `pulumi:"primaryKey"`
	// Scope like /products/{productId} or /apis or /apis/{apiId}.
	Scope pulumi.StringInput `pulumi:"scope"`
	// Subscription secondary key.
	SecondaryKey pulumi.StringInput `pulumi:"secondaryKey"`
	// Subscription activation date. The setting is for audit purposes only and the subscription is not automatically activated. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	StartDate pulumi.StringPtrInput `pulumi:"startDate"`
	// Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.
	State pulumi.StringInput `pulumi:"state"`
	// Optional subscription comment added by an administrator.
	StateComment pulumi.StringPtrInput `pulumi:"stateComment"`
}

func (SubscriptionContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionContractPropertiesResponse)(nil)).Elem()
}

func (i SubscriptionContractPropertiesResponseArgs) ToSubscriptionContractPropertiesResponseOutput() SubscriptionContractPropertiesResponseOutput {
	return i.ToSubscriptionContractPropertiesResponseOutputWithContext(context.Background())
}

func (i SubscriptionContractPropertiesResponseArgs) ToSubscriptionContractPropertiesResponseOutputWithContext(ctx context.Context) SubscriptionContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionContractPropertiesResponseOutput)
}

func (i SubscriptionContractPropertiesResponseArgs) ToSubscriptionContractPropertiesResponsePtrOutput() SubscriptionContractPropertiesResponsePtrOutput {
	return i.ToSubscriptionContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i SubscriptionContractPropertiesResponseArgs) ToSubscriptionContractPropertiesResponsePtrOutputWithContext(ctx context.Context) SubscriptionContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionContractPropertiesResponseOutput).ToSubscriptionContractPropertiesResponsePtrOutputWithContext(ctx)
}

// SubscriptionContractPropertiesResponsePtrInput is an input type that accepts SubscriptionContractPropertiesResponseArgs, SubscriptionContractPropertiesResponsePtr and SubscriptionContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `SubscriptionContractPropertiesResponsePtrInput` via:
//
//          SubscriptionContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type SubscriptionContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToSubscriptionContractPropertiesResponsePtrOutput() SubscriptionContractPropertiesResponsePtrOutput
	ToSubscriptionContractPropertiesResponsePtrOutputWithContext(context.Context) SubscriptionContractPropertiesResponsePtrOutput
}

type subscriptionContractPropertiesResponsePtrType SubscriptionContractPropertiesResponseArgs

func SubscriptionContractPropertiesResponsePtr(v *SubscriptionContractPropertiesResponseArgs) SubscriptionContractPropertiesResponsePtrInput {
	return (*subscriptionContractPropertiesResponsePtrType)(v)
}

func (*subscriptionContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionContractPropertiesResponse)(nil)).Elem()
}

func (i *subscriptionContractPropertiesResponsePtrType) ToSubscriptionContractPropertiesResponsePtrOutput() SubscriptionContractPropertiesResponsePtrOutput {
	return i.ToSubscriptionContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *subscriptionContractPropertiesResponsePtrType) ToSubscriptionContractPropertiesResponsePtrOutputWithContext(ctx context.Context) SubscriptionContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionContractPropertiesResponsePtrOutput)
}

// Subscription details.
type SubscriptionContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SubscriptionContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionContractPropertiesResponse)(nil)).Elem()
}

func (o SubscriptionContractPropertiesResponseOutput) ToSubscriptionContractPropertiesResponseOutput() SubscriptionContractPropertiesResponseOutput {
	return o
}

func (o SubscriptionContractPropertiesResponseOutput) ToSubscriptionContractPropertiesResponseOutputWithContext(ctx context.Context) SubscriptionContractPropertiesResponseOutput {
	return o
}

func (o SubscriptionContractPropertiesResponseOutput) ToSubscriptionContractPropertiesResponsePtrOutput() SubscriptionContractPropertiesResponsePtrOutput {
	return o.ToSubscriptionContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o SubscriptionContractPropertiesResponseOutput) ToSubscriptionContractPropertiesResponsePtrOutputWithContext(ctx context.Context) SubscriptionContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SubscriptionContractPropertiesResponse) *SubscriptionContractPropertiesResponse {
		return &v
	}).(SubscriptionContractPropertiesResponsePtrOutput)
}

// Determines whether tracing is enabled
func (o SubscriptionContractPropertiesResponseOutput) AllowTracing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SubscriptionContractPropertiesResponse) *bool { return v.AllowTracing }).(pulumi.BoolPtrOutput)
}

// Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o SubscriptionContractPropertiesResponseOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionContractPropertiesResponse) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// The name of the subscription, or null if the subscription has no name.
func (o SubscriptionContractPropertiesResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionContractPropertiesResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is not automatically cancelled. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o SubscriptionContractPropertiesResponseOutput) EndDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionContractPropertiesResponse) *string { return v.EndDate }).(pulumi.StringPtrOutput)
}

// Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o SubscriptionContractPropertiesResponseOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionContractPropertiesResponse) *string { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

// Upcoming subscription expiration notification date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o SubscriptionContractPropertiesResponseOutput) NotificationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionContractPropertiesResponse) *string { return v.NotificationDate }).(pulumi.StringPtrOutput)
}

// The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{userId} where {userId} is a user identifier.
func (o SubscriptionContractPropertiesResponseOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionContractPropertiesResponse) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

// Subscription primary key.
func (o SubscriptionContractPropertiesResponseOutput) PrimaryKey() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionContractPropertiesResponse) string { return v.PrimaryKey }).(pulumi.StringOutput)
}

// Scope like /products/{productId} or /apis or /apis/{apiId}.
func (o SubscriptionContractPropertiesResponseOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionContractPropertiesResponse) string { return v.Scope }).(pulumi.StringOutput)
}

// Subscription secondary key.
func (o SubscriptionContractPropertiesResponseOutput) SecondaryKey() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionContractPropertiesResponse) string { return v.SecondaryKey }).(pulumi.StringOutput)
}

// Subscription activation date. The setting is for audit purposes only and the subscription is not automatically activated. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o SubscriptionContractPropertiesResponseOutput) StartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionContractPropertiesResponse) *string { return v.StartDate }).(pulumi.StringPtrOutput)
}

// Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.
func (o SubscriptionContractPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionContractPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Optional subscription comment added by an administrator.
func (o SubscriptionContractPropertiesResponseOutput) StateComment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionContractPropertiesResponse) *string { return v.StateComment }).(pulumi.StringPtrOutput)
}

type SubscriptionContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SubscriptionContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionContractPropertiesResponse)(nil)).Elem()
}

func (o SubscriptionContractPropertiesResponsePtrOutput) ToSubscriptionContractPropertiesResponsePtrOutput() SubscriptionContractPropertiesResponsePtrOutput {
	return o
}

func (o SubscriptionContractPropertiesResponsePtrOutput) ToSubscriptionContractPropertiesResponsePtrOutputWithContext(ctx context.Context) SubscriptionContractPropertiesResponsePtrOutput {
	return o
}

func (o SubscriptionContractPropertiesResponsePtrOutput) Elem() SubscriptionContractPropertiesResponseOutput {
	return o.ApplyT(func(v *SubscriptionContractPropertiesResponse) SubscriptionContractPropertiesResponse { return *v }).(SubscriptionContractPropertiesResponseOutput)
}

// Determines whether tracing is enabled
func (o SubscriptionContractPropertiesResponsePtrOutput) AllowTracing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SubscriptionContractPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowTracing
	}).(pulumi.BoolPtrOutput)
}

// Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o SubscriptionContractPropertiesResponsePtrOutput) CreatedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedDate
	}).(pulumi.StringPtrOutput)
}

// The name of the subscription, or null if the subscription has no name.
func (o SubscriptionContractPropertiesResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is not automatically cancelled. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o SubscriptionContractPropertiesResponsePtrOutput) EndDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.EndDate
	}).(pulumi.StringPtrOutput)
}

// Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o SubscriptionContractPropertiesResponsePtrOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ExpirationDate
	}).(pulumi.StringPtrOutput)
}

// Upcoming subscription expiration notification date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o SubscriptionContractPropertiesResponsePtrOutput) NotificationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.NotificationDate
	}).(pulumi.StringPtrOutput)
}

// The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{userId} where {userId} is a user identifier.
func (o SubscriptionContractPropertiesResponsePtrOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.OwnerId
	}).(pulumi.StringPtrOutput)
}

// Subscription primary key.
func (o SubscriptionContractPropertiesResponsePtrOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrimaryKey
	}).(pulumi.StringPtrOutput)
}

// Scope like /products/{productId} or /apis or /apis/{apiId}.
func (o SubscriptionContractPropertiesResponsePtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Scope
	}).(pulumi.StringPtrOutput)
}

// Subscription secondary key.
func (o SubscriptionContractPropertiesResponsePtrOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecondaryKey
	}).(pulumi.StringPtrOutput)
}

// Subscription activation date. The setting is for audit purposes only and the subscription is not automatically activated. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o SubscriptionContractPropertiesResponsePtrOutput) StartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.StartDate
	}).(pulumi.StringPtrOutput)
}

// Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.
func (o SubscriptionContractPropertiesResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// Optional subscription comment added by an administrator.
func (o SubscriptionContractPropertiesResponsePtrOutput) StateComment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.StateComment
	}).(pulumi.StringPtrOutput)
}

// Subscription key parameter names details.
type SubscriptionKeyParameterNamesContract struct {
	// Subscription key header name.
	Header *string `pulumi:"header"`
	// Subscription key query string parameter name.
	Query *string `pulumi:"query"`
}

// SubscriptionKeyParameterNamesContractInput is an input type that accepts SubscriptionKeyParameterNamesContractArgs and SubscriptionKeyParameterNamesContractOutput values.
// You can construct a concrete instance of `SubscriptionKeyParameterNamesContractInput` via:
//
//          SubscriptionKeyParameterNamesContractArgs{...}
type SubscriptionKeyParameterNamesContractInput interface {
	pulumi.Input

	ToSubscriptionKeyParameterNamesContractOutput() SubscriptionKeyParameterNamesContractOutput
	ToSubscriptionKeyParameterNamesContractOutputWithContext(context.Context) SubscriptionKeyParameterNamesContractOutput
}

// Subscription key parameter names details.
type SubscriptionKeyParameterNamesContractArgs struct {
	// Subscription key header name.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Subscription key query string parameter name.
	Query pulumi.StringPtrInput `pulumi:"query"`
}

func (SubscriptionKeyParameterNamesContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionKeyParameterNamesContract)(nil)).Elem()
}

func (i SubscriptionKeyParameterNamesContractArgs) ToSubscriptionKeyParameterNamesContractOutput() SubscriptionKeyParameterNamesContractOutput {
	return i.ToSubscriptionKeyParameterNamesContractOutputWithContext(context.Background())
}

func (i SubscriptionKeyParameterNamesContractArgs) ToSubscriptionKeyParameterNamesContractOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionKeyParameterNamesContractOutput)
}

func (i SubscriptionKeyParameterNamesContractArgs) ToSubscriptionKeyParameterNamesContractPtrOutput() SubscriptionKeyParameterNamesContractPtrOutput {
	return i.ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(context.Background())
}

func (i SubscriptionKeyParameterNamesContractArgs) ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionKeyParameterNamesContractOutput).ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(ctx)
}

// SubscriptionKeyParameterNamesContractPtrInput is an input type that accepts SubscriptionKeyParameterNamesContractArgs, SubscriptionKeyParameterNamesContractPtr and SubscriptionKeyParameterNamesContractPtrOutput values.
// You can construct a concrete instance of `SubscriptionKeyParameterNamesContractPtrInput` via:
//
//          SubscriptionKeyParameterNamesContractArgs{...}
//
//  or:
//
//          nil
type SubscriptionKeyParameterNamesContractPtrInput interface {
	pulumi.Input

	ToSubscriptionKeyParameterNamesContractPtrOutput() SubscriptionKeyParameterNamesContractPtrOutput
	ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(context.Context) SubscriptionKeyParameterNamesContractPtrOutput
}

type subscriptionKeyParameterNamesContractPtrType SubscriptionKeyParameterNamesContractArgs

func SubscriptionKeyParameterNamesContractPtr(v *SubscriptionKeyParameterNamesContractArgs) SubscriptionKeyParameterNamesContractPtrInput {
	return (*subscriptionKeyParameterNamesContractPtrType)(v)
}

func (*subscriptionKeyParameterNamesContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionKeyParameterNamesContract)(nil)).Elem()
}

func (i *subscriptionKeyParameterNamesContractPtrType) ToSubscriptionKeyParameterNamesContractPtrOutput() SubscriptionKeyParameterNamesContractPtrOutput {
	return i.ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(context.Background())
}

func (i *subscriptionKeyParameterNamesContractPtrType) ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionKeyParameterNamesContractPtrOutput)
}

// Subscription key parameter names details.
type SubscriptionKeyParameterNamesContractOutput struct{ *pulumi.OutputState }

func (SubscriptionKeyParameterNamesContractOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionKeyParameterNamesContract)(nil)).Elem()
}

func (o SubscriptionKeyParameterNamesContractOutput) ToSubscriptionKeyParameterNamesContractOutput() SubscriptionKeyParameterNamesContractOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractOutput) ToSubscriptionKeyParameterNamesContractOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractOutput) ToSubscriptionKeyParameterNamesContractPtrOutput() SubscriptionKeyParameterNamesContractPtrOutput {
	return o.ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(context.Background())
}

func (o SubscriptionKeyParameterNamesContractOutput) ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractPtrOutput {
	return o.ApplyT(func(v SubscriptionKeyParameterNamesContract) *SubscriptionKeyParameterNamesContract {
		return &v
	}).(SubscriptionKeyParameterNamesContractPtrOutput)
}

// Subscription key header name.
func (o SubscriptionKeyParameterNamesContractOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionKeyParameterNamesContract) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Subscription key query string parameter name.
func (o SubscriptionKeyParameterNamesContractOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionKeyParameterNamesContract) *string { return v.Query }).(pulumi.StringPtrOutput)
}

type SubscriptionKeyParameterNamesContractPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionKeyParameterNamesContractPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionKeyParameterNamesContract)(nil)).Elem()
}

func (o SubscriptionKeyParameterNamesContractPtrOutput) ToSubscriptionKeyParameterNamesContractPtrOutput() SubscriptionKeyParameterNamesContractPtrOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractPtrOutput) ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractPtrOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractPtrOutput) Elem() SubscriptionKeyParameterNamesContractOutput {
	return o.ApplyT(func(v *SubscriptionKeyParameterNamesContract) SubscriptionKeyParameterNamesContract { return *v }).(SubscriptionKeyParameterNamesContractOutput)
}

// Subscription key header name.
func (o SubscriptionKeyParameterNamesContractPtrOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionKeyParameterNamesContract) *string {
		if v == nil {
			return nil
		}
		return v.Header
	}).(pulumi.StringPtrOutput)
}

// Subscription key query string parameter name.
func (o SubscriptionKeyParameterNamesContractPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionKeyParameterNamesContract) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

// Subscription key parameter names details.
type SubscriptionKeyParameterNamesContractResponse struct {
	// Subscription key header name.
	Header *string `pulumi:"header"`
	// Subscription key query string parameter name.
	Query *string `pulumi:"query"`
}

// SubscriptionKeyParameterNamesContractResponseInput is an input type that accepts SubscriptionKeyParameterNamesContractResponseArgs and SubscriptionKeyParameterNamesContractResponseOutput values.
// You can construct a concrete instance of `SubscriptionKeyParameterNamesContractResponseInput` via:
//
//          SubscriptionKeyParameterNamesContractResponseArgs{...}
type SubscriptionKeyParameterNamesContractResponseInput interface {
	pulumi.Input

	ToSubscriptionKeyParameterNamesContractResponseOutput() SubscriptionKeyParameterNamesContractResponseOutput
	ToSubscriptionKeyParameterNamesContractResponseOutputWithContext(context.Context) SubscriptionKeyParameterNamesContractResponseOutput
}

// Subscription key parameter names details.
type SubscriptionKeyParameterNamesContractResponseArgs struct {
	// Subscription key header name.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Subscription key query string parameter name.
	Query pulumi.StringPtrInput `pulumi:"query"`
}

func (SubscriptionKeyParameterNamesContractResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionKeyParameterNamesContractResponse)(nil)).Elem()
}

func (i SubscriptionKeyParameterNamesContractResponseArgs) ToSubscriptionKeyParameterNamesContractResponseOutput() SubscriptionKeyParameterNamesContractResponseOutput {
	return i.ToSubscriptionKeyParameterNamesContractResponseOutputWithContext(context.Background())
}

func (i SubscriptionKeyParameterNamesContractResponseArgs) ToSubscriptionKeyParameterNamesContractResponseOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionKeyParameterNamesContractResponseOutput)
}

func (i SubscriptionKeyParameterNamesContractResponseArgs) ToSubscriptionKeyParameterNamesContractResponsePtrOutput() SubscriptionKeyParameterNamesContractResponsePtrOutput {
	return i.ToSubscriptionKeyParameterNamesContractResponsePtrOutputWithContext(context.Background())
}

func (i SubscriptionKeyParameterNamesContractResponseArgs) ToSubscriptionKeyParameterNamesContractResponsePtrOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionKeyParameterNamesContractResponseOutput).ToSubscriptionKeyParameterNamesContractResponsePtrOutputWithContext(ctx)
}

// SubscriptionKeyParameterNamesContractResponsePtrInput is an input type that accepts SubscriptionKeyParameterNamesContractResponseArgs, SubscriptionKeyParameterNamesContractResponsePtr and SubscriptionKeyParameterNamesContractResponsePtrOutput values.
// You can construct a concrete instance of `SubscriptionKeyParameterNamesContractResponsePtrInput` via:
//
//          SubscriptionKeyParameterNamesContractResponseArgs{...}
//
//  or:
//
//          nil
type SubscriptionKeyParameterNamesContractResponsePtrInput interface {
	pulumi.Input

	ToSubscriptionKeyParameterNamesContractResponsePtrOutput() SubscriptionKeyParameterNamesContractResponsePtrOutput
	ToSubscriptionKeyParameterNamesContractResponsePtrOutputWithContext(context.Context) SubscriptionKeyParameterNamesContractResponsePtrOutput
}

type subscriptionKeyParameterNamesContractResponsePtrType SubscriptionKeyParameterNamesContractResponseArgs

func SubscriptionKeyParameterNamesContractResponsePtr(v *SubscriptionKeyParameterNamesContractResponseArgs) SubscriptionKeyParameterNamesContractResponsePtrInput {
	return (*subscriptionKeyParameterNamesContractResponsePtrType)(v)
}

func (*subscriptionKeyParameterNamesContractResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionKeyParameterNamesContractResponse)(nil)).Elem()
}

func (i *subscriptionKeyParameterNamesContractResponsePtrType) ToSubscriptionKeyParameterNamesContractResponsePtrOutput() SubscriptionKeyParameterNamesContractResponsePtrOutput {
	return i.ToSubscriptionKeyParameterNamesContractResponsePtrOutputWithContext(context.Background())
}

func (i *subscriptionKeyParameterNamesContractResponsePtrType) ToSubscriptionKeyParameterNamesContractResponsePtrOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionKeyParameterNamesContractResponsePtrOutput)
}

// Subscription key parameter names details.
type SubscriptionKeyParameterNamesContractResponseOutput struct{ *pulumi.OutputState }

func (SubscriptionKeyParameterNamesContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionKeyParameterNamesContractResponse)(nil)).Elem()
}

func (o SubscriptionKeyParameterNamesContractResponseOutput) ToSubscriptionKeyParameterNamesContractResponseOutput() SubscriptionKeyParameterNamesContractResponseOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractResponseOutput) ToSubscriptionKeyParameterNamesContractResponseOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractResponseOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractResponseOutput) ToSubscriptionKeyParameterNamesContractResponsePtrOutput() SubscriptionKeyParameterNamesContractResponsePtrOutput {
	return o.ToSubscriptionKeyParameterNamesContractResponsePtrOutputWithContext(context.Background())
}

func (o SubscriptionKeyParameterNamesContractResponseOutput) ToSubscriptionKeyParameterNamesContractResponsePtrOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractResponsePtrOutput {
	return o.ApplyT(func(v SubscriptionKeyParameterNamesContractResponse) *SubscriptionKeyParameterNamesContractResponse {
		return &v
	}).(SubscriptionKeyParameterNamesContractResponsePtrOutput)
}

// Subscription key header name.
func (o SubscriptionKeyParameterNamesContractResponseOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionKeyParameterNamesContractResponse) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Subscription key query string parameter name.
func (o SubscriptionKeyParameterNamesContractResponseOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionKeyParameterNamesContractResponse) *string { return v.Query }).(pulumi.StringPtrOutput)
}

type SubscriptionKeyParameterNamesContractResponsePtrOutput struct{ *pulumi.OutputState }

func (SubscriptionKeyParameterNamesContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionKeyParameterNamesContractResponse)(nil)).Elem()
}

func (o SubscriptionKeyParameterNamesContractResponsePtrOutput) ToSubscriptionKeyParameterNamesContractResponsePtrOutput() SubscriptionKeyParameterNamesContractResponsePtrOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractResponsePtrOutput) ToSubscriptionKeyParameterNamesContractResponsePtrOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractResponsePtrOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractResponsePtrOutput) Elem() SubscriptionKeyParameterNamesContractResponseOutput {
	return o.ApplyT(func(v *SubscriptionKeyParameterNamesContractResponse) SubscriptionKeyParameterNamesContractResponse {
		return *v
	}).(SubscriptionKeyParameterNamesContractResponseOutput)
}

// Subscription key header name.
func (o SubscriptionKeyParameterNamesContractResponsePtrOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionKeyParameterNamesContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.Header
	}).(pulumi.StringPtrOutput)
}

// Subscription key query string parameter name.
func (o SubscriptionKeyParameterNamesContractResponsePtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionKeyParameterNamesContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

// Tag Contract details.
type TagType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Tag entity contract properties.
	Properties TagContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// TagTypeInput is an input type that accepts TagTypeArgs and TagTypeOutput values.
// You can construct a concrete instance of `TagTypeInput` via:
//
//          TagTypeArgs{...}
type TagTypeInput interface {
	pulumi.Input

	ToTagTypeOutput() TagTypeOutput
	ToTagTypeOutputWithContext(context.Context) TagTypeOutput
}

// Tag Contract details.
type TagTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Tag entity contract properties.
	Properties TagContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TagTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagType)(nil)).Elem()
}

func (i TagTypeArgs) ToTagTypeOutput() TagTypeOutput {
	return i.ToTagTypeOutputWithContext(context.Background())
}

func (i TagTypeArgs) ToTagTypeOutputWithContext(ctx context.Context) TagTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagTypeOutput)
}

// Tag Contract details.
type TagTypeOutput struct{ *pulumi.OutputState }

func (TagTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagType)(nil)).Elem()
}

func (o TagTypeOutput) ToTagTypeOutput() TagTypeOutput {
	return o
}

func (o TagTypeOutput) ToTagTypeOutputWithContext(ctx context.Context) TagTypeOutput {
	return o
}

// Resource name.
func (o TagTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TagType) string { return v.Name }).(pulumi.StringOutput)
}

// Tag entity contract properties.
func (o TagTypeOutput) Properties() TagContractPropertiesResponseOutput {
	return o.ApplyT(func(v TagType) TagContractPropertiesResponse { return v.Properties }).(TagContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o TagTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TagType) string { return v.Type }).(pulumi.StringOutput)
}

// Tag Contract details.
type TagByApiType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Tag entity contract properties.
	Properties TagContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// TagByApiTypeInput is an input type that accepts TagByApiTypeArgs and TagByApiTypeOutput values.
// You can construct a concrete instance of `TagByApiTypeInput` via:
//
//          TagByApiTypeArgs{...}
type TagByApiTypeInput interface {
	pulumi.Input

	ToTagByApiTypeOutput() TagByApiTypeOutput
	ToTagByApiTypeOutputWithContext(context.Context) TagByApiTypeOutput
}

// Tag Contract details.
type TagByApiTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Tag entity contract properties.
	Properties TagContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TagByApiTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagByApiType)(nil)).Elem()
}

func (i TagByApiTypeArgs) ToTagByApiTypeOutput() TagByApiTypeOutput {
	return i.ToTagByApiTypeOutputWithContext(context.Background())
}

func (i TagByApiTypeArgs) ToTagByApiTypeOutputWithContext(ctx context.Context) TagByApiTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagByApiTypeOutput)
}

// Tag Contract details.
type TagByApiTypeOutput struct{ *pulumi.OutputState }

func (TagByApiTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagByApiType)(nil)).Elem()
}

func (o TagByApiTypeOutput) ToTagByApiTypeOutput() TagByApiTypeOutput {
	return o
}

func (o TagByApiTypeOutput) ToTagByApiTypeOutputWithContext(ctx context.Context) TagByApiTypeOutput {
	return o
}

// Resource name.
func (o TagByApiTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TagByApiType) string { return v.Name }).(pulumi.StringOutput)
}

// Tag entity contract properties.
func (o TagByApiTypeOutput) Properties() TagContractPropertiesResponseOutput {
	return o.ApplyT(func(v TagByApiType) TagContractPropertiesResponse { return v.Properties }).(TagContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o TagByApiTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TagByApiType) string { return v.Type }).(pulumi.StringOutput)
}

// Tag Contract details.
type TagByOperationType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Tag entity contract properties.
	Properties TagContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// TagByOperationTypeInput is an input type that accepts TagByOperationTypeArgs and TagByOperationTypeOutput values.
// You can construct a concrete instance of `TagByOperationTypeInput` via:
//
//          TagByOperationTypeArgs{...}
type TagByOperationTypeInput interface {
	pulumi.Input

	ToTagByOperationTypeOutput() TagByOperationTypeOutput
	ToTagByOperationTypeOutputWithContext(context.Context) TagByOperationTypeOutput
}

// Tag Contract details.
type TagByOperationTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Tag entity contract properties.
	Properties TagContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TagByOperationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagByOperationType)(nil)).Elem()
}

func (i TagByOperationTypeArgs) ToTagByOperationTypeOutput() TagByOperationTypeOutput {
	return i.ToTagByOperationTypeOutputWithContext(context.Background())
}

func (i TagByOperationTypeArgs) ToTagByOperationTypeOutputWithContext(ctx context.Context) TagByOperationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagByOperationTypeOutput)
}

// Tag Contract details.
type TagByOperationTypeOutput struct{ *pulumi.OutputState }

func (TagByOperationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagByOperationType)(nil)).Elem()
}

func (o TagByOperationTypeOutput) ToTagByOperationTypeOutput() TagByOperationTypeOutput {
	return o
}

func (o TagByOperationTypeOutput) ToTagByOperationTypeOutputWithContext(ctx context.Context) TagByOperationTypeOutput {
	return o
}

// Resource name.
func (o TagByOperationTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TagByOperationType) string { return v.Name }).(pulumi.StringOutput)
}

// Tag entity contract properties.
func (o TagByOperationTypeOutput) Properties() TagContractPropertiesResponseOutput {
	return o.ApplyT(func(v TagByOperationType) TagContractPropertiesResponse { return v.Properties }).(TagContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o TagByOperationTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TagByOperationType) string { return v.Type }).(pulumi.StringOutput)
}

// Tag Contract details.
type TagByProductType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Tag entity contract properties.
	Properties TagContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// TagByProductTypeInput is an input type that accepts TagByProductTypeArgs and TagByProductTypeOutput values.
// You can construct a concrete instance of `TagByProductTypeInput` via:
//
//          TagByProductTypeArgs{...}
type TagByProductTypeInput interface {
	pulumi.Input

	ToTagByProductTypeOutput() TagByProductTypeOutput
	ToTagByProductTypeOutputWithContext(context.Context) TagByProductTypeOutput
}

// Tag Contract details.
type TagByProductTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Tag entity contract properties.
	Properties TagContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TagByProductTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagByProductType)(nil)).Elem()
}

func (i TagByProductTypeArgs) ToTagByProductTypeOutput() TagByProductTypeOutput {
	return i.ToTagByProductTypeOutputWithContext(context.Background())
}

func (i TagByProductTypeArgs) ToTagByProductTypeOutputWithContext(ctx context.Context) TagByProductTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagByProductTypeOutput)
}

// Tag Contract details.
type TagByProductTypeOutput struct{ *pulumi.OutputState }

func (TagByProductTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagByProductType)(nil)).Elem()
}

func (o TagByProductTypeOutput) ToTagByProductTypeOutput() TagByProductTypeOutput {
	return o
}

func (o TagByProductTypeOutput) ToTagByProductTypeOutputWithContext(ctx context.Context) TagByProductTypeOutput {
	return o
}

// Resource name.
func (o TagByProductTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TagByProductType) string { return v.Name }).(pulumi.StringOutput)
}

// Tag entity contract properties.
func (o TagByProductTypeOutput) Properties() TagContractPropertiesResponseOutput {
	return o.ApplyT(func(v TagByProductType) TagContractPropertiesResponse { return v.Properties }).(TagContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o TagByProductTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TagByProductType) string { return v.Type }).(pulumi.StringOutput)
}

// Tag contract Properties.
type TagContractPropertiesResponse struct {
	// Tag name.
	DisplayName string `pulumi:"displayName"`
}

// TagContractPropertiesResponseInput is an input type that accepts TagContractPropertiesResponseArgs and TagContractPropertiesResponseOutput values.
// You can construct a concrete instance of `TagContractPropertiesResponseInput` via:
//
//          TagContractPropertiesResponseArgs{...}
type TagContractPropertiesResponseInput interface {
	pulumi.Input

	ToTagContractPropertiesResponseOutput() TagContractPropertiesResponseOutput
	ToTagContractPropertiesResponseOutputWithContext(context.Context) TagContractPropertiesResponseOutput
}

// Tag contract Properties.
type TagContractPropertiesResponseArgs struct {
	// Tag name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
}

func (TagContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagContractPropertiesResponse)(nil)).Elem()
}

func (i TagContractPropertiesResponseArgs) ToTagContractPropertiesResponseOutput() TagContractPropertiesResponseOutput {
	return i.ToTagContractPropertiesResponseOutputWithContext(context.Background())
}

func (i TagContractPropertiesResponseArgs) ToTagContractPropertiesResponseOutputWithContext(ctx context.Context) TagContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagContractPropertiesResponseOutput)
}

func (i TagContractPropertiesResponseArgs) ToTagContractPropertiesResponsePtrOutput() TagContractPropertiesResponsePtrOutput {
	return i.ToTagContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i TagContractPropertiesResponseArgs) ToTagContractPropertiesResponsePtrOutputWithContext(ctx context.Context) TagContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagContractPropertiesResponseOutput).ToTagContractPropertiesResponsePtrOutputWithContext(ctx)
}

// TagContractPropertiesResponsePtrInput is an input type that accepts TagContractPropertiesResponseArgs, TagContractPropertiesResponsePtr and TagContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `TagContractPropertiesResponsePtrInput` via:
//
//          TagContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type TagContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToTagContractPropertiesResponsePtrOutput() TagContractPropertiesResponsePtrOutput
	ToTagContractPropertiesResponsePtrOutputWithContext(context.Context) TagContractPropertiesResponsePtrOutput
}

type tagContractPropertiesResponsePtrType TagContractPropertiesResponseArgs

func TagContractPropertiesResponsePtr(v *TagContractPropertiesResponseArgs) TagContractPropertiesResponsePtrInput {
	return (*tagContractPropertiesResponsePtrType)(v)
}

func (*tagContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TagContractPropertiesResponse)(nil)).Elem()
}

func (i *tagContractPropertiesResponsePtrType) ToTagContractPropertiesResponsePtrOutput() TagContractPropertiesResponsePtrOutput {
	return i.ToTagContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *tagContractPropertiesResponsePtrType) ToTagContractPropertiesResponsePtrOutputWithContext(ctx context.Context) TagContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagContractPropertiesResponsePtrOutput)
}

// Tag contract Properties.
type TagContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TagContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagContractPropertiesResponse)(nil)).Elem()
}

func (o TagContractPropertiesResponseOutput) ToTagContractPropertiesResponseOutput() TagContractPropertiesResponseOutput {
	return o
}

func (o TagContractPropertiesResponseOutput) ToTagContractPropertiesResponseOutputWithContext(ctx context.Context) TagContractPropertiesResponseOutput {
	return o
}

func (o TagContractPropertiesResponseOutput) ToTagContractPropertiesResponsePtrOutput() TagContractPropertiesResponsePtrOutput {
	return o.ToTagContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o TagContractPropertiesResponseOutput) ToTagContractPropertiesResponsePtrOutputWithContext(ctx context.Context) TagContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TagContractPropertiesResponse) *TagContractPropertiesResponse {
		return &v
	}).(TagContractPropertiesResponsePtrOutput)
}

// Tag name.
func (o TagContractPropertiesResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v TagContractPropertiesResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

type TagContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TagContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagContractPropertiesResponse)(nil)).Elem()
}

func (o TagContractPropertiesResponsePtrOutput) ToTagContractPropertiesResponsePtrOutput() TagContractPropertiesResponsePtrOutput {
	return o
}

func (o TagContractPropertiesResponsePtrOutput) ToTagContractPropertiesResponsePtrOutputWithContext(ctx context.Context) TagContractPropertiesResponsePtrOutput {
	return o
}

func (o TagContractPropertiesResponsePtrOutput) Elem() TagContractPropertiesResponseOutput {
	return o.ApplyT(func(v *TagContractPropertiesResponse) TagContractPropertiesResponse { return *v }).(TagContractPropertiesResponseOutput)
}

// Tag name.
func (o TagContractPropertiesResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// TagDescription contract Properties.
type TagDescriptionContractPropertiesResponse struct {
	// Description of the Tag.
	Description *string `pulumi:"description"`
	// Tag name.
	DisplayName *string `pulumi:"displayName"`
	// Description of the external resources describing the tag.
	ExternalDocsDescription *string `pulumi:"externalDocsDescription"`
	// Absolute URL of external resources describing the tag.
	ExternalDocsUrl *string `pulumi:"externalDocsUrl"`
}

// TagDescriptionContractPropertiesResponseInput is an input type that accepts TagDescriptionContractPropertiesResponseArgs and TagDescriptionContractPropertiesResponseOutput values.
// You can construct a concrete instance of `TagDescriptionContractPropertiesResponseInput` via:
//
//          TagDescriptionContractPropertiesResponseArgs{...}
type TagDescriptionContractPropertiesResponseInput interface {
	pulumi.Input

	ToTagDescriptionContractPropertiesResponseOutput() TagDescriptionContractPropertiesResponseOutput
	ToTagDescriptionContractPropertiesResponseOutputWithContext(context.Context) TagDescriptionContractPropertiesResponseOutput
}

// TagDescription contract Properties.
type TagDescriptionContractPropertiesResponseArgs struct {
	// Description of the Tag.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Tag name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Description of the external resources describing the tag.
	ExternalDocsDescription pulumi.StringPtrInput `pulumi:"externalDocsDescription"`
	// Absolute URL of external resources describing the tag.
	ExternalDocsUrl pulumi.StringPtrInput `pulumi:"externalDocsUrl"`
}

func (TagDescriptionContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagDescriptionContractPropertiesResponse)(nil)).Elem()
}

func (i TagDescriptionContractPropertiesResponseArgs) ToTagDescriptionContractPropertiesResponseOutput() TagDescriptionContractPropertiesResponseOutput {
	return i.ToTagDescriptionContractPropertiesResponseOutputWithContext(context.Background())
}

func (i TagDescriptionContractPropertiesResponseArgs) ToTagDescriptionContractPropertiesResponseOutputWithContext(ctx context.Context) TagDescriptionContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagDescriptionContractPropertiesResponseOutput)
}

func (i TagDescriptionContractPropertiesResponseArgs) ToTagDescriptionContractPropertiesResponsePtrOutput() TagDescriptionContractPropertiesResponsePtrOutput {
	return i.ToTagDescriptionContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i TagDescriptionContractPropertiesResponseArgs) ToTagDescriptionContractPropertiesResponsePtrOutputWithContext(ctx context.Context) TagDescriptionContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagDescriptionContractPropertiesResponseOutput).ToTagDescriptionContractPropertiesResponsePtrOutputWithContext(ctx)
}

// TagDescriptionContractPropertiesResponsePtrInput is an input type that accepts TagDescriptionContractPropertiesResponseArgs, TagDescriptionContractPropertiesResponsePtr and TagDescriptionContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `TagDescriptionContractPropertiesResponsePtrInput` via:
//
//          TagDescriptionContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type TagDescriptionContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToTagDescriptionContractPropertiesResponsePtrOutput() TagDescriptionContractPropertiesResponsePtrOutput
	ToTagDescriptionContractPropertiesResponsePtrOutputWithContext(context.Context) TagDescriptionContractPropertiesResponsePtrOutput
}

type tagDescriptionContractPropertiesResponsePtrType TagDescriptionContractPropertiesResponseArgs

func TagDescriptionContractPropertiesResponsePtr(v *TagDescriptionContractPropertiesResponseArgs) TagDescriptionContractPropertiesResponsePtrInput {
	return (*tagDescriptionContractPropertiesResponsePtrType)(v)
}

func (*tagDescriptionContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TagDescriptionContractPropertiesResponse)(nil)).Elem()
}

func (i *tagDescriptionContractPropertiesResponsePtrType) ToTagDescriptionContractPropertiesResponsePtrOutput() TagDescriptionContractPropertiesResponsePtrOutput {
	return i.ToTagDescriptionContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *tagDescriptionContractPropertiesResponsePtrType) ToTagDescriptionContractPropertiesResponsePtrOutputWithContext(ctx context.Context) TagDescriptionContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagDescriptionContractPropertiesResponsePtrOutput)
}

// TagDescription contract Properties.
type TagDescriptionContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TagDescriptionContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagDescriptionContractPropertiesResponse)(nil)).Elem()
}

func (o TagDescriptionContractPropertiesResponseOutput) ToTagDescriptionContractPropertiesResponseOutput() TagDescriptionContractPropertiesResponseOutput {
	return o
}

func (o TagDescriptionContractPropertiesResponseOutput) ToTagDescriptionContractPropertiesResponseOutputWithContext(ctx context.Context) TagDescriptionContractPropertiesResponseOutput {
	return o
}

func (o TagDescriptionContractPropertiesResponseOutput) ToTagDescriptionContractPropertiesResponsePtrOutput() TagDescriptionContractPropertiesResponsePtrOutput {
	return o.ToTagDescriptionContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o TagDescriptionContractPropertiesResponseOutput) ToTagDescriptionContractPropertiesResponsePtrOutputWithContext(ctx context.Context) TagDescriptionContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TagDescriptionContractPropertiesResponse) *TagDescriptionContractPropertiesResponse {
		return &v
	}).(TagDescriptionContractPropertiesResponsePtrOutput)
}

// Description of the Tag.
func (o TagDescriptionContractPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagDescriptionContractPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Tag name.
func (o TagDescriptionContractPropertiesResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagDescriptionContractPropertiesResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Description of the external resources describing the tag.
func (o TagDescriptionContractPropertiesResponseOutput) ExternalDocsDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagDescriptionContractPropertiesResponse) *string { return v.ExternalDocsDescription }).(pulumi.StringPtrOutput)
}

// Absolute URL of external resources describing the tag.
func (o TagDescriptionContractPropertiesResponseOutput) ExternalDocsUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagDescriptionContractPropertiesResponse) *string { return v.ExternalDocsUrl }).(pulumi.StringPtrOutput)
}

type TagDescriptionContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TagDescriptionContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagDescriptionContractPropertiesResponse)(nil)).Elem()
}

func (o TagDescriptionContractPropertiesResponsePtrOutput) ToTagDescriptionContractPropertiesResponsePtrOutput() TagDescriptionContractPropertiesResponsePtrOutput {
	return o
}

func (o TagDescriptionContractPropertiesResponsePtrOutput) ToTagDescriptionContractPropertiesResponsePtrOutputWithContext(ctx context.Context) TagDescriptionContractPropertiesResponsePtrOutput {
	return o
}

func (o TagDescriptionContractPropertiesResponsePtrOutput) Elem() TagDescriptionContractPropertiesResponseOutput {
	return o.ApplyT(func(v *TagDescriptionContractPropertiesResponse) TagDescriptionContractPropertiesResponse { return *v }).(TagDescriptionContractPropertiesResponseOutput)
}

// Description of the Tag.
func (o TagDescriptionContractPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagDescriptionContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Tag name.
func (o TagDescriptionContractPropertiesResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagDescriptionContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Description of the external resources describing the tag.
func (o TagDescriptionContractPropertiesResponsePtrOutput) ExternalDocsDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagDescriptionContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ExternalDocsDescription
	}).(pulumi.StringPtrOutput)
}

// Absolute URL of external resources describing the tag.
func (o TagDescriptionContractPropertiesResponsePtrOutput) ExternalDocsUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagDescriptionContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ExternalDocsUrl
	}).(pulumi.StringPtrOutput)
}

// OAuth acquire token request body parameter (www-url-form-encoded).
type TokenBodyParameterContract struct {
	// body parameter name.
	Name string `pulumi:"name"`
	// body parameter value.
	Value string `pulumi:"value"`
}

// TokenBodyParameterContractInput is an input type that accepts TokenBodyParameterContractArgs and TokenBodyParameterContractOutput values.
// You can construct a concrete instance of `TokenBodyParameterContractInput` via:
//
//          TokenBodyParameterContractArgs{...}
type TokenBodyParameterContractInput interface {
	pulumi.Input

	ToTokenBodyParameterContractOutput() TokenBodyParameterContractOutput
	ToTokenBodyParameterContractOutputWithContext(context.Context) TokenBodyParameterContractOutput
}

// OAuth acquire token request body parameter (www-url-form-encoded).
type TokenBodyParameterContractArgs struct {
	// body parameter name.
	Name pulumi.StringInput `pulumi:"name"`
	// body parameter value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TokenBodyParameterContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TokenBodyParameterContract)(nil)).Elem()
}

func (i TokenBodyParameterContractArgs) ToTokenBodyParameterContractOutput() TokenBodyParameterContractOutput {
	return i.ToTokenBodyParameterContractOutputWithContext(context.Background())
}

func (i TokenBodyParameterContractArgs) ToTokenBodyParameterContractOutputWithContext(ctx context.Context) TokenBodyParameterContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TokenBodyParameterContractOutput)
}

// TokenBodyParameterContractArrayInput is an input type that accepts TokenBodyParameterContractArray and TokenBodyParameterContractArrayOutput values.
// You can construct a concrete instance of `TokenBodyParameterContractArrayInput` via:
//
//          TokenBodyParameterContractArray{ TokenBodyParameterContractArgs{...} }
type TokenBodyParameterContractArrayInput interface {
	pulumi.Input

	ToTokenBodyParameterContractArrayOutput() TokenBodyParameterContractArrayOutput
	ToTokenBodyParameterContractArrayOutputWithContext(context.Context) TokenBodyParameterContractArrayOutput
}

type TokenBodyParameterContractArray []TokenBodyParameterContractInput

func (TokenBodyParameterContractArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TokenBodyParameterContract)(nil)).Elem()
}

func (i TokenBodyParameterContractArray) ToTokenBodyParameterContractArrayOutput() TokenBodyParameterContractArrayOutput {
	return i.ToTokenBodyParameterContractArrayOutputWithContext(context.Background())
}

func (i TokenBodyParameterContractArray) ToTokenBodyParameterContractArrayOutputWithContext(ctx context.Context) TokenBodyParameterContractArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TokenBodyParameterContractArrayOutput)
}

// OAuth acquire token request body parameter (www-url-form-encoded).
type TokenBodyParameterContractOutput struct{ *pulumi.OutputState }

func (TokenBodyParameterContractOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TokenBodyParameterContract)(nil)).Elem()
}

func (o TokenBodyParameterContractOutput) ToTokenBodyParameterContractOutput() TokenBodyParameterContractOutput {
	return o
}

func (o TokenBodyParameterContractOutput) ToTokenBodyParameterContractOutputWithContext(ctx context.Context) TokenBodyParameterContractOutput {
	return o
}

// body parameter name.
func (o TokenBodyParameterContractOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TokenBodyParameterContract) string { return v.Name }).(pulumi.StringOutput)
}

// body parameter value.
func (o TokenBodyParameterContractOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TokenBodyParameterContract) string { return v.Value }).(pulumi.StringOutput)
}

type TokenBodyParameterContractArrayOutput struct{ *pulumi.OutputState }

func (TokenBodyParameterContractArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TokenBodyParameterContract)(nil)).Elem()
}

func (o TokenBodyParameterContractArrayOutput) ToTokenBodyParameterContractArrayOutput() TokenBodyParameterContractArrayOutput {
	return o
}

func (o TokenBodyParameterContractArrayOutput) ToTokenBodyParameterContractArrayOutputWithContext(ctx context.Context) TokenBodyParameterContractArrayOutput {
	return o
}

func (o TokenBodyParameterContractArrayOutput) Index(i pulumi.IntInput) TokenBodyParameterContractOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TokenBodyParameterContract {
		return vs[0].([]TokenBodyParameterContract)[vs[1].(int)]
	}).(TokenBodyParameterContractOutput)
}

// OAuth acquire token request body parameter (www-url-form-encoded).
type TokenBodyParameterContractResponse struct {
	// body parameter name.
	Name string `pulumi:"name"`
	// body parameter value.
	Value string `pulumi:"value"`
}

// TokenBodyParameterContractResponseInput is an input type that accepts TokenBodyParameterContractResponseArgs and TokenBodyParameterContractResponseOutput values.
// You can construct a concrete instance of `TokenBodyParameterContractResponseInput` via:
//
//          TokenBodyParameterContractResponseArgs{...}
type TokenBodyParameterContractResponseInput interface {
	pulumi.Input

	ToTokenBodyParameterContractResponseOutput() TokenBodyParameterContractResponseOutput
	ToTokenBodyParameterContractResponseOutputWithContext(context.Context) TokenBodyParameterContractResponseOutput
}

// OAuth acquire token request body parameter (www-url-form-encoded).
type TokenBodyParameterContractResponseArgs struct {
	// body parameter name.
	Name pulumi.StringInput `pulumi:"name"`
	// body parameter value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TokenBodyParameterContractResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TokenBodyParameterContractResponse)(nil)).Elem()
}

func (i TokenBodyParameterContractResponseArgs) ToTokenBodyParameterContractResponseOutput() TokenBodyParameterContractResponseOutput {
	return i.ToTokenBodyParameterContractResponseOutputWithContext(context.Background())
}

func (i TokenBodyParameterContractResponseArgs) ToTokenBodyParameterContractResponseOutputWithContext(ctx context.Context) TokenBodyParameterContractResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TokenBodyParameterContractResponseOutput)
}

// TokenBodyParameterContractResponseArrayInput is an input type that accepts TokenBodyParameterContractResponseArray and TokenBodyParameterContractResponseArrayOutput values.
// You can construct a concrete instance of `TokenBodyParameterContractResponseArrayInput` via:
//
//          TokenBodyParameterContractResponseArray{ TokenBodyParameterContractResponseArgs{...} }
type TokenBodyParameterContractResponseArrayInput interface {
	pulumi.Input

	ToTokenBodyParameterContractResponseArrayOutput() TokenBodyParameterContractResponseArrayOutput
	ToTokenBodyParameterContractResponseArrayOutputWithContext(context.Context) TokenBodyParameterContractResponseArrayOutput
}

type TokenBodyParameterContractResponseArray []TokenBodyParameterContractResponseInput

func (TokenBodyParameterContractResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TokenBodyParameterContractResponse)(nil)).Elem()
}

func (i TokenBodyParameterContractResponseArray) ToTokenBodyParameterContractResponseArrayOutput() TokenBodyParameterContractResponseArrayOutput {
	return i.ToTokenBodyParameterContractResponseArrayOutputWithContext(context.Background())
}

func (i TokenBodyParameterContractResponseArray) ToTokenBodyParameterContractResponseArrayOutputWithContext(ctx context.Context) TokenBodyParameterContractResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TokenBodyParameterContractResponseArrayOutput)
}

// OAuth acquire token request body parameter (www-url-form-encoded).
type TokenBodyParameterContractResponseOutput struct{ *pulumi.OutputState }

func (TokenBodyParameterContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TokenBodyParameterContractResponse)(nil)).Elem()
}

func (o TokenBodyParameterContractResponseOutput) ToTokenBodyParameterContractResponseOutput() TokenBodyParameterContractResponseOutput {
	return o
}

func (o TokenBodyParameterContractResponseOutput) ToTokenBodyParameterContractResponseOutputWithContext(ctx context.Context) TokenBodyParameterContractResponseOutput {
	return o
}

// body parameter name.
func (o TokenBodyParameterContractResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TokenBodyParameterContractResponse) string { return v.Name }).(pulumi.StringOutput)
}

// body parameter value.
func (o TokenBodyParameterContractResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TokenBodyParameterContractResponse) string { return v.Value }).(pulumi.StringOutput)
}

type TokenBodyParameterContractResponseArrayOutput struct{ *pulumi.OutputState }

func (TokenBodyParameterContractResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TokenBodyParameterContractResponse)(nil)).Elem()
}

func (o TokenBodyParameterContractResponseArrayOutput) ToTokenBodyParameterContractResponseArrayOutput() TokenBodyParameterContractResponseArrayOutput {
	return o
}

func (o TokenBodyParameterContractResponseArrayOutput) ToTokenBodyParameterContractResponseArrayOutputWithContext(ctx context.Context) TokenBodyParameterContractResponseArrayOutput {
	return o
}

func (o TokenBodyParameterContractResponseArrayOutput) Index(i pulumi.IntInput) TokenBodyParameterContractResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TokenBodyParameterContractResponse {
		return vs[0].([]TokenBodyParameterContractResponse)[vs[1].(int)]
	}).(TokenBodyParameterContractResponseOutput)
}

// User details.
type UserType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// User entity contract properties.
	Properties UserContractPropertiesResponse `pulumi:"properties"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// UserTypeInput is an input type that accepts UserTypeArgs and UserTypeOutput values.
// You can construct a concrete instance of `UserTypeInput` via:
//
//          UserTypeArgs{...}
type UserTypeInput interface {
	pulumi.Input

	ToUserTypeOutput() UserTypeOutput
	ToUserTypeOutputWithContext(context.Context) UserTypeOutput
}

// User details.
type UserTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// User entity contract properties.
	Properties UserContractPropertiesResponseInput `pulumi:"properties"`
	// Resource type for API Management resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (UserTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserType)(nil)).Elem()
}

func (i UserTypeArgs) ToUserTypeOutput() UserTypeOutput {
	return i.ToUserTypeOutputWithContext(context.Background())
}

func (i UserTypeArgs) ToUserTypeOutputWithContext(ctx context.Context) UserTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserTypeOutput)
}

// User details.
type UserTypeOutput struct{ *pulumi.OutputState }

func (UserTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserType)(nil)).Elem()
}

func (o UserTypeOutput) ToUserTypeOutput() UserTypeOutput {
	return o
}

func (o UserTypeOutput) ToUserTypeOutputWithContext(ctx context.Context) UserTypeOutput {
	return o
}

// Resource name.
func (o UserTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserType) string { return v.Name }).(pulumi.StringOutput)
}

// User entity contract properties.
func (o UserTypeOutput) Properties() UserContractPropertiesResponseOutput {
	return o.ApplyT(func(v UserType) UserContractPropertiesResponse { return v.Properties }).(UserContractPropertiesResponseOutput)
}

// Resource type for API Management resource.
func (o UserTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v UserType) string { return v.Type }).(pulumi.StringOutput)
}

// User profile.
type UserContractPropertiesResponse struct {
	// Email address.
	Email *string `pulumi:"email"`
	// First name.
	FirstName *string `pulumi:"firstName"`
	// Collection of groups user is part of.
	Groups []GroupContractPropertiesResponse `pulumi:"groups"`
	// Collection of user identities.
	Identities []UserIdentityContractResponse `pulumi:"identities"`
	// Last name.
	LastName *string `pulumi:"lastName"`
	// Optional note about a user set by the administrator.
	Note *string `pulumi:"note"`
	// Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	RegistrationDate *string `pulumi:"registrationDate"`
	// Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active.
	State *string `pulumi:"state"`
}

// UserContractPropertiesResponseInput is an input type that accepts UserContractPropertiesResponseArgs and UserContractPropertiesResponseOutput values.
// You can construct a concrete instance of `UserContractPropertiesResponseInput` via:
//
//          UserContractPropertiesResponseArgs{...}
type UserContractPropertiesResponseInput interface {
	pulumi.Input

	ToUserContractPropertiesResponseOutput() UserContractPropertiesResponseOutput
	ToUserContractPropertiesResponseOutputWithContext(context.Context) UserContractPropertiesResponseOutput
}

// User profile.
type UserContractPropertiesResponseArgs struct {
	// Email address.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// First name.
	FirstName pulumi.StringPtrInput `pulumi:"firstName"`
	// Collection of groups user is part of.
	Groups GroupContractPropertiesResponseArrayInput `pulumi:"groups"`
	// Collection of user identities.
	Identities UserIdentityContractResponseArrayInput `pulumi:"identities"`
	// Last name.
	LastName pulumi.StringPtrInput `pulumi:"lastName"`
	// Optional note about a user set by the administrator.
	Note pulumi.StringPtrInput `pulumi:"note"`
	// Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	RegistrationDate pulumi.StringPtrInput `pulumi:"registrationDate"`
	// Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (UserContractPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserContractPropertiesResponse)(nil)).Elem()
}

func (i UserContractPropertiesResponseArgs) ToUserContractPropertiesResponseOutput() UserContractPropertiesResponseOutput {
	return i.ToUserContractPropertiesResponseOutputWithContext(context.Background())
}

func (i UserContractPropertiesResponseArgs) ToUserContractPropertiesResponseOutputWithContext(ctx context.Context) UserContractPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserContractPropertiesResponseOutput)
}

func (i UserContractPropertiesResponseArgs) ToUserContractPropertiesResponsePtrOutput() UserContractPropertiesResponsePtrOutput {
	return i.ToUserContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i UserContractPropertiesResponseArgs) ToUserContractPropertiesResponsePtrOutputWithContext(ctx context.Context) UserContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserContractPropertiesResponseOutput).ToUserContractPropertiesResponsePtrOutputWithContext(ctx)
}

// UserContractPropertiesResponsePtrInput is an input type that accepts UserContractPropertiesResponseArgs, UserContractPropertiesResponsePtr and UserContractPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `UserContractPropertiesResponsePtrInput` via:
//
//          UserContractPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type UserContractPropertiesResponsePtrInput interface {
	pulumi.Input

	ToUserContractPropertiesResponsePtrOutput() UserContractPropertiesResponsePtrOutput
	ToUserContractPropertiesResponsePtrOutputWithContext(context.Context) UserContractPropertiesResponsePtrOutput
}

type userContractPropertiesResponsePtrType UserContractPropertiesResponseArgs

func UserContractPropertiesResponsePtr(v *UserContractPropertiesResponseArgs) UserContractPropertiesResponsePtrInput {
	return (*userContractPropertiesResponsePtrType)(v)
}

func (*userContractPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserContractPropertiesResponse)(nil)).Elem()
}

func (i *userContractPropertiesResponsePtrType) ToUserContractPropertiesResponsePtrOutput() UserContractPropertiesResponsePtrOutput {
	return i.ToUserContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *userContractPropertiesResponsePtrType) ToUserContractPropertiesResponsePtrOutputWithContext(ctx context.Context) UserContractPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserContractPropertiesResponsePtrOutput)
}

// User profile.
type UserContractPropertiesResponseOutput struct{ *pulumi.OutputState }

func (UserContractPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserContractPropertiesResponse)(nil)).Elem()
}

func (o UserContractPropertiesResponseOutput) ToUserContractPropertiesResponseOutput() UserContractPropertiesResponseOutput {
	return o
}

func (o UserContractPropertiesResponseOutput) ToUserContractPropertiesResponseOutputWithContext(ctx context.Context) UserContractPropertiesResponseOutput {
	return o
}

func (o UserContractPropertiesResponseOutput) ToUserContractPropertiesResponsePtrOutput() UserContractPropertiesResponsePtrOutput {
	return o.ToUserContractPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o UserContractPropertiesResponseOutput) ToUserContractPropertiesResponsePtrOutputWithContext(ctx context.Context) UserContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v UserContractPropertiesResponse) *UserContractPropertiesResponse {
		return &v
	}).(UserContractPropertiesResponsePtrOutput)
}

// Email address.
func (o UserContractPropertiesResponseOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserContractPropertiesResponse) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// First name.
func (o UserContractPropertiesResponseOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserContractPropertiesResponse) *string { return v.FirstName }).(pulumi.StringPtrOutput)
}

// Collection of groups user is part of.
func (o UserContractPropertiesResponseOutput) Groups() GroupContractPropertiesResponseArrayOutput {
	return o.ApplyT(func(v UserContractPropertiesResponse) []GroupContractPropertiesResponse { return v.Groups }).(GroupContractPropertiesResponseArrayOutput)
}

// Collection of user identities.
func (o UserContractPropertiesResponseOutput) Identities() UserIdentityContractResponseArrayOutput {
	return o.ApplyT(func(v UserContractPropertiesResponse) []UserIdentityContractResponse { return v.Identities }).(UserIdentityContractResponseArrayOutput)
}

// Last name.
func (o UserContractPropertiesResponseOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserContractPropertiesResponse) *string { return v.LastName }).(pulumi.StringPtrOutput)
}

// Optional note about a user set by the administrator.
func (o UserContractPropertiesResponseOutput) Note() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserContractPropertiesResponse) *string { return v.Note }).(pulumi.StringPtrOutput)
}

// Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o UserContractPropertiesResponseOutput) RegistrationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserContractPropertiesResponse) *string { return v.RegistrationDate }).(pulumi.StringPtrOutput)
}

// Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active.
func (o UserContractPropertiesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserContractPropertiesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type UserContractPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (UserContractPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserContractPropertiesResponse)(nil)).Elem()
}

func (o UserContractPropertiesResponsePtrOutput) ToUserContractPropertiesResponsePtrOutput() UserContractPropertiesResponsePtrOutput {
	return o
}

func (o UserContractPropertiesResponsePtrOutput) ToUserContractPropertiesResponsePtrOutputWithContext(ctx context.Context) UserContractPropertiesResponsePtrOutput {
	return o
}

func (o UserContractPropertiesResponsePtrOutput) Elem() UserContractPropertiesResponseOutput {
	return o.ApplyT(func(v *UserContractPropertiesResponse) UserContractPropertiesResponse { return *v }).(UserContractPropertiesResponseOutput)
}

// Email address.
func (o UserContractPropertiesResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// First name.
func (o UserContractPropertiesResponsePtrOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FirstName
	}).(pulumi.StringPtrOutput)
}

// Collection of groups user is part of.
func (o UserContractPropertiesResponsePtrOutput) Groups() GroupContractPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *UserContractPropertiesResponse) []GroupContractPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(GroupContractPropertiesResponseArrayOutput)
}

// Collection of user identities.
func (o UserContractPropertiesResponsePtrOutput) Identities() UserIdentityContractResponseArrayOutput {
	return o.ApplyT(func(v *UserContractPropertiesResponse) []UserIdentityContractResponse {
		if v == nil {
			return nil
		}
		return v.Identities
	}).(UserIdentityContractResponseArrayOutput)
}

// Last name.
func (o UserContractPropertiesResponsePtrOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastName
	}).(pulumi.StringPtrOutput)
}

// Optional note about a user set by the administrator.
func (o UserContractPropertiesResponsePtrOutput) Note() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Note
	}).(pulumi.StringPtrOutput)
}

// Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o UserContractPropertiesResponsePtrOutput) RegistrationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationDate
	}).(pulumi.StringPtrOutput)
}

// Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active.
func (o UserContractPropertiesResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserContractPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// User identity details.
type UserIdentityContract struct {
	// Identifier value within provider.
	Id *string `pulumi:"id"`
	// Identity provider name.
	Provider *string `pulumi:"provider"`
}

// UserIdentityContractInput is an input type that accepts UserIdentityContractArgs and UserIdentityContractOutput values.
// You can construct a concrete instance of `UserIdentityContractInput` via:
//
//          UserIdentityContractArgs{...}
type UserIdentityContractInput interface {
	pulumi.Input

	ToUserIdentityContractOutput() UserIdentityContractOutput
	ToUserIdentityContractOutputWithContext(context.Context) UserIdentityContractOutput
}

// User identity details.
type UserIdentityContractArgs struct {
	// Identifier value within provider.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Identity provider name.
	Provider pulumi.StringPtrInput `pulumi:"provider"`
}

func (UserIdentityContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityContract)(nil)).Elem()
}

func (i UserIdentityContractArgs) ToUserIdentityContractOutput() UserIdentityContractOutput {
	return i.ToUserIdentityContractOutputWithContext(context.Background())
}

func (i UserIdentityContractArgs) ToUserIdentityContractOutputWithContext(ctx context.Context) UserIdentityContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityContractOutput)
}

// UserIdentityContractArrayInput is an input type that accepts UserIdentityContractArray and UserIdentityContractArrayOutput values.
// You can construct a concrete instance of `UserIdentityContractArrayInput` via:
//
//          UserIdentityContractArray{ UserIdentityContractArgs{...} }
type UserIdentityContractArrayInput interface {
	pulumi.Input

	ToUserIdentityContractArrayOutput() UserIdentityContractArrayOutput
	ToUserIdentityContractArrayOutputWithContext(context.Context) UserIdentityContractArrayOutput
}

type UserIdentityContractArray []UserIdentityContractInput

func (UserIdentityContractArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserIdentityContract)(nil)).Elem()
}

func (i UserIdentityContractArray) ToUserIdentityContractArrayOutput() UserIdentityContractArrayOutput {
	return i.ToUserIdentityContractArrayOutputWithContext(context.Background())
}

func (i UserIdentityContractArray) ToUserIdentityContractArrayOutputWithContext(ctx context.Context) UserIdentityContractArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityContractArrayOutput)
}

// User identity details.
type UserIdentityContractOutput struct{ *pulumi.OutputState }

func (UserIdentityContractOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityContract)(nil)).Elem()
}

func (o UserIdentityContractOutput) ToUserIdentityContractOutput() UserIdentityContractOutput {
	return o
}

func (o UserIdentityContractOutput) ToUserIdentityContractOutputWithContext(ctx context.Context) UserIdentityContractOutput {
	return o
}

// Identifier value within provider.
func (o UserIdentityContractOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityContract) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Identity provider name.
func (o UserIdentityContractOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityContract) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

type UserIdentityContractArrayOutput struct{ *pulumi.OutputState }

func (UserIdentityContractArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserIdentityContract)(nil)).Elem()
}

func (o UserIdentityContractArrayOutput) ToUserIdentityContractArrayOutput() UserIdentityContractArrayOutput {
	return o
}

func (o UserIdentityContractArrayOutput) ToUserIdentityContractArrayOutputWithContext(ctx context.Context) UserIdentityContractArrayOutput {
	return o
}

func (o UserIdentityContractArrayOutput) Index(i pulumi.IntInput) UserIdentityContractOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserIdentityContract {
		return vs[0].([]UserIdentityContract)[vs[1].(int)]
	}).(UserIdentityContractOutput)
}

// User identity details.
type UserIdentityContractResponse struct {
	// Identifier value within provider.
	Id *string `pulumi:"id"`
	// Identity provider name.
	Provider *string `pulumi:"provider"`
}

// UserIdentityContractResponseInput is an input type that accepts UserIdentityContractResponseArgs and UserIdentityContractResponseOutput values.
// You can construct a concrete instance of `UserIdentityContractResponseInput` via:
//
//          UserIdentityContractResponseArgs{...}
type UserIdentityContractResponseInput interface {
	pulumi.Input

	ToUserIdentityContractResponseOutput() UserIdentityContractResponseOutput
	ToUserIdentityContractResponseOutputWithContext(context.Context) UserIdentityContractResponseOutput
}

// User identity details.
type UserIdentityContractResponseArgs struct {
	// Identifier value within provider.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Identity provider name.
	Provider pulumi.StringPtrInput `pulumi:"provider"`
}

func (UserIdentityContractResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityContractResponse)(nil)).Elem()
}

func (i UserIdentityContractResponseArgs) ToUserIdentityContractResponseOutput() UserIdentityContractResponseOutput {
	return i.ToUserIdentityContractResponseOutputWithContext(context.Background())
}

func (i UserIdentityContractResponseArgs) ToUserIdentityContractResponseOutputWithContext(ctx context.Context) UserIdentityContractResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityContractResponseOutput)
}

// UserIdentityContractResponseArrayInput is an input type that accepts UserIdentityContractResponseArray and UserIdentityContractResponseArrayOutput values.
// You can construct a concrete instance of `UserIdentityContractResponseArrayInput` via:
//
//          UserIdentityContractResponseArray{ UserIdentityContractResponseArgs{...} }
type UserIdentityContractResponseArrayInput interface {
	pulumi.Input

	ToUserIdentityContractResponseArrayOutput() UserIdentityContractResponseArrayOutput
	ToUserIdentityContractResponseArrayOutputWithContext(context.Context) UserIdentityContractResponseArrayOutput
}

type UserIdentityContractResponseArray []UserIdentityContractResponseInput

func (UserIdentityContractResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserIdentityContractResponse)(nil)).Elem()
}

func (i UserIdentityContractResponseArray) ToUserIdentityContractResponseArrayOutput() UserIdentityContractResponseArrayOutput {
	return i.ToUserIdentityContractResponseArrayOutputWithContext(context.Background())
}

func (i UserIdentityContractResponseArray) ToUserIdentityContractResponseArrayOutputWithContext(ctx context.Context) UserIdentityContractResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityContractResponseArrayOutput)
}

// User identity details.
type UserIdentityContractResponseOutput struct{ *pulumi.OutputState }

func (UserIdentityContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityContractResponse)(nil)).Elem()
}

func (o UserIdentityContractResponseOutput) ToUserIdentityContractResponseOutput() UserIdentityContractResponseOutput {
	return o
}

func (o UserIdentityContractResponseOutput) ToUserIdentityContractResponseOutputWithContext(ctx context.Context) UserIdentityContractResponseOutput {
	return o
}

// Identifier value within provider.
func (o UserIdentityContractResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityContractResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Identity provider name.
func (o UserIdentityContractResponseOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityContractResponse) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

type UserIdentityContractResponseArrayOutput struct{ *pulumi.OutputState }

func (UserIdentityContractResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserIdentityContractResponse)(nil)).Elem()
}

func (o UserIdentityContractResponseArrayOutput) ToUserIdentityContractResponseArrayOutput() UserIdentityContractResponseArrayOutput {
	return o
}

func (o UserIdentityContractResponseArrayOutput) ToUserIdentityContractResponseArrayOutputWithContext(ctx context.Context) UserIdentityContractResponseArrayOutput {
	return o
}

func (o UserIdentityContractResponseArrayOutput) Index(i pulumi.IntInput) UserIdentityContractResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserIdentityContractResponse {
		return vs[0].([]UserIdentityContractResponse)[vs[1].(int)]
	}).(UserIdentityContractResponseOutput)
}

// Configuration of a virtual network to which API Management service is deployed.
type VirtualNetworkConfiguration struct {
	// The full resource ID of a subnet in a virtual network to deploy the API Management service in.
	SubnetResourceId *string `pulumi:"subnetResourceId"`
}

// VirtualNetworkConfigurationInput is an input type that accepts VirtualNetworkConfigurationArgs and VirtualNetworkConfigurationOutput values.
// You can construct a concrete instance of `VirtualNetworkConfigurationInput` via:
//
//          VirtualNetworkConfigurationArgs{...}
type VirtualNetworkConfigurationInput interface {
	pulumi.Input

	ToVirtualNetworkConfigurationOutput() VirtualNetworkConfigurationOutput
	ToVirtualNetworkConfigurationOutputWithContext(context.Context) VirtualNetworkConfigurationOutput
}

// Configuration of a virtual network to which API Management service is deployed.
type VirtualNetworkConfigurationArgs struct {
	// The full resource ID of a subnet in a virtual network to deploy the API Management service in.
	SubnetResourceId pulumi.StringPtrInput `pulumi:"subnetResourceId"`
}

func (VirtualNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkConfiguration)(nil)).Elem()
}

func (i VirtualNetworkConfigurationArgs) ToVirtualNetworkConfigurationOutput() VirtualNetworkConfigurationOutput {
	return i.ToVirtualNetworkConfigurationOutputWithContext(context.Background())
}

func (i VirtualNetworkConfigurationArgs) ToVirtualNetworkConfigurationOutputWithContext(ctx context.Context) VirtualNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkConfigurationOutput)
}

func (i VirtualNetworkConfigurationArgs) ToVirtualNetworkConfigurationPtrOutput() VirtualNetworkConfigurationPtrOutput {
	return i.ToVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkConfigurationArgs) ToVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkConfigurationOutput).ToVirtualNetworkConfigurationPtrOutputWithContext(ctx)
}

// VirtualNetworkConfigurationPtrInput is an input type that accepts VirtualNetworkConfigurationArgs, VirtualNetworkConfigurationPtr and VirtualNetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkConfigurationPtrInput` via:
//
//          VirtualNetworkConfigurationArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkConfigurationPtrInput interface {
	pulumi.Input

	ToVirtualNetworkConfigurationPtrOutput() VirtualNetworkConfigurationPtrOutput
	ToVirtualNetworkConfigurationPtrOutputWithContext(context.Context) VirtualNetworkConfigurationPtrOutput
}

type virtualNetworkConfigurationPtrType VirtualNetworkConfigurationArgs

func VirtualNetworkConfigurationPtr(v *VirtualNetworkConfigurationArgs) VirtualNetworkConfigurationPtrInput {
	return (*virtualNetworkConfigurationPtrType)(v)
}

func (*virtualNetworkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkConfiguration)(nil)).Elem()
}

func (i *virtualNetworkConfigurationPtrType) ToVirtualNetworkConfigurationPtrOutput() VirtualNetworkConfigurationPtrOutput {
	return i.ToVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkConfigurationPtrType) ToVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkConfigurationPtrOutput)
}

// Configuration of a virtual network to which API Management service is deployed.
type VirtualNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkConfiguration)(nil)).Elem()
}

func (o VirtualNetworkConfigurationOutput) ToVirtualNetworkConfigurationOutput() VirtualNetworkConfigurationOutput {
	return o
}

func (o VirtualNetworkConfigurationOutput) ToVirtualNetworkConfigurationOutputWithContext(ctx context.Context) VirtualNetworkConfigurationOutput {
	return o
}

func (o VirtualNetworkConfigurationOutput) ToVirtualNetworkConfigurationPtrOutput() VirtualNetworkConfigurationPtrOutput {
	return o.ToVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkConfigurationOutput) ToVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualNetworkConfiguration) *VirtualNetworkConfiguration {
		return &v
	}).(VirtualNetworkConfigurationPtrOutput)
}

// The full resource ID of a subnet in a virtual network to deploy the API Management service in.
func (o VirtualNetworkConfigurationOutput) SubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkConfiguration) *string { return v.SubnetResourceId }).(pulumi.StringPtrOutput)
}

type VirtualNetworkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkConfiguration)(nil)).Elem()
}

func (o VirtualNetworkConfigurationPtrOutput) ToVirtualNetworkConfigurationPtrOutput() VirtualNetworkConfigurationPtrOutput {
	return o
}

func (o VirtualNetworkConfigurationPtrOutput) ToVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationPtrOutput {
	return o
}

func (o VirtualNetworkConfigurationPtrOutput) Elem() VirtualNetworkConfigurationOutput {
	return o.ApplyT(func(v *VirtualNetworkConfiguration) VirtualNetworkConfiguration { return *v }).(VirtualNetworkConfigurationOutput)
}

// The full resource ID of a subnet in a virtual network to deploy the API Management service in.
func (o VirtualNetworkConfigurationPtrOutput) SubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SubnetResourceId
	}).(pulumi.StringPtrOutput)
}

// Configuration of a virtual network to which API Management service is deployed.
type VirtualNetworkConfigurationResponse struct {
	// The full resource ID of a subnet in a virtual network to deploy the API Management service in.
	SubnetResourceId *string `pulumi:"subnetResourceId"`
	// The name of the subnet.
	Subnetname string `pulumi:"subnetname"`
	// The virtual network ID. This is typically a GUID. Expect a null GUID by default.
	Vnetid string `pulumi:"vnetid"`
}

// VirtualNetworkConfigurationResponseInput is an input type that accepts VirtualNetworkConfigurationResponseArgs and VirtualNetworkConfigurationResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkConfigurationResponseInput` via:
//
//          VirtualNetworkConfigurationResponseArgs{...}
type VirtualNetworkConfigurationResponseInput interface {
	pulumi.Input

	ToVirtualNetworkConfigurationResponseOutput() VirtualNetworkConfigurationResponseOutput
	ToVirtualNetworkConfigurationResponseOutputWithContext(context.Context) VirtualNetworkConfigurationResponseOutput
}

// Configuration of a virtual network to which API Management service is deployed.
type VirtualNetworkConfigurationResponseArgs struct {
	// The full resource ID of a subnet in a virtual network to deploy the API Management service in.
	SubnetResourceId pulumi.StringPtrInput `pulumi:"subnetResourceId"`
	// The name of the subnet.
	Subnetname pulumi.StringInput `pulumi:"subnetname"`
	// The virtual network ID. This is typically a GUID. Expect a null GUID by default.
	Vnetid pulumi.StringInput `pulumi:"vnetid"`
}

func (VirtualNetworkConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkConfigurationResponse)(nil)).Elem()
}

func (i VirtualNetworkConfigurationResponseArgs) ToVirtualNetworkConfigurationResponseOutput() VirtualNetworkConfigurationResponseOutput {
	return i.ToVirtualNetworkConfigurationResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkConfigurationResponseArgs) ToVirtualNetworkConfigurationResponseOutputWithContext(ctx context.Context) VirtualNetworkConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkConfigurationResponseOutput)
}

func (i VirtualNetworkConfigurationResponseArgs) ToVirtualNetworkConfigurationResponsePtrOutput() VirtualNetworkConfigurationResponsePtrOutput {
	return i.ToVirtualNetworkConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkConfigurationResponseArgs) ToVirtualNetworkConfigurationResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkConfigurationResponseOutput).ToVirtualNetworkConfigurationResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkConfigurationResponsePtrInput is an input type that accepts VirtualNetworkConfigurationResponseArgs, VirtualNetworkConfigurationResponsePtr and VirtualNetworkConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkConfigurationResponsePtrInput` via:
//
//          VirtualNetworkConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkConfigurationResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkConfigurationResponsePtrOutput() VirtualNetworkConfigurationResponsePtrOutput
	ToVirtualNetworkConfigurationResponsePtrOutputWithContext(context.Context) VirtualNetworkConfigurationResponsePtrOutput
}

type virtualNetworkConfigurationResponsePtrType VirtualNetworkConfigurationResponseArgs

func VirtualNetworkConfigurationResponsePtr(v *VirtualNetworkConfigurationResponseArgs) VirtualNetworkConfigurationResponsePtrInput {
	return (*virtualNetworkConfigurationResponsePtrType)(v)
}

func (*virtualNetworkConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkConfigurationResponse)(nil)).Elem()
}

func (i *virtualNetworkConfigurationResponsePtrType) ToVirtualNetworkConfigurationResponsePtrOutput() VirtualNetworkConfigurationResponsePtrOutput {
	return i.ToVirtualNetworkConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkConfigurationResponsePtrType) ToVirtualNetworkConfigurationResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkConfigurationResponsePtrOutput)
}

// Configuration of a virtual network to which API Management service is deployed.
type VirtualNetworkConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkConfigurationResponse)(nil)).Elem()
}

func (o VirtualNetworkConfigurationResponseOutput) ToVirtualNetworkConfigurationResponseOutput() VirtualNetworkConfigurationResponseOutput {
	return o
}

func (o VirtualNetworkConfigurationResponseOutput) ToVirtualNetworkConfigurationResponseOutputWithContext(ctx context.Context) VirtualNetworkConfigurationResponseOutput {
	return o
}

func (o VirtualNetworkConfigurationResponseOutput) ToVirtualNetworkConfigurationResponsePtrOutput() VirtualNetworkConfigurationResponsePtrOutput {
	return o.ToVirtualNetworkConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkConfigurationResponseOutput) ToVirtualNetworkConfigurationResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkConfigurationResponse) *VirtualNetworkConfigurationResponse {
		return &v
	}).(VirtualNetworkConfigurationResponsePtrOutput)
}

// The full resource ID of a subnet in a virtual network to deploy the API Management service in.
func (o VirtualNetworkConfigurationResponseOutput) SubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkConfigurationResponse) *string { return v.SubnetResourceId }).(pulumi.StringPtrOutput)
}

// The name of the subnet.
func (o VirtualNetworkConfigurationResponseOutput) Subnetname() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkConfigurationResponse) string { return v.Subnetname }).(pulumi.StringOutput)
}

// The virtual network ID. This is typically a GUID. Expect a null GUID by default.
func (o VirtualNetworkConfigurationResponseOutput) Vnetid() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkConfigurationResponse) string { return v.Vnetid }).(pulumi.StringOutput)
}

type VirtualNetworkConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkConfigurationResponse)(nil)).Elem()
}

func (o VirtualNetworkConfigurationResponsePtrOutput) ToVirtualNetworkConfigurationResponsePtrOutput() VirtualNetworkConfigurationResponsePtrOutput {
	return o
}

func (o VirtualNetworkConfigurationResponsePtrOutput) ToVirtualNetworkConfigurationResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationResponsePtrOutput {
	return o
}

func (o VirtualNetworkConfigurationResponsePtrOutput) Elem() VirtualNetworkConfigurationResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkConfigurationResponse) VirtualNetworkConfigurationResponse { return *v }).(VirtualNetworkConfigurationResponseOutput)
}

// The full resource ID of a subnet in a virtual network to deploy the API Management service in.
func (o VirtualNetworkConfigurationResponsePtrOutput) SubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubnetResourceId
	}).(pulumi.StringPtrOutput)
}

// The name of the subnet.
func (o VirtualNetworkConfigurationResponsePtrOutput) Subnetname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Subnetname
	}).(pulumi.StringPtrOutput)
}

// The virtual network ID. This is typically a GUID. Expect a null GUID by default.
func (o VirtualNetworkConfigurationResponsePtrOutput) Vnetid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Vnetid
	}).(pulumi.StringPtrOutput)
}

// Properties of server X509Names.
type X509CertificateName struct {
	// Thumbprint for the Issuer of the Certificate.
	IssuerCertificateThumbprint *string `pulumi:"issuerCertificateThumbprint"`
	// Common Name of the Certificate.
	Name *string `pulumi:"name"`
}

// X509CertificateNameInput is an input type that accepts X509CertificateNameArgs and X509CertificateNameOutput values.
// You can construct a concrete instance of `X509CertificateNameInput` via:
//
//          X509CertificateNameArgs{...}
type X509CertificateNameInput interface {
	pulumi.Input

	ToX509CertificateNameOutput() X509CertificateNameOutput
	ToX509CertificateNameOutputWithContext(context.Context) X509CertificateNameOutput
}

// Properties of server X509Names.
type X509CertificateNameArgs struct {
	// Thumbprint for the Issuer of the Certificate.
	IssuerCertificateThumbprint pulumi.StringPtrInput `pulumi:"issuerCertificateThumbprint"`
	// Common Name of the Certificate.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (X509CertificateNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X509CertificateName)(nil)).Elem()
}

func (i X509CertificateNameArgs) ToX509CertificateNameOutput() X509CertificateNameOutput {
	return i.ToX509CertificateNameOutputWithContext(context.Background())
}

func (i X509CertificateNameArgs) ToX509CertificateNameOutputWithContext(ctx context.Context) X509CertificateNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X509CertificateNameOutput)
}

// X509CertificateNameArrayInput is an input type that accepts X509CertificateNameArray and X509CertificateNameArrayOutput values.
// You can construct a concrete instance of `X509CertificateNameArrayInput` via:
//
//          X509CertificateNameArray{ X509CertificateNameArgs{...} }
type X509CertificateNameArrayInput interface {
	pulumi.Input

	ToX509CertificateNameArrayOutput() X509CertificateNameArrayOutput
	ToX509CertificateNameArrayOutputWithContext(context.Context) X509CertificateNameArrayOutput
}

type X509CertificateNameArray []X509CertificateNameInput

func (X509CertificateNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X509CertificateName)(nil)).Elem()
}

func (i X509CertificateNameArray) ToX509CertificateNameArrayOutput() X509CertificateNameArrayOutput {
	return i.ToX509CertificateNameArrayOutputWithContext(context.Background())
}

func (i X509CertificateNameArray) ToX509CertificateNameArrayOutputWithContext(ctx context.Context) X509CertificateNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X509CertificateNameArrayOutput)
}

// Properties of server X509Names.
type X509CertificateNameOutput struct{ *pulumi.OutputState }

func (X509CertificateNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X509CertificateName)(nil)).Elem()
}

func (o X509CertificateNameOutput) ToX509CertificateNameOutput() X509CertificateNameOutput {
	return o
}

func (o X509CertificateNameOutput) ToX509CertificateNameOutputWithContext(ctx context.Context) X509CertificateNameOutput {
	return o
}

// Thumbprint for the Issuer of the Certificate.
func (o X509CertificateNameOutput) IssuerCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X509CertificateName) *string { return v.IssuerCertificateThumbprint }).(pulumi.StringPtrOutput)
}

// Common Name of the Certificate.
func (o X509CertificateNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X509CertificateName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type X509CertificateNameArrayOutput struct{ *pulumi.OutputState }

func (X509CertificateNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X509CertificateName)(nil)).Elem()
}

func (o X509CertificateNameArrayOutput) ToX509CertificateNameArrayOutput() X509CertificateNameArrayOutput {
	return o
}

func (o X509CertificateNameArrayOutput) ToX509CertificateNameArrayOutputWithContext(ctx context.Context) X509CertificateNameArrayOutput {
	return o
}

func (o X509CertificateNameArrayOutput) Index(i pulumi.IntInput) X509CertificateNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) X509CertificateName {
		return vs[0].([]X509CertificateName)[vs[1].(int)]
	}).(X509CertificateNameOutput)
}

// Properties of server X509Names.
type X509CertificateNameResponse struct {
	// Thumbprint for the Issuer of the Certificate.
	IssuerCertificateThumbprint *string `pulumi:"issuerCertificateThumbprint"`
	// Common Name of the Certificate.
	Name *string `pulumi:"name"`
}

// X509CertificateNameResponseInput is an input type that accepts X509CertificateNameResponseArgs and X509CertificateNameResponseOutput values.
// You can construct a concrete instance of `X509CertificateNameResponseInput` via:
//
//          X509CertificateNameResponseArgs{...}
type X509CertificateNameResponseInput interface {
	pulumi.Input

	ToX509CertificateNameResponseOutput() X509CertificateNameResponseOutput
	ToX509CertificateNameResponseOutputWithContext(context.Context) X509CertificateNameResponseOutput
}

// Properties of server X509Names.
type X509CertificateNameResponseArgs struct {
	// Thumbprint for the Issuer of the Certificate.
	IssuerCertificateThumbprint pulumi.StringPtrInput `pulumi:"issuerCertificateThumbprint"`
	// Common Name of the Certificate.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (X509CertificateNameResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X509CertificateNameResponse)(nil)).Elem()
}

func (i X509CertificateNameResponseArgs) ToX509CertificateNameResponseOutput() X509CertificateNameResponseOutput {
	return i.ToX509CertificateNameResponseOutputWithContext(context.Background())
}

func (i X509CertificateNameResponseArgs) ToX509CertificateNameResponseOutputWithContext(ctx context.Context) X509CertificateNameResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X509CertificateNameResponseOutput)
}

// X509CertificateNameResponseArrayInput is an input type that accepts X509CertificateNameResponseArray and X509CertificateNameResponseArrayOutput values.
// You can construct a concrete instance of `X509CertificateNameResponseArrayInput` via:
//
//          X509CertificateNameResponseArray{ X509CertificateNameResponseArgs{...} }
type X509CertificateNameResponseArrayInput interface {
	pulumi.Input

	ToX509CertificateNameResponseArrayOutput() X509CertificateNameResponseArrayOutput
	ToX509CertificateNameResponseArrayOutputWithContext(context.Context) X509CertificateNameResponseArrayOutput
}

type X509CertificateNameResponseArray []X509CertificateNameResponseInput

func (X509CertificateNameResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X509CertificateNameResponse)(nil)).Elem()
}

func (i X509CertificateNameResponseArray) ToX509CertificateNameResponseArrayOutput() X509CertificateNameResponseArrayOutput {
	return i.ToX509CertificateNameResponseArrayOutputWithContext(context.Background())
}

func (i X509CertificateNameResponseArray) ToX509CertificateNameResponseArrayOutputWithContext(ctx context.Context) X509CertificateNameResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X509CertificateNameResponseArrayOutput)
}

// Properties of server X509Names.
type X509CertificateNameResponseOutput struct{ *pulumi.OutputState }

func (X509CertificateNameResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X509CertificateNameResponse)(nil)).Elem()
}

func (o X509CertificateNameResponseOutput) ToX509CertificateNameResponseOutput() X509CertificateNameResponseOutput {
	return o
}

func (o X509CertificateNameResponseOutput) ToX509CertificateNameResponseOutputWithContext(ctx context.Context) X509CertificateNameResponseOutput {
	return o
}

// Thumbprint for the Issuer of the Certificate.
func (o X509CertificateNameResponseOutput) IssuerCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X509CertificateNameResponse) *string { return v.IssuerCertificateThumbprint }).(pulumi.StringPtrOutput)
}

// Common Name of the Certificate.
func (o X509CertificateNameResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X509CertificateNameResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type X509CertificateNameResponseArrayOutput struct{ *pulumi.OutputState }

func (X509CertificateNameResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X509CertificateNameResponse)(nil)).Elem()
}

func (o X509CertificateNameResponseArrayOutput) ToX509CertificateNameResponseArrayOutput() X509CertificateNameResponseArrayOutput {
	return o
}

func (o X509CertificateNameResponseArrayOutput) ToX509CertificateNameResponseArrayOutputWithContext(ctx context.Context) X509CertificateNameResponseArrayOutput {
	return o
}

func (o X509CertificateNameResponseArrayOutput) Index(i pulumi.IntInput) X509CertificateNameResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) X509CertificateNameResponse {
		return vs[0].([]X509CertificateNameResponse)[vs[1].(int)]
	}).(X509CertificateNameResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AdditionalLocationOutput{})
	pulumi.RegisterOutputType(AdditionalLocationArrayOutput{})
	pulumi.RegisterOutputType(AdditionalLocationResponseOutput{})
	pulumi.RegisterOutputType(AdditionalLocationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApiTypeOutput{})
	pulumi.RegisterOutputType(ApiContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApiContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiCreateOrUpdatePropertiesPropertiesOutput{})
	pulumi.RegisterOutputType(ApiCreateOrUpdatePropertiesPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticTypeOutput{})
	pulumi.RegisterOutputType(ApiIssueTypeOutput{})
	pulumi.RegisterOutputType(ApiIssueAttachmentTypeOutput{})
	pulumi.RegisterOutputType(ApiIssueCommentTypeOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceTypeOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceIdentityOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiManagementServicePropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApiManagementServicePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceSkuPropertiesOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceSkuPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceSkuPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceSkuPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiOperationTypeOutput{})
	pulumi.RegisterOutputType(ApiOperationPolicyTypeOutput{})
	pulumi.RegisterOutputType(ApiPolicyTypeOutput{})
	pulumi.RegisterOutputType(ApiReleaseTypeOutput{})
	pulumi.RegisterOutputType(ApiReleaseContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApiReleaseContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiSchemaTypeOutput{})
	pulumi.RegisterOutputType(ApiTagDescriptionTypeOutput{})
	pulumi.RegisterOutputType(ApiVersionSetTypeOutput{})
	pulumi.RegisterOutputType(ApiVersionSetContractDetailsOutput{})
	pulumi.RegisterOutputType(ApiVersionSetContractDetailsPtrOutput{})
	pulumi.RegisterOutputType(ApiVersionSetContractDetailsResponseOutput{})
	pulumi.RegisterOutputType(ApiVersionSetContractDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiVersionSetContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApiVersionSetContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingsContractOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingsContractPtrOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingsContractResponseOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingsContractResponsePtrOutput{})
	pulumi.RegisterOutputType(AuthorizationServerTypeOutput{})
	pulumi.RegisterOutputType(AuthorizationServerContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AuthorizationServerContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(BackendTypeOutput{})
	pulumi.RegisterOutputType(BackendAuthorizationHeaderCredentialsOutput{})
	pulumi.RegisterOutputType(BackendAuthorizationHeaderCredentialsPtrOutput{})
	pulumi.RegisterOutputType(BackendAuthorizationHeaderCredentialsResponseOutput{})
	pulumi.RegisterOutputType(BackendAuthorizationHeaderCredentialsResponsePtrOutput{})
	pulumi.RegisterOutputType(BackendContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BackendContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(BackendCredentialsContractOutput{})
	pulumi.RegisterOutputType(BackendCredentialsContractPtrOutput{})
	pulumi.RegisterOutputType(BackendCredentialsContractResponseOutput{})
	pulumi.RegisterOutputType(BackendCredentialsContractResponsePtrOutput{})
	pulumi.RegisterOutputType(BackendPropertiesOutput{})
	pulumi.RegisterOutputType(BackendPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BackendPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BackendPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(BackendProxyContractOutput{})
	pulumi.RegisterOutputType(BackendProxyContractPtrOutput{})
	pulumi.RegisterOutputType(BackendProxyContractResponseOutput{})
	pulumi.RegisterOutputType(BackendProxyContractResponsePtrOutput{})
	pulumi.RegisterOutputType(BackendServiceFabricClusterPropertiesOutput{})
	pulumi.RegisterOutputType(BackendServiceFabricClusterPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BackendServiceFabricClusterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BackendServiceFabricClusterPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(BackendTlsPropertiesOutput{})
	pulumi.RegisterOutputType(BackendTlsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BackendTlsPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BackendTlsPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(BodyDiagnosticSettingsOutput{})
	pulumi.RegisterOutputType(BodyDiagnosticSettingsPtrOutput{})
	pulumi.RegisterOutputType(BodyDiagnosticSettingsResponseOutput{})
	pulumi.RegisterOutputType(BodyDiagnosticSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(CacheTypeOutput{})
	pulumi.RegisterOutputType(CacheContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(CacheContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CertificateTypeOutput{})
	pulumi.RegisterOutputType(CertificateConfigurationOutput{})
	pulumi.RegisterOutputType(CertificateConfigurationArrayOutput{})
	pulumi.RegisterOutputType(CertificateConfigurationResponseOutput{})
	pulumi.RegisterOutputType(CertificateConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(CertificateContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(CertificateContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CertificateInformationOutput{})
	pulumi.RegisterOutputType(CertificateInformationPtrOutput{})
	pulumi.RegisterOutputType(CertificateInformationResponseOutput{})
	pulumi.RegisterOutputType(CertificateInformationResponsePtrOutput{})
	pulumi.RegisterOutputType(DiagnosticTypeOutput{})
	pulumi.RegisterOutputType(DiagnosticContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DiagnosticContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(EmailTemplateTypeOutput{})
	pulumi.RegisterOutputType(EmailTemplateContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(EmailTemplateContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(EmailTemplateParametersContractPropertiesOutput{})
	pulumi.RegisterOutputType(EmailTemplateParametersContractPropertiesArrayOutput{})
	pulumi.RegisterOutputType(EmailTemplateParametersContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(EmailTemplateParametersContractPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(GroupTypeOutput{})
	pulumi.RegisterOutputType(GroupContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(GroupContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(GroupContractPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(HostnameConfigurationOutput{})
	pulumi.RegisterOutputType(HostnameConfigurationArrayOutput{})
	pulumi.RegisterOutputType(HostnameConfigurationResponseOutput{})
	pulumi.RegisterOutputType(HostnameConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(HttpMessageDiagnosticOutput{})
	pulumi.RegisterOutputType(HttpMessageDiagnosticPtrOutput{})
	pulumi.RegisterOutputType(HttpMessageDiagnosticResponseOutput{})
	pulumi.RegisterOutputType(HttpMessageDiagnosticResponsePtrOutput{})
	pulumi.RegisterOutputType(IdentityProviderTypeOutput{})
	pulumi.RegisterOutputType(IdentityProviderContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(IdentityProviderContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(IssueAttachmentContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(IssueAttachmentContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(IssueCommentContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(IssueCommentContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(IssueContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(IssueContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(LoggerTypeOutput{})
	pulumi.RegisterOutputType(LoggerContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(LoggerContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(OAuth2AuthenticationSettingsContractOutput{})
	pulumi.RegisterOutputType(OAuth2AuthenticationSettingsContractPtrOutput{})
	pulumi.RegisterOutputType(OAuth2AuthenticationSettingsContractResponseOutput{})
	pulumi.RegisterOutputType(OAuth2AuthenticationSettingsContractResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenIdAuthenticationSettingsContractOutput{})
	pulumi.RegisterOutputType(OpenIdAuthenticationSettingsContractPtrOutput{})
	pulumi.RegisterOutputType(OpenIdAuthenticationSettingsContractResponseOutput{})
	pulumi.RegisterOutputType(OpenIdAuthenticationSettingsContractResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenIdConnectProviderTypeOutput{})
	pulumi.RegisterOutputType(OpenidConnectProviderContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(OpenidConnectProviderContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(OperationContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(OperationContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ParameterContractOutput{})
	pulumi.RegisterOutputType(ParameterContractArrayOutput{})
	pulumi.RegisterOutputType(ParameterContractResponseOutput{})
	pulumi.RegisterOutputType(ParameterContractResponseArrayOutput{})
	pulumi.RegisterOutputType(PipelineDiagnosticSettingsOutput{})
	pulumi.RegisterOutputType(PipelineDiagnosticSettingsPtrOutput{})
	pulumi.RegisterOutputType(PipelineDiagnosticSettingsResponseOutput{})
	pulumi.RegisterOutputType(PipelineDiagnosticSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(PolicyTypeOutput{})
	pulumi.RegisterOutputType(PolicyContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PolicyContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ProductTypeOutput{})
	pulumi.RegisterOutputType(ProductContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ProductContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ProductPolicyTypeOutput{})
	pulumi.RegisterOutputType(PropertyTypeOutput{})
	pulumi.RegisterOutputType(PropertyContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PropertyContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(RepresentationContractOutput{})
	pulumi.RegisterOutputType(RepresentationContractArrayOutput{})
	pulumi.RegisterOutputType(RepresentationContractResponseOutput{})
	pulumi.RegisterOutputType(RepresentationContractResponseArrayOutput{})
	pulumi.RegisterOutputType(RequestContractOutput{})
	pulumi.RegisterOutputType(RequestContractPtrOutput{})
	pulumi.RegisterOutputType(RequestContractResponseOutput{})
	pulumi.RegisterOutputType(RequestContractResponsePtrOutput{})
	pulumi.RegisterOutputType(ResponseContractOutput{})
	pulumi.RegisterOutputType(ResponseContractArrayOutput{})
	pulumi.RegisterOutputType(ResponseContractResponseOutput{})
	pulumi.RegisterOutputType(ResponseContractResponseArrayOutput{})
	pulumi.RegisterOutputType(SamplingSettingsOutput{})
	pulumi.RegisterOutputType(SamplingSettingsPtrOutput{})
	pulumi.RegisterOutputType(SamplingSettingsResponseOutput{})
	pulumi.RegisterOutputType(SamplingSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(SchemaContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SchemaContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SubscriptionTypeOutput{})
	pulumi.RegisterOutputType(SubscriptionContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SubscriptionContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SubscriptionKeyParameterNamesContractOutput{})
	pulumi.RegisterOutputType(SubscriptionKeyParameterNamesContractPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionKeyParameterNamesContractResponseOutput{})
	pulumi.RegisterOutputType(SubscriptionKeyParameterNamesContractResponsePtrOutput{})
	pulumi.RegisterOutputType(TagTypeOutput{})
	pulumi.RegisterOutputType(TagByApiTypeOutput{})
	pulumi.RegisterOutputType(TagByOperationTypeOutput{})
	pulumi.RegisterOutputType(TagByProductTypeOutput{})
	pulumi.RegisterOutputType(TagContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TagContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TagDescriptionContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TagDescriptionContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TokenBodyParameterContractOutput{})
	pulumi.RegisterOutputType(TokenBodyParameterContractArrayOutput{})
	pulumi.RegisterOutputType(TokenBodyParameterContractResponseOutput{})
	pulumi.RegisterOutputType(TokenBodyParameterContractResponseArrayOutput{})
	pulumi.RegisterOutputType(UserTypeOutput{})
	pulumi.RegisterOutputType(UserContractPropertiesResponseOutput{})
	pulumi.RegisterOutputType(UserContractPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(UserIdentityContractOutput{})
	pulumi.RegisterOutputType(UserIdentityContractArrayOutput{})
	pulumi.RegisterOutputType(UserIdentityContractResponseOutput{})
	pulumi.RegisterOutputType(UserIdentityContractResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualNetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(X509CertificateNameOutput{})
	pulumi.RegisterOutputType(X509CertificateNameArrayOutput{})
	pulumi.RegisterOutputType(X509CertificateNameResponseOutput{})
	pulumi.RegisterOutputType(X509CertificateNameResponseArrayOutput{})
}
