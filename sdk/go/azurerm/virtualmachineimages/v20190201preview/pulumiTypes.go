// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ImageTemplateCustomizer struct {
	// Friendly Name to provide context on what this customization step does
	Name *string `pulumi:"name"`
	// The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
	Type string `pulumi:"type"`
}

// ImageTemplateCustomizerInput is an input type that accepts ImageTemplateCustomizerArgs and ImageTemplateCustomizerOutput values.
// You can construct a concrete instance of `ImageTemplateCustomizerInput` via:
//
//          ImageTemplateCustomizerArgs{...}
type ImageTemplateCustomizerInput interface {
	pulumi.Input

	ToImageTemplateCustomizerOutput() ImageTemplateCustomizerOutput
	ToImageTemplateCustomizerOutputWithContext(context.Context) ImageTemplateCustomizerOutput
}

type ImageTemplateCustomizerArgs struct {
	// Friendly Name to provide context on what this customization step does
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
	Type pulumi.StringInput `pulumi:"type"`
}

func (ImageTemplateCustomizerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTemplateCustomizer)(nil)).Elem()
}

func (i ImageTemplateCustomizerArgs) ToImageTemplateCustomizerOutput() ImageTemplateCustomizerOutput {
	return i.ToImageTemplateCustomizerOutputWithContext(context.Background())
}

func (i ImageTemplateCustomizerArgs) ToImageTemplateCustomizerOutputWithContext(ctx context.Context) ImageTemplateCustomizerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTemplateCustomizerOutput)
}

// ImageTemplateCustomizerArrayInput is an input type that accepts ImageTemplateCustomizerArray and ImageTemplateCustomizerArrayOutput values.
// You can construct a concrete instance of `ImageTemplateCustomizerArrayInput` via:
//
//          ImageTemplateCustomizerArray{ ImageTemplateCustomizerArgs{...} }
type ImageTemplateCustomizerArrayInput interface {
	pulumi.Input

	ToImageTemplateCustomizerArrayOutput() ImageTemplateCustomizerArrayOutput
	ToImageTemplateCustomizerArrayOutputWithContext(context.Context) ImageTemplateCustomizerArrayOutput
}

type ImageTemplateCustomizerArray []ImageTemplateCustomizerInput

func (ImageTemplateCustomizerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageTemplateCustomizer)(nil)).Elem()
}

func (i ImageTemplateCustomizerArray) ToImageTemplateCustomizerArrayOutput() ImageTemplateCustomizerArrayOutput {
	return i.ToImageTemplateCustomizerArrayOutputWithContext(context.Background())
}

func (i ImageTemplateCustomizerArray) ToImageTemplateCustomizerArrayOutputWithContext(ctx context.Context) ImageTemplateCustomizerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTemplateCustomizerArrayOutput)
}

type ImageTemplateCustomizerOutput struct{ *pulumi.OutputState }

func (ImageTemplateCustomizerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTemplateCustomizer)(nil)).Elem()
}

func (o ImageTemplateCustomizerOutput) ToImageTemplateCustomizerOutput() ImageTemplateCustomizerOutput {
	return o
}

func (o ImageTemplateCustomizerOutput) ToImageTemplateCustomizerOutputWithContext(ctx context.Context) ImageTemplateCustomizerOutput {
	return o
}

// Friendly Name to provide context on what this customization step does
func (o ImageTemplateCustomizerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageTemplateCustomizer) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
func (o ImageTemplateCustomizerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ImageTemplateCustomizer) string { return v.Type }).(pulumi.StringOutput)
}

type ImageTemplateCustomizerArrayOutput struct{ *pulumi.OutputState }

func (ImageTemplateCustomizerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageTemplateCustomizer)(nil)).Elem()
}

func (o ImageTemplateCustomizerArrayOutput) ToImageTemplateCustomizerArrayOutput() ImageTemplateCustomizerArrayOutput {
	return o
}

func (o ImageTemplateCustomizerArrayOutput) ToImageTemplateCustomizerArrayOutputWithContext(ctx context.Context) ImageTemplateCustomizerArrayOutput {
	return o
}

func (o ImageTemplateCustomizerArrayOutput) Index(i pulumi.IntInput) ImageTemplateCustomizerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageTemplateCustomizer {
		return vs[0].([]ImageTemplateCustomizer)[vs[1].(int)]
	}).(ImageTemplateCustomizerOutput)
}

type ImageTemplateCustomizerResponse struct {
	// Friendly Name to provide context on what this customization step does
	Name *string `pulumi:"name"`
	// The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
	Type string `pulumi:"type"`
}

// ImageTemplateCustomizerResponseInput is an input type that accepts ImageTemplateCustomizerResponseArgs and ImageTemplateCustomizerResponseOutput values.
// You can construct a concrete instance of `ImageTemplateCustomizerResponseInput` via:
//
//          ImageTemplateCustomizerResponseArgs{...}
type ImageTemplateCustomizerResponseInput interface {
	pulumi.Input

	ToImageTemplateCustomizerResponseOutput() ImageTemplateCustomizerResponseOutput
	ToImageTemplateCustomizerResponseOutputWithContext(context.Context) ImageTemplateCustomizerResponseOutput
}

type ImageTemplateCustomizerResponseArgs struct {
	// Friendly Name to provide context on what this customization step does
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
	Type pulumi.StringInput `pulumi:"type"`
}

func (ImageTemplateCustomizerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTemplateCustomizerResponse)(nil)).Elem()
}

func (i ImageTemplateCustomizerResponseArgs) ToImageTemplateCustomizerResponseOutput() ImageTemplateCustomizerResponseOutput {
	return i.ToImageTemplateCustomizerResponseOutputWithContext(context.Background())
}

func (i ImageTemplateCustomizerResponseArgs) ToImageTemplateCustomizerResponseOutputWithContext(ctx context.Context) ImageTemplateCustomizerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTemplateCustomizerResponseOutput)
}

// ImageTemplateCustomizerResponseArrayInput is an input type that accepts ImageTemplateCustomizerResponseArray and ImageTemplateCustomizerResponseArrayOutput values.
// You can construct a concrete instance of `ImageTemplateCustomizerResponseArrayInput` via:
//
//          ImageTemplateCustomizerResponseArray{ ImageTemplateCustomizerResponseArgs{...} }
type ImageTemplateCustomizerResponseArrayInput interface {
	pulumi.Input

	ToImageTemplateCustomizerResponseArrayOutput() ImageTemplateCustomizerResponseArrayOutput
	ToImageTemplateCustomizerResponseArrayOutputWithContext(context.Context) ImageTemplateCustomizerResponseArrayOutput
}

type ImageTemplateCustomizerResponseArray []ImageTemplateCustomizerResponseInput

func (ImageTemplateCustomizerResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageTemplateCustomizerResponse)(nil)).Elem()
}

func (i ImageTemplateCustomizerResponseArray) ToImageTemplateCustomizerResponseArrayOutput() ImageTemplateCustomizerResponseArrayOutput {
	return i.ToImageTemplateCustomizerResponseArrayOutputWithContext(context.Background())
}

func (i ImageTemplateCustomizerResponseArray) ToImageTemplateCustomizerResponseArrayOutputWithContext(ctx context.Context) ImageTemplateCustomizerResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTemplateCustomizerResponseArrayOutput)
}

type ImageTemplateCustomizerResponseOutput struct{ *pulumi.OutputState }

func (ImageTemplateCustomizerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTemplateCustomizerResponse)(nil)).Elem()
}

func (o ImageTemplateCustomizerResponseOutput) ToImageTemplateCustomizerResponseOutput() ImageTemplateCustomizerResponseOutput {
	return o
}

func (o ImageTemplateCustomizerResponseOutput) ToImageTemplateCustomizerResponseOutputWithContext(ctx context.Context) ImageTemplateCustomizerResponseOutput {
	return o
}

// Friendly Name to provide context on what this customization step does
func (o ImageTemplateCustomizerResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageTemplateCustomizerResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of customization tool you want to use on the Image. For example, "Shell" can be shell customizer
func (o ImageTemplateCustomizerResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ImageTemplateCustomizerResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ImageTemplateCustomizerResponseArrayOutput struct{ *pulumi.OutputState }

func (ImageTemplateCustomizerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageTemplateCustomizerResponse)(nil)).Elem()
}

func (o ImageTemplateCustomizerResponseArrayOutput) ToImageTemplateCustomizerResponseArrayOutput() ImageTemplateCustomizerResponseArrayOutput {
	return o
}

func (o ImageTemplateCustomizerResponseArrayOutput) ToImageTemplateCustomizerResponseArrayOutputWithContext(ctx context.Context) ImageTemplateCustomizerResponseArrayOutput {
	return o
}

func (o ImageTemplateCustomizerResponseArrayOutput) Index(i pulumi.IntInput) ImageTemplateCustomizerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageTemplateCustomizerResponse {
		return vs[0].([]ImageTemplateCustomizerResponse)[vs[1].(int)]
	}).(ImageTemplateCustomizerResponseOutput)
}

// Generic distribution object
type ImageTemplateDistributor struct {
	// Tags that will be applied to the artifact once it has been created/updated by the distributor.
	ArtifactTags map[string]string `pulumi:"artifactTags"`
	// The name to be used for the associated RunOutput.
	RunOutputName string `pulumi:"runOutputName"`
	// Type of distribution.
	Type string `pulumi:"type"`
}

// ImageTemplateDistributorInput is an input type that accepts ImageTemplateDistributorArgs and ImageTemplateDistributorOutput values.
// You can construct a concrete instance of `ImageTemplateDistributorInput` via:
//
//          ImageTemplateDistributorArgs{...}
type ImageTemplateDistributorInput interface {
	pulumi.Input

	ToImageTemplateDistributorOutput() ImageTemplateDistributorOutput
	ToImageTemplateDistributorOutputWithContext(context.Context) ImageTemplateDistributorOutput
}

// Generic distribution object
type ImageTemplateDistributorArgs struct {
	// Tags that will be applied to the artifact once it has been created/updated by the distributor.
	ArtifactTags pulumi.StringMapInput `pulumi:"artifactTags"`
	// The name to be used for the associated RunOutput.
	RunOutputName pulumi.StringInput `pulumi:"runOutputName"`
	// Type of distribution.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ImageTemplateDistributorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTemplateDistributor)(nil)).Elem()
}

func (i ImageTemplateDistributorArgs) ToImageTemplateDistributorOutput() ImageTemplateDistributorOutput {
	return i.ToImageTemplateDistributorOutputWithContext(context.Background())
}

func (i ImageTemplateDistributorArgs) ToImageTemplateDistributorOutputWithContext(ctx context.Context) ImageTemplateDistributorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTemplateDistributorOutput)
}

// ImageTemplateDistributorArrayInput is an input type that accepts ImageTemplateDistributorArray and ImageTemplateDistributorArrayOutput values.
// You can construct a concrete instance of `ImageTemplateDistributorArrayInput` via:
//
//          ImageTemplateDistributorArray{ ImageTemplateDistributorArgs{...} }
type ImageTemplateDistributorArrayInput interface {
	pulumi.Input

	ToImageTemplateDistributorArrayOutput() ImageTemplateDistributorArrayOutput
	ToImageTemplateDistributorArrayOutputWithContext(context.Context) ImageTemplateDistributorArrayOutput
}

type ImageTemplateDistributorArray []ImageTemplateDistributorInput

func (ImageTemplateDistributorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageTemplateDistributor)(nil)).Elem()
}

func (i ImageTemplateDistributorArray) ToImageTemplateDistributorArrayOutput() ImageTemplateDistributorArrayOutput {
	return i.ToImageTemplateDistributorArrayOutputWithContext(context.Background())
}

func (i ImageTemplateDistributorArray) ToImageTemplateDistributorArrayOutputWithContext(ctx context.Context) ImageTemplateDistributorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTemplateDistributorArrayOutput)
}

// Generic distribution object
type ImageTemplateDistributorOutput struct{ *pulumi.OutputState }

func (ImageTemplateDistributorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTemplateDistributor)(nil)).Elem()
}

func (o ImageTemplateDistributorOutput) ToImageTemplateDistributorOutput() ImageTemplateDistributorOutput {
	return o
}

func (o ImageTemplateDistributorOutput) ToImageTemplateDistributorOutputWithContext(ctx context.Context) ImageTemplateDistributorOutput {
	return o
}

// Tags that will be applied to the artifact once it has been created/updated by the distributor.
func (o ImageTemplateDistributorOutput) ArtifactTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ImageTemplateDistributor) map[string]string { return v.ArtifactTags }).(pulumi.StringMapOutput)
}

// The name to be used for the associated RunOutput.
func (o ImageTemplateDistributorOutput) RunOutputName() pulumi.StringOutput {
	return o.ApplyT(func(v ImageTemplateDistributor) string { return v.RunOutputName }).(pulumi.StringOutput)
}

// Type of distribution.
func (o ImageTemplateDistributorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ImageTemplateDistributor) string { return v.Type }).(pulumi.StringOutput)
}

type ImageTemplateDistributorArrayOutput struct{ *pulumi.OutputState }

func (ImageTemplateDistributorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageTemplateDistributor)(nil)).Elem()
}

func (o ImageTemplateDistributorArrayOutput) ToImageTemplateDistributorArrayOutput() ImageTemplateDistributorArrayOutput {
	return o
}

func (o ImageTemplateDistributorArrayOutput) ToImageTemplateDistributorArrayOutputWithContext(ctx context.Context) ImageTemplateDistributorArrayOutput {
	return o
}

func (o ImageTemplateDistributorArrayOutput) Index(i pulumi.IntInput) ImageTemplateDistributorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageTemplateDistributor {
		return vs[0].([]ImageTemplateDistributor)[vs[1].(int)]
	}).(ImageTemplateDistributorOutput)
}

// Generic distribution object
type ImageTemplateDistributorResponse struct {
	// Tags that will be applied to the artifact once it has been created/updated by the distributor.
	ArtifactTags map[string]string `pulumi:"artifactTags"`
	// The name to be used for the associated RunOutput.
	RunOutputName string `pulumi:"runOutputName"`
	// Type of distribution.
	Type string `pulumi:"type"`
}

// ImageTemplateDistributorResponseInput is an input type that accepts ImageTemplateDistributorResponseArgs and ImageTemplateDistributorResponseOutput values.
// You can construct a concrete instance of `ImageTemplateDistributorResponseInput` via:
//
//          ImageTemplateDistributorResponseArgs{...}
type ImageTemplateDistributorResponseInput interface {
	pulumi.Input

	ToImageTemplateDistributorResponseOutput() ImageTemplateDistributorResponseOutput
	ToImageTemplateDistributorResponseOutputWithContext(context.Context) ImageTemplateDistributorResponseOutput
}

// Generic distribution object
type ImageTemplateDistributorResponseArgs struct {
	// Tags that will be applied to the artifact once it has been created/updated by the distributor.
	ArtifactTags pulumi.StringMapInput `pulumi:"artifactTags"`
	// The name to be used for the associated RunOutput.
	RunOutputName pulumi.StringInput `pulumi:"runOutputName"`
	// Type of distribution.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ImageTemplateDistributorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTemplateDistributorResponse)(nil)).Elem()
}

func (i ImageTemplateDistributorResponseArgs) ToImageTemplateDistributorResponseOutput() ImageTemplateDistributorResponseOutput {
	return i.ToImageTemplateDistributorResponseOutputWithContext(context.Background())
}

func (i ImageTemplateDistributorResponseArgs) ToImageTemplateDistributorResponseOutputWithContext(ctx context.Context) ImageTemplateDistributorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTemplateDistributorResponseOutput)
}

// ImageTemplateDistributorResponseArrayInput is an input type that accepts ImageTemplateDistributorResponseArray and ImageTemplateDistributorResponseArrayOutput values.
// You can construct a concrete instance of `ImageTemplateDistributorResponseArrayInput` via:
//
//          ImageTemplateDistributorResponseArray{ ImageTemplateDistributorResponseArgs{...} }
type ImageTemplateDistributorResponseArrayInput interface {
	pulumi.Input

	ToImageTemplateDistributorResponseArrayOutput() ImageTemplateDistributorResponseArrayOutput
	ToImageTemplateDistributorResponseArrayOutputWithContext(context.Context) ImageTemplateDistributorResponseArrayOutput
}

type ImageTemplateDistributorResponseArray []ImageTemplateDistributorResponseInput

func (ImageTemplateDistributorResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageTemplateDistributorResponse)(nil)).Elem()
}

func (i ImageTemplateDistributorResponseArray) ToImageTemplateDistributorResponseArrayOutput() ImageTemplateDistributorResponseArrayOutput {
	return i.ToImageTemplateDistributorResponseArrayOutputWithContext(context.Background())
}

func (i ImageTemplateDistributorResponseArray) ToImageTemplateDistributorResponseArrayOutputWithContext(ctx context.Context) ImageTemplateDistributorResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTemplateDistributorResponseArrayOutput)
}

// Generic distribution object
type ImageTemplateDistributorResponseOutput struct{ *pulumi.OutputState }

func (ImageTemplateDistributorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTemplateDistributorResponse)(nil)).Elem()
}

func (o ImageTemplateDistributorResponseOutput) ToImageTemplateDistributorResponseOutput() ImageTemplateDistributorResponseOutput {
	return o
}

func (o ImageTemplateDistributorResponseOutput) ToImageTemplateDistributorResponseOutputWithContext(ctx context.Context) ImageTemplateDistributorResponseOutput {
	return o
}

// Tags that will be applied to the artifact once it has been created/updated by the distributor.
func (o ImageTemplateDistributorResponseOutput) ArtifactTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ImageTemplateDistributorResponse) map[string]string { return v.ArtifactTags }).(pulumi.StringMapOutput)
}

// The name to be used for the associated RunOutput.
func (o ImageTemplateDistributorResponseOutput) RunOutputName() pulumi.StringOutput {
	return o.ApplyT(func(v ImageTemplateDistributorResponse) string { return v.RunOutputName }).(pulumi.StringOutput)
}

// Type of distribution.
func (o ImageTemplateDistributorResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ImageTemplateDistributorResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ImageTemplateDistributorResponseArrayOutput struct{ *pulumi.OutputState }

func (ImageTemplateDistributorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageTemplateDistributorResponse)(nil)).Elem()
}

func (o ImageTemplateDistributorResponseArrayOutput) ToImageTemplateDistributorResponseArrayOutput() ImageTemplateDistributorResponseArrayOutput {
	return o
}

func (o ImageTemplateDistributorResponseArrayOutput) ToImageTemplateDistributorResponseArrayOutputWithContext(ctx context.Context) ImageTemplateDistributorResponseArrayOutput {
	return o
}

func (o ImageTemplateDistributorResponseArrayOutput) Index(i pulumi.IntInput) ImageTemplateDistributorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageTemplateDistributorResponse {
		return vs[0].([]ImageTemplateDistributorResponse)[vs[1].(int)]
	}).(ImageTemplateDistributorResponseOutput)
}

type ImageTemplateLastRunStatusResponse struct {
	// End time of the last run (UTC)
	EndTime *string `pulumi:"endTime"`
	// Verbose information about the last run state
	Message *string `pulumi:"message"`
	// State of the last run
	RunState *string `pulumi:"runState"`
	// Sub-state of the last run
	RunSubState *string `pulumi:"runSubState"`
	// Start time of the last run (UTC)
	StartTime *string `pulumi:"startTime"`
}

// ImageTemplateLastRunStatusResponseInput is an input type that accepts ImageTemplateLastRunStatusResponseArgs and ImageTemplateLastRunStatusResponseOutput values.
// You can construct a concrete instance of `ImageTemplateLastRunStatusResponseInput` via:
//
//          ImageTemplateLastRunStatusResponseArgs{...}
type ImageTemplateLastRunStatusResponseInput interface {
	pulumi.Input

	ToImageTemplateLastRunStatusResponseOutput() ImageTemplateLastRunStatusResponseOutput
	ToImageTemplateLastRunStatusResponseOutputWithContext(context.Context) ImageTemplateLastRunStatusResponseOutput
}

type ImageTemplateLastRunStatusResponseArgs struct {
	// End time of the last run (UTC)
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// Verbose information about the last run state
	Message pulumi.StringPtrInput `pulumi:"message"`
	// State of the last run
	RunState pulumi.StringPtrInput `pulumi:"runState"`
	// Sub-state of the last run
	RunSubState pulumi.StringPtrInput `pulumi:"runSubState"`
	// Start time of the last run (UTC)
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (ImageTemplateLastRunStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTemplateLastRunStatusResponse)(nil)).Elem()
}

func (i ImageTemplateLastRunStatusResponseArgs) ToImageTemplateLastRunStatusResponseOutput() ImageTemplateLastRunStatusResponseOutput {
	return i.ToImageTemplateLastRunStatusResponseOutputWithContext(context.Background())
}

func (i ImageTemplateLastRunStatusResponseArgs) ToImageTemplateLastRunStatusResponseOutputWithContext(ctx context.Context) ImageTemplateLastRunStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTemplateLastRunStatusResponseOutput)
}

func (i ImageTemplateLastRunStatusResponseArgs) ToImageTemplateLastRunStatusResponsePtrOutput() ImageTemplateLastRunStatusResponsePtrOutput {
	return i.ToImageTemplateLastRunStatusResponsePtrOutputWithContext(context.Background())
}

func (i ImageTemplateLastRunStatusResponseArgs) ToImageTemplateLastRunStatusResponsePtrOutputWithContext(ctx context.Context) ImageTemplateLastRunStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTemplateLastRunStatusResponseOutput).ToImageTemplateLastRunStatusResponsePtrOutputWithContext(ctx)
}

// ImageTemplateLastRunStatusResponsePtrInput is an input type that accepts ImageTemplateLastRunStatusResponseArgs, ImageTemplateLastRunStatusResponsePtr and ImageTemplateLastRunStatusResponsePtrOutput values.
// You can construct a concrete instance of `ImageTemplateLastRunStatusResponsePtrInput` via:
//
//          ImageTemplateLastRunStatusResponseArgs{...}
//
//  or:
//
//          nil
type ImageTemplateLastRunStatusResponsePtrInput interface {
	pulumi.Input

	ToImageTemplateLastRunStatusResponsePtrOutput() ImageTemplateLastRunStatusResponsePtrOutput
	ToImageTemplateLastRunStatusResponsePtrOutputWithContext(context.Context) ImageTemplateLastRunStatusResponsePtrOutput
}

type imageTemplateLastRunStatusResponsePtrType ImageTemplateLastRunStatusResponseArgs

func ImageTemplateLastRunStatusResponsePtr(v *ImageTemplateLastRunStatusResponseArgs) ImageTemplateLastRunStatusResponsePtrInput {
	return (*imageTemplateLastRunStatusResponsePtrType)(v)
}

func (*imageTemplateLastRunStatusResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageTemplateLastRunStatusResponse)(nil)).Elem()
}

func (i *imageTemplateLastRunStatusResponsePtrType) ToImageTemplateLastRunStatusResponsePtrOutput() ImageTemplateLastRunStatusResponsePtrOutput {
	return i.ToImageTemplateLastRunStatusResponsePtrOutputWithContext(context.Background())
}

func (i *imageTemplateLastRunStatusResponsePtrType) ToImageTemplateLastRunStatusResponsePtrOutputWithContext(ctx context.Context) ImageTemplateLastRunStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTemplateLastRunStatusResponsePtrOutput)
}

type ImageTemplateLastRunStatusResponseOutput struct{ *pulumi.OutputState }

func (ImageTemplateLastRunStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTemplateLastRunStatusResponse)(nil)).Elem()
}

func (o ImageTemplateLastRunStatusResponseOutput) ToImageTemplateLastRunStatusResponseOutput() ImageTemplateLastRunStatusResponseOutput {
	return o
}

func (o ImageTemplateLastRunStatusResponseOutput) ToImageTemplateLastRunStatusResponseOutputWithContext(ctx context.Context) ImageTemplateLastRunStatusResponseOutput {
	return o
}

func (o ImageTemplateLastRunStatusResponseOutput) ToImageTemplateLastRunStatusResponsePtrOutput() ImageTemplateLastRunStatusResponsePtrOutput {
	return o.ToImageTemplateLastRunStatusResponsePtrOutputWithContext(context.Background())
}

func (o ImageTemplateLastRunStatusResponseOutput) ToImageTemplateLastRunStatusResponsePtrOutputWithContext(ctx context.Context) ImageTemplateLastRunStatusResponsePtrOutput {
	return o.ApplyT(func(v ImageTemplateLastRunStatusResponse) *ImageTemplateLastRunStatusResponse {
		return &v
	}).(ImageTemplateLastRunStatusResponsePtrOutput)
}

// End time of the last run (UTC)
func (o ImageTemplateLastRunStatusResponseOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageTemplateLastRunStatusResponse) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Verbose information about the last run state
func (o ImageTemplateLastRunStatusResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageTemplateLastRunStatusResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// State of the last run
func (o ImageTemplateLastRunStatusResponseOutput) RunState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageTemplateLastRunStatusResponse) *string { return v.RunState }).(pulumi.StringPtrOutput)
}

// Sub-state of the last run
func (o ImageTemplateLastRunStatusResponseOutput) RunSubState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageTemplateLastRunStatusResponse) *string { return v.RunSubState }).(pulumi.StringPtrOutput)
}

// Start time of the last run (UTC)
func (o ImageTemplateLastRunStatusResponseOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageTemplateLastRunStatusResponse) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type ImageTemplateLastRunStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (ImageTemplateLastRunStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageTemplateLastRunStatusResponse)(nil)).Elem()
}

func (o ImageTemplateLastRunStatusResponsePtrOutput) ToImageTemplateLastRunStatusResponsePtrOutput() ImageTemplateLastRunStatusResponsePtrOutput {
	return o
}

func (o ImageTemplateLastRunStatusResponsePtrOutput) ToImageTemplateLastRunStatusResponsePtrOutputWithContext(ctx context.Context) ImageTemplateLastRunStatusResponsePtrOutput {
	return o
}

func (o ImageTemplateLastRunStatusResponsePtrOutput) Elem() ImageTemplateLastRunStatusResponseOutput {
	return o.ApplyT(func(v *ImageTemplateLastRunStatusResponse) ImageTemplateLastRunStatusResponse { return *v }).(ImageTemplateLastRunStatusResponseOutput)
}

// End time of the last run (UTC)
func (o ImageTemplateLastRunStatusResponsePtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageTemplateLastRunStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// Verbose information about the last run state
func (o ImageTemplateLastRunStatusResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageTemplateLastRunStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// State of the last run
func (o ImageTemplateLastRunStatusResponsePtrOutput) RunState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageTemplateLastRunStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.RunState
	}).(pulumi.StringPtrOutput)
}

// Sub-state of the last run
func (o ImageTemplateLastRunStatusResponsePtrOutput) RunSubState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageTemplateLastRunStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.RunSubState
	}).(pulumi.StringPtrOutput)
}

// Start time of the last run (UTC)
func (o ImageTemplateLastRunStatusResponsePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageTemplateLastRunStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

type ImageTemplateSource struct {
	// Specifies the type of source image you want to start with.
	Type string `pulumi:"type"`
}

// ImageTemplateSourceInput is an input type that accepts ImageTemplateSourceArgs and ImageTemplateSourceOutput values.
// You can construct a concrete instance of `ImageTemplateSourceInput` via:
//
//          ImageTemplateSourceArgs{...}
type ImageTemplateSourceInput interface {
	pulumi.Input

	ToImageTemplateSourceOutput() ImageTemplateSourceOutput
	ToImageTemplateSourceOutputWithContext(context.Context) ImageTemplateSourceOutput
}

type ImageTemplateSourceArgs struct {
	// Specifies the type of source image you want to start with.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ImageTemplateSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTemplateSource)(nil)).Elem()
}

func (i ImageTemplateSourceArgs) ToImageTemplateSourceOutput() ImageTemplateSourceOutput {
	return i.ToImageTemplateSourceOutputWithContext(context.Background())
}

func (i ImageTemplateSourceArgs) ToImageTemplateSourceOutputWithContext(ctx context.Context) ImageTemplateSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTemplateSourceOutput)
}

func (i ImageTemplateSourceArgs) ToImageTemplateSourcePtrOutput() ImageTemplateSourcePtrOutput {
	return i.ToImageTemplateSourcePtrOutputWithContext(context.Background())
}

func (i ImageTemplateSourceArgs) ToImageTemplateSourcePtrOutputWithContext(ctx context.Context) ImageTemplateSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTemplateSourceOutput).ToImageTemplateSourcePtrOutputWithContext(ctx)
}

// ImageTemplateSourcePtrInput is an input type that accepts ImageTemplateSourceArgs, ImageTemplateSourcePtr and ImageTemplateSourcePtrOutput values.
// You can construct a concrete instance of `ImageTemplateSourcePtrInput` via:
//
//          ImageTemplateSourceArgs{...}
//
//  or:
//
//          nil
type ImageTemplateSourcePtrInput interface {
	pulumi.Input

	ToImageTemplateSourcePtrOutput() ImageTemplateSourcePtrOutput
	ToImageTemplateSourcePtrOutputWithContext(context.Context) ImageTemplateSourcePtrOutput
}

type imageTemplateSourcePtrType ImageTemplateSourceArgs

func ImageTemplateSourcePtr(v *ImageTemplateSourceArgs) ImageTemplateSourcePtrInput {
	return (*imageTemplateSourcePtrType)(v)
}

func (*imageTemplateSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageTemplateSource)(nil)).Elem()
}

func (i *imageTemplateSourcePtrType) ToImageTemplateSourcePtrOutput() ImageTemplateSourcePtrOutput {
	return i.ToImageTemplateSourcePtrOutputWithContext(context.Background())
}

func (i *imageTemplateSourcePtrType) ToImageTemplateSourcePtrOutputWithContext(ctx context.Context) ImageTemplateSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTemplateSourcePtrOutput)
}

type ImageTemplateSourceOutput struct{ *pulumi.OutputState }

func (ImageTemplateSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTemplateSource)(nil)).Elem()
}

func (o ImageTemplateSourceOutput) ToImageTemplateSourceOutput() ImageTemplateSourceOutput {
	return o
}

func (o ImageTemplateSourceOutput) ToImageTemplateSourceOutputWithContext(ctx context.Context) ImageTemplateSourceOutput {
	return o
}

func (o ImageTemplateSourceOutput) ToImageTemplateSourcePtrOutput() ImageTemplateSourcePtrOutput {
	return o.ToImageTemplateSourcePtrOutputWithContext(context.Background())
}

func (o ImageTemplateSourceOutput) ToImageTemplateSourcePtrOutputWithContext(ctx context.Context) ImageTemplateSourcePtrOutput {
	return o.ApplyT(func(v ImageTemplateSource) *ImageTemplateSource {
		return &v
	}).(ImageTemplateSourcePtrOutput)
}

// Specifies the type of source image you want to start with.
func (o ImageTemplateSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ImageTemplateSource) string { return v.Type }).(pulumi.StringOutput)
}

type ImageTemplateSourcePtrOutput struct{ *pulumi.OutputState }

func (ImageTemplateSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageTemplateSource)(nil)).Elem()
}

func (o ImageTemplateSourcePtrOutput) ToImageTemplateSourcePtrOutput() ImageTemplateSourcePtrOutput {
	return o
}

func (o ImageTemplateSourcePtrOutput) ToImageTemplateSourcePtrOutputWithContext(ctx context.Context) ImageTemplateSourcePtrOutput {
	return o
}

func (o ImageTemplateSourcePtrOutput) Elem() ImageTemplateSourceOutput {
	return o.ApplyT(func(v *ImageTemplateSource) ImageTemplateSource { return *v }).(ImageTemplateSourceOutput)
}

// Specifies the type of source image you want to start with.
func (o ImageTemplateSourcePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageTemplateSource) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ImageTemplateSourceResponse struct {
	// Specifies the type of source image you want to start with.
	Type string `pulumi:"type"`
}

// ImageTemplateSourceResponseInput is an input type that accepts ImageTemplateSourceResponseArgs and ImageTemplateSourceResponseOutput values.
// You can construct a concrete instance of `ImageTemplateSourceResponseInput` via:
//
//          ImageTemplateSourceResponseArgs{...}
type ImageTemplateSourceResponseInput interface {
	pulumi.Input

	ToImageTemplateSourceResponseOutput() ImageTemplateSourceResponseOutput
	ToImageTemplateSourceResponseOutputWithContext(context.Context) ImageTemplateSourceResponseOutput
}

type ImageTemplateSourceResponseArgs struct {
	// Specifies the type of source image you want to start with.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ImageTemplateSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTemplateSourceResponse)(nil)).Elem()
}

func (i ImageTemplateSourceResponseArgs) ToImageTemplateSourceResponseOutput() ImageTemplateSourceResponseOutput {
	return i.ToImageTemplateSourceResponseOutputWithContext(context.Background())
}

func (i ImageTemplateSourceResponseArgs) ToImageTemplateSourceResponseOutputWithContext(ctx context.Context) ImageTemplateSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTemplateSourceResponseOutput)
}

func (i ImageTemplateSourceResponseArgs) ToImageTemplateSourceResponsePtrOutput() ImageTemplateSourceResponsePtrOutput {
	return i.ToImageTemplateSourceResponsePtrOutputWithContext(context.Background())
}

func (i ImageTemplateSourceResponseArgs) ToImageTemplateSourceResponsePtrOutputWithContext(ctx context.Context) ImageTemplateSourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTemplateSourceResponseOutput).ToImageTemplateSourceResponsePtrOutputWithContext(ctx)
}

// ImageTemplateSourceResponsePtrInput is an input type that accepts ImageTemplateSourceResponseArgs, ImageTemplateSourceResponsePtr and ImageTemplateSourceResponsePtrOutput values.
// You can construct a concrete instance of `ImageTemplateSourceResponsePtrInput` via:
//
//          ImageTemplateSourceResponseArgs{...}
//
//  or:
//
//          nil
type ImageTemplateSourceResponsePtrInput interface {
	pulumi.Input

	ToImageTemplateSourceResponsePtrOutput() ImageTemplateSourceResponsePtrOutput
	ToImageTemplateSourceResponsePtrOutputWithContext(context.Context) ImageTemplateSourceResponsePtrOutput
}

type imageTemplateSourceResponsePtrType ImageTemplateSourceResponseArgs

func ImageTemplateSourceResponsePtr(v *ImageTemplateSourceResponseArgs) ImageTemplateSourceResponsePtrInput {
	return (*imageTemplateSourceResponsePtrType)(v)
}

func (*imageTemplateSourceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageTemplateSourceResponse)(nil)).Elem()
}

func (i *imageTemplateSourceResponsePtrType) ToImageTemplateSourceResponsePtrOutput() ImageTemplateSourceResponsePtrOutput {
	return i.ToImageTemplateSourceResponsePtrOutputWithContext(context.Background())
}

func (i *imageTemplateSourceResponsePtrType) ToImageTemplateSourceResponsePtrOutputWithContext(ctx context.Context) ImageTemplateSourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageTemplateSourceResponsePtrOutput)
}

type ImageTemplateSourceResponseOutput struct{ *pulumi.OutputState }

func (ImageTemplateSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageTemplateSourceResponse)(nil)).Elem()
}

func (o ImageTemplateSourceResponseOutput) ToImageTemplateSourceResponseOutput() ImageTemplateSourceResponseOutput {
	return o
}

func (o ImageTemplateSourceResponseOutput) ToImageTemplateSourceResponseOutputWithContext(ctx context.Context) ImageTemplateSourceResponseOutput {
	return o
}

func (o ImageTemplateSourceResponseOutput) ToImageTemplateSourceResponsePtrOutput() ImageTemplateSourceResponsePtrOutput {
	return o.ToImageTemplateSourceResponsePtrOutputWithContext(context.Background())
}

func (o ImageTemplateSourceResponseOutput) ToImageTemplateSourceResponsePtrOutputWithContext(ctx context.Context) ImageTemplateSourceResponsePtrOutput {
	return o.ApplyT(func(v ImageTemplateSourceResponse) *ImageTemplateSourceResponse {
		return &v
	}).(ImageTemplateSourceResponsePtrOutput)
}

// Specifies the type of source image you want to start with.
func (o ImageTemplateSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ImageTemplateSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ImageTemplateSourceResponsePtrOutput struct{ *pulumi.OutputState }

func (ImageTemplateSourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageTemplateSourceResponse)(nil)).Elem()
}

func (o ImageTemplateSourceResponsePtrOutput) ToImageTemplateSourceResponsePtrOutput() ImageTemplateSourceResponsePtrOutput {
	return o
}

func (o ImageTemplateSourceResponsePtrOutput) ToImageTemplateSourceResponsePtrOutputWithContext(ctx context.Context) ImageTemplateSourceResponsePtrOutput {
	return o
}

func (o ImageTemplateSourceResponsePtrOutput) Elem() ImageTemplateSourceResponseOutput {
	return o.ApplyT(func(v *ImageTemplateSourceResponse) ImageTemplateSourceResponse { return *v }).(ImageTemplateSourceResponseOutput)
}

// Specifies the type of source image you want to start with.
func (o ImageTemplateSourceResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageTemplateSourceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ProvisioningErrorResponse struct {
	// Verbose error message about the provisioning failure
	Message *string `pulumi:"message"`
	// Error code of the provisioning failure
	ProvisioningErrorCode *string `pulumi:"provisioningErrorCode"`
}

// ProvisioningErrorResponseInput is an input type that accepts ProvisioningErrorResponseArgs and ProvisioningErrorResponseOutput values.
// You can construct a concrete instance of `ProvisioningErrorResponseInput` via:
//
//          ProvisioningErrorResponseArgs{...}
type ProvisioningErrorResponseInput interface {
	pulumi.Input

	ToProvisioningErrorResponseOutput() ProvisioningErrorResponseOutput
	ToProvisioningErrorResponseOutputWithContext(context.Context) ProvisioningErrorResponseOutput
}

type ProvisioningErrorResponseArgs struct {
	// Verbose error message about the provisioning failure
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Error code of the provisioning failure
	ProvisioningErrorCode pulumi.StringPtrInput `pulumi:"provisioningErrorCode"`
}

func (ProvisioningErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningErrorResponse)(nil)).Elem()
}

func (i ProvisioningErrorResponseArgs) ToProvisioningErrorResponseOutput() ProvisioningErrorResponseOutput {
	return i.ToProvisioningErrorResponseOutputWithContext(context.Background())
}

func (i ProvisioningErrorResponseArgs) ToProvisioningErrorResponseOutputWithContext(ctx context.Context) ProvisioningErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningErrorResponseOutput)
}

func (i ProvisioningErrorResponseArgs) ToProvisioningErrorResponsePtrOutput() ProvisioningErrorResponsePtrOutput {
	return i.ToProvisioningErrorResponsePtrOutputWithContext(context.Background())
}

func (i ProvisioningErrorResponseArgs) ToProvisioningErrorResponsePtrOutputWithContext(ctx context.Context) ProvisioningErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningErrorResponseOutput).ToProvisioningErrorResponsePtrOutputWithContext(ctx)
}

// ProvisioningErrorResponsePtrInput is an input type that accepts ProvisioningErrorResponseArgs, ProvisioningErrorResponsePtr and ProvisioningErrorResponsePtrOutput values.
// You can construct a concrete instance of `ProvisioningErrorResponsePtrInput` via:
//
//          ProvisioningErrorResponseArgs{...}
//
//  or:
//
//          nil
type ProvisioningErrorResponsePtrInput interface {
	pulumi.Input

	ToProvisioningErrorResponsePtrOutput() ProvisioningErrorResponsePtrOutput
	ToProvisioningErrorResponsePtrOutputWithContext(context.Context) ProvisioningErrorResponsePtrOutput
}

type provisioningErrorResponsePtrType ProvisioningErrorResponseArgs

func ProvisioningErrorResponsePtr(v *ProvisioningErrorResponseArgs) ProvisioningErrorResponsePtrInput {
	return (*provisioningErrorResponsePtrType)(v)
}

func (*provisioningErrorResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningErrorResponse)(nil)).Elem()
}

func (i *provisioningErrorResponsePtrType) ToProvisioningErrorResponsePtrOutput() ProvisioningErrorResponsePtrOutput {
	return i.ToProvisioningErrorResponsePtrOutputWithContext(context.Background())
}

func (i *provisioningErrorResponsePtrType) ToProvisioningErrorResponsePtrOutputWithContext(ctx context.Context) ProvisioningErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningErrorResponsePtrOutput)
}

type ProvisioningErrorResponseOutput struct{ *pulumi.OutputState }

func (ProvisioningErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningErrorResponse)(nil)).Elem()
}

func (o ProvisioningErrorResponseOutput) ToProvisioningErrorResponseOutput() ProvisioningErrorResponseOutput {
	return o
}

func (o ProvisioningErrorResponseOutput) ToProvisioningErrorResponseOutputWithContext(ctx context.Context) ProvisioningErrorResponseOutput {
	return o
}

func (o ProvisioningErrorResponseOutput) ToProvisioningErrorResponsePtrOutput() ProvisioningErrorResponsePtrOutput {
	return o.ToProvisioningErrorResponsePtrOutputWithContext(context.Background())
}

func (o ProvisioningErrorResponseOutput) ToProvisioningErrorResponsePtrOutputWithContext(ctx context.Context) ProvisioningErrorResponsePtrOutput {
	return o.ApplyT(func(v ProvisioningErrorResponse) *ProvisioningErrorResponse {
		return &v
	}).(ProvisioningErrorResponsePtrOutput)
}

// Verbose error message about the provisioning failure
func (o ProvisioningErrorResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisioningErrorResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Error code of the provisioning failure
func (o ProvisioningErrorResponseOutput) ProvisioningErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisioningErrorResponse) *string { return v.ProvisioningErrorCode }).(pulumi.StringPtrOutput)
}

type ProvisioningErrorResponsePtrOutput struct{ *pulumi.OutputState }

func (ProvisioningErrorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningErrorResponse)(nil)).Elem()
}

func (o ProvisioningErrorResponsePtrOutput) ToProvisioningErrorResponsePtrOutput() ProvisioningErrorResponsePtrOutput {
	return o
}

func (o ProvisioningErrorResponsePtrOutput) ToProvisioningErrorResponsePtrOutputWithContext(ctx context.Context) ProvisioningErrorResponsePtrOutput {
	return o
}

func (o ProvisioningErrorResponsePtrOutput) Elem() ProvisioningErrorResponseOutput {
	return o.ApplyT(func(v *ProvisioningErrorResponse) ProvisioningErrorResponse { return *v }).(ProvisioningErrorResponseOutput)
}

// Verbose error message about the provisioning failure
func (o ProvisioningErrorResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Error code of the provisioning failure
func (o ProvisioningErrorResponsePtrOutput) ProvisioningErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningErrorCode
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ImageTemplateCustomizerOutput{})
	pulumi.RegisterOutputType(ImageTemplateCustomizerArrayOutput{})
	pulumi.RegisterOutputType(ImageTemplateCustomizerResponseOutput{})
	pulumi.RegisterOutputType(ImageTemplateCustomizerResponseArrayOutput{})
	pulumi.RegisterOutputType(ImageTemplateDistributorOutput{})
	pulumi.RegisterOutputType(ImageTemplateDistributorArrayOutput{})
	pulumi.RegisterOutputType(ImageTemplateDistributorResponseOutput{})
	pulumi.RegisterOutputType(ImageTemplateDistributorResponseArrayOutput{})
	pulumi.RegisterOutputType(ImageTemplateLastRunStatusResponseOutput{})
	pulumi.RegisterOutputType(ImageTemplateLastRunStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(ImageTemplateSourceOutput{})
	pulumi.RegisterOutputType(ImageTemplateSourcePtrOutput{})
	pulumi.RegisterOutputType(ImageTemplateSourceResponseOutput{})
	pulumi.RegisterOutputType(ImageTemplateSourceResponsePtrOutput{})
	pulumi.RegisterOutputType(ProvisioningErrorResponseOutput{})
	pulumi.RegisterOutputType(ProvisioningErrorResponsePtrOutput{})
}
