// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170714

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The gateway details.
type GatewayDetails struct {
	// Gateway resource to be associated with the server.
	GatewayResourceId *string `pulumi:"gatewayResourceId"`
}

// GatewayDetailsInput is an input type that accepts GatewayDetailsArgs and GatewayDetailsOutput values.
// You can construct a concrete instance of `GatewayDetailsInput` via:
//
//          GatewayDetailsArgs{...}
type GatewayDetailsInput interface {
	pulumi.Input

	ToGatewayDetailsOutput() GatewayDetailsOutput
	ToGatewayDetailsOutputWithContext(context.Context) GatewayDetailsOutput
}

// The gateway details.
type GatewayDetailsArgs struct {
	// Gateway resource to be associated with the server.
	GatewayResourceId pulumi.StringPtrInput `pulumi:"gatewayResourceId"`
}

func (GatewayDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayDetails)(nil)).Elem()
}

func (i GatewayDetailsArgs) ToGatewayDetailsOutput() GatewayDetailsOutput {
	return i.ToGatewayDetailsOutputWithContext(context.Background())
}

func (i GatewayDetailsArgs) ToGatewayDetailsOutputWithContext(ctx context.Context) GatewayDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayDetailsOutput)
}

func (i GatewayDetailsArgs) ToGatewayDetailsPtrOutput() GatewayDetailsPtrOutput {
	return i.ToGatewayDetailsPtrOutputWithContext(context.Background())
}

func (i GatewayDetailsArgs) ToGatewayDetailsPtrOutputWithContext(ctx context.Context) GatewayDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayDetailsOutput).ToGatewayDetailsPtrOutputWithContext(ctx)
}

// GatewayDetailsPtrInput is an input type that accepts GatewayDetailsArgs, GatewayDetailsPtr and GatewayDetailsPtrOutput values.
// You can construct a concrete instance of `GatewayDetailsPtrInput` via:
//
//          GatewayDetailsArgs{...}
//
//  or:
//
//          nil
type GatewayDetailsPtrInput interface {
	pulumi.Input

	ToGatewayDetailsPtrOutput() GatewayDetailsPtrOutput
	ToGatewayDetailsPtrOutputWithContext(context.Context) GatewayDetailsPtrOutput
}

type gatewayDetailsPtrType GatewayDetailsArgs

func GatewayDetailsPtr(v *GatewayDetailsArgs) GatewayDetailsPtrInput {
	return (*gatewayDetailsPtrType)(v)
}

func (*gatewayDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayDetails)(nil)).Elem()
}

func (i *gatewayDetailsPtrType) ToGatewayDetailsPtrOutput() GatewayDetailsPtrOutput {
	return i.ToGatewayDetailsPtrOutputWithContext(context.Background())
}

func (i *gatewayDetailsPtrType) ToGatewayDetailsPtrOutputWithContext(ctx context.Context) GatewayDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayDetailsPtrOutput)
}

// The gateway details.
type GatewayDetailsResponse struct {
	// Uri of the DMTS cluster.
	DmtsClusterUri string `pulumi:"dmtsClusterUri"`
	// Gateway object id from in the DMTS cluster for the gateway resource.
	GatewayObjectId string `pulumi:"gatewayObjectId"`
	// Gateway resource to be associated with the server.
	GatewayResourceId *string `pulumi:"gatewayResourceId"`
}

// The gateway details.
type GatewayDetailsResponseOutput struct{ *pulumi.OutputState }

func (GatewayDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayDetailsResponse)(nil)).Elem()
}

func (o GatewayDetailsResponseOutput) ToGatewayDetailsResponseOutput() GatewayDetailsResponseOutput {
	return o
}

func (o GatewayDetailsResponseOutput) ToGatewayDetailsResponseOutputWithContext(ctx context.Context) GatewayDetailsResponseOutput {
	return o
}

func (o GatewayDetailsResponseOutput) ToGatewayDetailsResponsePtrOutput() GatewayDetailsResponsePtrOutput {
	return o.ToGatewayDetailsResponsePtrOutputWithContext(context.Background())
}

func (o GatewayDetailsResponseOutput) ToGatewayDetailsResponsePtrOutputWithContext(ctx context.Context) GatewayDetailsResponsePtrOutput {
	return o.ApplyT(func(v GatewayDetailsResponse) *GatewayDetailsResponse {
		return &v
	}).(GatewayDetailsResponsePtrOutput)
}

// Uri of the DMTS cluster.
func (o GatewayDetailsResponseOutput) DmtsClusterUri() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayDetailsResponse) string { return v.DmtsClusterUri }).(pulumi.StringOutput)
}

// Gateway object id from in the DMTS cluster for the gateway resource.
func (o GatewayDetailsResponseOutput) GatewayObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayDetailsResponse) string { return v.GatewayObjectId }).(pulumi.StringOutput)
}

// Gateway resource to be associated with the server.
func (o GatewayDetailsResponseOutput) GatewayResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayDetailsResponse) *string { return v.GatewayResourceId }).(pulumi.StringPtrOutput)
}

type GatewayDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (GatewayDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayDetailsResponse)(nil)).Elem()
}

func (o GatewayDetailsResponsePtrOutput) ToGatewayDetailsResponsePtrOutput() GatewayDetailsResponsePtrOutput {
	return o
}

func (o GatewayDetailsResponsePtrOutput) ToGatewayDetailsResponsePtrOutputWithContext(ctx context.Context) GatewayDetailsResponsePtrOutput {
	return o
}

func (o GatewayDetailsResponsePtrOutput) Elem() GatewayDetailsResponseOutput {
	return o.ApplyT(func(v *GatewayDetailsResponse) GatewayDetailsResponse { return *v }).(GatewayDetailsResponseOutput)
}

// Uri of the DMTS cluster.
func (o GatewayDetailsResponsePtrOutput) DmtsClusterUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DmtsClusterUri
	}).(pulumi.StringPtrOutput)
}

// Gateway object id from in the DMTS cluster for the gateway resource.
func (o GatewayDetailsResponsePtrOutput) GatewayObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.GatewayObjectId
	}).(pulumi.StringPtrOutput)
}

// Gateway resource to be associated with the server.
func (o GatewayDetailsResponsePtrOutput) GatewayResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.GatewayResourceId
	}).(pulumi.StringPtrOutput)
}

// Represents the SKU name and Azure pricing tier for Analysis Services resource.
type ResourceSku struct {
	// Name of the SKU level.
	Name string `pulumi:"name"`
	// The name of the Azure pricing tier to which the SKU applies.
	Tier *string `pulumi:"tier"`
}

// ResourceSkuInput is an input type that accepts ResourceSkuArgs and ResourceSkuOutput values.
// You can construct a concrete instance of `ResourceSkuInput` via:
//
//          ResourceSkuArgs{...}
type ResourceSkuInput interface {
	pulumi.Input

	ToResourceSkuOutput() ResourceSkuOutput
	ToResourceSkuOutputWithContext(context.Context) ResourceSkuOutput
}

// Represents the SKU name and Azure pricing tier for Analysis Services resource.
type ResourceSkuArgs struct {
	// Name of the SKU level.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Azure pricing tier to which the SKU applies.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ResourceSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSku)(nil)).Elem()
}

func (i ResourceSkuArgs) ToResourceSkuOutput() ResourceSkuOutput {
	return i.ToResourceSkuOutputWithContext(context.Background())
}

func (i ResourceSkuArgs) ToResourceSkuOutputWithContext(ctx context.Context) ResourceSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSkuOutput)
}

func (i ResourceSkuArgs) ToResourceSkuPtrOutput() ResourceSkuPtrOutput {
	return i.ToResourceSkuPtrOutputWithContext(context.Background())
}

func (i ResourceSkuArgs) ToResourceSkuPtrOutputWithContext(ctx context.Context) ResourceSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSkuOutput).ToResourceSkuPtrOutputWithContext(ctx)
}

// ResourceSkuPtrInput is an input type that accepts ResourceSkuArgs, ResourceSkuPtr and ResourceSkuPtrOutput values.
// You can construct a concrete instance of `ResourceSkuPtrInput` via:
//
//          ResourceSkuArgs{...}
//
//  or:
//
//          nil
type ResourceSkuPtrInput interface {
	pulumi.Input

	ToResourceSkuPtrOutput() ResourceSkuPtrOutput
	ToResourceSkuPtrOutputWithContext(context.Context) ResourceSkuPtrOutput
}

type resourceSkuPtrType ResourceSkuArgs

func ResourceSkuPtr(v *ResourceSkuArgs) ResourceSkuPtrInput {
	return (*resourceSkuPtrType)(v)
}

func (*resourceSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSku)(nil)).Elem()
}

func (i *resourceSkuPtrType) ToResourceSkuPtrOutput() ResourceSkuPtrOutput {
	return i.ToResourceSkuPtrOutputWithContext(context.Background())
}

func (i *resourceSkuPtrType) ToResourceSkuPtrOutputWithContext(ctx context.Context) ResourceSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSkuPtrOutput)
}

// Represents the SKU name and Azure pricing tier for Analysis Services resource.
type ResourceSkuResponse struct {
	// Name of the SKU level.
	Name string `pulumi:"name"`
	// The name of the Azure pricing tier to which the SKU applies.
	Tier *string `pulumi:"tier"`
}

// Represents the SKU name and Azure pricing tier for Analysis Services resource.
type ResourceSkuResponseOutput struct{ *pulumi.OutputState }

func (ResourceSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSkuResponse)(nil)).Elem()
}

func (o ResourceSkuResponseOutput) ToResourceSkuResponseOutput() ResourceSkuResponseOutput {
	return o
}

func (o ResourceSkuResponseOutput) ToResourceSkuResponseOutputWithContext(ctx context.Context) ResourceSkuResponseOutput {
	return o
}

func (o ResourceSkuResponseOutput) ToResourceSkuResponsePtrOutput() ResourceSkuResponsePtrOutput {
	return o.ToResourceSkuResponsePtrOutputWithContext(context.Background())
}

func (o ResourceSkuResponseOutput) ToResourceSkuResponsePtrOutputWithContext(ctx context.Context) ResourceSkuResponsePtrOutput {
	return o.ApplyT(func(v ResourceSkuResponse) *ResourceSkuResponse {
		return &v
	}).(ResourceSkuResponsePtrOutput)
}

// Name of the SKU level.
func (o ResourceSkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceSkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the Azure pricing tier to which the SKU applies.
func (o ResourceSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ResourceSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSkuResponse)(nil)).Elem()
}

func (o ResourceSkuResponsePtrOutput) ToResourceSkuResponsePtrOutput() ResourceSkuResponsePtrOutput {
	return o
}

func (o ResourceSkuResponsePtrOutput) ToResourceSkuResponsePtrOutputWithContext(ctx context.Context) ResourceSkuResponsePtrOutput {
	return o
}

func (o ResourceSkuResponsePtrOutput) Elem() ResourceSkuResponseOutput {
	return o.ApplyT(func(v *ResourceSkuResponse) ResourceSkuResponse { return *v }).(ResourceSkuResponseOutput)
}

// Name of the SKU level.
func (o ResourceSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The name of the Azure pricing tier to which the SKU applies.
func (o ResourceSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// An array of administrator user identities
type ServerAdministrators struct {
	// An array of administrator user identities.
	Members []string `pulumi:"members"`
}

// ServerAdministratorsInput is an input type that accepts ServerAdministratorsArgs and ServerAdministratorsOutput values.
// You can construct a concrete instance of `ServerAdministratorsInput` via:
//
//          ServerAdministratorsArgs{...}
type ServerAdministratorsInput interface {
	pulumi.Input

	ToServerAdministratorsOutput() ServerAdministratorsOutput
	ToServerAdministratorsOutputWithContext(context.Context) ServerAdministratorsOutput
}

// An array of administrator user identities
type ServerAdministratorsArgs struct {
	// An array of administrator user identities.
	Members pulumi.StringArrayInput `pulumi:"members"`
}

func (ServerAdministratorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerAdministrators)(nil)).Elem()
}

func (i ServerAdministratorsArgs) ToServerAdministratorsOutput() ServerAdministratorsOutput {
	return i.ToServerAdministratorsOutputWithContext(context.Background())
}

func (i ServerAdministratorsArgs) ToServerAdministratorsOutputWithContext(ctx context.Context) ServerAdministratorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerAdministratorsOutput)
}

func (i ServerAdministratorsArgs) ToServerAdministratorsPtrOutput() ServerAdministratorsPtrOutput {
	return i.ToServerAdministratorsPtrOutputWithContext(context.Background())
}

func (i ServerAdministratorsArgs) ToServerAdministratorsPtrOutputWithContext(ctx context.Context) ServerAdministratorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerAdministratorsOutput).ToServerAdministratorsPtrOutputWithContext(ctx)
}

// ServerAdministratorsPtrInput is an input type that accepts ServerAdministratorsArgs, ServerAdministratorsPtr and ServerAdministratorsPtrOutput values.
// You can construct a concrete instance of `ServerAdministratorsPtrInput` via:
//
//          ServerAdministratorsArgs{...}
//
//  or:
//
//          nil
type ServerAdministratorsPtrInput interface {
	pulumi.Input

	ToServerAdministratorsPtrOutput() ServerAdministratorsPtrOutput
	ToServerAdministratorsPtrOutputWithContext(context.Context) ServerAdministratorsPtrOutput
}

type serverAdministratorsPtrType ServerAdministratorsArgs

func ServerAdministratorsPtr(v *ServerAdministratorsArgs) ServerAdministratorsPtrInput {
	return (*serverAdministratorsPtrType)(v)
}

func (*serverAdministratorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerAdministrators)(nil)).Elem()
}

func (i *serverAdministratorsPtrType) ToServerAdministratorsPtrOutput() ServerAdministratorsPtrOutput {
	return i.ToServerAdministratorsPtrOutputWithContext(context.Background())
}

func (i *serverAdministratorsPtrType) ToServerAdministratorsPtrOutputWithContext(ctx context.Context) ServerAdministratorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerAdministratorsPtrOutput)
}

// An array of administrator user identities
type ServerAdministratorsResponse struct {
	// An array of administrator user identities.
	Members []string `pulumi:"members"`
}

// An array of administrator user identities
type ServerAdministratorsResponseOutput struct{ *pulumi.OutputState }

func (ServerAdministratorsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerAdministratorsResponse)(nil)).Elem()
}

func (o ServerAdministratorsResponseOutput) ToServerAdministratorsResponseOutput() ServerAdministratorsResponseOutput {
	return o
}

func (o ServerAdministratorsResponseOutput) ToServerAdministratorsResponseOutputWithContext(ctx context.Context) ServerAdministratorsResponseOutput {
	return o
}

func (o ServerAdministratorsResponseOutput) ToServerAdministratorsResponsePtrOutput() ServerAdministratorsResponsePtrOutput {
	return o.ToServerAdministratorsResponsePtrOutputWithContext(context.Background())
}

func (o ServerAdministratorsResponseOutput) ToServerAdministratorsResponsePtrOutputWithContext(ctx context.Context) ServerAdministratorsResponsePtrOutput {
	return o.ApplyT(func(v ServerAdministratorsResponse) *ServerAdministratorsResponse {
		return &v
	}).(ServerAdministratorsResponsePtrOutput)
}

// An array of administrator user identities.
func (o ServerAdministratorsResponseOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerAdministratorsResponse) []string { return v.Members }).(pulumi.StringArrayOutput)
}

type ServerAdministratorsResponsePtrOutput struct{ *pulumi.OutputState }

func (ServerAdministratorsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerAdministratorsResponse)(nil)).Elem()
}

func (o ServerAdministratorsResponsePtrOutput) ToServerAdministratorsResponsePtrOutput() ServerAdministratorsResponsePtrOutput {
	return o
}

func (o ServerAdministratorsResponsePtrOutput) ToServerAdministratorsResponsePtrOutputWithContext(ctx context.Context) ServerAdministratorsResponsePtrOutput {
	return o
}

func (o ServerAdministratorsResponsePtrOutput) Elem() ServerAdministratorsResponseOutput {
	return o.ApplyT(func(v *ServerAdministratorsResponse) ServerAdministratorsResponse { return *v }).(ServerAdministratorsResponseOutput)
}

// An array of administrator user identities.
func (o ServerAdministratorsResponsePtrOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServerAdministratorsResponse) []string {
		if v == nil {
			return nil
		}
		return v.Members
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GatewayDetailsOutput{})
	pulumi.RegisterOutputType(GatewayDetailsPtrOutput{})
	pulumi.RegisterOutputType(GatewayDetailsResponseOutput{})
	pulumi.RegisterOutputType(GatewayDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceSkuOutput{})
	pulumi.RegisterOutputType(ResourceSkuPtrOutput{})
	pulumi.RegisterOutputType(ResourceSkuResponseOutput{})
	pulumi.RegisterOutputType(ResourceSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(ServerAdministratorsOutput{})
	pulumi.RegisterOutputType(ServerAdministratorsPtrOutput{})
	pulumi.RegisterOutputType(ServerAdministratorsResponseOutput{})
	pulumi.RegisterOutputType(ServerAdministratorsResponsePtrOutput{})
}
