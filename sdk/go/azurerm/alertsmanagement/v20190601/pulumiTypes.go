// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190601

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The Action Groups information, used by the alert rule.
type ActionGroupsInformation struct {
	// An optional custom email subject to use in email notifications.
	CustomEmailSubject *string `pulumi:"customEmailSubject"`
	// An optional custom web-hook payload to use in web-hook notifications.
	CustomWebhookPayload *string `pulumi:"customWebhookPayload"`
	// The Action Group resource IDs.
	GroupIds []string `pulumi:"groupIds"`
}

// ActionGroupsInformationInput is an input type that accepts ActionGroupsInformationArgs and ActionGroupsInformationOutput values.
// You can construct a concrete instance of `ActionGroupsInformationInput` via:
//
//          ActionGroupsInformationArgs{...}
type ActionGroupsInformationInput interface {
	pulumi.Input

	ToActionGroupsInformationOutput() ActionGroupsInformationOutput
	ToActionGroupsInformationOutputWithContext(context.Context) ActionGroupsInformationOutput
}

// The Action Groups information, used by the alert rule.
type ActionGroupsInformationArgs struct {
	// An optional custom email subject to use in email notifications.
	CustomEmailSubject pulumi.StringPtrInput `pulumi:"customEmailSubject"`
	// An optional custom web-hook payload to use in web-hook notifications.
	CustomWebhookPayload pulumi.StringPtrInput `pulumi:"customWebhookPayload"`
	// The Action Group resource IDs.
	GroupIds pulumi.StringArrayInput `pulumi:"groupIds"`
}

func (ActionGroupsInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionGroupsInformation)(nil)).Elem()
}

func (i ActionGroupsInformationArgs) ToActionGroupsInformationOutput() ActionGroupsInformationOutput {
	return i.ToActionGroupsInformationOutputWithContext(context.Background())
}

func (i ActionGroupsInformationArgs) ToActionGroupsInformationOutputWithContext(ctx context.Context) ActionGroupsInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionGroupsInformationOutput)
}

func (i ActionGroupsInformationArgs) ToActionGroupsInformationPtrOutput() ActionGroupsInformationPtrOutput {
	return i.ToActionGroupsInformationPtrOutputWithContext(context.Background())
}

func (i ActionGroupsInformationArgs) ToActionGroupsInformationPtrOutputWithContext(ctx context.Context) ActionGroupsInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionGroupsInformationOutput).ToActionGroupsInformationPtrOutputWithContext(ctx)
}

// ActionGroupsInformationPtrInput is an input type that accepts ActionGroupsInformationArgs, ActionGroupsInformationPtr and ActionGroupsInformationPtrOutput values.
// You can construct a concrete instance of `ActionGroupsInformationPtrInput` via:
//
//          ActionGroupsInformationArgs{...}
//
//  or:
//
//          nil
type ActionGroupsInformationPtrInput interface {
	pulumi.Input

	ToActionGroupsInformationPtrOutput() ActionGroupsInformationPtrOutput
	ToActionGroupsInformationPtrOutputWithContext(context.Context) ActionGroupsInformationPtrOutput
}

type actionGroupsInformationPtrType ActionGroupsInformationArgs

func ActionGroupsInformationPtr(v *ActionGroupsInformationArgs) ActionGroupsInformationPtrInput {
	return (*actionGroupsInformationPtrType)(v)
}

func (*actionGroupsInformationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionGroupsInformation)(nil)).Elem()
}

func (i *actionGroupsInformationPtrType) ToActionGroupsInformationPtrOutput() ActionGroupsInformationPtrOutput {
	return i.ToActionGroupsInformationPtrOutputWithContext(context.Background())
}

func (i *actionGroupsInformationPtrType) ToActionGroupsInformationPtrOutputWithContext(ctx context.Context) ActionGroupsInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionGroupsInformationPtrOutput)
}

// The Action Groups information, used by the alert rule.
type ActionGroupsInformationResponse struct {
	// An optional custom email subject to use in email notifications.
	CustomEmailSubject *string `pulumi:"customEmailSubject"`
	// An optional custom web-hook payload to use in web-hook notifications.
	CustomWebhookPayload *string `pulumi:"customWebhookPayload"`
	// The Action Group resource IDs.
	GroupIds []string `pulumi:"groupIds"`
}

// The Action Groups information, used by the alert rule.
type ActionGroupsInformationResponseOutput struct{ *pulumi.OutputState }

func (ActionGroupsInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionGroupsInformationResponse)(nil)).Elem()
}

func (o ActionGroupsInformationResponseOutput) ToActionGroupsInformationResponseOutput() ActionGroupsInformationResponseOutput {
	return o
}

func (o ActionGroupsInformationResponseOutput) ToActionGroupsInformationResponseOutputWithContext(ctx context.Context) ActionGroupsInformationResponseOutput {
	return o
}

func (o ActionGroupsInformationResponseOutput) ToActionGroupsInformationResponsePtrOutput() ActionGroupsInformationResponsePtrOutput {
	return o.ToActionGroupsInformationResponsePtrOutputWithContext(context.Background())
}

func (o ActionGroupsInformationResponseOutput) ToActionGroupsInformationResponsePtrOutputWithContext(ctx context.Context) ActionGroupsInformationResponsePtrOutput {
	return o.ApplyT(func(v ActionGroupsInformationResponse) *ActionGroupsInformationResponse {
		return &v
	}).(ActionGroupsInformationResponsePtrOutput)
}

// An optional custom email subject to use in email notifications.
func (o ActionGroupsInformationResponseOutput) CustomEmailSubject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionGroupsInformationResponse) *string { return v.CustomEmailSubject }).(pulumi.StringPtrOutput)
}

// An optional custom web-hook payload to use in web-hook notifications.
func (o ActionGroupsInformationResponseOutput) CustomWebhookPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionGroupsInformationResponse) *string { return v.CustomWebhookPayload }).(pulumi.StringPtrOutput)
}

// The Action Group resource IDs.
func (o ActionGroupsInformationResponseOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActionGroupsInformationResponse) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

type ActionGroupsInformationResponsePtrOutput struct{ *pulumi.OutputState }

func (ActionGroupsInformationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionGroupsInformationResponse)(nil)).Elem()
}

func (o ActionGroupsInformationResponsePtrOutput) ToActionGroupsInformationResponsePtrOutput() ActionGroupsInformationResponsePtrOutput {
	return o
}

func (o ActionGroupsInformationResponsePtrOutput) ToActionGroupsInformationResponsePtrOutputWithContext(ctx context.Context) ActionGroupsInformationResponsePtrOutput {
	return o
}

func (o ActionGroupsInformationResponsePtrOutput) Elem() ActionGroupsInformationResponseOutput {
	return o.ApplyT(func(v *ActionGroupsInformationResponse) ActionGroupsInformationResponse { return *v }).(ActionGroupsInformationResponseOutput)
}

// An optional custom email subject to use in email notifications.
func (o ActionGroupsInformationResponsePtrOutput) CustomEmailSubject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionGroupsInformationResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomEmailSubject
	}).(pulumi.StringPtrOutput)
}

// An optional custom web-hook payload to use in web-hook notifications.
func (o ActionGroupsInformationResponsePtrOutput) CustomWebhookPayload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionGroupsInformationResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomWebhookPayload
	}).(pulumi.StringPtrOutput)
}

// The Action Group resource IDs.
func (o ActionGroupsInformationResponsePtrOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ActionGroupsInformationResponse) []string {
		if v == nil {
			return nil
		}
		return v.GroupIds
	}).(pulumi.StringArrayOutput)
}

// The detector information. By default this is not populated, unless it's specified in expandDetector
type Detector struct {
	// The Smart Detector description. By default this is not populated, unless it's specified in expandDetector
	Description *string `pulumi:"description"`
	// The detector id.
	Id string `pulumi:"id"`
	// The Smart Detector image path. By default this is not populated, unless it's specified in expandDetector
	ImagePaths []string `pulumi:"imagePaths"`
	// The Smart Detector name. By default this is not populated, unless it's specified in expandDetector
	Name *string `pulumi:"name"`
	// The detector's parameters.'
	Parameters map[string]map[string]interface{} `pulumi:"parameters"`
	// The Smart Detector supported resource types. By default this is not populated, unless it's specified in expandDetector
	SupportedResourceTypes []string `pulumi:"supportedResourceTypes"`
}

// DetectorInput is an input type that accepts DetectorArgs and DetectorOutput values.
// You can construct a concrete instance of `DetectorInput` via:
//
//          DetectorArgs{...}
type DetectorInput interface {
	pulumi.Input

	ToDetectorOutput() DetectorOutput
	ToDetectorOutputWithContext(context.Context) DetectorOutput
}

// The detector information. By default this is not populated, unless it's specified in expandDetector
type DetectorArgs struct {
	// The Smart Detector description. By default this is not populated, unless it's specified in expandDetector
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The detector id.
	Id pulumi.StringInput `pulumi:"id"`
	// The Smart Detector image path. By default this is not populated, unless it's specified in expandDetector
	ImagePaths pulumi.StringArrayInput `pulumi:"imagePaths"`
	// The Smart Detector name. By default this is not populated, unless it's specified in expandDetector
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The detector's parameters.'
	Parameters pulumi.MapMapInput `pulumi:"parameters"`
	// The Smart Detector supported resource types. By default this is not populated, unless it's specified in expandDetector
	SupportedResourceTypes pulumi.StringArrayInput `pulumi:"supportedResourceTypes"`
}

func (DetectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Detector)(nil)).Elem()
}

func (i DetectorArgs) ToDetectorOutput() DetectorOutput {
	return i.ToDetectorOutputWithContext(context.Background())
}

func (i DetectorArgs) ToDetectorOutputWithContext(ctx context.Context) DetectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorOutput)
}

func (i DetectorArgs) ToDetectorPtrOutput() DetectorPtrOutput {
	return i.ToDetectorPtrOutputWithContext(context.Background())
}

func (i DetectorArgs) ToDetectorPtrOutputWithContext(ctx context.Context) DetectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorOutput).ToDetectorPtrOutputWithContext(ctx)
}

// DetectorPtrInput is an input type that accepts DetectorArgs, DetectorPtr and DetectorPtrOutput values.
// You can construct a concrete instance of `DetectorPtrInput` via:
//
//          DetectorArgs{...}
//
//  or:
//
//          nil
type DetectorPtrInput interface {
	pulumi.Input

	ToDetectorPtrOutput() DetectorPtrOutput
	ToDetectorPtrOutputWithContext(context.Context) DetectorPtrOutput
}

type detectorPtrType DetectorArgs

func DetectorPtr(v *DetectorArgs) DetectorPtrInput {
	return (*detectorPtrType)(v)
}

func (*detectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Detector)(nil)).Elem()
}

func (i *detectorPtrType) ToDetectorPtrOutput() DetectorPtrOutput {
	return i.ToDetectorPtrOutputWithContext(context.Background())
}

func (i *detectorPtrType) ToDetectorPtrOutputWithContext(ctx context.Context) DetectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorPtrOutput)
}

// The detector information. By default this is not populated, unless it's specified in expandDetector
type DetectorResponse struct {
	// The Smart Detector description. By default this is not populated, unless it's specified in expandDetector
	Description *string `pulumi:"description"`
	// The detector id.
	Id string `pulumi:"id"`
	// The Smart Detector image path. By default this is not populated, unless it's specified in expandDetector
	ImagePaths []string `pulumi:"imagePaths"`
	// The Smart Detector name. By default this is not populated, unless it's specified in expandDetector
	Name *string `pulumi:"name"`
	// The detector's parameters.'
	Parameters map[string]map[string]interface{} `pulumi:"parameters"`
	// The Smart Detector supported resource types. By default this is not populated, unless it's specified in expandDetector
	SupportedResourceTypes []string `pulumi:"supportedResourceTypes"`
}

// The detector information. By default this is not populated, unless it's specified in expandDetector
type DetectorResponseOutput struct{ *pulumi.OutputState }

func (DetectorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorResponse)(nil)).Elem()
}

func (o DetectorResponseOutput) ToDetectorResponseOutput() DetectorResponseOutput {
	return o
}

func (o DetectorResponseOutput) ToDetectorResponseOutputWithContext(ctx context.Context) DetectorResponseOutput {
	return o
}

func (o DetectorResponseOutput) ToDetectorResponsePtrOutput() DetectorResponsePtrOutput {
	return o.ToDetectorResponsePtrOutputWithContext(context.Background())
}

func (o DetectorResponseOutput) ToDetectorResponsePtrOutputWithContext(ctx context.Context) DetectorResponsePtrOutput {
	return o.ApplyT(func(v DetectorResponse) *DetectorResponse {
		return &v
	}).(DetectorResponsePtrOutput)
}

// The Smart Detector description. By default this is not populated, unless it's specified in expandDetector
func (o DetectorResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The detector id.
func (o DetectorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The Smart Detector image path. By default this is not populated, unless it's specified in expandDetector
func (o DetectorResponseOutput) ImagePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DetectorResponse) []string { return v.ImagePaths }).(pulumi.StringArrayOutput)
}

// The Smart Detector name. By default this is not populated, unless it's specified in expandDetector
func (o DetectorResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The detector's parameters.'
func (o DetectorResponseOutput) Parameters() pulumi.MapMapOutput {
	return o.ApplyT(func(v DetectorResponse) map[string]map[string]interface{} { return v.Parameters }).(pulumi.MapMapOutput)
}

// The Smart Detector supported resource types. By default this is not populated, unless it's specified in expandDetector
func (o DetectorResponseOutput) SupportedResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DetectorResponse) []string { return v.SupportedResourceTypes }).(pulumi.StringArrayOutput)
}

type DetectorResponsePtrOutput struct{ *pulumi.OutputState }

func (DetectorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetectorResponse)(nil)).Elem()
}

func (o DetectorResponsePtrOutput) ToDetectorResponsePtrOutput() DetectorResponsePtrOutput {
	return o
}

func (o DetectorResponsePtrOutput) ToDetectorResponsePtrOutputWithContext(ctx context.Context) DetectorResponsePtrOutput {
	return o
}

func (o DetectorResponsePtrOutput) Elem() DetectorResponseOutput {
	return o.ApplyT(func(v *DetectorResponse) DetectorResponse { return *v }).(DetectorResponseOutput)
}

// The Smart Detector description. By default this is not populated, unless it's specified in expandDetector
func (o DetectorResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The detector id.
func (o DetectorResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The Smart Detector image path. By default this is not populated, unless it's specified in expandDetector
func (o DetectorResponsePtrOutput) ImagePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DetectorResponse) []string {
		if v == nil {
			return nil
		}
		return v.ImagePaths
	}).(pulumi.StringArrayOutput)
}

// The Smart Detector name. By default this is not populated, unless it's specified in expandDetector
func (o DetectorResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DetectorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The detector's parameters.'
func (o DetectorResponsePtrOutput) Parameters() pulumi.MapMapOutput {
	return o.ApplyT(func(v *DetectorResponse) map[string]map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.MapMapOutput)
}

// The Smart Detector supported resource types. By default this is not populated, unless it's specified in expandDetector
func (o DetectorResponsePtrOutput) SupportedResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DetectorResponse) []string {
		if v == nil {
			return nil
		}
		return v.SupportedResourceTypes
	}).(pulumi.StringArrayOutput)
}

// Optional throttling information for the alert rule.
type ThrottlingInformation struct {
	// The required duration (in ISO8601 format) to wait before notifying on the alert rule again. The time granularity must be in minutes and minimum value is 0 minutes
	Duration *string `pulumi:"duration"`
}

// ThrottlingInformationInput is an input type that accepts ThrottlingInformationArgs and ThrottlingInformationOutput values.
// You can construct a concrete instance of `ThrottlingInformationInput` via:
//
//          ThrottlingInformationArgs{...}
type ThrottlingInformationInput interface {
	pulumi.Input

	ToThrottlingInformationOutput() ThrottlingInformationOutput
	ToThrottlingInformationOutputWithContext(context.Context) ThrottlingInformationOutput
}

// Optional throttling information for the alert rule.
type ThrottlingInformationArgs struct {
	// The required duration (in ISO8601 format) to wait before notifying on the alert rule again. The time granularity must be in minutes and minimum value is 0 minutes
	Duration pulumi.StringPtrInput `pulumi:"duration"`
}

func (ThrottlingInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThrottlingInformation)(nil)).Elem()
}

func (i ThrottlingInformationArgs) ToThrottlingInformationOutput() ThrottlingInformationOutput {
	return i.ToThrottlingInformationOutputWithContext(context.Background())
}

func (i ThrottlingInformationArgs) ToThrottlingInformationOutputWithContext(ctx context.Context) ThrottlingInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThrottlingInformationOutput)
}

func (i ThrottlingInformationArgs) ToThrottlingInformationPtrOutput() ThrottlingInformationPtrOutput {
	return i.ToThrottlingInformationPtrOutputWithContext(context.Background())
}

func (i ThrottlingInformationArgs) ToThrottlingInformationPtrOutputWithContext(ctx context.Context) ThrottlingInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThrottlingInformationOutput).ToThrottlingInformationPtrOutputWithContext(ctx)
}

// ThrottlingInformationPtrInput is an input type that accepts ThrottlingInformationArgs, ThrottlingInformationPtr and ThrottlingInformationPtrOutput values.
// You can construct a concrete instance of `ThrottlingInformationPtrInput` via:
//
//          ThrottlingInformationArgs{...}
//
//  or:
//
//          nil
type ThrottlingInformationPtrInput interface {
	pulumi.Input

	ToThrottlingInformationPtrOutput() ThrottlingInformationPtrOutput
	ToThrottlingInformationPtrOutputWithContext(context.Context) ThrottlingInformationPtrOutput
}

type throttlingInformationPtrType ThrottlingInformationArgs

func ThrottlingInformationPtr(v *ThrottlingInformationArgs) ThrottlingInformationPtrInput {
	return (*throttlingInformationPtrType)(v)
}

func (*throttlingInformationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ThrottlingInformation)(nil)).Elem()
}

func (i *throttlingInformationPtrType) ToThrottlingInformationPtrOutput() ThrottlingInformationPtrOutput {
	return i.ToThrottlingInformationPtrOutputWithContext(context.Background())
}

func (i *throttlingInformationPtrType) ToThrottlingInformationPtrOutputWithContext(ctx context.Context) ThrottlingInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThrottlingInformationPtrOutput)
}

// Optional throttling information for the alert rule.
type ThrottlingInformationResponse struct {
	// The required duration (in ISO8601 format) to wait before notifying on the alert rule again. The time granularity must be in minutes and minimum value is 0 minutes
	Duration *string `pulumi:"duration"`
}

// Optional throttling information for the alert rule.
type ThrottlingInformationResponseOutput struct{ *pulumi.OutputState }

func (ThrottlingInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThrottlingInformationResponse)(nil)).Elem()
}

func (o ThrottlingInformationResponseOutput) ToThrottlingInformationResponseOutput() ThrottlingInformationResponseOutput {
	return o
}

func (o ThrottlingInformationResponseOutput) ToThrottlingInformationResponseOutputWithContext(ctx context.Context) ThrottlingInformationResponseOutput {
	return o
}

func (o ThrottlingInformationResponseOutput) ToThrottlingInformationResponsePtrOutput() ThrottlingInformationResponsePtrOutput {
	return o.ToThrottlingInformationResponsePtrOutputWithContext(context.Background())
}

func (o ThrottlingInformationResponseOutput) ToThrottlingInformationResponsePtrOutputWithContext(ctx context.Context) ThrottlingInformationResponsePtrOutput {
	return o.ApplyT(func(v ThrottlingInformationResponse) *ThrottlingInformationResponse {
		return &v
	}).(ThrottlingInformationResponsePtrOutput)
}

// The required duration (in ISO8601 format) to wait before notifying on the alert rule again. The time granularity must be in minutes and minimum value is 0 minutes
func (o ThrottlingInformationResponseOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThrottlingInformationResponse) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

type ThrottlingInformationResponsePtrOutput struct{ *pulumi.OutputState }

func (ThrottlingInformationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThrottlingInformationResponse)(nil)).Elem()
}

func (o ThrottlingInformationResponsePtrOutput) ToThrottlingInformationResponsePtrOutput() ThrottlingInformationResponsePtrOutput {
	return o
}

func (o ThrottlingInformationResponsePtrOutput) ToThrottlingInformationResponsePtrOutputWithContext(ctx context.Context) ThrottlingInformationResponsePtrOutput {
	return o
}

func (o ThrottlingInformationResponsePtrOutput) Elem() ThrottlingInformationResponseOutput {
	return o.ApplyT(func(v *ThrottlingInformationResponse) ThrottlingInformationResponse { return *v }).(ThrottlingInformationResponseOutput)
}

// The required duration (in ISO8601 format) to wait before notifying on the alert rule again. The time granularity must be in minutes and minimum value is 0 minutes
func (o ThrottlingInformationResponsePtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThrottlingInformationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ActionGroupsInformationOutput{})
	pulumi.RegisterOutputType(ActionGroupsInformationPtrOutput{})
	pulumi.RegisterOutputType(ActionGroupsInformationResponseOutput{})
	pulumi.RegisterOutputType(ActionGroupsInformationResponsePtrOutput{})
	pulumi.RegisterOutputType(DetectorOutput{})
	pulumi.RegisterOutputType(DetectorPtrOutput{})
	pulumi.RegisterOutputType(DetectorResponseOutput{})
	pulumi.RegisterOutputType(DetectorResponsePtrOutput{})
	pulumi.RegisterOutputType(ThrottlingInformationOutput{})
	pulumi.RegisterOutputType(ThrottlingInformationPtrOutput{})
	pulumi.RegisterOutputType(ThrottlingInformationResponseOutput{})
	pulumi.RegisterOutputType(ThrottlingInformationResponsePtrOutput{})
}
