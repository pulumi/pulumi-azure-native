// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Credential details of the account.
type AccountCredentialDetailsResponse struct {
	// Connection string of the account endpoint to use the account as a storage endpoint on the device.
	AccountConnectionString string `pulumi:"accountConnectionString"`
	// Name of the account.
	AccountName string `pulumi:"accountName"`
	// Type of the account.
	DataAccountType string `pulumi:"dataAccountType"`
	// Per share level unencrypted access credentials.
	ShareCredentialDetails []ShareCredentialDetailsResponse `pulumi:"shareCredentialDetails"`
}

// Additional error info.
type AdditionalErrorInfoResponse struct {
	// Additional error info.
	Info map[string]interface{} `pulumi:"info"`
	// Additional error type.
	Type *string `pulumi:"type"`
}

// Additional error info.
type AdditionalErrorInfoResponseOutput struct{ *pulumi.OutputState }

func (AdditionalErrorInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalErrorInfoResponse)(nil)).Elem()
}

func (o AdditionalErrorInfoResponseOutput) ToAdditionalErrorInfoResponseOutput() AdditionalErrorInfoResponseOutput {
	return o
}

func (o AdditionalErrorInfoResponseOutput) ToAdditionalErrorInfoResponseOutputWithContext(ctx context.Context) AdditionalErrorInfoResponseOutput {
	return o
}

// Additional error info.
func (o AdditionalErrorInfoResponseOutput) Info() pulumi.MapOutput {
	return o.ApplyT(func(v AdditionalErrorInfoResponse) map[string]interface{} { return v.Info }).(pulumi.MapOutput)
}

// Additional error type.
func (o AdditionalErrorInfoResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdditionalErrorInfoResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AdditionalErrorInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (AdditionalErrorInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalErrorInfoResponse)(nil)).Elem()
}

func (o AdditionalErrorInfoResponseArrayOutput) ToAdditionalErrorInfoResponseArrayOutput() AdditionalErrorInfoResponseArrayOutput {
	return o
}

func (o AdditionalErrorInfoResponseArrayOutput) ToAdditionalErrorInfoResponseArrayOutputWithContext(ctx context.Context) AdditionalErrorInfoResponseArrayOutput {
	return o
}

func (o AdditionalErrorInfoResponseArrayOutput) Index(i pulumi.IntInput) AdditionalErrorInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdditionalErrorInfoResponse {
		return vs[0].([]AdditionalErrorInfoResponse)[vs[1].(int)]
	}).(AdditionalErrorInfoResponseOutput)
}

// The Network Adapter configuration of a DataBox.
type ApplianceNetworkConfigurationResponse struct {
	// Mac Address.
	MacAddress string `pulumi:"macAddress"`
	// Name of the network.
	Name string `pulumi:"name"`
}

// Filter details to transfer Azure files
type AzureFileFilterDetails struct {
	// List of full path of the files to be transferred.
	FilePathList []string `pulumi:"filePathList"`
	// Prefix list of the Azure files to be transferred.
	FilePrefixList []string `pulumi:"filePrefixList"`
	// List of file shares to be transferred.
	FileShareList []string `pulumi:"fileShareList"`
}

// AzureFileFilterDetailsInput is an input type that accepts AzureFileFilterDetailsArgs and AzureFileFilterDetailsOutput values.
// You can construct a concrete instance of `AzureFileFilterDetailsInput` via:
//
//          AzureFileFilterDetailsArgs{...}
type AzureFileFilterDetailsInput interface {
	pulumi.Input

	ToAzureFileFilterDetailsOutput() AzureFileFilterDetailsOutput
	ToAzureFileFilterDetailsOutputWithContext(context.Context) AzureFileFilterDetailsOutput
}

// Filter details to transfer Azure files
type AzureFileFilterDetailsArgs struct {
	// List of full path of the files to be transferred.
	FilePathList pulumi.StringArrayInput `pulumi:"filePathList"`
	// Prefix list of the Azure files to be transferred.
	FilePrefixList pulumi.StringArrayInput `pulumi:"filePrefixList"`
	// List of file shares to be transferred.
	FileShareList pulumi.StringArrayInput `pulumi:"fileShareList"`
}

func (AzureFileFilterDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileFilterDetails)(nil)).Elem()
}

func (i AzureFileFilterDetailsArgs) ToAzureFileFilterDetailsOutput() AzureFileFilterDetailsOutput {
	return i.ToAzureFileFilterDetailsOutputWithContext(context.Background())
}

func (i AzureFileFilterDetailsArgs) ToAzureFileFilterDetailsOutputWithContext(ctx context.Context) AzureFileFilterDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileFilterDetailsOutput)
}

func (i AzureFileFilterDetailsArgs) ToAzureFileFilterDetailsPtrOutput() AzureFileFilterDetailsPtrOutput {
	return i.ToAzureFileFilterDetailsPtrOutputWithContext(context.Background())
}

func (i AzureFileFilterDetailsArgs) ToAzureFileFilterDetailsPtrOutputWithContext(ctx context.Context) AzureFileFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileFilterDetailsOutput).ToAzureFileFilterDetailsPtrOutputWithContext(ctx)
}

// AzureFileFilterDetailsPtrInput is an input type that accepts AzureFileFilterDetailsArgs, AzureFileFilterDetailsPtr and AzureFileFilterDetailsPtrOutput values.
// You can construct a concrete instance of `AzureFileFilterDetailsPtrInput` via:
//
//          AzureFileFilterDetailsArgs{...}
//
//  or:
//
//          nil
type AzureFileFilterDetailsPtrInput interface {
	pulumi.Input

	ToAzureFileFilterDetailsPtrOutput() AzureFileFilterDetailsPtrOutput
	ToAzureFileFilterDetailsPtrOutputWithContext(context.Context) AzureFileFilterDetailsPtrOutput
}

type azureFileFilterDetailsPtrType AzureFileFilterDetailsArgs

func AzureFileFilterDetailsPtr(v *AzureFileFilterDetailsArgs) AzureFileFilterDetailsPtrInput {
	return (*azureFileFilterDetailsPtrType)(v)
}

func (*azureFileFilterDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileFilterDetails)(nil)).Elem()
}

func (i *azureFileFilterDetailsPtrType) ToAzureFileFilterDetailsPtrOutput() AzureFileFilterDetailsPtrOutput {
	return i.ToAzureFileFilterDetailsPtrOutputWithContext(context.Background())
}

func (i *azureFileFilterDetailsPtrType) ToAzureFileFilterDetailsPtrOutputWithContext(ctx context.Context) AzureFileFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileFilterDetailsPtrOutput)
}

// Filter details to transfer Azure files
type AzureFileFilterDetailsResponse struct {
	// List of full path of the files to be transferred.
	FilePathList []string `pulumi:"filePathList"`
	// Prefix list of the Azure files to be transferred.
	FilePrefixList []string `pulumi:"filePrefixList"`
	// List of file shares to be transferred.
	FileShareList []string `pulumi:"fileShareList"`
}

// Filter details to transfer Azure files
type AzureFileFilterDetailsResponseOutput struct{ *pulumi.OutputState }

func (AzureFileFilterDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileFilterDetailsResponse)(nil)).Elem()
}

func (o AzureFileFilterDetailsResponseOutput) ToAzureFileFilterDetailsResponseOutput() AzureFileFilterDetailsResponseOutput {
	return o
}

func (o AzureFileFilterDetailsResponseOutput) ToAzureFileFilterDetailsResponseOutputWithContext(ctx context.Context) AzureFileFilterDetailsResponseOutput {
	return o
}

func (o AzureFileFilterDetailsResponseOutput) ToAzureFileFilterDetailsResponsePtrOutput() AzureFileFilterDetailsResponsePtrOutput {
	return o.ToAzureFileFilterDetailsResponsePtrOutputWithContext(context.Background())
}

func (o AzureFileFilterDetailsResponseOutput) ToAzureFileFilterDetailsResponsePtrOutputWithContext(ctx context.Context) AzureFileFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v AzureFileFilterDetailsResponse) *AzureFileFilterDetailsResponse {
		return &v
	}).(AzureFileFilterDetailsResponsePtrOutput)
}

// List of full path of the files to be transferred.
func (o AzureFileFilterDetailsResponseOutput) FilePathList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileFilterDetailsResponse) []string { return v.FilePathList }).(pulumi.StringArrayOutput)
}

// Prefix list of the Azure files to be transferred.
func (o AzureFileFilterDetailsResponseOutput) FilePrefixList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileFilterDetailsResponse) []string { return v.FilePrefixList }).(pulumi.StringArrayOutput)
}

// List of file shares to be transferred.
func (o AzureFileFilterDetailsResponseOutput) FileShareList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileFilterDetailsResponse) []string { return v.FileShareList }).(pulumi.StringArrayOutput)
}

type AzureFileFilterDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFileFilterDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileFilterDetailsResponse)(nil)).Elem()
}

func (o AzureFileFilterDetailsResponsePtrOutput) ToAzureFileFilterDetailsResponsePtrOutput() AzureFileFilterDetailsResponsePtrOutput {
	return o
}

func (o AzureFileFilterDetailsResponsePtrOutput) ToAzureFileFilterDetailsResponsePtrOutputWithContext(ctx context.Context) AzureFileFilterDetailsResponsePtrOutput {
	return o
}

func (o AzureFileFilterDetailsResponsePtrOutput) Elem() AzureFileFilterDetailsResponseOutput {
	return o.ApplyT(func(v *AzureFileFilterDetailsResponse) AzureFileFilterDetailsResponse { return *v }).(AzureFileFilterDetailsResponseOutput)
}

// List of full path of the files to be transferred.
func (o AzureFileFilterDetailsResponsePtrOutput) FilePathList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFileFilterDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.FilePathList
	}).(pulumi.StringArrayOutput)
}

// Prefix list of the Azure files to be transferred.
func (o AzureFileFilterDetailsResponsePtrOutput) FilePrefixList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFileFilterDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.FilePrefixList
	}).(pulumi.StringArrayOutput)
}

// List of file shares to be transferred.
func (o AzureFileFilterDetailsResponsePtrOutput) FileShareList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFileFilterDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.FileShareList
	}).(pulumi.StringArrayOutput)
}

// Filter details to transfer Azure Blobs
type BlobFilterDetails struct {
	// List of full path of the blobs to be transferred.
	BlobPathList []string `pulumi:"blobPathList"`
	// Prefix list of the Azure blobs to be transferred.
	BlobPrefixList []string `pulumi:"blobPrefixList"`
	// List of blob containers to be transferred.
	ContainerList []string `pulumi:"containerList"`
}

// BlobFilterDetailsInput is an input type that accepts BlobFilterDetailsArgs and BlobFilterDetailsOutput values.
// You can construct a concrete instance of `BlobFilterDetailsInput` via:
//
//          BlobFilterDetailsArgs{...}
type BlobFilterDetailsInput interface {
	pulumi.Input

	ToBlobFilterDetailsOutput() BlobFilterDetailsOutput
	ToBlobFilterDetailsOutputWithContext(context.Context) BlobFilterDetailsOutput
}

// Filter details to transfer Azure Blobs
type BlobFilterDetailsArgs struct {
	// List of full path of the blobs to be transferred.
	BlobPathList pulumi.StringArrayInput `pulumi:"blobPathList"`
	// Prefix list of the Azure blobs to be transferred.
	BlobPrefixList pulumi.StringArrayInput `pulumi:"blobPrefixList"`
	// List of blob containers to be transferred.
	ContainerList pulumi.StringArrayInput `pulumi:"containerList"`
}

func (BlobFilterDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobFilterDetails)(nil)).Elem()
}

func (i BlobFilterDetailsArgs) ToBlobFilterDetailsOutput() BlobFilterDetailsOutput {
	return i.ToBlobFilterDetailsOutputWithContext(context.Background())
}

func (i BlobFilterDetailsArgs) ToBlobFilterDetailsOutputWithContext(ctx context.Context) BlobFilterDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobFilterDetailsOutput)
}

func (i BlobFilterDetailsArgs) ToBlobFilterDetailsPtrOutput() BlobFilterDetailsPtrOutput {
	return i.ToBlobFilterDetailsPtrOutputWithContext(context.Background())
}

func (i BlobFilterDetailsArgs) ToBlobFilterDetailsPtrOutputWithContext(ctx context.Context) BlobFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobFilterDetailsOutput).ToBlobFilterDetailsPtrOutputWithContext(ctx)
}

// BlobFilterDetailsPtrInput is an input type that accepts BlobFilterDetailsArgs, BlobFilterDetailsPtr and BlobFilterDetailsPtrOutput values.
// You can construct a concrete instance of `BlobFilterDetailsPtrInput` via:
//
//          BlobFilterDetailsArgs{...}
//
//  or:
//
//          nil
type BlobFilterDetailsPtrInput interface {
	pulumi.Input

	ToBlobFilterDetailsPtrOutput() BlobFilterDetailsPtrOutput
	ToBlobFilterDetailsPtrOutputWithContext(context.Context) BlobFilterDetailsPtrOutput
}

type blobFilterDetailsPtrType BlobFilterDetailsArgs

func BlobFilterDetailsPtr(v *BlobFilterDetailsArgs) BlobFilterDetailsPtrInput {
	return (*blobFilterDetailsPtrType)(v)
}

func (*blobFilterDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobFilterDetails)(nil)).Elem()
}

func (i *blobFilterDetailsPtrType) ToBlobFilterDetailsPtrOutput() BlobFilterDetailsPtrOutput {
	return i.ToBlobFilterDetailsPtrOutputWithContext(context.Background())
}

func (i *blobFilterDetailsPtrType) ToBlobFilterDetailsPtrOutputWithContext(ctx context.Context) BlobFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobFilterDetailsPtrOutput)
}

// Filter details to transfer Azure Blobs
type BlobFilterDetailsResponse struct {
	// List of full path of the blobs to be transferred.
	BlobPathList []string `pulumi:"blobPathList"`
	// Prefix list of the Azure blobs to be transferred.
	BlobPrefixList []string `pulumi:"blobPrefixList"`
	// List of blob containers to be transferred.
	ContainerList []string `pulumi:"containerList"`
}

// Filter details to transfer Azure Blobs
type BlobFilterDetailsResponseOutput struct{ *pulumi.OutputState }

func (BlobFilterDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobFilterDetailsResponse)(nil)).Elem()
}

func (o BlobFilterDetailsResponseOutput) ToBlobFilterDetailsResponseOutput() BlobFilterDetailsResponseOutput {
	return o
}

func (o BlobFilterDetailsResponseOutput) ToBlobFilterDetailsResponseOutputWithContext(ctx context.Context) BlobFilterDetailsResponseOutput {
	return o
}

func (o BlobFilterDetailsResponseOutput) ToBlobFilterDetailsResponsePtrOutput() BlobFilterDetailsResponsePtrOutput {
	return o.ToBlobFilterDetailsResponsePtrOutputWithContext(context.Background())
}

func (o BlobFilterDetailsResponseOutput) ToBlobFilterDetailsResponsePtrOutputWithContext(ctx context.Context) BlobFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v BlobFilterDetailsResponse) *BlobFilterDetailsResponse {
		return &v
	}).(BlobFilterDetailsResponsePtrOutput)
}

// List of full path of the blobs to be transferred.
func (o BlobFilterDetailsResponseOutput) BlobPathList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlobFilterDetailsResponse) []string { return v.BlobPathList }).(pulumi.StringArrayOutput)
}

// Prefix list of the Azure blobs to be transferred.
func (o BlobFilterDetailsResponseOutput) BlobPrefixList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlobFilterDetailsResponse) []string { return v.BlobPrefixList }).(pulumi.StringArrayOutput)
}

// List of blob containers to be transferred.
func (o BlobFilterDetailsResponseOutput) ContainerList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlobFilterDetailsResponse) []string { return v.ContainerList }).(pulumi.StringArrayOutput)
}

type BlobFilterDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (BlobFilterDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobFilterDetailsResponse)(nil)).Elem()
}

func (o BlobFilterDetailsResponsePtrOutput) ToBlobFilterDetailsResponsePtrOutput() BlobFilterDetailsResponsePtrOutput {
	return o
}

func (o BlobFilterDetailsResponsePtrOutput) ToBlobFilterDetailsResponsePtrOutputWithContext(ctx context.Context) BlobFilterDetailsResponsePtrOutput {
	return o
}

func (o BlobFilterDetailsResponsePtrOutput) Elem() BlobFilterDetailsResponseOutput {
	return o.ApplyT(func(v *BlobFilterDetailsResponse) BlobFilterDetailsResponse { return *v }).(BlobFilterDetailsResponseOutput)
}

// List of full path of the blobs to be transferred.
func (o BlobFilterDetailsResponsePtrOutput) BlobPathList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BlobFilterDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.BlobPathList
	}).(pulumi.StringArrayOutput)
}

// Prefix list of the Azure blobs to be transferred.
func (o BlobFilterDetailsResponsePtrOutput) BlobPrefixList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BlobFilterDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.BlobPrefixList
	}).(pulumi.StringArrayOutput)
}

// List of blob containers to be transferred.
func (o BlobFilterDetailsResponsePtrOutput) ContainerList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BlobFilterDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.ContainerList
	}).(pulumi.StringArrayOutput)
}

// Cloud error.
type CloudErrorResponse struct {
	// Cloud error additional info.
	AdditionalInfo []AdditionalErrorInfoResponse `pulumi:"additionalInfo"`
	// Cloud error code.
	Code *string `pulumi:"code"`
	// Cloud error details.
	Details []CloudErrorResponse `pulumi:"details"`
	// Cloud error message.
	Message *string `pulumi:"message"`
	// Cloud error target.
	Target *string `pulumi:"target"`
}

// Cloud error.
type CloudErrorResponseOutput struct{ *pulumi.OutputState }

func (CloudErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudErrorResponse)(nil)).Elem()
}

func (o CloudErrorResponseOutput) ToCloudErrorResponseOutput() CloudErrorResponseOutput {
	return o
}

func (o CloudErrorResponseOutput) ToCloudErrorResponseOutputWithContext(ctx context.Context) CloudErrorResponseOutput {
	return o
}

func (o CloudErrorResponseOutput) ToCloudErrorResponsePtrOutput() CloudErrorResponsePtrOutput {
	return o.ToCloudErrorResponsePtrOutputWithContext(context.Background())
}

func (o CloudErrorResponseOutput) ToCloudErrorResponsePtrOutputWithContext(ctx context.Context) CloudErrorResponsePtrOutput {
	return o.ApplyT(func(v CloudErrorResponse) *CloudErrorResponse {
		return &v
	}).(CloudErrorResponsePtrOutput)
}

// Cloud error additional info.
func (o CloudErrorResponseOutput) AdditionalInfo() AdditionalErrorInfoResponseArrayOutput {
	return o.ApplyT(func(v CloudErrorResponse) []AdditionalErrorInfoResponse { return v.AdditionalInfo }).(AdditionalErrorInfoResponseArrayOutput)
}

// Cloud error code.
func (o CloudErrorResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudErrorResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Cloud error details.
func (o CloudErrorResponseOutput) Details() CloudErrorResponseArrayOutput {
	return o.ApplyT(func(v CloudErrorResponse) []CloudErrorResponse { return v.Details }).(CloudErrorResponseArrayOutput)
}

// Cloud error message.
func (o CloudErrorResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudErrorResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Cloud error target.
func (o CloudErrorResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudErrorResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type CloudErrorResponsePtrOutput struct{ *pulumi.OutputState }

func (CloudErrorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudErrorResponse)(nil)).Elem()
}

func (o CloudErrorResponsePtrOutput) ToCloudErrorResponsePtrOutput() CloudErrorResponsePtrOutput {
	return o
}

func (o CloudErrorResponsePtrOutput) ToCloudErrorResponsePtrOutputWithContext(ctx context.Context) CloudErrorResponsePtrOutput {
	return o
}

func (o CloudErrorResponsePtrOutput) Elem() CloudErrorResponseOutput {
	return o.ApplyT(func(v *CloudErrorResponse) CloudErrorResponse { return *v }).(CloudErrorResponseOutput)
}

// Cloud error additional info.
func (o CloudErrorResponsePtrOutput) AdditionalInfo() AdditionalErrorInfoResponseArrayOutput {
	return o.ApplyT(func(v *CloudErrorResponse) []AdditionalErrorInfoResponse {
		if v == nil {
			return nil
		}
		return v.AdditionalInfo
	}).(AdditionalErrorInfoResponseArrayOutput)
}

// Cloud error code.
func (o CloudErrorResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// Cloud error details.
func (o CloudErrorResponsePtrOutput) Details() CloudErrorResponseArrayOutput {
	return o.ApplyT(func(v *CloudErrorResponse) []CloudErrorResponse {
		if v == nil {
			return nil
		}
		return v.Details
	}).(CloudErrorResponseArrayOutput)
}

// Cloud error message.
func (o CloudErrorResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Cloud error target.
func (o CloudErrorResponsePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

type CloudErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (CloudErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudErrorResponse)(nil)).Elem()
}

func (o CloudErrorResponseArrayOutput) ToCloudErrorResponseArrayOutput() CloudErrorResponseArrayOutput {
	return o
}

func (o CloudErrorResponseArrayOutput) ToCloudErrorResponseArrayOutputWithContext(ctx context.Context) CloudErrorResponseArrayOutput {
	return o
}

func (o CloudErrorResponseArrayOutput) Index(i pulumi.IntInput) CloudErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudErrorResponse {
		return vs[0].([]CloudErrorResponse)[vs[1].(int)]
	}).(CloudErrorResponseOutput)
}

// Contact Details.
type ContactDetails struct {
	// Contact name of the person.
	ContactName string `pulumi:"contactName"`
	// List of Email-ids to be notified about job progress.
	EmailList []string `pulumi:"emailList"`
	// Mobile number of the contact person.
	Mobile *string `pulumi:"mobile"`
	// Notification preference for a job stage.
	NotificationPreference []NotificationPreference `pulumi:"notificationPreference"`
	// Phone number of the contact person.
	Phone string `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension *string `pulumi:"phoneExtension"`
}

// ContactDetailsInput is an input type that accepts ContactDetailsArgs and ContactDetailsOutput values.
// You can construct a concrete instance of `ContactDetailsInput` via:
//
//          ContactDetailsArgs{...}
type ContactDetailsInput interface {
	pulumi.Input

	ToContactDetailsOutput() ContactDetailsOutput
	ToContactDetailsOutputWithContext(context.Context) ContactDetailsOutput
}

// Contact Details.
type ContactDetailsArgs struct {
	// Contact name of the person.
	ContactName pulumi.StringInput `pulumi:"contactName"`
	// List of Email-ids to be notified about job progress.
	EmailList pulumi.StringArrayInput `pulumi:"emailList"`
	// Mobile number of the contact person.
	Mobile pulumi.StringPtrInput `pulumi:"mobile"`
	// Notification preference for a job stage.
	NotificationPreference NotificationPreferenceArrayInput `pulumi:"notificationPreference"`
	// Phone number of the contact person.
	Phone pulumi.StringInput `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension pulumi.StringPtrInput `pulumi:"phoneExtension"`
}

func (ContactDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetails)(nil)).Elem()
}

func (i ContactDetailsArgs) ToContactDetailsOutput() ContactDetailsOutput {
	return i.ToContactDetailsOutputWithContext(context.Background())
}

func (i ContactDetailsArgs) ToContactDetailsOutputWithContext(ctx context.Context) ContactDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsOutput)
}

// Contact Details.
type ContactDetailsResponse struct {
	// Contact name of the person.
	ContactName string `pulumi:"contactName"`
	// List of Email-ids to be notified about job progress.
	EmailList []string `pulumi:"emailList"`
	// Mobile number of the contact person.
	Mobile *string `pulumi:"mobile"`
	// Notification preference for a job stage.
	NotificationPreference []NotificationPreferenceResponse `pulumi:"notificationPreference"`
	// Phone number of the contact person.
	Phone string `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension *string `pulumi:"phoneExtension"`
}

// Contact Details.
type ContactDetailsResponseOutput struct{ *pulumi.OutputState }

func (ContactDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetailsResponse)(nil)).Elem()
}

func (o ContactDetailsResponseOutput) ToContactDetailsResponseOutput() ContactDetailsResponseOutput {
	return o
}

func (o ContactDetailsResponseOutput) ToContactDetailsResponseOutputWithContext(ctx context.Context) ContactDetailsResponseOutput {
	return o
}

// Contact name of the person.
func (o ContactDetailsResponseOutput) ContactName() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetailsResponse) string { return v.ContactName }).(pulumi.StringOutput)
}

// List of Email-ids to be notified about job progress.
func (o ContactDetailsResponseOutput) EmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContactDetailsResponse) []string { return v.EmailList }).(pulumi.StringArrayOutput)
}

// Mobile number of the contact person.
func (o ContactDetailsResponseOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDetailsResponse) *string { return v.Mobile }).(pulumi.StringPtrOutput)
}

// Notification preference for a job stage.
func (o ContactDetailsResponseOutput) NotificationPreference() NotificationPreferenceResponseArrayOutput {
	return o.ApplyT(func(v ContactDetailsResponse) []NotificationPreferenceResponse { return v.NotificationPreference }).(NotificationPreferenceResponseArrayOutput)
}

// Phone number of the contact person.
func (o ContactDetailsResponseOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetailsResponse) string { return v.Phone }).(pulumi.StringOutput)
}

// Phone extension number of the contact person.
func (o ContactDetailsResponseOutput) PhoneExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDetailsResponse) *string { return v.PhoneExtension }).(pulumi.StringPtrOutput)
}

// Copy progress.
type CopyProgressResponse struct {
	// Id of the account where the data needs to be uploaded.
	AccountId string `pulumi:"accountId"`
	// To indicate bytes transferred.
	BytesProcessed int `pulumi:"bytesProcessed"`
	// Data Account Type.
	DataAccountType string `pulumi:"dataAccountType"`
	// To indicate directories errored out in the job.
	DirectoriesErroredOut int `pulumi:"directoriesErroredOut"`
	// Number of files which could not be copied
	FilesErroredOut int `pulumi:"filesErroredOut"`
	// Number of files processed
	FilesProcessed int `pulumi:"filesProcessed"`
	// To indicate directories renamed
	InvalidDirectoriesProcessed int `pulumi:"invalidDirectoriesProcessed"`
	// Total amount of data not adhering to azure naming conventions which were processed by automatic renaming
	InvalidFileBytesUploaded int `pulumi:"invalidFileBytesUploaded"`
	// Number of files not adhering to azure naming conventions which were processed by automatic renaming
	InvalidFilesProcessed int `pulumi:"invalidFilesProcessed"`
	// To indicate if enumeration of data is in progress.
	// Until this is true, the TotalBytesToProcess may not be valid.
	IsEnumerationInProgress bool `pulumi:"isEnumerationInProgress"`
	// Number of folders not adhering to azure naming conventions which were processed by automatic renaming
	RenamedContainerCount int `pulumi:"renamedContainerCount"`
	// Name of the storage account. This will be empty for data account types other than storage account.
	StorageAccountName string `pulumi:"storageAccountName"`
	// Total amount of data to be processed by the job.
	TotalBytesToProcess int `pulumi:"totalBytesToProcess"`
	// Total files to process
	TotalFilesToProcess int `pulumi:"totalFilesToProcess"`
	// Transfer type of data
	TransferType string `pulumi:"transferType"`
}

// Copy progress.
type CopyProgressResponseOutput struct{ *pulumi.OutputState }

func (CopyProgressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CopyProgressResponse)(nil)).Elem()
}

func (o CopyProgressResponseOutput) ToCopyProgressResponseOutput() CopyProgressResponseOutput {
	return o
}

func (o CopyProgressResponseOutput) ToCopyProgressResponseOutputWithContext(ctx context.Context) CopyProgressResponseOutput {
	return o
}

// Id of the account where the data needs to be uploaded.
func (o CopyProgressResponseOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v CopyProgressResponse) string { return v.AccountId }).(pulumi.StringOutput)
}

// To indicate bytes transferred.
func (o CopyProgressResponseOutput) BytesProcessed() pulumi.IntOutput {
	return o.ApplyT(func(v CopyProgressResponse) int { return v.BytesProcessed }).(pulumi.IntOutput)
}

// Data Account Type.
func (o CopyProgressResponseOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v CopyProgressResponse) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// To indicate directories errored out in the job.
func (o CopyProgressResponseOutput) DirectoriesErroredOut() pulumi.IntOutput {
	return o.ApplyT(func(v CopyProgressResponse) int { return v.DirectoriesErroredOut }).(pulumi.IntOutput)
}

// Number of files which could not be copied
func (o CopyProgressResponseOutput) FilesErroredOut() pulumi.IntOutput {
	return o.ApplyT(func(v CopyProgressResponse) int { return v.FilesErroredOut }).(pulumi.IntOutput)
}

// Number of files processed
func (o CopyProgressResponseOutput) FilesProcessed() pulumi.IntOutput {
	return o.ApplyT(func(v CopyProgressResponse) int { return v.FilesProcessed }).(pulumi.IntOutput)
}

// To indicate directories renamed
func (o CopyProgressResponseOutput) InvalidDirectoriesProcessed() pulumi.IntOutput {
	return o.ApplyT(func(v CopyProgressResponse) int { return v.InvalidDirectoriesProcessed }).(pulumi.IntOutput)
}

// Total amount of data not adhering to azure naming conventions which were processed by automatic renaming
func (o CopyProgressResponseOutput) InvalidFileBytesUploaded() pulumi.IntOutput {
	return o.ApplyT(func(v CopyProgressResponse) int { return v.InvalidFileBytesUploaded }).(pulumi.IntOutput)
}

// Number of files not adhering to azure naming conventions which were processed by automatic renaming
func (o CopyProgressResponseOutput) InvalidFilesProcessed() pulumi.IntOutput {
	return o.ApplyT(func(v CopyProgressResponse) int { return v.InvalidFilesProcessed }).(pulumi.IntOutput)
}

// To indicate if enumeration of data is in progress.
// Until this is true, the TotalBytesToProcess may not be valid.
func (o CopyProgressResponseOutput) IsEnumerationInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v CopyProgressResponse) bool { return v.IsEnumerationInProgress }).(pulumi.BoolOutput)
}

// Number of folders not adhering to azure naming conventions which were processed by automatic renaming
func (o CopyProgressResponseOutput) RenamedContainerCount() pulumi.IntOutput {
	return o.ApplyT(func(v CopyProgressResponse) int { return v.RenamedContainerCount }).(pulumi.IntOutput)
}

// Name of the storage account. This will be empty for data account types other than storage account.
func (o CopyProgressResponseOutput) StorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v CopyProgressResponse) string { return v.StorageAccountName }).(pulumi.StringOutput)
}

// Total amount of data to be processed by the job.
func (o CopyProgressResponseOutput) TotalBytesToProcess() pulumi.IntOutput {
	return o.ApplyT(func(v CopyProgressResponse) int { return v.TotalBytesToProcess }).(pulumi.IntOutput)
}

// Total files to process
func (o CopyProgressResponseOutput) TotalFilesToProcess() pulumi.IntOutput {
	return o.ApplyT(func(v CopyProgressResponse) int { return v.TotalFilesToProcess }).(pulumi.IntOutput)
}

// Transfer type of data
func (o CopyProgressResponseOutput) TransferType() pulumi.StringOutput {
	return o.ApplyT(func(v CopyProgressResponse) string { return v.TransferType }).(pulumi.StringOutput)
}

type CopyProgressResponseArrayOutput struct{ *pulumi.OutputState }

func (CopyProgressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CopyProgressResponse)(nil)).Elem()
}

func (o CopyProgressResponseArrayOutput) ToCopyProgressResponseArrayOutput() CopyProgressResponseArrayOutput {
	return o
}

func (o CopyProgressResponseArrayOutput) ToCopyProgressResponseArrayOutputWithContext(ctx context.Context) CopyProgressResponseArrayOutput {
	return o
}

func (o CopyProgressResponseArrayOutput) Index(i pulumi.IntInput) CopyProgressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CopyProgressResponse {
		return vs[0].([]CopyProgressResponse)[vs[1].(int)]
	}).(CopyProgressResponseOutput)
}

// Copy log details for a storage account of a DataBox job
type DataBoxAccountCopyLogDetailsResponse struct {
	// Account name.
	AccountName string `pulumi:"accountName"`
	// Indicates the type of job details.
	CopyLogDetailsType string `pulumi:"copyLogDetailsType"`
	// Link for copy logs.
	CopyLogLink string `pulumi:"copyLogLink"`
	// Link for copy verbose logs. This will be set only when LogCollectionLevel is set to Verbose.
	CopyVerboseLogLink string `pulumi:"copyVerboseLogLink"`
}

// Copy log details for a storage account of a DataBox job
type DataBoxAccountCopyLogDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxAccountCopyLogDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxAccountCopyLogDetailsResponse)(nil)).Elem()
}

func (o DataBoxAccountCopyLogDetailsResponseOutput) ToDataBoxAccountCopyLogDetailsResponseOutput() DataBoxAccountCopyLogDetailsResponseOutput {
	return o
}

func (o DataBoxAccountCopyLogDetailsResponseOutput) ToDataBoxAccountCopyLogDetailsResponseOutputWithContext(ctx context.Context) DataBoxAccountCopyLogDetailsResponseOutput {
	return o
}

// Account name.
func (o DataBoxAccountCopyLogDetailsResponseOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxAccountCopyLogDetailsResponse) string { return v.AccountName }).(pulumi.StringOutput)
}

// Indicates the type of job details.
func (o DataBoxAccountCopyLogDetailsResponseOutput) CopyLogDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxAccountCopyLogDetailsResponse) string { return v.CopyLogDetailsType }).(pulumi.StringOutput)
}

// Link for copy logs.
func (o DataBoxAccountCopyLogDetailsResponseOutput) CopyLogLink() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxAccountCopyLogDetailsResponse) string { return v.CopyLogLink }).(pulumi.StringOutput)
}

// Link for copy verbose logs. This will be set only when LogCollectionLevel is set to Verbose.
func (o DataBoxAccountCopyLogDetailsResponseOutput) CopyVerboseLogLink() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxAccountCopyLogDetailsResponse) string { return v.CopyVerboseLogLink }).(pulumi.StringOutput)
}

// Copy Log Details for a disk
type DataBoxDiskCopyLogDetailsResponse struct {
	// Indicates the type of job details.
	CopyLogDetailsType string `pulumi:"copyLogDetailsType"`
	// Disk Serial Number.
	DiskSerialNumber string `pulumi:"diskSerialNumber"`
	// Link for copy error logs.
	ErrorLogLink string `pulumi:"errorLogLink"`
	// Link for copy verbose logs.
	VerboseLogLink string `pulumi:"verboseLogLink"`
}

// Copy Log Details for a disk
type DataBoxDiskCopyLogDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxDiskCopyLogDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxDiskCopyLogDetailsResponse)(nil)).Elem()
}

func (o DataBoxDiskCopyLogDetailsResponseOutput) ToDataBoxDiskCopyLogDetailsResponseOutput() DataBoxDiskCopyLogDetailsResponseOutput {
	return o
}

func (o DataBoxDiskCopyLogDetailsResponseOutput) ToDataBoxDiskCopyLogDetailsResponseOutputWithContext(ctx context.Context) DataBoxDiskCopyLogDetailsResponseOutput {
	return o
}

// Indicates the type of job details.
func (o DataBoxDiskCopyLogDetailsResponseOutput) CopyLogDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskCopyLogDetailsResponse) string { return v.CopyLogDetailsType }).(pulumi.StringOutput)
}

// Disk Serial Number.
func (o DataBoxDiskCopyLogDetailsResponseOutput) DiskSerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskCopyLogDetailsResponse) string { return v.DiskSerialNumber }).(pulumi.StringOutput)
}

// Link for copy error logs.
func (o DataBoxDiskCopyLogDetailsResponseOutput) ErrorLogLink() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskCopyLogDetailsResponse) string { return v.ErrorLogLink }).(pulumi.StringOutput)
}

// Link for copy verbose logs.
func (o DataBoxDiskCopyLogDetailsResponseOutput) VerboseLogLink() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskCopyLogDetailsResponse) string { return v.VerboseLogLink }).(pulumi.StringOutput)
}

// DataBox Disk Copy Progress
type DataBoxDiskCopyProgressResponse struct {
	// Bytes copied during the copy of disk.
	BytesCopied int `pulumi:"bytesCopied"`
	// Indicates the percentage completed for the copy of the disk.
	PercentComplete int `pulumi:"percentComplete"`
	// The serial number of the disk
	SerialNumber string `pulumi:"serialNumber"`
	// The Status of the copy
	Status string `pulumi:"status"`
}

// DataBox Disk Copy Progress
type DataBoxDiskCopyProgressResponseOutput struct{ *pulumi.OutputState }

func (DataBoxDiskCopyProgressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxDiskCopyProgressResponse)(nil)).Elem()
}

func (o DataBoxDiskCopyProgressResponseOutput) ToDataBoxDiskCopyProgressResponseOutput() DataBoxDiskCopyProgressResponseOutput {
	return o
}

func (o DataBoxDiskCopyProgressResponseOutput) ToDataBoxDiskCopyProgressResponseOutputWithContext(ctx context.Context) DataBoxDiskCopyProgressResponseOutput {
	return o
}

// Bytes copied during the copy of disk.
func (o DataBoxDiskCopyProgressResponseOutput) BytesCopied() pulumi.IntOutput {
	return o.ApplyT(func(v DataBoxDiskCopyProgressResponse) int { return v.BytesCopied }).(pulumi.IntOutput)
}

// Indicates the percentage completed for the copy of the disk.
func (o DataBoxDiskCopyProgressResponseOutput) PercentComplete() pulumi.IntOutput {
	return o.ApplyT(func(v DataBoxDiskCopyProgressResponse) int { return v.PercentComplete }).(pulumi.IntOutput)
}

// The serial number of the disk
func (o DataBoxDiskCopyProgressResponseOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskCopyProgressResponse) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// The Status of the copy
func (o DataBoxDiskCopyProgressResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskCopyProgressResponse) string { return v.Status }).(pulumi.StringOutput)
}

type DataBoxDiskCopyProgressResponseArrayOutput struct{ *pulumi.OutputState }

func (DataBoxDiskCopyProgressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataBoxDiskCopyProgressResponse)(nil)).Elem()
}

func (o DataBoxDiskCopyProgressResponseArrayOutput) ToDataBoxDiskCopyProgressResponseArrayOutput() DataBoxDiskCopyProgressResponseArrayOutput {
	return o
}

func (o DataBoxDiskCopyProgressResponseArrayOutput) ToDataBoxDiskCopyProgressResponseArrayOutputWithContext(ctx context.Context) DataBoxDiskCopyProgressResponseArrayOutput {
	return o
}

func (o DataBoxDiskCopyProgressResponseArrayOutput) Index(i pulumi.IntInput) DataBoxDiskCopyProgressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataBoxDiskCopyProgressResponse {
		return vs[0].([]DataBoxDiskCopyProgressResponse)[vs[1].(int)]
	}).(DataBoxDiskCopyProgressResponseOutput)
}

// DataBox Disk Job Details.
type DataBoxDiskJobDetails struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetails `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetails `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetails `pulumi:"dataImportDetails"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTerabytes *int `pulumi:"expectedDataSizeInTerabytes"`
	// Indicates the type of job details.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// User entered passkey for DataBox Disk job.
	Passkey *string `pulumi:"passkey"`
	// Preferences for the order.
	Preferences *Preferences `pulumi:"preferences"`
	// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
	PreferredDisks map[string]int `pulumi:"preferredDisks"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddress `pulumi:"shippingAddress"`
}

// DataBoxDiskJobDetailsInput is an input type that accepts DataBoxDiskJobDetailsArgs and DataBoxDiskJobDetailsOutput values.
// You can construct a concrete instance of `DataBoxDiskJobDetailsInput` via:
//
//          DataBoxDiskJobDetailsArgs{...}
type DataBoxDiskJobDetailsInput interface {
	pulumi.Input

	ToDataBoxDiskJobDetailsOutput() DataBoxDiskJobDetailsOutput
	ToDataBoxDiskJobDetailsOutputWithContext(context.Context) DataBoxDiskJobDetailsOutput
}

// DataBox Disk Job Details.
type DataBoxDiskJobDetailsArgs struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsInput `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails DataExportDetailsArrayInput `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails DataImportDetailsArrayInput `pulumi:"dataImportDetails"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTerabytes pulumi.IntPtrInput `pulumi:"expectedDataSizeInTerabytes"`
	// Indicates the type of job details.
	JobDetailsType pulumi.StringInput `pulumi:"jobDetailsType"`
	// User entered passkey for DataBox Disk job.
	Passkey pulumi.StringPtrInput `pulumi:"passkey"`
	// Preferences for the order.
	Preferences PreferencesPtrInput `pulumi:"preferences"`
	// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
	PreferredDisks pulumi.IntMapInput `pulumi:"preferredDisks"`
	// Shipping address of the customer.
	ShippingAddress ShippingAddressPtrInput `pulumi:"shippingAddress"`
}

func (DataBoxDiskJobDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxDiskJobDetails)(nil)).Elem()
}

func (i DataBoxDiskJobDetailsArgs) ToDataBoxDiskJobDetailsOutput() DataBoxDiskJobDetailsOutput {
	return i.ToDataBoxDiskJobDetailsOutputWithContext(context.Background())
}

func (i DataBoxDiskJobDetailsArgs) ToDataBoxDiskJobDetailsOutputWithContext(ctx context.Context) DataBoxDiskJobDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxDiskJobDetailsOutput)
}

// DataBox Disk Job Details.
type DataBoxDiskJobDetailsResponse struct {
	// Shared access key to download the chain of custody logs
	ChainOfCustodySasKey string `pulumi:"chainOfCustodySasKey"`
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsResponse `pulumi:"contactDetails"`
	// List of copy log details.
	CopyLogDetails []interface{} `pulumi:"copyLogDetails"`
	// Copy progress per disk.
	CopyProgress []DataBoxDiskCopyProgressResponse `pulumi:"copyProgress"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetailsResponse `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetailsResponse `pulumi:"dataImportDetails"`
	// Delivery package shipping details.
	DeliveryPackage PackageShippingDetailsResponse `pulumi:"deliveryPackage"`
	// Contains the map of disk serial number to the disk size being used for the job. Is returned only after the disks are shipped to the customer.
	DisksAndSizeDetails map[string]int `pulumi:"disksAndSizeDetails"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTerabytes *int `pulumi:"expectedDataSizeInTerabytes"`
	// Indicates the type of job details.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// List of stages that run in the job.
	JobStages []JobStagesResponse `pulumi:"jobStages"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey KeyEncryptionKeyResponse `pulumi:"keyEncryptionKey"`
	// User entered passkey for DataBox Disk job.
	Passkey *string `pulumi:"passkey"`
	// Preferences for the order.
	Preferences *PreferencesResponse `pulumi:"preferences"`
	// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
	PreferredDisks map[string]int `pulumi:"preferredDisks"`
	// Return package shipping details.
	ReturnPackage PackageShippingDetailsResponse `pulumi:"returnPackage"`
	// Shared access key to download the return shipment label
	ReverseShipmentLabelSasKey string `pulumi:"reverseShipmentLabelSasKey"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddressResponse `pulumi:"shippingAddress"`
}

// DataBox Disk Job Details.
type DataBoxDiskJobDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxDiskJobDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxDiskJobDetailsResponse)(nil)).Elem()
}

func (o DataBoxDiskJobDetailsResponseOutput) ToDataBoxDiskJobDetailsResponseOutput() DataBoxDiskJobDetailsResponseOutput {
	return o
}

func (o DataBoxDiskJobDetailsResponseOutput) ToDataBoxDiskJobDetailsResponseOutputWithContext(ctx context.Context) DataBoxDiskJobDetailsResponseOutput {
	return o
}

// Shared access key to download the chain of custody logs
func (o DataBoxDiskJobDetailsResponseOutput) ChainOfCustodySasKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) string { return v.ChainOfCustodySasKey }).(pulumi.StringOutput)
}

// Contact details for notification and shipping.
func (o DataBoxDiskJobDetailsResponseOutput) ContactDetails() ContactDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) ContactDetailsResponse { return v.ContactDetails }).(ContactDetailsResponseOutput)
}

// List of copy log details.
func (o DataBoxDiskJobDetailsResponseOutput) CopyLogDetails() pulumi.ArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) []interface{} { return v.CopyLogDetails }).(pulumi.ArrayOutput)
}

// Copy progress per disk.
func (o DataBoxDiskJobDetailsResponseOutput) CopyProgress() DataBoxDiskCopyProgressResponseArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) []DataBoxDiskCopyProgressResponse { return v.CopyProgress }).(DataBoxDiskCopyProgressResponseArrayOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxDiskJobDetailsResponseOutput) DataExportDetails() DataExportDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) []DataExportDetailsResponse { return v.DataExportDetails }).(DataExportDetailsResponseArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxDiskJobDetailsResponseOutput) DataImportDetails() DataImportDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) []DataImportDetailsResponse { return v.DataImportDetails }).(DataImportDetailsResponseArrayOutput)
}

// Delivery package shipping details.
func (o DataBoxDiskJobDetailsResponseOutput) DeliveryPackage() PackageShippingDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) PackageShippingDetailsResponse { return v.DeliveryPackage }).(PackageShippingDetailsResponseOutput)
}

// Contains the map of disk serial number to the disk size being used for the job. Is returned only after the disks are shipped to the customer.
func (o DataBoxDiskJobDetailsResponseOutput) DisksAndSizeDetails() pulumi.IntMapOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) map[string]int { return v.DisksAndSizeDetails }).(pulumi.IntMapOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxDiskJobDetailsResponseOutput) ExpectedDataSizeInTerabytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) *int { return v.ExpectedDataSizeInTerabytes }).(pulumi.IntPtrOutput)
}

// Indicates the type of job details.
func (o DataBoxDiskJobDetailsResponseOutput) JobDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) string { return v.JobDetailsType }).(pulumi.StringOutput)
}

// List of stages that run in the job.
func (o DataBoxDiskJobDetailsResponseOutput) JobStages() JobStagesResponseArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) []JobStagesResponse { return v.JobStages }).(JobStagesResponseArrayOutput)
}

// Details about which key encryption type is being used.
func (o DataBoxDiskJobDetailsResponseOutput) KeyEncryptionKey() KeyEncryptionKeyResponseOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) KeyEncryptionKeyResponse { return v.KeyEncryptionKey }).(KeyEncryptionKeyResponseOutput)
}

// User entered passkey for DataBox Disk job.
func (o DataBoxDiskJobDetailsResponseOutput) Passkey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) *string { return v.Passkey }).(pulumi.StringPtrOutput)
}

// Preferences for the order.
func (o DataBoxDiskJobDetailsResponseOutput) Preferences() PreferencesResponsePtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) *PreferencesResponse { return v.Preferences }).(PreferencesResponsePtrOutput)
}

// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
func (o DataBoxDiskJobDetailsResponseOutput) PreferredDisks() pulumi.IntMapOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) map[string]int { return v.PreferredDisks }).(pulumi.IntMapOutput)
}

// Return package shipping details.
func (o DataBoxDiskJobDetailsResponseOutput) ReturnPackage() PackageShippingDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) PackageShippingDetailsResponse { return v.ReturnPackage }).(PackageShippingDetailsResponseOutput)
}

// Shared access key to download the return shipment label
func (o DataBoxDiskJobDetailsResponseOutput) ReverseShipmentLabelSasKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) string { return v.ReverseShipmentLabelSasKey }).(pulumi.StringOutput)
}

// Shipping address of the customer.
func (o DataBoxDiskJobDetailsResponseOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) *ShippingAddressResponse { return v.ShippingAddress }).(ShippingAddressResponsePtrOutput)
}

// The secrets related to disk job.
type DataBoxDiskJobSecretsResponse struct {
	// Dc Access Security Code for Customer Managed Shipping
	DcAccessSecurityCode DcAccessSecurityCodeResponse `pulumi:"dcAccessSecurityCode"`
	// Contains the list of secrets object for that device.
	DiskSecrets []DiskSecretResponse `pulumi:"diskSecrets"`
	// Error while fetching the secrets.
	Error CloudErrorResponse `pulumi:"error"`
	// Whether passkey was provided by user.
	IsPasskeyUserDefined bool `pulumi:"isPasskeyUserDefined"`
	// Used to indicate what type of job secrets object.
	JobSecretsType string `pulumi:"jobSecretsType"`
	// PassKey for the disk Job.
	PassKey string `pulumi:"passKey"`
}

// Copy log details for a storage account for Databox heavy
type DataBoxHeavyAccountCopyLogDetailsResponse struct {
	// Account name.
	AccountName string `pulumi:"accountName"`
	// Indicates the type of job details.
	CopyLogDetailsType string `pulumi:"copyLogDetailsType"`
	// Link for copy logs.
	CopyLogLink []string `pulumi:"copyLogLink"`
	// Link for copy verbose logs. This will be set only when the LogCollectionLevel is set to verbose.
	CopyVerboseLogLink []string `pulumi:"copyVerboseLogLink"`
}

// Copy log details for a storage account for Databox heavy
type DataBoxHeavyAccountCopyLogDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxHeavyAccountCopyLogDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxHeavyAccountCopyLogDetailsResponse)(nil)).Elem()
}

func (o DataBoxHeavyAccountCopyLogDetailsResponseOutput) ToDataBoxHeavyAccountCopyLogDetailsResponseOutput() DataBoxHeavyAccountCopyLogDetailsResponseOutput {
	return o
}

func (o DataBoxHeavyAccountCopyLogDetailsResponseOutput) ToDataBoxHeavyAccountCopyLogDetailsResponseOutputWithContext(ctx context.Context) DataBoxHeavyAccountCopyLogDetailsResponseOutput {
	return o
}

// Account name.
func (o DataBoxHeavyAccountCopyLogDetailsResponseOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavyAccountCopyLogDetailsResponse) string { return v.AccountName }).(pulumi.StringOutput)
}

// Indicates the type of job details.
func (o DataBoxHeavyAccountCopyLogDetailsResponseOutput) CopyLogDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavyAccountCopyLogDetailsResponse) string { return v.CopyLogDetailsType }).(pulumi.StringOutput)
}

// Link for copy logs.
func (o DataBoxHeavyAccountCopyLogDetailsResponseOutput) CopyLogLink() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyAccountCopyLogDetailsResponse) []string { return v.CopyLogLink }).(pulumi.StringArrayOutput)
}

// Link for copy verbose logs. This will be set only when the LogCollectionLevel is set to verbose.
func (o DataBoxHeavyAccountCopyLogDetailsResponseOutput) CopyVerboseLogLink() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyAccountCopyLogDetailsResponse) []string { return v.CopyVerboseLogLink }).(pulumi.StringArrayOutput)
}

// Databox Heavy Device Job Details
type DataBoxHeavyJobDetails struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetails `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetails `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetails `pulumi:"dataImportDetails"`
	// Set Device password for unlocking Databox Heavy. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword *string `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTerabytes *int `pulumi:"expectedDataSizeInTerabytes"`
	// Indicates the type of job details.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// Preferences for the order.
	Preferences *Preferences `pulumi:"preferences"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddress `pulumi:"shippingAddress"`
}

// DataBoxHeavyJobDetailsInput is an input type that accepts DataBoxHeavyJobDetailsArgs and DataBoxHeavyJobDetailsOutput values.
// You can construct a concrete instance of `DataBoxHeavyJobDetailsInput` via:
//
//          DataBoxHeavyJobDetailsArgs{...}
type DataBoxHeavyJobDetailsInput interface {
	pulumi.Input

	ToDataBoxHeavyJobDetailsOutput() DataBoxHeavyJobDetailsOutput
	ToDataBoxHeavyJobDetailsOutputWithContext(context.Context) DataBoxHeavyJobDetailsOutput
}

// Databox Heavy Device Job Details
type DataBoxHeavyJobDetailsArgs struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsInput `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails DataExportDetailsArrayInput `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails DataImportDetailsArrayInput `pulumi:"dataImportDetails"`
	// Set Device password for unlocking Databox Heavy. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword pulumi.StringPtrInput `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTerabytes pulumi.IntPtrInput `pulumi:"expectedDataSizeInTerabytes"`
	// Indicates the type of job details.
	JobDetailsType pulumi.StringInput `pulumi:"jobDetailsType"`
	// Preferences for the order.
	Preferences PreferencesPtrInput `pulumi:"preferences"`
	// Shipping address of the customer.
	ShippingAddress ShippingAddressPtrInput `pulumi:"shippingAddress"`
}

func (DataBoxHeavyJobDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxHeavyJobDetails)(nil)).Elem()
}

func (i DataBoxHeavyJobDetailsArgs) ToDataBoxHeavyJobDetailsOutput() DataBoxHeavyJobDetailsOutput {
	return i.ToDataBoxHeavyJobDetailsOutputWithContext(context.Background())
}

func (i DataBoxHeavyJobDetailsArgs) ToDataBoxHeavyJobDetailsOutputWithContext(ctx context.Context) DataBoxHeavyJobDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxHeavyJobDetailsOutput)
}

// Databox Heavy Device Job Details
type DataBoxHeavyJobDetailsResponse struct {
	// Shared access key to download the chain of custody logs
	ChainOfCustodySasKey string `pulumi:"chainOfCustodySasKey"`
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsResponse `pulumi:"contactDetails"`
	// List of copy log details.
	CopyLogDetails []interface{} `pulumi:"copyLogDetails"`
	// Copy progress per account.
	CopyProgress []CopyProgressResponse `pulumi:"copyProgress"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetailsResponse `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetailsResponse `pulumi:"dataImportDetails"`
	// Delivery package shipping details.
	DeliveryPackage PackageShippingDetailsResponse `pulumi:"deliveryPackage"`
	// Set Device password for unlocking Databox Heavy. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword *string `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTerabytes *int `pulumi:"expectedDataSizeInTerabytes"`
	// Indicates the type of job details.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// List of stages that run in the job.
	JobStages []JobStagesResponse `pulumi:"jobStages"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey KeyEncryptionKeyResponse `pulumi:"keyEncryptionKey"`
	// Preferences for the order.
	Preferences *PreferencesResponse `pulumi:"preferences"`
	// Return package shipping details.
	ReturnPackage PackageShippingDetailsResponse `pulumi:"returnPackage"`
	// Shared access key to download the return shipment label
	ReverseShipmentLabelSasKey string `pulumi:"reverseShipmentLabelSasKey"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddressResponse `pulumi:"shippingAddress"`
}

// Databox Heavy Device Job Details
type DataBoxHeavyJobDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxHeavyJobDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxHeavyJobDetailsResponse)(nil)).Elem()
}

func (o DataBoxHeavyJobDetailsResponseOutput) ToDataBoxHeavyJobDetailsResponseOutput() DataBoxHeavyJobDetailsResponseOutput {
	return o
}

func (o DataBoxHeavyJobDetailsResponseOutput) ToDataBoxHeavyJobDetailsResponseOutputWithContext(ctx context.Context) DataBoxHeavyJobDetailsResponseOutput {
	return o
}

// Shared access key to download the chain of custody logs
func (o DataBoxHeavyJobDetailsResponseOutput) ChainOfCustodySasKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) string { return v.ChainOfCustodySasKey }).(pulumi.StringOutput)
}

// Contact details for notification and shipping.
func (o DataBoxHeavyJobDetailsResponseOutput) ContactDetails() ContactDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) ContactDetailsResponse { return v.ContactDetails }).(ContactDetailsResponseOutput)
}

// List of copy log details.
func (o DataBoxHeavyJobDetailsResponseOutput) CopyLogDetails() pulumi.ArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) []interface{} { return v.CopyLogDetails }).(pulumi.ArrayOutput)
}

// Copy progress per account.
func (o DataBoxHeavyJobDetailsResponseOutput) CopyProgress() CopyProgressResponseArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) []CopyProgressResponse { return v.CopyProgress }).(CopyProgressResponseArrayOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxHeavyJobDetailsResponseOutput) DataExportDetails() DataExportDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) []DataExportDetailsResponse { return v.DataExportDetails }).(DataExportDetailsResponseArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxHeavyJobDetailsResponseOutput) DataImportDetails() DataImportDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) []DataImportDetailsResponse { return v.DataImportDetails }).(DataImportDetailsResponseArrayOutput)
}

// Delivery package shipping details.
func (o DataBoxHeavyJobDetailsResponseOutput) DeliveryPackage() PackageShippingDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) PackageShippingDetailsResponse { return v.DeliveryPackage }).(PackageShippingDetailsResponseOutput)
}

// Set Device password for unlocking Databox Heavy. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
func (o DataBoxHeavyJobDetailsResponseOutput) DevicePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) *string { return v.DevicePassword }).(pulumi.StringPtrOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxHeavyJobDetailsResponseOutput) ExpectedDataSizeInTerabytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) *int { return v.ExpectedDataSizeInTerabytes }).(pulumi.IntPtrOutput)
}

// Indicates the type of job details.
func (o DataBoxHeavyJobDetailsResponseOutput) JobDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) string { return v.JobDetailsType }).(pulumi.StringOutput)
}

// List of stages that run in the job.
func (o DataBoxHeavyJobDetailsResponseOutput) JobStages() JobStagesResponseArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) []JobStagesResponse { return v.JobStages }).(JobStagesResponseArrayOutput)
}

// Details about which key encryption type is being used.
func (o DataBoxHeavyJobDetailsResponseOutput) KeyEncryptionKey() KeyEncryptionKeyResponseOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) KeyEncryptionKeyResponse { return v.KeyEncryptionKey }).(KeyEncryptionKeyResponseOutput)
}

// Preferences for the order.
func (o DataBoxHeavyJobDetailsResponseOutput) Preferences() PreferencesResponsePtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) *PreferencesResponse { return v.Preferences }).(PreferencesResponsePtrOutput)
}

// Return package shipping details.
func (o DataBoxHeavyJobDetailsResponseOutput) ReturnPackage() PackageShippingDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) PackageShippingDetailsResponse { return v.ReturnPackage }).(PackageShippingDetailsResponseOutput)
}

// Shared access key to download the return shipment label
func (o DataBoxHeavyJobDetailsResponseOutput) ReverseShipmentLabelSasKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) string { return v.ReverseShipmentLabelSasKey }).(pulumi.StringOutput)
}

// Shipping address of the customer.
func (o DataBoxHeavyJobDetailsResponseOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) *ShippingAddressResponse { return v.ShippingAddress }).(ShippingAddressResponsePtrOutput)
}

// The secrets related to a databox heavy job.
type DataBoxHeavyJobSecretsResponse struct {
	// Contains the list of secret objects for a databox heavy job.
	CabinetPodSecrets []DataBoxHeavySecretResponse `pulumi:"cabinetPodSecrets"`
	// Dc Access Security Code for Customer Managed Shipping
	DcAccessSecurityCode DcAccessSecurityCodeResponse `pulumi:"dcAccessSecurityCode"`
	// Error while fetching the secrets.
	Error CloudErrorResponse `pulumi:"error"`
	// Used to indicate what type of job secrets object.
	JobSecretsType string `pulumi:"jobSecretsType"`
}

// The secrets related to a databox heavy.
type DataBoxHeavySecretResponse struct {
	// Per account level access credentials.
	AccountCredentialDetails []AccountCredentialDetailsResponse `pulumi:"accountCredentialDetails"`
	// Password for out of the box experience on device.
	DevicePassword string `pulumi:"devicePassword"`
	// Serial number of the assigned device.
	DeviceSerialNumber string `pulumi:"deviceSerialNumber"`
	// The base 64 encoded public key to authenticate with the device
	EncodedValidationCertPubKey string `pulumi:"encodedValidationCertPubKey"`
	// Network configuration of the appliance.
	NetworkConfigurations []ApplianceNetworkConfigurationResponse `pulumi:"networkConfigurations"`
}

// Databox Job Details
type DataBoxJobDetails struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetails `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetails `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetails `pulumi:"dataImportDetails"`
	// Set Device password for unlocking Databox. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword *string `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTerabytes *int `pulumi:"expectedDataSizeInTerabytes"`
	// Indicates the type of job details.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// Preferences for the order.
	Preferences *Preferences `pulumi:"preferences"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddress `pulumi:"shippingAddress"`
}

// DataBoxJobDetailsInput is an input type that accepts DataBoxJobDetailsArgs and DataBoxJobDetailsOutput values.
// You can construct a concrete instance of `DataBoxJobDetailsInput` via:
//
//          DataBoxJobDetailsArgs{...}
type DataBoxJobDetailsInput interface {
	pulumi.Input

	ToDataBoxJobDetailsOutput() DataBoxJobDetailsOutput
	ToDataBoxJobDetailsOutputWithContext(context.Context) DataBoxJobDetailsOutput
}

// Databox Job Details
type DataBoxJobDetailsArgs struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsInput `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails DataExportDetailsArrayInput `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails DataImportDetailsArrayInput `pulumi:"dataImportDetails"`
	// Set Device password for unlocking Databox. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword pulumi.StringPtrInput `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTerabytes pulumi.IntPtrInput `pulumi:"expectedDataSizeInTerabytes"`
	// Indicates the type of job details.
	JobDetailsType pulumi.StringInput `pulumi:"jobDetailsType"`
	// Preferences for the order.
	Preferences PreferencesPtrInput `pulumi:"preferences"`
	// Shipping address of the customer.
	ShippingAddress ShippingAddressPtrInput `pulumi:"shippingAddress"`
}

func (DataBoxJobDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxJobDetails)(nil)).Elem()
}

func (i DataBoxJobDetailsArgs) ToDataBoxJobDetailsOutput() DataBoxJobDetailsOutput {
	return i.ToDataBoxJobDetailsOutputWithContext(context.Background())
}

func (i DataBoxJobDetailsArgs) ToDataBoxJobDetailsOutputWithContext(ctx context.Context) DataBoxJobDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxJobDetailsOutput)
}

// Databox Job Details
type DataBoxJobDetailsResponse struct {
	// Shared access key to download the chain of custody logs
	ChainOfCustodySasKey string `pulumi:"chainOfCustodySasKey"`
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsResponse `pulumi:"contactDetails"`
	// List of copy log details.
	CopyLogDetails []interface{} `pulumi:"copyLogDetails"`
	// Copy progress per storage account.
	CopyProgress []CopyProgressResponse `pulumi:"copyProgress"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetailsResponse `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetailsResponse `pulumi:"dataImportDetails"`
	// Delivery package shipping details.
	DeliveryPackage PackageShippingDetailsResponse `pulumi:"deliveryPackage"`
	// Set Device password for unlocking Databox. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword *string `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTerabytes *int `pulumi:"expectedDataSizeInTerabytes"`
	// Indicates the type of job details.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// List of stages that run in the job.
	JobStages []JobStagesResponse `pulumi:"jobStages"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey KeyEncryptionKeyResponse `pulumi:"keyEncryptionKey"`
	// Preferences for the order.
	Preferences *PreferencesResponse `pulumi:"preferences"`
	// Return package shipping details.
	ReturnPackage PackageShippingDetailsResponse `pulumi:"returnPackage"`
	// Shared access key to download the return shipment label
	ReverseShipmentLabelSasKey string `pulumi:"reverseShipmentLabelSasKey"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddressResponse `pulumi:"shippingAddress"`
}

// Databox Job Details
type DataBoxJobDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxJobDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxJobDetailsResponse)(nil)).Elem()
}

func (o DataBoxJobDetailsResponseOutput) ToDataBoxJobDetailsResponseOutput() DataBoxJobDetailsResponseOutput {
	return o
}

func (o DataBoxJobDetailsResponseOutput) ToDataBoxJobDetailsResponseOutputWithContext(ctx context.Context) DataBoxJobDetailsResponseOutput {
	return o
}

// Shared access key to download the chain of custody logs
func (o DataBoxJobDetailsResponseOutput) ChainOfCustodySasKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) string { return v.ChainOfCustodySasKey }).(pulumi.StringOutput)
}

// Contact details for notification and shipping.
func (o DataBoxJobDetailsResponseOutput) ContactDetails() ContactDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) ContactDetailsResponse { return v.ContactDetails }).(ContactDetailsResponseOutput)
}

// List of copy log details.
func (o DataBoxJobDetailsResponseOutput) CopyLogDetails() pulumi.ArrayOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) []interface{} { return v.CopyLogDetails }).(pulumi.ArrayOutput)
}

// Copy progress per storage account.
func (o DataBoxJobDetailsResponseOutput) CopyProgress() CopyProgressResponseArrayOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) []CopyProgressResponse { return v.CopyProgress }).(CopyProgressResponseArrayOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxJobDetailsResponseOutput) DataExportDetails() DataExportDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) []DataExportDetailsResponse { return v.DataExportDetails }).(DataExportDetailsResponseArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxJobDetailsResponseOutput) DataImportDetails() DataImportDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) []DataImportDetailsResponse { return v.DataImportDetails }).(DataImportDetailsResponseArrayOutput)
}

// Delivery package shipping details.
func (o DataBoxJobDetailsResponseOutput) DeliveryPackage() PackageShippingDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) PackageShippingDetailsResponse { return v.DeliveryPackage }).(PackageShippingDetailsResponseOutput)
}

// Set Device password for unlocking Databox. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
func (o DataBoxJobDetailsResponseOutput) DevicePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) *string { return v.DevicePassword }).(pulumi.StringPtrOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxJobDetailsResponseOutput) ExpectedDataSizeInTerabytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) *int { return v.ExpectedDataSizeInTerabytes }).(pulumi.IntPtrOutput)
}

// Indicates the type of job details.
func (o DataBoxJobDetailsResponseOutput) JobDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) string { return v.JobDetailsType }).(pulumi.StringOutput)
}

// List of stages that run in the job.
func (o DataBoxJobDetailsResponseOutput) JobStages() JobStagesResponseArrayOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) []JobStagesResponse { return v.JobStages }).(JobStagesResponseArrayOutput)
}

// Details about which key encryption type is being used.
func (o DataBoxJobDetailsResponseOutput) KeyEncryptionKey() KeyEncryptionKeyResponseOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) KeyEncryptionKeyResponse { return v.KeyEncryptionKey }).(KeyEncryptionKeyResponseOutput)
}

// Preferences for the order.
func (o DataBoxJobDetailsResponseOutput) Preferences() PreferencesResponsePtrOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) *PreferencesResponse { return v.Preferences }).(PreferencesResponsePtrOutput)
}

// Return package shipping details.
func (o DataBoxJobDetailsResponseOutput) ReturnPackage() PackageShippingDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) PackageShippingDetailsResponse { return v.ReturnPackage }).(PackageShippingDetailsResponseOutput)
}

// Shared access key to download the return shipment label
func (o DataBoxJobDetailsResponseOutput) ReverseShipmentLabelSasKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) string { return v.ReverseShipmentLabelSasKey }).(pulumi.StringOutput)
}

// Shipping address of the customer.
func (o DataBoxJobDetailsResponseOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) *ShippingAddressResponse { return v.ShippingAddress }).(ShippingAddressResponsePtrOutput)
}

// The secrets related to a DataBox.
type DataBoxSecretResponse struct {
	// Per account level access credentials.
	AccountCredentialDetails []AccountCredentialDetailsResponse `pulumi:"accountCredentialDetails"`
	// Password for out of the box experience on device.
	DevicePassword string `pulumi:"devicePassword"`
	// Serial number of the assigned device.
	DeviceSerialNumber string `pulumi:"deviceSerialNumber"`
	// The base 64 encoded public key to authenticate with the device
	EncodedValidationCertPubKey string `pulumi:"encodedValidationCertPubKey"`
	// Network configuration of the appliance.
	NetworkConfigurations []ApplianceNetworkConfigurationResponse `pulumi:"networkConfigurations"`
}

// Details of the data to be used for exporting data from azure.
type DataExportDetails struct {
	// Account details of the data to be transferred
	AccountDetails interface{} `pulumi:"accountDetails"`
	// Level of the logs to be collected.
	LogCollectionLevel *string `pulumi:"logCollectionLevel"`
	// Configuration for the data transfer.
	TransferConfiguration TransferConfiguration `pulumi:"transferConfiguration"`
}

// DataExportDetailsInput is an input type that accepts DataExportDetailsArgs and DataExportDetailsOutput values.
// You can construct a concrete instance of `DataExportDetailsInput` via:
//
//          DataExportDetailsArgs{...}
type DataExportDetailsInput interface {
	pulumi.Input

	ToDataExportDetailsOutput() DataExportDetailsOutput
	ToDataExportDetailsOutputWithContext(context.Context) DataExportDetailsOutput
}

// Details of the data to be used for exporting data from azure.
type DataExportDetailsArgs struct {
	// Account details of the data to be transferred
	AccountDetails pulumi.Input `pulumi:"accountDetails"`
	// Level of the logs to be collected.
	LogCollectionLevel pulumi.StringPtrInput `pulumi:"logCollectionLevel"`
	// Configuration for the data transfer.
	TransferConfiguration TransferConfigurationInput `pulumi:"transferConfiguration"`
}

func (DataExportDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExportDetails)(nil)).Elem()
}

func (i DataExportDetailsArgs) ToDataExportDetailsOutput() DataExportDetailsOutput {
	return i.ToDataExportDetailsOutputWithContext(context.Background())
}

func (i DataExportDetailsArgs) ToDataExportDetailsOutputWithContext(ctx context.Context) DataExportDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExportDetailsOutput)
}

// DataExportDetailsArrayInput is an input type that accepts DataExportDetailsArray and DataExportDetailsArrayOutput values.
// You can construct a concrete instance of `DataExportDetailsArrayInput` via:
//
//          DataExportDetailsArray{ DataExportDetailsArgs{...} }
type DataExportDetailsArrayInput interface {
	pulumi.Input

	ToDataExportDetailsArrayOutput() DataExportDetailsArrayOutput
	ToDataExportDetailsArrayOutputWithContext(context.Context) DataExportDetailsArrayOutput
}

type DataExportDetailsArray []DataExportDetailsInput

func (DataExportDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataExportDetails)(nil)).Elem()
}

func (i DataExportDetailsArray) ToDataExportDetailsArrayOutput() DataExportDetailsArrayOutput {
	return i.ToDataExportDetailsArrayOutputWithContext(context.Background())
}

func (i DataExportDetailsArray) ToDataExportDetailsArrayOutputWithContext(ctx context.Context) DataExportDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExportDetailsArrayOutput)
}

// Details of the data to be used for exporting data from azure.
type DataExportDetailsResponse struct {
	// Account details of the data to be transferred
	AccountDetails interface{} `pulumi:"accountDetails"`
	// Level of the logs to be collected.
	LogCollectionLevel *string `pulumi:"logCollectionLevel"`
	// Configuration for the data transfer.
	TransferConfiguration TransferConfigurationResponse `pulumi:"transferConfiguration"`
}

// Details of the data to be used for exporting data from azure.
type DataExportDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataExportDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExportDetailsResponse)(nil)).Elem()
}

func (o DataExportDetailsResponseOutput) ToDataExportDetailsResponseOutput() DataExportDetailsResponseOutput {
	return o
}

func (o DataExportDetailsResponseOutput) ToDataExportDetailsResponseOutputWithContext(ctx context.Context) DataExportDetailsResponseOutput {
	return o
}

// Account details of the data to be transferred
func (o DataExportDetailsResponseOutput) AccountDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v DataExportDetailsResponse) interface{} { return v.AccountDetails }).(pulumi.AnyOutput)
}

// Level of the logs to be collected.
func (o DataExportDetailsResponseOutput) LogCollectionLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataExportDetailsResponse) *string { return v.LogCollectionLevel }).(pulumi.StringPtrOutput)
}

// Configuration for the data transfer.
func (o DataExportDetailsResponseOutput) TransferConfiguration() TransferConfigurationResponseOutput {
	return o.ApplyT(func(v DataExportDetailsResponse) TransferConfigurationResponse { return v.TransferConfiguration }).(TransferConfigurationResponseOutput)
}

type DataExportDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (DataExportDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataExportDetailsResponse)(nil)).Elem()
}

func (o DataExportDetailsResponseArrayOutput) ToDataExportDetailsResponseArrayOutput() DataExportDetailsResponseArrayOutput {
	return o
}

func (o DataExportDetailsResponseArrayOutput) ToDataExportDetailsResponseArrayOutputWithContext(ctx context.Context) DataExportDetailsResponseArrayOutput {
	return o
}

func (o DataExportDetailsResponseArrayOutput) Index(i pulumi.IntInput) DataExportDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataExportDetailsResponse {
		return vs[0].([]DataExportDetailsResponse)[vs[1].(int)]
	}).(DataExportDetailsResponseOutput)
}

// Details of the data to be used for importing data to azure.
type DataImportDetails struct {
	// Account details of the data to be transferred
	AccountDetails interface{} `pulumi:"accountDetails"`
}

// DataImportDetailsInput is an input type that accepts DataImportDetailsArgs and DataImportDetailsOutput values.
// You can construct a concrete instance of `DataImportDetailsInput` via:
//
//          DataImportDetailsArgs{...}
type DataImportDetailsInput interface {
	pulumi.Input

	ToDataImportDetailsOutput() DataImportDetailsOutput
	ToDataImportDetailsOutputWithContext(context.Context) DataImportDetailsOutput
}

// Details of the data to be used for importing data to azure.
type DataImportDetailsArgs struct {
	// Account details of the data to be transferred
	AccountDetails pulumi.Input `pulumi:"accountDetails"`
}

func (DataImportDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataImportDetails)(nil)).Elem()
}

func (i DataImportDetailsArgs) ToDataImportDetailsOutput() DataImportDetailsOutput {
	return i.ToDataImportDetailsOutputWithContext(context.Background())
}

func (i DataImportDetailsArgs) ToDataImportDetailsOutputWithContext(ctx context.Context) DataImportDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataImportDetailsOutput)
}

// DataImportDetailsArrayInput is an input type that accepts DataImportDetailsArray and DataImportDetailsArrayOutput values.
// You can construct a concrete instance of `DataImportDetailsArrayInput` via:
//
//          DataImportDetailsArray{ DataImportDetailsArgs{...} }
type DataImportDetailsArrayInput interface {
	pulumi.Input

	ToDataImportDetailsArrayOutput() DataImportDetailsArrayOutput
	ToDataImportDetailsArrayOutputWithContext(context.Context) DataImportDetailsArrayOutput
}

type DataImportDetailsArray []DataImportDetailsInput

func (DataImportDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataImportDetails)(nil)).Elem()
}

func (i DataImportDetailsArray) ToDataImportDetailsArrayOutput() DataImportDetailsArrayOutput {
	return i.ToDataImportDetailsArrayOutputWithContext(context.Background())
}

func (i DataImportDetailsArray) ToDataImportDetailsArrayOutputWithContext(ctx context.Context) DataImportDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataImportDetailsArrayOutput)
}

// Details of the data to be used for importing data to azure.
type DataImportDetailsResponse struct {
	// Account details of the data to be transferred
	AccountDetails interface{} `pulumi:"accountDetails"`
}

// Details of the data to be used for importing data to azure.
type DataImportDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataImportDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataImportDetailsResponse)(nil)).Elem()
}

func (o DataImportDetailsResponseOutput) ToDataImportDetailsResponseOutput() DataImportDetailsResponseOutput {
	return o
}

func (o DataImportDetailsResponseOutput) ToDataImportDetailsResponseOutputWithContext(ctx context.Context) DataImportDetailsResponseOutput {
	return o
}

// Account details of the data to be transferred
func (o DataImportDetailsResponseOutput) AccountDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v DataImportDetailsResponse) interface{} { return v.AccountDetails }).(pulumi.AnyOutput)
}

type DataImportDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (DataImportDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataImportDetailsResponse)(nil)).Elem()
}

func (o DataImportDetailsResponseArrayOutput) ToDataImportDetailsResponseArrayOutput() DataImportDetailsResponseArrayOutput {
	return o
}

func (o DataImportDetailsResponseArrayOutput) ToDataImportDetailsResponseArrayOutputWithContext(ctx context.Context) DataImportDetailsResponseArrayOutput {
	return o
}

func (o DataImportDetailsResponseArrayOutput) Index(i pulumi.IntInput) DataImportDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataImportDetailsResponse {
		return vs[0].([]DataImportDetailsResponse)[vs[1].(int)]
	}).(DataImportDetailsResponseOutput)
}

// The secrets related to a databox job.
type DataboxJobSecretsResponse struct {
	// Dc Access Security Code for Customer Managed Shipping
	DcAccessSecurityCode DcAccessSecurityCodeResponse `pulumi:"dcAccessSecurityCode"`
	// Error while fetching the secrets.
	Error CloudErrorResponse `pulumi:"error"`
	// Used to indicate what type of job secrets object.
	JobSecretsType string `pulumi:"jobSecretsType"`
	// Contains the list of secret objects for a job.
	PodSecrets []DataBoxSecretResponse `pulumi:"podSecrets"`
}

// Dc access security code
type DcAccessSecurityCodeResponse struct {
	// Forward Dc access security code.
	ForwardDcAccessCode *string `pulumi:"forwardDcAccessCode"`
	// Reverse Dc access security code.
	ReverseDcAccessCode *string `pulumi:"reverseDcAccessCode"`
}

// Contains all the secrets of a Disk.
type DiskSecretResponse struct {
	// Bit Locker key of the disk which can be used to unlock the disk to copy data.
	BitLockerKey string `pulumi:"bitLockerKey"`
	// Serial number of the assigned disk.
	DiskSerialNumber string `pulumi:"diskSerialNumber"`
}

// Details of the filter files to be used for data transfer.
type FilterFileDetails struct {
	// Path of the file that contains the details of all items to transfer.
	FilterFilePath string `pulumi:"filterFilePath"`
	// Type of the filter file.
	FilterFileType string `pulumi:"filterFileType"`
}

// FilterFileDetailsInput is an input type that accepts FilterFileDetailsArgs and FilterFileDetailsOutput values.
// You can construct a concrete instance of `FilterFileDetailsInput` via:
//
//          FilterFileDetailsArgs{...}
type FilterFileDetailsInput interface {
	pulumi.Input

	ToFilterFileDetailsOutput() FilterFileDetailsOutput
	ToFilterFileDetailsOutputWithContext(context.Context) FilterFileDetailsOutput
}

// Details of the filter files to be used for data transfer.
type FilterFileDetailsArgs struct {
	// Path of the file that contains the details of all items to transfer.
	FilterFilePath pulumi.StringInput `pulumi:"filterFilePath"`
	// Type of the filter file.
	FilterFileType pulumi.StringInput `pulumi:"filterFileType"`
}

func (FilterFileDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFileDetails)(nil)).Elem()
}

func (i FilterFileDetailsArgs) ToFilterFileDetailsOutput() FilterFileDetailsOutput {
	return i.ToFilterFileDetailsOutputWithContext(context.Background())
}

func (i FilterFileDetailsArgs) ToFilterFileDetailsOutputWithContext(ctx context.Context) FilterFileDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFileDetailsOutput)
}

// FilterFileDetailsArrayInput is an input type that accepts FilterFileDetailsArray and FilterFileDetailsArrayOutput values.
// You can construct a concrete instance of `FilterFileDetailsArrayInput` via:
//
//          FilterFileDetailsArray{ FilterFileDetailsArgs{...} }
type FilterFileDetailsArrayInput interface {
	pulumi.Input

	ToFilterFileDetailsArrayOutput() FilterFileDetailsArrayOutput
	ToFilterFileDetailsArrayOutputWithContext(context.Context) FilterFileDetailsArrayOutput
}

type FilterFileDetailsArray []FilterFileDetailsInput

func (FilterFileDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFileDetails)(nil)).Elem()
}

func (i FilterFileDetailsArray) ToFilterFileDetailsArrayOutput() FilterFileDetailsArrayOutput {
	return i.ToFilterFileDetailsArrayOutputWithContext(context.Background())
}

func (i FilterFileDetailsArray) ToFilterFileDetailsArrayOutputWithContext(ctx context.Context) FilterFileDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFileDetailsArrayOutput)
}

// Details of the filter files to be used for data transfer.
type FilterFileDetailsResponse struct {
	// Path of the file that contains the details of all items to transfer.
	FilterFilePath string `pulumi:"filterFilePath"`
	// Type of the filter file.
	FilterFileType string `pulumi:"filterFileType"`
}

// Details of the filter files to be used for data transfer.
type FilterFileDetailsResponseOutput struct{ *pulumi.OutputState }

func (FilterFileDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFileDetailsResponse)(nil)).Elem()
}

func (o FilterFileDetailsResponseOutput) ToFilterFileDetailsResponseOutput() FilterFileDetailsResponseOutput {
	return o
}

func (o FilterFileDetailsResponseOutput) ToFilterFileDetailsResponseOutputWithContext(ctx context.Context) FilterFileDetailsResponseOutput {
	return o
}

// Path of the file that contains the details of all items to transfer.
func (o FilterFileDetailsResponseOutput) FilterFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFileDetailsResponse) string { return v.FilterFilePath }).(pulumi.StringOutput)
}

// Type of the filter file.
func (o FilterFileDetailsResponseOutput) FilterFileType() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFileDetailsResponse) string { return v.FilterFileType }).(pulumi.StringOutput)
}

type FilterFileDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (FilterFileDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFileDetailsResponse)(nil)).Elem()
}

func (o FilterFileDetailsResponseArrayOutput) ToFilterFileDetailsResponseArrayOutput() FilterFileDetailsResponseArrayOutput {
	return o
}

func (o FilterFileDetailsResponseArrayOutput) ToFilterFileDetailsResponseArrayOutputWithContext(ctx context.Context) FilterFileDetailsResponseArrayOutput {
	return o
}

func (o FilterFileDetailsResponseArrayOutput) Index(i pulumi.IntInput) FilterFileDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFileDetailsResponse {
		return vs[0].([]FilterFileDetailsResponse)[vs[1].(int)]
	}).(FilterFileDetailsResponseOutput)
}

// Additional delivery info.
type JobDeliveryInfo struct {
	// Scheduled date time.
	ScheduledDateTime *string `pulumi:"scheduledDateTime"`
}

// JobDeliveryInfoInput is an input type that accepts JobDeliveryInfoArgs and JobDeliveryInfoOutput values.
// You can construct a concrete instance of `JobDeliveryInfoInput` via:
//
//          JobDeliveryInfoArgs{...}
type JobDeliveryInfoInput interface {
	pulumi.Input

	ToJobDeliveryInfoOutput() JobDeliveryInfoOutput
	ToJobDeliveryInfoOutputWithContext(context.Context) JobDeliveryInfoOutput
}

// Additional delivery info.
type JobDeliveryInfoArgs struct {
	// Scheduled date time.
	ScheduledDateTime pulumi.StringPtrInput `pulumi:"scheduledDateTime"`
}

func (JobDeliveryInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDeliveryInfo)(nil)).Elem()
}

func (i JobDeliveryInfoArgs) ToJobDeliveryInfoOutput() JobDeliveryInfoOutput {
	return i.ToJobDeliveryInfoOutputWithContext(context.Background())
}

func (i JobDeliveryInfoArgs) ToJobDeliveryInfoOutputWithContext(ctx context.Context) JobDeliveryInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDeliveryInfoOutput)
}

func (i JobDeliveryInfoArgs) ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput {
	return i.ToJobDeliveryInfoPtrOutputWithContext(context.Background())
}

func (i JobDeliveryInfoArgs) ToJobDeliveryInfoPtrOutputWithContext(ctx context.Context) JobDeliveryInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDeliveryInfoOutput).ToJobDeliveryInfoPtrOutputWithContext(ctx)
}

// JobDeliveryInfoPtrInput is an input type that accepts JobDeliveryInfoArgs, JobDeliveryInfoPtr and JobDeliveryInfoPtrOutput values.
// You can construct a concrete instance of `JobDeliveryInfoPtrInput` via:
//
//          JobDeliveryInfoArgs{...}
//
//  or:
//
//          nil
type JobDeliveryInfoPtrInput interface {
	pulumi.Input

	ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput
	ToJobDeliveryInfoPtrOutputWithContext(context.Context) JobDeliveryInfoPtrOutput
}

type jobDeliveryInfoPtrType JobDeliveryInfoArgs

func JobDeliveryInfoPtr(v *JobDeliveryInfoArgs) JobDeliveryInfoPtrInput {
	return (*jobDeliveryInfoPtrType)(v)
}

func (*jobDeliveryInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDeliveryInfo)(nil)).Elem()
}

func (i *jobDeliveryInfoPtrType) ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput {
	return i.ToJobDeliveryInfoPtrOutputWithContext(context.Background())
}

func (i *jobDeliveryInfoPtrType) ToJobDeliveryInfoPtrOutputWithContext(ctx context.Context) JobDeliveryInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDeliveryInfoPtrOutput)
}

// Additional delivery info.
type JobDeliveryInfoResponse struct {
	// Scheduled date time.
	ScheduledDateTime *string `pulumi:"scheduledDateTime"`
}

// Additional delivery info.
type JobDeliveryInfoResponseOutput struct{ *pulumi.OutputState }

func (JobDeliveryInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDeliveryInfoResponse)(nil)).Elem()
}

func (o JobDeliveryInfoResponseOutput) ToJobDeliveryInfoResponseOutput() JobDeliveryInfoResponseOutput {
	return o
}

func (o JobDeliveryInfoResponseOutput) ToJobDeliveryInfoResponseOutputWithContext(ctx context.Context) JobDeliveryInfoResponseOutput {
	return o
}

func (o JobDeliveryInfoResponseOutput) ToJobDeliveryInfoResponsePtrOutput() JobDeliveryInfoResponsePtrOutput {
	return o.ToJobDeliveryInfoResponsePtrOutputWithContext(context.Background())
}

func (o JobDeliveryInfoResponseOutput) ToJobDeliveryInfoResponsePtrOutputWithContext(ctx context.Context) JobDeliveryInfoResponsePtrOutput {
	return o.ApplyT(func(v JobDeliveryInfoResponse) *JobDeliveryInfoResponse {
		return &v
	}).(JobDeliveryInfoResponsePtrOutput)
}

// Scheduled date time.
func (o JobDeliveryInfoResponseOutput) ScheduledDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDeliveryInfoResponse) *string { return v.ScheduledDateTime }).(pulumi.StringPtrOutput)
}

type JobDeliveryInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (JobDeliveryInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDeliveryInfoResponse)(nil)).Elem()
}

func (o JobDeliveryInfoResponsePtrOutput) ToJobDeliveryInfoResponsePtrOutput() JobDeliveryInfoResponsePtrOutput {
	return o
}

func (o JobDeliveryInfoResponsePtrOutput) ToJobDeliveryInfoResponsePtrOutputWithContext(ctx context.Context) JobDeliveryInfoResponsePtrOutput {
	return o
}

func (o JobDeliveryInfoResponsePtrOutput) Elem() JobDeliveryInfoResponseOutput {
	return o.ApplyT(func(v *JobDeliveryInfoResponse) JobDeliveryInfoResponse { return *v }).(JobDeliveryInfoResponseOutput)
}

// Scheduled date time.
func (o JobDeliveryInfoResponsePtrOutput) ScheduledDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDeliveryInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScheduledDateTime
	}).(pulumi.StringPtrOutput)
}

// Job stages.
type JobStagesResponse struct {
	// Display name of the job stage.
	DisplayName string `pulumi:"displayName"`
	// Job Stage Details
	JobStageDetails map[string]interface{} `pulumi:"jobStageDetails"`
	// Name of the job stage.
	StageName string `pulumi:"stageName"`
	// Status of the job stage.
	StageStatus string `pulumi:"stageStatus"`
	// Time for the job stage in UTC ISO 8601 format.
	StageTime string `pulumi:"stageTime"`
}

// Job stages.
type JobStagesResponseOutput struct{ *pulumi.OutputState }

func (JobStagesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStagesResponse)(nil)).Elem()
}

func (o JobStagesResponseOutput) ToJobStagesResponseOutput() JobStagesResponseOutput {
	return o
}

func (o JobStagesResponseOutput) ToJobStagesResponseOutputWithContext(ctx context.Context) JobStagesResponseOutput {
	return o
}

// Display name of the job stage.
func (o JobStagesResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v JobStagesResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Job Stage Details
func (o JobStagesResponseOutput) JobStageDetails() pulumi.MapOutput {
	return o.ApplyT(func(v JobStagesResponse) map[string]interface{} { return v.JobStageDetails }).(pulumi.MapOutput)
}

// Name of the job stage.
func (o JobStagesResponseOutput) StageName() pulumi.StringOutput {
	return o.ApplyT(func(v JobStagesResponse) string { return v.StageName }).(pulumi.StringOutput)
}

// Status of the job stage.
func (o JobStagesResponseOutput) StageStatus() pulumi.StringOutput {
	return o.ApplyT(func(v JobStagesResponse) string { return v.StageStatus }).(pulumi.StringOutput)
}

// Time for the job stage in UTC ISO 8601 format.
func (o JobStagesResponseOutput) StageTime() pulumi.StringOutput {
	return o.ApplyT(func(v JobStagesResponse) string { return v.StageTime }).(pulumi.StringOutput)
}

type JobStagesResponseArrayOutput struct{ *pulumi.OutputState }

func (JobStagesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobStagesResponse)(nil)).Elem()
}

func (o JobStagesResponseArrayOutput) ToJobStagesResponseArrayOutput() JobStagesResponseArrayOutput {
	return o
}

func (o JobStagesResponseArrayOutput) ToJobStagesResponseArrayOutputWithContext(ctx context.Context) JobStagesResponseArrayOutput {
	return o
}

func (o JobStagesResponseArrayOutput) Index(i pulumi.IntInput) JobStagesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobStagesResponse {
		return vs[0].([]JobStagesResponse)[vs[1].(int)]
	}).(JobStagesResponseOutput)
}

// Encryption key containing details about key to encrypt different keys.
type KeyEncryptionKeyResponse struct {
	// Type of encryption key used for key encryption.
	KekType string `pulumi:"kekType"`
	// Key encryption key. It is required in case of Customer managed KekType.
	KekUrl *string `pulumi:"kekUrl"`
	// Kek vault resource id. It is required in case of Customer managed KekType.
	KekVaultResourceID *string `pulumi:"kekVaultResourceID"`
}

// Encryption key containing details about key to encrypt different keys.
type KeyEncryptionKeyResponseOutput struct{ *pulumi.OutputState }

func (KeyEncryptionKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyEncryptionKeyResponse)(nil)).Elem()
}

func (o KeyEncryptionKeyResponseOutput) ToKeyEncryptionKeyResponseOutput() KeyEncryptionKeyResponseOutput {
	return o
}

func (o KeyEncryptionKeyResponseOutput) ToKeyEncryptionKeyResponseOutputWithContext(ctx context.Context) KeyEncryptionKeyResponseOutput {
	return o
}

// Type of encryption key used for key encryption.
func (o KeyEncryptionKeyResponseOutput) KekType() pulumi.StringOutput {
	return o.ApplyT(func(v KeyEncryptionKeyResponse) string { return v.KekType }).(pulumi.StringOutput)
}

// Key encryption key. It is required in case of Customer managed KekType.
func (o KeyEncryptionKeyResponseOutput) KekUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyEncryptionKeyResponse) *string { return v.KekUrl }).(pulumi.StringPtrOutput)
}

// Kek vault resource id. It is required in case of Customer managed KekType.
func (o KeyEncryptionKeyResponseOutput) KekVaultResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyEncryptionKeyResponse) *string { return v.KekVaultResourceID }).(pulumi.StringPtrOutput)
}

// Details of the managed disks.
type ManagedDiskDetails struct {
	// Account Type of the data to be transferred.
	DataAccountType string `pulumi:"dataAccountType"`
	// Resource Group Id of the compute disks.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	SharePassword *string `pulumi:"sharePassword"`
	// Resource Id of the storage account that can be used to copy the vhd for staging.
	StagingStorageAccountId string `pulumi:"stagingStorageAccountId"`
}

// ManagedDiskDetailsInput is an input type that accepts ManagedDiskDetailsArgs and ManagedDiskDetailsOutput values.
// You can construct a concrete instance of `ManagedDiskDetailsInput` via:
//
//          ManagedDiskDetailsArgs{...}
type ManagedDiskDetailsInput interface {
	pulumi.Input

	ToManagedDiskDetailsOutput() ManagedDiskDetailsOutput
	ToManagedDiskDetailsOutputWithContext(context.Context) ManagedDiskDetailsOutput
}

// Details of the managed disks.
type ManagedDiskDetailsArgs struct {
	// Account Type of the data to be transferred.
	DataAccountType pulumi.StringInput `pulumi:"dataAccountType"`
	// Resource Group Id of the compute disks.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	SharePassword pulumi.StringPtrInput `pulumi:"sharePassword"`
	// Resource Id of the storage account that can be used to copy the vhd for staging.
	StagingStorageAccountId pulumi.StringInput `pulumi:"stagingStorageAccountId"`
}

func (ManagedDiskDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDiskDetails)(nil)).Elem()
}

func (i ManagedDiskDetailsArgs) ToManagedDiskDetailsOutput() ManagedDiskDetailsOutput {
	return i.ToManagedDiskDetailsOutputWithContext(context.Background())
}

func (i ManagedDiskDetailsArgs) ToManagedDiskDetailsOutputWithContext(ctx context.Context) ManagedDiskDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDiskDetailsOutput)
}

// Details of the managed disks.
type ManagedDiskDetailsResponse struct {
	// Account Type of the data to be transferred.
	DataAccountType string `pulumi:"dataAccountType"`
	// Resource Group Id of the compute disks.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	SharePassword *string `pulumi:"sharePassword"`
	// Resource Id of the storage account that can be used to copy the vhd for staging.
	StagingStorageAccountId string `pulumi:"stagingStorageAccountId"`
}

// Details of the managed disks.
type ManagedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (ManagedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDiskDetailsResponse)(nil)).Elem()
}

func (o ManagedDiskDetailsResponseOutput) ToManagedDiskDetailsResponseOutput() ManagedDiskDetailsResponseOutput {
	return o
}

func (o ManagedDiskDetailsResponseOutput) ToManagedDiskDetailsResponseOutputWithContext(ctx context.Context) ManagedDiskDetailsResponseOutput {
	return o
}

// Account Type of the data to be transferred.
func (o ManagedDiskDetailsResponseOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDiskDetailsResponse) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// Resource Group Id of the compute disks.
func (o ManagedDiskDetailsResponseOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDiskDetailsResponse) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
func (o ManagedDiskDetailsResponseOutput) SharePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDiskDetailsResponse) *string { return v.SharePassword }).(pulumi.StringPtrOutput)
}

// Resource Id of the storage account that can be used to copy the vhd for staging.
func (o ManagedDiskDetailsResponseOutput) StagingStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDiskDetailsResponse) string { return v.StagingStorageAccountId }).(pulumi.StringOutput)
}

// Notification preference for a job stage.
type NotificationPreference struct {
	// Notification is required or not.
	SendNotification bool `pulumi:"sendNotification"`
	// Name of the stage.
	StageName string `pulumi:"stageName"`
}

// NotificationPreferenceInput is an input type that accepts NotificationPreferenceArgs and NotificationPreferenceOutput values.
// You can construct a concrete instance of `NotificationPreferenceInput` via:
//
//          NotificationPreferenceArgs{...}
type NotificationPreferenceInput interface {
	pulumi.Input

	ToNotificationPreferenceOutput() NotificationPreferenceOutput
	ToNotificationPreferenceOutputWithContext(context.Context) NotificationPreferenceOutput
}

// Notification preference for a job stage.
type NotificationPreferenceArgs struct {
	// Notification is required or not.
	SendNotification pulumi.BoolInput `pulumi:"sendNotification"`
	// Name of the stage.
	StageName pulumi.StringInput `pulumi:"stageName"`
}

func (NotificationPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPreference)(nil)).Elem()
}

func (i NotificationPreferenceArgs) ToNotificationPreferenceOutput() NotificationPreferenceOutput {
	return i.ToNotificationPreferenceOutputWithContext(context.Background())
}

func (i NotificationPreferenceArgs) ToNotificationPreferenceOutputWithContext(ctx context.Context) NotificationPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPreferenceOutput)
}

// NotificationPreferenceArrayInput is an input type that accepts NotificationPreferenceArray and NotificationPreferenceArrayOutput values.
// You can construct a concrete instance of `NotificationPreferenceArrayInput` via:
//
//          NotificationPreferenceArray{ NotificationPreferenceArgs{...} }
type NotificationPreferenceArrayInput interface {
	pulumi.Input

	ToNotificationPreferenceArrayOutput() NotificationPreferenceArrayOutput
	ToNotificationPreferenceArrayOutputWithContext(context.Context) NotificationPreferenceArrayOutput
}

type NotificationPreferenceArray []NotificationPreferenceInput

func (NotificationPreferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPreference)(nil)).Elem()
}

func (i NotificationPreferenceArray) ToNotificationPreferenceArrayOutput() NotificationPreferenceArrayOutput {
	return i.ToNotificationPreferenceArrayOutputWithContext(context.Background())
}

func (i NotificationPreferenceArray) ToNotificationPreferenceArrayOutputWithContext(ctx context.Context) NotificationPreferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPreferenceArrayOutput)
}

// Notification preference for a job stage.
type NotificationPreferenceResponse struct {
	// Notification is required or not.
	SendNotification bool `pulumi:"sendNotification"`
	// Name of the stage.
	StageName string `pulumi:"stageName"`
}

// Notification preference for a job stage.
type NotificationPreferenceResponseOutput struct{ *pulumi.OutputState }

func (NotificationPreferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPreferenceResponse)(nil)).Elem()
}

func (o NotificationPreferenceResponseOutput) ToNotificationPreferenceResponseOutput() NotificationPreferenceResponseOutput {
	return o
}

func (o NotificationPreferenceResponseOutput) ToNotificationPreferenceResponseOutputWithContext(ctx context.Context) NotificationPreferenceResponseOutput {
	return o
}

// Notification is required or not.
func (o NotificationPreferenceResponseOutput) SendNotification() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationPreferenceResponse) bool { return v.SendNotification }).(pulumi.BoolOutput)
}

// Name of the stage.
func (o NotificationPreferenceResponseOutput) StageName() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPreferenceResponse) string { return v.StageName }).(pulumi.StringOutput)
}

type NotificationPreferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (NotificationPreferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPreferenceResponse)(nil)).Elem()
}

func (o NotificationPreferenceResponseArrayOutput) ToNotificationPreferenceResponseArrayOutput() NotificationPreferenceResponseArrayOutput {
	return o
}

func (o NotificationPreferenceResponseArrayOutput) ToNotificationPreferenceResponseArrayOutputWithContext(ctx context.Context) NotificationPreferenceResponseArrayOutput {
	return o
}

func (o NotificationPreferenceResponseArrayOutput) Index(i pulumi.IntInput) NotificationPreferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPreferenceResponse {
		return vs[0].([]NotificationPreferenceResponse)[vs[1].(int)]
	}).(NotificationPreferenceResponseOutput)
}

// Shipping details.
type PackageShippingDetailsResponse struct {
	// Name of the carrier.
	CarrierName string `pulumi:"carrierName"`
	// Tracking Id of shipment.
	TrackingId string `pulumi:"trackingId"`
	// Url where shipment can be tracked.
	TrackingUrl string `pulumi:"trackingUrl"`
}

// Shipping details.
type PackageShippingDetailsResponseOutput struct{ *pulumi.OutputState }

func (PackageShippingDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageShippingDetailsResponse)(nil)).Elem()
}

func (o PackageShippingDetailsResponseOutput) ToPackageShippingDetailsResponseOutput() PackageShippingDetailsResponseOutput {
	return o
}

func (o PackageShippingDetailsResponseOutput) ToPackageShippingDetailsResponseOutputWithContext(ctx context.Context) PackageShippingDetailsResponseOutput {
	return o
}

// Name of the carrier.
func (o PackageShippingDetailsResponseOutput) CarrierName() pulumi.StringOutput {
	return o.ApplyT(func(v PackageShippingDetailsResponse) string { return v.CarrierName }).(pulumi.StringOutput)
}

// Tracking Id of shipment.
func (o PackageShippingDetailsResponseOutput) TrackingId() pulumi.StringOutput {
	return o.ApplyT(func(v PackageShippingDetailsResponse) string { return v.TrackingId }).(pulumi.StringOutput)
}

// Url where shipment can be tracked.
func (o PackageShippingDetailsResponseOutput) TrackingUrl() pulumi.StringOutput {
	return o.ApplyT(func(v PackageShippingDetailsResponse) string { return v.TrackingUrl }).(pulumi.StringOutput)
}

// Preferences related to the order
type Preferences struct {
	// Preferred data center region.
	PreferredDataCenterRegion []string `pulumi:"preferredDataCenterRegion"`
	// Preferences related to the shipment logistics of the sku.
	TransportPreferences *TransportPreferences `pulumi:"transportPreferences"`
}

// PreferencesInput is an input type that accepts PreferencesArgs and PreferencesOutput values.
// You can construct a concrete instance of `PreferencesInput` via:
//
//          PreferencesArgs{...}
type PreferencesInput interface {
	pulumi.Input

	ToPreferencesOutput() PreferencesOutput
	ToPreferencesOutputWithContext(context.Context) PreferencesOutput
}

// Preferences related to the order
type PreferencesArgs struct {
	// Preferred data center region.
	PreferredDataCenterRegion pulumi.StringArrayInput `pulumi:"preferredDataCenterRegion"`
	// Preferences related to the shipment logistics of the sku.
	TransportPreferences TransportPreferencesPtrInput `pulumi:"transportPreferences"`
}

func (PreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Preferences)(nil)).Elem()
}

func (i PreferencesArgs) ToPreferencesOutput() PreferencesOutput {
	return i.ToPreferencesOutputWithContext(context.Background())
}

func (i PreferencesArgs) ToPreferencesOutputWithContext(ctx context.Context) PreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesOutput)
}

func (i PreferencesArgs) ToPreferencesPtrOutput() PreferencesPtrOutput {
	return i.ToPreferencesPtrOutputWithContext(context.Background())
}

func (i PreferencesArgs) ToPreferencesPtrOutputWithContext(ctx context.Context) PreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesOutput).ToPreferencesPtrOutputWithContext(ctx)
}

// PreferencesPtrInput is an input type that accepts PreferencesArgs, PreferencesPtr and PreferencesPtrOutput values.
// You can construct a concrete instance of `PreferencesPtrInput` via:
//
//          PreferencesArgs{...}
//
//  or:
//
//          nil
type PreferencesPtrInput interface {
	pulumi.Input

	ToPreferencesPtrOutput() PreferencesPtrOutput
	ToPreferencesPtrOutputWithContext(context.Context) PreferencesPtrOutput
}

type preferencesPtrType PreferencesArgs

func PreferencesPtr(v *PreferencesArgs) PreferencesPtrInput {
	return (*preferencesPtrType)(v)
}

func (*preferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Preferences)(nil)).Elem()
}

func (i *preferencesPtrType) ToPreferencesPtrOutput() PreferencesPtrOutput {
	return i.ToPreferencesPtrOutputWithContext(context.Background())
}

func (i *preferencesPtrType) ToPreferencesPtrOutputWithContext(ctx context.Context) PreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesPtrOutput)
}

// Preferences related to the order
type PreferencesResponse struct {
	// Preferred data center region.
	PreferredDataCenterRegion []string `pulumi:"preferredDataCenterRegion"`
	// Preferences related to the shipment logistics of the sku.
	TransportPreferences *TransportPreferencesResponse `pulumi:"transportPreferences"`
}

// Preferences related to the order
type PreferencesResponseOutput struct{ *pulumi.OutputState }

func (PreferencesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferencesResponse)(nil)).Elem()
}

func (o PreferencesResponseOutput) ToPreferencesResponseOutput() PreferencesResponseOutput {
	return o
}

func (o PreferencesResponseOutput) ToPreferencesResponseOutputWithContext(ctx context.Context) PreferencesResponseOutput {
	return o
}

func (o PreferencesResponseOutput) ToPreferencesResponsePtrOutput() PreferencesResponsePtrOutput {
	return o.ToPreferencesResponsePtrOutputWithContext(context.Background())
}

func (o PreferencesResponseOutput) ToPreferencesResponsePtrOutputWithContext(ctx context.Context) PreferencesResponsePtrOutput {
	return o.ApplyT(func(v PreferencesResponse) *PreferencesResponse {
		return &v
	}).(PreferencesResponsePtrOutput)
}

// Preferred data center region.
func (o PreferencesResponseOutput) PreferredDataCenterRegion() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PreferencesResponse) []string { return v.PreferredDataCenterRegion }).(pulumi.StringArrayOutput)
}

// Preferences related to the shipment logistics of the sku.
func (o PreferencesResponseOutput) TransportPreferences() TransportPreferencesResponsePtrOutput {
	return o.ApplyT(func(v PreferencesResponse) *TransportPreferencesResponse { return v.TransportPreferences }).(TransportPreferencesResponsePtrOutput)
}

type PreferencesResponsePtrOutput struct{ *pulumi.OutputState }

func (PreferencesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferencesResponse)(nil)).Elem()
}

func (o PreferencesResponsePtrOutput) ToPreferencesResponsePtrOutput() PreferencesResponsePtrOutput {
	return o
}

func (o PreferencesResponsePtrOutput) ToPreferencesResponsePtrOutputWithContext(ctx context.Context) PreferencesResponsePtrOutput {
	return o
}

func (o PreferencesResponsePtrOutput) Elem() PreferencesResponseOutput {
	return o.ApplyT(func(v *PreferencesResponse) PreferencesResponse { return *v }).(PreferencesResponseOutput)
}

// Preferred data center region.
func (o PreferencesResponsePtrOutput) PreferredDataCenterRegion() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PreferencesResponse) []string {
		if v == nil {
			return nil
		}
		return v.PreferredDataCenterRegion
	}).(pulumi.StringArrayOutput)
}

// Preferences related to the shipment logistics of the sku.
func (o PreferencesResponsePtrOutput) TransportPreferences() TransportPreferencesResponsePtrOutput {
	return o.ApplyT(func(v *PreferencesResponse) *TransportPreferencesResponse {
		if v == nil {
			return nil
		}
		return v.TransportPreferences
	}).(TransportPreferencesResponsePtrOutput)
}

// Msi identity details of the resource
type ResourceIdentity struct {
	// Identity type
	Type *string `pulumi:"type"`
}

// ResourceIdentityInput is an input type that accepts ResourceIdentityArgs and ResourceIdentityOutput values.
// You can construct a concrete instance of `ResourceIdentityInput` via:
//
//          ResourceIdentityArgs{...}
type ResourceIdentityInput interface {
	pulumi.Input

	ToResourceIdentityOutput() ResourceIdentityOutput
	ToResourceIdentityOutputWithContext(context.Context) ResourceIdentityOutput
}

// Msi identity details of the resource
type ResourceIdentityArgs struct {
	// Identity type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ResourceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (i ResourceIdentityArgs) ToResourceIdentityOutput() ResourceIdentityOutput {
	return i.ToResourceIdentityOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput)
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput).ToResourceIdentityPtrOutputWithContext(ctx)
}

// ResourceIdentityPtrInput is an input type that accepts ResourceIdentityArgs, ResourceIdentityPtr and ResourceIdentityPtrOutput values.
// You can construct a concrete instance of `ResourceIdentityPtrInput` via:
//
//          ResourceIdentityArgs{...}
//
//  or:
//
//          nil
type ResourceIdentityPtrInput interface {
	pulumi.Input

	ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput
	ToResourceIdentityPtrOutputWithContext(context.Context) ResourceIdentityPtrOutput
}

type resourceIdentityPtrType ResourceIdentityArgs

func ResourceIdentityPtr(v *ResourceIdentityArgs) ResourceIdentityPtrInput {
	return (*resourceIdentityPtrType)(v)
}

func (*resourceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityPtrOutput)
}

// Msi identity details of the resource
type ResourceIdentityResponse struct {
	// Service Principal Id backing the Msi
	PrincipalId string `pulumi:"principalId"`
	// Home Tenant Id
	TenantId string `pulumi:"tenantId"`
	// Identity type
	Type *string `pulumi:"type"`
}

// Msi identity details of the resource
type ResourceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput {
	return o
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutputWithContext(ctx context.Context) ResourceIdentityResponseOutput {
	return o
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return o.ToResourceIdentityResponsePtrOutputWithContext(context.Background())
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) *ResourceIdentityResponse {
		return &v
	}).(ResourceIdentityResponsePtrOutput)
}

// Service Principal Id backing the Msi
func (o ResourceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// Home Tenant Id
func (o ResourceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Identity type
func (o ResourceIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ResourceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) Elem() ResourceIdentityResponseOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) ResourceIdentityResponse { return *v }).(ResourceIdentityResponseOutput)
}

// Service Principal Id backing the Msi
func (o ResourceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Home Tenant Id
func (o ResourceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Identity type
func (o ResourceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Credential details of the shares in account.
type ShareCredentialDetailsResponse struct {
	// Password for the share.
	Password string `pulumi:"password"`
	// Name of the share.
	ShareName string `pulumi:"shareName"`
	// Type of the share.
	ShareType string `pulumi:"shareType"`
	// Access protocols supported on the device.
	SupportedAccessProtocols []string `pulumi:"supportedAccessProtocols"`
	// User name for the share.
	UserName string `pulumi:"userName"`
}

// Shipping address where customer wishes to receive the device.
type ShippingAddress struct {
	// Type of address.
	AddressType *string `pulumi:"addressType"`
	// Name of the City.
	City *string `pulumi:"city"`
	// Name of the company.
	CompanyName *string `pulumi:"companyName"`
	// Name of the Country.
	Country string `pulumi:"country"`
	// Postal code.
	PostalCode string `pulumi:"postalCode"`
	// Name of the State or Province.
	StateOrProvince *string `pulumi:"stateOrProvince"`
	// Street Address line 1.
	StreetAddress1 string `pulumi:"streetAddress1"`
	// Street Address line 2.
	StreetAddress2 *string `pulumi:"streetAddress2"`
	// Street Address line 3.
	StreetAddress3 *string `pulumi:"streetAddress3"`
	// Extended Zip Code.
	ZipExtendedCode *string `pulumi:"zipExtendedCode"`
}

// ShippingAddressInput is an input type that accepts ShippingAddressArgs and ShippingAddressOutput values.
// You can construct a concrete instance of `ShippingAddressInput` via:
//
//          ShippingAddressArgs{...}
type ShippingAddressInput interface {
	pulumi.Input

	ToShippingAddressOutput() ShippingAddressOutput
	ToShippingAddressOutputWithContext(context.Context) ShippingAddressOutput
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressArgs struct {
	// Type of address.
	AddressType pulumi.StringPtrInput `pulumi:"addressType"`
	// Name of the City.
	City pulumi.StringPtrInput `pulumi:"city"`
	// Name of the company.
	CompanyName pulumi.StringPtrInput `pulumi:"companyName"`
	// Name of the Country.
	Country pulumi.StringInput `pulumi:"country"`
	// Postal code.
	PostalCode pulumi.StringInput `pulumi:"postalCode"`
	// Name of the State or Province.
	StateOrProvince pulumi.StringPtrInput `pulumi:"stateOrProvince"`
	// Street Address line 1.
	StreetAddress1 pulumi.StringInput `pulumi:"streetAddress1"`
	// Street Address line 2.
	StreetAddress2 pulumi.StringPtrInput `pulumi:"streetAddress2"`
	// Street Address line 3.
	StreetAddress3 pulumi.StringPtrInput `pulumi:"streetAddress3"`
	// Extended Zip Code.
	ZipExtendedCode pulumi.StringPtrInput `pulumi:"zipExtendedCode"`
}

func (ShippingAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingAddress)(nil)).Elem()
}

func (i ShippingAddressArgs) ToShippingAddressOutput() ShippingAddressOutput {
	return i.ToShippingAddressOutputWithContext(context.Background())
}

func (i ShippingAddressArgs) ToShippingAddressOutputWithContext(ctx context.Context) ShippingAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingAddressOutput)
}

func (i ShippingAddressArgs) ToShippingAddressPtrOutput() ShippingAddressPtrOutput {
	return i.ToShippingAddressPtrOutputWithContext(context.Background())
}

func (i ShippingAddressArgs) ToShippingAddressPtrOutputWithContext(ctx context.Context) ShippingAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingAddressOutput).ToShippingAddressPtrOutputWithContext(ctx)
}

// ShippingAddressPtrInput is an input type that accepts ShippingAddressArgs, ShippingAddressPtr and ShippingAddressPtrOutput values.
// You can construct a concrete instance of `ShippingAddressPtrInput` via:
//
//          ShippingAddressArgs{...}
//
//  or:
//
//          nil
type ShippingAddressPtrInput interface {
	pulumi.Input

	ToShippingAddressPtrOutput() ShippingAddressPtrOutput
	ToShippingAddressPtrOutputWithContext(context.Context) ShippingAddressPtrOutput
}

type shippingAddressPtrType ShippingAddressArgs

func ShippingAddressPtr(v *ShippingAddressArgs) ShippingAddressPtrInput {
	return (*shippingAddressPtrType)(v)
}

func (*shippingAddressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingAddress)(nil)).Elem()
}

func (i *shippingAddressPtrType) ToShippingAddressPtrOutput() ShippingAddressPtrOutput {
	return i.ToShippingAddressPtrOutputWithContext(context.Background())
}

func (i *shippingAddressPtrType) ToShippingAddressPtrOutputWithContext(ctx context.Context) ShippingAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingAddressPtrOutput)
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressResponse struct {
	// Type of address.
	AddressType *string `pulumi:"addressType"`
	// Name of the City.
	City *string `pulumi:"city"`
	// Name of the company.
	CompanyName *string `pulumi:"companyName"`
	// Name of the Country.
	Country string `pulumi:"country"`
	// Postal code.
	PostalCode string `pulumi:"postalCode"`
	// Name of the State or Province.
	StateOrProvince *string `pulumi:"stateOrProvince"`
	// Street Address line 1.
	StreetAddress1 string `pulumi:"streetAddress1"`
	// Street Address line 2.
	StreetAddress2 *string `pulumi:"streetAddress2"`
	// Street Address line 3.
	StreetAddress3 *string `pulumi:"streetAddress3"`
	// Extended Zip Code.
	ZipExtendedCode *string `pulumi:"zipExtendedCode"`
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressResponseOutput struct{ *pulumi.OutputState }

func (ShippingAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingAddressResponse)(nil)).Elem()
}

func (o ShippingAddressResponseOutput) ToShippingAddressResponseOutput() ShippingAddressResponseOutput {
	return o
}

func (o ShippingAddressResponseOutput) ToShippingAddressResponseOutputWithContext(ctx context.Context) ShippingAddressResponseOutput {
	return o
}

func (o ShippingAddressResponseOutput) ToShippingAddressResponsePtrOutput() ShippingAddressResponsePtrOutput {
	return o.ToShippingAddressResponsePtrOutputWithContext(context.Background())
}

func (o ShippingAddressResponseOutput) ToShippingAddressResponsePtrOutputWithContext(ctx context.Context) ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *ShippingAddressResponse {
		return &v
	}).(ShippingAddressResponsePtrOutput)
}

// Type of address.
func (o ShippingAddressResponseOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.AddressType }).(pulumi.StringPtrOutput)
}

// Name of the City.
func (o ShippingAddressResponseOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.City }).(pulumi.StringPtrOutput)
}

// Name of the company.
func (o ShippingAddressResponseOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.CompanyName }).(pulumi.StringPtrOutput)
}

// Name of the Country.
func (o ShippingAddressResponseOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingAddressResponse) string { return v.Country }).(pulumi.StringOutput)
}

// Postal code.
func (o ShippingAddressResponseOutput) PostalCode() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingAddressResponse) string { return v.PostalCode }).(pulumi.StringOutput)
}

// Name of the State or Province.
func (o ShippingAddressResponseOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.StateOrProvince }).(pulumi.StringPtrOutput)
}

// Street Address line 1.
func (o ShippingAddressResponseOutput) StreetAddress1() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingAddressResponse) string { return v.StreetAddress1 }).(pulumi.StringOutput)
}

// Street Address line 2.
func (o ShippingAddressResponseOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.StreetAddress2 }).(pulumi.StringPtrOutput)
}

// Street Address line 3.
func (o ShippingAddressResponseOutput) StreetAddress3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.StreetAddress3 }).(pulumi.StringPtrOutput)
}

// Extended Zip Code.
func (o ShippingAddressResponseOutput) ZipExtendedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.ZipExtendedCode }).(pulumi.StringPtrOutput)
}

type ShippingAddressResponsePtrOutput struct{ *pulumi.OutputState }

func (ShippingAddressResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingAddressResponse)(nil)).Elem()
}

func (o ShippingAddressResponsePtrOutput) ToShippingAddressResponsePtrOutput() ShippingAddressResponsePtrOutput {
	return o
}

func (o ShippingAddressResponsePtrOutput) ToShippingAddressResponsePtrOutputWithContext(ctx context.Context) ShippingAddressResponsePtrOutput {
	return o
}

func (o ShippingAddressResponsePtrOutput) Elem() ShippingAddressResponseOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) ShippingAddressResponse { return *v }).(ShippingAddressResponseOutput)
}

// Type of address.
func (o ShippingAddressResponsePtrOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressType
	}).(pulumi.StringPtrOutput)
}

// Name of the City.
func (o ShippingAddressResponsePtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

// Name of the company.
func (o ShippingAddressResponsePtrOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.CompanyName
	}).(pulumi.StringPtrOutput)
}

// Name of the Country.
func (o ShippingAddressResponsePtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Country
	}).(pulumi.StringPtrOutput)
}

// Postal code.
func (o ShippingAddressResponsePtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// Name of the State or Province.
func (o ShippingAddressResponsePtrOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.StateOrProvince
	}).(pulumi.StringPtrOutput)
}

// Street Address line 1.
func (o ShippingAddressResponsePtrOutput) StreetAddress1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StreetAddress1
	}).(pulumi.StringPtrOutput)
}

// Street Address line 2.
func (o ShippingAddressResponsePtrOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress2
	}).(pulumi.StringPtrOutput)
}

// Street Address line 3.
func (o ShippingAddressResponsePtrOutput) StreetAddress3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress3
	}).(pulumi.StringPtrOutput)
}

// Extended Zip Code.
func (o ShippingAddressResponsePtrOutput) ZipExtendedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.ZipExtendedCode
	}).(pulumi.StringPtrOutput)
}

// The Sku.
type Sku struct {
	// The display name of the sku.
	DisplayName *string `pulumi:"displayName"`
	// The sku family.
	Family *string `pulumi:"family"`
	// The sku name.
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The Sku.
type SkuArgs struct {
	// The display name of the sku.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The sku family.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The sku name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The Sku.
type SkuResponse struct {
	// The display name of the sku.
	DisplayName *string `pulumi:"displayName"`
	// The sku family.
	Family *string `pulumi:"family"`
	// The sku name.
	Name string `pulumi:"name"`
}

// The Sku.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// The display name of the sku.
func (o SkuResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The sku family.
func (o SkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The sku name.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// The display name of the sku.
func (o SkuResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The sku family.
func (o SkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The sku name.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Details for the storage account.
type StorageAccountDetails struct {
	// Account Type of the data to be transferred.
	DataAccountType string `pulumi:"dataAccountType"`
	// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	SharePassword *string `pulumi:"sharePassword"`
	// Storage Account Resource Id.
	StorageAccountId string `pulumi:"storageAccountId"`
}

// StorageAccountDetailsInput is an input type that accepts StorageAccountDetailsArgs and StorageAccountDetailsOutput values.
// You can construct a concrete instance of `StorageAccountDetailsInput` via:
//
//          StorageAccountDetailsArgs{...}
type StorageAccountDetailsInput interface {
	pulumi.Input

	ToStorageAccountDetailsOutput() StorageAccountDetailsOutput
	ToStorageAccountDetailsOutputWithContext(context.Context) StorageAccountDetailsOutput
}

// Details for the storage account.
type StorageAccountDetailsArgs struct {
	// Account Type of the data to be transferred.
	DataAccountType pulumi.StringInput `pulumi:"dataAccountType"`
	// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	SharePassword pulumi.StringPtrInput `pulumi:"sharePassword"`
	// Storage Account Resource Id.
	StorageAccountId pulumi.StringInput `pulumi:"storageAccountId"`
}

func (StorageAccountDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountDetails)(nil)).Elem()
}

func (i StorageAccountDetailsArgs) ToStorageAccountDetailsOutput() StorageAccountDetailsOutput {
	return i.ToStorageAccountDetailsOutputWithContext(context.Background())
}

func (i StorageAccountDetailsArgs) ToStorageAccountDetailsOutputWithContext(ctx context.Context) StorageAccountDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountDetailsOutput)
}

// Details for the storage account.
type StorageAccountDetailsResponse struct {
	// Account Type of the data to be transferred.
	DataAccountType string `pulumi:"dataAccountType"`
	// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	SharePassword *string `pulumi:"sharePassword"`
	// Storage Account Resource Id.
	StorageAccountId string `pulumi:"storageAccountId"`
}

// Details for the storage account.
type StorageAccountDetailsResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountDetailsResponse)(nil)).Elem()
}

func (o StorageAccountDetailsResponseOutput) ToStorageAccountDetailsResponseOutput() StorageAccountDetailsResponseOutput {
	return o
}

func (o StorageAccountDetailsResponseOutput) ToStorageAccountDetailsResponseOutputWithContext(ctx context.Context) StorageAccountDetailsResponseOutput {
	return o
}

// Account Type of the data to be transferred.
func (o StorageAccountDetailsResponseOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountDetailsResponse) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
func (o StorageAccountDetailsResponseOutput) SharePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccountDetailsResponse) *string { return v.SharePassword }).(pulumi.StringPtrOutput)
}

// Storage Account Resource Id.
func (o StorageAccountDetailsResponseOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountDetailsResponse) string { return v.StorageAccountId }).(pulumi.StringOutput)
}

// Details to transfer all data.
type TransferAllDetails struct {
	// Type of the account of data
	DataAccountType string `pulumi:"dataAccountType"`
	// To indicate if all Azure blobs have to be transferred
	TransferAllBlobs *bool `pulumi:"transferAllBlobs"`
	// To indicate if all Azure Files have to be transferred
	TransferAllFiles *bool `pulumi:"transferAllFiles"`
}

// TransferAllDetailsInput is an input type that accepts TransferAllDetailsArgs and TransferAllDetailsOutput values.
// You can construct a concrete instance of `TransferAllDetailsInput` via:
//
//          TransferAllDetailsArgs{...}
type TransferAllDetailsInput interface {
	pulumi.Input

	ToTransferAllDetailsOutput() TransferAllDetailsOutput
	ToTransferAllDetailsOutputWithContext(context.Context) TransferAllDetailsOutput
}

// Details to transfer all data.
type TransferAllDetailsArgs struct {
	// Type of the account of data
	DataAccountType pulumi.StringInput `pulumi:"dataAccountType"`
	// To indicate if all Azure blobs have to be transferred
	TransferAllBlobs pulumi.BoolPtrInput `pulumi:"transferAllBlobs"`
	// To indicate if all Azure Files have to be transferred
	TransferAllFiles pulumi.BoolPtrInput `pulumi:"transferAllFiles"`
}

func (TransferAllDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferAllDetails)(nil)).Elem()
}

func (i TransferAllDetailsArgs) ToTransferAllDetailsOutput() TransferAllDetailsOutput {
	return i.ToTransferAllDetailsOutputWithContext(context.Background())
}

func (i TransferAllDetailsArgs) ToTransferAllDetailsOutputWithContext(ctx context.Context) TransferAllDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferAllDetailsOutput)
}

func (i TransferAllDetailsArgs) ToTransferAllDetailsPtrOutput() TransferAllDetailsPtrOutput {
	return i.ToTransferAllDetailsPtrOutputWithContext(context.Background())
}

func (i TransferAllDetailsArgs) ToTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferAllDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferAllDetailsOutput).ToTransferAllDetailsPtrOutputWithContext(ctx)
}

// TransferAllDetailsPtrInput is an input type that accepts TransferAllDetailsArgs, TransferAllDetailsPtr and TransferAllDetailsPtrOutput values.
// You can construct a concrete instance of `TransferAllDetailsPtrInput` via:
//
//          TransferAllDetailsArgs{...}
//
//  or:
//
//          nil
type TransferAllDetailsPtrInput interface {
	pulumi.Input

	ToTransferAllDetailsPtrOutput() TransferAllDetailsPtrOutput
	ToTransferAllDetailsPtrOutputWithContext(context.Context) TransferAllDetailsPtrOutput
}

type transferAllDetailsPtrType TransferAllDetailsArgs

func TransferAllDetailsPtr(v *TransferAllDetailsArgs) TransferAllDetailsPtrInput {
	return (*transferAllDetailsPtrType)(v)
}

func (*transferAllDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferAllDetails)(nil)).Elem()
}

func (i *transferAllDetailsPtrType) ToTransferAllDetailsPtrOutput() TransferAllDetailsPtrOutput {
	return i.ToTransferAllDetailsPtrOutputWithContext(context.Background())
}

func (i *transferAllDetailsPtrType) ToTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferAllDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferAllDetailsPtrOutput)
}

// Details to transfer all data.
type TransferAllDetailsResponse struct {
	// Type of the account of data
	DataAccountType string `pulumi:"dataAccountType"`
	// To indicate if all Azure blobs have to be transferred
	TransferAllBlobs *bool `pulumi:"transferAllBlobs"`
	// To indicate if all Azure Files have to be transferred
	TransferAllFiles *bool `pulumi:"transferAllFiles"`
}

// Details to transfer all data.
type TransferAllDetailsResponseOutput struct{ *pulumi.OutputState }

func (TransferAllDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferAllDetailsResponse)(nil)).Elem()
}

func (o TransferAllDetailsResponseOutput) ToTransferAllDetailsResponseOutput() TransferAllDetailsResponseOutput {
	return o
}

func (o TransferAllDetailsResponseOutput) ToTransferAllDetailsResponseOutputWithContext(ctx context.Context) TransferAllDetailsResponseOutput {
	return o
}

func (o TransferAllDetailsResponseOutput) ToTransferAllDetailsResponsePtrOutput() TransferAllDetailsResponsePtrOutput {
	return o.ToTransferAllDetailsResponsePtrOutputWithContext(context.Background())
}

func (o TransferAllDetailsResponseOutput) ToTransferAllDetailsResponsePtrOutputWithContext(ctx context.Context) TransferAllDetailsResponsePtrOutput {
	return o.ApplyT(func(v TransferAllDetailsResponse) *TransferAllDetailsResponse {
		return &v
	}).(TransferAllDetailsResponsePtrOutput)
}

// Type of the account of data
func (o TransferAllDetailsResponseOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v TransferAllDetailsResponse) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// To indicate if all Azure blobs have to be transferred
func (o TransferAllDetailsResponseOutput) TransferAllBlobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferAllDetailsResponse) *bool { return v.TransferAllBlobs }).(pulumi.BoolPtrOutput)
}

// To indicate if all Azure Files have to be transferred
func (o TransferAllDetailsResponseOutput) TransferAllFiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferAllDetailsResponse) *bool { return v.TransferAllFiles }).(pulumi.BoolPtrOutput)
}

type TransferAllDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (TransferAllDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferAllDetailsResponse)(nil)).Elem()
}

func (o TransferAllDetailsResponsePtrOutput) ToTransferAllDetailsResponsePtrOutput() TransferAllDetailsResponsePtrOutput {
	return o
}

func (o TransferAllDetailsResponsePtrOutput) ToTransferAllDetailsResponsePtrOutputWithContext(ctx context.Context) TransferAllDetailsResponsePtrOutput {
	return o
}

func (o TransferAllDetailsResponsePtrOutput) Elem() TransferAllDetailsResponseOutput {
	return o.ApplyT(func(v *TransferAllDetailsResponse) TransferAllDetailsResponse { return *v }).(TransferAllDetailsResponseOutput)
}

// Type of the account of data
func (o TransferAllDetailsResponsePtrOutput) DataAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransferAllDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataAccountType
	}).(pulumi.StringPtrOutput)
}

// To indicate if all Azure blobs have to be transferred
func (o TransferAllDetailsResponsePtrOutput) TransferAllBlobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransferAllDetailsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.TransferAllBlobs
	}).(pulumi.BoolPtrOutput)
}

// To indicate if all Azure Files have to be transferred
func (o TransferAllDetailsResponsePtrOutput) TransferAllFiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransferAllDetailsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.TransferAllFiles
	}).(pulumi.BoolPtrOutput)
}

// Configuration for defining the transfer of data.
type TransferConfiguration struct {
	// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
	TransferAllDetails *TransferConfigurationTransferAllDetails `pulumi:"transferAllDetails"`
	// Type of the configuration for transfer.
	TransferConfigurationType string `pulumi:"transferConfigurationType"`
	// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
	TransferFilterDetails *TransferConfigurationTransferFilterDetails `pulumi:"transferFilterDetails"`
}

// TransferConfigurationInput is an input type that accepts TransferConfigurationArgs and TransferConfigurationOutput values.
// You can construct a concrete instance of `TransferConfigurationInput` via:
//
//          TransferConfigurationArgs{...}
type TransferConfigurationInput interface {
	pulumi.Input

	ToTransferConfigurationOutput() TransferConfigurationOutput
	ToTransferConfigurationOutputWithContext(context.Context) TransferConfigurationOutput
}

// Configuration for defining the transfer of data.
type TransferConfigurationArgs struct {
	// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
	TransferAllDetails TransferConfigurationTransferAllDetailsPtrInput `pulumi:"transferAllDetails"`
	// Type of the configuration for transfer.
	TransferConfigurationType pulumi.StringInput `pulumi:"transferConfigurationType"`
	// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
	TransferFilterDetails TransferConfigurationTransferFilterDetailsPtrInput `pulumi:"transferFilterDetails"`
}

func (TransferConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfiguration)(nil)).Elem()
}

func (i TransferConfigurationArgs) ToTransferConfigurationOutput() TransferConfigurationOutput {
	return i.ToTransferConfigurationOutputWithContext(context.Background())
}

func (i TransferConfigurationArgs) ToTransferConfigurationOutputWithContext(ctx context.Context) TransferConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationOutput)
}

// Configuration for defining the transfer of data.
type TransferConfigurationResponse struct {
	// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
	TransferAllDetails *TransferConfigurationResponseTransferAllDetails `pulumi:"transferAllDetails"`
	// Type of the configuration for transfer.
	TransferConfigurationType string `pulumi:"transferConfigurationType"`
	// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
	TransferFilterDetails *TransferConfigurationResponseTransferFilterDetails `pulumi:"transferFilterDetails"`
}

// Configuration for defining the transfer of data.
type TransferConfigurationResponseOutput struct{ *pulumi.OutputState }

func (TransferConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfigurationResponse)(nil)).Elem()
}

func (o TransferConfigurationResponseOutput) ToTransferConfigurationResponseOutput() TransferConfigurationResponseOutput {
	return o
}

func (o TransferConfigurationResponseOutput) ToTransferConfigurationResponseOutputWithContext(ctx context.Context) TransferConfigurationResponseOutput {
	return o
}

// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
func (o TransferConfigurationResponseOutput) TransferAllDetails() TransferConfigurationResponseTransferAllDetailsPtrOutput {
	return o.ApplyT(func(v TransferConfigurationResponse) *TransferConfigurationResponseTransferAllDetails {
		return v.TransferAllDetails
	}).(TransferConfigurationResponseTransferAllDetailsPtrOutput)
}

// Type of the configuration for transfer.
func (o TransferConfigurationResponseOutput) TransferConfigurationType() pulumi.StringOutput {
	return o.ApplyT(func(v TransferConfigurationResponse) string { return v.TransferConfigurationType }).(pulumi.StringOutput)
}

// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
func (o TransferConfigurationResponseOutput) TransferFilterDetails() TransferConfigurationResponseTransferFilterDetailsPtrOutput {
	return o.ApplyT(func(v TransferConfigurationResponse) *TransferConfigurationResponseTransferFilterDetails {
		return v.TransferFilterDetails
	}).(TransferConfigurationResponseTransferFilterDetailsPtrOutput)
}

// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
type TransferConfigurationResponseTransferAllDetails struct {
	// Details to transfer all data.
	Include *TransferAllDetailsResponse `pulumi:"include"`
}

// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
type TransferConfigurationResponseTransferAllDetailsOutput struct{ *pulumi.OutputState }

func (TransferConfigurationResponseTransferAllDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfigurationResponseTransferAllDetails)(nil)).Elem()
}

func (o TransferConfigurationResponseTransferAllDetailsOutput) ToTransferConfigurationResponseTransferAllDetailsOutput() TransferConfigurationResponseTransferAllDetailsOutput {
	return o
}

func (o TransferConfigurationResponseTransferAllDetailsOutput) ToTransferConfigurationResponseTransferAllDetailsOutputWithContext(ctx context.Context) TransferConfigurationResponseTransferAllDetailsOutput {
	return o
}

func (o TransferConfigurationResponseTransferAllDetailsOutput) ToTransferConfigurationResponseTransferAllDetailsPtrOutput() TransferConfigurationResponseTransferAllDetailsPtrOutput {
	return o.ToTransferConfigurationResponseTransferAllDetailsPtrOutputWithContext(context.Background())
}

func (o TransferConfigurationResponseTransferAllDetailsOutput) ToTransferConfigurationResponseTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationResponseTransferAllDetailsPtrOutput {
	return o.ApplyT(func(v TransferConfigurationResponseTransferAllDetails) *TransferConfigurationResponseTransferAllDetails {
		return &v
	}).(TransferConfigurationResponseTransferAllDetailsPtrOutput)
}

// Details to transfer all data.
func (o TransferConfigurationResponseTransferAllDetailsOutput) Include() TransferAllDetailsResponsePtrOutput {
	return o.ApplyT(func(v TransferConfigurationResponseTransferAllDetails) *TransferAllDetailsResponse { return v.Include }).(TransferAllDetailsResponsePtrOutput)
}

type TransferConfigurationResponseTransferAllDetailsPtrOutput struct{ *pulumi.OutputState }

func (TransferConfigurationResponseTransferAllDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferConfigurationResponseTransferAllDetails)(nil)).Elem()
}

func (o TransferConfigurationResponseTransferAllDetailsPtrOutput) ToTransferConfigurationResponseTransferAllDetailsPtrOutput() TransferConfigurationResponseTransferAllDetailsPtrOutput {
	return o
}

func (o TransferConfigurationResponseTransferAllDetailsPtrOutput) ToTransferConfigurationResponseTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationResponseTransferAllDetailsPtrOutput {
	return o
}

func (o TransferConfigurationResponseTransferAllDetailsPtrOutput) Elem() TransferConfigurationResponseTransferAllDetailsOutput {
	return o.ApplyT(func(v *TransferConfigurationResponseTransferAllDetails) TransferConfigurationResponseTransferAllDetails {
		return *v
	}).(TransferConfigurationResponseTransferAllDetailsOutput)
}

// Details to transfer all data.
func (o TransferConfigurationResponseTransferAllDetailsPtrOutput) Include() TransferAllDetailsResponsePtrOutput {
	return o.ApplyT(func(v *TransferConfigurationResponseTransferAllDetails) *TransferAllDetailsResponse {
		if v == nil {
			return nil
		}
		return v.Include
	}).(TransferAllDetailsResponsePtrOutput)
}

// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
type TransferConfigurationResponseTransferFilterDetails struct {
	// Details of the filtering the transfer of data.
	Include *TransferFilterDetailsResponse `pulumi:"include"`
}

// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
type TransferConfigurationResponseTransferFilterDetailsOutput struct{ *pulumi.OutputState }

func (TransferConfigurationResponseTransferFilterDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfigurationResponseTransferFilterDetails)(nil)).Elem()
}

func (o TransferConfigurationResponseTransferFilterDetailsOutput) ToTransferConfigurationResponseTransferFilterDetailsOutput() TransferConfigurationResponseTransferFilterDetailsOutput {
	return o
}

func (o TransferConfigurationResponseTransferFilterDetailsOutput) ToTransferConfigurationResponseTransferFilterDetailsOutputWithContext(ctx context.Context) TransferConfigurationResponseTransferFilterDetailsOutput {
	return o
}

func (o TransferConfigurationResponseTransferFilterDetailsOutput) ToTransferConfigurationResponseTransferFilterDetailsPtrOutput() TransferConfigurationResponseTransferFilterDetailsPtrOutput {
	return o.ToTransferConfigurationResponseTransferFilterDetailsPtrOutputWithContext(context.Background())
}

func (o TransferConfigurationResponseTransferFilterDetailsOutput) ToTransferConfigurationResponseTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationResponseTransferFilterDetailsPtrOutput {
	return o.ApplyT(func(v TransferConfigurationResponseTransferFilterDetails) *TransferConfigurationResponseTransferFilterDetails {
		return &v
	}).(TransferConfigurationResponseTransferFilterDetailsPtrOutput)
}

// Details of the filtering the transfer of data.
func (o TransferConfigurationResponseTransferFilterDetailsOutput) Include() TransferFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v TransferConfigurationResponseTransferFilterDetails) *TransferFilterDetailsResponse {
		return v.Include
	}).(TransferFilterDetailsResponsePtrOutput)
}

type TransferConfigurationResponseTransferFilterDetailsPtrOutput struct{ *pulumi.OutputState }

func (TransferConfigurationResponseTransferFilterDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferConfigurationResponseTransferFilterDetails)(nil)).Elem()
}

func (o TransferConfigurationResponseTransferFilterDetailsPtrOutput) ToTransferConfigurationResponseTransferFilterDetailsPtrOutput() TransferConfigurationResponseTransferFilterDetailsPtrOutput {
	return o
}

func (o TransferConfigurationResponseTransferFilterDetailsPtrOutput) ToTransferConfigurationResponseTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationResponseTransferFilterDetailsPtrOutput {
	return o
}

func (o TransferConfigurationResponseTransferFilterDetailsPtrOutput) Elem() TransferConfigurationResponseTransferFilterDetailsOutput {
	return o.ApplyT(func(v *TransferConfigurationResponseTransferFilterDetails) TransferConfigurationResponseTransferFilterDetails {
		return *v
	}).(TransferConfigurationResponseTransferFilterDetailsOutput)
}

// Details of the filtering the transfer of data.
func (o TransferConfigurationResponseTransferFilterDetailsPtrOutput) Include() TransferFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v *TransferConfigurationResponseTransferFilterDetails) *TransferFilterDetailsResponse {
		if v == nil {
			return nil
		}
		return v.Include
	}).(TransferFilterDetailsResponsePtrOutput)
}

// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
type TransferConfigurationTransferAllDetails struct {
	// Details to transfer all data.
	Include *TransferAllDetails `pulumi:"include"`
}

// TransferConfigurationTransferAllDetailsInput is an input type that accepts TransferConfigurationTransferAllDetailsArgs and TransferConfigurationTransferAllDetailsOutput values.
// You can construct a concrete instance of `TransferConfigurationTransferAllDetailsInput` via:
//
//          TransferConfigurationTransferAllDetailsArgs{...}
type TransferConfigurationTransferAllDetailsInput interface {
	pulumi.Input

	ToTransferConfigurationTransferAllDetailsOutput() TransferConfigurationTransferAllDetailsOutput
	ToTransferConfigurationTransferAllDetailsOutputWithContext(context.Context) TransferConfigurationTransferAllDetailsOutput
}

// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
type TransferConfigurationTransferAllDetailsArgs struct {
	// Details to transfer all data.
	Include TransferAllDetailsPtrInput `pulumi:"include"`
}

func (TransferConfigurationTransferAllDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfigurationTransferAllDetails)(nil)).Elem()
}

func (i TransferConfigurationTransferAllDetailsArgs) ToTransferConfigurationTransferAllDetailsOutput() TransferConfigurationTransferAllDetailsOutput {
	return i.ToTransferConfigurationTransferAllDetailsOutputWithContext(context.Background())
}

func (i TransferConfigurationTransferAllDetailsArgs) ToTransferConfigurationTransferAllDetailsOutputWithContext(ctx context.Context) TransferConfigurationTransferAllDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationTransferAllDetailsOutput)
}

func (i TransferConfigurationTransferAllDetailsArgs) ToTransferConfigurationTransferAllDetailsPtrOutput() TransferConfigurationTransferAllDetailsPtrOutput {
	return i.ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(context.Background())
}

func (i TransferConfigurationTransferAllDetailsArgs) ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationTransferAllDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationTransferAllDetailsOutput).ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(ctx)
}

// TransferConfigurationTransferAllDetailsPtrInput is an input type that accepts TransferConfigurationTransferAllDetailsArgs, TransferConfigurationTransferAllDetailsPtr and TransferConfigurationTransferAllDetailsPtrOutput values.
// You can construct a concrete instance of `TransferConfigurationTransferAllDetailsPtrInput` via:
//
//          TransferConfigurationTransferAllDetailsArgs{...}
//
//  or:
//
//          nil
type TransferConfigurationTransferAllDetailsPtrInput interface {
	pulumi.Input

	ToTransferConfigurationTransferAllDetailsPtrOutput() TransferConfigurationTransferAllDetailsPtrOutput
	ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(context.Context) TransferConfigurationTransferAllDetailsPtrOutput
}

type transferConfigurationTransferAllDetailsPtrType TransferConfigurationTransferAllDetailsArgs

func TransferConfigurationTransferAllDetailsPtr(v *TransferConfigurationTransferAllDetailsArgs) TransferConfigurationTransferAllDetailsPtrInput {
	return (*transferConfigurationTransferAllDetailsPtrType)(v)
}

func (*transferConfigurationTransferAllDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferConfigurationTransferAllDetails)(nil)).Elem()
}

func (i *transferConfigurationTransferAllDetailsPtrType) ToTransferConfigurationTransferAllDetailsPtrOutput() TransferConfigurationTransferAllDetailsPtrOutput {
	return i.ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(context.Background())
}

func (i *transferConfigurationTransferAllDetailsPtrType) ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationTransferAllDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationTransferAllDetailsPtrOutput)
}

// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
type TransferConfigurationTransferFilterDetails struct {
	// Details of the filtering the transfer of data.
	Include *TransferFilterDetails `pulumi:"include"`
}

// TransferConfigurationTransferFilterDetailsInput is an input type that accepts TransferConfigurationTransferFilterDetailsArgs and TransferConfigurationTransferFilterDetailsOutput values.
// You can construct a concrete instance of `TransferConfigurationTransferFilterDetailsInput` via:
//
//          TransferConfigurationTransferFilterDetailsArgs{...}
type TransferConfigurationTransferFilterDetailsInput interface {
	pulumi.Input

	ToTransferConfigurationTransferFilterDetailsOutput() TransferConfigurationTransferFilterDetailsOutput
	ToTransferConfigurationTransferFilterDetailsOutputWithContext(context.Context) TransferConfigurationTransferFilterDetailsOutput
}

// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
type TransferConfigurationTransferFilterDetailsArgs struct {
	// Details of the filtering the transfer of data.
	Include TransferFilterDetailsPtrInput `pulumi:"include"`
}

func (TransferConfigurationTransferFilterDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfigurationTransferFilterDetails)(nil)).Elem()
}

func (i TransferConfigurationTransferFilterDetailsArgs) ToTransferConfigurationTransferFilterDetailsOutput() TransferConfigurationTransferFilterDetailsOutput {
	return i.ToTransferConfigurationTransferFilterDetailsOutputWithContext(context.Background())
}

func (i TransferConfigurationTransferFilterDetailsArgs) ToTransferConfigurationTransferFilterDetailsOutputWithContext(ctx context.Context) TransferConfigurationTransferFilterDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationTransferFilterDetailsOutput)
}

func (i TransferConfigurationTransferFilterDetailsArgs) ToTransferConfigurationTransferFilterDetailsPtrOutput() TransferConfigurationTransferFilterDetailsPtrOutput {
	return i.ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(context.Background())
}

func (i TransferConfigurationTransferFilterDetailsArgs) ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationTransferFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationTransferFilterDetailsOutput).ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(ctx)
}

// TransferConfigurationTransferFilterDetailsPtrInput is an input type that accepts TransferConfigurationTransferFilterDetailsArgs, TransferConfigurationTransferFilterDetailsPtr and TransferConfigurationTransferFilterDetailsPtrOutput values.
// You can construct a concrete instance of `TransferConfigurationTransferFilterDetailsPtrInput` via:
//
//          TransferConfigurationTransferFilterDetailsArgs{...}
//
//  or:
//
//          nil
type TransferConfigurationTransferFilterDetailsPtrInput interface {
	pulumi.Input

	ToTransferConfigurationTransferFilterDetailsPtrOutput() TransferConfigurationTransferFilterDetailsPtrOutput
	ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(context.Context) TransferConfigurationTransferFilterDetailsPtrOutput
}

type transferConfigurationTransferFilterDetailsPtrType TransferConfigurationTransferFilterDetailsArgs

func TransferConfigurationTransferFilterDetailsPtr(v *TransferConfigurationTransferFilterDetailsArgs) TransferConfigurationTransferFilterDetailsPtrInput {
	return (*transferConfigurationTransferFilterDetailsPtrType)(v)
}

func (*transferConfigurationTransferFilterDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferConfigurationTransferFilterDetails)(nil)).Elem()
}

func (i *transferConfigurationTransferFilterDetailsPtrType) ToTransferConfigurationTransferFilterDetailsPtrOutput() TransferConfigurationTransferFilterDetailsPtrOutput {
	return i.ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(context.Background())
}

func (i *transferConfigurationTransferFilterDetailsPtrType) ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationTransferFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationTransferFilterDetailsPtrOutput)
}

// Details of the filtering the transfer of data.
type TransferFilterDetails struct {
	// Filter details to transfer Azure files.
	AzureFileFilterDetails *AzureFileFilterDetails `pulumi:"azureFileFilterDetails"`
	// Filter details to transfer blobs.
	BlobFilterDetails *BlobFilterDetails `pulumi:"blobFilterDetails"`
	// Type of the account of data.
	DataAccountType string `pulumi:"dataAccountType"`
	// Details of the filter files to be used for data transfer.
	FilterFileDetails []FilterFileDetails `pulumi:"filterFileDetails"`
}

// TransferFilterDetailsInput is an input type that accepts TransferFilterDetailsArgs and TransferFilterDetailsOutput values.
// You can construct a concrete instance of `TransferFilterDetailsInput` via:
//
//          TransferFilterDetailsArgs{...}
type TransferFilterDetailsInput interface {
	pulumi.Input

	ToTransferFilterDetailsOutput() TransferFilterDetailsOutput
	ToTransferFilterDetailsOutputWithContext(context.Context) TransferFilterDetailsOutput
}

// Details of the filtering the transfer of data.
type TransferFilterDetailsArgs struct {
	// Filter details to transfer Azure files.
	AzureFileFilterDetails AzureFileFilterDetailsPtrInput `pulumi:"azureFileFilterDetails"`
	// Filter details to transfer blobs.
	BlobFilterDetails BlobFilterDetailsPtrInput `pulumi:"blobFilterDetails"`
	// Type of the account of data.
	DataAccountType pulumi.StringInput `pulumi:"dataAccountType"`
	// Details of the filter files to be used for data transfer.
	FilterFileDetails FilterFileDetailsArrayInput `pulumi:"filterFileDetails"`
}

func (TransferFilterDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferFilterDetails)(nil)).Elem()
}

func (i TransferFilterDetailsArgs) ToTransferFilterDetailsOutput() TransferFilterDetailsOutput {
	return i.ToTransferFilterDetailsOutputWithContext(context.Background())
}

func (i TransferFilterDetailsArgs) ToTransferFilterDetailsOutputWithContext(ctx context.Context) TransferFilterDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferFilterDetailsOutput)
}

func (i TransferFilterDetailsArgs) ToTransferFilterDetailsPtrOutput() TransferFilterDetailsPtrOutput {
	return i.ToTransferFilterDetailsPtrOutputWithContext(context.Background())
}

func (i TransferFilterDetailsArgs) ToTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferFilterDetailsOutput).ToTransferFilterDetailsPtrOutputWithContext(ctx)
}

// TransferFilterDetailsPtrInput is an input type that accepts TransferFilterDetailsArgs, TransferFilterDetailsPtr and TransferFilterDetailsPtrOutput values.
// You can construct a concrete instance of `TransferFilterDetailsPtrInput` via:
//
//          TransferFilterDetailsArgs{...}
//
//  or:
//
//          nil
type TransferFilterDetailsPtrInput interface {
	pulumi.Input

	ToTransferFilterDetailsPtrOutput() TransferFilterDetailsPtrOutput
	ToTransferFilterDetailsPtrOutputWithContext(context.Context) TransferFilterDetailsPtrOutput
}

type transferFilterDetailsPtrType TransferFilterDetailsArgs

func TransferFilterDetailsPtr(v *TransferFilterDetailsArgs) TransferFilterDetailsPtrInput {
	return (*transferFilterDetailsPtrType)(v)
}

func (*transferFilterDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferFilterDetails)(nil)).Elem()
}

func (i *transferFilterDetailsPtrType) ToTransferFilterDetailsPtrOutput() TransferFilterDetailsPtrOutput {
	return i.ToTransferFilterDetailsPtrOutputWithContext(context.Background())
}

func (i *transferFilterDetailsPtrType) ToTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferFilterDetailsPtrOutput)
}

// Details of the filtering the transfer of data.
type TransferFilterDetailsResponse struct {
	// Filter details to transfer Azure files.
	AzureFileFilterDetails *AzureFileFilterDetailsResponse `pulumi:"azureFileFilterDetails"`
	// Filter details to transfer blobs.
	BlobFilterDetails *BlobFilterDetailsResponse `pulumi:"blobFilterDetails"`
	// Type of the account of data.
	DataAccountType string `pulumi:"dataAccountType"`
	// Details of the filter files to be used for data transfer.
	FilterFileDetails []FilterFileDetailsResponse `pulumi:"filterFileDetails"`
}

// Details of the filtering the transfer of data.
type TransferFilterDetailsResponseOutput struct{ *pulumi.OutputState }

func (TransferFilterDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferFilterDetailsResponse)(nil)).Elem()
}

func (o TransferFilterDetailsResponseOutput) ToTransferFilterDetailsResponseOutput() TransferFilterDetailsResponseOutput {
	return o
}

func (o TransferFilterDetailsResponseOutput) ToTransferFilterDetailsResponseOutputWithContext(ctx context.Context) TransferFilterDetailsResponseOutput {
	return o
}

func (o TransferFilterDetailsResponseOutput) ToTransferFilterDetailsResponsePtrOutput() TransferFilterDetailsResponsePtrOutput {
	return o.ToTransferFilterDetailsResponsePtrOutputWithContext(context.Background())
}

func (o TransferFilterDetailsResponseOutput) ToTransferFilterDetailsResponsePtrOutputWithContext(ctx context.Context) TransferFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v TransferFilterDetailsResponse) *TransferFilterDetailsResponse {
		return &v
	}).(TransferFilterDetailsResponsePtrOutput)
}

// Filter details to transfer Azure files.
func (o TransferFilterDetailsResponseOutput) AzureFileFilterDetails() AzureFileFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v TransferFilterDetailsResponse) *AzureFileFilterDetailsResponse { return v.AzureFileFilterDetails }).(AzureFileFilterDetailsResponsePtrOutput)
}

// Filter details to transfer blobs.
func (o TransferFilterDetailsResponseOutput) BlobFilterDetails() BlobFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v TransferFilterDetailsResponse) *BlobFilterDetailsResponse { return v.BlobFilterDetails }).(BlobFilterDetailsResponsePtrOutput)
}

// Type of the account of data.
func (o TransferFilterDetailsResponseOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v TransferFilterDetailsResponse) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// Details of the filter files to be used for data transfer.
func (o TransferFilterDetailsResponseOutput) FilterFileDetails() FilterFileDetailsResponseArrayOutput {
	return o.ApplyT(func(v TransferFilterDetailsResponse) []FilterFileDetailsResponse { return v.FilterFileDetails }).(FilterFileDetailsResponseArrayOutput)
}

type TransferFilterDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (TransferFilterDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferFilterDetailsResponse)(nil)).Elem()
}

func (o TransferFilterDetailsResponsePtrOutput) ToTransferFilterDetailsResponsePtrOutput() TransferFilterDetailsResponsePtrOutput {
	return o
}

func (o TransferFilterDetailsResponsePtrOutput) ToTransferFilterDetailsResponsePtrOutputWithContext(ctx context.Context) TransferFilterDetailsResponsePtrOutput {
	return o
}

func (o TransferFilterDetailsResponsePtrOutput) Elem() TransferFilterDetailsResponseOutput {
	return o.ApplyT(func(v *TransferFilterDetailsResponse) TransferFilterDetailsResponse { return *v }).(TransferFilterDetailsResponseOutput)
}

// Filter details to transfer Azure files.
func (o TransferFilterDetailsResponsePtrOutput) AzureFileFilterDetails() AzureFileFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v *TransferFilterDetailsResponse) *AzureFileFilterDetailsResponse {
		if v == nil {
			return nil
		}
		return v.AzureFileFilterDetails
	}).(AzureFileFilterDetailsResponsePtrOutput)
}

// Filter details to transfer blobs.
func (o TransferFilterDetailsResponsePtrOutput) BlobFilterDetails() BlobFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v *TransferFilterDetailsResponse) *BlobFilterDetailsResponse {
		if v == nil {
			return nil
		}
		return v.BlobFilterDetails
	}).(BlobFilterDetailsResponsePtrOutput)
}

// Type of the account of data.
func (o TransferFilterDetailsResponsePtrOutput) DataAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransferFilterDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataAccountType
	}).(pulumi.StringPtrOutput)
}

// Details of the filter files to be used for data transfer.
func (o TransferFilterDetailsResponsePtrOutput) FilterFileDetails() FilterFileDetailsResponseArrayOutput {
	return o.ApplyT(func(v *TransferFilterDetailsResponse) []FilterFileDetailsResponse {
		if v == nil {
			return nil
		}
		return v.FilterFileDetails
	}).(FilterFileDetailsResponseArrayOutput)
}

// Preferences related to the shipment logistics of the sku
type TransportPreferences struct {
	// Indicates Shipment Logistics type that the customer preferred.
	PreferredShipmentType string `pulumi:"preferredShipmentType"`
}

// TransportPreferencesInput is an input type that accepts TransportPreferencesArgs and TransportPreferencesOutput values.
// You can construct a concrete instance of `TransportPreferencesInput` via:
//
//          TransportPreferencesArgs{...}
type TransportPreferencesInput interface {
	pulumi.Input

	ToTransportPreferencesOutput() TransportPreferencesOutput
	ToTransportPreferencesOutputWithContext(context.Context) TransportPreferencesOutput
}

// Preferences related to the shipment logistics of the sku
type TransportPreferencesArgs struct {
	// Indicates Shipment Logistics type that the customer preferred.
	PreferredShipmentType pulumi.StringInput `pulumi:"preferredShipmentType"`
}

func (TransportPreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportPreferences)(nil)).Elem()
}

func (i TransportPreferencesArgs) ToTransportPreferencesOutput() TransportPreferencesOutput {
	return i.ToTransportPreferencesOutputWithContext(context.Background())
}

func (i TransportPreferencesArgs) ToTransportPreferencesOutputWithContext(ctx context.Context) TransportPreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportPreferencesOutput)
}

func (i TransportPreferencesArgs) ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput {
	return i.ToTransportPreferencesPtrOutputWithContext(context.Background())
}

func (i TransportPreferencesArgs) ToTransportPreferencesPtrOutputWithContext(ctx context.Context) TransportPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportPreferencesOutput).ToTransportPreferencesPtrOutputWithContext(ctx)
}

// TransportPreferencesPtrInput is an input type that accepts TransportPreferencesArgs, TransportPreferencesPtr and TransportPreferencesPtrOutput values.
// You can construct a concrete instance of `TransportPreferencesPtrInput` via:
//
//          TransportPreferencesArgs{...}
//
//  or:
//
//          nil
type TransportPreferencesPtrInput interface {
	pulumi.Input

	ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput
	ToTransportPreferencesPtrOutputWithContext(context.Context) TransportPreferencesPtrOutput
}

type transportPreferencesPtrType TransportPreferencesArgs

func TransportPreferencesPtr(v *TransportPreferencesArgs) TransportPreferencesPtrInput {
	return (*transportPreferencesPtrType)(v)
}

func (*transportPreferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportPreferences)(nil)).Elem()
}

func (i *transportPreferencesPtrType) ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput {
	return i.ToTransportPreferencesPtrOutputWithContext(context.Background())
}

func (i *transportPreferencesPtrType) ToTransportPreferencesPtrOutputWithContext(ctx context.Context) TransportPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportPreferencesPtrOutput)
}

// Preferences related to the shipment logistics of the sku
type TransportPreferencesResponse struct {
	// Indicates Shipment Logistics type that the customer preferred.
	PreferredShipmentType string `pulumi:"preferredShipmentType"`
}

// Preferences related to the shipment logistics of the sku
type TransportPreferencesResponseOutput struct{ *pulumi.OutputState }

func (TransportPreferencesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportPreferencesResponse)(nil)).Elem()
}

func (o TransportPreferencesResponseOutput) ToTransportPreferencesResponseOutput() TransportPreferencesResponseOutput {
	return o
}

func (o TransportPreferencesResponseOutput) ToTransportPreferencesResponseOutputWithContext(ctx context.Context) TransportPreferencesResponseOutput {
	return o
}

func (o TransportPreferencesResponseOutput) ToTransportPreferencesResponsePtrOutput() TransportPreferencesResponsePtrOutput {
	return o.ToTransportPreferencesResponsePtrOutputWithContext(context.Background())
}

func (o TransportPreferencesResponseOutput) ToTransportPreferencesResponsePtrOutputWithContext(ctx context.Context) TransportPreferencesResponsePtrOutput {
	return o.ApplyT(func(v TransportPreferencesResponse) *TransportPreferencesResponse {
		return &v
	}).(TransportPreferencesResponsePtrOutput)
}

// Indicates Shipment Logistics type that the customer preferred.
func (o TransportPreferencesResponseOutput) PreferredShipmentType() pulumi.StringOutput {
	return o.ApplyT(func(v TransportPreferencesResponse) string { return v.PreferredShipmentType }).(pulumi.StringOutput)
}

type TransportPreferencesResponsePtrOutput struct{ *pulumi.OutputState }

func (TransportPreferencesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportPreferencesResponse)(nil)).Elem()
}

func (o TransportPreferencesResponsePtrOutput) ToTransportPreferencesResponsePtrOutput() TransportPreferencesResponsePtrOutput {
	return o
}

func (o TransportPreferencesResponsePtrOutput) ToTransportPreferencesResponsePtrOutputWithContext(ctx context.Context) TransportPreferencesResponsePtrOutput {
	return o
}

func (o TransportPreferencesResponsePtrOutput) Elem() TransportPreferencesResponseOutput {
	return o.ApplyT(func(v *TransportPreferencesResponse) TransportPreferencesResponse { return *v }).(TransportPreferencesResponseOutput)
}

// Indicates Shipment Logistics type that the customer preferred.
func (o TransportPreferencesResponsePtrOutput) PreferredShipmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportPreferencesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PreferredShipmentType
	}).(pulumi.StringPtrOutput)
}

// Unencrypted credentials for accessing device.
type UnencryptedCredentialsResponse struct {
	// Name of the job.
	JobName string `pulumi:"jobName"`
	// Secrets related to this job.
	JobSecrets interface{} `pulumi:"jobSecrets"`
}

func init() {
	pulumi.RegisterOutputType(AccountCredentialDetailsResponseOutput{})
	pulumi.RegisterOutputType(AccountCredentialDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(AdditionalErrorInfoResponseOutput{})
	pulumi.RegisterOutputType(AdditionalErrorInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplianceNetworkConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplianceNetworkConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFileFilterDetailsOutput{})
	pulumi.RegisterOutputType(AzureFileFilterDetailsPtrOutput{})
	pulumi.RegisterOutputType(AzureFileFilterDetailsResponseOutput{})
	pulumi.RegisterOutputType(AzureFileFilterDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(BlobFilterDetailsOutput{})
	pulumi.RegisterOutputType(BlobFilterDetailsPtrOutput{})
	pulumi.RegisterOutputType(BlobFilterDetailsResponseOutput{})
	pulumi.RegisterOutputType(BlobFilterDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudErrorResponseOutput{})
	pulumi.RegisterOutputType(CloudErrorResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(ContactDetailsOutput{})
	pulumi.RegisterOutputType(ContactDetailsResponseOutput{})
	pulumi.RegisterOutputType(CopyProgressResponseOutput{})
	pulumi.RegisterOutputType(CopyProgressResponseArrayOutput{})
	pulumi.RegisterOutputType(DataBoxAccountCopyLogDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxDiskCopyLogDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxDiskCopyProgressResponseOutput{})
	pulumi.RegisterOutputType(DataBoxDiskCopyProgressResponseArrayOutput{})
	pulumi.RegisterOutputType(DataBoxDiskJobDetailsOutput{})
	pulumi.RegisterOutputType(DataBoxDiskJobDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxDiskJobSecretsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxHeavyAccountCopyLogDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxHeavyJobDetailsOutput{})
	pulumi.RegisterOutputType(DataBoxHeavyJobDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxHeavyJobSecretsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxHeavySecretResponseOutput{})
	pulumi.RegisterOutputType(DataBoxHeavySecretResponseArrayOutput{})
	pulumi.RegisterOutputType(DataBoxJobDetailsOutput{})
	pulumi.RegisterOutputType(DataBoxJobDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxSecretResponseOutput{})
	pulumi.RegisterOutputType(DataBoxSecretResponseArrayOutput{})
	pulumi.RegisterOutputType(DataExportDetailsOutput{})
	pulumi.RegisterOutputType(DataExportDetailsArrayOutput{})
	pulumi.RegisterOutputType(DataExportDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataExportDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(DataImportDetailsOutput{})
	pulumi.RegisterOutputType(DataImportDetailsArrayOutput{})
	pulumi.RegisterOutputType(DataImportDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataImportDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(DataboxJobSecretsResponseOutput{})
	pulumi.RegisterOutputType(DcAccessSecurityCodeResponseOutput{})
	pulumi.RegisterOutputType(DiskSecretResponseOutput{})
	pulumi.RegisterOutputType(DiskSecretResponseArrayOutput{})
	pulumi.RegisterOutputType(FilterFileDetailsOutput{})
	pulumi.RegisterOutputType(FilterFileDetailsArrayOutput{})
	pulumi.RegisterOutputType(FilterFileDetailsResponseOutput{})
	pulumi.RegisterOutputType(FilterFileDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(JobDeliveryInfoOutput{})
	pulumi.RegisterOutputType(JobDeliveryInfoPtrOutput{})
	pulumi.RegisterOutputType(JobDeliveryInfoResponseOutput{})
	pulumi.RegisterOutputType(JobDeliveryInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(JobStagesResponseOutput{})
	pulumi.RegisterOutputType(JobStagesResponseArrayOutput{})
	pulumi.RegisterOutputType(KeyEncryptionKeyResponseOutput{})
	pulumi.RegisterOutputType(ManagedDiskDetailsOutput{})
	pulumi.RegisterOutputType(ManagedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(NotificationPreferenceOutput{})
	pulumi.RegisterOutputType(NotificationPreferenceArrayOutput{})
	pulumi.RegisterOutputType(NotificationPreferenceResponseOutput{})
	pulumi.RegisterOutputType(NotificationPreferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(PackageShippingDetailsResponseOutput{})
	pulumi.RegisterOutputType(PreferencesOutput{})
	pulumi.RegisterOutputType(PreferencesPtrOutput{})
	pulumi.RegisterOutputType(PreferencesResponseOutput{})
	pulumi.RegisterOutputType(PreferencesResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityOutput{})
	pulumi.RegisterOutputType(ResourceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ShareCredentialDetailsResponseOutput{})
	pulumi.RegisterOutputType(ShareCredentialDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(ShippingAddressOutput{})
	pulumi.RegisterOutputType(ShippingAddressPtrOutput{})
	pulumi.RegisterOutputType(ShippingAddressResponseOutput{})
	pulumi.RegisterOutputType(ShippingAddressResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageAccountDetailsOutput{})
	pulumi.RegisterOutputType(StorageAccountDetailsResponseOutput{})
	pulumi.RegisterOutputType(TransferAllDetailsOutput{})
	pulumi.RegisterOutputType(TransferAllDetailsPtrOutput{})
	pulumi.RegisterOutputType(TransferAllDetailsResponseOutput{})
	pulumi.RegisterOutputType(TransferAllDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(TransferConfigurationOutput{})
	pulumi.RegisterOutputType(TransferConfigurationResponseOutput{})
	pulumi.RegisterOutputType(TransferConfigurationResponseTransferAllDetailsOutput{})
	pulumi.RegisterOutputType(TransferConfigurationResponseTransferAllDetailsPtrOutput{})
	pulumi.RegisterOutputType(TransferConfigurationResponseTransferFilterDetailsOutput{})
	pulumi.RegisterOutputType(TransferConfigurationResponseTransferFilterDetailsPtrOutput{})
	pulumi.RegisterOutputType(TransferConfigurationTransferAllDetailsOutput{})
	pulumi.RegisterOutputType(TransferConfigurationTransferAllDetailsPtrOutput{})
	pulumi.RegisterOutputType(TransferConfigurationTransferFilterDetailsOutput{})
	pulumi.RegisterOutputType(TransferConfigurationTransferFilterDetailsPtrOutput{})
	pulumi.RegisterOutputType(TransferFilterDetailsOutput{})
	pulumi.RegisterOutputType(TransferFilterDetailsPtrOutput{})
	pulumi.RegisterOutputType(TransferFilterDetailsResponseOutput{})
	pulumi.RegisterOutputType(TransferFilterDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(TransportPreferencesOutput{})
	pulumi.RegisterOutputType(TransportPreferencesPtrOutput{})
	pulumi.RegisterOutputType(TransportPreferencesResponseOutput{})
	pulumi.RegisterOutputType(TransportPreferencesResponsePtrOutput{})
	pulumi.RegisterOutputType(UnencryptedCredentialsResponseOutput{})
	pulumi.RegisterOutputType(UnencryptedCredentialsResponseArrayOutput{})
}
