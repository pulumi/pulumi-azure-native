// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Defines the parameters for the cache expiration action.
type CacheExpirationActionParameters struct {
	// Caching behavior for the requests
	CacheBehavior string `pulumi:"cacheBehavior"`
	// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
	CacheDuration *string `pulumi:"cacheDuration"`
	// The level at which the content needs to be cached.
	CacheType string `pulumi:"cacheType"`
	OdataType string `pulumi:"odataType"`
}

// CacheExpirationActionParametersInput is an input type that accepts CacheExpirationActionParametersArgs and CacheExpirationActionParametersOutput values.
// You can construct a concrete instance of `CacheExpirationActionParametersInput` via:
//
//          CacheExpirationActionParametersArgs{...}
type CacheExpirationActionParametersInput interface {
	pulumi.Input

	ToCacheExpirationActionParametersOutput() CacheExpirationActionParametersOutput
	ToCacheExpirationActionParametersOutputWithContext(context.Context) CacheExpirationActionParametersOutput
}

// Defines the parameters for the cache expiration action.
type CacheExpirationActionParametersArgs struct {
	// Caching behavior for the requests
	CacheBehavior pulumi.StringInput `pulumi:"cacheBehavior"`
	// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
	CacheDuration pulumi.StringPtrInput `pulumi:"cacheDuration"`
	// The level at which the content needs to be cached.
	CacheType pulumi.StringInput `pulumi:"cacheType"`
	OdataType pulumi.StringInput `pulumi:"odataType"`
}

func (CacheExpirationActionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheExpirationActionParameters)(nil)).Elem()
}

func (i CacheExpirationActionParametersArgs) ToCacheExpirationActionParametersOutput() CacheExpirationActionParametersOutput {
	return i.ToCacheExpirationActionParametersOutputWithContext(context.Background())
}

func (i CacheExpirationActionParametersArgs) ToCacheExpirationActionParametersOutputWithContext(ctx context.Context) CacheExpirationActionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheExpirationActionParametersOutput)
}

// Defines the parameters for the cache expiration action.
type CacheExpirationActionParametersResponse struct {
	// Caching behavior for the requests
	CacheBehavior string `pulumi:"cacheBehavior"`
	// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
	CacheDuration *string `pulumi:"cacheDuration"`
	// The level at which the content needs to be cached.
	CacheType string `pulumi:"cacheType"`
	OdataType string `pulumi:"odataType"`
}

// Defines the parameters for the cache expiration action.
type CacheExpirationActionParametersResponseOutput struct{ *pulumi.OutputState }

func (CacheExpirationActionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheExpirationActionParametersResponse)(nil)).Elem()
}

func (o CacheExpirationActionParametersResponseOutput) ToCacheExpirationActionParametersResponseOutput() CacheExpirationActionParametersResponseOutput {
	return o
}

func (o CacheExpirationActionParametersResponseOutput) ToCacheExpirationActionParametersResponseOutputWithContext(ctx context.Context) CacheExpirationActionParametersResponseOutput {
	return o
}

// Caching behavior for the requests
func (o CacheExpirationActionParametersResponseOutput) CacheBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v CacheExpirationActionParametersResponse) string { return v.CacheBehavior }).(pulumi.StringOutput)
}

// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
func (o CacheExpirationActionParametersResponseOutput) CacheDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheExpirationActionParametersResponse) *string { return v.CacheDuration }).(pulumi.StringPtrOutput)
}

// The level at which the content needs to be cached.
func (o CacheExpirationActionParametersResponseOutput) CacheType() pulumi.StringOutput {
	return o.ApplyT(func(v CacheExpirationActionParametersResponse) string { return v.CacheType }).(pulumi.StringOutput)
}

func (o CacheExpirationActionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v CacheExpirationActionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Defines the parameters for the cache-key query string action.
type CacheKeyQueryStringActionParameters struct {
	OdataType string `pulumi:"odataType"`
	// query parameters to include or exclude (comma separated).
	QueryParameters *string `pulumi:"queryParameters"`
	// Caching behavior for the requests
	QueryStringBehavior string `pulumi:"queryStringBehavior"`
}

// CacheKeyQueryStringActionParametersInput is an input type that accepts CacheKeyQueryStringActionParametersArgs and CacheKeyQueryStringActionParametersOutput values.
// You can construct a concrete instance of `CacheKeyQueryStringActionParametersInput` via:
//
//          CacheKeyQueryStringActionParametersArgs{...}
type CacheKeyQueryStringActionParametersInput interface {
	pulumi.Input

	ToCacheKeyQueryStringActionParametersOutput() CacheKeyQueryStringActionParametersOutput
	ToCacheKeyQueryStringActionParametersOutputWithContext(context.Context) CacheKeyQueryStringActionParametersOutput
}

// Defines the parameters for the cache-key query string action.
type CacheKeyQueryStringActionParametersArgs struct {
	OdataType pulumi.StringInput `pulumi:"odataType"`
	// query parameters to include or exclude (comma separated).
	QueryParameters pulumi.StringPtrInput `pulumi:"queryParameters"`
	// Caching behavior for the requests
	QueryStringBehavior pulumi.StringInput `pulumi:"queryStringBehavior"`
}

func (CacheKeyQueryStringActionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheKeyQueryStringActionParameters)(nil)).Elem()
}

func (i CacheKeyQueryStringActionParametersArgs) ToCacheKeyQueryStringActionParametersOutput() CacheKeyQueryStringActionParametersOutput {
	return i.ToCacheKeyQueryStringActionParametersOutputWithContext(context.Background())
}

func (i CacheKeyQueryStringActionParametersArgs) ToCacheKeyQueryStringActionParametersOutputWithContext(ctx context.Context) CacheKeyQueryStringActionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheKeyQueryStringActionParametersOutput)
}

// Defines the parameters for the cache-key query string action.
type CacheKeyQueryStringActionParametersResponse struct {
	OdataType string `pulumi:"odataType"`
	// query parameters to include or exclude (comma separated).
	QueryParameters *string `pulumi:"queryParameters"`
	// Caching behavior for the requests
	QueryStringBehavior string `pulumi:"queryStringBehavior"`
}

// Defines the parameters for the cache-key query string action.
type CacheKeyQueryStringActionParametersResponseOutput struct{ *pulumi.OutputState }

func (CacheKeyQueryStringActionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheKeyQueryStringActionParametersResponse)(nil)).Elem()
}

func (o CacheKeyQueryStringActionParametersResponseOutput) ToCacheKeyQueryStringActionParametersResponseOutput() CacheKeyQueryStringActionParametersResponseOutput {
	return o
}

func (o CacheKeyQueryStringActionParametersResponseOutput) ToCacheKeyQueryStringActionParametersResponseOutputWithContext(ctx context.Context) CacheKeyQueryStringActionParametersResponseOutput {
	return o
}

func (o CacheKeyQueryStringActionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v CacheKeyQueryStringActionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// query parameters to include or exclude (comma separated).
func (o CacheKeyQueryStringActionParametersResponseOutput) QueryParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheKeyQueryStringActionParametersResponse) *string { return v.QueryParameters }).(pulumi.StringPtrOutput)
}

// Caching behavior for the requests
func (o CacheKeyQueryStringActionParametersResponseOutput) QueryStringBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v CacheKeyQueryStringActionParametersResponse) string { return v.QueryStringBehavior }).(pulumi.StringOutput)
}

// Defines the ARM Resource ID for the linked endpoints
type CdnEndpointResponse struct {
	// ARM Resource ID string.
	Id *string `pulumi:"id"`
}

// Defines the ARM Resource ID for the linked endpoints
type CdnEndpointResponseOutput struct{ *pulumi.OutputState }

func (CdnEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CdnEndpointResponse)(nil)).Elem()
}

func (o CdnEndpointResponseOutput) ToCdnEndpointResponseOutput() CdnEndpointResponseOutput {
	return o
}

func (o CdnEndpointResponseOutput) ToCdnEndpointResponseOutputWithContext(ctx context.Context) CdnEndpointResponseOutput {
	return o
}

// ARM Resource ID string.
func (o CdnEndpointResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CdnEndpointResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type CdnEndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (CdnEndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CdnEndpointResponse)(nil)).Elem()
}

func (o CdnEndpointResponseArrayOutput) ToCdnEndpointResponseArrayOutput() CdnEndpointResponseArrayOutput {
	return o
}

func (o CdnEndpointResponseArrayOutput) ToCdnEndpointResponseArrayOutputWithContext(ctx context.Context) CdnEndpointResponseArrayOutput {
	return o
}

func (o CdnEndpointResponseArrayOutput) Index(i pulumi.IntInput) CdnEndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CdnEndpointResponse {
		return vs[0].([]CdnEndpointResponse)[vs[1].(int)]
	}).(CdnEndpointResponseOutput)
}

// Defines the parameters for Cookies match conditions
type CookiesMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of Cookies to be matched
	Selector string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// CookiesMatchConditionParametersInput is an input type that accepts CookiesMatchConditionParametersArgs and CookiesMatchConditionParametersOutput values.
// You can construct a concrete instance of `CookiesMatchConditionParametersInput` via:
//
//          CookiesMatchConditionParametersArgs{...}
type CookiesMatchConditionParametersInput interface {
	pulumi.Input

	ToCookiesMatchConditionParametersOutput() CookiesMatchConditionParametersOutput
	ToCookiesMatchConditionParametersOutputWithContext(context.Context) CookiesMatchConditionParametersOutput
}

// Defines the parameters for Cookies match conditions
type CookiesMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// Name of Cookies to be matched
	Selector pulumi.StringInput `pulumi:"selector"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (CookiesMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CookiesMatchConditionParameters)(nil)).Elem()
}

func (i CookiesMatchConditionParametersArgs) ToCookiesMatchConditionParametersOutput() CookiesMatchConditionParametersOutput {
	return i.ToCookiesMatchConditionParametersOutputWithContext(context.Background())
}

func (i CookiesMatchConditionParametersArgs) ToCookiesMatchConditionParametersOutputWithContext(ctx context.Context) CookiesMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CookiesMatchConditionParametersOutput)
}

// Defines the parameters for Cookies match conditions
type CookiesMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of Cookies to be matched
	Selector string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for Cookies match conditions
type CookiesMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (CookiesMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CookiesMatchConditionParametersResponse)(nil)).Elem()
}

func (o CookiesMatchConditionParametersResponseOutput) ToCookiesMatchConditionParametersResponseOutput() CookiesMatchConditionParametersResponseOutput {
	return o
}

func (o CookiesMatchConditionParametersResponseOutput) ToCookiesMatchConditionParametersResponseOutputWithContext(ctx context.Context) CookiesMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o CookiesMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o CookiesMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o CookiesMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o CookiesMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Name of Cookies to be matched
func (o CookiesMatchConditionParametersResponseOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersResponse) string { return v.Selector }).(pulumi.StringOutput)
}

// List of transforms
func (o CookiesMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CookiesMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRule struct {
	// Describes what action to be applied when rule matches
	Action string `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions []MatchCondition `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name string `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority int `pulumi:"priority"`
}

// CustomRuleInput is an input type that accepts CustomRuleArgs and CustomRuleOutput values.
// You can construct a concrete instance of `CustomRuleInput` via:
//
//          CustomRuleArgs{...}
type CustomRuleInput interface {
	pulumi.Input

	ToCustomRuleOutput() CustomRuleOutput
	ToCustomRuleOutputWithContext(context.Context) CustomRuleOutput
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRuleArgs struct {
	// Describes what action to be applied when rule matches
	Action pulumi.StringInput `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions MatchConditionArrayInput `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name pulumi.StringInput `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority pulumi.IntInput `pulumi:"priority"`
}

func (CustomRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRule)(nil)).Elem()
}

func (i CustomRuleArgs) ToCustomRuleOutput() CustomRuleOutput {
	return i.ToCustomRuleOutputWithContext(context.Background())
}

func (i CustomRuleArgs) ToCustomRuleOutputWithContext(ctx context.Context) CustomRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleOutput)
}

// CustomRuleArrayInput is an input type that accepts CustomRuleArray and CustomRuleArrayOutput values.
// You can construct a concrete instance of `CustomRuleArrayInput` via:
//
//          CustomRuleArray{ CustomRuleArgs{...} }
type CustomRuleArrayInput interface {
	pulumi.Input

	ToCustomRuleArrayOutput() CustomRuleArrayOutput
	ToCustomRuleArrayOutputWithContext(context.Context) CustomRuleArrayOutput
}

type CustomRuleArray []CustomRuleInput

func (CustomRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRule)(nil)).Elem()
}

func (i CustomRuleArray) ToCustomRuleArrayOutput() CustomRuleArrayOutput {
	return i.ToCustomRuleArrayOutputWithContext(context.Background())
}

func (i CustomRuleArray) ToCustomRuleArrayOutputWithContext(ctx context.Context) CustomRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleArrayOutput)
}

// Defines contents of custom rules
type CustomRuleList struct {
	// List of rules
	Rules []CustomRule `pulumi:"rules"`
}

// CustomRuleListInput is an input type that accepts CustomRuleListArgs and CustomRuleListOutput values.
// You can construct a concrete instance of `CustomRuleListInput` via:
//
//          CustomRuleListArgs{...}
type CustomRuleListInput interface {
	pulumi.Input

	ToCustomRuleListOutput() CustomRuleListOutput
	ToCustomRuleListOutputWithContext(context.Context) CustomRuleListOutput
}

// Defines contents of custom rules
type CustomRuleListArgs struct {
	// List of rules
	Rules CustomRuleArrayInput `pulumi:"rules"`
}

func (CustomRuleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleList)(nil)).Elem()
}

func (i CustomRuleListArgs) ToCustomRuleListOutput() CustomRuleListOutput {
	return i.ToCustomRuleListOutputWithContext(context.Background())
}

func (i CustomRuleListArgs) ToCustomRuleListOutputWithContext(ctx context.Context) CustomRuleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListOutput)
}

func (i CustomRuleListArgs) ToCustomRuleListPtrOutput() CustomRuleListPtrOutput {
	return i.ToCustomRuleListPtrOutputWithContext(context.Background())
}

func (i CustomRuleListArgs) ToCustomRuleListPtrOutputWithContext(ctx context.Context) CustomRuleListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListOutput).ToCustomRuleListPtrOutputWithContext(ctx)
}

// CustomRuleListPtrInput is an input type that accepts CustomRuleListArgs, CustomRuleListPtr and CustomRuleListPtrOutput values.
// You can construct a concrete instance of `CustomRuleListPtrInput` via:
//
//          CustomRuleListArgs{...}
//
//  or:
//
//          nil
type CustomRuleListPtrInput interface {
	pulumi.Input

	ToCustomRuleListPtrOutput() CustomRuleListPtrOutput
	ToCustomRuleListPtrOutputWithContext(context.Context) CustomRuleListPtrOutput
}

type customRuleListPtrType CustomRuleListArgs

func CustomRuleListPtr(v *CustomRuleListArgs) CustomRuleListPtrInput {
	return (*customRuleListPtrType)(v)
}

func (*customRuleListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRuleList)(nil)).Elem()
}

func (i *customRuleListPtrType) ToCustomRuleListPtrOutput() CustomRuleListPtrOutput {
	return i.ToCustomRuleListPtrOutputWithContext(context.Background())
}

func (i *customRuleListPtrType) ToCustomRuleListPtrOutputWithContext(ctx context.Context) CustomRuleListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListPtrOutput)
}

// Defines contents of custom rules
type CustomRuleListResponse struct {
	// List of rules
	Rules []CustomRuleResponse `pulumi:"rules"`
}

// Defines contents of custom rules
type CustomRuleListResponseOutput struct{ *pulumi.OutputState }

func (CustomRuleListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleListResponse)(nil)).Elem()
}

func (o CustomRuleListResponseOutput) ToCustomRuleListResponseOutput() CustomRuleListResponseOutput {
	return o
}

func (o CustomRuleListResponseOutput) ToCustomRuleListResponseOutputWithContext(ctx context.Context) CustomRuleListResponseOutput {
	return o
}

func (o CustomRuleListResponseOutput) ToCustomRuleListResponsePtrOutput() CustomRuleListResponsePtrOutput {
	return o.ToCustomRuleListResponsePtrOutputWithContext(context.Background())
}

func (o CustomRuleListResponseOutput) ToCustomRuleListResponsePtrOutputWithContext(ctx context.Context) CustomRuleListResponsePtrOutput {
	return o.ApplyT(func(v CustomRuleListResponse) *CustomRuleListResponse {
		return &v
	}).(CustomRuleListResponsePtrOutput)
}

// List of rules
func (o CustomRuleListResponseOutput) Rules() CustomRuleResponseArrayOutput {
	return o.ApplyT(func(v CustomRuleListResponse) []CustomRuleResponse { return v.Rules }).(CustomRuleResponseArrayOutput)
}

type CustomRuleListResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomRuleListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRuleListResponse)(nil)).Elem()
}

func (o CustomRuleListResponsePtrOutput) ToCustomRuleListResponsePtrOutput() CustomRuleListResponsePtrOutput {
	return o
}

func (o CustomRuleListResponsePtrOutput) ToCustomRuleListResponsePtrOutputWithContext(ctx context.Context) CustomRuleListResponsePtrOutput {
	return o
}

func (o CustomRuleListResponsePtrOutput) Elem() CustomRuleListResponseOutput {
	return o.ApplyT(func(v *CustomRuleListResponse) CustomRuleListResponse { return *v }).(CustomRuleListResponseOutput)
}

// List of rules
func (o CustomRuleListResponsePtrOutput) Rules() CustomRuleResponseArrayOutput {
	return o.ApplyT(func(v *CustomRuleListResponse) []CustomRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(CustomRuleResponseArrayOutput)
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRuleResponse struct {
	// Describes what action to be applied when rule matches
	Action string `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions []MatchConditionResponse `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name string `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority int `pulumi:"priority"`
}

// Defines the common attributes for a custom rule that can be included in a waf policy
type CustomRuleResponseOutput struct{ *pulumi.OutputState }

func (CustomRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleResponse)(nil)).Elem()
}

func (o CustomRuleResponseOutput) ToCustomRuleResponseOutput() CustomRuleResponseOutput {
	return o
}

func (o CustomRuleResponseOutput) ToCustomRuleResponseOutputWithContext(ctx context.Context) CustomRuleResponseOutput {
	return o
}

// Describes what action to be applied when rule matches
func (o CustomRuleResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRuleResponse) string { return v.Action }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o CustomRuleResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRuleResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// List of match conditions.
func (o CustomRuleResponseOutput) MatchConditions() MatchConditionResponseArrayOutput {
	return o.ApplyT(func(v CustomRuleResponse) []MatchConditionResponse { return v.MatchConditions }).(MatchConditionResponseArrayOutput)
}

// Defines the name of the custom rule
func (o CustomRuleResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRuleResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines in what order this rule be evaluated in the overall list of custom rules
func (o CustomRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v CustomRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

type CustomRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (CustomRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRuleResponse)(nil)).Elem()
}

func (o CustomRuleResponseArrayOutput) ToCustomRuleResponseArrayOutput() CustomRuleResponseArrayOutput {
	return o
}

func (o CustomRuleResponseArrayOutput) ToCustomRuleResponseArrayOutputWithContext(ctx context.Context) CustomRuleResponseArrayOutput {
	return o
}

func (o CustomRuleResponseArrayOutput) Index(i pulumi.IntInput) CustomRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomRuleResponse {
		return vs[0].([]CustomRuleResponse)[vs[1].(int)]
	}).(CustomRuleResponseOutput)
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOrigin struct {
	// Origin is enabled for load balancing or not. By default, origin is always enabled.
	Enabled *bool `pulumi:"enabled"`
	// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
	HostName string `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535.
	HttpPort *int `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535.
	HttpsPort *int `pulumi:"httpsPort"`
	// Origin name which must be unique within the endpoint.
	Name string `pulumi:"name"`
	// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
	OriginHostHeader *string `pulumi:"originHostHeader"`
	// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
	Priority *int `pulumi:"priority"`
	// The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private'
	PrivateLinkAlias *string `pulumi:"privateLinkAlias"`
	// A custom message to be included in the approval request to connect to the Private Link.
	PrivateLinkApprovalMessage *string `pulumi:"privateLinkApprovalMessage"`
	// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
	PrivateLinkLocation *string `pulumi:"privateLinkLocation"`
	// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
	Weight *int `pulumi:"weight"`
}

// DeepCreatedOriginInput is an input type that accepts DeepCreatedOriginArgs and DeepCreatedOriginOutput values.
// You can construct a concrete instance of `DeepCreatedOriginInput` via:
//
//          DeepCreatedOriginArgs{...}
type DeepCreatedOriginInput interface {
	pulumi.Input

	ToDeepCreatedOriginOutput() DeepCreatedOriginOutput
	ToDeepCreatedOriginOutputWithContext(context.Context) DeepCreatedOriginOutput
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginArgs struct {
	// Origin is enabled for load balancing or not. By default, origin is always enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535.
	HttpPort pulumi.IntPtrInput `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535.
	HttpsPort pulumi.IntPtrInput `pulumi:"httpsPort"`
	// Origin name which must be unique within the endpoint.
	Name pulumi.StringInput `pulumi:"name"`
	// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
	OriginHostHeader pulumi.StringPtrInput `pulumi:"originHostHeader"`
	// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private'
	PrivateLinkAlias pulumi.StringPtrInput `pulumi:"privateLinkAlias"`
	// A custom message to be included in the approval request to connect to the Private Link.
	PrivateLinkApprovalMessage pulumi.StringPtrInput `pulumi:"privateLinkApprovalMessage"`
	// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
	PrivateLinkLocation pulumi.StringPtrInput `pulumi:"privateLinkLocation"`
	// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
	PrivateLinkResourceId pulumi.StringPtrInput `pulumi:"privateLinkResourceId"`
	// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (DeepCreatedOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOrigin)(nil)).Elem()
}

func (i DeepCreatedOriginArgs) ToDeepCreatedOriginOutput() DeepCreatedOriginOutput {
	return i.ToDeepCreatedOriginOutputWithContext(context.Background())
}

func (i DeepCreatedOriginArgs) ToDeepCreatedOriginOutputWithContext(ctx context.Context) DeepCreatedOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginOutput)
}

// DeepCreatedOriginArrayInput is an input type that accepts DeepCreatedOriginArray and DeepCreatedOriginArrayOutput values.
// You can construct a concrete instance of `DeepCreatedOriginArrayInput` via:
//
//          DeepCreatedOriginArray{ DeepCreatedOriginArgs{...} }
type DeepCreatedOriginArrayInput interface {
	pulumi.Input

	ToDeepCreatedOriginArrayOutput() DeepCreatedOriginArrayOutput
	ToDeepCreatedOriginArrayOutputWithContext(context.Context) DeepCreatedOriginArrayOutput
}

type DeepCreatedOriginArray []DeepCreatedOriginInput

func (DeepCreatedOriginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOrigin)(nil)).Elem()
}

func (i DeepCreatedOriginArray) ToDeepCreatedOriginArrayOutput() DeepCreatedOriginArrayOutput {
	return i.ToDeepCreatedOriginArrayOutputWithContext(context.Background())
}

func (i DeepCreatedOriginArray) ToDeepCreatedOriginArrayOutputWithContext(ctx context.Context) DeepCreatedOriginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginArrayOutput)
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroup struct {
	// Health probe settings to the origin that is used to determine the health of the origin.
	HealthProbeSettings *HealthProbeParameters `pulumi:"healthProbeSettings"`
	// Origin group name which must be unique within the endpoint.
	Name string `pulumi:"name"`
	// The source of the content being delivered via CDN within given origin group.
	Origins []ResourceReference `pulumi:"origins"`
	// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
	ResponseBasedOriginErrorDetectionSettings *ResponseBasedOriginErrorDetectionParameters `pulumi:"responseBasedOriginErrorDetectionSettings"`
	// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
	TrafficRestorationTimeToHealedOrNewEndpointsInMinutes *int `pulumi:"trafficRestorationTimeToHealedOrNewEndpointsInMinutes"`
}

// DeepCreatedOriginGroupInput is an input type that accepts DeepCreatedOriginGroupArgs and DeepCreatedOriginGroupOutput values.
// You can construct a concrete instance of `DeepCreatedOriginGroupInput` via:
//
//          DeepCreatedOriginGroupArgs{...}
type DeepCreatedOriginGroupInput interface {
	pulumi.Input

	ToDeepCreatedOriginGroupOutput() DeepCreatedOriginGroupOutput
	ToDeepCreatedOriginGroupOutputWithContext(context.Context) DeepCreatedOriginGroupOutput
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroupArgs struct {
	// Health probe settings to the origin that is used to determine the health of the origin.
	HealthProbeSettings HealthProbeParametersPtrInput `pulumi:"healthProbeSettings"`
	// Origin group name which must be unique within the endpoint.
	Name pulumi.StringInput `pulumi:"name"`
	// The source of the content being delivered via CDN within given origin group.
	Origins ResourceReferenceArrayInput `pulumi:"origins"`
	// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
	ResponseBasedOriginErrorDetectionSettings ResponseBasedOriginErrorDetectionParametersPtrInput `pulumi:"responseBasedOriginErrorDetectionSettings"`
	// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
	TrafficRestorationTimeToHealedOrNewEndpointsInMinutes pulumi.IntPtrInput `pulumi:"trafficRestorationTimeToHealedOrNewEndpointsInMinutes"`
}

func (DeepCreatedOriginGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginGroup)(nil)).Elem()
}

func (i DeepCreatedOriginGroupArgs) ToDeepCreatedOriginGroupOutput() DeepCreatedOriginGroupOutput {
	return i.ToDeepCreatedOriginGroupOutputWithContext(context.Background())
}

func (i DeepCreatedOriginGroupArgs) ToDeepCreatedOriginGroupOutputWithContext(ctx context.Context) DeepCreatedOriginGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginGroupOutput)
}

// DeepCreatedOriginGroupArrayInput is an input type that accepts DeepCreatedOriginGroupArray and DeepCreatedOriginGroupArrayOutput values.
// You can construct a concrete instance of `DeepCreatedOriginGroupArrayInput` via:
//
//          DeepCreatedOriginGroupArray{ DeepCreatedOriginGroupArgs{...} }
type DeepCreatedOriginGroupArrayInput interface {
	pulumi.Input

	ToDeepCreatedOriginGroupArrayOutput() DeepCreatedOriginGroupArrayOutput
	ToDeepCreatedOriginGroupArrayOutputWithContext(context.Context) DeepCreatedOriginGroupArrayOutput
}

type DeepCreatedOriginGroupArray []DeepCreatedOriginGroupInput

func (DeepCreatedOriginGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginGroup)(nil)).Elem()
}

func (i DeepCreatedOriginGroupArray) ToDeepCreatedOriginGroupArrayOutput() DeepCreatedOriginGroupArrayOutput {
	return i.ToDeepCreatedOriginGroupArrayOutputWithContext(context.Background())
}

func (i DeepCreatedOriginGroupArray) ToDeepCreatedOriginGroupArrayOutputWithContext(ctx context.Context) DeepCreatedOriginGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginGroupArrayOutput)
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroupResponse struct {
	// Health probe settings to the origin that is used to determine the health of the origin.
	HealthProbeSettings *HealthProbeParametersResponse `pulumi:"healthProbeSettings"`
	// Origin group name which must be unique within the endpoint.
	Name string `pulumi:"name"`
	// The source of the content being delivered via CDN within given origin group.
	Origins []ResourceReferenceResponse `pulumi:"origins"`
	// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
	ResponseBasedOriginErrorDetectionSettings *ResponseBasedOriginErrorDetectionParametersResponse `pulumi:"responseBasedOriginErrorDetectionSettings"`
	// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
	TrafficRestorationTimeToHealedOrNewEndpointsInMinutes *int `pulumi:"trafficRestorationTimeToHealedOrNewEndpointsInMinutes"`
}

// The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.
type DeepCreatedOriginGroupResponseOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginGroupResponse)(nil)).Elem()
}

func (o DeepCreatedOriginGroupResponseOutput) ToDeepCreatedOriginGroupResponseOutput() DeepCreatedOriginGroupResponseOutput {
	return o
}

func (o DeepCreatedOriginGroupResponseOutput) ToDeepCreatedOriginGroupResponseOutputWithContext(ctx context.Context) DeepCreatedOriginGroupResponseOutput {
	return o
}

// Health probe settings to the origin that is used to determine the health of the origin.
func (o DeepCreatedOriginGroupResponseOutput) HealthProbeSettings() HealthProbeParametersResponsePtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupResponse) *HealthProbeParametersResponse { return v.HealthProbeSettings }).(HealthProbeParametersResponsePtrOutput)
}

// Origin group name which must be unique within the endpoint.
func (o DeepCreatedOriginGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The source of the content being delivered via CDN within given origin group.
func (o DeepCreatedOriginGroupResponseOutput) Origins() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupResponse) []ResourceReferenceResponse { return v.Origins }).(ResourceReferenceResponseArrayOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported.
func (o DeepCreatedOriginGroupResponseOutput) ResponseBasedOriginErrorDetectionSettings() ResponseBasedOriginErrorDetectionParametersResponsePtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupResponse) *ResponseBasedOriginErrorDetectionParametersResponse {
		return v.ResponseBasedOriginErrorDetectionSettings
	}).(ResponseBasedOriginErrorDetectionParametersResponsePtrOutput)
}

// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.
func (o DeepCreatedOriginGroupResponseOutput) TrafficRestorationTimeToHealedOrNewEndpointsInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginGroupResponse) *int {
		return v.TrafficRestorationTimeToHealedOrNewEndpointsInMinutes
	}).(pulumi.IntPtrOutput)
}

type DeepCreatedOriginGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginGroupResponse)(nil)).Elem()
}

func (o DeepCreatedOriginGroupResponseArrayOutput) ToDeepCreatedOriginGroupResponseArrayOutput() DeepCreatedOriginGroupResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginGroupResponseArrayOutput) ToDeepCreatedOriginGroupResponseArrayOutputWithContext(ctx context.Context) DeepCreatedOriginGroupResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginGroupResponseArrayOutput) Index(i pulumi.IntInput) DeepCreatedOriginGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedOriginGroupResponse {
		return vs[0].([]DeepCreatedOriginGroupResponse)[vs[1].(int)]
	}).(DeepCreatedOriginGroupResponseOutput)
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginResponse struct {
	// Origin is enabled for load balancing or not. By default, origin is always enabled.
	Enabled *bool `pulumi:"enabled"`
	// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
	HostName string `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535.
	HttpPort *int `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535.
	HttpsPort *int `pulumi:"httpsPort"`
	// Origin name which must be unique within the endpoint.
	Name string `pulumi:"name"`
	// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
	OriginHostHeader *string `pulumi:"originHostHeader"`
	// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
	Priority *int `pulumi:"priority"`
	// The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private'
	PrivateLinkAlias *string `pulumi:"privateLinkAlias"`
	// A custom message to be included in the approval request to connect to the Private Link.
	PrivateLinkApprovalMessage *string `pulumi:"privateLinkApprovalMessage"`
	// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
	PrivateLinkLocation *string `pulumi:"privateLinkLocation"`
	// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
	Weight *int `pulumi:"weight"`
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginResponseOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginResponse)(nil)).Elem()
}

func (o DeepCreatedOriginResponseOutput) ToDeepCreatedOriginResponseOutput() DeepCreatedOriginResponseOutput {
	return o
}

func (o DeepCreatedOriginResponseOutput) ToDeepCreatedOriginResponseOutputWithContext(ctx context.Context) DeepCreatedOriginResponseOutput {
	return o
}

// Origin is enabled for load balancing or not. By default, origin is always enabled.
func (o DeepCreatedOriginResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.
func (o DeepCreatedOriginResponseOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) string { return v.HostName }).(pulumi.StringOutput)
}

// The value of the HTTP port. Must be between 1 and 65535.
func (o DeepCreatedOriginResponseOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// The value of the HTTPS port. Must be between 1 and 65535.
func (o DeepCreatedOriginResponseOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Origin name which must be unique within the endpoint.
func (o DeepCreatedOriginResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
func (o DeepCreatedOriginResponseOutput) OriginHostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *string { return v.OriginHostHeader }).(pulumi.StringPtrOutput)
}

// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.
func (o DeepCreatedOriginResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private'
func (o DeepCreatedOriginResponseOutput) PrivateLinkAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *string { return v.PrivateLinkAlias }).(pulumi.StringPtrOutput)
}

// A custom message to be included in the approval request to connect to the Private Link.
func (o DeepCreatedOriginResponseOutput) PrivateLinkApprovalMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *string { return v.PrivateLinkApprovalMessage }).(pulumi.StringPtrOutput)
}

// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
func (o DeepCreatedOriginResponseOutput) PrivateLinkLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *string { return v.PrivateLinkLocation }).(pulumi.StringPtrOutput)
}

// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
func (o DeepCreatedOriginResponseOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *string { return v.PrivateLinkResourceId }).(pulumi.StringPtrOutput)
}

// Weight of the origin in given origin group for load balancing. Must be between 1 and 1000
func (o DeepCreatedOriginResponseOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type DeepCreatedOriginResponseArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginResponse)(nil)).Elem()
}

func (o DeepCreatedOriginResponseArrayOutput) ToDeepCreatedOriginResponseArrayOutput() DeepCreatedOriginResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginResponseArrayOutput) ToDeepCreatedOriginResponseArrayOutputWithContext(ctx context.Context) DeepCreatedOriginResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginResponseArrayOutput) Index(i pulumi.IntInput) DeepCreatedOriginResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedOriginResponse {
		return vs[0].([]DeepCreatedOriginResponse)[vs[1].(int)]
	}).(DeepCreatedOriginResponseOutput)
}

// A rule that specifies a set of actions and conditions
type DeliveryRule struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions []interface{} `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions []interface{} `pulumi:"conditions"`
	// Name of the rule
	Name *string `pulumi:"name"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order int `pulumi:"order"`
}

// DeliveryRuleInput is an input type that accepts DeliveryRuleArgs and DeliveryRuleOutput values.
// You can construct a concrete instance of `DeliveryRuleInput` via:
//
//          DeliveryRuleArgs{...}
type DeliveryRuleInput interface {
	pulumi.Input

	ToDeliveryRuleOutput() DeliveryRuleOutput
	ToDeliveryRuleOutputWithContext(context.Context) DeliveryRuleOutput
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleArgs struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions pulumi.ArrayInput `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions pulumi.ArrayInput `pulumi:"conditions"`
	// Name of the rule
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order pulumi.IntInput `pulumi:"order"`
}

func (DeliveryRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRule)(nil)).Elem()
}

func (i DeliveryRuleArgs) ToDeliveryRuleOutput() DeliveryRuleOutput {
	return i.ToDeliveryRuleOutputWithContext(context.Background())
}

func (i DeliveryRuleArgs) ToDeliveryRuleOutputWithContext(ctx context.Context) DeliveryRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleOutput)
}

// DeliveryRuleArrayInput is an input type that accepts DeliveryRuleArray and DeliveryRuleArrayOutput values.
// You can construct a concrete instance of `DeliveryRuleArrayInput` via:
//
//          DeliveryRuleArray{ DeliveryRuleArgs{...} }
type DeliveryRuleArrayInput interface {
	pulumi.Input

	ToDeliveryRuleArrayOutput() DeliveryRuleArrayOutput
	ToDeliveryRuleArrayOutputWithContext(context.Context) DeliveryRuleArrayOutput
}

type DeliveryRuleArray []DeliveryRuleInput

func (DeliveryRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRule)(nil)).Elem()
}

func (i DeliveryRuleArray) ToDeliveryRuleArrayOutput() DeliveryRuleArrayOutput {
	return i.ToDeliveryRuleArrayOutputWithContext(context.Background())
}

func (i DeliveryRuleArray) ToDeliveryRuleArrayOutputWithContext(ctx context.Context) DeliveryRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleArrayOutput)
}

// Defines the cache expiration action for the delivery rule.
type DeliveryRuleCacheExpirationAction struct {
	// The name of the action for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheExpirationActionParameters `pulumi:"parameters"`
}

// DeliveryRuleCacheExpirationActionInput is an input type that accepts DeliveryRuleCacheExpirationActionArgs and DeliveryRuleCacheExpirationActionOutput values.
// You can construct a concrete instance of `DeliveryRuleCacheExpirationActionInput` via:
//
//          DeliveryRuleCacheExpirationActionArgs{...}
type DeliveryRuleCacheExpirationActionInput interface {
	pulumi.Input

	ToDeliveryRuleCacheExpirationActionOutput() DeliveryRuleCacheExpirationActionOutput
	ToDeliveryRuleCacheExpirationActionOutputWithContext(context.Context) DeliveryRuleCacheExpirationActionOutput
}

// Defines the cache expiration action for the delivery rule.
type DeliveryRuleCacheExpirationActionArgs struct {
	// The name of the action for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheExpirationActionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleCacheExpirationActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCacheExpirationAction)(nil)).Elem()
}

func (i DeliveryRuleCacheExpirationActionArgs) ToDeliveryRuleCacheExpirationActionOutput() DeliveryRuleCacheExpirationActionOutput {
	return i.ToDeliveryRuleCacheExpirationActionOutputWithContext(context.Background())
}

func (i DeliveryRuleCacheExpirationActionArgs) ToDeliveryRuleCacheExpirationActionOutputWithContext(ctx context.Context) DeliveryRuleCacheExpirationActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleCacheExpirationActionOutput)
}

// Defines the cache expiration action for the delivery rule.
type DeliveryRuleCacheExpirationActionResponse struct {
	// The name of the action for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheExpirationActionParametersResponse `pulumi:"parameters"`
}

// Defines the cache expiration action for the delivery rule.
type DeliveryRuleCacheExpirationActionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleCacheExpirationActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCacheExpirationActionResponse)(nil)).Elem()
}

func (o DeliveryRuleCacheExpirationActionResponseOutput) ToDeliveryRuleCacheExpirationActionResponseOutput() DeliveryRuleCacheExpirationActionResponseOutput {
	return o
}

func (o DeliveryRuleCacheExpirationActionResponseOutput) ToDeliveryRuleCacheExpirationActionResponseOutputWithContext(ctx context.Context) DeliveryRuleCacheExpirationActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
func (o DeliveryRuleCacheExpirationActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleCacheExpirationActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleCacheExpirationActionResponseOutput) Parameters() CacheExpirationActionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleCacheExpirationActionResponse) CacheExpirationActionParametersResponse {
		return v.Parameters
	}).(CacheExpirationActionParametersResponseOutput)
}

// Defines the cache-key query string action for the delivery rule.
type DeliveryRuleCacheKeyQueryStringAction struct {
	// The name of the action for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheKeyQueryStringActionParameters `pulumi:"parameters"`
}

// DeliveryRuleCacheKeyQueryStringActionInput is an input type that accepts DeliveryRuleCacheKeyQueryStringActionArgs and DeliveryRuleCacheKeyQueryStringActionOutput values.
// You can construct a concrete instance of `DeliveryRuleCacheKeyQueryStringActionInput` via:
//
//          DeliveryRuleCacheKeyQueryStringActionArgs{...}
type DeliveryRuleCacheKeyQueryStringActionInput interface {
	pulumi.Input

	ToDeliveryRuleCacheKeyQueryStringActionOutput() DeliveryRuleCacheKeyQueryStringActionOutput
	ToDeliveryRuleCacheKeyQueryStringActionOutputWithContext(context.Context) DeliveryRuleCacheKeyQueryStringActionOutput
}

// Defines the cache-key query string action for the delivery rule.
type DeliveryRuleCacheKeyQueryStringActionArgs struct {
	// The name of the action for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheKeyQueryStringActionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleCacheKeyQueryStringActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCacheKeyQueryStringAction)(nil)).Elem()
}

func (i DeliveryRuleCacheKeyQueryStringActionArgs) ToDeliveryRuleCacheKeyQueryStringActionOutput() DeliveryRuleCacheKeyQueryStringActionOutput {
	return i.ToDeliveryRuleCacheKeyQueryStringActionOutputWithContext(context.Background())
}

func (i DeliveryRuleCacheKeyQueryStringActionArgs) ToDeliveryRuleCacheKeyQueryStringActionOutputWithContext(ctx context.Context) DeliveryRuleCacheKeyQueryStringActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleCacheKeyQueryStringActionOutput)
}

// Defines the cache-key query string action for the delivery rule.
type DeliveryRuleCacheKeyQueryStringActionResponse struct {
	// The name of the action for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters CacheKeyQueryStringActionParametersResponse `pulumi:"parameters"`
}

// Defines the cache-key query string action for the delivery rule.
type DeliveryRuleCacheKeyQueryStringActionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleCacheKeyQueryStringActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCacheKeyQueryStringActionResponse)(nil)).Elem()
}

func (o DeliveryRuleCacheKeyQueryStringActionResponseOutput) ToDeliveryRuleCacheKeyQueryStringActionResponseOutput() DeliveryRuleCacheKeyQueryStringActionResponseOutput {
	return o
}

func (o DeliveryRuleCacheKeyQueryStringActionResponseOutput) ToDeliveryRuleCacheKeyQueryStringActionResponseOutputWithContext(ctx context.Context) DeliveryRuleCacheKeyQueryStringActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
func (o DeliveryRuleCacheKeyQueryStringActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleCacheKeyQueryStringActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleCacheKeyQueryStringActionResponseOutput) Parameters() CacheKeyQueryStringActionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleCacheKeyQueryStringActionResponse) CacheKeyQueryStringActionParametersResponse {
		return v.Parameters
	}).(CacheKeyQueryStringActionParametersResponseOutput)
}

// Defines the Cookies condition for the delivery rule.
type DeliveryRuleCookiesCondition struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters CookiesMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleCookiesConditionInput is an input type that accepts DeliveryRuleCookiesConditionArgs and DeliveryRuleCookiesConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleCookiesConditionInput` via:
//
//          DeliveryRuleCookiesConditionArgs{...}
type DeliveryRuleCookiesConditionInput interface {
	pulumi.Input

	ToDeliveryRuleCookiesConditionOutput() DeliveryRuleCookiesConditionOutput
	ToDeliveryRuleCookiesConditionOutputWithContext(context.Context) DeliveryRuleCookiesConditionOutput
}

// Defines the Cookies condition for the delivery rule.
type DeliveryRuleCookiesConditionArgs struct {
	// The name of the condition for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters CookiesMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleCookiesConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCookiesCondition)(nil)).Elem()
}

func (i DeliveryRuleCookiesConditionArgs) ToDeliveryRuleCookiesConditionOutput() DeliveryRuleCookiesConditionOutput {
	return i.ToDeliveryRuleCookiesConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleCookiesConditionArgs) ToDeliveryRuleCookiesConditionOutputWithContext(ctx context.Context) DeliveryRuleCookiesConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleCookiesConditionOutput)
}

// Defines the Cookies condition for the delivery rule.
type DeliveryRuleCookiesConditionResponse struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters CookiesMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the Cookies condition for the delivery rule.
type DeliveryRuleCookiesConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleCookiesConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCookiesConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleCookiesConditionResponseOutput) ToDeliveryRuleCookiesConditionResponseOutput() DeliveryRuleCookiesConditionResponseOutput {
	return o
}

func (o DeliveryRuleCookiesConditionResponseOutput) ToDeliveryRuleCookiesConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleCookiesConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
func (o DeliveryRuleCookiesConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleCookiesConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleCookiesConditionResponseOutput) Parameters() CookiesMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleCookiesConditionResponse) CookiesMatchConditionParametersResponse {
		return v.Parameters
	}).(CookiesMatchConditionParametersResponseOutput)
}

// Defines the HttpVersion condition for the delivery rule.
type DeliveryRuleHttpVersionCondition struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters HttpVersionMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleHttpVersionConditionInput is an input type that accepts DeliveryRuleHttpVersionConditionArgs and DeliveryRuleHttpVersionConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleHttpVersionConditionInput` via:
//
//          DeliveryRuleHttpVersionConditionArgs{...}
type DeliveryRuleHttpVersionConditionInput interface {
	pulumi.Input

	ToDeliveryRuleHttpVersionConditionOutput() DeliveryRuleHttpVersionConditionOutput
	ToDeliveryRuleHttpVersionConditionOutputWithContext(context.Context) DeliveryRuleHttpVersionConditionOutput
}

// Defines the HttpVersion condition for the delivery rule.
type DeliveryRuleHttpVersionConditionArgs struct {
	// The name of the condition for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters HttpVersionMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleHttpVersionConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleHttpVersionCondition)(nil)).Elem()
}

func (i DeliveryRuleHttpVersionConditionArgs) ToDeliveryRuleHttpVersionConditionOutput() DeliveryRuleHttpVersionConditionOutput {
	return i.ToDeliveryRuleHttpVersionConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleHttpVersionConditionArgs) ToDeliveryRuleHttpVersionConditionOutputWithContext(ctx context.Context) DeliveryRuleHttpVersionConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleHttpVersionConditionOutput)
}

// Defines the HttpVersion condition for the delivery rule.
type DeliveryRuleHttpVersionConditionResponse struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters HttpVersionMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the HttpVersion condition for the delivery rule.
type DeliveryRuleHttpVersionConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleHttpVersionConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleHttpVersionConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleHttpVersionConditionResponseOutput) ToDeliveryRuleHttpVersionConditionResponseOutput() DeliveryRuleHttpVersionConditionResponseOutput {
	return o
}

func (o DeliveryRuleHttpVersionConditionResponseOutput) ToDeliveryRuleHttpVersionConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleHttpVersionConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
func (o DeliveryRuleHttpVersionConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleHttpVersionConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleHttpVersionConditionResponseOutput) Parameters() HttpVersionMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleHttpVersionConditionResponse) HttpVersionMatchConditionParametersResponse {
		return v.Parameters
	}).(HttpVersionMatchConditionParametersResponseOutput)
}

// Defines the IsDevice condition for the delivery rule.
type DeliveryRuleIsDeviceCondition struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters IsDeviceMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleIsDeviceConditionInput is an input type that accepts DeliveryRuleIsDeviceConditionArgs and DeliveryRuleIsDeviceConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleIsDeviceConditionInput` via:
//
//          DeliveryRuleIsDeviceConditionArgs{...}
type DeliveryRuleIsDeviceConditionInput interface {
	pulumi.Input

	ToDeliveryRuleIsDeviceConditionOutput() DeliveryRuleIsDeviceConditionOutput
	ToDeliveryRuleIsDeviceConditionOutputWithContext(context.Context) DeliveryRuleIsDeviceConditionOutput
}

// Defines the IsDevice condition for the delivery rule.
type DeliveryRuleIsDeviceConditionArgs struct {
	// The name of the condition for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters IsDeviceMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleIsDeviceConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleIsDeviceCondition)(nil)).Elem()
}

func (i DeliveryRuleIsDeviceConditionArgs) ToDeliveryRuleIsDeviceConditionOutput() DeliveryRuleIsDeviceConditionOutput {
	return i.ToDeliveryRuleIsDeviceConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleIsDeviceConditionArgs) ToDeliveryRuleIsDeviceConditionOutputWithContext(ctx context.Context) DeliveryRuleIsDeviceConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleIsDeviceConditionOutput)
}

// Defines the IsDevice condition for the delivery rule.
type DeliveryRuleIsDeviceConditionResponse struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters IsDeviceMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the IsDevice condition for the delivery rule.
type DeliveryRuleIsDeviceConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleIsDeviceConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleIsDeviceConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleIsDeviceConditionResponseOutput) ToDeliveryRuleIsDeviceConditionResponseOutput() DeliveryRuleIsDeviceConditionResponseOutput {
	return o
}

func (o DeliveryRuleIsDeviceConditionResponseOutput) ToDeliveryRuleIsDeviceConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleIsDeviceConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
func (o DeliveryRuleIsDeviceConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleIsDeviceConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleIsDeviceConditionResponseOutput) Parameters() IsDeviceMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleIsDeviceConditionResponse) IsDeviceMatchConditionParametersResponse {
		return v.Parameters
	}).(IsDeviceMatchConditionParametersResponseOutput)
}

// Defines the PostArgs condition for the delivery rule.
type DeliveryRulePostArgsCondition struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters PostArgsMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRulePostArgsConditionInput is an input type that accepts DeliveryRulePostArgsConditionArgs and DeliveryRulePostArgsConditionOutput values.
// You can construct a concrete instance of `DeliveryRulePostArgsConditionInput` via:
//
//          DeliveryRulePostArgsConditionArgs{...}
type DeliveryRulePostArgsConditionInput interface {
	pulumi.Input

	ToDeliveryRulePostArgsConditionOutput() DeliveryRulePostArgsConditionOutput
	ToDeliveryRulePostArgsConditionOutputWithContext(context.Context) DeliveryRulePostArgsConditionOutput
}

// Defines the PostArgs condition for the delivery rule.
type DeliveryRulePostArgsConditionArgs struct {
	// The name of the condition for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters PostArgsMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRulePostArgsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRulePostArgsCondition)(nil)).Elem()
}

func (i DeliveryRulePostArgsConditionArgs) ToDeliveryRulePostArgsConditionOutput() DeliveryRulePostArgsConditionOutput {
	return i.ToDeliveryRulePostArgsConditionOutputWithContext(context.Background())
}

func (i DeliveryRulePostArgsConditionArgs) ToDeliveryRulePostArgsConditionOutputWithContext(ctx context.Context) DeliveryRulePostArgsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRulePostArgsConditionOutput)
}

// Defines the PostArgs condition for the delivery rule.
type DeliveryRulePostArgsConditionResponse struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters PostArgsMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the PostArgs condition for the delivery rule.
type DeliveryRulePostArgsConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRulePostArgsConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRulePostArgsConditionResponse)(nil)).Elem()
}

func (o DeliveryRulePostArgsConditionResponseOutput) ToDeliveryRulePostArgsConditionResponseOutput() DeliveryRulePostArgsConditionResponseOutput {
	return o
}

func (o DeliveryRulePostArgsConditionResponseOutput) ToDeliveryRulePostArgsConditionResponseOutputWithContext(ctx context.Context) DeliveryRulePostArgsConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
func (o DeliveryRulePostArgsConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRulePostArgsConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRulePostArgsConditionResponseOutput) Parameters() PostArgsMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRulePostArgsConditionResponse) PostArgsMatchConditionParametersResponse {
		return v.Parameters
	}).(PostArgsMatchConditionParametersResponseOutput)
}

// Defines the QueryString condition for the delivery rule.
type DeliveryRuleQueryStringCondition struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters QueryStringMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleQueryStringConditionInput is an input type that accepts DeliveryRuleQueryStringConditionArgs and DeliveryRuleQueryStringConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleQueryStringConditionInput` via:
//
//          DeliveryRuleQueryStringConditionArgs{...}
type DeliveryRuleQueryStringConditionInput interface {
	pulumi.Input

	ToDeliveryRuleQueryStringConditionOutput() DeliveryRuleQueryStringConditionOutput
	ToDeliveryRuleQueryStringConditionOutputWithContext(context.Context) DeliveryRuleQueryStringConditionOutput
}

// Defines the QueryString condition for the delivery rule.
type DeliveryRuleQueryStringConditionArgs struct {
	// The name of the condition for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters QueryStringMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleQueryStringConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleQueryStringCondition)(nil)).Elem()
}

func (i DeliveryRuleQueryStringConditionArgs) ToDeliveryRuleQueryStringConditionOutput() DeliveryRuleQueryStringConditionOutput {
	return i.ToDeliveryRuleQueryStringConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleQueryStringConditionArgs) ToDeliveryRuleQueryStringConditionOutputWithContext(ctx context.Context) DeliveryRuleQueryStringConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleQueryStringConditionOutput)
}

// Defines the QueryString condition for the delivery rule.
type DeliveryRuleQueryStringConditionResponse struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters QueryStringMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the QueryString condition for the delivery rule.
type DeliveryRuleQueryStringConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleQueryStringConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleQueryStringConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleQueryStringConditionResponseOutput) ToDeliveryRuleQueryStringConditionResponseOutput() DeliveryRuleQueryStringConditionResponseOutput {
	return o
}

func (o DeliveryRuleQueryStringConditionResponseOutput) ToDeliveryRuleQueryStringConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleQueryStringConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
func (o DeliveryRuleQueryStringConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleQueryStringConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleQueryStringConditionResponseOutput) Parameters() QueryStringMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleQueryStringConditionResponse) QueryStringMatchConditionParametersResponse {
		return v.Parameters
	}).(QueryStringMatchConditionParametersResponseOutput)
}

// Defines the RemoteAddress condition for the delivery rule.
type DeliveryRuleRemoteAddressCondition struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RemoteAddressMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleRemoteAddressConditionInput is an input type that accepts DeliveryRuleRemoteAddressConditionArgs and DeliveryRuleRemoteAddressConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleRemoteAddressConditionInput` via:
//
//          DeliveryRuleRemoteAddressConditionArgs{...}
type DeliveryRuleRemoteAddressConditionInput interface {
	pulumi.Input

	ToDeliveryRuleRemoteAddressConditionOutput() DeliveryRuleRemoteAddressConditionOutput
	ToDeliveryRuleRemoteAddressConditionOutputWithContext(context.Context) DeliveryRuleRemoteAddressConditionOutput
}

// Defines the RemoteAddress condition for the delivery rule.
type DeliveryRuleRemoteAddressConditionArgs struct {
	// The name of the condition for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RemoteAddressMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleRemoteAddressConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRemoteAddressCondition)(nil)).Elem()
}

func (i DeliveryRuleRemoteAddressConditionArgs) ToDeliveryRuleRemoteAddressConditionOutput() DeliveryRuleRemoteAddressConditionOutput {
	return i.ToDeliveryRuleRemoteAddressConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleRemoteAddressConditionArgs) ToDeliveryRuleRemoteAddressConditionOutputWithContext(ctx context.Context) DeliveryRuleRemoteAddressConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRemoteAddressConditionOutput)
}

// Defines the RemoteAddress condition for the delivery rule.
type DeliveryRuleRemoteAddressConditionResponse struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RemoteAddressMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the RemoteAddress condition for the delivery rule.
type DeliveryRuleRemoteAddressConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRemoteAddressConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRemoteAddressConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleRemoteAddressConditionResponseOutput) ToDeliveryRuleRemoteAddressConditionResponseOutput() DeliveryRuleRemoteAddressConditionResponseOutput {
	return o
}

func (o DeliveryRuleRemoteAddressConditionResponseOutput) ToDeliveryRuleRemoteAddressConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRemoteAddressConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
func (o DeliveryRuleRemoteAddressConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRemoteAddressConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRemoteAddressConditionResponseOutput) Parameters() RemoteAddressMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRemoteAddressConditionResponse) RemoteAddressMatchConditionParametersResponse {
		return v.Parameters
	}).(RemoteAddressMatchConditionParametersResponseOutput)
}

// Defines the RequestBody condition for the delivery rule.
type DeliveryRuleRequestBodyCondition struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestBodyMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleRequestBodyConditionInput is an input type that accepts DeliveryRuleRequestBodyConditionArgs and DeliveryRuleRequestBodyConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestBodyConditionInput` via:
//
//          DeliveryRuleRequestBodyConditionArgs{...}
type DeliveryRuleRequestBodyConditionInput interface {
	pulumi.Input

	ToDeliveryRuleRequestBodyConditionOutput() DeliveryRuleRequestBodyConditionOutput
	ToDeliveryRuleRequestBodyConditionOutputWithContext(context.Context) DeliveryRuleRequestBodyConditionOutput
}

// Defines the RequestBody condition for the delivery rule.
type DeliveryRuleRequestBodyConditionArgs struct {
	// The name of the condition for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestBodyMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestBodyConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestBodyCondition)(nil)).Elem()
}

func (i DeliveryRuleRequestBodyConditionArgs) ToDeliveryRuleRequestBodyConditionOutput() DeliveryRuleRequestBodyConditionOutput {
	return i.ToDeliveryRuleRequestBodyConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestBodyConditionArgs) ToDeliveryRuleRequestBodyConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestBodyConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestBodyConditionOutput)
}

// Defines the RequestBody condition for the delivery rule.
type DeliveryRuleRequestBodyConditionResponse struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestBodyMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the RequestBody condition for the delivery rule.
type DeliveryRuleRequestBodyConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestBodyConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestBodyConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestBodyConditionResponseOutput) ToDeliveryRuleRequestBodyConditionResponseOutput() DeliveryRuleRequestBodyConditionResponseOutput {
	return o
}

func (o DeliveryRuleRequestBodyConditionResponseOutput) ToDeliveryRuleRequestBodyConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestBodyConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
func (o DeliveryRuleRequestBodyConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestBodyConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestBodyConditionResponseOutput) Parameters() RequestBodyMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestBodyConditionResponse) RequestBodyMatchConditionParametersResponse {
		return v.Parameters
	}).(RequestBodyMatchConditionParametersResponseOutput)
}

// Defines the request header action for the delivery rule.
type DeliveryRuleRequestHeaderAction struct {
	// The name of the action for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParameters `pulumi:"parameters"`
}

// DeliveryRuleRequestHeaderActionInput is an input type that accepts DeliveryRuleRequestHeaderActionArgs and DeliveryRuleRequestHeaderActionOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestHeaderActionInput` via:
//
//          DeliveryRuleRequestHeaderActionArgs{...}
type DeliveryRuleRequestHeaderActionInput interface {
	pulumi.Input

	ToDeliveryRuleRequestHeaderActionOutput() DeliveryRuleRequestHeaderActionOutput
	ToDeliveryRuleRequestHeaderActionOutputWithContext(context.Context) DeliveryRuleRequestHeaderActionOutput
}

// Defines the request header action for the delivery rule.
type DeliveryRuleRequestHeaderActionArgs struct {
	// The name of the action for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestHeaderActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestHeaderAction)(nil)).Elem()
}

func (i DeliveryRuleRequestHeaderActionArgs) ToDeliveryRuleRequestHeaderActionOutput() DeliveryRuleRequestHeaderActionOutput {
	return i.ToDeliveryRuleRequestHeaderActionOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestHeaderActionArgs) ToDeliveryRuleRequestHeaderActionOutputWithContext(ctx context.Context) DeliveryRuleRequestHeaderActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestHeaderActionOutput)
}

// Defines the request header action for the delivery rule.
type DeliveryRuleRequestHeaderActionResponse struct {
	// The name of the action for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParametersResponse `pulumi:"parameters"`
}

// Defines the request header action for the delivery rule.
type DeliveryRuleRequestHeaderActionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestHeaderActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestHeaderActionResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestHeaderActionResponseOutput) ToDeliveryRuleRequestHeaderActionResponseOutput() DeliveryRuleRequestHeaderActionResponseOutput {
	return o
}

func (o DeliveryRuleRequestHeaderActionResponseOutput) ToDeliveryRuleRequestHeaderActionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestHeaderActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
func (o DeliveryRuleRequestHeaderActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleRequestHeaderActionResponseOutput) Parameters() HeaderActionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderActionResponse) HeaderActionParametersResponse { return v.Parameters }).(HeaderActionParametersResponseOutput)
}

// Defines the RequestHeader condition for the delivery rule.
type DeliveryRuleRequestHeaderCondition struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestHeaderMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleRequestHeaderConditionInput is an input type that accepts DeliveryRuleRequestHeaderConditionArgs and DeliveryRuleRequestHeaderConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestHeaderConditionInput` via:
//
//          DeliveryRuleRequestHeaderConditionArgs{...}
type DeliveryRuleRequestHeaderConditionInput interface {
	pulumi.Input

	ToDeliveryRuleRequestHeaderConditionOutput() DeliveryRuleRequestHeaderConditionOutput
	ToDeliveryRuleRequestHeaderConditionOutputWithContext(context.Context) DeliveryRuleRequestHeaderConditionOutput
}

// Defines the RequestHeader condition for the delivery rule.
type DeliveryRuleRequestHeaderConditionArgs struct {
	// The name of the condition for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestHeaderMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestHeaderConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestHeaderCondition)(nil)).Elem()
}

func (i DeliveryRuleRequestHeaderConditionArgs) ToDeliveryRuleRequestHeaderConditionOutput() DeliveryRuleRequestHeaderConditionOutput {
	return i.ToDeliveryRuleRequestHeaderConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestHeaderConditionArgs) ToDeliveryRuleRequestHeaderConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestHeaderConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestHeaderConditionOutput)
}

// Defines the RequestHeader condition for the delivery rule.
type DeliveryRuleRequestHeaderConditionResponse struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestHeaderMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the RequestHeader condition for the delivery rule.
type DeliveryRuleRequestHeaderConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestHeaderConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestHeaderConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestHeaderConditionResponseOutput) ToDeliveryRuleRequestHeaderConditionResponseOutput() DeliveryRuleRequestHeaderConditionResponseOutput {
	return o
}

func (o DeliveryRuleRequestHeaderConditionResponseOutput) ToDeliveryRuleRequestHeaderConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestHeaderConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
func (o DeliveryRuleRequestHeaderConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestHeaderConditionResponseOutput) Parameters() RequestHeaderMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestHeaderConditionResponse) RequestHeaderMatchConditionParametersResponse {
		return v.Parameters
	}).(RequestHeaderMatchConditionParametersResponseOutput)
}

// Defines the RequestMethod condition for the delivery rule.
type DeliveryRuleRequestMethodCondition struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestMethodMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleRequestMethodConditionInput is an input type that accepts DeliveryRuleRequestMethodConditionArgs and DeliveryRuleRequestMethodConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestMethodConditionInput` via:
//
//          DeliveryRuleRequestMethodConditionArgs{...}
type DeliveryRuleRequestMethodConditionInput interface {
	pulumi.Input

	ToDeliveryRuleRequestMethodConditionOutput() DeliveryRuleRequestMethodConditionOutput
	ToDeliveryRuleRequestMethodConditionOutputWithContext(context.Context) DeliveryRuleRequestMethodConditionOutput
}

// Defines the RequestMethod condition for the delivery rule.
type DeliveryRuleRequestMethodConditionArgs struct {
	// The name of the condition for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestMethodMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestMethodConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestMethodCondition)(nil)).Elem()
}

func (i DeliveryRuleRequestMethodConditionArgs) ToDeliveryRuleRequestMethodConditionOutput() DeliveryRuleRequestMethodConditionOutput {
	return i.ToDeliveryRuleRequestMethodConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestMethodConditionArgs) ToDeliveryRuleRequestMethodConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestMethodConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestMethodConditionOutput)
}

// Defines the RequestMethod condition for the delivery rule.
type DeliveryRuleRequestMethodConditionResponse struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestMethodMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the RequestMethod condition for the delivery rule.
type DeliveryRuleRequestMethodConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestMethodConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestMethodConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestMethodConditionResponseOutput) ToDeliveryRuleRequestMethodConditionResponseOutput() DeliveryRuleRequestMethodConditionResponseOutput {
	return o
}

func (o DeliveryRuleRequestMethodConditionResponseOutput) ToDeliveryRuleRequestMethodConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestMethodConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
func (o DeliveryRuleRequestMethodConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestMethodConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestMethodConditionResponseOutput) Parameters() RequestMethodMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestMethodConditionResponse) RequestMethodMatchConditionParametersResponse {
		return v.Parameters
	}).(RequestMethodMatchConditionParametersResponseOutput)
}

// Defines the RequestScheme condition for the delivery rule.
type DeliveryRuleRequestSchemeCondition struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestSchemeMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleRequestSchemeConditionInput is an input type that accepts DeliveryRuleRequestSchemeConditionArgs and DeliveryRuleRequestSchemeConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestSchemeConditionInput` via:
//
//          DeliveryRuleRequestSchemeConditionArgs{...}
type DeliveryRuleRequestSchemeConditionInput interface {
	pulumi.Input

	ToDeliveryRuleRequestSchemeConditionOutput() DeliveryRuleRequestSchemeConditionOutput
	ToDeliveryRuleRequestSchemeConditionOutputWithContext(context.Context) DeliveryRuleRequestSchemeConditionOutput
}

// Defines the RequestScheme condition for the delivery rule.
type DeliveryRuleRequestSchemeConditionArgs struct {
	// The name of the condition for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestSchemeMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestSchemeConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestSchemeCondition)(nil)).Elem()
}

func (i DeliveryRuleRequestSchemeConditionArgs) ToDeliveryRuleRequestSchemeConditionOutput() DeliveryRuleRequestSchemeConditionOutput {
	return i.ToDeliveryRuleRequestSchemeConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestSchemeConditionArgs) ToDeliveryRuleRequestSchemeConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestSchemeConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestSchemeConditionOutput)
}

// Defines the RequestScheme condition for the delivery rule.
type DeliveryRuleRequestSchemeConditionResponse struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestSchemeMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the RequestScheme condition for the delivery rule.
type DeliveryRuleRequestSchemeConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestSchemeConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestSchemeConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestSchemeConditionResponseOutput) ToDeliveryRuleRequestSchemeConditionResponseOutput() DeliveryRuleRequestSchemeConditionResponseOutput {
	return o
}

func (o DeliveryRuleRequestSchemeConditionResponseOutput) ToDeliveryRuleRequestSchemeConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestSchemeConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
func (o DeliveryRuleRequestSchemeConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestSchemeConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestSchemeConditionResponseOutput) Parameters() RequestSchemeMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestSchemeConditionResponse) RequestSchemeMatchConditionParametersResponse {
		return v.Parameters
	}).(RequestSchemeMatchConditionParametersResponseOutput)
}

// Defines the RequestUri condition for the delivery rule.
type DeliveryRuleRequestUriCondition struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestUriMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleRequestUriConditionInput is an input type that accepts DeliveryRuleRequestUriConditionArgs and DeliveryRuleRequestUriConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleRequestUriConditionInput` via:
//
//          DeliveryRuleRequestUriConditionArgs{...}
type DeliveryRuleRequestUriConditionInput interface {
	pulumi.Input

	ToDeliveryRuleRequestUriConditionOutput() DeliveryRuleRequestUriConditionOutput
	ToDeliveryRuleRequestUriConditionOutputWithContext(context.Context) DeliveryRuleRequestUriConditionOutput
}

// Defines the RequestUri condition for the delivery rule.
type DeliveryRuleRequestUriConditionArgs struct {
	// The name of the condition for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestUriMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleRequestUriConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestUriCondition)(nil)).Elem()
}

func (i DeliveryRuleRequestUriConditionArgs) ToDeliveryRuleRequestUriConditionOutput() DeliveryRuleRequestUriConditionOutput {
	return i.ToDeliveryRuleRequestUriConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleRequestUriConditionArgs) ToDeliveryRuleRequestUriConditionOutputWithContext(ctx context.Context) DeliveryRuleRequestUriConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleRequestUriConditionOutput)
}

// Defines the RequestUri condition for the delivery rule.
type DeliveryRuleRequestUriConditionResponse struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters RequestUriMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the RequestUri condition for the delivery rule.
type DeliveryRuleRequestUriConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleRequestUriConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleRequestUriConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleRequestUriConditionResponseOutput) ToDeliveryRuleRequestUriConditionResponseOutput() DeliveryRuleRequestUriConditionResponseOutput {
	return o
}

func (o DeliveryRuleRequestUriConditionResponseOutput) ToDeliveryRuleRequestUriConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleRequestUriConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
func (o DeliveryRuleRequestUriConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleRequestUriConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleRequestUriConditionResponseOutput) Parameters() RequestUriMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleRequestUriConditionResponse) RequestUriMatchConditionParametersResponse {
		return v.Parameters
	}).(RequestUriMatchConditionParametersResponseOutput)
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleResponse struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions []interface{} `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions []interface{} `pulumi:"conditions"`
	// Name of the rule
	Name *string `pulumi:"name"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order int `pulumi:"order"`
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleResponse)(nil)).Elem()
}

func (o DeliveryRuleResponseOutput) ToDeliveryRuleResponseOutput() DeliveryRuleResponseOutput {
	return o
}

func (o DeliveryRuleResponseOutput) ToDeliveryRuleResponseOutputWithContext(ctx context.Context) DeliveryRuleResponseOutput {
	return o
}

// A list of actions that are executed when all the conditions of a rule are satisfied.
func (o DeliveryRuleResponseOutput) Actions() pulumi.ArrayOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) []interface{} { return v.Actions }).(pulumi.ArrayOutput)
}

// A list of conditions that must be matched for the actions to be executed
func (o DeliveryRuleResponseOutput) Conditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) []interface{} { return v.Conditions }).(pulumi.ArrayOutput)
}

// Name of the rule
func (o DeliveryRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
func (o DeliveryRuleResponseOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) int { return v.Order }).(pulumi.IntOutput)
}

type DeliveryRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (DeliveryRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRuleResponse)(nil)).Elem()
}

func (o DeliveryRuleResponseArrayOutput) ToDeliveryRuleResponseArrayOutput() DeliveryRuleResponseArrayOutput {
	return o
}

func (o DeliveryRuleResponseArrayOutput) ToDeliveryRuleResponseArrayOutputWithContext(ctx context.Context) DeliveryRuleResponseArrayOutput {
	return o
}

func (o DeliveryRuleResponseArrayOutput) Index(i pulumi.IntInput) DeliveryRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryRuleResponse {
		return vs[0].([]DeliveryRuleResponse)[vs[1].(int)]
	}).(DeliveryRuleResponseOutput)
}

// Defines the response header action for the delivery rule.
type DeliveryRuleResponseHeaderAction struct {
	// The name of the action for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParameters `pulumi:"parameters"`
}

// DeliveryRuleResponseHeaderActionInput is an input type that accepts DeliveryRuleResponseHeaderActionArgs and DeliveryRuleResponseHeaderActionOutput values.
// You can construct a concrete instance of `DeliveryRuleResponseHeaderActionInput` via:
//
//          DeliveryRuleResponseHeaderActionArgs{...}
type DeliveryRuleResponseHeaderActionInput interface {
	pulumi.Input

	ToDeliveryRuleResponseHeaderActionOutput() DeliveryRuleResponseHeaderActionOutput
	ToDeliveryRuleResponseHeaderActionOutputWithContext(context.Context) DeliveryRuleResponseHeaderActionOutput
}

// Defines the response header action for the delivery rule.
type DeliveryRuleResponseHeaderActionArgs struct {
	// The name of the action for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleResponseHeaderActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleResponseHeaderAction)(nil)).Elem()
}

func (i DeliveryRuleResponseHeaderActionArgs) ToDeliveryRuleResponseHeaderActionOutput() DeliveryRuleResponseHeaderActionOutput {
	return i.ToDeliveryRuleResponseHeaderActionOutputWithContext(context.Background())
}

func (i DeliveryRuleResponseHeaderActionArgs) ToDeliveryRuleResponseHeaderActionOutputWithContext(ctx context.Context) DeliveryRuleResponseHeaderActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleResponseHeaderActionOutput)
}

// Defines the response header action for the delivery rule.
type DeliveryRuleResponseHeaderActionResponse struct {
	// The name of the action for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters HeaderActionParametersResponse `pulumi:"parameters"`
}

// Defines the response header action for the delivery rule.
type DeliveryRuleResponseHeaderActionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleResponseHeaderActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleResponseHeaderActionResponse)(nil)).Elem()
}

func (o DeliveryRuleResponseHeaderActionResponseOutput) ToDeliveryRuleResponseHeaderActionResponseOutput() DeliveryRuleResponseHeaderActionResponseOutput {
	return o
}

func (o DeliveryRuleResponseHeaderActionResponseOutput) ToDeliveryRuleResponseHeaderActionResponseOutputWithContext(ctx context.Context) DeliveryRuleResponseHeaderActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
func (o DeliveryRuleResponseHeaderActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleResponseHeaderActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o DeliveryRuleResponseHeaderActionResponseOutput) Parameters() HeaderActionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleResponseHeaderActionResponse) HeaderActionParametersResponse { return v.Parameters }).(HeaderActionParametersResponseOutput)
}

// Defines the UrlFileExtension condition for the delivery rule.
type DeliveryRuleUrlFileExtensionCondition struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileExtensionMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleUrlFileExtensionConditionInput is an input type that accepts DeliveryRuleUrlFileExtensionConditionArgs and DeliveryRuleUrlFileExtensionConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleUrlFileExtensionConditionInput` via:
//
//          DeliveryRuleUrlFileExtensionConditionArgs{...}
type DeliveryRuleUrlFileExtensionConditionInput interface {
	pulumi.Input

	ToDeliveryRuleUrlFileExtensionConditionOutput() DeliveryRuleUrlFileExtensionConditionOutput
	ToDeliveryRuleUrlFileExtensionConditionOutputWithContext(context.Context) DeliveryRuleUrlFileExtensionConditionOutput
}

// Defines the UrlFileExtension condition for the delivery rule.
type DeliveryRuleUrlFileExtensionConditionArgs struct {
	// The name of the condition for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileExtensionMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleUrlFileExtensionConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlFileExtensionCondition)(nil)).Elem()
}

func (i DeliveryRuleUrlFileExtensionConditionArgs) ToDeliveryRuleUrlFileExtensionConditionOutput() DeliveryRuleUrlFileExtensionConditionOutput {
	return i.ToDeliveryRuleUrlFileExtensionConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleUrlFileExtensionConditionArgs) ToDeliveryRuleUrlFileExtensionConditionOutputWithContext(ctx context.Context) DeliveryRuleUrlFileExtensionConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleUrlFileExtensionConditionOutput)
}

// Defines the UrlFileExtension condition for the delivery rule.
type DeliveryRuleUrlFileExtensionConditionResponse struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileExtensionMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the UrlFileExtension condition for the delivery rule.
type DeliveryRuleUrlFileExtensionConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleUrlFileExtensionConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlFileExtensionConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleUrlFileExtensionConditionResponseOutput) ToDeliveryRuleUrlFileExtensionConditionResponseOutput() DeliveryRuleUrlFileExtensionConditionResponseOutput {
	return o
}

func (o DeliveryRuleUrlFileExtensionConditionResponseOutput) ToDeliveryRuleUrlFileExtensionConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleUrlFileExtensionConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
func (o DeliveryRuleUrlFileExtensionConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileExtensionConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleUrlFileExtensionConditionResponseOutput) Parameters() UrlFileExtensionMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileExtensionConditionResponse) UrlFileExtensionMatchConditionParametersResponse {
		return v.Parameters
	}).(UrlFileExtensionMatchConditionParametersResponseOutput)
}

// Defines the UrlFileName condition for the delivery rule.
type DeliveryRuleUrlFileNameCondition struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileNameMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleUrlFileNameConditionInput is an input type that accepts DeliveryRuleUrlFileNameConditionArgs and DeliveryRuleUrlFileNameConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleUrlFileNameConditionInput` via:
//
//          DeliveryRuleUrlFileNameConditionArgs{...}
type DeliveryRuleUrlFileNameConditionInput interface {
	pulumi.Input

	ToDeliveryRuleUrlFileNameConditionOutput() DeliveryRuleUrlFileNameConditionOutput
	ToDeliveryRuleUrlFileNameConditionOutputWithContext(context.Context) DeliveryRuleUrlFileNameConditionOutput
}

// Defines the UrlFileName condition for the delivery rule.
type DeliveryRuleUrlFileNameConditionArgs struct {
	// The name of the condition for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileNameMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleUrlFileNameConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlFileNameCondition)(nil)).Elem()
}

func (i DeliveryRuleUrlFileNameConditionArgs) ToDeliveryRuleUrlFileNameConditionOutput() DeliveryRuleUrlFileNameConditionOutput {
	return i.ToDeliveryRuleUrlFileNameConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleUrlFileNameConditionArgs) ToDeliveryRuleUrlFileNameConditionOutputWithContext(ctx context.Context) DeliveryRuleUrlFileNameConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleUrlFileNameConditionOutput)
}

// Defines the UrlFileName condition for the delivery rule.
type DeliveryRuleUrlFileNameConditionResponse struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlFileNameMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the UrlFileName condition for the delivery rule.
type DeliveryRuleUrlFileNameConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleUrlFileNameConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlFileNameConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleUrlFileNameConditionResponseOutput) ToDeliveryRuleUrlFileNameConditionResponseOutput() DeliveryRuleUrlFileNameConditionResponseOutput {
	return o
}

func (o DeliveryRuleUrlFileNameConditionResponseOutput) ToDeliveryRuleUrlFileNameConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleUrlFileNameConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
func (o DeliveryRuleUrlFileNameConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileNameConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleUrlFileNameConditionResponseOutput) Parameters() UrlFileNameMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleUrlFileNameConditionResponse) UrlFileNameMatchConditionParametersResponse {
		return v.Parameters
	}).(UrlFileNameMatchConditionParametersResponseOutput)
}

// Defines the UrlPath condition for the delivery rule.
type DeliveryRuleUrlPathCondition struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlPathMatchConditionParameters `pulumi:"parameters"`
}

// DeliveryRuleUrlPathConditionInput is an input type that accepts DeliveryRuleUrlPathConditionArgs and DeliveryRuleUrlPathConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleUrlPathConditionInput` via:
//
//          DeliveryRuleUrlPathConditionArgs{...}
type DeliveryRuleUrlPathConditionInput interface {
	pulumi.Input

	ToDeliveryRuleUrlPathConditionOutput() DeliveryRuleUrlPathConditionOutput
	ToDeliveryRuleUrlPathConditionOutputWithContext(context.Context) DeliveryRuleUrlPathConditionOutput
}

// Defines the UrlPath condition for the delivery rule.
type DeliveryRuleUrlPathConditionArgs struct {
	// The name of the condition for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlPathMatchConditionParametersInput `pulumi:"parameters"`
}

func (DeliveryRuleUrlPathConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlPathCondition)(nil)).Elem()
}

func (i DeliveryRuleUrlPathConditionArgs) ToDeliveryRuleUrlPathConditionOutput() DeliveryRuleUrlPathConditionOutput {
	return i.ToDeliveryRuleUrlPathConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleUrlPathConditionArgs) ToDeliveryRuleUrlPathConditionOutputWithContext(ctx context.Context) DeliveryRuleUrlPathConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleUrlPathConditionOutput)
}

// Defines the UrlPath condition for the delivery rule.
type DeliveryRuleUrlPathConditionResponse struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the condition.
	Parameters UrlPathMatchConditionParametersResponse `pulumi:"parameters"`
}

// Defines the UrlPath condition for the delivery rule.
type DeliveryRuleUrlPathConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleUrlPathConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleUrlPathConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleUrlPathConditionResponseOutput) ToDeliveryRuleUrlPathConditionResponseOutput() DeliveryRuleUrlPathConditionResponseOutput {
	return o
}

func (o DeliveryRuleUrlPathConditionResponseOutput) ToDeliveryRuleUrlPathConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleUrlPathConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
func (o DeliveryRuleUrlPathConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleUrlPathConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the condition.
func (o DeliveryRuleUrlPathConditionResponseOutput) Parameters() UrlPathMatchConditionParametersResponseOutput {
	return o.ApplyT(func(v DeliveryRuleUrlPathConditionResponse) UrlPathMatchConditionParametersResponse {
		return v.Parameters
	}).(UrlPathMatchConditionParametersResponseOutput)
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersDeliveryPolicy struct {
	// User-friendly description of the policy.
	Description *string `pulumi:"description"`
	// A list of the delivery rules.
	Rules []DeliveryRule `pulumi:"rules"`
}

// EndpointPropertiesUpdateParametersDeliveryPolicyInput is an input type that accepts EndpointPropertiesUpdateParametersDeliveryPolicyArgs and EndpointPropertiesUpdateParametersDeliveryPolicyOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersDeliveryPolicyInput` via:
//
//          EndpointPropertiesUpdateParametersDeliveryPolicyArgs{...}
type EndpointPropertiesUpdateParametersDeliveryPolicyInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersDeliveryPolicyOutput() EndpointPropertiesUpdateParametersDeliveryPolicyOutput
	ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyOutput
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersDeliveryPolicyArgs struct {
	// User-friendly description of the policy.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A list of the delivery rules.
	Rules DeliveryRuleArrayInput `pulumi:"rules"`
}

func (EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersDeliveryPolicy)(nil)).Elem()
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyOutput() EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return i.ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersDeliveryPolicyOutput)
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersDeliveryPolicyOutput).ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx)
}

// EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput is an input type that accepts EndpointPropertiesUpdateParametersDeliveryPolicyArgs, EndpointPropertiesUpdateParametersDeliveryPolicyPtr and EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput` via:
//
//          EndpointPropertiesUpdateParametersDeliveryPolicyArgs{...}
//
//  or:
//
//          nil
type EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput
	ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput
}

type endpointPropertiesUpdateParametersDeliveryPolicyPtrType EndpointPropertiesUpdateParametersDeliveryPolicyArgs

func EndpointPropertiesUpdateParametersDeliveryPolicyPtr(v *EndpointPropertiesUpdateParametersDeliveryPolicyArgs) EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput {
	return (*endpointPropertiesUpdateParametersDeliveryPolicyPtrType)(v)
}

func (*endpointPropertiesUpdateParametersDeliveryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersDeliveryPolicy)(nil)).Elem()
}

func (i *endpointPropertiesUpdateParametersDeliveryPolicyPtrType) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (i *endpointPropertiesUpdateParametersDeliveryPolicyPtrType) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput)
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersResponseDeliveryPolicy struct {
	// User-friendly description of the policy.
	Description *string `pulumi:"description"`
	// A list of the delivery rules.
	Rules []DeliveryRuleResponse `pulumi:"rules"`
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersResponseDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return o.ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersResponseDeliveryPolicy) *EndpointPropertiesUpdateParametersResponseDeliveryPolicy {
		return &v
	}).(EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput)
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersResponseDeliveryPolicy) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) Rules() DeliveryRuleResponseArrayOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersResponseDeliveryPolicy) []DeliveryRuleResponse {
		return v.Rules
	}).(DeliveryRuleResponseArrayOutput)
}

type EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersResponseDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) Elem() EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseDeliveryPolicy) EndpointPropertiesUpdateParametersResponseDeliveryPolicy {
		return *v
	}).(EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput)
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseDeliveryPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) Rules() DeliveryRuleResponseArrayOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseDeliveryPolicy) []DeliveryRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(DeliveryRuleResponseArrayOutput)
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput() EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink) *EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink {
		return &v
	}).(EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput)
}

// Resource ID.
func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink) *string {
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ToEndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) Elem() EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink) EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink {
		return *v
	}).(EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput)
}

// Resource ID.
func (o EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLink) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkInput is an input type that accepts EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs and EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkInput` via:
//
//          EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs{...}
type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput
	ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput
}

// Defines the Web Application Firewall policy for the endpoint (if applicable)
type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return i.ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput)
}

func (i EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput).ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx)
}

// EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrInput is an input type that accepts EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs, EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtr and EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrInput` via:
//
//          EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs{...}
//
//  or:
//
//          nil
type EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput
	ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput
}

type endpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrType EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs

func EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtr(v *EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkArgs) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrInput {
	return (*endpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrType)(v)
}

func (*endpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i *endpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (i *endpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ToEndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput)
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilter struct {
	// Action of the geo filter, i.e. allow or block access.
	Action string `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes []string `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath string `pulumi:"relativePath"`
}

// GeoFilterInput is an input type that accepts GeoFilterArgs and GeoFilterOutput values.
// You can construct a concrete instance of `GeoFilterInput` via:
//
//          GeoFilterArgs{...}
type GeoFilterInput interface {
	pulumi.Input

	ToGeoFilterOutput() GeoFilterOutput
	ToGeoFilterOutputWithContext(context.Context) GeoFilterOutput
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterArgs struct {
	// Action of the geo filter, i.e. allow or block access.
	Action pulumi.StringInput `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes pulumi.StringArrayInput `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath pulumi.StringInput `pulumi:"relativePath"`
}

func (GeoFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilter)(nil)).Elem()
}

func (i GeoFilterArgs) ToGeoFilterOutput() GeoFilterOutput {
	return i.ToGeoFilterOutputWithContext(context.Background())
}

func (i GeoFilterArgs) ToGeoFilterOutputWithContext(ctx context.Context) GeoFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoFilterOutput)
}

// GeoFilterArrayInput is an input type that accepts GeoFilterArray and GeoFilterArrayOutput values.
// You can construct a concrete instance of `GeoFilterArrayInput` via:
//
//          GeoFilterArray{ GeoFilterArgs{...} }
type GeoFilterArrayInput interface {
	pulumi.Input

	ToGeoFilterArrayOutput() GeoFilterArrayOutput
	ToGeoFilterArrayOutputWithContext(context.Context) GeoFilterArrayOutput
}

type GeoFilterArray []GeoFilterInput

func (GeoFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilter)(nil)).Elem()
}

func (i GeoFilterArray) ToGeoFilterArrayOutput() GeoFilterArrayOutput {
	return i.ToGeoFilterArrayOutputWithContext(context.Background())
}

func (i GeoFilterArray) ToGeoFilterArrayOutputWithContext(ctx context.Context) GeoFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoFilterArrayOutput)
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterResponse struct {
	// Action of the geo filter, i.e. allow or block access.
	Action string `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes []string `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath string `pulumi:"relativePath"`
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterResponseOutput struct{ *pulumi.OutputState }

func (GeoFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilterResponse)(nil)).Elem()
}

func (o GeoFilterResponseOutput) ToGeoFilterResponseOutput() GeoFilterResponseOutput {
	return o
}

func (o GeoFilterResponseOutput) ToGeoFilterResponseOutputWithContext(ctx context.Context) GeoFilterResponseOutput {
	return o
}

// Action of the geo filter, i.e. allow or block access.
func (o GeoFilterResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilterResponse) string { return v.Action }).(pulumi.StringOutput)
}

// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
func (o GeoFilterResponseOutput) CountryCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GeoFilterResponse) []string { return v.CountryCodes }).(pulumi.StringArrayOutput)
}

// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
func (o GeoFilterResponseOutput) RelativePath() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilterResponse) string { return v.RelativePath }).(pulumi.StringOutput)
}

type GeoFilterResponseArrayOutput struct{ *pulumi.OutputState }

func (GeoFilterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilterResponse)(nil)).Elem()
}

func (o GeoFilterResponseArrayOutput) ToGeoFilterResponseArrayOutput() GeoFilterResponseArrayOutput {
	return o
}

func (o GeoFilterResponseArrayOutput) ToGeoFilterResponseArrayOutputWithContext(ctx context.Context) GeoFilterResponseArrayOutput {
	return o
}

func (o GeoFilterResponseArrayOutput) Index(i pulumi.IntInput) GeoFilterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GeoFilterResponse {
		return vs[0].([]GeoFilterResponse)[vs[1].(int)]
	}).(GeoFilterResponseOutput)
}

// Defines the parameters for the request header action.
type HeaderActionParameters struct {
	// Action to perform
	HeaderAction string `pulumi:"headerAction"`
	// Name of the header to modify
	HeaderName string `pulumi:"headerName"`
	OdataType  string `pulumi:"odataType"`
	// Value for the specified action
	Value *string `pulumi:"value"`
}

// HeaderActionParametersInput is an input type that accepts HeaderActionParametersArgs and HeaderActionParametersOutput values.
// You can construct a concrete instance of `HeaderActionParametersInput` via:
//
//          HeaderActionParametersArgs{...}
type HeaderActionParametersInput interface {
	pulumi.Input

	ToHeaderActionParametersOutput() HeaderActionParametersOutput
	ToHeaderActionParametersOutputWithContext(context.Context) HeaderActionParametersOutput
}

// Defines the parameters for the request header action.
type HeaderActionParametersArgs struct {
	// Action to perform
	HeaderAction pulumi.StringInput `pulumi:"headerAction"`
	// Name of the header to modify
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	OdataType  pulumi.StringInput `pulumi:"odataType"`
	// Value for the specified action
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (HeaderActionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HeaderActionParameters)(nil)).Elem()
}

func (i HeaderActionParametersArgs) ToHeaderActionParametersOutput() HeaderActionParametersOutput {
	return i.ToHeaderActionParametersOutputWithContext(context.Background())
}

func (i HeaderActionParametersArgs) ToHeaderActionParametersOutputWithContext(ctx context.Context) HeaderActionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HeaderActionParametersOutput)
}

// Defines the parameters for the request header action.
type HeaderActionParametersResponse struct {
	// Action to perform
	HeaderAction string `pulumi:"headerAction"`
	// Name of the header to modify
	HeaderName string `pulumi:"headerName"`
	OdataType  string `pulumi:"odataType"`
	// Value for the specified action
	Value *string `pulumi:"value"`
}

// Defines the parameters for the request header action.
type HeaderActionParametersResponseOutput struct{ *pulumi.OutputState }

func (HeaderActionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HeaderActionParametersResponse)(nil)).Elem()
}

func (o HeaderActionParametersResponseOutput) ToHeaderActionParametersResponseOutput() HeaderActionParametersResponseOutput {
	return o
}

func (o HeaderActionParametersResponseOutput) ToHeaderActionParametersResponseOutputWithContext(ctx context.Context) HeaderActionParametersResponseOutput {
	return o
}

// Action to perform
func (o HeaderActionParametersResponseOutput) HeaderAction() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderActionParametersResponse) string { return v.HeaderAction }).(pulumi.StringOutput)
}

// Name of the header to modify
func (o HeaderActionParametersResponseOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderActionParametersResponse) string { return v.HeaderName }).(pulumi.StringOutput)
}

func (o HeaderActionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderActionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Value for the specified action
func (o HeaderActionParametersResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HeaderActionParametersResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParameters struct {
	// The number of seconds between health probes.Default is 240sec.
	ProbeIntervalInSeconds *int `pulumi:"probeIntervalInSeconds"`
	// The path relative to the origin that is used to determine the health of the origin.
	ProbePath *string `pulumi:"probePath"`
	// Protocol to use for health probe.
	ProbeProtocol *string `pulumi:"probeProtocol"`
	// The type of health probe request that is made.
	ProbeRequestType *string `pulumi:"probeRequestType"`
}

// HealthProbeParametersInput is an input type that accepts HealthProbeParametersArgs and HealthProbeParametersOutput values.
// You can construct a concrete instance of `HealthProbeParametersInput` via:
//
//          HealthProbeParametersArgs{...}
type HealthProbeParametersInput interface {
	pulumi.Input

	ToHealthProbeParametersOutput() HealthProbeParametersOutput
	ToHealthProbeParametersOutputWithContext(context.Context) HealthProbeParametersOutput
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersArgs struct {
	// The number of seconds between health probes.Default is 240sec.
	ProbeIntervalInSeconds pulumi.IntPtrInput `pulumi:"probeIntervalInSeconds"`
	// The path relative to the origin that is used to determine the health of the origin.
	ProbePath pulumi.StringPtrInput `pulumi:"probePath"`
	// Protocol to use for health probe.
	ProbeProtocol pulumi.StringPtrInput `pulumi:"probeProtocol"`
	// The type of health probe request that is made.
	ProbeRequestType pulumi.StringPtrInput `pulumi:"probeRequestType"`
}

func (HealthProbeParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeParameters)(nil)).Elem()
}

func (i HealthProbeParametersArgs) ToHealthProbeParametersOutput() HealthProbeParametersOutput {
	return i.ToHealthProbeParametersOutputWithContext(context.Background())
}

func (i HealthProbeParametersArgs) ToHealthProbeParametersOutputWithContext(ctx context.Context) HealthProbeParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeParametersOutput)
}

func (i HealthProbeParametersArgs) ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput {
	return i.ToHealthProbeParametersPtrOutputWithContext(context.Background())
}

func (i HealthProbeParametersArgs) ToHealthProbeParametersPtrOutputWithContext(ctx context.Context) HealthProbeParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeParametersOutput).ToHealthProbeParametersPtrOutputWithContext(ctx)
}

// HealthProbeParametersPtrInput is an input type that accepts HealthProbeParametersArgs, HealthProbeParametersPtr and HealthProbeParametersPtrOutput values.
// You can construct a concrete instance of `HealthProbeParametersPtrInput` via:
//
//          HealthProbeParametersArgs{...}
//
//  or:
//
//          nil
type HealthProbeParametersPtrInput interface {
	pulumi.Input

	ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput
	ToHealthProbeParametersPtrOutputWithContext(context.Context) HealthProbeParametersPtrOutput
}

type healthProbeParametersPtrType HealthProbeParametersArgs

func HealthProbeParametersPtr(v *HealthProbeParametersArgs) HealthProbeParametersPtrInput {
	return (*healthProbeParametersPtrType)(v)
}

func (*healthProbeParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthProbeParameters)(nil)).Elem()
}

func (i *healthProbeParametersPtrType) ToHealthProbeParametersPtrOutput() HealthProbeParametersPtrOutput {
	return i.ToHealthProbeParametersPtrOutputWithContext(context.Background())
}

func (i *healthProbeParametersPtrType) ToHealthProbeParametersPtrOutputWithContext(ctx context.Context) HealthProbeParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeParametersPtrOutput)
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersResponse struct {
	// The number of seconds between health probes.Default is 240sec.
	ProbeIntervalInSeconds *int `pulumi:"probeIntervalInSeconds"`
	// The path relative to the origin that is used to determine the health of the origin.
	ProbePath *string `pulumi:"probePath"`
	// Protocol to use for health probe.
	ProbeProtocol *string `pulumi:"probeProtocol"`
	// The type of health probe request that is made.
	ProbeRequestType *string `pulumi:"probeRequestType"`
}

// The JSON object that contains the properties to send health probes to origin.
type HealthProbeParametersResponseOutput struct{ *pulumi.OutputState }

func (HealthProbeParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeParametersResponse)(nil)).Elem()
}

func (o HealthProbeParametersResponseOutput) ToHealthProbeParametersResponseOutput() HealthProbeParametersResponseOutput {
	return o
}

func (o HealthProbeParametersResponseOutput) ToHealthProbeParametersResponseOutputWithContext(ctx context.Context) HealthProbeParametersResponseOutput {
	return o
}

func (o HealthProbeParametersResponseOutput) ToHealthProbeParametersResponsePtrOutput() HealthProbeParametersResponsePtrOutput {
	return o.ToHealthProbeParametersResponsePtrOutputWithContext(context.Background())
}

func (o HealthProbeParametersResponseOutput) ToHealthProbeParametersResponsePtrOutputWithContext(ctx context.Context) HealthProbeParametersResponsePtrOutput {
	return o.ApplyT(func(v HealthProbeParametersResponse) *HealthProbeParametersResponse {
		return &v
	}).(HealthProbeParametersResponsePtrOutput)
}

// The number of seconds between health probes.Default is 240sec.
func (o HealthProbeParametersResponseOutput) ProbeIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersResponse) *int { return v.ProbeIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The path relative to the origin that is used to determine the health of the origin.
func (o HealthProbeParametersResponseOutput) ProbePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersResponse) *string { return v.ProbePath }).(pulumi.StringPtrOutput)
}

// Protocol to use for health probe.
func (o HealthProbeParametersResponseOutput) ProbeProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersResponse) *string { return v.ProbeProtocol }).(pulumi.StringPtrOutput)
}

// The type of health probe request that is made.
func (o HealthProbeParametersResponseOutput) ProbeRequestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeParametersResponse) *string { return v.ProbeRequestType }).(pulumi.StringPtrOutput)
}

type HealthProbeParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (HealthProbeParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthProbeParametersResponse)(nil)).Elem()
}

func (o HealthProbeParametersResponsePtrOutput) ToHealthProbeParametersResponsePtrOutput() HealthProbeParametersResponsePtrOutput {
	return o
}

func (o HealthProbeParametersResponsePtrOutput) ToHealthProbeParametersResponsePtrOutputWithContext(ctx context.Context) HealthProbeParametersResponsePtrOutput {
	return o
}

func (o HealthProbeParametersResponsePtrOutput) Elem() HealthProbeParametersResponseOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) HealthProbeParametersResponse { return *v }).(HealthProbeParametersResponseOutput)
}

// The number of seconds between health probes.Default is 240sec.
func (o HealthProbeParametersResponsePtrOutput) ProbeIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.ProbeIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The path relative to the origin that is used to determine the health of the origin.
func (o HealthProbeParametersResponsePtrOutput) ProbePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProbePath
	}).(pulumi.StringPtrOutput)
}

// Protocol to use for health probe.
func (o HealthProbeParametersResponsePtrOutput) ProbeProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProbeProtocol
	}).(pulumi.StringPtrOutput)
}

// The type of health probe request that is made.
func (o HealthProbeParametersResponsePtrOutput) ProbeRequestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthProbeParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProbeRequestType
	}).(pulumi.StringPtrOutput)
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParameters struct {
	// The inclusive start of the http status code range.
	Begin *int `pulumi:"begin"`
	// The inclusive end of the http status code range.
	End *int `pulumi:"end"`
}

// HttpErrorRangeParametersInput is an input type that accepts HttpErrorRangeParametersArgs and HttpErrorRangeParametersOutput values.
// You can construct a concrete instance of `HttpErrorRangeParametersInput` via:
//
//          HttpErrorRangeParametersArgs{...}
type HttpErrorRangeParametersInput interface {
	pulumi.Input

	ToHttpErrorRangeParametersOutput() HttpErrorRangeParametersOutput
	ToHttpErrorRangeParametersOutputWithContext(context.Context) HttpErrorRangeParametersOutput
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersArgs struct {
	// The inclusive start of the http status code range.
	Begin pulumi.IntPtrInput `pulumi:"begin"`
	// The inclusive end of the http status code range.
	End pulumi.IntPtrInput `pulumi:"end"`
}

func (HttpErrorRangeParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpErrorRangeParameters)(nil)).Elem()
}

func (i HttpErrorRangeParametersArgs) ToHttpErrorRangeParametersOutput() HttpErrorRangeParametersOutput {
	return i.ToHttpErrorRangeParametersOutputWithContext(context.Background())
}

func (i HttpErrorRangeParametersArgs) ToHttpErrorRangeParametersOutputWithContext(ctx context.Context) HttpErrorRangeParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpErrorRangeParametersOutput)
}

// HttpErrorRangeParametersArrayInput is an input type that accepts HttpErrorRangeParametersArray and HttpErrorRangeParametersArrayOutput values.
// You can construct a concrete instance of `HttpErrorRangeParametersArrayInput` via:
//
//          HttpErrorRangeParametersArray{ HttpErrorRangeParametersArgs{...} }
type HttpErrorRangeParametersArrayInput interface {
	pulumi.Input

	ToHttpErrorRangeParametersArrayOutput() HttpErrorRangeParametersArrayOutput
	ToHttpErrorRangeParametersArrayOutputWithContext(context.Context) HttpErrorRangeParametersArrayOutput
}

type HttpErrorRangeParametersArray []HttpErrorRangeParametersInput

func (HttpErrorRangeParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpErrorRangeParameters)(nil)).Elem()
}

func (i HttpErrorRangeParametersArray) ToHttpErrorRangeParametersArrayOutput() HttpErrorRangeParametersArrayOutput {
	return i.ToHttpErrorRangeParametersArrayOutputWithContext(context.Background())
}

func (i HttpErrorRangeParametersArray) ToHttpErrorRangeParametersArrayOutputWithContext(ctx context.Context) HttpErrorRangeParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpErrorRangeParametersArrayOutput)
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersResponse struct {
	// The inclusive start of the http status code range.
	Begin *int `pulumi:"begin"`
	// The inclusive end of the http status code range.
	End *int `pulumi:"end"`
}

// The JSON object that represents the range for http status codes
type HttpErrorRangeParametersResponseOutput struct{ *pulumi.OutputState }

func (HttpErrorRangeParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpErrorRangeParametersResponse)(nil)).Elem()
}

func (o HttpErrorRangeParametersResponseOutput) ToHttpErrorRangeParametersResponseOutput() HttpErrorRangeParametersResponseOutput {
	return o
}

func (o HttpErrorRangeParametersResponseOutput) ToHttpErrorRangeParametersResponseOutputWithContext(ctx context.Context) HttpErrorRangeParametersResponseOutput {
	return o
}

// The inclusive start of the http status code range.
func (o HttpErrorRangeParametersResponseOutput) Begin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpErrorRangeParametersResponse) *int { return v.Begin }).(pulumi.IntPtrOutput)
}

// The inclusive end of the http status code range.
func (o HttpErrorRangeParametersResponseOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HttpErrorRangeParametersResponse) *int { return v.End }).(pulumi.IntPtrOutput)
}

type HttpErrorRangeParametersResponseArrayOutput struct{ *pulumi.OutputState }

func (HttpErrorRangeParametersResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpErrorRangeParametersResponse)(nil)).Elem()
}

func (o HttpErrorRangeParametersResponseArrayOutput) ToHttpErrorRangeParametersResponseArrayOutput() HttpErrorRangeParametersResponseArrayOutput {
	return o
}

func (o HttpErrorRangeParametersResponseArrayOutput) ToHttpErrorRangeParametersResponseArrayOutputWithContext(ctx context.Context) HttpErrorRangeParametersResponseArrayOutput {
	return o
}

func (o HttpErrorRangeParametersResponseArrayOutput) Index(i pulumi.IntInput) HttpErrorRangeParametersResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HttpErrorRangeParametersResponse {
		return vs[0].([]HttpErrorRangeParametersResponse)[vs[1].(int)]
	}).(HttpErrorRangeParametersResponseOutput)
}

// Defines the parameters for HttpVersion match conditions
type HttpVersionMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// HttpVersionMatchConditionParametersInput is an input type that accepts HttpVersionMatchConditionParametersArgs and HttpVersionMatchConditionParametersOutput values.
// You can construct a concrete instance of `HttpVersionMatchConditionParametersInput` via:
//
//          HttpVersionMatchConditionParametersArgs{...}
type HttpVersionMatchConditionParametersInput interface {
	pulumi.Input

	ToHttpVersionMatchConditionParametersOutput() HttpVersionMatchConditionParametersOutput
	ToHttpVersionMatchConditionParametersOutputWithContext(context.Context) HttpVersionMatchConditionParametersOutput
}

// Defines the parameters for HttpVersion match conditions
type HttpVersionMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (HttpVersionMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpVersionMatchConditionParameters)(nil)).Elem()
}

func (i HttpVersionMatchConditionParametersArgs) ToHttpVersionMatchConditionParametersOutput() HttpVersionMatchConditionParametersOutput {
	return i.ToHttpVersionMatchConditionParametersOutputWithContext(context.Background())
}

func (i HttpVersionMatchConditionParametersArgs) ToHttpVersionMatchConditionParametersOutputWithContext(ctx context.Context) HttpVersionMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpVersionMatchConditionParametersOutput)
}

// Defines the parameters for HttpVersion match conditions
type HttpVersionMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// Defines the parameters for HttpVersion match conditions
type HttpVersionMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (HttpVersionMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpVersionMatchConditionParametersResponse)(nil)).Elem()
}

func (o HttpVersionMatchConditionParametersResponseOutput) ToHttpVersionMatchConditionParametersResponseOutput() HttpVersionMatchConditionParametersResponseOutput {
	return o
}

func (o HttpVersionMatchConditionParametersResponseOutput) ToHttpVersionMatchConditionParametersResponseOutputWithContext(ctx context.Context) HttpVersionMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o HttpVersionMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o HttpVersionMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o HttpVersionMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o HttpVersionMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v HttpVersionMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Defines the parameters for IsDevice match conditions
type IsDeviceMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// IsDeviceMatchConditionParametersInput is an input type that accepts IsDeviceMatchConditionParametersArgs and IsDeviceMatchConditionParametersOutput values.
// You can construct a concrete instance of `IsDeviceMatchConditionParametersInput` via:
//
//          IsDeviceMatchConditionParametersArgs{...}
type IsDeviceMatchConditionParametersInput interface {
	pulumi.Input

	ToIsDeviceMatchConditionParametersOutput() IsDeviceMatchConditionParametersOutput
	ToIsDeviceMatchConditionParametersOutputWithContext(context.Context) IsDeviceMatchConditionParametersOutput
}

// Defines the parameters for IsDevice match conditions
type IsDeviceMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (IsDeviceMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IsDeviceMatchConditionParameters)(nil)).Elem()
}

func (i IsDeviceMatchConditionParametersArgs) ToIsDeviceMatchConditionParametersOutput() IsDeviceMatchConditionParametersOutput {
	return i.ToIsDeviceMatchConditionParametersOutputWithContext(context.Background())
}

func (i IsDeviceMatchConditionParametersArgs) ToIsDeviceMatchConditionParametersOutputWithContext(ctx context.Context) IsDeviceMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IsDeviceMatchConditionParametersOutput)
}

// Defines the parameters for IsDevice match conditions
type IsDeviceMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for IsDevice match conditions
type IsDeviceMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (IsDeviceMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IsDeviceMatchConditionParametersResponse)(nil)).Elem()
}

func (o IsDeviceMatchConditionParametersResponseOutput) ToIsDeviceMatchConditionParametersResponseOutput() IsDeviceMatchConditionParametersResponseOutput {
	return o
}

func (o IsDeviceMatchConditionParametersResponseOutput) ToIsDeviceMatchConditionParametersResponseOutputWithContext(ctx context.Context) IsDeviceMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o IsDeviceMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o IsDeviceMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o IsDeviceMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o IsDeviceMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o IsDeviceMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IsDeviceMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Describes the parameters for using a user's KeyVault for URL Signing Key.
type KeyVaultSigningKeyParameters struct {
	OdataType string `pulumi:"odataType"`
	// Resource group of the user's Key Vault containing the secret
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of secret in Key Vault.
	SecretName string `pulumi:"secretName"`
	// The version(GUID) of secret in Key Vault.
	SecretVersion string `pulumi:"secretVersion"`
	// Subscription Id of the user's Key Vault containing the secret
	SubscriptionId string `pulumi:"subscriptionId"`
	// The name of the user's Key Vault containing the secret
	VaultName string `pulumi:"vaultName"`
}

// KeyVaultSigningKeyParametersInput is an input type that accepts KeyVaultSigningKeyParametersArgs and KeyVaultSigningKeyParametersOutput values.
// You can construct a concrete instance of `KeyVaultSigningKeyParametersInput` via:
//
//          KeyVaultSigningKeyParametersArgs{...}
type KeyVaultSigningKeyParametersInput interface {
	pulumi.Input

	ToKeyVaultSigningKeyParametersOutput() KeyVaultSigningKeyParametersOutput
	ToKeyVaultSigningKeyParametersOutputWithContext(context.Context) KeyVaultSigningKeyParametersOutput
}

// Describes the parameters for using a user's KeyVault for URL Signing Key.
type KeyVaultSigningKeyParametersArgs struct {
	OdataType pulumi.StringInput `pulumi:"odataType"`
	// Resource group of the user's Key Vault containing the secret
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of secret in Key Vault.
	SecretName pulumi.StringInput `pulumi:"secretName"`
	// The version(GUID) of secret in Key Vault.
	SecretVersion pulumi.StringInput `pulumi:"secretVersion"`
	// Subscription Id of the user's Key Vault containing the secret
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// The name of the user's Key Vault containing the secret
	VaultName pulumi.StringInput `pulumi:"vaultName"`
}

func (KeyVaultSigningKeyParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSigningKeyParameters)(nil)).Elem()
}

func (i KeyVaultSigningKeyParametersArgs) ToKeyVaultSigningKeyParametersOutput() KeyVaultSigningKeyParametersOutput {
	return i.ToKeyVaultSigningKeyParametersOutputWithContext(context.Background())
}

func (i KeyVaultSigningKeyParametersArgs) ToKeyVaultSigningKeyParametersOutputWithContext(ctx context.Context) KeyVaultSigningKeyParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSigningKeyParametersOutput)
}

// Describes the parameters for using a user's KeyVault for URL Signing Key.
type KeyVaultSigningKeyParametersResponse struct {
	OdataType string `pulumi:"odataType"`
	// Resource group of the user's Key Vault containing the secret
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of secret in Key Vault.
	SecretName string `pulumi:"secretName"`
	// The version(GUID) of secret in Key Vault.
	SecretVersion string `pulumi:"secretVersion"`
	// Subscription Id of the user's Key Vault containing the secret
	SubscriptionId string `pulumi:"subscriptionId"`
	// The name of the user's Key Vault containing the secret
	VaultName string `pulumi:"vaultName"`
}

// Describes the parameters for using a user's KeyVault for URL Signing Key.
type KeyVaultSigningKeyParametersResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultSigningKeyParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSigningKeyParametersResponse)(nil)).Elem()
}

func (o KeyVaultSigningKeyParametersResponseOutput) ToKeyVaultSigningKeyParametersResponseOutput() KeyVaultSigningKeyParametersResponseOutput {
	return o
}

func (o KeyVaultSigningKeyParametersResponseOutput) ToKeyVaultSigningKeyParametersResponseOutputWithContext(ctx context.Context) KeyVaultSigningKeyParametersResponseOutput {
	return o
}

func (o KeyVaultSigningKeyParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Resource group of the user's Key Vault containing the secret
func (o KeyVaultSigningKeyParametersResponseOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersResponse) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The name of secret in Key Vault.
func (o KeyVaultSigningKeyParametersResponseOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersResponse) string { return v.SecretName }).(pulumi.StringOutput)
}

// The version(GUID) of secret in Key Vault.
func (o KeyVaultSigningKeyParametersResponseOutput) SecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersResponse) string { return v.SecretVersion }).(pulumi.StringOutput)
}

// Subscription Id of the user's Key Vault containing the secret
func (o KeyVaultSigningKeyParametersResponseOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersResponse) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// The name of the user's Key Vault containing the secret
func (o KeyVaultSigningKeyParametersResponseOutput) VaultName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSigningKeyParametersResponse) string { return v.VaultName }).(pulumi.StringOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverride struct {
	// Describes the managed rule group within the rule set to override
	RuleGroupName string `pulumi:"ruleGroupName"`
	// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
	Rules []ManagedRuleOverride `pulumi:"rules"`
}

// ManagedRuleGroupOverrideInput is an input type that accepts ManagedRuleGroupOverrideArgs and ManagedRuleGroupOverrideOutput values.
// You can construct a concrete instance of `ManagedRuleGroupOverrideInput` via:
//
//          ManagedRuleGroupOverrideArgs{...}
type ManagedRuleGroupOverrideInput interface {
	pulumi.Input

	ToManagedRuleGroupOverrideOutput() ManagedRuleGroupOverrideOutput
	ToManagedRuleGroupOverrideOutputWithContext(context.Context) ManagedRuleGroupOverrideOutput
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideArgs struct {
	// Describes the managed rule group within the rule set to override
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
	// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
	Rules ManagedRuleOverrideArrayInput `pulumi:"rules"`
}

func (ManagedRuleGroupOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleGroupOverride)(nil)).Elem()
}

func (i ManagedRuleGroupOverrideArgs) ToManagedRuleGroupOverrideOutput() ManagedRuleGroupOverrideOutput {
	return i.ToManagedRuleGroupOverrideOutputWithContext(context.Background())
}

func (i ManagedRuleGroupOverrideArgs) ToManagedRuleGroupOverrideOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleGroupOverrideOutput)
}

// ManagedRuleGroupOverrideArrayInput is an input type that accepts ManagedRuleGroupOverrideArray and ManagedRuleGroupOverrideArrayOutput values.
// You can construct a concrete instance of `ManagedRuleGroupOverrideArrayInput` via:
//
//          ManagedRuleGroupOverrideArray{ ManagedRuleGroupOverrideArgs{...} }
type ManagedRuleGroupOverrideArrayInput interface {
	pulumi.Input

	ToManagedRuleGroupOverrideArrayOutput() ManagedRuleGroupOverrideArrayOutput
	ToManagedRuleGroupOverrideArrayOutputWithContext(context.Context) ManagedRuleGroupOverrideArrayOutput
}

type ManagedRuleGroupOverrideArray []ManagedRuleGroupOverrideInput

func (ManagedRuleGroupOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleGroupOverride)(nil)).Elem()
}

func (i ManagedRuleGroupOverrideArray) ToManagedRuleGroupOverrideArrayOutput() ManagedRuleGroupOverrideArrayOutput {
	return i.ToManagedRuleGroupOverrideArrayOutputWithContext(context.Background())
}

func (i ManagedRuleGroupOverrideArray) ToManagedRuleGroupOverrideArrayOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleGroupOverrideArrayOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideResponse struct {
	// Describes the managed rule group within the rule set to override
	RuleGroupName string `pulumi:"ruleGroupName"`
	// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
	Rules []ManagedRuleOverrideResponse `pulumi:"rules"`
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleGroupOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideResponseOutput) ToManagedRuleGroupOverrideResponseOutput() ManagedRuleGroupOverrideResponseOutput {
	return o
}

func (o ManagedRuleGroupOverrideResponseOutput) ToManagedRuleGroupOverrideResponseOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideResponseOutput {
	return o
}

// Describes the managed rule group within the rule set to override
func (o ManagedRuleGroupOverrideResponseOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverrideResponse) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
func (o ManagedRuleGroupOverrideResponseOutput) Rules() ManagedRuleOverrideResponseArrayOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverrideResponse) []ManagedRuleOverrideResponse { return v.Rules }).(ManagedRuleOverrideResponseArrayOutput)
}

type ManagedRuleGroupOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleGroupOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideResponseArrayOutput) ToManagedRuleGroupOverrideResponseArrayOutput() ManagedRuleGroupOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideResponseArrayOutput) ToManagedRuleGroupOverrideResponseArrayOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideResponseArrayOutput) Index(i pulumi.IntInput) ManagedRuleGroupOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleGroupOverrideResponse {
		return vs[0].([]ManagedRuleGroupOverrideResponse)[vs[1].(int)]
	}).(ManagedRuleGroupOverrideResponseOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleOverride struct {
	// Describes the override action to be applied when rule matches.
	Action *string `pulumi:"action"`
	// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// Identifier for the managed rule.
	RuleId string `pulumi:"ruleId"`
}

// ManagedRuleOverrideInput is an input type that accepts ManagedRuleOverrideArgs and ManagedRuleOverrideOutput values.
// You can construct a concrete instance of `ManagedRuleOverrideInput` via:
//
//          ManagedRuleOverrideArgs{...}
type ManagedRuleOverrideInput interface {
	pulumi.Input

	ToManagedRuleOverrideOutput() ManagedRuleOverrideOutput
	ToManagedRuleOverrideOutputWithContext(context.Context) ManagedRuleOverrideOutput
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideArgs struct {
	// Describes the override action to be applied when rule matches.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// Identifier for the managed rule.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
}

func (ManagedRuleOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleOverride)(nil)).Elem()
}

func (i ManagedRuleOverrideArgs) ToManagedRuleOverrideOutput() ManagedRuleOverrideOutput {
	return i.ToManagedRuleOverrideOutputWithContext(context.Background())
}

func (i ManagedRuleOverrideArgs) ToManagedRuleOverrideOutputWithContext(ctx context.Context) ManagedRuleOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleOverrideOutput)
}

// ManagedRuleOverrideArrayInput is an input type that accepts ManagedRuleOverrideArray and ManagedRuleOverrideArrayOutput values.
// You can construct a concrete instance of `ManagedRuleOverrideArrayInput` via:
//
//          ManagedRuleOverrideArray{ ManagedRuleOverrideArgs{...} }
type ManagedRuleOverrideArrayInput interface {
	pulumi.Input

	ToManagedRuleOverrideArrayOutput() ManagedRuleOverrideArrayOutput
	ToManagedRuleOverrideArrayOutputWithContext(context.Context) ManagedRuleOverrideArrayOutput
}

type ManagedRuleOverrideArray []ManagedRuleOverrideInput

func (ManagedRuleOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleOverride)(nil)).Elem()
}

func (i ManagedRuleOverrideArray) ToManagedRuleOverrideArrayOutput() ManagedRuleOverrideArrayOutput {
	return i.ToManagedRuleOverrideArrayOutputWithContext(context.Background())
}

func (i ManagedRuleOverrideArray) ToManagedRuleOverrideArrayOutputWithContext(ctx context.Context) ManagedRuleOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleOverrideArrayOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideResponse struct {
	// Describes the override action to be applied when rule matches.
	Action *string `pulumi:"action"`
	// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// Identifier for the managed rule.
	RuleId string `pulumi:"ruleId"`
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleOverrideResponseOutput) ToManagedRuleOverrideResponseOutput() ManagedRuleOverrideResponseOutput {
	return o
}

func (o ManagedRuleOverrideResponseOutput) ToManagedRuleOverrideResponseOutputWithContext(ctx context.Context) ManagedRuleOverrideResponseOutput {
	return o
}

// Describes the override action to be applied when rule matches.
func (o ManagedRuleOverrideResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedRuleOverrideResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
func (o ManagedRuleOverrideResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedRuleOverrideResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Identifier for the managed rule.
func (o ManagedRuleOverrideResponseOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleOverrideResponse) string { return v.RuleId }).(pulumi.StringOutput)
}

type ManagedRuleOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleOverrideResponseArrayOutput) ToManagedRuleOverrideResponseArrayOutput() ManagedRuleOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleOverrideResponseArrayOutput) ToManagedRuleOverrideResponseArrayOutputWithContext(ctx context.Context) ManagedRuleOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleOverrideResponseArrayOutput) Index(i pulumi.IntInput) ManagedRuleOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleOverrideResponse {
		return vs[0].([]ManagedRuleOverrideResponse)[vs[1].(int)]
	}).(ManagedRuleOverrideResponseOutput)
}

// Defines a managed rule set.
type ManagedRuleSet struct {
	// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
	AnomalyScore *int `pulumi:"anomalyScore"`
	// Defines the rule overrides to apply to the rule set.
	RuleGroupOverrides []ManagedRuleGroupOverride `pulumi:"ruleGroupOverrides"`
	// Defines the rule set type to use.
	RuleSetType string `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// ManagedRuleSetInput is an input type that accepts ManagedRuleSetArgs and ManagedRuleSetOutput values.
// You can construct a concrete instance of `ManagedRuleSetInput` via:
//
//          ManagedRuleSetArgs{...}
type ManagedRuleSetInput interface {
	pulumi.Input

	ToManagedRuleSetOutput() ManagedRuleSetOutput
	ToManagedRuleSetOutputWithContext(context.Context) ManagedRuleSetOutput
}

// Defines a managed rule set.
type ManagedRuleSetArgs struct {
	// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
	AnomalyScore pulumi.IntPtrInput `pulumi:"anomalyScore"`
	// Defines the rule overrides to apply to the rule set.
	RuleGroupOverrides ManagedRuleGroupOverrideArrayInput `pulumi:"ruleGroupOverrides"`
	// Defines the rule set type to use.
	RuleSetType pulumi.StringInput `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion pulumi.StringInput `pulumi:"ruleSetVersion"`
}

func (ManagedRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSet)(nil)).Elem()
}

func (i ManagedRuleSetArgs) ToManagedRuleSetOutput() ManagedRuleSetOutput {
	return i.ToManagedRuleSetOutputWithContext(context.Background())
}

func (i ManagedRuleSetArgs) ToManagedRuleSetOutputWithContext(ctx context.Context) ManagedRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetOutput)
}

// ManagedRuleSetArrayInput is an input type that accepts ManagedRuleSetArray and ManagedRuleSetArrayOutput values.
// You can construct a concrete instance of `ManagedRuleSetArrayInput` via:
//
//          ManagedRuleSetArray{ ManagedRuleSetArgs{...} }
type ManagedRuleSetArrayInput interface {
	pulumi.Input

	ToManagedRuleSetArrayOutput() ManagedRuleSetArrayOutput
	ToManagedRuleSetArrayOutputWithContext(context.Context) ManagedRuleSetArrayOutput
}

type ManagedRuleSetArray []ManagedRuleSetInput

func (ManagedRuleSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleSet)(nil)).Elem()
}

func (i ManagedRuleSetArray) ToManagedRuleSetArrayOutput() ManagedRuleSetArrayOutput {
	return i.ToManagedRuleSetArrayOutputWithContext(context.Background())
}

func (i ManagedRuleSetArray) ToManagedRuleSetArrayOutputWithContext(ctx context.Context) ManagedRuleSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetArrayOutput)
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetList struct {
	// List of rule sets.
	ManagedRuleSets []ManagedRuleSet `pulumi:"managedRuleSets"`
}

// ManagedRuleSetListInput is an input type that accepts ManagedRuleSetListArgs and ManagedRuleSetListOutput values.
// You can construct a concrete instance of `ManagedRuleSetListInput` via:
//
//          ManagedRuleSetListArgs{...}
type ManagedRuleSetListInput interface {
	pulumi.Input

	ToManagedRuleSetListOutput() ManagedRuleSetListOutput
	ToManagedRuleSetListOutputWithContext(context.Context) ManagedRuleSetListOutput
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListArgs struct {
	// List of rule sets.
	ManagedRuleSets ManagedRuleSetArrayInput `pulumi:"managedRuleSets"`
}

func (ManagedRuleSetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetList)(nil)).Elem()
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListOutput() ManagedRuleSetListOutput {
	return i.ToManagedRuleSetListOutputWithContext(context.Background())
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListOutputWithContext(ctx context.Context) ManagedRuleSetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListOutput)
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput {
	return i.ToManagedRuleSetListPtrOutputWithContext(context.Background())
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListPtrOutputWithContext(ctx context.Context) ManagedRuleSetListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListOutput).ToManagedRuleSetListPtrOutputWithContext(ctx)
}

// ManagedRuleSetListPtrInput is an input type that accepts ManagedRuleSetListArgs, ManagedRuleSetListPtr and ManagedRuleSetListPtrOutput values.
// You can construct a concrete instance of `ManagedRuleSetListPtrInput` via:
//
//          ManagedRuleSetListArgs{...}
//
//  or:
//
//          nil
type ManagedRuleSetListPtrInput interface {
	pulumi.Input

	ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput
	ToManagedRuleSetListPtrOutputWithContext(context.Context) ManagedRuleSetListPtrOutput
}

type managedRuleSetListPtrType ManagedRuleSetListArgs

func ManagedRuleSetListPtr(v *ManagedRuleSetListArgs) ManagedRuleSetListPtrInput {
	return (*managedRuleSetListPtrType)(v)
}

func (*managedRuleSetListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRuleSetList)(nil)).Elem()
}

func (i *managedRuleSetListPtrType) ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput {
	return i.ToManagedRuleSetListPtrOutputWithContext(context.Background())
}

func (i *managedRuleSetListPtrType) ToManagedRuleSetListPtrOutputWithContext(ctx context.Context) ManagedRuleSetListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListPtrOutput)
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListResponse struct {
	// List of rule sets.
	ManagedRuleSets []ManagedRuleSetResponse `pulumi:"managedRuleSets"`
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetListResponse)(nil)).Elem()
}

func (o ManagedRuleSetListResponseOutput) ToManagedRuleSetListResponseOutput() ManagedRuleSetListResponseOutput {
	return o
}

func (o ManagedRuleSetListResponseOutput) ToManagedRuleSetListResponseOutputWithContext(ctx context.Context) ManagedRuleSetListResponseOutput {
	return o
}

func (o ManagedRuleSetListResponseOutput) ToManagedRuleSetListResponsePtrOutput() ManagedRuleSetListResponsePtrOutput {
	return o.ToManagedRuleSetListResponsePtrOutputWithContext(context.Background())
}

func (o ManagedRuleSetListResponseOutput) ToManagedRuleSetListResponsePtrOutputWithContext(ctx context.Context) ManagedRuleSetListResponsePtrOutput {
	return o.ApplyT(func(v ManagedRuleSetListResponse) *ManagedRuleSetListResponse {
		return &v
	}).(ManagedRuleSetListResponsePtrOutput)
}

// List of rule sets.
func (o ManagedRuleSetListResponseOutput) ManagedRuleSets() ManagedRuleSetResponseArrayOutput {
	return o.ApplyT(func(v ManagedRuleSetListResponse) []ManagedRuleSetResponse { return v.ManagedRuleSets }).(ManagedRuleSetResponseArrayOutput)
}

type ManagedRuleSetListResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRuleSetListResponse)(nil)).Elem()
}

func (o ManagedRuleSetListResponsePtrOutput) ToManagedRuleSetListResponsePtrOutput() ManagedRuleSetListResponsePtrOutput {
	return o
}

func (o ManagedRuleSetListResponsePtrOutput) ToManagedRuleSetListResponsePtrOutputWithContext(ctx context.Context) ManagedRuleSetListResponsePtrOutput {
	return o
}

func (o ManagedRuleSetListResponsePtrOutput) Elem() ManagedRuleSetListResponseOutput {
	return o.ApplyT(func(v *ManagedRuleSetListResponse) ManagedRuleSetListResponse { return *v }).(ManagedRuleSetListResponseOutput)
}

// List of rule sets.
func (o ManagedRuleSetListResponsePtrOutput) ManagedRuleSets() ManagedRuleSetResponseArrayOutput {
	return o.ApplyT(func(v *ManagedRuleSetListResponse) []ManagedRuleSetResponse {
		if v == nil {
			return nil
		}
		return v.ManagedRuleSets
	}).(ManagedRuleSetResponseArrayOutput)
}

// Defines a managed rule set.
type ManagedRuleSetResponse struct {
	// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
	AnomalyScore *int `pulumi:"anomalyScore"`
	// Defines the rule overrides to apply to the rule set.
	RuleGroupOverrides []ManagedRuleGroupOverrideResponse `pulumi:"ruleGroupOverrides"`
	// Defines the rule set type to use.
	RuleSetType string `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// Defines a managed rule set.
type ManagedRuleSetResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetResponse)(nil)).Elem()
}

func (o ManagedRuleSetResponseOutput) ToManagedRuleSetResponseOutput() ManagedRuleSetResponseOutput {
	return o
}

func (o ManagedRuleSetResponseOutput) ToManagedRuleSetResponseOutputWithContext(ctx context.Context) ManagedRuleSetResponseOutput {
	return o
}

// Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.
func (o ManagedRuleSetResponseOutput) AnomalyScore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedRuleSetResponse) *int { return v.AnomalyScore }).(pulumi.IntPtrOutput)
}

// Defines the rule overrides to apply to the rule set.
func (o ManagedRuleSetResponseOutput) RuleGroupOverrides() ManagedRuleGroupOverrideResponseArrayOutput {
	return o.ApplyT(func(v ManagedRuleSetResponse) []ManagedRuleGroupOverrideResponse { return v.RuleGroupOverrides }).(ManagedRuleGroupOverrideResponseArrayOutput)
}

// Defines the rule set type to use.
func (o ManagedRuleSetResponseOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSetResponse) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// Defines the version of the rule set to use.
func (o ManagedRuleSetResponseOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSetResponse) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ManagedRuleSetResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleSetResponse)(nil)).Elem()
}

func (o ManagedRuleSetResponseArrayOutput) ToManagedRuleSetResponseArrayOutput() ManagedRuleSetResponseArrayOutput {
	return o
}

func (o ManagedRuleSetResponseArrayOutput) ToManagedRuleSetResponseArrayOutputWithContext(ctx context.Context) ManagedRuleSetResponseArrayOutput {
	return o
}

func (o ManagedRuleSetResponseArrayOutput) Index(i pulumi.IntInput) ManagedRuleSetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleSetResponse {
		return vs[0].([]ManagedRuleSetResponse)[vs[1].(int)]
	}).(ManagedRuleSetResponseOutput)
}

// Define match conditions
type MatchCondition struct {
	// List of possible match values.
	MatchValue []string `pulumi:"matchValue"`
	// Match variable to compare against.
	MatchVariable string `pulumi:"matchVariable"`
	// Describes if the result of this condition should be negated.
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
	Selector *string `pulumi:"selector"`
	// List of transforms.
	Transforms []string `pulumi:"transforms"`
}

// MatchConditionInput is an input type that accepts MatchConditionArgs and MatchConditionOutput values.
// You can construct a concrete instance of `MatchConditionInput` via:
//
//          MatchConditionArgs{...}
type MatchConditionInput interface {
	pulumi.Input

	ToMatchConditionOutput() MatchConditionOutput
	ToMatchConditionOutputWithContext(context.Context) MatchConditionOutput
}

// Define match conditions
type MatchConditionArgs struct {
	// List of possible match values.
	MatchValue pulumi.StringArrayInput `pulumi:"matchValue"`
	// Match variable to compare against.
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// Describes if the result of this condition should be negated.
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// List of transforms.
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (MatchConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchCondition)(nil)).Elem()
}

func (i MatchConditionArgs) ToMatchConditionOutput() MatchConditionOutput {
	return i.ToMatchConditionOutputWithContext(context.Background())
}

func (i MatchConditionArgs) ToMatchConditionOutputWithContext(ctx context.Context) MatchConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchConditionOutput)
}

// MatchConditionArrayInput is an input type that accepts MatchConditionArray and MatchConditionArrayOutput values.
// You can construct a concrete instance of `MatchConditionArrayInput` via:
//
//          MatchConditionArray{ MatchConditionArgs{...} }
type MatchConditionArrayInput interface {
	pulumi.Input

	ToMatchConditionArrayOutput() MatchConditionArrayOutput
	ToMatchConditionArrayOutputWithContext(context.Context) MatchConditionArrayOutput
}

type MatchConditionArray []MatchConditionInput

func (MatchConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchCondition)(nil)).Elem()
}

func (i MatchConditionArray) ToMatchConditionArrayOutput() MatchConditionArrayOutput {
	return i.ToMatchConditionArrayOutputWithContext(context.Background())
}

func (i MatchConditionArray) ToMatchConditionArrayOutputWithContext(ctx context.Context) MatchConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchConditionArrayOutput)
}

// Define match conditions
type MatchConditionResponse struct {
	// List of possible match values.
	MatchValue []string `pulumi:"matchValue"`
	// Match variable to compare against.
	MatchVariable string `pulumi:"matchVariable"`
	// Describes if the result of this condition should be negated.
	NegateCondition *bool `pulumi:"negateCondition"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
	Selector *string `pulumi:"selector"`
	// List of transforms.
	Transforms []string `pulumi:"transforms"`
}

// Define match conditions
type MatchConditionResponseOutput struct{ *pulumi.OutputState }

func (MatchConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchConditionResponse)(nil)).Elem()
}

func (o MatchConditionResponseOutput) ToMatchConditionResponseOutput() MatchConditionResponseOutput {
	return o
}

func (o MatchConditionResponseOutput) ToMatchConditionResponseOutputWithContext(ctx context.Context) MatchConditionResponseOutput {
	return o
}

// List of possible match values.
func (o MatchConditionResponseOutput) MatchValue() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchConditionResponse) []string { return v.MatchValue }).(pulumi.StringArrayOutput)
}

// Match variable to compare against.
func (o MatchConditionResponseOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v MatchConditionResponse) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// Describes if the result of this condition should be negated.
func (o MatchConditionResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MatchConditionResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched
func (o MatchConditionResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v MatchConditionResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.
func (o MatchConditionResponseOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MatchConditionResponse) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms.
func (o MatchConditionResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchConditionResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

type MatchConditionResponseArrayOutput struct{ *pulumi.OutputState }

func (MatchConditionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchConditionResponse)(nil)).Elem()
}

func (o MatchConditionResponseArrayOutput) ToMatchConditionResponseArrayOutput() MatchConditionResponseArrayOutput {
	return o
}

func (o MatchConditionResponseArrayOutput) ToMatchConditionResponseArrayOutputWithContext(ctx context.Context) MatchConditionResponseArrayOutput {
	return o
}

func (o MatchConditionResponseArrayOutput) Index(i pulumi.IntInput) MatchConditionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MatchConditionResponse {
		return vs[0].([]MatchConditionResponse)[vs[1].(int)]
	}).(MatchConditionResponseOutput)
}

// Defines the parameters for PostArgs match conditions
type PostArgsMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of PostArg to be matched
	Selector string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// PostArgsMatchConditionParametersInput is an input type that accepts PostArgsMatchConditionParametersArgs and PostArgsMatchConditionParametersOutput values.
// You can construct a concrete instance of `PostArgsMatchConditionParametersInput` via:
//
//          PostArgsMatchConditionParametersArgs{...}
type PostArgsMatchConditionParametersInput interface {
	pulumi.Input

	ToPostArgsMatchConditionParametersOutput() PostArgsMatchConditionParametersOutput
	ToPostArgsMatchConditionParametersOutputWithContext(context.Context) PostArgsMatchConditionParametersOutput
}

// Defines the parameters for PostArgs match conditions
type PostArgsMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// Name of PostArg to be matched
	Selector pulumi.StringInput `pulumi:"selector"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (PostArgsMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PostArgsMatchConditionParameters)(nil)).Elem()
}

func (i PostArgsMatchConditionParametersArgs) ToPostArgsMatchConditionParametersOutput() PostArgsMatchConditionParametersOutput {
	return i.ToPostArgsMatchConditionParametersOutputWithContext(context.Background())
}

func (i PostArgsMatchConditionParametersArgs) ToPostArgsMatchConditionParametersOutputWithContext(ctx context.Context) PostArgsMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostArgsMatchConditionParametersOutput)
}

// Defines the parameters for PostArgs match conditions
type PostArgsMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of PostArg to be matched
	Selector string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for PostArgs match conditions
type PostArgsMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (PostArgsMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostArgsMatchConditionParametersResponse)(nil)).Elem()
}

func (o PostArgsMatchConditionParametersResponseOutput) ToPostArgsMatchConditionParametersResponseOutput() PostArgsMatchConditionParametersResponseOutput {
	return o
}

func (o PostArgsMatchConditionParametersResponseOutput) ToPostArgsMatchConditionParametersResponseOutputWithContext(ctx context.Context) PostArgsMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o PostArgsMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o PostArgsMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o PostArgsMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o PostArgsMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Name of PostArg to be matched
func (o PostArgsMatchConditionParametersResponseOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersResponse) string { return v.Selector }).(pulumi.StringOutput)
}

// List of transforms
func (o PostArgsMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PostArgsMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for QueryString match conditions
type QueryStringMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// QueryStringMatchConditionParametersInput is an input type that accepts QueryStringMatchConditionParametersArgs and QueryStringMatchConditionParametersOutput values.
// You can construct a concrete instance of `QueryStringMatchConditionParametersInput` via:
//
//          QueryStringMatchConditionParametersArgs{...}
type QueryStringMatchConditionParametersInput interface {
	pulumi.Input

	ToQueryStringMatchConditionParametersOutput() QueryStringMatchConditionParametersOutput
	ToQueryStringMatchConditionParametersOutputWithContext(context.Context) QueryStringMatchConditionParametersOutput
}

// Defines the parameters for QueryString match conditions
type QueryStringMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (QueryStringMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryStringMatchConditionParameters)(nil)).Elem()
}

func (i QueryStringMatchConditionParametersArgs) ToQueryStringMatchConditionParametersOutput() QueryStringMatchConditionParametersOutput {
	return i.ToQueryStringMatchConditionParametersOutputWithContext(context.Background())
}

func (i QueryStringMatchConditionParametersArgs) ToQueryStringMatchConditionParametersOutputWithContext(ctx context.Context) QueryStringMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryStringMatchConditionParametersOutput)
}

// Defines the parameters for QueryString match conditions
type QueryStringMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for QueryString match conditions
type QueryStringMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (QueryStringMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryStringMatchConditionParametersResponse)(nil)).Elem()
}

func (o QueryStringMatchConditionParametersResponseOutput) ToQueryStringMatchConditionParametersResponseOutput() QueryStringMatchConditionParametersResponseOutput {
	return o
}

func (o QueryStringMatchConditionParametersResponseOutput) ToQueryStringMatchConditionParametersResponseOutputWithContext(ctx context.Context) QueryStringMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o QueryStringMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o QueryStringMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o QueryStringMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o QueryStringMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o QueryStringMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v QueryStringMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRule struct {
	// Describes what action to be applied when rule matches
	Action string `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions []MatchCondition `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name string `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority int `pulumi:"priority"`
	// Defines rate limit duration. Default is 1 minute.
	RateLimitDurationInMinutes int `pulumi:"rateLimitDurationInMinutes"`
	// Defines rate limit threshold.
	RateLimitThreshold int `pulumi:"rateLimitThreshold"`
}

// RateLimitRuleInput is an input type that accepts RateLimitRuleArgs and RateLimitRuleOutput values.
// You can construct a concrete instance of `RateLimitRuleInput` via:
//
//          RateLimitRuleArgs{...}
type RateLimitRuleInput interface {
	pulumi.Input

	ToRateLimitRuleOutput() RateLimitRuleOutput
	ToRateLimitRuleOutputWithContext(context.Context) RateLimitRuleOutput
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRuleArgs struct {
	// Describes what action to be applied when rule matches
	Action pulumi.StringInput `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions MatchConditionArrayInput `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name pulumi.StringInput `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority pulumi.IntInput `pulumi:"priority"`
	// Defines rate limit duration. Default is 1 minute.
	RateLimitDurationInMinutes pulumi.IntInput `pulumi:"rateLimitDurationInMinutes"`
	// Defines rate limit threshold.
	RateLimitThreshold pulumi.IntInput `pulumi:"rateLimitThreshold"`
}

func (RateLimitRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRule)(nil)).Elem()
}

func (i RateLimitRuleArgs) ToRateLimitRuleOutput() RateLimitRuleOutput {
	return i.ToRateLimitRuleOutputWithContext(context.Background())
}

func (i RateLimitRuleArgs) ToRateLimitRuleOutputWithContext(ctx context.Context) RateLimitRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleOutput)
}

// RateLimitRuleArrayInput is an input type that accepts RateLimitRuleArray and RateLimitRuleArrayOutput values.
// You can construct a concrete instance of `RateLimitRuleArrayInput` via:
//
//          RateLimitRuleArray{ RateLimitRuleArgs{...} }
type RateLimitRuleArrayInput interface {
	pulumi.Input

	ToRateLimitRuleArrayOutput() RateLimitRuleArrayOutput
	ToRateLimitRuleArrayOutputWithContext(context.Context) RateLimitRuleArrayOutput
}

type RateLimitRuleArray []RateLimitRuleInput

func (RateLimitRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RateLimitRule)(nil)).Elem()
}

func (i RateLimitRuleArray) ToRateLimitRuleArrayOutput() RateLimitRuleArrayOutput {
	return i.ToRateLimitRuleArrayOutputWithContext(context.Background())
}

func (i RateLimitRuleArray) ToRateLimitRuleArrayOutputWithContext(ctx context.Context) RateLimitRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleArrayOutput)
}

// Defines contents of rate limit rules
type RateLimitRuleList struct {
	// List of rules
	Rules []RateLimitRule `pulumi:"rules"`
}

// RateLimitRuleListInput is an input type that accepts RateLimitRuleListArgs and RateLimitRuleListOutput values.
// You can construct a concrete instance of `RateLimitRuleListInput` via:
//
//          RateLimitRuleListArgs{...}
type RateLimitRuleListInput interface {
	pulumi.Input

	ToRateLimitRuleListOutput() RateLimitRuleListOutput
	ToRateLimitRuleListOutputWithContext(context.Context) RateLimitRuleListOutput
}

// Defines contents of rate limit rules
type RateLimitRuleListArgs struct {
	// List of rules
	Rules RateLimitRuleArrayInput `pulumi:"rules"`
}

func (RateLimitRuleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRuleList)(nil)).Elem()
}

func (i RateLimitRuleListArgs) ToRateLimitRuleListOutput() RateLimitRuleListOutput {
	return i.ToRateLimitRuleListOutputWithContext(context.Background())
}

func (i RateLimitRuleListArgs) ToRateLimitRuleListOutputWithContext(ctx context.Context) RateLimitRuleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleListOutput)
}

func (i RateLimitRuleListArgs) ToRateLimitRuleListPtrOutput() RateLimitRuleListPtrOutput {
	return i.ToRateLimitRuleListPtrOutputWithContext(context.Background())
}

func (i RateLimitRuleListArgs) ToRateLimitRuleListPtrOutputWithContext(ctx context.Context) RateLimitRuleListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleListOutput).ToRateLimitRuleListPtrOutputWithContext(ctx)
}

// RateLimitRuleListPtrInput is an input type that accepts RateLimitRuleListArgs, RateLimitRuleListPtr and RateLimitRuleListPtrOutput values.
// You can construct a concrete instance of `RateLimitRuleListPtrInput` via:
//
//          RateLimitRuleListArgs{...}
//
//  or:
//
//          nil
type RateLimitRuleListPtrInput interface {
	pulumi.Input

	ToRateLimitRuleListPtrOutput() RateLimitRuleListPtrOutput
	ToRateLimitRuleListPtrOutputWithContext(context.Context) RateLimitRuleListPtrOutput
}

type rateLimitRuleListPtrType RateLimitRuleListArgs

func RateLimitRuleListPtr(v *RateLimitRuleListArgs) RateLimitRuleListPtrInput {
	return (*rateLimitRuleListPtrType)(v)
}

func (*rateLimitRuleListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitRuleList)(nil)).Elem()
}

func (i *rateLimitRuleListPtrType) ToRateLimitRuleListPtrOutput() RateLimitRuleListPtrOutput {
	return i.ToRateLimitRuleListPtrOutputWithContext(context.Background())
}

func (i *rateLimitRuleListPtrType) ToRateLimitRuleListPtrOutputWithContext(ctx context.Context) RateLimitRuleListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitRuleListPtrOutput)
}

// Defines contents of rate limit rules
type RateLimitRuleListResponse struct {
	// List of rules
	Rules []RateLimitRuleResponse `pulumi:"rules"`
}

// Defines contents of rate limit rules
type RateLimitRuleListResponseOutput struct{ *pulumi.OutputState }

func (RateLimitRuleListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRuleListResponse)(nil)).Elem()
}

func (o RateLimitRuleListResponseOutput) ToRateLimitRuleListResponseOutput() RateLimitRuleListResponseOutput {
	return o
}

func (o RateLimitRuleListResponseOutput) ToRateLimitRuleListResponseOutputWithContext(ctx context.Context) RateLimitRuleListResponseOutput {
	return o
}

func (o RateLimitRuleListResponseOutput) ToRateLimitRuleListResponsePtrOutput() RateLimitRuleListResponsePtrOutput {
	return o.ToRateLimitRuleListResponsePtrOutputWithContext(context.Background())
}

func (o RateLimitRuleListResponseOutput) ToRateLimitRuleListResponsePtrOutputWithContext(ctx context.Context) RateLimitRuleListResponsePtrOutput {
	return o.ApplyT(func(v RateLimitRuleListResponse) *RateLimitRuleListResponse {
		return &v
	}).(RateLimitRuleListResponsePtrOutput)
}

// List of rules
func (o RateLimitRuleListResponseOutput) Rules() RateLimitRuleResponseArrayOutput {
	return o.ApplyT(func(v RateLimitRuleListResponse) []RateLimitRuleResponse { return v.Rules }).(RateLimitRuleResponseArrayOutput)
}

type RateLimitRuleListResponsePtrOutput struct{ *pulumi.OutputState }

func (RateLimitRuleListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitRuleListResponse)(nil)).Elem()
}

func (o RateLimitRuleListResponsePtrOutput) ToRateLimitRuleListResponsePtrOutput() RateLimitRuleListResponsePtrOutput {
	return o
}

func (o RateLimitRuleListResponsePtrOutput) ToRateLimitRuleListResponsePtrOutputWithContext(ctx context.Context) RateLimitRuleListResponsePtrOutput {
	return o
}

func (o RateLimitRuleListResponsePtrOutput) Elem() RateLimitRuleListResponseOutput {
	return o.ApplyT(func(v *RateLimitRuleListResponse) RateLimitRuleListResponse { return *v }).(RateLimitRuleListResponseOutput)
}

// List of rules
func (o RateLimitRuleListResponsePtrOutput) Rules() RateLimitRuleResponseArrayOutput {
	return o.ApplyT(func(v *RateLimitRuleListResponse) []RateLimitRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(RateLimitRuleResponseArrayOutput)
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRuleResponse struct {
	// Describes what action to be applied when rule matches
	Action string `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions []MatchConditionResponse `pulumi:"matchConditions"`
	// Defines the name of the custom rule
	Name string `pulumi:"name"`
	// Defines in what order this rule be evaluated in the overall list of custom rules
	Priority int `pulumi:"priority"`
	// Defines rate limit duration. Default is 1 minute.
	RateLimitDurationInMinutes int `pulumi:"rateLimitDurationInMinutes"`
	// Defines rate limit threshold.
	RateLimitThreshold int `pulumi:"rateLimitThreshold"`
}

// Defines a rate limiting rule that can be included in a waf policy
type RateLimitRuleResponseOutput struct{ *pulumi.OutputState }

func (RateLimitRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitRuleResponse)(nil)).Elem()
}

func (o RateLimitRuleResponseOutput) ToRateLimitRuleResponseOutput() RateLimitRuleResponseOutput {
	return o
}

func (o RateLimitRuleResponseOutput) ToRateLimitRuleResponseOutputWithContext(ctx context.Context) RateLimitRuleResponseOutput {
	return o
}

// Describes what action to be applied when rule matches
func (o RateLimitRuleResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) string { return v.Action }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o RateLimitRuleResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// List of match conditions.
func (o RateLimitRuleResponseOutput) MatchConditions() MatchConditionResponseArrayOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) []MatchConditionResponse { return v.MatchConditions }).(MatchConditionResponseArrayOutput)
}

// Defines the name of the custom rule
func (o RateLimitRuleResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines in what order this rule be evaluated in the overall list of custom rules
func (o RateLimitRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// Defines rate limit duration. Default is 1 minute.
func (o RateLimitRuleResponseOutput) RateLimitDurationInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) int { return v.RateLimitDurationInMinutes }).(pulumi.IntOutput)
}

// Defines rate limit threshold.
func (o RateLimitRuleResponseOutput) RateLimitThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v RateLimitRuleResponse) int { return v.RateLimitThreshold }).(pulumi.IntOutput)
}

type RateLimitRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (RateLimitRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RateLimitRuleResponse)(nil)).Elem()
}

func (o RateLimitRuleResponseArrayOutput) ToRateLimitRuleResponseArrayOutput() RateLimitRuleResponseArrayOutput {
	return o
}

func (o RateLimitRuleResponseArrayOutput) ToRateLimitRuleResponseArrayOutputWithContext(ctx context.Context) RateLimitRuleResponseArrayOutput {
	return o
}

func (o RateLimitRuleResponseArrayOutput) Index(i pulumi.IntInput) RateLimitRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RateLimitRuleResponse {
		return vs[0].([]RateLimitRuleResponse)[vs[1].(int)]
	}).(RateLimitRuleResponseOutput)
}

// Defines the parameters for RemoteAddress match conditions
type RemoteAddressMatchConditionParameters struct {
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// RemoteAddressMatchConditionParametersInput is an input type that accepts RemoteAddressMatchConditionParametersArgs and RemoteAddressMatchConditionParametersOutput values.
// You can construct a concrete instance of `RemoteAddressMatchConditionParametersInput` via:
//
//          RemoteAddressMatchConditionParametersArgs{...}
type RemoteAddressMatchConditionParametersInput interface {
	pulumi.Input

	ToRemoteAddressMatchConditionParametersOutput() RemoteAddressMatchConditionParametersOutput
	ToRemoteAddressMatchConditionParametersOutputWithContext(context.Context) RemoteAddressMatchConditionParametersOutput
}

// Defines the parameters for RemoteAddress match conditions
type RemoteAddressMatchConditionParametersArgs struct {
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (RemoteAddressMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteAddressMatchConditionParameters)(nil)).Elem()
}

func (i RemoteAddressMatchConditionParametersArgs) ToRemoteAddressMatchConditionParametersOutput() RemoteAddressMatchConditionParametersOutput {
	return i.ToRemoteAddressMatchConditionParametersOutputWithContext(context.Background())
}

func (i RemoteAddressMatchConditionParametersArgs) ToRemoteAddressMatchConditionParametersOutputWithContext(ctx context.Context) RemoteAddressMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemoteAddressMatchConditionParametersOutput)
}

// Defines the parameters for RemoteAddress match conditions
type RemoteAddressMatchConditionParametersResponse struct {
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for RemoteAddress match conditions
type RemoteAddressMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (RemoteAddressMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteAddressMatchConditionParametersResponse)(nil)).Elem()
}

func (o RemoteAddressMatchConditionParametersResponseOutput) ToRemoteAddressMatchConditionParametersResponseOutput() RemoteAddressMatchConditionParametersResponseOutput {
	return o
}

func (o RemoteAddressMatchConditionParametersResponseOutput) ToRemoteAddressMatchConditionParametersResponseOutputWithContext(ctx context.Context) RemoteAddressMatchConditionParametersResponseOutput {
	return o
}

// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
func (o RemoteAddressMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RemoteAddressMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RemoteAddressMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RemoteAddressMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o RemoteAddressMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RemoteAddressMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for RequestBody match conditions
type RequestBodyMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// RequestBodyMatchConditionParametersInput is an input type that accepts RequestBodyMatchConditionParametersArgs and RequestBodyMatchConditionParametersOutput values.
// You can construct a concrete instance of `RequestBodyMatchConditionParametersInput` via:
//
//          RequestBodyMatchConditionParametersArgs{...}
type RequestBodyMatchConditionParametersInput interface {
	pulumi.Input

	ToRequestBodyMatchConditionParametersOutput() RequestBodyMatchConditionParametersOutput
	ToRequestBodyMatchConditionParametersOutputWithContext(context.Context) RequestBodyMatchConditionParametersOutput
}

// Defines the parameters for RequestBody match conditions
type RequestBodyMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (RequestBodyMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestBodyMatchConditionParameters)(nil)).Elem()
}

func (i RequestBodyMatchConditionParametersArgs) ToRequestBodyMatchConditionParametersOutput() RequestBodyMatchConditionParametersOutput {
	return i.ToRequestBodyMatchConditionParametersOutputWithContext(context.Background())
}

func (i RequestBodyMatchConditionParametersArgs) ToRequestBodyMatchConditionParametersOutputWithContext(ctx context.Context) RequestBodyMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestBodyMatchConditionParametersOutput)
}

// Defines the parameters for RequestBody match conditions
type RequestBodyMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for RequestBody match conditions
type RequestBodyMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (RequestBodyMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestBodyMatchConditionParametersResponse)(nil)).Elem()
}

func (o RequestBodyMatchConditionParametersResponseOutput) ToRequestBodyMatchConditionParametersResponseOutput() RequestBodyMatchConditionParametersResponseOutput {
	return o
}

func (o RequestBodyMatchConditionParametersResponseOutput) ToRequestBodyMatchConditionParametersResponseOutputWithContext(ctx context.Context) RequestBodyMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestBodyMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestBodyMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RequestBodyMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RequestBodyMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o RequestBodyMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestBodyMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for RequestHeader match conditions
type RequestHeaderMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of Header to be matched
	Selector string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// RequestHeaderMatchConditionParametersInput is an input type that accepts RequestHeaderMatchConditionParametersArgs and RequestHeaderMatchConditionParametersOutput values.
// You can construct a concrete instance of `RequestHeaderMatchConditionParametersInput` via:
//
//          RequestHeaderMatchConditionParametersArgs{...}
type RequestHeaderMatchConditionParametersInput interface {
	pulumi.Input

	ToRequestHeaderMatchConditionParametersOutput() RequestHeaderMatchConditionParametersOutput
	ToRequestHeaderMatchConditionParametersOutputWithContext(context.Context) RequestHeaderMatchConditionParametersOutput
}

// Defines the parameters for RequestHeader match conditions
type RequestHeaderMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// Name of Header to be matched
	Selector pulumi.StringInput `pulumi:"selector"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (RequestHeaderMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestHeaderMatchConditionParameters)(nil)).Elem()
}

func (i RequestHeaderMatchConditionParametersArgs) ToRequestHeaderMatchConditionParametersOutput() RequestHeaderMatchConditionParametersOutput {
	return i.ToRequestHeaderMatchConditionParametersOutputWithContext(context.Background())
}

func (i RequestHeaderMatchConditionParametersArgs) ToRequestHeaderMatchConditionParametersOutputWithContext(ctx context.Context) RequestHeaderMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestHeaderMatchConditionParametersOutput)
}

// Defines the parameters for RequestHeader match conditions
type RequestHeaderMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// Name of Header to be matched
	Selector string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for RequestHeader match conditions
type RequestHeaderMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (RequestHeaderMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestHeaderMatchConditionParametersResponse)(nil)).Elem()
}

func (o RequestHeaderMatchConditionParametersResponseOutput) ToRequestHeaderMatchConditionParametersResponseOutput() RequestHeaderMatchConditionParametersResponseOutput {
	return o
}

func (o RequestHeaderMatchConditionParametersResponseOutput) ToRequestHeaderMatchConditionParametersResponseOutputWithContext(ctx context.Context) RequestHeaderMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestHeaderMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestHeaderMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RequestHeaderMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RequestHeaderMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Name of Header to be matched
func (o RequestHeaderMatchConditionParametersResponseOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersResponse) string { return v.Selector }).(pulumi.StringOutput)
}

// List of transforms
func (o RequestHeaderMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestHeaderMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for RequestMethod match conditions
type RequestMethodMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// RequestMethodMatchConditionParametersInput is an input type that accepts RequestMethodMatchConditionParametersArgs and RequestMethodMatchConditionParametersOutput values.
// You can construct a concrete instance of `RequestMethodMatchConditionParametersInput` via:
//
//          RequestMethodMatchConditionParametersArgs{...}
type RequestMethodMatchConditionParametersInput interface {
	pulumi.Input

	ToRequestMethodMatchConditionParametersOutput() RequestMethodMatchConditionParametersOutput
	ToRequestMethodMatchConditionParametersOutputWithContext(context.Context) RequestMethodMatchConditionParametersOutput
}

// Defines the parameters for RequestMethod match conditions
type RequestMethodMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (RequestMethodMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestMethodMatchConditionParameters)(nil)).Elem()
}

func (i RequestMethodMatchConditionParametersArgs) ToRequestMethodMatchConditionParametersOutput() RequestMethodMatchConditionParametersOutput {
	return i.ToRequestMethodMatchConditionParametersOutputWithContext(context.Background())
}

func (i RequestMethodMatchConditionParametersArgs) ToRequestMethodMatchConditionParametersOutputWithContext(ctx context.Context) RequestMethodMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestMethodMatchConditionParametersOutput)
}

// Defines the parameters for RequestMethod match conditions
type RequestMethodMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// Defines the parameters for RequestMethod match conditions
type RequestMethodMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (RequestMethodMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestMethodMatchConditionParametersResponse)(nil)).Elem()
}

func (o RequestMethodMatchConditionParametersResponseOutput) ToRequestMethodMatchConditionParametersResponseOutput() RequestMethodMatchConditionParametersResponseOutput {
	return o
}

func (o RequestMethodMatchConditionParametersResponseOutput) ToRequestMethodMatchConditionParametersResponseOutputWithContext(ctx context.Context) RequestMethodMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestMethodMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestMethodMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RequestMethodMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RequestMethodMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestMethodMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Defines the parameters for RequestScheme match conditions
type RequestSchemeMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// RequestSchemeMatchConditionParametersInput is an input type that accepts RequestSchemeMatchConditionParametersArgs and RequestSchemeMatchConditionParametersOutput values.
// You can construct a concrete instance of `RequestSchemeMatchConditionParametersInput` via:
//
//          RequestSchemeMatchConditionParametersArgs{...}
type RequestSchemeMatchConditionParametersInput interface {
	pulumi.Input

	ToRequestSchemeMatchConditionParametersOutput() RequestSchemeMatchConditionParametersOutput
	ToRequestSchemeMatchConditionParametersOutputWithContext(context.Context) RequestSchemeMatchConditionParametersOutput
}

// Defines the parameters for RequestScheme match conditions
type RequestSchemeMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (RequestSchemeMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestSchemeMatchConditionParameters)(nil)).Elem()
}

func (i RequestSchemeMatchConditionParametersArgs) ToRequestSchemeMatchConditionParametersOutput() RequestSchemeMatchConditionParametersOutput {
	return i.ToRequestSchemeMatchConditionParametersOutputWithContext(context.Background())
}

func (i RequestSchemeMatchConditionParametersArgs) ToRequestSchemeMatchConditionParametersOutputWithContext(ctx context.Context) RequestSchemeMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestSchemeMatchConditionParametersOutput)
}

// Defines the parameters for RequestScheme match conditions
type RequestSchemeMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
}

// Defines the parameters for RequestScheme match conditions
type RequestSchemeMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (RequestSchemeMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestSchemeMatchConditionParametersResponse)(nil)).Elem()
}

func (o RequestSchemeMatchConditionParametersResponseOutput) ToRequestSchemeMatchConditionParametersResponseOutput() RequestSchemeMatchConditionParametersResponseOutput {
	return o
}

func (o RequestSchemeMatchConditionParametersResponseOutput) ToRequestSchemeMatchConditionParametersResponseOutputWithContext(ctx context.Context) RequestSchemeMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestSchemeMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestSchemeMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RequestSchemeMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RequestSchemeMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestSchemeMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// Defines the parameters for RequestUri match conditions
type RequestUriMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// RequestUriMatchConditionParametersInput is an input type that accepts RequestUriMatchConditionParametersArgs and RequestUriMatchConditionParametersOutput values.
// You can construct a concrete instance of `RequestUriMatchConditionParametersInput` via:
//
//          RequestUriMatchConditionParametersArgs{...}
type RequestUriMatchConditionParametersInput interface {
	pulumi.Input

	ToRequestUriMatchConditionParametersOutput() RequestUriMatchConditionParametersOutput
	ToRequestUriMatchConditionParametersOutputWithContext(context.Context) RequestUriMatchConditionParametersOutput
}

// Defines the parameters for RequestUri match conditions
type RequestUriMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (RequestUriMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestUriMatchConditionParameters)(nil)).Elem()
}

func (i RequestUriMatchConditionParametersArgs) ToRequestUriMatchConditionParametersOutput() RequestUriMatchConditionParametersOutput {
	return i.ToRequestUriMatchConditionParametersOutputWithContext(context.Background())
}

func (i RequestUriMatchConditionParametersArgs) ToRequestUriMatchConditionParametersOutputWithContext(ctx context.Context) RequestUriMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestUriMatchConditionParametersOutput)
}

// Defines the parameters for RequestUri match conditions
type RequestUriMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for RequestUri match conditions
type RequestUriMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (RequestUriMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestUriMatchConditionParametersResponse)(nil)).Elem()
}

func (o RequestUriMatchConditionParametersResponseOutput) ToRequestUriMatchConditionParametersResponseOutput() RequestUriMatchConditionParametersResponseOutput {
	return o
}

func (o RequestUriMatchConditionParametersResponseOutput) ToRequestUriMatchConditionParametersResponseOutputWithContext(ctx context.Context) RequestUriMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o RequestUriMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o RequestUriMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o RequestUriMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o RequestUriMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o RequestUriMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestUriMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Reference to another resource.
type ResourceReference struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// ResourceReferenceInput is an input type that accepts ResourceReferenceArgs and ResourceReferenceOutput values.
// You can construct a concrete instance of `ResourceReferenceInput` via:
//
//          ResourceReferenceArgs{...}
type ResourceReferenceInput interface {
	pulumi.Input

	ToResourceReferenceOutput() ResourceReferenceOutput
	ToResourceReferenceOutputWithContext(context.Context) ResourceReferenceOutput
}

// Reference to another resource.
type ResourceReferenceArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ResourceReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReference)(nil)).Elem()
}

func (i ResourceReferenceArgs) ToResourceReferenceOutput() ResourceReferenceOutput {
	return i.ToResourceReferenceOutputWithContext(context.Background())
}

func (i ResourceReferenceArgs) ToResourceReferenceOutputWithContext(ctx context.Context) ResourceReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceOutput)
}

func (i ResourceReferenceArgs) ToResourceReferencePtrOutput() ResourceReferencePtrOutput {
	return i.ToResourceReferencePtrOutputWithContext(context.Background())
}

func (i ResourceReferenceArgs) ToResourceReferencePtrOutputWithContext(ctx context.Context) ResourceReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceOutput).ToResourceReferencePtrOutputWithContext(ctx)
}

// ResourceReferencePtrInput is an input type that accepts ResourceReferenceArgs, ResourceReferencePtr and ResourceReferencePtrOutput values.
// You can construct a concrete instance of `ResourceReferencePtrInput` via:
//
//          ResourceReferenceArgs{...}
//
//  or:
//
//          nil
type ResourceReferencePtrInput interface {
	pulumi.Input

	ToResourceReferencePtrOutput() ResourceReferencePtrOutput
	ToResourceReferencePtrOutputWithContext(context.Context) ResourceReferencePtrOutput
}

type resourceReferencePtrType ResourceReferenceArgs

func ResourceReferencePtr(v *ResourceReferenceArgs) ResourceReferencePtrInput {
	return (*resourceReferencePtrType)(v)
}

func (*resourceReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceReference)(nil)).Elem()
}

func (i *resourceReferencePtrType) ToResourceReferencePtrOutput() ResourceReferencePtrOutput {
	return i.ToResourceReferencePtrOutputWithContext(context.Background())
}

func (i *resourceReferencePtrType) ToResourceReferencePtrOutputWithContext(ctx context.Context) ResourceReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferencePtrOutput)
}

// ResourceReferenceArrayInput is an input type that accepts ResourceReferenceArray and ResourceReferenceArrayOutput values.
// You can construct a concrete instance of `ResourceReferenceArrayInput` via:
//
//          ResourceReferenceArray{ ResourceReferenceArgs{...} }
type ResourceReferenceArrayInput interface {
	pulumi.Input

	ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput
	ToResourceReferenceArrayOutputWithContext(context.Context) ResourceReferenceArrayOutput
}

type ResourceReferenceArray []ResourceReferenceInput

func (ResourceReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReference)(nil)).Elem()
}

func (i ResourceReferenceArray) ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput {
	return i.ToResourceReferenceArrayOutputWithContext(context.Background())
}

func (i ResourceReferenceArray) ToResourceReferenceArrayOutputWithContext(ctx context.Context) ResourceReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceArrayOutput)
}

// Reference to another resource.
type ResourceReferenceResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// Reference to another resource.
type ResourceReferenceResponseOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponseOutput() ResourceReferenceResponseOutput {
	return o
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponseOutputWithContext(ctx context.Context) ResourceReferenceResponseOutput {
	return o
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponsePtrOutput() ResourceReferenceResponsePtrOutput {
	return o.ToResourceReferenceResponsePtrOutputWithContext(context.Background())
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponsePtrOutputWithContext(ctx context.Context) ResourceReferenceResponsePtrOutput {
	return o.ApplyT(func(v ResourceReferenceResponse) *ResourceReferenceResponse {
		return &v
	}).(ResourceReferenceResponsePtrOutput)
}

// Resource ID.
func (o ResourceReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ResourceReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponsePtrOutput) ToResourceReferenceResponsePtrOutput() ResourceReferenceResponsePtrOutput {
	return o
}

func (o ResourceReferenceResponsePtrOutput) ToResourceReferenceResponsePtrOutputWithContext(ctx context.Context) ResourceReferenceResponsePtrOutput {
	return o
}

func (o ResourceReferenceResponsePtrOutput) Elem() ResourceReferenceResponseOutput {
	return o.ApplyT(func(v *ResourceReferenceResponse) ResourceReferenceResponse { return *v }).(ResourceReferenceResponseOutput)
}

// Resource ID.
func (o ResourceReferenceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type ResourceReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponseArrayOutput) ToResourceReferenceResponseArrayOutput() ResourceReferenceResponseArrayOutput {
	return o
}

func (o ResourceReferenceResponseArrayOutput) ToResourceReferenceResponseArrayOutputWithContext(ctx context.Context) ResourceReferenceResponseArrayOutput {
	return o
}

func (o ResourceReferenceResponseArrayOutput) Index(i pulumi.IntInput) ResourceReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceReferenceResponse {
		return vs[0].([]ResourceReferenceResponse)[vs[1].(int)]
	}).(ResourceReferenceResponseOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParameters struct {
	// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
	HttpErrorRanges []HttpErrorRangeParameters `pulumi:"httpErrorRanges"`
	// Type of response errors for real user requests for which origin will be deemed unhealthy
	ResponseBasedDetectedErrorTypes *string `pulumi:"responseBasedDetectedErrorTypes"`
	// The percentage of failed requests in the sample where failover should trigger.
	ResponseBasedFailoverThresholdPercentage *int `pulumi:"responseBasedFailoverThresholdPercentage"`
}

// ResponseBasedOriginErrorDetectionParametersInput is an input type that accepts ResponseBasedOriginErrorDetectionParametersArgs and ResponseBasedOriginErrorDetectionParametersOutput values.
// You can construct a concrete instance of `ResponseBasedOriginErrorDetectionParametersInput` via:
//
//          ResponseBasedOriginErrorDetectionParametersArgs{...}
type ResponseBasedOriginErrorDetectionParametersInput interface {
	pulumi.Input

	ToResponseBasedOriginErrorDetectionParametersOutput() ResponseBasedOriginErrorDetectionParametersOutput
	ToResponseBasedOriginErrorDetectionParametersOutputWithContext(context.Context) ResponseBasedOriginErrorDetectionParametersOutput
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersArgs struct {
	// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
	HttpErrorRanges HttpErrorRangeParametersArrayInput `pulumi:"httpErrorRanges"`
	// Type of response errors for real user requests for which origin will be deemed unhealthy
	ResponseBasedDetectedErrorTypes pulumi.StringPtrInput `pulumi:"responseBasedDetectedErrorTypes"`
	// The percentage of failed requests in the sample where failover should trigger.
	ResponseBasedFailoverThresholdPercentage pulumi.IntPtrInput `pulumi:"responseBasedFailoverThresholdPercentage"`
}

func (ResponseBasedOriginErrorDetectionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseBasedOriginErrorDetectionParameters)(nil)).Elem()
}

func (i ResponseBasedOriginErrorDetectionParametersArgs) ToResponseBasedOriginErrorDetectionParametersOutput() ResponseBasedOriginErrorDetectionParametersOutput {
	return i.ToResponseBasedOriginErrorDetectionParametersOutputWithContext(context.Background())
}

func (i ResponseBasedOriginErrorDetectionParametersArgs) ToResponseBasedOriginErrorDetectionParametersOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseBasedOriginErrorDetectionParametersOutput)
}

func (i ResponseBasedOriginErrorDetectionParametersArgs) ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return i.ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(context.Background())
}

func (i ResponseBasedOriginErrorDetectionParametersArgs) ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseBasedOriginErrorDetectionParametersOutput).ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx)
}

// ResponseBasedOriginErrorDetectionParametersPtrInput is an input type that accepts ResponseBasedOriginErrorDetectionParametersArgs, ResponseBasedOriginErrorDetectionParametersPtr and ResponseBasedOriginErrorDetectionParametersPtrOutput values.
// You can construct a concrete instance of `ResponseBasedOriginErrorDetectionParametersPtrInput` via:
//
//          ResponseBasedOriginErrorDetectionParametersArgs{...}
//
//  or:
//
//          nil
type ResponseBasedOriginErrorDetectionParametersPtrInput interface {
	pulumi.Input

	ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput
	ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput
}

type responseBasedOriginErrorDetectionParametersPtrType ResponseBasedOriginErrorDetectionParametersArgs

func ResponseBasedOriginErrorDetectionParametersPtr(v *ResponseBasedOriginErrorDetectionParametersArgs) ResponseBasedOriginErrorDetectionParametersPtrInput {
	return (*responseBasedOriginErrorDetectionParametersPtrType)(v)
}

func (*responseBasedOriginErrorDetectionParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseBasedOriginErrorDetectionParameters)(nil)).Elem()
}

func (i *responseBasedOriginErrorDetectionParametersPtrType) ToResponseBasedOriginErrorDetectionParametersPtrOutput() ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return i.ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(context.Background())
}

func (i *responseBasedOriginErrorDetectionParametersPtrType) ToResponseBasedOriginErrorDetectionParametersPtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseBasedOriginErrorDetectionParametersPtrOutput)
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersResponse struct {
	// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
	HttpErrorRanges []HttpErrorRangeParametersResponse `pulumi:"httpErrorRanges"`
	// Type of response errors for real user requests for which origin will be deemed unhealthy
	ResponseBasedDetectedErrorTypes *string `pulumi:"responseBasedDetectedErrorTypes"`
	// The percentage of failed requests in the sample where failover should trigger.
	ResponseBasedFailoverThresholdPercentage *int `pulumi:"responseBasedFailoverThresholdPercentage"`
}

// The JSON object that contains the properties to determine origin health using real requests/responses.
type ResponseBasedOriginErrorDetectionParametersResponseOutput struct{ *pulumi.OutputState }

func (ResponseBasedOriginErrorDetectionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseBasedOriginErrorDetectionParametersResponse)(nil)).Elem()
}

func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ToResponseBasedOriginErrorDetectionParametersResponseOutput() ResponseBasedOriginErrorDetectionParametersResponseOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ToResponseBasedOriginErrorDetectionParametersResponseOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersResponseOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ToResponseBasedOriginErrorDetectionParametersResponsePtrOutput() ResponseBasedOriginErrorDetectionParametersResponsePtrOutput {
	return o.ToResponseBasedOriginErrorDetectionParametersResponsePtrOutputWithContext(context.Background())
}

func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ToResponseBasedOriginErrorDetectionParametersResponsePtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersResponsePtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParametersResponse) *ResponseBasedOriginErrorDetectionParametersResponse {
		return &v
	}).(ResponseBasedOriginErrorDetectionParametersResponsePtrOutput)
}

// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) HttpErrorRanges() HttpErrorRangeParametersResponseArrayOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParametersResponse) []HttpErrorRangeParametersResponse {
		return v.HttpErrorRanges
	}).(HttpErrorRangeParametersResponseArrayOutput)
}

// Type of response errors for real user requests for which origin will be deemed unhealthy
func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ResponseBasedDetectedErrorTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParametersResponse) *string {
		return v.ResponseBasedDetectedErrorTypes
	}).(pulumi.StringPtrOutput)
}

// The percentage of failed requests in the sample where failover should trigger.
func (o ResponseBasedOriginErrorDetectionParametersResponseOutput) ResponseBasedFailoverThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResponseBasedOriginErrorDetectionParametersResponse) *int {
		return v.ResponseBasedFailoverThresholdPercentage
	}).(pulumi.IntPtrOutput)
}

type ResponseBasedOriginErrorDetectionParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseBasedOriginErrorDetectionParametersResponse)(nil)).Elem()
}

func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ToResponseBasedOriginErrorDetectionParametersResponsePtrOutput() ResponseBasedOriginErrorDetectionParametersResponsePtrOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ToResponseBasedOriginErrorDetectionParametersResponsePtrOutputWithContext(ctx context.Context) ResponseBasedOriginErrorDetectionParametersResponsePtrOutput {
	return o
}

func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) Elem() ResponseBasedOriginErrorDetectionParametersResponseOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersResponse) ResponseBasedOriginErrorDetectionParametersResponse {
		return *v
	}).(ResponseBasedOriginErrorDetectionParametersResponseOutput)
}

// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) HttpErrorRanges() HttpErrorRangeParametersResponseArrayOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersResponse) []HttpErrorRangeParametersResponse {
		if v == nil {
			return nil
		}
		return v.HttpErrorRanges
	}).(HttpErrorRangeParametersResponseArrayOutput)
}

// Type of response errors for real user requests for which origin will be deemed unhealthy
func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ResponseBasedDetectedErrorTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResponseBasedDetectedErrorTypes
	}).(pulumi.StringPtrOutput)
}

// The percentage of failed requests in the sample where failover should trigger.
func (o ResponseBasedOriginErrorDetectionParametersResponsePtrOutput) ResponseBasedFailoverThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResponseBasedOriginErrorDetectionParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.ResponseBasedFailoverThresholdPercentage
	}).(pulumi.IntPtrOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type Sku struct {
	// Name of the pricing tier.
	Name *string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuArgs struct {
	// Name of the pricing tier.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuResponse struct {
	// Name of the pricing tier.
	Name *string `pulumi:"name"`
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// Name of the pricing tier.
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// Name of the pricing tier.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Defines the parameters for UrlFileExtension match conditions
type UrlFileExtensionMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// UrlFileExtensionMatchConditionParametersInput is an input type that accepts UrlFileExtensionMatchConditionParametersArgs and UrlFileExtensionMatchConditionParametersOutput values.
// You can construct a concrete instance of `UrlFileExtensionMatchConditionParametersInput` via:
//
//          UrlFileExtensionMatchConditionParametersArgs{...}
type UrlFileExtensionMatchConditionParametersInput interface {
	pulumi.Input

	ToUrlFileExtensionMatchConditionParametersOutput() UrlFileExtensionMatchConditionParametersOutput
	ToUrlFileExtensionMatchConditionParametersOutputWithContext(context.Context) UrlFileExtensionMatchConditionParametersOutput
}

// Defines the parameters for UrlFileExtension match conditions
type UrlFileExtensionMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (UrlFileExtensionMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlFileExtensionMatchConditionParameters)(nil)).Elem()
}

func (i UrlFileExtensionMatchConditionParametersArgs) ToUrlFileExtensionMatchConditionParametersOutput() UrlFileExtensionMatchConditionParametersOutput {
	return i.ToUrlFileExtensionMatchConditionParametersOutputWithContext(context.Background())
}

func (i UrlFileExtensionMatchConditionParametersArgs) ToUrlFileExtensionMatchConditionParametersOutputWithContext(ctx context.Context) UrlFileExtensionMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlFileExtensionMatchConditionParametersOutput)
}

// Defines the parameters for UrlFileExtension match conditions
type UrlFileExtensionMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for UrlFileExtension match conditions
type UrlFileExtensionMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (UrlFileExtensionMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlFileExtensionMatchConditionParametersResponse)(nil)).Elem()
}

func (o UrlFileExtensionMatchConditionParametersResponseOutput) ToUrlFileExtensionMatchConditionParametersResponseOutput() UrlFileExtensionMatchConditionParametersResponseOutput {
	return o
}

func (o UrlFileExtensionMatchConditionParametersResponseOutput) ToUrlFileExtensionMatchConditionParametersResponseOutputWithContext(ctx context.Context) UrlFileExtensionMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o UrlFileExtensionMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o UrlFileExtensionMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o UrlFileExtensionMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o UrlFileExtensionMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o UrlFileExtensionMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileExtensionMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for UrlFilename match conditions
type UrlFileNameMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// UrlFileNameMatchConditionParametersInput is an input type that accepts UrlFileNameMatchConditionParametersArgs and UrlFileNameMatchConditionParametersOutput values.
// You can construct a concrete instance of `UrlFileNameMatchConditionParametersInput` via:
//
//          UrlFileNameMatchConditionParametersArgs{...}
type UrlFileNameMatchConditionParametersInput interface {
	pulumi.Input

	ToUrlFileNameMatchConditionParametersOutput() UrlFileNameMatchConditionParametersOutput
	ToUrlFileNameMatchConditionParametersOutputWithContext(context.Context) UrlFileNameMatchConditionParametersOutput
}

// Defines the parameters for UrlFilename match conditions
type UrlFileNameMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (UrlFileNameMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlFileNameMatchConditionParameters)(nil)).Elem()
}

func (i UrlFileNameMatchConditionParametersArgs) ToUrlFileNameMatchConditionParametersOutput() UrlFileNameMatchConditionParametersOutput {
	return i.ToUrlFileNameMatchConditionParametersOutputWithContext(context.Background())
}

func (i UrlFileNameMatchConditionParametersArgs) ToUrlFileNameMatchConditionParametersOutputWithContext(ctx context.Context) UrlFileNameMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlFileNameMatchConditionParametersOutput)
}

// Defines the parameters for UrlFilename match conditions
type UrlFileNameMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for UrlFilename match conditions
type UrlFileNameMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (UrlFileNameMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlFileNameMatchConditionParametersResponse)(nil)).Elem()
}

func (o UrlFileNameMatchConditionParametersResponseOutput) ToUrlFileNameMatchConditionParametersResponseOutput() UrlFileNameMatchConditionParametersResponseOutput {
	return o
}

func (o UrlFileNameMatchConditionParametersResponseOutput) ToUrlFileNameMatchConditionParametersResponseOutputWithContext(ctx context.Context) UrlFileNameMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o UrlFileNameMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o UrlFileNameMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o UrlFileNameMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o UrlFileNameMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o UrlFileNameMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlFileNameMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the parameters for UrlPath match conditions
type UrlPathMatchConditionParameters struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// UrlPathMatchConditionParametersInput is an input type that accepts UrlPathMatchConditionParametersArgs and UrlPathMatchConditionParametersOutput values.
// You can construct a concrete instance of `UrlPathMatchConditionParametersInput` via:
//
//          UrlPathMatchConditionParametersArgs{...}
type UrlPathMatchConditionParametersInput interface {
	pulumi.Input

	ToUrlPathMatchConditionParametersOutput() UrlPathMatchConditionParametersOutput
	ToUrlPathMatchConditionParametersOutputWithContext(context.Context) UrlPathMatchConditionParametersOutput
}

// Defines the parameters for UrlPath match conditions
type UrlPathMatchConditionParametersArgs struct {
	// The match value for the condition of the delivery rule
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	OdataType       pulumi.StringInput  `pulumi:"odataType"`
	// Describes operator to be matched
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (UrlPathMatchConditionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlPathMatchConditionParameters)(nil)).Elem()
}

func (i UrlPathMatchConditionParametersArgs) ToUrlPathMatchConditionParametersOutput() UrlPathMatchConditionParametersOutput {
	return i.ToUrlPathMatchConditionParametersOutputWithContext(context.Background())
}

func (i UrlPathMatchConditionParametersArgs) ToUrlPathMatchConditionParametersOutputWithContext(ctx context.Context) UrlPathMatchConditionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlPathMatchConditionParametersOutput)
}

// Defines the parameters for UrlPath match conditions
type UrlPathMatchConditionParametersResponse struct {
	// The match value for the condition of the delivery rule
	MatchValues []string `pulumi:"matchValues"`
	// Describes if this is negate condition or not
	NegateCondition *bool  `pulumi:"negateCondition"`
	OdataType       string `pulumi:"odataType"`
	// Describes operator to be matched
	Operator string `pulumi:"operator"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// Defines the parameters for UrlPath match conditions
type UrlPathMatchConditionParametersResponseOutput struct{ *pulumi.OutputState }

func (UrlPathMatchConditionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlPathMatchConditionParametersResponse)(nil)).Elem()
}

func (o UrlPathMatchConditionParametersResponseOutput) ToUrlPathMatchConditionParametersResponseOutput() UrlPathMatchConditionParametersResponseOutput {
	return o
}

func (o UrlPathMatchConditionParametersResponseOutput) ToUrlPathMatchConditionParametersResponseOutputWithContext(ctx context.Context) UrlPathMatchConditionParametersResponseOutput {
	return o
}

// The match value for the condition of the delivery rule
func (o UrlPathMatchConditionParametersResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParametersResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// Describes if this is negate condition or not
func (o UrlPathMatchConditionParametersResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParametersResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

func (o UrlPathMatchConditionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes operator to be matched
func (o UrlPathMatchConditionParametersResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParametersResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms
func (o UrlPathMatchConditionParametersResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlPathMatchConditionParametersResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

// Defines the url redirect action for the delivery rule.
type UrlRedirectAction struct {
	// The name of the action for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRedirectActionParameters `pulumi:"parameters"`
}

// UrlRedirectActionInput is an input type that accepts UrlRedirectActionArgs and UrlRedirectActionOutput values.
// You can construct a concrete instance of `UrlRedirectActionInput` via:
//
//          UrlRedirectActionArgs{...}
type UrlRedirectActionInput interface {
	pulumi.Input

	ToUrlRedirectActionOutput() UrlRedirectActionOutput
	ToUrlRedirectActionOutputWithContext(context.Context) UrlRedirectActionOutput
}

// Defines the url redirect action for the delivery rule.
type UrlRedirectActionArgs struct {
	// The name of the action for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRedirectActionParametersInput `pulumi:"parameters"`
}

func (UrlRedirectActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRedirectAction)(nil)).Elem()
}

func (i UrlRedirectActionArgs) ToUrlRedirectActionOutput() UrlRedirectActionOutput {
	return i.ToUrlRedirectActionOutputWithContext(context.Background())
}

func (i UrlRedirectActionArgs) ToUrlRedirectActionOutputWithContext(ctx context.Context) UrlRedirectActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRedirectActionOutput)
}

// Defines the parameters for the url redirect action.
type UrlRedirectActionParameters struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment *string `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHostname *string `pulumi:"customHostname"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath *string `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
	CustomQueryString *string `pulumi:"customQueryString"`
	// Protocol to use for the redirect. The default value is MatchRequest
	DestinationProtocol *string `pulumi:"destinationProtocol"`
	OdataType           string  `pulumi:"odataType"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType string `pulumi:"redirectType"`
}

// UrlRedirectActionParametersInput is an input type that accepts UrlRedirectActionParametersArgs and UrlRedirectActionParametersOutput values.
// You can construct a concrete instance of `UrlRedirectActionParametersInput` via:
//
//          UrlRedirectActionParametersArgs{...}
type UrlRedirectActionParametersInput interface {
	pulumi.Input

	ToUrlRedirectActionParametersOutput() UrlRedirectActionParametersOutput
	ToUrlRedirectActionParametersOutputWithContext(context.Context) UrlRedirectActionParametersOutput
}

// Defines the parameters for the url redirect action.
type UrlRedirectActionParametersArgs struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment pulumi.StringPtrInput `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHostname pulumi.StringPtrInput `pulumi:"customHostname"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath pulumi.StringPtrInput `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
	CustomQueryString pulumi.StringPtrInput `pulumi:"customQueryString"`
	// Protocol to use for the redirect. The default value is MatchRequest
	DestinationProtocol pulumi.StringPtrInput `pulumi:"destinationProtocol"`
	OdataType           pulumi.StringInput    `pulumi:"odataType"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType pulumi.StringInput `pulumi:"redirectType"`
}

func (UrlRedirectActionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRedirectActionParameters)(nil)).Elem()
}

func (i UrlRedirectActionParametersArgs) ToUrlRedirectActionParametersOutput() UrlRedirectActionParametersOutput {
	return i.ToUrlRedirectActionParametersOutputWithContext(context.Background())
}

func (i UrlRedirectActionParametersArgs) ToUrlRedirectActionParametersOutputWithContext(ctx context.Context) UrlRedirectActionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRedirectActionParametersOutput)
}

// Defines the parameters for the url redirect action.
type UrlRedirectActionParametersResponse struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment *string `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHostname *string `pulumi:"customHostname"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath *string `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
	CustomQueryString *string `pulumi:"customQueryString"`
	// Protocol to use for the redirect. The default value is MatchRequest
	DestinationProtocol *string `pulumi:"destinationProtocol"`
	OdataType           string  `pulumi:"odataType"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType string `pulumi:"redirectType"`
}

// Defines the parameters for the url redirect action.
type UrlRedirectActionParametersResponseOutput struct{ *pulumi.OutputState }

func (UrlRedirectActionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRedirectActionParametersResponse)(nil)).Elem()
}

func (o UrlRedirectActionParametersResponseOutput) ToUrlRedirectActionParametersResponseOutput() UrlRedirectActionParametersResponseOutput {
	return o
}

func (o UrlRedirectActionParametersResponseOutput) ToUrlRedirectActionParametersResponseOutputWithContext(ctx context.Context) UrlRedirectActionParametersResponseOutput {
	return o
}

// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
func (o UrlRedirectActionParametersResponseOutput) CustomFragment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersResponse) *string { return v.CustomFragment }).(pulumi.StringPtrOutput)
}

// Host to redirect. Leave empty to use the incoming host as the destination host.
func (o UrlRedirectActionParametersResponseOutput) CustomHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersResponse) *string { return v.CustomHostname }).(pulumi.StringPtrOutput)
}

// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
func (o UrlRedirectActionParametersResponseOutput) CustomPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersResponse) *string { return v.CustomPath }).(pulumi.StringPtrOutput)
}

// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.
func (o UrlRedirectActionParametersResponseOutput) CustomQueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersResponse) *string { return v.CustomQueryString }).(pulumi.StringPtrOutput)
}

// Protocol to use for the redirect. The default value is MatchRequest
func (o UrlRedirectActionParametersResponseOutput) DestinationProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersResponse) *string { return v.DestinationProtocol }).(pulumi.StringPtrOutput)
}

func (o UrlRedirectActionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// The redirect type the rule will use when redirecting traffic.
func (o UrlRedirectActionParametersResponseOutput) RedirectType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRedirectActionParametersResponse) string { return v.RedirectType }).(pulumi.StringOutput)
}

// Defines the url redirect action for the delivery rule.
type UrlRedirectActionResponse struct {
	// The name of the action for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRedirectActionParametersResponse `pulumi:"parameters"`
}

// Defines the url redirect action for the delivery rule.
type UrlRedirectActionResponseOutput struct{ *pulumi.OutputState }

func (UrlRedirectActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRedirectActionResponse)(nil)).Elem()
}

func (o UrlRedirectActionResponseOutput) ToUrlRedirectActionResponseOutput() UrlRedirectActionResponseOutput {
	return o
}

func (o UrlRedirectActionResponseOutput) ToUrlRedirectActionResponseOutputWithContext(ctx context.Context) UrlRedirectActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
func (o UrlRedirectActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRedirectActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o UrlRedirectActionResponseOutput) Parameters() UrlRedirectActionParametersResponseOutput {
	return o.ApplyT(func(v UrlRedirectActionResponse) UrlRedirectActionParametersResponse { return v.Parameters }).(UrlRedirectActionParametersResponseOutput)
}

// Defines the url rewrite action for the delivery rule.
type UrlRewriteAction struct {
	// The name of the action for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRewriteActionParameters `pulumi:"parameters"`
}

// UrlRewriteActionInput is an input type that accepts UrlRewriteActionArgs and UrlRewriteActionOutput values.
// You can construct a concrete instance of `UrlRewriteActionInput` via:
//
//          UrlRewriteActionArgs{...}
type UrlRewriteActionInput interface {
	pulumi.Input

	ToUrlRewriteActionOutput() UrlRewriteActionOutput
	ToUrlRewriteActionOutputWithContext(context.Context) UrlRewriteActionOutput
}

// Defines the url rewrite action for the delivery rule.
type UrlRewriteActionArgs struct {
	// The name of the action for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRewriteActionParametersInput `pulumi:"parameters"`
}

func (UrlRewriteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteAction)(nil)).Elem()
}

func (i UrlRewriteActionArgs) ToUrlRewriteActionOutput() UrlRewriteActionOutput {
	return i.ToUrlRewriteActionOutputWithContext(context.Background())
}

func (i UrlRewriteActionArgs) ToUrlRewriteActionOutputWithContext(ctx context.Context) UrlRewriteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRewriteActionOutput)
}

// Defines the parameters for the url rewrite action.
type UrlRewriteActionParameters struct {
	// Define the relative URL to which the above requests will be rewritten by.
	Destination string `pulumi:"destination"`
	OdataType   string `pulumi:"odataType"`
	// Whether to preserve unmatched path. Default value is true.
	PreserveUnmatchedPath *bool `pulumi:"preserveUnmatchedPath"`
	// define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.
	SourcePattern string `pulumi:"sourcePattern"`
}

// UrlRewriteActionParametersInput is an input type that accepts UrlRewriteActionParametersArgs and UrlRewriteActionParametersOutput values.
// You can construct a concrete instance of `UrlRewriteActionParametersInput` via:
//
//          UrlRewriteActionParametersArgs{...}
type UrlRewriteActionParametersInput interface {
	pulumi.Input

	ToUrlRewriteActionParametersOutput() UrlRewriteActionParametersOutput
	ToUrlRewriteActionParametersOutputWithContext(context.Context) UrlRewriteActionParametersOutput
}

// Defines the parameters for the url rewrite action.
type UrlRewriteActionParametersArgs struct {
	// Define the relative URL to which the above requests will be rewritten by.
	Destination pulumi.StringInput `pulumi:"destination"`
	OdataType   pulumi.StringInput `pulumi:"odataType"`
	// Whether to preserve unmatched path. Default value is true.
	PreserveUnmatchedPath pulumi.BoolPtrInput `pulumi:"preserveUnmatchedPath"`
	// define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.
	SourcePattern pulumi.StringInput `pulumi:"sourcePattern"`
}

func (UrlRewriteActionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteActionParameters)(nil)).Elem()
}

func (i UrlRewriteActionParametersArgs) ToUrlRewriteActionParametersOutput() UrlRewriteActionParametersOutput {
	return i.ToUrlRewriteActionParametersOutputWithContext(context.Background())
}

func (i UrlRewriteActionParametersArgs) ToUrlRewriteActionParametersOutputWithContext(ctx context.Context) UrlRewriteActionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRewriteActionParametersOutput)
}

// Defines the parameters for the url rewrite action.
type UrlRewriteActionParametersResponse struct {
	// Define the relative URL to which the above requests will be rewritten by.
	Destination string `pulumi:"destination"`
	OdataType   string `pulumi:"odataType"`
	// Whether to preserve unmatched path. Default value is true.
	PreserveUnmatchedPath *bool `pulumi:"preserveUnmatchedPath"`
	// define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.
	SourcePattern string `pulumi:"sourcePattern"`
}

// Defines the parameters for the url rewrite action.
type UrlRewriteActionParametersResponseOutput struct{ *pulumi.OutputState }

func (UrlRewriteActionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteActionParametersResponse)(nil)).Elem()
}

func (o UrlRewriteActionParametersResponseOutput) ToUrlRewriteActionParametersResponseOutput() UrlRewriteActionParametersResponseOutput {
	return o
}

func (o UrlRewriteActionParametersResponseOutput) ToUrlRewriteActionParametersResponseOutputWithContext(ctx context.Context) UrlRewriteActionParametersResponseOutput {
	return o
}

// Define the relative URL to which the above requests will be rewritten by.
func (o UrlRewriteActionParametersResponseOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteActionParametersResponse) string { return v.Destination }).(pulumi.StringOutput)
}

func (o UrlRewriteActionParametersResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteActionParametersResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// Whether to preserve unmatched path. Default value is true.
func (o UrlRewriteActionParametersResponseOutput) PreserveUnmatchedPath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlRewriteActionParametersResponse) *bool { return v.PreserveUnmatchedPath }).(pulumi.BoolPtrOutput)
}

// define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.
func (o UrlRewriteActionParametersResponseOutput) SourcePattern() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteActionParametersResponse) string { return v.SourcePattern }).(pulumi.StringOutput)
}

// Defines the url rewrite action for the delivery rule.
type UrlRewriteActionResponse struct {
	// The name of the action for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlRewriteActionParametersResponse `pulumi:"parameters"`
}

// Defines the url rewrite action for the delivery rule.
type UrlRewriteActionResponseOutput struct{ *pulumi.OutputState }

func (UrlRewriteActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteActionResponse)(nil)).Elem()
}

func (o UrlRewriteActionResponseOutput) ToUrlRewriteActionResponseOutput() UrlRewriteActionResponseOutput {
	return o
}

func (o UrlRewriteActionResponseOutput) ToUrlRewriteActionResponseOutputWithContext(ctx context.Context) UrlRewriteActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
func (o UrlRewriteActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o UrlRewriteActionResponseOutput) Parameters() UrlRewriteActionParametersResponseOutput {
	return o.ApplyT(func(v UrlRewriteActionResponse) UrlRewriteActionParametersResponse { return v.Parameters }).(UrlRewriteActionParametersResponseOutput)
}

// Defines the url signing action for the delivery rule.
type UrlSigningAction struct {
	// The name of the action for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlSigningActionParameters `pulumi:"parameters"`
}

// UrlSigningActionInput is an input type that accepts UrlSigningActionArgs and UrlSigningActionOutput values.
// You can construct a concrete instance of `UrlSigningActionInput` via:
//
//          UrlSigningActionArgs{...}
type UrlSigningActionInput interface {
	pulumi.Input

	ToUrlSigningActionOutput() UrlSigningActionOutput
	ToUrlSigningActionOutputWithContext(context.Context) UrlSigningActionOutput
}

// Defines the url signing action for the delivery rule.
type UrlSigningActionArgs struct {
	// The name of the action for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlSigningActionParametersInput `pulumi:"parameters"`
}

func (UrlSigningActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningAction)(nil)).Elem()
}

func (i UrlSigningActionArgs) ToUrlSigningActionOutput() UrlSigningActionOutput {
	return i.ToUrlSigningActionOutputWithContext(context.Background())
}

func (i UrlSigningActionArgs) ToUrlSigningActionOutputWithContext(ctx context.Context) UrlSigningActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningActionOutput)
}

// Defines the parameters for the Url Signing action.
type UrlSigningActionParameters struct {
	// Algorithm to use for URL signing
	Algorithm *string `pulumi:"algorithm"`
	// Match values to match against. Supports CIDR ranges (both IPv4 and IPv6).
	IpSubnets []string `pulumi:"ipSubnets"`
	// Id reference of the key to be used to verify the hash and should be defined in UrlSigningKeys
	KeyId     string  `pulumi:"keyId"`
	OdataType *string `pulumi:"odataType"`
	// Defines which query string parameters in the url to be considered for expires, key id etc.
	ParameterNameOverride []UrlSigningParamIdentifier `pulumi:"parameterNameOverride"`
}

// UrlSigningActionParametersInput is an input type that accepts UrlSigningActionParametersArgs and UrlSigningActionParametersOutput values.
// You can construct a concrete instance of `UrlSigningActionParametersInput` via:
//
//          UrlSigningActionParametersArgs{...}
type UrlSigningActionParametersInput interface {
	pulumi.Input

	ToUrlSigningActionParametersOutput() UrlSigningActionParametersOutput
	ToUrlSigningActionParametersOutputWithContext(context.Context) UrlSigningActionParametersOutput
}

// Defines the parameters for the Url Signing action.
type UrlSigningActionParametersArgs struct {
	// Algorithm to use for URL signing
	Algorithm pulumi.StringPtrInput `pulumi:"algorithm"`
	// Match values to match against. Supports CIDR ranges (both IPv4 and IPv6).
	IpSubnets pulumi.StringArrayInput `pulumi:"ipSubnets"`
	// Id reference of the key to be used to verify the hash and should be defined in UrlSigningKeys
	KeyId     pulumi.StringInput    `pulumi:"keyId"`
	OdataType pulumi.StringPtrInput `pulumi:"odataType"`
	// Defines which query string parameters in the url to be considered for expires, key id etc.
	ParameterNameOverride UrlSigningParamIdentifierArrayInput `pulumi:"parameterNameOverride"`
}

func (UrlSigningActionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningActionParameters)(nil)).Elem()
}

func (i UrlSigningActionParametersArgs) ToUrlSigningActionParametersOutput() UrlSigningActionParametersOutput {
	return i.ToUrlSigningActionParametersOutputWithContext(context.Background())
}

func (i UrlSigningActionParametersArgs) ToUrlSigningActionParametersOutputWithContext(ctx context.Context) UrlSigningActionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningActionParametersOutput)
}

// Defines the parameters for the Url Signing action.
type UrlSigningActionParametersResponse struct {
	// Algorithm to use for URL signing
	Algorithm *string `pulumi:"algorithm"`
	// Match values to match against. Supports CIDR ranges (both IPv4 and IPv6).
	IpSubnets []string `pulumi:"ipSubnets"`
	// Id reference of the key to be used to verify the hash and should be defined in UrlSigningKeys
	KeyId     string  `pulumi:"keyId"`
	OdataType *string `pulumi:"odataType"`
	// Defines which query string parameters in the url to be considered for expires, key id etc.
	ParameterNameOverride []UrlSigningParamIdentifierResponse `pulumi:"parameterNameOverride"`
}

// Defines the parameters for the Url Signing action.
type UrlSigningActionParametersResponseOutput struct{ *pulumi.OutputState }

func (UrlSigningActionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningActionParametersResponse)(nil)).Elem()
}

func (o UrlSigningActionParametersResponseOutput) ToUrlSigningActionParametersResponseOutput() UrlSigningActionParametersResponseOutput {
	return o
}

func (o UrlSigningActionParametersResponseOutput) ToUrlSigningActionParametersResponseOutputWithContext(ctx context.Context) UrlSigningActionParametersResponseOutput {
	return o
}

// Algorithm to use for URL signing
func (o UrlSigningActionParametersResponseOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlSigningActionParametersResponse) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

// Match values to match against. Supports CIDR ranges (both IPv4 and IPv6).
func (o UrlSigningActionParametersResponseOutput) IpSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UrlSigningActionParametersResponse) []string { return v.IpSubnets }).(pulumi.StringArrayOutput)
}

// Id reference of the key to be used to verify the hash and should be defined in UrlSigningKeys
func (o UrlSigningActionParametersResponseOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningActionParametersResponse) string { return v.KeyId }).(pulumi.StringOutput)
}

func (o UrlSigningActionParametersResponseOutput) OdataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlSigningActionParametersResponse) *string { return v.OdataType }).(pulumi.StringPtrOutput)
}

// Defines which query string parameters in the url to be considered for expires, key id etc.
func (o UrlSigningActionParametersResponseOutput) ParameterNameOverride() UrlSigningParamIdentifierResponseArrayOutput {
	return o.ApplyT(func(v UrlSigningActionParametersResponse) []UrlSigningParamIdentifierResponse {
		return v.ParameterNameOverride
	}).(UrlSigningParamIdentifierResponseArrayOutput)
}

// Defines the url signing action for the delivery rule.
type UrlSigningActionResponse struct {
	// The name of the action for the delivery rule.
	Name string `pulumi:"name"`
	// Defines the parameters for the action.
	Parameters UrlSigningActionParametersResponse `pulumi:"parameters"`
}

// Defines the url signing action for the delivery rule.
type UrlSigningActionResponseOutput struct{ *pulumi.OutputState }

func (UrlSigningActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningActionResponse)(nil)).Elem()
}

func (o UrlSigningActionResponseOutput) ToUrlSigningActionResponseOutput() UrlSigningActionResponseOutput {
	return o
}

func (o UrlSigningActionResponseOutput) ToUrlSigningActionResponseOutputWithContext(ctx context.Context) UrlSigningActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
func (o UrlSigningActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the parameters for the action.
func (o UrlSigningActionResponseOutput) Parameters() UrlSigningActionParametersResponseOutput {
	return o.ApplyT(func(v UrlSigningActionResponse) UrlSigningActionParametersResponse { return v.Parameters }).(UrlSigningActionParametersResponseOutput)
}

// Url signing key
type UrlSigningKey struct {
	// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
	KeyId string `pulumi:"keyId"`
	// Defines the parameters for using customer key vault for Url Signing Key.
	KeySourceParameters KeyVaultSigningKeyParameters `pulumi:"keySourceParameters"`
}

// UrlSigningKeyInput is an input type that accepts UrlSigningKeyArgs and UrlSigningKeyOutput values.
// You can construct a concrete instance of `UrlSigningKeyInput` via:
//
//          UrlSigningKeyArgs{...}
type UrlSigningKeyInput interface {
	pulumi.Input

	ToUrlSigningKeyOutput() UrlSigningKeyOutput
	ToUrlSigningKeyOutputWithContext(context.Context) UrlSigningKeyOutput
}

// Url signing key
type UrlSigningKeyArgs struct {
	// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// Defines the parameters for using customer key vault for Url Signing Key.
	KeySourceParameters KeyVaultSigningKeyParametersInput `pulumi:"keySourceParameters"`
}

func (UrlSigningKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningKey)(nil)).Elem()
}

func (i UrlSigningKeyArgs) ToUrlSigningKeyOutput() UrlSigningKeyOutput {
	return i.ToUrlSigningKeyOutputWithContext(context.Background())
}

func (i UrlSigningKeyArgs) ToUrlSigningKeyOutputWithContext(ctx context.Context) UrlSigningKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningKeyOutput)
}

// UrlSigningKeyArrayInput is an input type that accepts UrlSigningKeyArray and UrlSigningKeyArrayOutput values.
// You can construct a concrete instance of `UrlSigningKeyArrayInput` via:
//
//          UrlSigningKeyArray{ UrlSigningKeyArgs{...} }
type UrlSigningKeyArrayInput interface {
	pulumi.Input

	ToUrlSigningKeyArrayOutput() UrlSigningKeyArrayOutput
	ToUrlSigningKeyArrayOutputWithContext(context.Context) UrlSigningKeyArrayOutput
}

type UrlSigningKeyArray []UrlSigningKeyInput

func (UrlSigningKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlSigningKey)(nil)).Elem()
}

func (i UrlSigningKeyArray) ToUrlSigningKeyArrayOutput() UrlSigningKeyArrayOutput {
	return i.ToUrlSigningKeyArrayOutputWithContext(context.Background())
}

func (i UrlSigningKeyArray) ToUrlSigningKeyArrayOutputWithContext(ctx context.Context) UrlSigningKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningKeyArrayOutput)
}

// Url signing key
type UrlSigningKeyResponse struct {
	// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
	KeyId string `pulumi:"keyId"`
	// Defines the parameters for using customer key vault for Url Signing Key.
	KeySourceParameters KeyVaultSigningKeyParametersResponse `pulumi:"keySourceParameters"`
}

// Url signing key
type UrlSigningKeyResponseOutput struct{ *pulumi.OutputState }

func (UrlSigningKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningKeyResponse)(nil)).Elem()
}

func (o UrlSigningKeyResponseOutput) ToUrlSigningKeyResponseOutput() UrlSigningKeyResponseOutput {
	return o
}

func (o UrlSigningKeyResponseOutput) ToUrlSigningKeyResponseOutputWithContext(ctx context.Context) UrlSigningKeyResponseOutput {
	return o
}

// Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash.
func (o UrlSigningKeyResponseOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningKeyResponse) string { return v.KeyId }).(pulumi.StringOutput)
}

// Defines the parameters for using customer key vault for Url Signing Key.
func (o UrlSigningKeyResponseOutput) KeySourceParameters() KeyVaultSigningKeyParametersResponseOutput {
	return o.ApplyT(func(v UrlSigningKeyResponse) KeyVaultSigningKeyParametersResponse { return v.KeySourceParameters }).(KeyVaultSigningKeyParametersResponseOutput)
}

type UrlSigningKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (UrlSigningKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlSigningKeyResponse)(nil)).Elem()
}

func (o UrlSigningKeyResponseArrayOutput) ToUrlSigningKeyResponseArrayOutput() UrlSigningKeyResponseArrayOutput {
	return o
}

func (o UrlSigningKeyResponseArrayOutput) ToUrlSigningKeyResponseArrayOutputWithContext(ctx context.Context) UrlSigningKeyResponseArrayOutput {
	return o
}

func (o UrlSigningKeyResponseArrayOutput) Index(i pulumi.IntInput) UrlSigningKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UrlSigningKeyResponse {
		return vs[0].([]UrlSigningKeyResponse)[vs[1].(int)]
	}).(UrlSigningKeyResponseOutput)
}

// Defines how to identify a parameter for a specific purpose e.g. expires
type UrlSigningParamIdentifier struct {
	// Indicates the purpose of the parameter
	ParamIndicator string `pulumi:"paramIndicator"`
	// Parameter name
	ParamName string `pulumi:"paramName"`
}

// UrlSigningParamIdentifierInput is an input type that accepts UrlSigningParamIdentifierArgs and UrlSigningParamIdentifierOutput values.
// You can construct a concrete instance of `UrlSigningParamIdentifierInput` via:
//
//          UrlSigningParamIdentifierArgs{...}
type UrlSigningParamIdentifierInput interface {
	pulumi.Input

	ToUrlSigningParamIdentifierOutput() UrlSigningParamIdentifierOutput
	ToUrlSigningParamIdentifierOutputWithContext(context.Context) UrlSigningParamIdentifierOutput
}

// Defines how to identify a parameter for a specific purpose e.g. expires
type UrlSigningParamIdentifierArgs struct {
	// Indicates the purpose of the parameter
	ParamIndicator pulumi.StringInput `pulumi:"paramIndicator"`
	// Parameter name
	ParamName pulumi.StringInput `pulumi:"paramName"`
}

func (UrlSigningParamIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningParamIdentifier)(nil)).Elem()
}

func (i UrlSigningParamIdentifierArgs) ToUrlSigningParamIdentifierOutput() UrlSigningParamIdentifierOutput {
	return i.ToUrlSigningParamIdentifierOutputWithContext(context.Background())
}

func (i UrlSigningParamIdentifierArgs) ToUrlSigningParamIdentifierOutputWithContext(ctx context.Context) UrlSigningParamIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningParamIdentifierOutput)
}

// UrlSigningParamIdentifierArrayInput is an input type that accepts UrlSigningParamIdentifierArray and UrlSigningParamIdentifierArrayOutput values.
// You can construct a concrete instance of `UrlSigningParamIdentifierArrayInput` via:
//
//          UrlSigningParamIdentifierArray{ UrlSigningParamIdentifierArgs{...} }
type UrlSigningParamIdentifierArrayInput interface {
	pulumi.Input

	ToUrlSigningParamIdentifierArrayOutput() UrlSigningParamIdentifierArrayOutput
	ToUrlSigningParamIdentifierArrayOutputWithContext(context.Context) UrlSigningParamIdentifierArrayOutput
}

type UrlSigningParamIdentifierArray []UrlSigningParamIdentifierInput

func (UrlSigningParamIdentifierArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlSigningParamIdentifier)(nil)).Elem()
}

func (i UrlSigningParamIdentifierArray) ToUrlSigningParamIdentifierArrayOutput() UrlSigningParamIdentifierArrayOutput {
	return i.ToUrlSigningParamIdentifierArrayOutputWithContext(context.Background())
}

func (i UrlSigningParamIdentifierArray) ToUrlSigningParamIdentifierArrayOutputWithContext(ctx context.Context) UrlSigningParamIdentifierArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlSigningParamIdentifierArrayOutput)
}

// Defines how to identify a parameter for a specific purpose e.g. expires
type UrlSigningParamIdentifierResponse struct {
	// Indicates the purpose of the parameter
	ParamIndicator string `pulumi:"paramIndicator"`
	// Parameter name
	ParamName string `pulumi:"paramName"`
}

// Defines how to identify a parameter for a specific purpose e.g. expires
type UrlSigningParamIdentifierResponseOutput struct{ *pulumi.OutputState }

func (UrlSigningParamIdentifierResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlSigningParamIdentifierResponse)(nil)).Elem()
}

func (o UrlSigningParamIdentifierResponseOutput) ToUrlSigningParamIdentifierResponseOutput() UrlSigningParamIdentifierResponseOutput {
	return o
}

func (o UrlSigningParamIdentifierResponseOutput) ToUrlSigningParamIdentifierResponseOutputWithContext(ctx context.Context) UrlSigningParamIdentifierResponseOutput {
	return o
}

// Indicates the purpose of the parameter
func (o UrlSigningParamIdentifierResponseOutput) ParamIndicator() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningParamIdentifierResponse) string { return v.ParamIndicator }).(pulumi.StringOutput)
}

// Parameter name
func (o UrlSigningParamIdentifierResponseOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v UrlSigningParamIdentifierResponse) string { return v.ParamName }).(pulumi.StringOutput)
}

type UrlSigningParamIdentifierResponseArrayOutput struct{ *pulumi.OutputState }

func (UrlSigningParamIdentifierResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlSigningParamIdentifierResponse)(nil)).Elem()
}

func (o UrlSigningParamIdentifierResponseArrayOutput) ToUrlSigningParamIdentifierResponseArrayOutput() UrlSigningParamIdentifierResponseArrayOutput {
	return o
}

func (o UrlSigningParamIdentifierResponseArrayOutput) ToUrlSigningParamIdentifierResponseArrayOutputWithContext(ctx context.Context) UrlSigningParamIdentifierResponseArrayOutput {
	return o
}

func (o UrlSigningParamIdentifierResponseArrayOutput) Index(i pulumi.IntInput) UrlSigningParamIdentifierResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UrlSigningParamIdentifierResponse {
		return vs[0].([]UrlSigningParamIdentifierResponse)[vs[1].(int)]
	}).(UrlSigningParamIdentifierResponseOutput)
}

// Defines contents of a web application firewall global configuration
type PolicySettings struct {
	// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
	DefaultCustomBlockResponseBody *string `pulumi:"defaultCustomBlockResponseBody"`
	// If the action type is block, this field defines the default customer overridable http response status code.
	DefaultCustomBlockResponseStatusCode *int `pulumi:"defaultCustomBlockResponseStatusCode"`
	// If action type is redirect, this field represents the default redirect URL for the client.
	DefaultRedirectUrl *string `pulumi:"defaultRedirectUrl"`
	// describes if the policy is in enabled state or disabled state
	EnabledState *string `pulumi:"enabledState"`
	// Describes if it is in detection mode or prevention mode at policy level.
	Mode *string `pulumi:"mode"`
}

// PolicySettingsInput is an input type that accepts PolicySettingsArgs and PolicySettingsOutput values.
// You can construct a concrete instance of `PolicySettingsInput` via:
//
//          PolicySettingsArgs{...}
type PolicySettingsInput interface {
	pulumi.Input

	ToPolicySettingsOutput() PolicySettingsOutput
	ToPolicySettingsOutputWithContext(context.Context) PolicySettingsOutput
}

// Defines contents of a web application firewall global configuration
type PolicySettingsArgs struct {
	// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
	DefaultCustomBlockResponseBody pulumi.StringPtrInput `pulumi:"defaultCustomBlockResponseBody"`
	// If the action type is block, this field defines the default customer overridable http response status code.
	DefaultCustomBlockResponseStatusCode pulumi.IntPtrInput `pulumi:"defaultCustomBlockResponseStatusCode"`
	// If action type is redirect, this field represents the default redirect URL for the client.
	DefaultRedirectUrl pulumi.StringPtrInput `pulumi:"defaultRedirectUrl"`
	// describes if the policy is in enabled state or disabled state
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// Describes if it is in detection mode or prevention mode at policy level.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (PolicySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettings)(nil)).Elem()
}

func (i PolicySettingsArgs) ToPolicySettingsOutput() PolicySettingsOutput {
	return i.ToPolicySettingsOutputWithContext(context.Background())
}

func (i PolicySettingsArgs) ToPolicySettingsOutputWithContext(ctx context.Context) PolicySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsOutput)
}

func (i PolicySettingsArgs) ToPolicySettingsPtrOutput() PolicySettingsPtrOutput {
	return i.ToPolicySettingsPtrOutputWithContext(context.Background())
}

func (i PolicySettingsArgs) ToPolicySettingsPtrOutputWithContext(ctx context.Context) PolicySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsOutput).ToPolicySettingsPtrOutputWithContext(ctx)
}

// PolicySettingsPtrInput is an input type that accepts PolicySettingsArgs, PolicySettingsPtr and PolicySettingsPtrOutput values.
// You can construct a concrete instance of `PolicySettingsPtrInput` via:
//
//          PolicySettingsArgs{...}
//
//  or:
//
//          nil
type PolicySettingsPtrInput interface {
	pulumi.Input

	ToPolicySettingsPtrOutput() PolicySettingsPtrOutput
	ToPolicySettingsPtrOutputWithContext(context.Context) PolicySettingsPtrOutput
}

type policySettingsPtrType PolicySettingsArgs

func PolicySettingsPtr(v *PolicySettingsArgs) PolicySettingsPtrInput {
	return (*policySettingsPtrType)(v)
}

func (*policySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySettings)(nil)).Elem()
}

func (i *policySettingsPtrType) ToPolicySettingsPtrOutput() PolicySettingsPtrOutput {
	return i.ToPolicySettingsPtrOutputWithContext(context.Background())
}

func (i *policySettingsPtrType) ToPolicySettingsPtrOutputWithContext(ctx context.Context) PolicySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsPtrOutput)
}

// Defines contents of a web application firewall global configuration
type PolicySettingsResponse struct {
	// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
	DefaultCustomBlockResponseBody *string `pulumi:"defaultCustomBlockResponseBody"`
	// If the action type is block, this field defines the default customer overridable http response status code.
	DefaultCustomBlockResponseStatusCode *int `pulumi:"defaultCustomBlockResponseStatusCode"`
	// If action type is redirect, this field represents the default redirect URL for the client.
	DefaultRedirectUrl *string `pulumi:"defaultRedirectUrl"`
	// describes if the policy is in enabled state or disabled state
	EnabledState *string `pulumi:"enabledState"`
	// Describes if it is in detection mode or prevention mode at policy level.
	Mode *string `pulumi:"mode"`
}

// Defines contents of a web application firewall global configuration
type PolicySettingsResponseOutput struct{ *pulumi.OutputState }

func (PolicySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettingsResponse)(nil)).Elem()
}

func (o PolicySettingsResponseOutput) ToPolicySettingsResponseOutput() PolicySettingsResponseOutput {
	return o
}

func (o PolicySettingsResponseOutput) ToPolicySettingsResponseOutputWithContext(ctx context.Context) PolicySettingsResponseOutput {
	return o
}

func (o PolicySettingsResponseOutput) ToPolicySettingsResponsePtrOutput() PolicySettingsResponsePtrOutput {
	return o.ToPolicySettingsResponsePtrOutputWithContext(context.Background())
}

func (o PolicySettingsResponseOutput) ToPolicySettingsResponsePtrOutputWithContext(ctx context.Context) PolicySettingsResponsePtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *PolicySettingsResponse {
		return &v
	}).(PolicySettingsResponsePtrOutput)
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o PolicySettingsResponseOutput) DefaultCustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *string { return v.DefaultCustomBlockResponseBody }).(pulumi.StringPtrOutput)
}

// If the action type is block, this field defines the default customer overridable http response status code.
func (o PolicySettingsResponseOutput) DefaultCustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *int { return v.DefaultCustomBlockResponseStatusCode }).(pulumi.IntPtrOutput)
}

// If action type is redirect, this field represents the default redirect URL for the client.
func (o PolicySettingsResponseOutput) DefaultRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *string { return v.DefaultRedirectUrl }).(pulumi.StringPtrOutput)
}

// describes if the policy is in enabled state or disabled state
func (o PolicySettingsResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Describes if it is in detection mode or prevention mode at policy level.
func (o PolicySettingsResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type PolicySettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PolicySettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySettingsResponse)(nil)).Elem()
}

func (o PolicySettingsResponsePtrOutput) ToPolicySettingsResponsePtrOutput() PolicySettingsResponsePtrOutput {
	return o
}

func (o PolicySettingsResponsePtrOutput) ToPolicySettingsResponsePtrOutputWithContext(ctx context.Context) PolicySettingsResponsePtrOutput {
	return o
}

func (o PolicySettingsResponsePtrOutput) Elem() PolicySettingsResponseOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) PolicySettingsResponse { return *v }).(PolicySettingsResponseOutput)
}

// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
func (o PolicySettingsResponsePtrOutput) DefaultCustomBlockResponseBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultCustomBlockResponseBody
	}).(pulumi.StringPtrOutput)
}

// If the action type is block, this field defines the default customer overridable http response status code.
func (o PolicySettingsResponsePtrOutput) DefaultCustomBlockResponseStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.DefaultCustomBlockResponseStatusCode
	}).(pulumi.IntPtrOutput)
}

// If action type is redirect, this field represents the default redirect URL for the client.
func (o PolicySettingsResponsePtrOutput) DefaultRedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultRedirectUrl
	}).(pulumi.StringPtrOutput)
}

// describes if the policy is in enabled state or disabled state
func (o PolicySettingsResponsePtrOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.EnabledState
	}).(pulumi.StringPtrOutput)
}

// Describes if it is in detection mode or prevention mode at policy level.
func (o PolicySettingsResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(CacheExpirationActionParametersOutput{})
	pulumi.RegisterOutputType(CacheExpirationActionParametersResponseOutput{})
	pulumi.RegisterOutputType(CacheKeyQueryStringActionParametersOutput{})
	pulumi.RegisterOutputType(CacheKeyQueryStringActionParametersResponseOutput{})
	pulumi.RegisterOutputType(CdnEndpointResponseOutput{})
	pulumi.RegisterOutputType(CdnEndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(CookiesMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(CookiesMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(CustomRuleOutput{})
	pulumi.RegisterOutputType(CustomRuleArrayOutput{})
	pulumi.RegisterOutputType(CustomRuleListOutput{})
	pulumi.RegisterOutputType(CustomRuleListPtrOutput{})
	pulumi.RegisterOutputType(CustomRuleListResponseOutput{})
	pulumi.RegisterOutputType(CustomRuleListResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomRuleResponseOutput{})
	pulumi.RegisterOutputType(CustomRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginArrayOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginGroupOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginGroupArrayOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginGroupResponseOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginResponseOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginResponseArrayOutput{})
	pulumi.RegisterOutputType(DeliveryRuleOutput{})
	pulumi.RegisterOutputType(DeliveryRuleArrayOutput{})
	pulumi.RegisterOutputType(DeliveryRuleCacheExpirationActionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleCacheExpirationActionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleCacheKeyQueryStringActionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleCacheKeyQueryStringActionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleCookiesConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleCookiesConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleHttpVersionConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleHttpVersionConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleIsDeviceConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleIsDeviceConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRulePostArgsConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRulePostArgsConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleQueryStringConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleQueryStringConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRemoteAddressConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRemoteAddressConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestBodyConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestBodyConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestHeaderActionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestHeaderActionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestHeaderConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestHeaderConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestMethodConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestMethodConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestSchemeConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestSchemeConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestUriConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleRequestUriConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(DeliveryRuleResponseHeaderActionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleResponseHeaderActionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleUrlFileExtensionConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleUrlFileExtensionConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleUrlFileNameConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleUrlFileNameConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleUrlPathConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleUrlPathConditionResponseOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersDeliveryPolicyOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput{})
	pulumi.RegisterOutputType(GeoFilterOutput{})
	pulumi.RegisterOutputType(GeoFilterArrayOutput{})
	pulumi.RegisterOutputType(GeoFilterResponseOutput{})
	pulumi.RegisterOutputType(GeoFilterResponseArrayOutput{})
	pulumi.RegisterOutputType(HeaderActionParametersOutput{})
	pulumi.RegisterOutputType(HeaderActionParametersResponseOutput{})
	pulumi.RegisterOutputType(HealthProbeParametersOutput{})
	pulumi.RegisterOutputType(HealthProbeParametersPtrOutput{})
	pulumi.RegisterOutputType(HealthProbeParametersResponseOutput{})
	pulumi.RegisterOutputType(HealthProbeParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(HttpErrorRangeParametersOutput{})
	pulumi.RegisterOutputType(HttpErrorRangeParametersArrayOutput{})
	pulumi.RegisterOutputType(HttpErrorRangeParametersResponseOutput{})
	pulumi.RegisterOutputType(HttpErrorRangeParametersResponseArrayOutput{})
	pulumi.RegisterOutputType(HttpVersionMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(HttpVersionMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(IsDeviceMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(IsDeviceMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultSigningKeyParametersOutput{})
	pulumi.RegisterOutputType(KeyVaultSigningKeyParametersResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListPtrOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetResponseArrayOutput{})
	pulumi.RegisterOutputType(MatchConditionOutput{})
	pulumi.RegisterOutputType(MatchConditionArrayOutput{})
	pulumi.RegisterOutputType(MatchConditionResponseOutput{})
	pulumi.RegisterOutputType(MatchConditionResponseArrayOutput{})
	pulumi.RegisterOutputType(PostArgsMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(PostArgsMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(QueryStringMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(QueryStringMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(RateLimitRuleOutput{})
	pulumi.RegisterOutputType(RateLimitRuleArrayOutput{})
	pulumi.RegisterOutputType(RateLimitRuleListOutput{})
	pulumi.RegisterOutputType(RateLimitRuleListPtrOutput{})
	pulumi.RegisterOutputType(RateLimitRuleListResponseOutput{})
	pulumi.RegisterOutputType(RateLimitRuleListResponsePtrOutput{})
	pulumi.RegisterOutputType(RateLimitRuleResponseOutput{})
	pulumi.RegisterOutputType(RateLimitRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(RemoteAddressMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(RemoteAddressMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(RequestBodyMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(RequestBodyMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(RequestHeaderMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(RequestHeaderMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(RequestMethodMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(RequestMethodMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(RequestSchemeMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(RequestSchemeMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(RequestUriMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(RequestUriMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(ResourceReferenceOutput{})
	pulumi.RegisterOutputType(ResourceReferencePtrOutput{})
	pulumi.RegisterOutputType(ResourceReferenceArrayOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponseOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(ResponseBasedOriginErrorDetectionParametersOutput{})
	pulumi.RegisterOutputType(ResponseBasedOriginErrorDetectionParametersPtrOutput{})
	pulumi.RegisterOutputType(ResponseBasedOriginErrorDetectionParametersResponseOutput{})
	pulumi.RegisterOutputType(ResponseBasedOriginErrorDetectionParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(UrlFileExtensionMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(UrlFileExtensionMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(UrlFileNameMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(UrlFileNameMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(UrlPathMatchConditionParametersOutput{})
	pulumi.RegisterOutputType(UrlPathMatchConditionParametersResponseOutput{})
	pulumi.RegisterOutputType(UrlRedirectActionOutput{})
	pulumi.RegisterOutputType(UrlRedirectActionParametersOutput{})
	pulumi.RegisterOutputType(UrlRedirectActionParametersResponseOutput{})
	pulumi.RegisterOutputType(UrlRedirectActionResponseOutput{})
	pulumi.RegisterOutputType(UrlRewriteActionOutput{})
	pulumi.RegisterOutputType(UrlRewriteActionParametersOutput{})
	pulumi.RegisterOutputType(UrlRewriteActionParametersResponseOutput{})
	pulumi.RegisterOutputType(UrlRewriteActionResponseOutput{})
	pulumi.RegisterOutputType(UrlSigningActionOutput{})
	pulumi.RegisterOutputType(UrlSigningActionParametersOutput{})
	pulumi.RegisterOutputType(UrlSigningActionParametersResponseOutput{})
	pulumi.RegisterOutputType(UrlSigningActionResponseOutput{})
	pulumi.RegisterOutputType(UrlSigningKeyOutput{})
	pulumi.RegisterOutputType(UrlSigningKeyArrayOutput{})
	pulumi.RegisterOutputType(UrlSigningKeyResponseOutput{})
	pulumi.RegisterOutputType(UrlSigningKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(UrlSigningParamIdentifierOutput{})
	pulumi.RegisterOutputType(UrlSigningParamIdentifierArrayOutput{})
	pulumi.RegisterOutputType(UrlSigningParamIdentifierResponseOutput{})
	pulumi.RegisterOutputType(UrlSigningParamIdentifierResponseArrayOutput{})
	pulumi.RegisterOutputType(PolicySettingsOutput{})
	pulumi.RegisterOutputType(PolicySettingsPtrOutput{})
	pulumi.RegisterOutputType(PolicySettingsResponseOutput{})
	pulumi.RegisterOutputType(PolicySettingsResponsePtrOutput{})
}
