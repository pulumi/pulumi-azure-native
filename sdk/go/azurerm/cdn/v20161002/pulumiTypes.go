// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20161002

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Customer provided domain for branding purposes, e.g. www.contoso.com.
type CustomDomainType struct {
	// Resource location.
	Location string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The JSON object that contains the properties of the custom domain to create.
	Properties CustomDomainPropertiesResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// CustomDomainTypeInput is an input type that accepts CustomDomainTypeArgs and CustomDomainTypeOutput values.
// You can construct a concrete instance of `CustomDomainTypeInput` via:
//
//          CustomDomainTypeArgs{...}
type CustomDomainTypeInput interface {
	pulumi.Input

	ToCustomDomainTypeOutput() CustomDomainTypeOutput
	ToCustomDomainTypeOutputWithContext(context.Context) CustomDomainTypeOutput
}

// Customer provided domain for branding purposes, e.g. www.contoso.com.
type CustomDomainTypeArgs struct {
	// Resource location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The JSON object that contains the properties of the custom domain to create.
	Properties CustomDomainPropertiesResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CustomDomainTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainType)(nil)).Elem()
}

func (i CustomDomainTypeArgs) ToCustomDomainTypeOutput() CustomDomainTypeOutput {
	return i.ToCustomDomainTypeOutputWithContext(context.Background())
}

func (i CustomDomainTypeArgs) ToCustomDomainTypeOutputWithContext(ctx context.Context) CustomDomainTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainTypeOutput)
}

// Customer provided domain for branding purposes, e.g. www.contoso.com.
type CustomDomainTypeOutput struct{ *pulumi.OutputState }

func (CustomDomainTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainType)(nil)).Elem()
}

func (o CustomDomainTypeOutput) ToCustomDomainTypeOutput() CustomDomainTypeOutput {
	return o
}

func (o CustomDomainTypeOutput) ToCustomDomainTypeOutputWithContext(ctx context.Context) CustomDomainTypeOutput {
	return o
}

// Resource location.
func (o CustomDomainTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name.
func (o CustomDomainTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainType) string { return v.Name }).(pulumi.StringOutput)
}

// The JSON object that contains the properties of the custom domain to create.
func (o CustomDomainTypeOutput) Properties() CustomDomainPropertiesResponseOutput {
	return o.ApplyT(func(v CustomDomainType) CustomDomainPropertiesResponse { return v.Properties }).(CustomDomainPropertiesResponseOutput)
}

// Resource tags.
func (o CustomDomainTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CustomDomainType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o CustomDomainTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainType) string { return v.Type }).(pulumi.StringOutput)
}

// The JSON object that contains the properties of the custom domain to create.
type CustomDomainPropertiesResponse struct {
	// Provisioning state of Custom Https of the custom domain.
	CustomHttpsProvisioningState string `pulumi:"customHttpsProvisioningState"`
	// The host name of the custom domain. Must be a domain name.
	HostName string `pulumi:"hostName"`
	// Provisioning status of the custom domain.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource status of the custom domain.
	ResourceState string `pulumi:"resourceState"`
	// Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China.
	ValidationData *string `pulumi:"validationData"`
}

// CustomDomainPropertiesResponseInput is an input type that accepts CustomDomainPropertiesResponseArgs and CustomDomainPropertiesResponseOutput values.
// You can construct a concrete instance of `CustomDomainPropertiesResponseInput` via:
//
//          CustomDomainPropertiesResponseArgs{...}
type CustomDomainPropertiesResponseInput interface {
	pulumi.Input

	ToCustomDomainPropertiesResponseOutput() CustomDomainPropertiesResponseOutput
	ToCustomDomainPropertiesResponseOutputWithContext(context.Context) CustomDomainPropertiesResponseOutput
}

// The JSON object that contains the properties of the custom domain to create.
type CustomDomainPropertiesResponseArgs struct {
	// Provisioning state of Custom Https of the custom domain.
	CustomHttpsProvisioningState pulumi.StringInput `pulumi:"customHttpsProvisioningState"`
	// The host name of the custom domain. Must be a domain name.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// Provisioning status of the custom domain.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Resource status of the custom domain.
	ResourceState pulumi.StringInput `pulumi:"resourceState"`
	// Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China.
	ValidationData pulumi.StringPtrInput `pulumi:"validationData"`
}

func (CustomDomainPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainPropertiesResponse)(nil)).Elem()
}

func (i CustomDomainPropertiesResponseArgs) ToCustomDomainPropertiesResponseOutput() CustomDomainPropertiesResponseOutput {
	return i.ToCustomDomainPropertiesResponseOutputWithContext(context.Background())
}

func (i CustomDomainPropertiesResponseArgs) ToCustomDomainPropertiesResponseOutputWithContext(ctx context.Context) CustomDomainPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainPropertiesResponseOutput)
}

func (i CustomDomainPropertiesResponseArgs) ToCustomDomainPropertiesResponsePtrOutput() CustomDomainPropertiesResponsePtrOutput {
	return i.ToCustomDomainPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i CustomDomainPropertiesResponseArgs) ToCustomDomainPropertiesResponsePtrOutputWithContext(ctx context.Context) CustomDomainPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainPropertiesResponseOutput).ToCustomDomainPropertiesResponsePtrOutputWithContext(ctx)
}

// CustomDomainPropertiesResponsePtrInput is an input type that accepts CustomDomainPropertiesResponseArgs, CustomDomainPropertiesResponsePtr and CustomDomainPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `CustomDomainPropertiesResponsePtrInput` via:
//
//          CustomDomainPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type CustomDomainPropertiesResponsePtrInput interface {
	pulumi.Input

	ToCustomDomainPropertiesResponsePtrOutput() CustomDomainPropertiesResponsePtrOutput
	ToCustomDomainPropertiesResponsePtrOutputWithContext(context.Context) CustomDomainPropertiesResponsePtrOutput
}

type customDomainPropertiesResponsePtrType CustomDomainPropertiesResponseArgs

func CustomDomainPropertiesResponsePtr(v *CustomDomainPropertiesResponseArgs) CustomDomainPropertiesResponsePtrInput {
	return (*customDomainPropertiesResponsePtrType)(v)
}

func (*customDomainPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomainPropertiesResponse)(nil)).Elem()
}

func (i *customDomainPropertiesResponsePtrType) ToCustomDomainPropertiesResponsePtrOutput() CustomDomainPropertiesResponsePtrOutput {
	return i.ToCustomDomainPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *customDomainPropertiesResponsePtrType) ToCustomDomainPropertiesResponsePtrOutputWithContext(ctx context.Context) CustomDomainPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainPropertiesResponsePtrOutput)
}

// The JSON object that contains the properties of the custom domain to create.
type CustomDomainPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CustomDomainPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainPropertiesResponse)(nil)).Elem()
}

func (o CustomDomainPropertiesResponseOutput) ToCustomDomainPropertiesResponseOutput() CustomDomainPropertiesResponseOutput {
	return o
}

func (o CustomDomainPropertiesResponseOutput) ToCustomDomainPropertiesResponseOutputWithContext(ctx context.Context) CustomDomainPropertiesResponseOutput {
	return o
}

func (o CustomDomainPropertiesResponseOutput) ToCustomDomainPropertiesResponsePtrOutput() CustomDomainPropertiesResponsePtrOutput {
	return o.ToCustomDomainPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o CustomDomainPropertiesResponseOutput) ToCustomDomainPropertiesResponsePtrOutputWithContext(ctx context.Context) CustomDomainPropertiesResponsePtrOutput {
	return o.ApplyT(func(v CustomDomainPropertiesResponse) *CustomDomainPropertiesResponse {
		return &v
	}).(CustomDomainPropertiesResponsePtrOutput)
}

// Provisioning state of Custom Https of the custom domain.
func (o CustomDomainPropertiesResponseOutput) CustomHttpsProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainPropertiesResponse) string { return v.CustomHttpsProvisioningState }).(pulumi.StringOutput)
}

// The host name of the custom domain. Must be a domain name.
func (o CustomDomainPropertiesResponseOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainPropertiesResponse) string { return v.HostName }).(pulumi.StringOutput)
}

// Provisioning status of the custom domain.
func (o CustomDomainPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource status of the custom domain.
func (o CustomDomainPropertiesResponseOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainPropertiesResponse) string { return v.ResourceState }).(pulumi.StringOutput)
}

// Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China.
func (o CustomDomainPropertiesResponseOutput) ValidationData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainPropertiesResponse) *string { return v.ValidationData }).(pulumi.StringPtrOutput)
}

type CustomDomainPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomDomainPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomainPropertiesResponse)(nil)).Elem()
}

func (o CustomDomainPropertiesResponsePtrOutput) ToCustomDomainPropertiesResponsePtrOutput() CustomDomainPropertiesResponsePtrOutput {
	return o
}

func (o CustomDomainPropertiesResponsePtrOutput) ToCustomDomainPropertiesResponsePtrOutputWithContext(ctx context.Context) CustomDomainPropertiesResponsePtrOutput {
	return o
}

func (o CustomDomainPropertiesResponsePtrOutput) Elem() CustomDomainPropertiesResponseOutput {
	return o.ApplyT(func(v *CustomDomainPropertiesResponse) CustomDomainPropertiesResponse { return *v }).(CustomDomainPropertiesResponseOutput)
}

// Provisioning state of Custom Https of the custom domain.
func (o CustomDomainPropertiesResponsePtrOutput) CustomHttpsProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CustomHttpsProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The host name of the custom domain. Must be a domain name.
func (o CustomDomainPropertiesResponsePtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.HostName
	}).(pulumi.StringPtrOutput)
}

// Provisioning status of the custom domain.
func (o CustomDomainPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Resource status of the custom domain.
func (o CustomDomainPropertiesResponsePtrOutput) ResourceState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceState
	}).(pulumi.StringPtrOutput)
}

// Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China.
func (o CustomDomainPropertiesResponsePtrOutput) ValidationData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ValidationData
	}).(pulumi.StringPtrOutput)
}

// Origin to be added when creating a CDN endpoint.
type DeepCreatedOrigin struct {
	// The address of the origin. It can be a domain names, IPv4 address, or IPv6 address.
	HostName string `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535
	HttpPort *int `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535
	HttpsPort *int `pulumi:"httpsPort"`
	// Origin name
	Name string `pulumi:"name"`
}

// DeepCreatedOriginInput is an input type that accepts DeepCreatedOriginArgs and DeepCreatedOriginOutput values.
// You can construct a concrete instance of `DeepCreatedOriginInput` via:
//
//          DeepCreatedOriginArgs{...}
type DeepCreatedOriginInput interface {
	pulumi.Input

	ToDeepCreatedOriginOutput() DeepCreatedOriginOutput
	ToDeepCreatedOriginOutputWithContext(context.Context) DeepCreatedOriginOutput
}

// Origin to be added when creating a CDN endpoint.
type DeepCreatedOriginArgs struct {
	// The address of the origin. It can be a domain names, IPv4 address, or IPv6 address.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535
	HttpPort pulumi.IntPtrInput `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535
	HttpsPort pulumi.IntPtrInput `pulumi:"httpsPort"`
	// Origin name
	Name pulumi.StringInput `pulumi:"name"`
}

func (DeepCreatedOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOrigin)(nil)).Elem()
}

func (i DeepCreatedOriginArgs) ToDeepCreatedOriginOutput() DeepCreatedOriginOutput {
	return i.ToDeepCreatedOriginOutputWithContext(context.Background())
}

func (i DeepCreatedOriginArgs) ToDeepCreatedOriginOutputWithContext(ctx context.Context) DeepCreatedOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginOutput)
}

// DeepCreatedOriginArrayInput is an input type that accepts DeepCreatedOriginArray and DeepCreatedOriginArrayOutput values.
// You can construct a concrete instance of `DeepCreatedOriginArrayInput` via:
//
//          DeepCreatedOriginArray{ DeepCreatedOriginArgs{...} }
type DeepCreatedOriginArrayInput interface {
	pulumi.Input

	ToDeepCreatedOriginArrayOutput() DeepCreatedOriginArrayOutput
	ToDeepCreatedOriginArrayOutputWithContext(context.Context) DeepCreatedOriginArrayOutput
}

type DeepCreatedOriginArray []DeepCreatedOriginInput

func (DeepCreatedOriginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOrigin)(nil)).Elem()
}

func (i DeepCreatedOriginArray) ToDeepCreatedOriginArrayOutput() DeepCreatedOriginArrayOutput {
	return i.ToDeepCreatedOriginArrayOutputWithContext(context.Background())
}

func (i DeepCreatedOriginArray) ToDeepCreatedOriginArrayOutputWithContext(ctx context.Context) DeepCreatedOriginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginArrayOutput)
}

// Origin to be added when creating a CDN endpoint.
type DeepCreatedOriginOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOrigin)(nil)).Elem()
}

func (o DeepCreatedOriginOutput) ToDeepCreatedOriginOutput() DeepCreatedOriginOutput {
	return o
}

func (o DeepCreatedOriginOutput) ToDeepCreatedOriginOutputWithContext(ctx context.Context) DeepCreatedOriginOutput {
	return o
}

// The address of the origin. It can be a domain names, IPv4 address, or IPv6 address.
func (o DeepCreatedOriginOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) string { return v.HostName }).(pulumi.StringOutput)
}

// The value of the HTTP port. Must be between 1 and 65535
func (o DeepCreatedOriginOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// The value of the HTTPS port. Must be between 1 and 65535
func (o DeepCreatedOriginOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Origin name
func (o DeepCreatedOriginOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) string { return v.Name }).(pulumi.StringOutput)
}

type DeepCreatedOriginArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOrigin)(nil)).Elem()
}

func (o DeepCreatedOriginArrayOutput) ToDeepCreatedOriginArrayOutput() DeepCreatedOriginArrayOutput {
	return o
}

func (o DeepCreatedOriginArrayOutput) ToDeepCreatedOriginArrayOutputWithContext(ctx context.Context) DeepCreatedOriginArrayOutput {
	return o
}

func (o DeepCreatedOriginArrayOutput) Index(i pulumi.IntInput) DeepCreatedOriginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedOrigin {
		return vs[0].([]DeepCreatedOrigin)[vs[1].(int)]
	}).(DeepCreatedOriginOutput)
}

// Properties of origin Properties of the origin created on the CDN endpoint.
type DeepCreatedOriginPropertiesResponse struct {
	// The address of the origin. It can be a domain names, IPv4 address, or IPv6 address.
	HostName string `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535
	HttpPort *int `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535
	HttpsPort *int `pulumi:"httpsPort"`
}

// DeepCreatedOriginPropertiesResponseInput is an input type that accepts DeepCreatedOriginPropertiesResponseArgs and DeepCreatedOriginPropertiesResponseOutput values.
// You can construct a concrete instance of `DeepCreatedOriginPropertiesResponseInput` via:
//
//          DeepCreatedOriginPropertiesResponseArgs{...}
type DeepCreatedOriginPropertiesResponseInput interface {
	pulumi.Input

	ToDeepCreatedOriginPropertiesResponseOutput() DeepCreatedOriginPropertiesResponseOutput
	ToDeepCreatedOriginPropertiesResponseOutputWithContext(context.Context) DeepCreatedOriginPropertiesResponseOutput
}

// Properties of origin Properties of the origin created on the CDN endpoint.
type DeepCreatedOriginPropertiesResponseArgs struct {
	// The address of the origin. It can be a domain names, IPv4 address, or IPv6 address.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535
	HttpPort pulumi.IntPtrInput `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535
	HttpsPort pulumi.IntPtrInput `pulumi:"httpsPort"`
}

func (DeepCreatedOriginPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginPropertiesResponse)(nil)).Elem()
}

func (i DeepCreatedOriginPropertiesResponseArgs) ToDeepCreatedOriginPropertiesResponseOutput() DeepCreatedOriginPropertiesResponseOutput {
	return i.ToDeepCreatedOriginPropertiesResponseOutputWithContext(context.Background())
}

func (i DeepCreatedOriginPropertiesResponseArgs) ToDeepCreatedOriginPropertiesResponseOutputWithContext(ctx context.Context) DeepCreatedOriginPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginPropertiesResponseOutput)
}

func (i DeepCreatedOriginPropertiesResponseArgs) ToDeepCreatedOriginPropertiesResponsePtrOutput() DeepCreatedOriginPropertiesResponsePtrOutput {
	return i.ToDeepCreatedOriginPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i DeepCreatedOriginPropertiesResponseArgs) ToDeepCreatedOriginPropertiesResponsePtrOutputWithContext(ctx context.Context) DeepCreatedOriginPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginPropertiesResponseOutput).ToDeepCreatedOriginPropertiesResponsePtrOutputWithContext(ctx)
}

// DeepCreatedOriginPropertiesResponsePtrInput is an input type that accepts DeepCreatedOriginPropertiesResponseArgs, DeepCreatedOriginPropertiesResponsePtr and DeepCreatedOriginPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `DeepCreatedOriginPropertiesResponsePtrInput` via:
//
//          DeepCreatedOriginPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type DeepCreatedOriginPropertiesResponsePtrInput interface {
	pulumi.Input

	ToDeepCreatedOriginPropertiesResponsePtrOutput() DeepCreatedOriginPropertiesResponsePtrOutput
	ToDeepCreatedOriginPropertiesResponsePtrOutputWithContext(context.Context) DeepCreatedOriginPropertiesResponsePtrOutput
}

type deepCreatedOriginPropertiesResponsePtrType DeepCreatedOriginPropertiesResponseArgs

func DeepCreatedOriginPropertiesResponsePtr(v *DeepCreatedOriginPropertiesResponseArgs) DeepCreatedOriginPropertiesResponsePtrInput {
	return (*deepCreatedOriginPropertiesResponsePtrType)(v)
}

func (*deepCreatedOriginPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeepCreatedOriginPropertiesResponse)(nil)).Elem()
}

func (i *deepCreatedOriginPropertiesResponsePtrType) ToDeepCreatedOriginPropertiesResponsePtrOutput() DeepCreatedOriginPropertiesResponsePtrOutput {
	return i.ToDeepCreatedOriginPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *deepCreatedOriginPropertiesResponsePtrType) ToDeepCreatedOriginPropertiesResponsePtrOutputWithContext(ctx context.Context) DeepCreatedOriginPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginPropertiesResponsePtrOutput)
}

// Properties of origin Properties of the origin created on the CDN endpoint.
type DeepCreatedOriginPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginPropertiesResponse)(nil)).Elem()
}

func (o DeepCreatedOriginPropertiesResponseOutput) ToDeepCreatedOriginPropertiesResponseOutput() DeepCreatedOriginPropertiesResponseOutput {
	return o
}

func (o DeepCreatedOriginPropertiesResponseOutput) ToDeepCreatedOriginPropertiesResponseOutputWithContext(ctx context.Context) DeepCreatedOriginPropertiesResponseOutput {
	return o
}

func (o DeepCreatedOriginPropertiesResponseOutput) ToDeepCreatedOriginPropertiesResponsePtrOutput() DeepCreatedOriginPropertiesResponsePtrOutput {
	return o.ToDeepCreatedOriginPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o DeepCreatedOriginPropertiesResponseOutput) ToDeepCreatedOriginPropertiesResponsePtrOutputWithContext(ctx context.Context) DeepCreatedOriginPropertiesResponsePtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginPropertiesResponse) *DeepCreatedOriginPropertiesResponse {
		return &v
	}).(DeepCreatedOriginPropertiesResponsePtrOutput)
}

// The address of the origin. It can be a domain names, IPv4 address, or IPv6 address.
func (o DeepCreatedOriginPropertiesResponseOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginPropertiesResponse) string { return v.HostName }).(pulumi.StringOutput)
}

// The value of the HTTP port. Must be between 1 and 65535
func (o DeepCreatedOriginPropertiesResponseOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginPropertiesResponse) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// The value of the HTTPS port. Must be between 1 and 65535
func (o DeepCreatedOriginPropertiesResponseOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginPropertiesResponse) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

type DeepCreatedOriginPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeepCreatedOriginPropertiesResponse)(nil)).Elem()
}

func (o DeepCreatedOriginPropertiesResponsePtrOutput) ToDeepCreatedOriginPropertiesResponsePtrOutput() DeepCreatedOriginPropertiesResponsePtrOutput {
	return o
}

func (o DeepCreatedOriginPropertiesResponsePtrOutput) ToDeepCreatedOriginPropertiesResponsePtrOutputWithContext(ctx context.Context) DeepCreatedOriginPropertiesResponsePtrOutput {
	return o
}

func (o DeepCreatedOriginPropertiesResponsePtrOutput) Elem() DeepCreatedOriginPropertiesResponseOutput {
	return o.ApplyT(func(v *DeepCreatedOriginPropertiesResponse) DeepCreatedOriginPropertiesResponse { return *v }).(DeepCreatedOriginPropertiesResponseOutput)
}

// The address of the origin. It can be a domain names, IPv4 address, or IPv6 address.
func (o DeepCreatedOriginPropertiesResponsePtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeepCreatedOriginPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.HostName
	}).(pulumi.StringPtrOutput)
}

// The value of the HTTP port. Must be between 1 and 65535
func (o DeepCreatedOriginPropertiesResponsePtrOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeepCreatedOriginPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.HttpPort
	}).(pulumi.IntPtrOutput)
}

// The value of the HTTPS port. Must be between 1 and 65535
func (o DeepCreatedOriginPropertiesResponsePtrOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeepCreatedOriginPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.HttpsPort
	}).(pulumi.IntPtrOutput)
}

// Origin to be added when creating a CDN endpoint.
type DeepCreatedOriginResponse struct {
	// Origin name
	Name string `pulumi:"name"`
	// Properties of origin Properties of the origin created on the CDN endpoint.
	Properties *DeepCreatedOriginPropertiesResponse `pulumi:"properties"`
}

// DeepCreatedOriginResponseInput is an input type that accepts DeepCreatedOriginResponseArgs and DeepCreatedOriginResponseOutput values.
// You can construct a concrete instance of `DeepCreatedOriginResponseInput` via:
//
//          DeepCreatedOriginResponseArgs{...}
type DeepCreatedOriginResponseInput interface {
	pulumi.Input

	ToDeepCreatedOriginResponseOutput() DeepCreatedOriginResponseOutput
	ToDeepCreatedOriginResponseOutputWithContext(context.Context) DeepCreatedOriginResponseOutput
}

// Origin to be added when creating a CDN endpoint.
type DeepCreatedOriginResponseArgs struct {
	// Origin name
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of origin Properties of the origin created on the CDN endpoint.
	Properties DeepCreatedOriginPropertiesResponsePtrInput `pulumi:"properties"`
}

func (DeepCreatedOriginResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginResponse)(nil)).Elem()
}

func (i DeepCreatedOriginResponseArgs) ToDeepCreatedOriginResponseOutput() DeepCreatedOriginResponseOutput {
	return i.ToDeepCreatedOriginResponseOutputWithContext(context.Background())
}

func (i DeepCreatedOriginResponseArgs) ToDeepCreatedOriginResponseOutputWithContext(ctx context.Context) DeepCreatedOriginResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginResponseOutput)
}

// DeepCreatedOriginResponseArrayInput is an input type that accepts DeepCreatedOriginResponseArray and DeepCreatedOriginResponseArrayOutput values.
// You can construct a concrete instance of `DeepCreatedOriginResponseArrayInput` via:
//
//          DeepCreatedOriginResponseArray{ DeepCreatedOriginResponseArgs{...} }
type DeepCreatedOriginResponseArrayInput interface {
	pulumi.Input

	ToDeepCreatedOriginResponseArrayOutput() DeepCreatedOriginResponseArrayOutput
	ToDeepCreatedOriginResponseArrayOutputWithContext(context.Context) DeepCreatedOriginResponseArrayOutput
}

type DeepCreatedOriginResponseArray []DeepCreatedOriginResponseInput

func (DeepCreatedOriginResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginResponse)(nil)).Elem()
}

func (i DeepCreatedOriginResponseArray) ToDeepCreatedOriginResponseArrayOutput() DeepCreatedOriginResponseArrayOutput {
	return i.ToDeepCreatedOriginResponseArrayOutputWithContext(context.Background())
}

func (i DeepCreatedOriginResponseArray) ToDeepCreatedOriginResponseArrayOutputWithContext(ctx context.Context) DeepCreatedOriginResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginResponseArrayOutput)
}

// Origin to be added when creating a CDN endpoint.
type DeepCreatedOriginResponseOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginResponse)(nil)).Elem()
}

func (o DeepCreatedOriginResponseOutput) ToDeepCreatedOriginResponseOutput() DeepCreatedOriginResponseOutput {
	return o
}

func (o DeepCreatedOriginResponseOutput) ToDeepCreatedOriginResponseOutputWithContext(ctx context.Context) DeepCreatedOriginResponseOutput {
	return o
}

// Origin name
func (o DeepCreatedOriginResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of origin Properties of the origin created on the CDN endpoint.
func (o DeepCreatedOriginResponseOutput) Properties() DeepCreatedOriginPropertiesResponsePtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *DeepCreatedOriginPropertiesResponse { return v.Properties }).(DeepCreatedOriginPropertiesResponsePtrOutput)
}

type DeepCreatedOriginResponseArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginResponse)(nil)).Elem()
}

func (o DeepCreatedOriginResponseArrayOutput) ToDeepCreatedOriginResponseArrayOutput() DeepCreatedOriginResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginResponseArrayOutput) ToDeepCreatedOriginResponseArrayOutputWithContext(ctx context.Context) DeepCreatedOriginResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginResponseArrayOutput) Index(i pulumi.IntInput) DeepCreatedOriginResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedOriginResponse {
		return vs[0].([]DeepCreatedOriginResponse)[vs[1].(int)]
	}).(DeepCreatedOriginResponseOutput)
}

// CDN endpoint is the entity within a CDN profile containing configuration information such as origin, protocol, content caching and delivery behavior. The CDN endpoint uses the URL format <endpointname>.azureedge.net.
type EndpointType struct {
	// Resource location.
	Location string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The JSON object that contains the properties required to create an endpoint.
	Properties EndpointPropertiesResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// EndpointTypeInput is an input type that accepts EndpointTypeArgs and EndpointTypeOutput values.
// You can construct a concrete instance of `EndpointTypeInput` via:
//
//          EndpointTypeArgs{...}
type EndpointTypeInput interface {
	pulumi.Input

	ToEndpointTypeOutput() EndpointTypeOutput
	ToEndpointTypeOutputWithContext(context.Context) EndpointTypeOutput
}

// CDN endpoint is the entity within a CDN profile containing configuration information such as origin, protocol, content caching and delivery behavior. The CDN endpoint uses the URL format <endpointname>.azureedge.net.
type EndpointTypeArgs struct {
	// Resource location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The JSON object that contains the properties required to create an endpoint.
	Properties EndpointPropertiesResponseInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (EndpointTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointType)(nil)).Elem()
}

func (i EndpointTypeArgs) ToEndpointTypeOutput() EndpointTypeOutput {
	return i.ToEndpointTypeOutputWithContext(context.Background())
}

func (i EndpointTypeArgs) ToEndpointTypeOutputWithContext(ctx context.Context) EndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointTypeOutput)
}

// CDN endpoint is the entity within a CDN profile containing configuration information such as origin, protocol, content caching and delivery behavior. The CDN endpoint uses the URL format <endpointname>.azureedge.net.
type EndpointTypeOutput struct{ *pulumi.OutputState }

func (EndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointType)(nil)).Elem()
}

func (o EndpointTypeOutput) ToEndpointTypeOutput() EndpointTypeOutput {
	return o
}

func (o EndpointTypeOutput) ToEndpointTypeOutputWithContext(ctx context.Context) EndpointTypeOutput {
	return o
}

// Resource location.
func (o EndpointTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name.
func (o EndpointTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointType) string { return v.Name }).(pulumi.StringOutput)
}

// The JSON object that contains the properties required to create an endpoint.
func (o EndpointTypeOutput) Properties() EndpointPropertiesResponseOutput {
	return o.ApplyT(func(v EndpointType) EndpointPropertiesResponse { return v.Properties }).(EndpointPropertiesResponseOutput)
}

// Resource tags.
func (o EndpointTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v EndpointType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o EndpointTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointType) string { return v.Type }).(pulumi.StringOutput)
}

// The JSON object that contains the properties required to create an endpoint.
type EndpointPropertiesResponse struct {
	// List of content types on which compression applies. The value should be a valid MIME type.
	ContentTypesToCompress []string `pulumi:"contentTypesToCompress"`
	// List of rules defining user geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/
	GeoFilters []GeoFilterResponse `pulumi:"geoFilters"`
	// The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
	HostName string `pulumi:"hostName"`
	// Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB.
	IsCompressionEnabled *bool `pulumi:"isCompressionEnabled"`
	// Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
	IsHttpAllowed *bool `pulumi:"isHttpAllowed"`
	// Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
	IsHttpsAllowed *bool `pulumi:"isHttpsAllowed"`
	// Customer can specify what scenario they want this CDN endpoint to optimize, e.g. Download, Media services. With this information we can apply scenario driven optimization.
	OptimizationType *string `pulumi:"optimizationType"`
	// The host header CDN sends along with content requests to origin. The default value is the host name of the origin.
	OriginHostHeader *string `pulumi:"originHostHeader"`
	// The path used when CDN sends request to origin.
	OriginPath *string `pulumi:"originPath"`
	// The source of the content being delivered via CDN.
	Origins []DeepCreatedOriginResponse `pulumi:"origins"`
	// Provisioning status of the endpoint.
	ProvisioningState string `pulumi:"provisioningState"`
	// Defines the query string caching behavior
	QueryStringCachingBehavior *string `pulumi:"queryStringCachingBehavior"`
	// Resource status of the endpoint.
	ResourceState string `pulumi:"resourceState"`
}

// EndpointPropertiesResponseInput is an input type that accepts EndpointPropertiesResponseArgs and EndpointPropertiesResponseOutput values.
// You can construct a concrete instance of `EndpointPropertiesResponseInput` via:
//
//          EndpointPropertiesResponseArgs{...}
type EndpointPropertiesResponseInput interface {
	pulumi.Input

	ToEndpointPropertiesResponseOutput() EndpointPropertiesResponseOutput
	ToEndpointPropertiesResponseOutputWithContext(context.Context) EndpointPropertiesResponseOutput
}

// The JSON object that contains the properties required to create an endpoint.
type EndpointPropertiesResponseArgs struct {
	// List of content types on which compression applies. The value should be a valid MIME type.
	ContentTypesToCompress pulumi.StringArrayInput `pulumi:"contentTypesToCompress"`
	// List of rules defining user geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/
	GeoFilters GeoFilterResponseArrayInput `pulumi:"geoFilters"`
	// The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
	HostName pulumi.StringInput `pulumi:"hostName"`
	// Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB.
	IsCompressionEnabled pulumi.BoolPtrInput `pulumi:"isCompressionEnabled"`
	// Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
	IsHttpAllowed pulumi.BoolPtrInput `pulumi:"isHttpAllowed"`
	// Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
	IsHttpsAllowed pulumi.BoolPtrInput `pulumi:"isHttpsAllowed"`
	// Customer can specify what scenario they want this CDN endpoint to optimize, e.g. Download, Media services. With this information we can apply scenario driven optimization.
	OptimizationType pulumi.StringPtrInput `pulumi:"optimizationType"`
	// The host header CDN sends along with content requests to origin. The default value is the host name of the origin.
	OriginHostHeader pulumi.StringPtrInput `pulumi:"originHostHeader"`
	// The path used when CDN sends request to origin.
	OriginPath pulumi.StringPtrInput `pulumi:"originPath"`
	// The source of the content being delivered via CDN.
	Origins DeepCreatedOriginResponseArrayInput `pulumi:"origins"`
	// Provisioning status of the endpoint.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Defines the query string caching behavior
	QueryStringCachingBehavior pulumi.StringPtrInput `pulumi:"queryStringCachingBehavior"`
	// Resource status of the endpoint.
	ResourceState pulumi.StringInput `pulumi:"resourceState"`
}

func (EndpointPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesResponse)(nil)).Elem()
}

func (i EndpointPropertiesResponseArgs) ToEndpointPropertiesResponseOutput() EndpointPropertiesResponseOutput {
	return i.ToEndpointPropertiesResponseOutputWithContext(context.Background())
}

func (i EndpointPropertiesResponseArgs) ToEndpointPropertiesResponseOutputWithContext(ctx context.Context) EndpointPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesResponseOutput)
}

func (i EndpointPropertiesResponseArgs) ToEndpointPropertiesResponsePtrOutput() EndpointPropertiesResponsePtrOutput {
	return i.ToEndpointPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i EndpointPropertiesResponseArgs) ToEndpointPropertiesResponsePtrOutputWithContext(ctx context.Context) EndpointPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesResponseOutput).ToEndpointPropertiesResponsePtrOutputWithContext(ctx)
}

// EndpointPropertiesResponsePtrInput is an input type that accepts EndpointPropertiesResponseArgs, EndpointPropertiesResponsePtr and EndpointPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `EndpointPropertiesResponsePtrInput` via:
//
//          EndpointPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type EndpointPropertiesResponsePtrInput interface {
	pulumi.Input

	ToEndpointPropertiesResponsePtrOutput() EndpointPropertiesResponsePtrOutput
	ToEndpointPropertiesResponsePtrOutputWithContext(context.Context) EndpointPropertiesResponsePtrOutput
}

type endpointPropertiesResponsePtrType EndpointPropertiesResponseArgs

func EndpointPropertiesResponsePtr(v *EndpointPropertiesResponseArgs) EndpointPropertiesResponsePtrInput {
	return (*endpointPropertiesResponsePtrType)(v)
}

func (*endpointPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesResponse)(nil)).Elem()
}

func (i *endpointPropertiesResponsePtrType) ToEndpointPropertiesResponsePtrOutput() EndpointPropertiesResponsePtrOutput {
	return i.ToEndpointPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *endpointPropertiesResponsePtrType) ToEndpointPropertiesResponsePtrOutputWithContext(ctx context.Context) EndpointPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesResponsePtrOutput)
}

// The JSON object that contains the properties required to create an endpoint.
type EndpointPropertiesResponseOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesResponse)(nil)).Elem()
}

func (o EndpointPropertiesResponseOutput) ToEndpointPropertiesResponseOutput() EndpointPropertiesResponseOutput {
	return o
}

func (o EndpointPropertiesResponseOutput) ToEndpointPropertiesResponseOutputWithContext(ctx context.Context) EndpointPropertiesResponseOutput {
	return o
}

func (o EndpointPropertiesResponseOutput) ToEndpointPropertiesResponsePtrOutput() EndpointPropertiesResponsePtrOutput {
	return o.ToEndpointPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o EndpointPropertiesResponseOutput) ToEndpointPropertiesResponsePtrOutputWithContext(ctx context.Context) EndpointPropertiesResponsePtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) *EndpointPropertiesResponse {
		return &v
	}).(EndpointPropertiesResponsePtrOutput)
}

// List of content types on which compression applies. The value should be a valid MIME type.
func (o EndpointPropertiesResponseOutput) ContentTypesToCompress() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) []string { return v.ContentTypesToCompress }).(pulumi.StringArrayOutput)
}

// List of rules defining user geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/
func (o EndpointPropertiesResponseOutput) GeoFilters() GeoFilterResponseArrayOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) []GeoFilterResponse { return v.GeoFilters }).(GeoFilterResponseArrayOutput)
}

// The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
func (o EndpointPropertiesResponseOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) string { return v.HostName }).(pulumi.StringOutput)
}

// Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB.
func (o EndpointPropertiesResponseOutput) IsCompressionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) *bool { return v.IsCompressionEnabled }).(pulumi.BoolPtrOutput)
}

// Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
func (o EndpointPropertiesResponseOutput) IsHttpAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) *bool { return v.IsHttpAllowed }).(pulumi.BoolPtrOutput)
}

// Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
func (o EndpointPropertiesResponseOutput) IsHttpsAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) *bool { return v.IsHttpsAllowed }).(pulumi.BoolPtrOutput)
}

// Customer can specify what scenario they want this CDN endpoint to optimize, e.g. Download, Media services. With this information we can apply scenario driven optimization.
func (o EndpointPropertiesResponseOutput) OptimizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) *string { return v.OptimizationType }).(pulumi.StringPtrOutput)
}

// The host header CDN sends along with content requests to origin. The default value is the host name of the origin.
func (o EndpointPropertiesResponseOutput) OriginHostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) *string { return v.OriginHostHeader }).(pulumi.StringPtrOutput)
}

// The path used when CDN sends request to origin.
func (o EndpointPropertiesResponseOutput) OriginPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) *string { return v.OriginPath }).(pulumi.StringPtrOutput)
}

// The source of the content being delivered via CDN.
func (o EndpointPropertiesResponseOutput) Origins() DeepCreatedOriginResponseArrayOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) []DeepCreatedOriginResponse { return v.Origins }).(DeepCreatedOriginResponseArrayOutput)
}

// Provisioning status of the endpoint.
func (o EndpointPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Defines the query string caching behavior
func (o EndpointPropertiesResponseOutput) QueryStringCachingBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) *string { return v.QueryStringCachingBehavior }).(pulumi.StringPtrOutput)
}

// Resource status of the endpoint.
func (o EndpointPropertiesResponseOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) string { return v.ResourceState }).(pulumi.StringOutput)
}

type EndpointPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesResponse)(nil)).Elem()
}

func (o EndpointPropertiesResponsePtrOutput) ToEndpointPropertiesResponsePtrOutput() EndpointPropertiesResponsePtrOutput {
	return o
}

func (o EndpointPropertiesResponsePtrOutput) ToEndpointPropertiesResponsePtrOutputWithContext(ctx context.Context) EndpointPropertiesResponsePtrOutput {
	return o
}

func (o EndpointPropertiesResponsePtrOutput) Elem() EndpointPropertiesResponseOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) EndpointPropertiesResponse { return *v }).(EndpointPropertiesResponseOutput)
}

// List of content types on which compression applies. The value should be a valid MIME type.
func (o EndpointPropertiesResponsePtrOutput) ContentTypesToCompress() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.ContentTypesToCompress
	}).(pulumi.StringArrayOutput)
}

// List of rules defining user geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/
func (o EndpointPropertiesResponsePtrOutput) GeoFilters() GeoFilterResponseArrayOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) []GeoFilterResponse {
		if v == nil {
			return nil
		}
		return v.GeoFilters
	}).(GeoFilterResponseArrayOutput)
}

// The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
func (o EndpointPropertiesResponsePtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.HostName
	}).(pulumi.StringPtrOutput)
}

// Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB.
func (o EndpointPropertiesResponsePtrOutput) IsCompressionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsCompressionEnabled
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
func (o EndpointPropertiesResponsePtrOutput) IsHttpAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsHttpAllowed
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
func (o EndpointPropertiesResponsePtrOutput) IsHttpsAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsHttpsAllowed
	}).(pulumi.BoolPtrOutput)
}

// Customer can specify what scenario they want this CDN endpoint to optimize, e.g. Download, Media services. With this information we can apply scenario driven optimization.
func (o EndpointPropertiesResponsePtrOutput) OptimizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.OptimizationType
	}).(pulumi.StringPtrOutput)
}

// The host header CDN sends along with content requests to origin. The default value is the host name of the origin.
func (o EndpointPropertiesResponsePtrOutput) OriginHostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.OriginHostHeader
	}).(pulumi.StringPtrOutput)
}

// The path used when CDN sends request to origin.
func (o EndpointPropertiesResponsePtrOutput) OriginPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.OriginPath
	}).(pulumi.StringPtrOutput)
}

// The source of the content being delivered via CDN.
func (o EndpointPropertiesResponsePtrOutput) Origins() DeepCreatedOriginResponseArrayOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) []DeepCreatedOriginResponse {
		if v == nil {
			return nil
		}
		return v.Origins
	}).(DeepCreatedOriginResponseArrayOutput)
}

// Provisioning status of the endpoint.
func (o EndpointPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Defines the query string caching behavior
func (o EndpointPropertiesResponsePtrOutput) QueryStringCachingBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.QueryStringCachingBehavior
	}).(pulumi.StringPtrOutput)
}

// Resource status of the endpoint.
func (o EndpointPropertiesResponsePtrOutput) ResourceState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceState
	}).(pulumi.StringPtrOutput)
}

// Rules defining user geo access within a CDN endpoint.
type GeoFilter struct {
	// Action of the geo filter, i.e. allow or block access.
	Action string `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes []string `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath string `pulumi:"relativePath"`
}

// GeoFilterInput is an input type that accepts GeoFilterArgs and GeoFilterOutput values.
// You can construct a concrete instance of `GeoFilterInput` via:
//
//          GeoFilterArgs{...}
type GeoFilterInput interface {
	pulumi.Input

	ToGeoFilterOutput() GeoFilterOutput
	ToGeoFilterOutputWithContext(context.Context) GeoFilterOutput
}

// Rules defining user geo access within a CDN endpoint.
type GeoFilterArgs struct {
	// Action of the geo filter, i.e. allow or block access.
	Action pulumi.StringInput `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes pulumi.StringArrayInput `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath pulumi.StringInput `pulumi:"relativePath"`
}

func (GeoFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilter)(nil)).Elem()
}

func (i GeoFilterArgs) ToGeoFilterOutput() GeoFilterOutput {
	return i.ToGeoFilterOutputWithContext(context.Background())
}

func (i GeoFilterArgs) ToGeoFilterOutputWithContext(ctx context.Context) GeoFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoFilterOutput)
}

// GeoFilterArrayInput is an input type that accepts GeoFilterArray and GeoFilterArrayOutput values.
// You can construct a concrete instance of `GeoFilterArrayInput` via:
//
//          GeoFilterArray{ GeoFilterArgs{...} }
type GeoFilterArrayInput interface {
	pulumi.Input

	ToGeoFilterArrayOutput() GeoFilterArrayOutput
	ToGeoFilterArrayOutputWithContext(context.Context) GeoFilterArrayOutput
}

type GeoFilterArray []GeoFilterInput

func (GeoFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilter)(nil)).Elem()
}

func (i GeoFilterArray) ToGeoFilterArrayOutput() GeoFilterArrayOutput {
	return i.ToGeoFilterArrayOutputWithContext(context.Background())
}

func (i GeoFilterArray) ToGeoFilterArrayOutputWithContext(ctx context.Context) GeoFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoFilterArrayOutput)
}

// Rules defining user geo access within a CDN endpoint.
type GeoFilterOutput struct{ *pulumi.OutputState }

func (GeoFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilter)(nil)).Elem()
}

func (o GeoFilterOutput) ToGeoFilterOutput() GeoFilterOutput {
	return o
}

func (o GeoFilterOutput) ToGeoFilterOutputWithContext(ctx context.Context) GeoFilterOutput {
	return o
}

// Action of the geo filter, i.e. allow or block access.
func (o GeoFilterOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilter) string { return v.Action }).(pulumi.StringOutput)
}

// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
func (o GeoFilterOutput) CountryCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GeoFilter) []string { return v.CountryCodes }).(pulumi.StringArrayOutput)
}

// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
func (o GeoFilterOutput) RelativePath() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilter) string { return v.RelativePath }).(pulumi.StringOutput)
}

type GeoFilterArrayOutput struct{ *pulumi.OutputState }

func (GeoFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilter)(nil)).Elem()
}

func (o GeoFilterArrayOutput) ToGeoFilterArrayOutput() GeoFilterArrayOutput {
	return o
}

func (o GeoFilterArrayOutput) ToGeoFilterArrayOutputWithContext(ctx context.Context) GeoFilterArrayOutput {
	return o
}

func (o GeoFilterArrayOutput) Index(i pulumi.IntInput) GeoFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GeoFilter {
		return vs[0].([]GeoFilter)[vs[1].(int)]
	}).(GeoFilterOutput)
}

// Rules defining user geo access within a CDN endpoint.
type GeoFilterResponse struct {
	// Action of the geo filter, i.e. allow or block access.
	Action string `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes []string `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath string `pulumi:"relativePath"`
}

// GeoFilterResponseInput is an input type that accepts GeoFilterResponseArgs and GeoFilterResponseOutput values.
// You can construct a concrete instance of `GeoFilterResponseInput` via:
//
//          GeoFilterResponseArgs{...}
type GeoFilterResponseInput interface {
	pulumi.Input

	ToGeoFilterResponseOutput() GeoFilterResponseOutput
	ToGeoFilterResponseOutputWithContext(context.Context) GeoFilterResponseOutput
}

// Rules defining user geo access within a CDN endpoint.
type GeoFilterResponseArgs struct {
	// Action of the geo filter, i.e. allow or block access.
	Action pulumi.StringInput `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes pulumi.StringArrayInput `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath pulumi.StringInput `pulumi:"relativePath"`
}

func (GeoFilterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilterResponse)(nil)).Elem()
}

func (i GeoFilterResponseArgs) ToGeoFilterResponseOutput() GeoFilterResponseOutput {
	return i.ToGeoFilterResponseOutputWithContext(context.Background())
}

func (i GeoFilterResponseArgs) ToGeoFilterResponseOutputWithContext(ctx context.Context) GeoFilterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoFilterResponseOutput)
}

// GeoFilterResponseArrayInput is an input type that accepts GeoFilterResponseArray and GeoFilterResponseArrayOutput values.
// You can construct a concrete instance of `GeoFilterResponseArrayInput` via:
//
//          GeoFilterResponseArray{ GeoFilterResponseArgs{...} }
type GeoFilterResponseArrayInput interface {
	pulumi.Input

	ToGeoFilterResponseArrayOutput() GeoFilterResponseArrayOutput
	ToGeoFilterResponseArrayOutputWithContext(context.Context) GeoFilterResponseArrayOutput
}

type GeoFilterResponseArray []GeoFilterResponseInput

func (GeoFilterResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilterResponse)(nil)).Elem()
}

func (i GeoFilterResponseArray) ToGeoFilterResponseArrayOutput() GeoFilterResponseArrayOutput {
	return i.ToGeoFilterResponseArrayOutputWithContext(context.Background())
}

func (i GeoFilterResponseArray) ToGeoFilterResponseArrayOutputWithContext(ctx context.Context) GeoFilterResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoFilterResponseArrayOutput)
}

// Rules defining user geo access within a CDN endpoint.
type GeoFilterResponseOutput struct{ *pulumi.OutputState }

func (GeoFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilterResponse)(nil)).Elem()
}

func (o GeoFilterResponseOutput) ToGeoFilterResponseOutput() GeoFilterResponseOutput {
	return o
}

func (o GeoFilterResponseOutput) ToGeoFilterResponseOutputWithContext(ctx context.Context) GeoFilterResponseOutput {
	return o
}

// Action of the geo filter, i.e. allow or block access.
func (o GeoFilterResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilterResponse) string { return v.Action }).(pulumi.StringOutput)
}

// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
func (o GeoFilterResponseOutput) CountryCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GeoFilterResponse) []string { return v.CountryCodes }).(pulumi.StringArrayOutput)
}

// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
func (o GeoFilterResponseOutput) RelativePath() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilterResponse) string { return v.RelativePath }).(pulumi.StringOutput)
}

type GeoFilterResponseArrayOutput struct{ *pulumi.OutputState }

func (GeoFilterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilterResponse)(nil)).Elem()
}

func (o GeoFilterResponseArrayOutput) ToGeoFilterResponseArrayOutput() GeoFilterResponseArrayOutput {
	return o
}

func (o GeoFilterResponseArrayOutput) ToGeoFilterResponseArrayOutputWithContext(ctx context.Context) GeoFilterResponseArrayOutput {
	return o
}

func (o GeoFilterResponseArrayOutput) Index(i pulumi.IntInput) GeoFilterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GeoFilterResponse {
		return vs[0].([]GeoFilterResponse)[vs[1].(int)]
	}).(GeoFilterResponseOutput)
}

// CDN profile represents the top level resource and the entry point into the CDN API. This allows users to set up a logical grouping of endpoints in addition to creating shared configuration settings and selecting pricing tiers and providers.
type ProfileType struct {
	// Resource location.
	Location string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The JSON object that contains the properties required to create a profile.
	Properties ProfilePropertiesResponse `pulumi:"properties"`
	// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
	Sku SkuResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// ProfileTypeInput is an input type that accepts ProfileTypeArgs and ProfileTypeOutput values.
// You can construct a concrete instance of `ProfileTypeInput` via:
//
//          ProfileTypeArgs{...}
type ProfileTypeInput interface {
	pulumi.Input

	ToProfileTypeOutput() ProfileTypeOutput
	ToProfileTypeOutputWithContext(context.Context) ProfileTypeOutput
}

// CDN profile represents the top level resource and the entry point into the CDN API. This allows users to set up a logical grouping of endpoints in addition to creating shared configuration settings and selecting pricing tiers and providers.
type ProfileTypeArgs struct {
	// Resource location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The JSON object that contains the properties required to create a profile.
	Properties ProfilePropertiesResponseInput `pulumi:"properties"`
	// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
	Sku SkuResponseInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ProfileTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileType)(nil)).Elem()
}

func (i ProfileTypeArgs) ToProfileTypeOutput() ProfileTypeOutput {
	return i.ToProfileTypeOutputWithContext(context.Background())
}

func (i ProfileTypeArgs) ToProfileTypeOutputWithContext(ctx context.Context) ProfileTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileTypeOutput)
}

// CDN profile represents the top level resource and the entry point into the CDN API. This allows users to set up a logical grouping of endpoints in addition to creating shared configuration settings and selecting pricing tiers and providers.
type ProfileTypeOutput struct{ *pulumi.OutputState }

func (ProfileTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileType)(nil)).Elem()
}

func (o ProfileTypeOutput) ToProfileTypeOutput() ProfileTypeOutput {
	return o
}

func (o ProfileTypeOutput) ToProfileTypeOutputWithContext(ctx context.Context) ProfileTypeOutput {
	return o
}

// Resource location.
func (o ProfileTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ProfileType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name.
func (o ProfileTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProfileType) string { return v.Name }).(pulumi.StringOutput)
}

// The JSON object that contains the properties required to create a profile.
func (o ProfileTypeOutput) Properties() ProfilePropertiesResponseOutput {
	return o.ApplyT(func(v ProfileType) ProfilePropertiesResponse { return v.Properties }).(ProfilePropertiesResponseOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
func (o ProfileTypeOutput) Sku() SkuResponseOutput {
	return o.ApplyT(func(v ProfileType) SkuResponse { return v.Sku }).(SkuResponseOutput)
}

// Resource tags.
func (o ProfileTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProfileType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o ProfileTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProfileType) string { return v.Type }).(pulumi.StringOutput)
}

// The JSON object that contains the properties required to create a profile.
type ProfilePropertiesResponse struct {
	// Provisioning status of the profile.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource status of the profile.
	ResourceState string `pulumi:"resourceState"`
}

// ProfilePropertiesResponseInput is an input type that accepts ProfilePropertiesResponseArgs and ProfilePropertiesResponseOutput values.
// You can construct a concrete instance of `ProfilePropertiesResponseInput` via:
//
//          ProfilePropertiesResponseArgs{...}
type ProfilePropertiesResponseInput interface {
	pulumi.Input

	ToProfilePropertiesResponseOutput() ProfilePropertiesResponseOutput
	ToProfilePropertiesResponseOutputWithContext(context.Context) ProfilePropertiesResponseOutput
}

// The JSON object that contains the properties required to create a profile.
type ProfilePropertiesResponseArgs struct {
	// Provisioning status of the profile.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Resource status of the profile.
	ResourceState pulumi.StringInput `pulumi:"resourceState"`
}

func (ProfilePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfilePropertiesResponse)(nil)).Elem()
}

func (i ProfilePropertiesResponseArgs) ToProfilePropertiesResponseOutput() ProfilePropertiesResponseOutput {
	return i.ToProfilePropertiesResponseOutputWithContext(context.Background())
}

func (i ProfilePropertiesResponseArgs) ToProfilePropertiesResponseOutputWithContext(ctx context.Context) ProfilePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfilePropertiesResponseOutput)
}

func (i ProfilePropertiesResponseArgs) ToProfilePropertiesResponsePtrOutput() ProfilePropertiesResponsePtrOutput {
	return i.ToProfilePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ProfilePropertiesResponseArgs) ToProfilePropertiesResponsePtrOutputWithContext(ctx context.Context) ProfilePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfilePropertiesResponseOutput).ToProfilePropertiesResponsePtrOutputWithContext(ctx)
}

// ProfilePropertiesResponsePtrInput is an input type that accepts ProfilePropertiesResponseArgs, ProfilePropertiesResponsePtr and ProfilePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ProfilePropertiesResponsePtrInput` via:
//
//          ProfilePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ProfilePropertiesResponsePtrInput interface {
	pulumi.Input

	ToProfilePropertiesResponsePtrOutput() ProfilePropertiesResponsePtrOutput
	ToProfilePropertiesResponsePtrOutputWithContext(context.Context) ProfilePropertiesResponsePtrOutput
}

type profilePropertiesResponsePtrType ProfilePropertiesResponseArgs

func ProfilePropertiesResponsePtr(v *ProfilePropertiesResponseArgs) ProfilePropertiesResponsePtrInput {
	return (*profilePropertiesResponsePtrType)(v)
}

func (*profilePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfilePropertiesResponse)(nil)).Elem()
}

func (i *profilePropertiesResponsePtrType) ToProfilePropertiesResponsePtrOutput() ProfilePropertiesResponsePtrOutput {
	return i.ToProfilePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *profilePropertiesResponsePtrType) ToProfilePropertiesResponsePtrOutputWithContext(ctx context.Context) ProfilePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfilePropertiesResponsePtrOutput)
}

// The JSON object that contains the properties required to create a profile.
type ProfilePropertiesResponseOutput struct{ *pulumi.OutputState }

func (ProfilePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfilePropertiesResponse)(nil)).Elem()
}

func (o ProfilePropertiesResponseOutput) ToProfilePropertiesResponseOutput() ProfilePropertiesResponseOutput {
	return o
}

func (o ProfilePropertiesResponseOutput) ToProfilePropertiesResponseOutputWithContext(ctx context.Context) ProfilePropertiesResponseOutput {
	return o
}

func (o ProfilePropertiesResponseOutput) ToProfilePropertiesResponsePtrOutput() ProfilePropertiesResponsePtrOutput {
	return o.ToProfilePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ProfilePropertiesResponseOutput) ToProfilePropertiesResponsePtrOutputWithContext(ctx context.Context) ProfilePropertiesResponsePtrOutput {
	return o.ApplyT(func(v ProfilePropertiesResponse) *ProfilePropertiesResponse {
		return &v
	}).(ProfilePropertiesResponsePtrOutput)
}

// Provisioning status of the profile.
func (o ProfilePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ProfilePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource status of the profile.
func (o ProfilePropertiesResponseOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v ProfilePropertiesResponse) string { return v.ResourceState }).(pulumi.StringOutput)
}

type ProfilePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ProfilePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfilePropertiesResponse)(nil)).Elem()
}

func (o ProfilePropertiesResponsePtrOutput) ToProfilePropertiesResponsePtrOutput() ProfilePropertiesResponsePtrOutput {
	return o
}

func (o ProfilePropertiesResponsePtrOutput) ToProfilePropertiesResponsePtrOutputWithContext(ctx context.Context) ProfilePropertiesResponsePtrOutput {
	return o
}

func (o ProfilePropertiesResponsePtrOutput) Elem() ProfilePropertiesResponseOutput {
	return o.ApplyT(func(v *ProfilePropertiesResponse) ProfilePropertiesResponse { return *v }).(ProfilePropertiesResponseOutput)
}

// Provisioning status of the profile.
func (o ProfilePropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Resource status of the profile.
func (o ProfilePropertiesResponsePtrOutput) ResourceState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceState
	}).(pulumi.StringPtrOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type Sku struct {
	// Name of the pricing tier.
	Name *string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuArgs struct {
	// Name of the pricing tier.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// Name of the pricing tier.
func (o SkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// Name of the pricing tier.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuResponse struct {
	// Name of the pricing tier.
	Name *string `pulumi:"name"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuResponseArgs struct {
	// Name of the pricing tier.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// Name of the pricing tier.
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// Name of the pricing tier.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(CustomDomainTypeOutput{})
	pulumi.RegisterOutputType(CustomDomainPropertiesResponseOutput{})
	pulumi.RegisterOutputType(CustomDomainPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginArrayOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginResponseOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginResponseArrayOutput{})
	pulumi.RegisterOutputType(EndpointTypeOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesResponseOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(GeoFilterOutput{})
	pulumi.RegisterOutputType(GeoFilterArrayOutput{})
	pulumi.RegisterOutputType(GeoFilterResponseOutput{})
	pulumi.RegisterOutputType(GeoFilterResponseArrayOutput{})
	pulumi.RegisterOutputType(ProfileTypeOutput{})
	pulumi.RegisterOutputType(ProfilePropertiesResponseOutput{})
	pulumi.RegisterOutputType(ProfilePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
}
