// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Defines web application firewall policy for Azure CDN.
type CdnWebApplicationFirewallPolicy struct {
	pulumi.CustomResourceState

	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringOutput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Properties of the web application firewall policy.
	Properties CdnWebApplicationFirewallPolicyPropertiesResponseOutput `pulumi:"properties"`
	// The pricing tier (defines a CDN provider, feature list and rate) of the CdnWebApplicationFirewallPolicy.
	Sku SkuResponseOutput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewCdnWebApplicationFirewallPolicy registers a new resource with the given unique name, arguments, and options.
func NewCdnWebApplicationFirewallPolicy(ctx *pulumi.Context,
	name string, args *CdnWebApplicationFirewallPolicyArgs, opts ...pulumi.ResourceOption) (*CdnWebApplicationFirewallPolicy, error) {
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.Sku == nil {
		return nil, errors.New("missing required argument 'Sku'")
	}
	if args == nil {
		args = &CdnWebApplicationFirewallPolicyArgs{}
	}
	var resource CdnWebApplicationFirewallPolicy
	err := ctx.RegisterResource("azurerm:cdn:CdnWebApplicationFirewallPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCdnWebApplicationFirewallPolicy gets an existing CdnWebApplicationFirewallPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCdnWebApplicationFirewallPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CdnWebApplicationFirewallPolicyState, opts ...pulumi.ResourceOption) (*CdnWebApplicationFirewallPolicy, error) {
	var resource CdnWebApplicationFirewallPolicy
	err := ctx.ReadResource("azurerm:cdn:CdnWebApplicationFirewallPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CdnWebApplicationFirewallPolicy resources.
type cdnWebApplicationFirewallPolicyState struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name *string `pulumi:"name"`
	// Properties of the web application firewall policy.
	Properties *CdnWebApplicationFirewallPolicyPropertiesResponse `pulumi:"properties"`
	// The pricing tier (defines a CDN provider, feature list and rate) of the CdnWebApplicationFirewallPolicy.
	Sku *SkuResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type CdnWebApplicationFirewallPolicyState struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput
	// Resource location.
	Location pulumi.StringPtrInput
	// Resource name.
	Name pulumi.StringPtrInput
	// Properties of the web application firewall policy.
	Properties CdnWebApplicationFirewallPolicyPropertiesResponsePtrInput
	// The pricing tier (defines a CDN provider, feature list and rate) of the CdnWebApplicationFirewallPolicy.
	Sku SkuResponsePtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (CdnWebApplicationFirewallPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*cdnWebApplicationFirewallPolicyState)(nil)).Elem()
}

type cdnWebApplicationFirewallPolicyArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource location.
	Location string `pulumi:"location"`
	// The name of the CdnWebApplicationFirewallPolicy.
	Name string `pulumi:"name"`
	// Properties of the web application firewall policy.
	Properties *CdnWebApplicationFirewallPolicyProperties `pulumi:"properties"`
	// Name of the Resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The pricing tier (defines a CDN provider, feature list and rate) of the CdnWebApplicationFirewallPolicy.
	Sku Sku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a CdnWebApplicationFirewallPolicy resource.
type CdnWebApplicationFirewallPolicyArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput
	// Resource location.
	Location pulumi.StringInput
	// The name of the CdnWebApplicationFirewallPolicy.
	Name pulumi.StringInput
	// Properties of the web application firewall policy.
	Properties CdnWebApplicationFirewallPolicyPropertiesPtrInput
	// Name of the Resource group within the Azure subscription.
	ResourceGroupName pulumi.StringInput
	// The pricing tier (defines a CDN provider, feature list and rate) of the CdnWebApplicationFirewallPolicy.
	Sku SkuInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (CdnWebApplicationFirewallPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cdnWebApplicationFirewallPolicyArgs)(nil)).Elem()
}
