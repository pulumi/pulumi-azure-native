// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// CDN endpoint is the entity within a CDN profile containing configuration information such as origin, protocol, content caching and delivery behavior. The CDN endpoint uses the URL format <endpointname>.azureedge.net.
type ProfileEndpoint struct {
	pulumi.CustomResourceState

	// Resource location.
	Location pulumi.StringOutput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The JSON object that contains the properties required to create an endpoint.
	Properties EndpointPropertiesResponseOutput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewProfileEndpoint registers a new resource with the given unique name, arguments, and options.
func NewProfileEndpoint(ctx *pulumi.Context,
	name string, args *ProfileEndpointArgs, opts ...pulumi.ResourceOption) (*ProfileEndpoint, error) {
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ProfileName == nil {
		return nil, errors.New("missing required argument 'ProfileName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &ProfileEndpointArgs{}
	}
	var resource ProfileEndpoint
	err := ctx.RegisterResource("azurerm:cdn:ProfileEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProfileEndpoint gets an existing ProfileEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProfileEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProfileEndpointState, opts ...pulumi.ResourceOption) (*ProfileEndpoint, error) {
	var resource ProfileEndpoint
	err := ctx.ReadResource("azurerm:cdn:ProfileEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProfileEndpoint resources.
type profileEndpointState struct {
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name *string `pulumi:"name"`
	// The JSON object that contains the properties required to create an endpoint.
	Properties *EndpointPropertiesResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type ProfileEndpointState struct {
	// Resource location.
	Location pulumi.StringPtrInput
	// Resource name.
	Name pulumi.StringPtrInput
	// The JSON object that contains the properties required to create an endpoint.
	Properties EndpointPropertiesResponsePtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (ProfileEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*profileEndpointState)(nil)).Elem()
}

type profileEndpointArgs struct {
	// Resource location.
	Location string `pulumi:"location"`
	// Name of the endpoint under the profile which is unique globally.
	Name string `pulumi:"name"`
	// Name of the CDN profile which is unique within the resource group.
	ProfileName string `pulumi:"profileName"`
	// The JSON object that contains the properties required to create an endpoint.
	Properties *EndpointProperties `pulumi:"properties"`
	// Name of the Resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ProfileEndpoint resource.
type ProfileEndpointArgs struct {
	// Resource location.
	Location pulumi.StringInput
	// Name of the endpoint under the profile which is unique globally.
	Name pulumi.StringInput
	// Name of the CDN profile which is unique within the resource group.
	ProfileName pulumi.StringInput
	// The JSON object that contains the properties required to create an endpoint.
	Properties EndpointPropertiesPtrInput
	// Name of the Resource group within the Azure subscription.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (ProfileEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*profileEndpointArgs)(nil)).Elem()
}
