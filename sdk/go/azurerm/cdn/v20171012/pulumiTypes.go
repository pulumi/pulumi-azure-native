// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20171012

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The JSON object that contains the properties of the custom domain to create.
type CustomDomainPropertiesResponse struct {
	// Provisioning status of Custom Https of the custom domain.
	CustomHttpsProvisioningState string `pulumi:"customHttpsProvisioningState"`
	// Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.
	CustomHttpsProvisioningSubstate string `pulumi:"customHttpsProvisioningSubstate"`
	// The host name of the custom domain. Must be a domain name.
	HostName string `pulumi:"hostName"`
	// Provisioning status of the custom domain.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource status of the custom domain.
	ResourceState string `pulumi:"resourceState"`
	// Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China.
	ValidationData *string `pulumi:"validationData"`
}

// CustomDomainPropertiesResponseInput is an input type that accepts CustomDomainPropertiesResponseArgs and CustomDomainPropertiesResponseOutput values.
// You can construct a concrete instance of `CustomDomainPropertiesResponseInput` via:
//
//          CustomDomainPropertiesResponseArgs{...}
type CustomDomainPropertiesResponseInput interface {
	pulumi.Input

	ToCustomDomainPropertiesResponseOutput() CustomDomainPropertiesResponseOutput
	ToCustomDomainPropertiesResponseOutputWithContext(context.Context) CustomDomainPropertiesResponseOutput
}

// The JSON object that contains the properties of the custom domain to create.
type CustomDomainPropertiesResponseArgs struct {
	// Provisioning status of Custom Https of the custom domain.
	CustomHttpsProvisioningState pulumi.StringInput `pulumi:"customHttpsProvisioningState"`
	// Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.
	CustomHttpsProvisioningSubstate pulumi.StringInput `pulumi:"customHttpsProvisioningSubstate"`
	// The host name of the custom domain. Must be a domain name.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// Provisioning status of the custom domain.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Resource status of the custom domain.
	ResourceState pulumi.StringInput `pulumi:"resourceState"`
	// Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China.
	ValidationData pulumi.StringPtrInput `pulumi:"validationData"`
}

func (CustomDomainPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainPropertiesResponse)(nil)).Elem()
}

func (i CustomDomainPropertiesResponseArgs) ToCustomDomainPropertiesResponseOutput() CustomDomainPropertiesResponseOutput {
	return i.ToCustomDomainPropertiesResponseOutputWithContext(context.Background())
}

func (i CustomDomainPropertiesResponseArgs) ToCustomDomainPropertiesResponseOutputWithContext(ctx context.Context) CustomDomainPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainPropertiesResponseOutput)
}

func (i CustomDomainPropertiesResponseArgs) ToCustomDomainPropertiesResponsePtrOutput() CustomDomainPropertiesResponsePtrOutput {
	return i.ToCustomDomainPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i CustomDomainPropertiesResponseArgs) ToCustomDomainPropertiesResponsePtrOutputWithContext(ctx context.Context) CustomDomainPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainPropertiesResponseOutput).ToCustomDomainPropertiesResponsePtrOutputWithContext(ctx)
}

// CustomDomainPropertiesResponsePtrInput is an input type that accepts CustomDomainPropertiesResponseArgs, CustomDomainPropertiesResponsePtr and CustomDomainPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `CustomDomainPropertiesResponsePtrInput` via:
//
//          CustomDomainPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type CustomDomainPropertiesResponsePtrInput interface {
	pulumi.Input

	ToCustomDomainPropertiesResponsePtrOutput() CustomDomainPropertiesResponsePtrOutput
	ToCustomDomainPropertiesResponsePtrOutputWithContext(context.Context) CustomDomainPropertiesResponsePtrOutput
}

type customDomainPropertiesResponsePtrType CustomDomainPropertiesResponseArgs

func CustomDomainPropertiesResponsePtr(v *CustomDomainPropertiesResponseArgs) CustomDomainPropertiesResponsePtrInput {
	return (*customDomainPropertiesResponsePtrType)(v)
}

func (*customDomainPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomainPropertiesResponse)(nil)).Elem()
}

func (i *customDomainPropertiesResponsePtrType) ToCustomDomainPropertiesResponsePtrOutput() CustomDomainPropertiesResponsePtrOutput {
	return i.ToCustomDomainPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *customDomainPropertiesResponsePtrType) ToCustomDomainPropertiesResponsePtrOutputWithContext(ctx context.Context) CustomDomainPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainPropertiesResponsePtrOutput)
}

// The JSON object that contains the properties of the custom domain to create.
type CustomDomainPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CustomDomainPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainPropertiesResponse)(nil)).Elem()
}

func (o CustomDomainPropertiesResponseOutput) ToCustomDomainPropertiesResponseOutput() CustomDomainPropertiesResponseOutput {
	return o
}

func (o CustomDomainPropertiesResponseOutput) ToCustomDomainPropertiesResponseOutputWithContext(ctx context.Context) CustomDomainPropertiesResponseOutput {
	return o
}

func (o CustomDomainPropertiesResponseOutput) ToCustomDomainPropertiesResponsePtrOutput() CustomDomainPropertiesResponsePtrOutput {
	return o.ToCustomDomainPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o CustomDomainPropertiesResponseOutput) ToCustomDomainPropertiesResponsePtrOutputWithContext(ctx context.Context) CustomDomainPropertiesResponsePtrOutput {
	return o.ApplyT(func(v CustomDomainPropertiesResponse) *CustomDomainPropertiesResponse {
		return &v
	}).(CustomDomainPropertiesResponsePtrOutput)
}

// Provisioning status of Custom Https of the custom domain.
func (o CustomDomainPropertiesResponseOutput) CustomHttpsProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainPropertiesResponse) string { return v.CustomHttpsProvisioningState }).(pulumi.StringOutput)
}

// Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.
func (o CustomDomainPropertiesResponseOutput) CustomHttpsProvisioningSubstate() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainPropertiesResponse) string { return v.CustomHttpsProvisioningSubstate }).(pulumi.StringOutput)
}

// The host name of the custom domain. Must be a domain name.
func (o CustomDomainPropertiesResponseOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainPropertiesResponse) string { return v.HostName }).(pulumi.StringOutput)
}

// Provisioning status of the custom domain.
func (o CustomDomainPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource status of the custom domain.
func (o CustomDomainPropertiesResponseOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainPropertiesResponse) string { return v.ResourceState }).(pulumi.StringOutput)
}

// Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China.
func (o CustomDomainPropertiesResponseOutput) ValidationData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainPropertiesResponse) *string { return v.ValidationData }).(pulumi.StringPtrOutput)
}

type CustomDomainPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomDomainPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomainPropertiesResponse)(nil)).Elem()
}

func (o CustomDomainPropertiesResponsePtrOutput) ToCustomDomainPropertiesResponsePtrOutput() CustomDomainPropertiesResponsePtrOutput {
	return o
}

func (o CustomDomainPropertiesResponsePtrOutput) ToCustomDomainPropertiesResponsePtrOutputWithContext(ctx context.Context) CustomDomainPropertiesResponsePtrOutput {
	return o
}

func (o CustomDomainPropertiesResponsePtrOutput) Elem() CustomDomainPropertiesResponseOutput {
	return o.ApplyT(func(v *CustomDomainPropertiesResponse) CustomDomainPropertiesResponse { return *v }).(CustomDomainPropertiesResponseOutput)
}

// Provisioning status of Custom Https of the custom domain.
func (o CustomDomainPropertiesResponsePtrOutput) CustomHttpsProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CustomHttpsProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.
func (o CustomDomainPropertiesResponsePtrOutput) CustomHttpsProvisioningSubstate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CustomHttpsProvisioningSubstate
	}).(pulumi.StringPtrOutput)
}

// The host name of the custom domain. Must be a domain name.
func (o CustomDomainPropertiesResponsePtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.HostName
	}).(pulumi.StringPtrOutput)
}

// Provisioning status of the custom domain.
func (o CustomDomainPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Resource status of the custom domain.
func (o CustomDomainPropertiesResponsePtrOutput) ResourceState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceState
	}).(pulumi.StringPtrOutput)
}

// Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China.
func (o CustomDomainPropertiesResponsePtrOutput) ValidationData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDomainPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ValidationData
	}).(pulumi.StringPtrOutput)
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOrigin struct {
	// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address.
	HostName string `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535
	HttpPort *int `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535
	HttpsPort *int `pulumi:"httpsPort"`
	// Origin name
	Name string `pulumi:"name"`
}

// DeepCreatedOriginInput is an input type that accepts DeepCreatedOriginArgs and DeepCreatedOriginOutput values.
// You can construct a concrete instance of `DeepCreatedOriginInput` via:
//
//          DeepCreatedOriginArgs{...}
type DeepCreatedOriginInput interface {
	pulumi.Input

	ToDeepCreatedOriginOutput() DeepCreatedOriginOutput
	ToDeepCreatedOriginOutputWithContext(context.Context) DeepCreatedOriginOutput
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginArgs struct {
	// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535
	HttpPort pulumi.IntPtrInput `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535
	HttpsPort pulumi.IntPtrInput `pulumi:"httpsPort"`
	// Origin name
	Name pulumi.StringInput `pulumi:"name"`
}

func (DeepCreatedOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOrigin)(nil)).Elem()
}

func (i DeepCreatedOriginArgs) ToDeepCreatedOriginOutput() DeepCreatedOriginOutput {
	return i.ToDeepCreatedOriginOutputWithContext(context.Background())
}

func (i DeepCreatedOriginArgs) ToDeepCreatedOriginOutputWithContext(ctx context.Context) DeepCreatedOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginOutput)
}

// DeepCreatedOriginArrayInput is an input type that accepts DeepCreatedOriginArray and DeepCreatedOriginArrayOutput values.
// You can construct a concrete instance of `DeepCreatedOriginArrayInput` via:
//
//          DeepCreatedOriginArray{ DeepCreatedOriginArgs{...} }
type DeepCreatedOriginArrayInput interface {
	pulumi.Input

	ToDeepCreatedOriginArrayOutput() DeepCreatedOriginArrayOutput
	ToDeepCreatedOriginArrayOutputWithContext(context.Context) DeepCreatedOriginArrayOutput
}

type DeepCreatedOriginArray []DeepCreatedOriginInput

func (DeepCreatedOriginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOrigin)(nil)).Elem()
}

func (i DeepCreatedOriginArray) ToDeepCreatedOriginArrayOutput() DeepCreatedOriginArrayOutput {
	return i.ToDeepCreatedOriginArrayOutputWithContext(context.Background())
}

func (i DeepCreatedOriginArray) ToDeepCreatedOriginArrayOutputWithContext(ctx context.Context) DeepCreatedOriginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginArrayOutput)
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOrigin)(nil)).Elem()
}

func (o DeepCreatedOriginOutput) ToDeepCreatedOriginOutput() DeepCreatedOriginOutput {
	return o
}

func (o DeepCreatedOriginOutput) ToDeepCreatedOriginOutputWithContext(ctx context.Context) DeepCreatedOriginOutput {
	return o
}

// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address.
func (o DeepCreatedOriginOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) string { return v.HostName }).(pulumi.StringOutput)
}

// The value of the HTTP port. Must be between 1 and 65535
func (o DeepCreatedOriginOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// The value of the HTTPS port. Must be between 1 and 65535
func (o DeepCreatedOriginOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Origin name
func (o DeepCreatedOriginOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOrigin) string { return v.Name }).(pulumi.StringOutput)
}

type DeepCreatedOriginArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOrigin)(nil)).Elem()
}

func (o DeepCreatedOriginArrayOutput) ToDeepCreatedOriginArrayOutput() DeepCreatedOriginArrayOutput {
	return o
}

func (o DeepCreatedOriginArrayOutput) ToDeepCreatedOriginArrayOutputWithContext(ctx context.Context) DeepCreatedOriginArrayOutput {
	return o
}

func (o DeepCreatedOriginArrayOutput) Index(i pulumi.IntInput) DeepCreatedOriginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedOrigin {
		return vs[0].([]DeepCreatedOrigin)[vs[1].(int)]
	}).(DeepCreatedOriginOutput)
}

// Properties of the origin created on the CDN endpoint.
type DeepCreatedOriginPropertiesResponse struct {
	// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address.
	HostName string `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535
	HttpPort *int `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535
	HttpsPort *int `pulumi:"httpsPort"`
}

// DeepCreatedOriginPropertiesResponseInput is an input type that accepts DeepCreatedOriginPropertiesResponseArgs and DeepCreatedOriginPropertiesResponseOutput values.
// You can construct a concrete instance of `DeepCreatedOriginPropertiesResponseInput` via:
//
//          DeepCreatedOriginPropertiesResponseArgs{...}
type DeepCreatedOriginPropertiesResponseInput interface {
	pulumi.Input

	ToDeepCreatedOriginPropertiesResponseOutput() DeepCreatedOriginPropertiesResponseOutput
	ToDeepCreatedOriginPropertiesResponseOutputWithContext(context.Context) DeepCreatedOriginPropertiesResponseOutput
}

// Properties of the origin created on the CDN endpoint.
type DeepCreatedOriginPropertiesResponseArgs struct {
	// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The value of the HTTP port. Must be between 1 and 65535
	HttpPort pulumi.IntPtrInput `pulumi:"httpPort"`
	// The value of the HTTPS port. Must be between 1 and 65535
	HttpsPort pulumi.IntPtrInput `pulumi:"httpsPort"`
}

func (DeepCreatedOriginPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginPropertiesResponse)(nil)).Elem()
}

func (i DeepCreatedOriginPropertiesResponseArgs) ToDeepCreatedOriginPropertiesResponseOutput() DeepCreatedOriginPropertiesResponseOutput {
	return i.ToDeepCreatedOriginPropertiesResponseOutputWithContext(context.Background())
}

func (i DeepCreatedOriginPropertiesResponseArgs) ToDeepCreatedOriginPropertiesResponseOutputWithContext(ctx context.Context) DeepCreatedOriginPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginPropertiesResponseOutput)
}

func (i DeepCreatedOriginPropertiesResponseArgs) ToDeepCreatedOriginPropertiesResponsePtrOutput() DeepCreatedOriginPropertiesResponsePtrOutput {
	return i.ToDeepCreatedOriginPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i DeepCreatedOriginPropertiesResponseArgs) ToDeepCreatedOriginPropertiesResponsePtrOutputWithContext(ctx context.Context) DeepCreatedOriginPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginPropertiesResponseOutput).ToDeepCreatedOriginPropertiesResponsePtrOutputWithContext(ctx)
}

// DeepCreatedOriginPropertiesResponsePtrInput is an input type that accepts DeepCreatedOriginPropertiesResponseArgs, DeepCreatedOriginPropertiesResponsePtr and DeepCreatedOriginPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `DeepCreatedOriginPropertiesResponsePtrInput` via:
//
//          DeepCreatedOriginPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type DeepCreatedOriginPropertiesResponsePtrInput interface {
	pulumi.Input

	ToDeepCreatedOriginPropertiesResponsePtrOutput() DeepCreatedOriginPropertiesResponsePtrOutput
	ToDeepCreatedOriginPropertiesResponsePtrOutputWithContext(context.Context) DeepCreatedOriginPropertiesResponsePtrOutput
}

type deepCreatedOriginPropertiesResponsePtrType DeepCreatedOriginPropertiesResponseArgs

func DeepCreatedOriginPropertiesResponsePtr(v *DeepCreatedOriginPropertiesResponseArgs) DeepCreatedOriginPropertiesResponsePtrInput {
	return (*deepCreatedOriginPropertiesResponsePtrType)(v)
}

func (*deepCreatedOriginPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeepCreatedOriginPropertiesResponse)(nil)).Elem()
}

func (i *deepCreatedOriginPropertiesResponsePtrType) ToDeepCreatedOriginPropertiesResponsePtrOutput() DeepCreatedOriginPropertiesResponsePtrOutput {
	return i.ToDeepCreatedOriginPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *deepCreatedOriginPropertiesResponsePtrType) ToDeepCreatedOriginPropertiesResponsePtrOutputWithContext(ctx context.Context) DeepCreatedOriginPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginPropertiesResponsePtrOutput)
}

// Properties of the origin created on the CDN endpoint.
type DeepCreatedOriginPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginPropertiesResponse)(nil)).Elem()
}

func (o DeepCreatedOriginPropertiesResponseOutput) ToDeepCreatedOriginPropertiesResponseOutput() DeepCreatedOriginPropertiesResponseOutput {
	return o
}

func (o DeepCreatedOriginPropertiesResponseOutput) ToDeepCreatedOriginPropertiesResponseOutputWithContext(ctx context.Context) DeepCreatedOriginPropertiesResponseOutput {
	return o
}

func (o DeepCreatedOriginPropertiesResponseOutput) ToDeepCreatedOriginPropertiesResponsePtrOutput() DeepCreatedOriginPropertiesResponsePtrOutput {
	return o.ToDeepCreatedOriginPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o DeepCreatedOriginPropertiesResponseOutput) ToDeepCreatedOriginPropertiesResponsePtrOutputWithContext(ctx context.Context) DeepCreatedOriginPropertiesResponsePtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginPropertiesResponse) *DeepCreatedOriginPropertiesResponse {
		return &v
	}).(DeepCreatedOriginPropertiesResponsePtrOutput)
}

// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address.
func (o DeepCreatedOriginPropertiesResponseOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginPropertiesResponse) string { return v.HostName }).(pulumi.StringOutput)
}

// The value of the HTTP port. Must be between 1 and 65535
func (o DeepCreatedOriginPropertiesResponseOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginPropertiesResponse) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// The value of the HTTPS port. Must be between 1 and 65535
func (o DeepCreatedOriginPropertiesResponseOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginPropertiesResponse) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

type DeepCreatedOriginPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeepCreatedOriginPropertiesResponse)(nil)).Elem()
}

func (o DeepCreatedOriginPropertiesResponsePtrOutput) ToDeepCreatedOriginPropertiesResponsePtrOutput() DeepCreatedOriginPropertiesResponsePtrOutput {
	return o
}

func (o DeepCreatedOriginPropertiesResponsePtrOutput) ToDeepCreatedOriginPropertiesResponsePtrOutputWithContext(ctx context.Context) DeepCreatedOriginPropertiesResponsePtrOutput {
	return o
}

func (o DeepCreatedOriginPropertiesResponsePtrOutput) Elem() DeepCreatedOriginPropertiesResponseOutput {
	return o.ApplyT(func(v *DeepCreatedOriginPropertiesResponse) DeepCreatedOriginPropertiesResponse { return *v }).(DeepCreatedOriginPropertiesResponseOutput)
}

// The address of the origin. It can be a domain name, IPv4 address, or IPv6 address.
func (o DeepCreatedOriginPropertiesResponsePtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeepCreatedOriginPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.HostName
	}).(pulumi.StringPtrOutput)
}

// The value of the HTTP port. Must be between 1 and 65535
func (o DeepCreatedOriginPropertiesResponsePtrOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeepCreatedOriginPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.HttpPort
	}).(pulumi.IntPtrOutput)
}

// The value of the HTTPS port. Must be between 1 and 65535
func (o DeepCreatedOriginPropertiesResponsePtrOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeepCreatedOriginPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.HttpsPort
	}).(pulumi.IntPtrOutput)
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginResponse struct {
	// Origin name
	Name string `pulumi:"name"`
	// Properties of the origin created on the CDN endpoint.
	Properties *DeepCreatedOriginPropertiesResponse `pulumi:"properties"`
}

// DeepCreatedOriginResponseInput is an input type that accepts DeepCreatedOriginResponseArgs and DeepCreatedOriginResponseOutput values.
// You can construct a concrete instance of `DeepCreatedOriginResponseInput` via:
//
//          DeepCreatedOriginResponseArgs{...}
type DeepCreatedOriginResponseInput interface {
	pulumi.Input

	ToDeepCreatedOriginResponseOutput() DeepCreatedOriginResponseOutput
	ToDeepCreatedOriginResponseOutputWithContext(context.Context) DeepCreatedOriginResponseOutput
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginResponseArgs struct {
	// Origin name
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the origin created on the CDN endpoint.
	Properties DeepCreatedOriginPropertiesResponsePtrInput `pulumi:"properties"`
}

func (DeepCreatedOriginResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginResponse)(nil)).Elem()
}

func (i DeepCreatedOriginResponseArgs) ToDeepCreatedOriginResponseOutput() DeepCreatedOriginResponseOutput {
	return i.ToDeepCreatedOriginResponseOutputWithContext(context.Background())
}

func (i DeepCreatedOriginResponseArgs) ToDeepCreatedOriginResponseOutputWithContext(ctx context.Context) DeepCreatedOriginResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginResponseOutput)
}

// DeepCreatedOriginResponseArrayInput is an input type that accepts DeepCreatedOriginResponseArray and DeepCreatedOriginResponseArrayOutput values.
// You can construct a concrete instance of `DeepCreatedOriginResponseArrayInput` via:
//
//          DeepCreatedOriginResponseArray{ DeepCreatedOriginResponseArgs{...} }
type DeepCreatedOriginResponseArrayInput interface {
	pulumi.Input

	ToDeepCreatedOriginResponseArrayOutput() DeepCreatedOriginResponseArrayOutput
	ToDeepCreatedOriginResponseArrayOutputWithContext(context.Context) DeepCreatedOriginResponseArrayOutput
}

type DeepCreatedOriginResponseArray []DeepCreatedOriginResponseInput

func (DeepCreatedOriginResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginResponse)(nil)).Elem()
}

func (i DeepCreatedOriginResponseArray) ToDeepCreatedOriginResponseArrayOutput() DeepCreatedOriginResponseArrayOutput {
	return i.ToDeepCreatedOriginResponseArrayOutputWithContext(context.Background())
}

func (i DeepCreatedOriginResponseArray) ToDeepCreatedOriginResponseArrayOutputWithContext(ctx context.Context) DeepCreatedOriginResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeepCreatedOriginResponseArrayOutput)
}

// The main origin of CDN content which is added when creating a CDN endpoint.
type DeepCreatedOriginResponseOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeepCreatedOriginResponse)(nil)).Elem()
}

func (o DeepCreatedOriginResponseOutput) ToDeepCreatedOriginResponseOutput() DeepCreatedOriginResponseOutput {
	return o
}

func (o DeepCreatedOriginResponseOutput) ToDeepCreatedOriginResponseOutputWithContext(ctx context.Context) DeepCreatedOriginResponseOutput {
	return o
}

// Origin name
func (o DeepCreatedOriginResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the origin created on the CDN endpoint.
func (o DeepCreatedOriginResponseOutput) Properties() DeepCreatedOriginPropertiesResponsePtrOutput {
	return o.ApplyT(func(v DeepCreatedOriginResponse) *DeepCreatedOriginPropertiesResponse { return v.Properties }).(DeepCreatedOriginPropertiesResponsePtrOutput)
}

type DeepCreatedOriginResponseArrayOutput struct{ *pulumi.OutputState }

func (DeepCreatedOriginResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeepCreatedOriginResponse)(nil)).Elem()
}

func (o DeepCreatedOriginResponseArrayOutput) ToDeepCreatedOriginResponseArrayOutput() DeepCreatedOriginResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginResponseArrayOutput) ToDeepCreatedOriginResponseArrayOutputWithContext(ctx context.Context) DeepCreatedOriginResponseArrayOutput {
	return o
}

func (o DeepCreatedOriginResponseArrayOutput) Index(i pulumi.IntInput) DeepCreatedOriginResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeepCreatedOriginResponse {
		return vs[0].([]DeepCreatedOriginResponse)[vs[1].(int)]
	}).(DeepCreatedOriginResponseOutput)
}

// A rule that specifies a set of actions and conditions
type DeliveryRule struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions []DeliveryRuleAction `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions []DeliveryRuleCondition `pulumi:"conditions"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order int `pulumi:"order"`
}

// DeliveryRuleInput is an input type that accepts DeliveryRuleArgs and DeliveryRuleOutput values.
// You can construct a concrete instance of `DeliveryRuleInput` via:
//
//          DeliveryRuleArgs{...}
type DeliveryRuleInput interface {
	pulumi.Input

	ToDeliveryRuleOutput() DeliveryRuleOutput
	ToDeliveryRuleOutputWithContext(context.Context) DeliveryRuleOutput
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleArgs struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions DeliveryRuleActionArrayInput `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions DeliveryRuleConditionArrayInput `pulumi:"conditions"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order pulumi.IntInput `pulumi:"order"`
}

func (DeliveryRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRule)(nil)).Elem()
}

func (i DeliveryRuleArgs) ToDeliveryRuleOutput() DeliveryRuleOutput {
	return i.ToDeliveryRuleOutputWithContext(context.Background())
}

func (i DeliveryRuleArgs) ToDeliveryRuleOutputWithContext(ctx context.Context) DeliveryRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleOutput)
}

// DeliveryRuleArrayInput is an input type that accepts DeliveryRuleArray and DeliveryRuleArrayOutput values.
// You can construct a concrete instance of `DeliveryRuleArrayInput` via:
//
//          DeliveryRuleArray{ DeliveryRuleArgs{...} }
type DeliveryRuleArrayInput interface {
	pulumi.Input

	ToDeliveryRuleArrayOutput() DeliveryRuleArrayOutput
	ToDeliveryRuleArrayOutputWithContext(context.Context) DeliveryRuleArrayOutput
}

type DeliveryRuleArray []DeliveryRuleInput

func (DeliveryRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRule)(nil)).Elem()
}

func (i DeliveryRuleArray) ToDeliveryRuleArrayOutput() DeliveryRuleArrayOutput {
	return i.ToDeliveryRuleArrayOutputWithContext(context.Background())
}

func (i DeliveryRuleArray) ToDeliveryRuleArrayOutputWithContext(ctx context.Context) DeliveryRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleArrayOutput)
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleOutput struct{ *pulumi.OutputState }

func (DeliveryRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRule)(nil)).Elem()
}

func (o DeliveryRuleOutput) ToDeliveryRuleOutput() DeliveryRuleOutput {
	return o
}

func (o DeliveryRuleOutput) ToDeliveryRuleOutputWithContext(ctx context.Context) DeliveryRuleOutput {
	return o
}

// A list of actions that are executed when all the conditions of a rule are satisfied.
func (o DeliveryRuleOutput) Actions() DeliveryRuleActionArrayOutput {
	return o.ApplyT(func(v DeliveryRule) []DeliveryRuleAction { return v.Actions }).(DeliveryRuleActionArrayOutput)
}

// A list of conditions that must be matched for the actions to be executed
func (o DeliveryRuleOutput) Conditions() DeliveryRuleConditionArrayOutput {
	return o.ApplyT(func(v DeliveryRule) []DeliveryRuleCondition { return v.Conditions }).(DeliveryRuleConditionArrayOutput)
}

// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
func (o DeliveryRuleOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v DeliveryRule) int { return v.Order }).(pulumi.IntOutput)
}

type DeliveryRuleArrayOutput struct{ *pulumi.OutputState }

func (DeliveryRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRule)(nil)).Elem()
}

func (o DeliveryRuleArrayOutput) ToDeliveryRuleArrayOutput() DeliveryRuleArrayOutput {
	return o
}

func (o DeliveryRuleArrayOutput) ToDeliveryRuleArrayOutputWithContext(ctx context.Context) DeliveryRuleArrayOutput {
	return o
}

func (o DeliveryRuleArrayOutput) Index(i pulumi.IntInput) DeliveryRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryRule {
		return vs[0].([]DeliveryRule)[vs[1].(int)]
	}).(DeliveryRuleOutput)
}

// An action for the delivery rule.
type DeliveryRuleAction struct {
	// The name of the action for the delivery rule.
	Name string `pulumi:"name"`
}

// DeliveryRuleActionInput is an input type that accepts DeliveryRuleActionArgs and DeliveryRuleActionOutput values.
// You can construct a concrete instance of `DeliveryRuleActionInput` via:
//
//          DeliveryRuleActionArgs{...}
type DeliveryRuleActionInput interface {
	pulumi.Input

	ToDeliveryRuleActionOutput() DeliveryRuleActionOutput
	ToDeliveryRuleActionOutputWithContext(context.Context) DeliveryRuleActionOutput
}

// An action for the delivery rule.
type DeliveryRuleActionArgs struct {
	// The name of the action for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
}

func (DeliveryRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleAction)(nil)).Elem()
}

func (i DeliveryRuleActionArgs) ToDeliveryRuleActionOutput() DeliveryRuleActionOutput {
	return i.ToDeliveryRuleActionOutputWithContext(context.Background())
}

func (i DeliveryRuleActionArgs) ToDeliveryRuleActionOutputWithContext(ctx context.Context) DeliveryRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleActionOutput)
}

// DeliveryRuleActionArrayInput is an input type that accepts DeliveryRuleActionArray and DeliveryRuleActionArrayOutput values.
// You can construct a concrete instance of `DeliveryRuleActionArrayInput` via:
//
//          DeliveryRuleActionArray{ DeliveryRuleActionArgs{...} }
type DeliveryRuleActionArrayInput interface {
	pulumi.Input

	ToDeliveryRuleActionArrayOutput() DeliveryRuleActionArrayOutput
	ToDeliveryRuleActionArrayOutputWithContext(context.Context) DeliveryRuleActionArrayOutput
}

type DeliveryRuleActionArray []DeliveryRuleActionInput

func (DeliveryRuleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRuleAction)(nil)).Elem()
}

func (i DeliveryRuleActionArray) ToDeliveryRuleActionArrayOutput() DeliveryRuleActionArrayOutput {
	return i.ToDeliveryRuleActionArrayOutputWithContext(context.Background())
}

func (i DeliveryRuleActionArray) ToDeliveryRuleActionArrayOutputWithContext(ctx context.Context) DeliveryRuleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleActionArrayOutput)
}

// An action for the delivery rule.
type DeliveryRuleActionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleAction)(nil)).Elem()
}

func (o DeliveryRuleActionOutput) ToDeliveryRuleActionOutput() DeliveryRuleActionOutput {
	return o
}

func (o DeliveryRuleActionOutput) ToDeliveryRuleActionOutputWithContext(ctx context.Context) DeliveryRuleActionOutput {
	return o
}

// The name of the action for the delivery rule.
func (o DeliveryRuleActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleAction) string { return v.Name }).(pulumi.StringOutput)
}

type DeliveryRuleActionArrayOutput struct{ *pulumi.OutputState }

func (DeliveryRuleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRuleAction)(nil)).Elem()
}

func (o DeliveryRuleActionArrayOutput) ToDeliveryRuleActionArrayOutput() DeliveryRuleActionArrayOutput {
	return o
}

func (o DeliveryRuleActionArrayOutput) ToDeliveryRuleActionArrayOutputWithContext(ctx context.Context) DeliveryRuleActionArrayOutput {
	return o
}

func (o DeliveryRuleActionArrayOutput) Index(i pulumi.IntInput) DeliveryRuleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryRuleAction {
		return vs[0].([]DeliveryRuleAction)[vs[1].(int)]
	}).(DeliveryRuleActionOutput)
}

// An action for the delivery rule.
type DeliveryRuleActionResponse struct {
	// The name of the action for the delivery rule.
	Name string `pulumi:"name"`
}

// DeliveryRuleActionResponseInput is an input type that accepts DeliveryRuleActionResponseArgs and DeliveryRuleActionResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleActionResponseInput` via:
//
//          DeliveryRuleActionResponseArgs{...}
type DeliveryRuleActionResponseInput interface {
	pulumi.Input

	ToDeliveryRuleActionResponseOutput() DeliveryRuleActionResponseOutput
	ToDeliveryRuleActionResponseOutputWithContext(context.Context) DeliveryRuleActionResponseOutput
}

// An action for the delivery rule.
type DeliveryRuleActionResponseArgs struct {
	// The name of the action for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
}

func (DeliveryRuleActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleActionResponse)(nil)).Elem()
}

func (i DeliveryRuleActionResponseArgs) ToDeliveryRuleActionResponseOutput() DeliveryRuleActionResponseOutput {
	return i.ToDeliveryRuleActionResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleActionResponseArgs) ToDeliveryRuleActionResponseOutputWithContext(ctx context.Context) DeliveryRuleActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleActionResponseOutput)
}

// DeliveryRuleActionResponseArrayInput is an input type that accepts DeliveryRuleActionResponseArray and DeliveryRuleActionResponseArrayOutput values.
// You can construct a concrete instance of `DeliveryRuleActionResponseArrayInput` via:
//
//          DeliveryRuleActionResponseArray{ DeliveryRuleActionResponseArgs{...} }
type DeliveryRuleActionResponseArrayInput interface {
	pulumi.Input

	ToDeliveryRuleActionResponseArrayOutput() DeliveryRuleActionResponseArrayOutput
	ToDeliveryRuleActionResponseArrayOutputWithContext(context.Context) DeliveryRuleActionResponseArrayOutput
}

type DeliveryRuleActionResponseArray []DeliveryRuleActionResponseInput

func (DeliveryRuleActionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRuleActionResponse)(nil)).Elem()
}

func (i DeliveryRuleActionResponseArray) ToDeliveryRuleActionResponseArrayOutput() DeliveryRuleActionResponseArrayOutput {
	return i.ToDeliveryRuleActionResponseArrayOutputWithContext(context.Background())
}

func (i DeliveryRuleActionResponseArray) ToDeliveryRuleActionResponseArrayOutputWithContext(ctx context.Context) DeliveryRuleActionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleActionResponseArrayOutput)
}

// An action for the delivery rule.
type DeliveryRuleActionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleActionResponse)(nil)).Elem()
}

func (o DeliveryRuleActionResponseOutput) ToDeliveryRuleActionResponseOutput() DeliveryRuleActionResponseOutput {
	return o
}

func (o DeliveryRuleActionResponseOutput) ToDeliveryRuleActionResponseOutputWithContext(ctx context.Context) DeliveryRuleActionResponseOutput {
	return o
}

// The name of the action for the delivery rule.
func (o DeliveryRuleActionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleActionResponse) string { return v.Name }).(pulumi.StringOutput)
}

type DeliveryRuleActionResponseArrayOutput struct{ *pulumi.OutputState }

func (DeliveryRuleActionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRuleActionResponse)(nil)).Elem()
}

func (o DeliveryRuleActionResponseArrayOutput) ToDeliveryRuleActionResponseArrayOutput() DeliveryRuleActionResponseArrayOutput {
	return o
}

func (o DeliveryRuleActionResponseArrayOutput) ToDeliveryRuleActionResponseArrayOutputWithContext(ctx context.Context) DeliveryRuleActionResponseArrayOutput {
	return o
}

func (o DeliveryRuleActionResponseArrayOutput) Index(i pulumi.IntInput) DeliveryRuleActionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryRuleActionResponse {
		return vs[0].([]DeliveryRuleActionResponse)[vs[1].(int)]
	}).(DeliveryRuleActionResponseOutput)
}

// A condition for the delivery rule.
type DeliveryRuleCondition struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
}

// DeliveryRuleConditionInput is an input type that accepts DeliveryRuleConditionArgs and DeliveryRuleConditionOutput values.
// You can construct a concrete instance of `DeliveryRuleConditionInput` via:
//
//          DeliveryRuleConditionArgs{...}
type DeliveryRuleConditionInput interface {
	pulumi.Input

	ToDeliveryRuleConditionOutput() DeliveryRuleConditionOutput
	ToDeliveryRuleConditionOutputWithContext(context.Context) DeliveryRuleConditionOutput
}

// A condition for the delivery rule.
type DeliveryRuleConditionArgs struct {
	// The name of the condition for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
}

func (DeliveryRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCondition)(nil)).Elem()
}

func (i DeliveryRuleConditionArgs) ToDeliveryRuleConditionOutput() DeliveryRuleConditionOutput {
	return i.ToDeliveryRuleConditionOutputWithContext(context.Background())
}

func (i DeliveryRuleConditionArgs) ToDeliveryRuleConditionOutputWithContext(ctx context.Context) DeliveryRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleConditionOutput)
}

// DeliveryRuleConditionArrayInput is an input type that accepts DeliveryRuleConditionArray and DeliveryRuleConditionArrayOutput values.
// You can construct a concrete instance of `DeliveryRuleConditionArrayInput` via:
//
//          DeliveryRuleConditionArray{ DeliveryRuleConditionArgs{...} }
type DeliveryRuleConditionArrayInput interface {
	pulumi.Input

	ToDeliveryRuleConditionArrayOutput() DeliveryRuleConditionArrayOutput
	ToDeliveryRuleConditionArrayOutputWithContext(context.Context) DeliveryRuleConditionArrayOutput
}

type DeliveryRuleConditionArray []DeliveryRuleConditionInput

func (DeliveryRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRuleCondition)(nil)).Elem()
}

func (i DeliveryRuleConditionArray) ToDeliveryRuleConditionArrayOutput() DeliveryRuleConditionArrayOutput {
	return i.ToDeliveryRuleConditionArrayOutputWithContext(context.Background())
}

func (i DeliveryRuleConditionArray) ToDeliveryRuleConditionArrayOutputWithContext(ctx context.Context) DeliveryRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleConditionArrayOutput)
}

// A condition for the delivery rule.
type DeliveryRuleConditionOutput struct{ *pulumi.OutputState }

func (DeliveryRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleCondition)(nil)).Elem()
}

func (o DeliveryRuleConditionOutput) ToDeliveryRuleConditionOutput() DeliveryRuleConditionOutput {
	return o
}

func (o DeliveryRuleConditionOutput) ToDeliveryRuleConditionOutputWithContext(ctx context.Context) DeliveryRuleConditionOutput {
	return o
}

// The name of the condition for the delivery rule.
func (o DeliveryRuleConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleCondition) string { return v.Name }).(pulumi.StringOutput)
}

type DeliveryRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (DeliveryRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRuleCondition)(nil)).Elem()
}

func (o DeliveryRuleConditionArrayOutput) ToDeliveryRuleConditionArrayOutput() DeliveryRuleConditionArrayOutput {
	return o
}

func (o DeliveryRuleConditionArrayOutput) ToDeliveryRuleConditionArrayOutputWithContext(ctx context.Context) DeliveryRuleConditionArrayOutput {
	return o
}

func (o DeliveryRuleConditionArrayOutput) Index(i pulumi.IntInput) DeliveryRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryRuleCondition {
		return vs[0].([]DeliveryRuleCondition)[vs[1].(int)]
	}).(DeliveryRuleConditionOutput)
}

// A condition for the delivery rule.
type DeliveryRuleConditionResponse struct {
	// The name of the condition for the delivery rule.
	Name string `pulumi:"name"`
}

// DeliveryRuleConditionResponseInput is an input type that accepts DeliveryRuleConditionResponseArgs and DeliveryRuleConditionResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleConditionResponseInput` via:
//
//          DeliveryRuleConditionResponseArgs{...}
type DeliveryRuleConditionResponseInput interface {
	pulumi.Input

	ToDeliveryRuleConditionResponseOutput() DeliveryRuleConditionResponseOutput
	ToDeliveryRuleConditionResponseOutputWithContext(context.Context) DeliveryRuleConditionResponseOutput
}

// A condition for the delivery rule.
type DeliveryRuleConditionResponseArgs struct {
	// The name of the condition for the delivery rule.
	Name pulumi.StringInput `pulumi:"name"`
}

func (DeliveryRuleConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleConditionResponse)(nil)).Elem()
}

func (i DeliveryRuleConditionResponseArgs) ToDeliveryRuleConditionResponseOutput() DeliveryRuleConditionResponseOutput {
	return i.ToDeliveryRuleConditionResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleConditionResponseArgs) ToDeliveryRuleConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleConditionResponseOutput)
}

// DeliveryRuleConditionResponseArrayInput is an input type that accepts DeliveryRuleConditionResponseArray and DeliveryRuleConditionResponseArrayOutput values.
// You can construct a concrete instance of `DeliveryRuleConditionResponseArrayInput` via:
//
//          DeliveryRuleConditionResponseArray{ DeliveryRuleConditionResponseArgs{...} }
type DeliveryRuleConditionResponseArrayInput interface {
	pulumi.Input

	ToDeliveryRuleConditionResponseArrayOutput() DeliveryRuleConditionResponseArrayOutput
	ToDeliveryRuleConditionResponseArrayOutputWithContext(context.Context) DeliveryRuleConditionResponseArrayOutput
}

type DeliveryRuleConditionResponseArray []DeliveryRuleConditionResponseInput

func (DeliveryRuleConditionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRuleConditionResponse)(nil)).Elem()
}

func (i DeliveryRuleConditionResponseArray) ToDeliveryRuleConditionResponseArrayOutput() DeliveryRuleConditionResponseArrayOutput {
	return i.ToDeliveryRuleConditionResponseArrayOutputWithContext(context.Background())
}

func (i DeliveryRuleConditionResponseArray) ToDeliveryRuleConditionResponseArrayOutputWithContext(ctx context.Context) DeliveryRuleConditionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleConditionResponseArrayOutput)
}

// A condition for the delivery rule.
type DeliveryRuleConditionResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleConditionResponseOutput) ToDeliveryRuleConditionResponseOutput() DeliveryRuleConditionResponseOutput {
	return o
}

func (o DeliveryRuleConditionResponseOutput) ToDeliveryRuleConditionResponseOutputWithContext(ctx context.Context) DeliveryRuleConditionResponseOutput {
	return o
}

// The name of the condition for the delivery rule.
func (o DeliveryRuleConditionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryRuleConditionResponse) string { return v.Name }).(pulumi.StringOutput)
}

type DeliveryRuleConditionResponseArrayOutput struct{ *pulumi.OutputState }

func (DeliveryRuleConditionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRuleConditionResponse)(nil)).Elem()
}

func (o DeliveryRuleConditionResponseArrayOutput) ToDeliveryRuleConditionResponseArrayOutput() DeliveryRuleConditionResponseArrayOutput {
	return o
}

func (o DeliveryRuleConditionResponseArrayOutput) ToDeliveryRuleConditionResponseArrayOutputWithContext(ctx context.Context) DeliveryRuleConditionResponseArrayOutput {
	return o
}

func (o DeliveryRuleConditionResponseArrayOutput) Index(i pulumi.IntInput) DeliveryRuleConditionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryRuleConditionResponse {
		return vs[0].([]DeliveryRuleConditionResponse)[vs[1].(int)]
	}).(DeliveryRuleConditionResponseOutput)
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleResponse struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions []DeliveryRuleActionResponse `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions []DeliveryRuleConditionResponse `pulumi:"conditions"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order int `pulumi:"order"`
}

// DeliveryRuleResponseInput is an input type that accepts DeliveryRuleResponseArgs and DeliveryRuleResponseOutput values.
// You can construct a concrete instance of `DeliveryRuleResponseInput` via:
//
//          DeliveryRuleResponseArgs{...}
type DeliveryRuleResponseInput interface {
	pulumi.Input

	ToDeliveryRuleResponseOutput() DeliveryRuleResponseOutput
	ToDeliveryRuleResponseOutputWithContext(context.Context) DeliveryRuleResponseOutput
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleResponseArgs struct {
	// A list of actions that are executed when all the conditions of a rule are satisfied.
	Actions DeliveryRuleActionResponseArrayInput `pulumi:"actions"`
	// A list of conditions that must be matched for the actions to be executed
	Conditions DeliveryRuleConditionResponseArrayInput `pulumi:"conditions"`
	// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
	Order pulumi.IntInput `pulumi:"order"`
}

func (DeliveryRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleResponse)(nil)).Elem()
}

func (i DeliveryRuleResponseArgs) ToDeliveryRuleResponseOutput() DeliveryRuleResponseOutput {
	return i.ToDeliveryRuleResponseOutputWithContext(context.Background())
}

func (i DeliveryRuleResponseArgs) ToDeliveryRuleResponseOutputWithContext(ctx context.Context) DeliveryRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleResponseOutput)
}

// DeliveryRuleResponseArrayInput is an input type that accepts DeliveryRuleResponseArray and DeliveryRuleResponseArrayOutput values.
// You can construct a concrete instance of `DeliveryRuleResponseArrayInput` via:
//
//          DeliveryRuleResponseArray{ DeliveryRuleResponseArgs{...} }
type DeliveryRuleResponseArrayInput interface {
	pulumi.Input

	ToDeliveryRuleResponseArrayOutput() DeliveryRuleResponseArrayOutput
	ToDeliveryRuleResponseArrayOutputWithContext(context.Context) DeliveryRuleResponseArrayOutput
}

type DeliveryRuleResponseArray []DeliveryRuleResponseInput

func (DeliveryRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRuleResponse)(nil)).Elem()
}

func (i DeliveryRuleResponseArray) ToDeliveryRuleResponseArrayOutput() DeliveryRuleResponseArrayOutput {
	return i.ToDeliveryRuleResponseArrayOutputWithContext(context.Background())
}

func (i DeliveryRuleResponseArray) ToDeliveryRuleResponseArrayOutputWithContext(ctx context.Context) DeliveryRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryRuleResponseArrayOutput)
}

// A rule that specifies a set of actions and conditions
type DeliveryRuleResponseOutput struct{ *pulumi.OutputState }

func (DeliveryRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryRuleResponse)(nil)).Elem()
}

func (o DeliveryRuleResponseOutput) ToDeliveryRuleResponseOutput() DeliveryRuleResponseOutput {
	return o
}

func (o DeliveryRuleResponseOutput) ToDeliveryRuleResponseOutputWithContext(ctx context.Context) DeliveryRuleResponseOutput {
	return o
}

// A list of actions that are executed when all the conditions of a rule are satisfied.
func (o DeliveryRuleResponseOutput) Actions() DeliveryRuleActionResponseArrayOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) []DeliveryRuleActionResponse { return v.Actions }).(DeliveryRuleActionResponseArrayOutput)
}

// A list of conditions that must be matched for the actions to be executed
func (o DeliveryRuleResponseOutput) Conditions() DeliveryRuleConditionResponseArrayOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) []DeliveryRuleConditionResponse { return v.Conditions }).(DeliveryRuleConditionResponseArrayOutput)
}

// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.
func (o DeliveryRuleResponseOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v DeliveryRuleResponse) int { return v.Order }).(pulumi.IntOutput)
}

type DeliveryRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (DeliveryRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryRuleResponse)(nil)).Elem()
}

func (o DeliveryRuleResponseArrayOutput) ToDeliveryRuleResponseArrayOutput() DeliveryRuleResponseArrayOutput {
	return o
}

func (o DeliveryRuleResponseArrayOutput) ToDeliveryRuleResponseArrayOutputWithContext(ctx context.Context) DeliveryRuleResponseArrayOutput {
	return o
}

func (o DeliveryRuleResponseArrayOutput) Index(i pulumi.IntInput) DeliveryRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryRuleResponse {
		return vs[0].([]DeliveryRuleResponse)[vs[1].(int)]
	}).(DeliveryRuleResponseOutput)
}

// The JSON object that contains the properties required to create an endpoint.
type EndpointPropertiesResponse struct {
	// List of content types on which compression applies. The value should be a valid MIME type.
	ContentTypesToCompress []string `pulumi:"contentTypesToCompress"`
	// A policy that specifies the delivery rules to be used for an endpoint.
	DeliveryPolicy *EndpointPropertiesUpdateParametersResponseDeliveryPolicy `pulumi:"deliveryPolicy"`
	// List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/
	GeoFilters []GeoFilterResponse `pulumi:"geoFilters"`
	// The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
	HostName string `pulumi:"hostName"`
	// Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB.
	IsCompressionEnabled *bool `pulumi:"isCompressionEnabled"`
	// Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
	IsHttpAllowed *bool `pulumi:"isHttpAllowed"`
	// Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
	IsHttpsAllowed *bool `pulumi:"isHttpsAllowed"`
	// Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization.
	OptimizationType *string `pulumi:"optimizationType"`
	// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
	OriginHostHeader *string `pulumi:"originHostHeader"`
	// A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
	OriginPath *string `pulumi:"originPath"`
	// The source of the content being delivered via CDN.
	Origins []DeepCreatedOriginResponse `pulumi:"origins"`
	// Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path.
	ProbePath *string `pulumi:"probePath"`
	// Provisioning status of the endpoint.
	ProvisioningState string `pulumi:"provisioningState"`
	// Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL.
	QueryStringCachingBehavior *string `pulumi:"queryStringCachingBehavior"`
	// Resource status of the endpoint.
	ResourceState string `pulumi:"resourceState"`
}

// EndpointPropertiesResponseInput is an input type that accepts EndpointPropertiesResponseArgs and EndpointPropertiesResponseOutput values.
// You can construct a concrete instance of `EndpointPropertiesResponseInput` via:
//
//          EndpointPropertiesResponseArgs{...}
type EndpointPropertiesResponseInput interface {
	pulumi.Input

	ToEndpointPropertiesResponseOutput() EndpointPropertiesResponseOutput
	ToEndpointPropertiesResponseOutputWithContext(context.Context) EndpointPropertiesResponseOutput
}

// The JSON object that contains the properties required to create an endpoint.
type EndpointPropertiesResponseArgs struct {
	// List of content types on which compression applies. The value should be a valid MIME type.
	ContentTypesToCompress pulumi.StringArrayInput `pulumi:"contentTypesToCompress"`
	// A policy that specifies the delivery rules to be used for an endpoint.
	DeliveryPolicy EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrInput `pulumi:"deliveryPolicy"`
	// List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/
	GeoFilters GeoFilterResponseArrayInput `pulumi:"geoFilters"`
	// The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
	HostName pulumi.StringInput `pulumi:"hostName"`
	// Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB.
	IsCompressionEnabled pulumi.BoolPtrInput `pulumi:"isCompressionEnabled"`
	// Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
	IsHttpAllowed pulumi.BoolPtrInput `pulumi:"isHttpAllowed"`
	// Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
	IsHttpsAllowed pulumi.BoolPtrInput `pulumi:"isHttpsAllowed"`
	// Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization.
	OptimizationType pulumi.StringPtrInput `pulumi:"optimizationType"`
	// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
	OriginHostHeader pulumi.StringPtrInput `pulumi:"originHostHeader"`
	// A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
	OriginPath pulumi.StringPtrInput `pulumi:"originPath"`
	// The source of the content being delivered via CDN.
	Origins DeepCreatedOriginResponseArrayInput `pulumi:"origins"`
	// Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path.
	ProbePath pulumi.StringPtrInput `pulumi:"probePath"`
	// Provisioning status of the endpoint.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL.
	QueryStringCachingBehavior pulumi.StringPtrInput `pulumi:"queryStringCachingBehavior"`
	// Resource status of the endpoint.
	ResourceState pulumi.StringInput `pulumi:"resourceState"`
}

func (EndpointPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesResponse)(nil)).Elem()
}

func (i EndpointPropertiesResponseArgs) ToEndpointPropertiesResponseOutput() EndpointPropertiesResponseOutput {
	return i.ToEndpointPropertiesResponseOutputWithContext(context.Background())
}

func (i EndpointPropertiesResponseArgs) ToEndpointPropertiesResponseOutputWithContext(ctx context.Context) EndpointPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesResponseOutput)
}

func (i EndpointPropertiesResponseArgs) ToEndpointPropertiesResponsePtrOutput() EndpointPropertiesResponsePtrOutput {
	return i.ToEndpointPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i EndpointPropertiesResponseArgs) ToEndpointPropertiesResponsePtrOutputWithContext(ctx context.Context) EndpointPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesResponseOutput).ToEndpointPropertiesResponsePtrOutputWithContext(ctx)
}

// EndpointPropertiesResponsePtrInput is an input type that accepts EndpointPropertiesResponseArgs, EndpointPropertiesResponsePtr and EndpointPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `EndpointPropertiesResponsePtrInput` via:
//
//          EndpointPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type EndpointPropertiesResponsePtrInput interface {
	pulumi.Input

	ToEndpointPropertiesResponsePtrOutput() EndpointPropertiesResponsePtrOutput
	ToEndpointPropertiesResponsePtrOutputWithContext(context.Context) EndpointPropertiesResponsePtrOutput
}

type endpointPropertiesResponsePtrType EndpointPropertiesResponseArgs

func EndpointPropertiesResponsePtr(v *EndpointPropertiesResponseArgs) EndpointPropertiesResponsePtrInput {
	return (*endpointPropertiesResponsePtrType)(v)
}

func (*endpointPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesResponse)(nil)).Elem()
}

func (i *endpointPropertiesResponsePtrType) ToEndpointPropertiesResponsePtrOutput() EndpointPropertiesResponsePtrOutput {
	return i.ToEndpointPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *endpointPropertiesResponsePtrType) ToEndpointPropertiesResponsePtrOutputWithContext(ctx context.Context) EndpointPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesResponsePtrOutput)
}

// The JSON object that contains the properties required to create an endpoint.
type EndpointPropertiesResponseOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesResponse)(nil)).Elem()
}

func (o EndpointPropertiesResponseOutput) ToEndpointPropertiesResponseOutput() EndpointPropertiesResponseOutput {
	return o
}

func (o EndpointPropertiesResponseOutput) ToEndpointPropertiesResponseOutputWithContext(ctx context.Context) EndpointPropertiesResponseOutput {
	return o
}

func (o EndpointPropertiesResponseOutput) ToEndpointPropertiesResponsePtrOutput() EndpointPropertiesResponsePtrOutput {
	return o.ToEndpointPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o EndpointPropertiesResponseOutput) ToEndpointPropertiesResponsePtrOutputWithContext(ctx context.Context) EndpointPropertiesResponsePtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) *EndpointPropertiesResponse {
		return &v
	}).(EndpointPropertiesResponsePtrOutput)
}

// List of content types on which compression applies. The value should be a valid MIME type.
func (o EndpointPropertiesResponseOutput) ContentTypesToCompress() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) []string { return v.ContentTypesToCompress }).(pulumi.StringArrayOutput)
}

// A policy that specifies the delivery rules to be used for an endpoint.
func (o EndpointPropertiesResponseOutput) DeliveryPolicy() EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) *EndpointPropertiesUpdateParametersResponseDeliveryPolicy {
		return v.DeliveryPolicy
	}).(EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput)
}

// List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/
func (o EndpointPropertiesResponseOutput) GeoFilters() GeoFilterResponseArrayOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) []GeoFilterResponse { return v.GeoFilters }).(GeoFilterResponseArrayOutput)
}

// The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
func (o EndpointPropertiesResponseOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) string { return v.HostName }).(pulumi.StringOutput)
}

// Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB.
func (o EndpointPropertiesResponseOutput) IsCompressionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) *bool { return v.IsCompressionEnabled }).(pulumi.BoolPtrOutput)
}

// Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
func (o EndpointPropertiesResponseOutput) IsHttpAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) *bool { return v.IsHttpAllowed }).(pulumi.BoolPtrOutput)
}

// Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
func (o EndpointPropertiesResponseOutput) IsHttpsAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) *bool { return v.IsHttpsAllowed }).(pulumi.BoolPtrOutput)
}

// Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization.
func (o EndpointPropertiesResponseOutput) OptimizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) *string { return v.OptimizationType }).(pulumi.StringPtrOutput)
}

// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
func (o EndpointPropertiesResponseOutput) OriginHostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) *string { return v.OriginHostHeader }).(pulumi.StringPtrOutput)
}

// A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
func (o EndpointPropertiesResponseOutput) OriginPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) *string { return v.OriginPath }).(pulumi.StringPtrOutput)
}

// The source of the content being delivered via CDN.
func (o EndpointPropertiesResponseOutput) Origins() DeepCreatedOriginResponseArrayOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) []DeepCreatedOriginResponse { return v.Origins }).(DeepCreatedOriginResponseArrayOutput)
}

// Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path.
func (o EndpointPropertiesResponseOutput) ProbePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) *string { return v.ProbePath }).(pulumi.StringPtrOutput)
}

// Provisioning status of the endpoint.
func (o EndpointPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL.
func (o EndpointPropertiesResponseOutput) QueryStringCachingBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) *string { return v.QueryStringCachingBehavior }).(pulumi.StringPtrOutput)
}

// Resource status of the endpoint.
func (o EndpointPropertiesResponseOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointPropertiesResponse) string { return v.ResourceState }).(pulumi.StringOutput)
}

type EndpointPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesResponse)(nil)).Elem()
}

func (o EndpointPropertiesResponsePtrOutput) ToEndpointPropertiesResponsePtrOutput() EndpointPropertiesResponsePtrOutput {
	return o
}

func (o EndpointPropertiesResponsePtrOutput) ToEndpointPropertiesResponsePtrOutputWithContext(ctx context.Context) EndpointPropertiesResponsePtrOutput {
	return o
}

func (o EndpointPropertiesResponsePtrOutput) Elem() EndpointPropertiesResponseOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) EndpointPropertiesResponse { return *v }).(EndpointPropertiesResponseOutput)
}

// List of content types on which compression applies. The value should be a valid MIME type.
func (o EndpointPropertiesResponsePtrOutput) ContentTypesToCompress() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.ContentTypesToCompress
	}).(pulumi.StringArrayOutput)
}

// A policy that specifies the delivery rules to be used for an endpoint.
func (o EndpointPropertiesResponsePtrOutput) DeliveryPolicy() EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) *EndpointPropertiesUpdateParametersResponseDeliveryPolicy {
		if v == nil {
			return nil
		}
		return v.DeliveryPolicy
	}).(EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput)
}

// List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/
func (o EndpointPropertiesResponsePtrOutput) GeoFilters() GeoFilterResponseArrayOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) []GeoFilterResponse {
		if v == nil {
			return nil
		}
		return v.GeoFilters
	}).(GeoFilterResponseArrayOutput)
}

// The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net
func (o EndpointPropertiesResponsePtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.HostName
	}).(pulumi.StringPtrOutput)
}

// Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB.
func (o EndpointPropertiesResponsePtrOutput) IsCompressionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsCompressionEnabled
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
func (o EndpointPropertiesResponsePtrOutput) IsHttpAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsHttpAllowed
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.
func (o EndpointPropertiesResponsePtrOutput) IsHttpsAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsHttpsAllowed
	}).(pulumi.BoolPtrOutput)
}

// Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization.
func (o EndpointPropertiesResponsePtrOutput) OptimizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.OptimizationType
	}).(pulumi.StringPtrOutput)
}

// The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.
func (o EndpointPropertiesResponsePtrOutput) OriginHostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.OriginHostHeader
	}).(pulumi.StringPtrOutput)
}

// A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.
func (o EndpointPropertiesResponsePtrOutput) OriginPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.OriginPath
	}).(pulumi.StringPtrOutput)
}

// The source of the content being delivered via CDN.
func (o EndpointPropertiesResponsePtrOutput) Origins() DeepCreatedOriginResponseArrayOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) []DeepCreatedOriginResponse {
		if v == nil {
			return nil
		}
		return v.Origins
	}).(DeepCreatedOriginResponseArrayOutput)
}

// Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path.
func (o EndpointPropertiesResponsePtrOutput) ProbePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProbePath
	}).(pulumi.StringPtrOutput)
}

// Provisioning status of the endpoint.
func (o EndpointPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL.
func (o EndpointPropertiesResponsePtrOutput) QueryStringCachingBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.QueryStringCachingBehavior
	}).(pulumi.StringPtrOutput)
}

// Resource status of the endpoint.
func (o EndpointPropertiesResponsePtrOutput) ResourceState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceState
	}).(pulumi.StringPtrOutput)
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersDeliveryPolicy struct {
	// User-friendly description of the policy.
	Description *string `pulumi:"description"`
	// A list of the delivery rules.
	Rules []DeliveryRule `pulumi:"rules"`
}

// EndpointPropertiesUpdateParametersDeliveryPolicyInput is an input type that accepts EndpointPropertiesUpdateParametersDeliveryPolicyArgs and EndpointPropertiesUpdateParametersDeliveryPolicyOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersDeliveryPolicyInput` via:
//
//          EndpointPropertiesUpdateParametersDeliveryPolicyArgs{...}
type EndpointPropertiesUpdateParametersDeliveryPolicyInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersDeliveryPolicyOutput() EndpointPropertiesUpdateParametersDeliveryPolicyOutput
	ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyOutput
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersDeliveryPolicyArgs struct {
	// User-friendly description of the policy.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A list of the delivery rules.
	Rules DeliveryRuleArrayInput `pulumi:"rules"`
}

func (EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersDeliveryPolicy)(nil)).Elem()
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyOutput() EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return i.ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersDeliveryPolicyOutput)
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersDeliveryPolicyOutput).ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx)
}

// EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput is an input type that accepts EndpointPropertiesUpdateParametersDeliveryPolicyArgs, EndpointPropertiesUpdateParametersDeliveryPolicyPtr and EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput` via:
//
//          EndpointPropertiesUpdateParametersDeliveryPolicyArgs{...}
//
//  or:
//
//          nil
type EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput
	ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput
}

type endpointPropertiesUpdateParametersDeliveryPolicyPtrType EndpointPropertiesUpdateParametersDeliveryPolicyArgs

func EndpointPropertiesUpdateParametersDeliveryPolicyPtr(v *EndpointPropertiesUpdateParametersDeliveryPolicyArgs) EndpointPropertiesUpdateParametersDeliveryPolicyPtrInput {
	return (*endpointPropertiesUpdateParametersDeliveryPolicyPtrType)(v)
}

func (*endpointPropertiesUpdateParametersDeliveryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersDeliveryPolicy)(nil)).Elem()
}

func (i *endpointPropertiesUpdateParametersDeliveryPolicyPtrType) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (i *endpointPropertiesUpdateParametersDeliveryPolicyPtrType) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput)
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersDeliveryPolicyOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyOutput() EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return o.ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersDeliveryPolicy) *EndpointPropertiesUpdateParametersDeliveryPolicy {
		return &v
	}).(EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput)
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersDeliveryPolicy) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersDeliveryPolicyOutput) Rules() DeliveryRuleArrayOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersDeliveryPolicy) []DeliveryRule { return v.Rules }).(DeliveryRuleArrayOutput)
}

type EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) ToEndpointPropertiesUpdateParametersDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) Elem() EndpointPropertiesUpdateParametersDeliveryPolicyOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersDeliveryPolicy) EndpointPropertiesUpdateParametersDeliveryPolicy {
		return *v
	}).(EndpointPropertiesUpdateParametersDeliveryPolicyOutput)
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersDeliveryPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput) Rules() DeliveryRuleArrayOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersDeliveryPolicy) []DeliveryRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(DeliveryRuleArrayOutput)
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersResponseDeliveryPolicy struct {
	// User-friendly description of the policy.
	Description *string `pulumi:"description"`
	// A list of the delivery rules.
	Rules []DeliveryRuleResponse `pulumi:"rules"`
}

// EndpointPropertiesUpdateParametersResponseDeliveryPolicyInput is an input type that accepts EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs and EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersResponseDeliveryPolicyInput` via:
//
//          EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs{...}
type EndpointPropertiesUpdateParametersResponseDeliveryPolicyInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput
	ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyOutputWithContext(context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs struct {
	// User-friendly description of the policy.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A list of the delivery rules.
	Rules DeliveryRuleResponseArrayInput `pulumi:"rules"`
}

func (EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersResponseDeliveryPolicy)(nil)).Elem()
}

func (i EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput {
	return i.ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput)
}

func (i EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (i EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput).ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(ctx)
}

// EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrInput is an input type that accepts EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs, EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtr and EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput values.
// You can construct a concrete instance of `EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrInput` via:
//
//          EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs{...}
//
//  or:
//
//          nil
type EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrInput interface {
	pulumi.Input

	ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput
	ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput
}

type endpointPropertiesUpdateParametersResponseDeliveryPolicyPtrType EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs

func EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtr(v *EndpointPropertiesUpdateParametersResponseDeliveryPolicyArgs) EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrInput {
	return (*endpointPropertiesUpdateParametersResponseDeliveryPolicyPtrType)(v)
}

func (*endpointPropertiesUpdateParametersResponseDeliveryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersResponseDeliveryPolicy)(nil)).Elem()
}

func (i *endpointPropertiesUpdateParametersResponseDeliveryPolicyPtrType) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return i.ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (i *endpointPropertiesUpdateParametersResponseDeliveryPolicyPtrType) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput)
}

// A policy that specifies the delivery rules to be used for an endpoint.
type EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesUpdateParametersResponseDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return o.ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(context.Background())
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersResponseDeliveryPolicy) *EndpointPropertiesUpdateParametersResponseDeliveryPolicy {
		return &v
	}).(EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput)
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersResponseDeliveryPolicy) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput) Rules() DeliveryRuleResponseArrayOutput {
	return o.ApplyT(func(v EndpointPropertiesUpdateParametersResponseDeliveryPolicy) []DeliveryRuleResponse {
		return v.Rules
	}).(DeliveryRuleResponseArrayOutput)
}

type EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPropertiesUpdateParametersResponseDeliveryPolicy)(nil)).Elem()
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput() EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) ToEndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutputWithContext(ctx context.Context) EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput {
	return o
}

func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) Elem() EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseDeliveryPolicy) EndpointPropertiesUpdateParametersResponseDeliveryPolicy {
		return *v
	}).(EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput)
}

// User-friendly description of the policy.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseDeliveryPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// A list of the delivery rules.
func (o EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput) Rules() DeliveryRuleResponseArrayOutput {
	return o.ApplyT(func(v *EndpointPropertiesUpdateParametersResponseDeliveryPolicy) []DeliveryRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(DeliveryRuleResponseArrayOutput)
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilter struct {
	// Action of the geo filter, i.e. allow or block access.
	Action string `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes []string `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath string `pulumi:"relativePath"`
}

// GeoFilterInput is an input type that accepts GeoFilterArgs and GeoFilterOutput values.
// You can construct a concrete instance of `GeoFilterInput` via:
//
//          GeoFilterArgs{...}
type GeoFilterInput interface {
	pulumi.Input

	ToGeoFilterOutput() GeoFilterOutput
	ToGeoFilterOutputWithContext(context.Context) GeoFilterOutput
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterArgs struct {
	// Action of the geo filter, i.e. allow or block access.
	Action pulumi.StringInput `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes pulumi.StringArrayInput `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath pulumi.StringInput `pulumi:"relativePath"`
}

func (GeoFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilter)(nil)).Elem()
}

func (i GeoFilterArgs) ToGeoFilterOutput() GeoFilterOutput {
	return i.ToGeoFilterOutputWithContext(context.Background())
}

func (i GeoFilterArgs) ToGeoFilterOutputWithContext(ctx context.Context) GeoFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoFilterOutput)
}

// GeoFilterArrayInput is an input type that accepts GeoFilterArray and GeoFilterArrayOutput values.
// You can construct a concrete instance of `GeoFilterArrayInput` via:
//
//          GeoFilterArray{ GeoFilterArgs{...} }
type GeoFilterArrayInput interface {
	pulumi.Input

	ToGeoFilterArrayOutput() GeoFilterArrayOutput
	ToGeoFilterArrayOutputWithContext(context.Context) GeoFilterArrayOutput
}

type GeoFilterArray []GeoFilterInput

func (GeoFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilter)(nil)).Elem()
}

func (i GeoFilterArray) ToGeoFilterArrayOutput() GeoFilterArrayOutput {
	return i.ToGeoFilterArrayOutputWithContext(context.Background())
}

func (i GeoFilterArray) ToGeoFilterArrayOutputWithContext(ctx context.Context) GeoFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoFilterArrayOutput)
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterOutput struct{ *pulumi.OutputState }

func (GeoFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilter)(nil)).Elem()
}

func (o GeoFilterOutput) ToGeoFilterOutput() GeoFilterOutput {
	return o
}

func (o GeoFilterOutput) ToGeoFilterOutputWithContext(ctx context.Context) GeoFilterOutput {
	return o
}

// Action of the geo filter, i.e. allow or block access.
func (o GeoFilterOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilter) string { return v.Action }).(pulumi.StringOutput)
}

// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
func (o GeoFilterOutput) CountryCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GeoFilter) []string { return v.CountryCodes }).(pulumi.StringArrayOutput)
}

// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
func (o GeoFilterOutput) RelativePath() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilter) string { return v.RelativePath }).(pulumi.StringOutput)
}

type GeoFilterArrayOutput struct{ *pulumi.OutputState }

func (GeoFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilter)(nil)).Elem()
}

func (o GeoFilterArrayOutput) ToGeoFilterArrayOutput() GeoFilterArrayOutput {
	return o
}

func (o GeoFilterArrayOutput) ToGeoFilterArrayOutputWithContext(ctx context.Context) GeoFilterArrayOutput {
	return o
}

func (o GeoFilterArrayOutput) Index(i pulumi.IntInput) GeoFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GeoFilter {
		return vs[0].([]GeoFilter)[vs[1].(int)]
	}).(GeoFilterOutput)
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterResponse struct {
	// Action of the geo filter, i.e. allow or block access.
	Action string `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes []string `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath string `pulumi:"relativePath"`
}

// GeoFilterResponseInput is an input type that accepts GeoFilterResponseArgs and GeoFilterResponseOutput values.
// You can construct a concrete instance of `GeoFilterResponseInput` via:
//
//          GeoFilterResponseArgs{...}
type GeoFilterResponseInput interface {
	pulumi.Input

	ToGeoFilterResponseOutput() GeoFilterResponseOutput
	ToGeoFilterResponseOutputWithContext(context.Context) GeoFilterResponseOutput
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterResponseArgs struct {
	// Action of the geo filter, i.e. allow or block access.
	Action pulumi.StringInput `pulumi:"action"`
	// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
	CountryCodes pulumi.StringArrayInput `pulumi:"countryCodes"`
	// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
	RelativePath pulumi.StringInput `pulumi:"relativePath"`
}

func (GeoFilterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilterResponse)(nil)).Elem()
}

func (i GeoFilterResponseArgs) ToGeoFilterResponseOutput() GeoFilterResponseOutput {
	return i.ToGeoFilterResponseOutputWithContext(context.Background())
}

func (i GeoFilterResponseArgs) ToGeoFilterResponseOutputWithContext(ctx context.Context) GeoFilterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoFilterResponseOutput)
}

// GeoFilterResponseArrayInput is an input type that accepts GeoFilterResponseArray and GeoFilterResponseArrayOutput values.
// You can construct a concrete instance of `GeoFilterResponseArrayInput` via:
//
//          GeoFilterResponseArray{ GeoFilterResponseArgs{...} }
type GeoFilterResponseArrayInput interface {
	pulumi.Input

	ToGeoFilterResponseArrayOutput() GeoFilterResponseArrayOutput
	ToGeoFilterResponseArrayOutputWithContext(context.Context) GeoFilterResponseArrayOutput
}

type GeoFilterResponseArray []GeoFilterResponseInput

func (GeoFilterResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilterResponse)(nil)).Elem()
}

func (i GeoFilterResponseArray) ToGeoFilterResponseArrayOutput() GeoFilterResponseArrayOutput {
	return i.ToGeoFilterResponseArrayOutputWithContext(context.Background())
}

func (i GeoFilterResponseArray) ToGeoFilterResponseArrayOutputWithContext(ctx context.Context) GeoFilterResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoFilterResponseArrayOutput)
}

// Rules defining user's geo access within a CDN endpoint.
type GeoFilterResponseOutput struct{ *pulumi.OutputState }

func (GeoFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoFilterResponse)(nil)).Elem()
}

func (o GeoFilterResponseOutput) ToGeoFilterResponseOutput() GeoFilterResponseOutput {
	return o
}

func (o GeoFilterResponseOutput) ToGeoFilterResponseOutputWithContext(ctx context.Context) GeoFilterResponseOutput {
	return o
}

// Action of the geo filter, i.e. allow or block access.
func (o GeoFilterResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilterResponse) string { return v.Action }).(pulumi.StringOutput)
}

// Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.
func (o GeoFilterResponseOutput) CountryCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GeoFilterResponse) []string { return v.CountryCodes }).(pulumi.StringArrayOutput)
}

// Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)
func (o GeoFilterResponseOutput) RelativePath() pulumi.StringOutput {
	return o.ApplyT(func(v GeoFilterResponse) string { return v.RelativePath }).(pulumi.StringOutput)
}

type GeoFilterResponseArrayOutput struct{ *pulumi.OutputState }

func (GeoFilterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoFilterResponse)(nil)).Elem()
}

func (o GeoFilterResponseArrayOutput) ToGeoFilterResponseArrayOutput() GeoFilterResponseArrayOutput {
	return o
}

func (o GeoFilterResponseArrayOutput) ToGeoFilterResponseArrayOutputWithContext(ctx context.Context) GeoFilterResponseArrayOutput {
	return o
}

func (o GeoFilterResponseArrayOutput) Index(i pulumi.IntInput) GeoFilterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GeoFilterResponse {
		return vs[0].([]GeoFilterResponse)[vs[1].(int)]
	}).(GeoFilterResponseOutput)
}

// The JSON object that contains the properties required to create a profile.
type ProfilePropertiesResponse struct {
	// Provisioning status of the profile.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource status of the profile.
	ResourceState string `pulumi:"resourceState"`
}

// ProfilePropertiesResponseInput is an input type that accepts ProfilePropertiesResponseArgs and ProfilePropertiesResponseOutput values.
// You can construct a concrete instance of `ProfilePropertiesResponseInput` via:
//
//          ProfilePropertiesResponseArgs{...}
type ProfilePropertiesResponseInput interface {
	pulumi.Input

	ToProfilePropertiesResponseOutput() ProfilePropertiesResponseOutput
	ToProfilePropertiesResponseOutputWithContext(context.Context) ProfilePropertiesResponseOutput
}

// The JSON object that contains the properties required to create a profile.
type ProfilePropertiesResponseArgs struct {
	// Provisioning status of the profile.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Resource status of the profile.
	ResourceState pulumi.StringInput `pulumi:"resourceState"`
}

func (ProfilePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfilePropertiesResponse)(nil)).Elem()
}

func (i ProfilePropertiesResponseArgs) ToProfilePropertiesResponseOutput() ProfilePropertiesResponseOutput {
	return i.ToProfilePropertiesResponseOutputWithContext(context.Background())
}

func (i ProfilePropertiesResponseArgs) ToProfilePropertiesResponseOutputWithContext(ctx context.Context) ProfilePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfilePropertiesResponseOutput)
}

func (i ProfilePropertiesResponseArgs) ToProfilePropertiesResponsePtrOutput() ProfilePropertiesResponsePtrOutput {
	return i.ToProfilePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ProfilePropertiesResponseArgs) ToProfilePropertiesResponsePtrOutputWithContext(ctx context.Context) ProfilePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfilePropertiesResponseOutput).ToProfilePropertiesResponsePtrOutputWithContext(ctx)
}

// ProfilePropertiesResponsePtrInput is an input type that accepts ProfilePropertiesResponseArgs, ProfilePropertiesResponsePtr and ProfilePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ProfilePropertiesResponsePtrInput` via:
//
//          ProfilePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ProfilePropertiesResponsePtrInput interface {
	pulumi.Input

	ToProfilePropertiesResponsePtrOutput() ProfilePropertiesResponsePtrOutput
	ToProfilePropertiesResponsePtrOutputWithContext(context.Context) ProfilePropertiesResponsePtrOutput
}

type profilePropertiesResponsePtrType ProfilePropertiesResponseArgs

func ProfilePropertiesResponsePtr(v *ProfilePropertiesResponseArgs) ProfilePropertiesResponsePtrInput {
	return (*profilePropertiesResponsePtrType)(v)
}

func (*profilePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfilePropertiesResponse)(nil)).Elem()
}

func (i *profilePropertiesResponsePtrType) ToProfilePropertiesResponsePtrOutput() ProfilePropertiesResponsePtrOutput {
	return i.ToProfilePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *profilePropertiesResponsePtrType) ToProfilePropertiesResponsePtrOutputWithContext(ctx context.Context) ProfilePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfilePropertiesResponsePtrOutput)
}

// The JSON object that contains the properties required to create a profile.
type ProfilePropertiesResponseOutput struct{ *pulumi.OutputState }

func (ProfilePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfilePropertiesResponse)(nil)).Elem()
}

func (o ProfilePropertiesResponseOutput) ToProfilePropertiesResponseOutput() ProfilePropertiesResponseOutput {
	return o
}

func (o ProfilePropertiesResponseOutput) ToProfilePropertiesResponseOutputWithContext(ctx context.Context) ProfilePropertiesResponseOutput {
	return o
}

func (o ProfilePropertiesResponseOutput) ToProfilePropertiesResponsePtrOutput() ProfilePropertiesResponsePtrOutput {
	return o.ToProfilePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ProfilePropertiesResponseOutput) ToProfilePropertiesResponsePtrOutputWithContext(ctx context.Context) ProfilePropertiesResponsePtrOutput {
	return o.ApplyT(func(v ProfilePropertiesResponse) *ProfilePropertiesResponse {
		return &v
	}).(ProfilePropertiesResponsePtrOutput)
}

// Provisioning status of the profile.
func (o ProfilePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ProfilePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource status of the profile.
func (o ProfilePropertiesResponseOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v ProfilePropertiesResponse) string { return v.ResourceState }).(pulumi.StringOutput)
}

type ProfilePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ProfilePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfilePropertiesResponse)(nil)).Elem()
}

func (o ProfilePropertiesResponsePtrOutput) ToProfilePropertiesResponsePtrOutput() ProfilePropertiesResponsePtrOutput {
	return o
}

func (o ProfilePropertiesResponsePtrOutput) ToProfilePropertiesResponsePtrOutputWithContext(ctx context.Context) ProfilePropertiesResponsePtrOutput {
	return o
}

func (o ProfilePropertiesResponsePtrOutput) Elem() ProfilePropertiesResponseOutput {
	return o.ApplyT(func(v *ProfilePropertiesResponse) ProfilePropertiesResponse { return *v }).(ProfilePropertiesResponseOutput)
}

// Provisioning status of the profile.
func (o ProfilePropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Resource status of the profile.
func (o ProfilePropertiesResponsePtrOutput) ResourceState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceState
	}).(pulumi.StringPtrOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type Sku struct {
	// Name of the pricing tier.
	Name *string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuArgs struct {
	// Name of the pricing tier.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// Name of the pricing tier.
func (o SkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// Name of the pricing tier.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuResponse struct {
	// Name of the pricing tier.
	Name *string `pulumi:"name"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuResponseArgs struct {
	// Name of the pricing tier.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// Name of the pricing tier.
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// Name of the pricing tier.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(CustomDomainPropertiesResponseOutput{})
	pulumi.RegisterOutputType(CustomDomainPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginArrayOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginResponseOutput{})
	pulumi.RegisterOutputType(DeepCreatedOriginResponseArrayOutput{})
	pulumi.RegisterOutputType(DeliveryRuleOutput{})
	pulumi.RegisterOutputType(DeliveryRuleArrayOutput{})
	pulumi.RegisterOutputType(DeliveryRuleActionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleActionArrayOutput{})
	pulumi.RegisterOutputType(DeliveryRuleActionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleActionResponseArrayOutput{})
	pulumi.RegisterOutputType(DeliveryRuleConditionOutput{})
	pulumi.RegisterOutputType(DeliveryRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(DeliveryRuleConditionResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleConditionResponseArrayOutput{})
	pulumi.RegisterOutputType(DeliveryRuleResponseOutput{})
	pulumi.RegisterOutputType(DeliveryRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesResponseOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersDeliveryPolicyOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersDeliveryPolicyPtrOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersResponseDeliveryPolicyOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesUpdateParametersResponseDeliveryPolicyPtrOutput{})
	pulumi.RegisterOutputType(GeoFilterOutput{})
	pulumi.RegisterOutputType(GeoFilterArrayOutput{})
	pulumi.RegisterOutputType(GeoFilterResponseOutput{})
	pulumi.RegisterOutputType(GeoFilterResponseArrayOutput{})
	pulumi.RegisterOutputType(ProfilePropertiesResponseOutput{})
	pulumi.RegisterOutputType(ProfilePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
}
