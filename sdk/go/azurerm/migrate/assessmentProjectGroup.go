// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package migrate

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A group created in a Migration project.
type AssessmentProjectGroup struct {
	pulumi.CustomResourceState

	// For optimistic concurrency control.
	ETag pulumi.StringPtrOutput `pulumi:"eTag"`
	// Name of the group.
	Name pulumi.StringOutput `pulumi:"name"`
	// Properties of the group.
	Properties GroupPropertiesResponseOutput `pulumi:"properties"`
	// Type of the object = [Microsoft.Migrate/assessmentProjects/groups].
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAssessmentProjectGroup registers a new resource with the given unique name, arguments, and options.
func NewAssessmentProjectGroup(ctx *pulumi.Context,
	name string, args *AssessmentProjectGroupArgs, opts ...pulumi.ResourceOption) (*AssessmentProjectGroup, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ProjectName == nil {
		return nil, errors.New("missing required argument 'ProjectName'")
	}
	if args == nil || args.Properties == nil {
		return nil, errors.New("missing required argument 'Properties'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &AssessmentProjectGroupArgs{}
	}
	var resource AssessmentProjectGroup
	err := ctx.RegisterResource("azurerm:migrate:AssessmentProjectGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssessmentProjectGroup gets an existing AssessmentProjectGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssessmentProjectGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssessmentProjectGroupState, opts ...pulumi.ResourceOption) (*AssessmentProjectGroup, error) {
	var resource AssessmentProjectGroup
	err := ctx.ReadResource("azurerm:migrate:AssessmentProjectGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AssessmentProjectGroup resources.
type assessmentProjectGroupState struct {
	// For optimistic concurrency control.
	ETag *string `pulumi:"eTag"`
	// Name of the group.
	Name *string `pulumi:"name"`
	// Properties of the group.
	Properties *GroupPropertiesResponse `pulumi:"properties"`
	// Type of the object = [Microsoft.Migrate/assessmentProjects/groups].
	Type *string `pulumi:"type"`
}

type AssessmentProjectGroupState struct {
	// For optimistic concurrency control.
	ETag pulumi.StringPtrInput
	// Name of the group.
	Name pulumi.StringPtrInput
	// Properties of the group.
	Properties GroupPropertiesResponsePtrInput
	// Type of the object = [Microsoft.Migrate/assessmentProjects/groups].
	Type pulumi.StringPtrInput
}

func (AssessmentProjectGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentProjectGroupState)(nil)).Elem()
}

type assessmentProjectGroupArgs struct {
	// For optimistic concurrency control.
	ETag *string `pulumi:"eTag"`
	// Unique name of a group within a project.
	Name string `pulumi:"name"`
	// Name of the Azure Migrate project.
	ProjectName string `pulumi:"projectName"`
	// Properties of the group.
	Properties GroupProperties `pulumi:"properties"`
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a AssessmentProjectGroup resource.
type AssessmentProjectGroupArgs struct {
	// For optimistic concurrency control.
	ETag pulumi.StringPtrInput
	// Unique name of a group within a project.
	Name pulumi.StringInput
	// Name of the Azure Migrate project.
	ProjectName pulumi.StringInput
	// Properties of the group.
	Properties GroupPropertiesInput
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName pulumi.StringInput
}

func (AssessmentProjectGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentProjectGroupArgs)(nil)).Elem()
}
