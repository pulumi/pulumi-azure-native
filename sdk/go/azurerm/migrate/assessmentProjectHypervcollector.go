// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package migrate

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AssessmentProjectHypervcollector struct {
	pulumi.CustomResourceState

	ETag       pulumi.StringPtrOutput            `pulumi:"eTag"`
	Name       pulumi.StringOutput               `pulumi:"name"`
	Properties CollectorPropertiesResponseOutput `pulumi:"properties"`
	Type       pulumi.StringOutput               `pulumi:"type"`
}

// NewAssessmentProjectHypervcollector registers a new resource with the given unique name, arguments, and options.
func NewAssessmentProjectHypervcollector(ctx *pulumi.Context,
	name string, args *AssessmentProjectHypervcollectorArgs, opts ...pulumi.ResourceOption) (*AssessmentProjectHypervcollector, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ProjectName == nil {
		return nil, errors.New("missing required argument 'ProjectName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &AssessmentProjectHypervcollectorArgs{}
	}
	var resource AssessmentProjectHypervcollector
	err := ctx.RegisterResource("azurerm:migrate:AssessmentProjectHypervcollector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssessmentProjectHypervcollector gets an existing AssessmentProjectHypervcollector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssessmentProjectHypervcollector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssessmentProjectHypervcollectorState, opts ...pulumi.ResourceOption) (*AssessmentProjectHypervcollector, error) {
	var resource AssessmentProjectHypervcollector
	err := ctx.ReadResource("azurerm:migrate:AssessmentProjectHypervcollector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AssessmentProjectHypervcollector resources.
type assessmentProjectHypervcollectorState struct {
	ETag       *string                      `pulumi:"eTag"`
	Name       *string                      `pulumi:"name"`
	Properties *CollectorPropertiesResponse `pulumi:"properties"`
	Type       *string                      `pulumi:"type"`
}

type AssessmentProjectHypervcollectorState struct {
	ETag       pulumi.StringPtrInput
	Name       pulumi.StringPtrInput
	Properties CollectorPropertiesResponsePtrInput
	Type       pulumi.StringPtrInput
}

func (AssessmentProjectHypervcollectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentProjectHypervcollectorState)(nil)).Elem()
}

type assessmentProjectHypervcollectorArgs struct {
	ETag *string `pulumi:"eTag"`
	// Unique name of a Hyper-V collector within a project.
	Name string `pulumi:"name"`
	// Name of the Azure Migrate project.
	ProjectName string               `pulumi:"projectName"`
	Properties  *CollectorProperties `pulumi:"properties"`
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a AssessmentProjectHypervcollector resource.
type AssessmentProjectHypervcollectorArgs struct {
	ETag pulumi.StringPtrInput
	// Unique name of a Hyper-V collector within a project.
	Name pulumi.StringInput
	// Name of the Azure Migrate project.
	ProjectName pulumi.StringInput
	Properties  CollectorPropertiesPtrInput
	// Name of the Azure Resource Group that project is part of.
	ResourceGroupName pulumi.StringInput
}

func (AssessmentProjectHypervcollectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentProjectHypervcollectorArgs)(nil)).Elem()
}
