// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20191001preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Defines the properties for automatic resolution.
type AutomaticResolutionPropertiesResponse struct {
	// Gets the MoveResource ARM ID of
	// the dependent resource if the resolution type is Automatic.
	MoveResourceId *string `pulumi:"moveResourceId"`
}

// Defines the properties for automatic resolution.
type AutomaticResolutionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AutomaticResolutionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomaticResolutionPropertiesResponse)(nil)).Elem()
}

func (o AutomaticResolutionPropertiesResponseOutput) ToAutomaticResolutionPropertiesResponseOutput() AutomaticResolutionPropertiesResponseOutput {
	return o
}

func (o AutomaticResolutionPropertiesResponseOutput) ToAutomaticResolutionPropertiesResponseOutputWithContext(ctx context.Context) AutomaticResolutionPropertiesResponseOutput {
	return o
}

func (o AutomaticResolutionPropertiesResponseOutput) ToAutomaticResolutionPropertiesResponsePtrOutput() AutomaticResolutionPropertiesResponsePtrOutput {
	return o.ToAutomaticResolutionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AutomaticResolutionPropertiesResponseOutput) ToAutomaticResolutionPropertiesResponsePtrOutputWithContext(ctx context.Context) AutomaticResolutionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AutomaticResolutionPropertiesResponse) *AutomaticResolutionPropertiesResponse {
		return &v
	}).(AutomaticResolutionPropertiesResponsePtrOutput)
}

// Gets the MoveResource ARM ID of
// the dependent resource if the resolution type is Automatic.
func (o AutomaticResolutionPropertiesResponseOutput) MoveResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomaticResolutionPropertiesResponse) *string { return v.MoveResourceId }).(pulumi.StringPtrOutput)
}

type AutomaticResolutionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AutomaticResolutionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomaticResolutionPropertiesResponse)(nil)).Elem()
}

func (o AutomaticResolutionPropertiesResponsePtrOutput) ToAutomaticResolutionPropertiesResponsePtrOutput() AutomaticResolutionPropertiesResponsePtrOutput {
	return o
}

func (o AutomaticResolutionPropertiesResponsePtrOutput) ToAutomaticResolutionPropertiesResponsePtrOutputWithContext(ctx context.Context) AutomaticResolutionPropertiesResponsePtrOutput {
	return o
}

func (o AutomaticResolutionPropertiesResponsePtrOutput) Elem() AutomaticResolutionPropertiesResponseOutput {
	return o.ApplyT(func(v *AutomaticResolutionPropertiesResponse) AutomaticResolutionPropertiesResponse { return *v }).(AutomaticResolutionPropertiesResponseOutput)
}

// Gets the MoveResource ARM ID of
// the dependent resource if the resolution type is Automatic.
func (o AutomaticResolutionPropertiesResponsePtrOutput) MoveResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomaticResolutionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.MoveResourceId
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the availability set resource settings.
type AvailabilitySetResourceSettings struct {
	// Gets or sets the target fault domain.
	FaultDomain *int `pulumi:"faultDomain"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Gets or sets the target update domain.
	UpdateDomain *int `pulumi:"updateDomain"`
}

// AvailabilitySetResourceSettingsInput is an input type that accepts AvailabilitySetResourceSettingsArgs and AvailabilitySetResourceSettingsOutput values.
// You can construct a concrete instance of `AvailabilitySetResourceSettingsInput` via:
//
//          AvailabilitySetResourceSettingsArgs{...}
type AvailabilitySetResourceSettingsInput interface {
	pulumi.Input

	ToAvailabilitySetResourceSettingsOutput() AvailabilitySetResourceSettingsOutput
	ToAvailabilitySetResourceSettingsOutputWithContext(context.Context) AvailabilitySetResourceSettingsOutput
}

// Gets or sets the availability set resource settings.
type AvailabilitySetResourceSettingsArgs struct {
	// Gets or sets the target fault domain.
	FaultDomain pulumi.IntPtrInput `pulumi:"faultDomain"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Gets or sets the target update domain.
	UpdateDomain pulumi.IntPtrInput `pulumi:"updateDomain"`
}

func (AvailabilitySetResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilitySetResourceSettings)(nil)).Elem()
}

func (i AvailabilitySetResourceSettingsArgs) ToAvailabilitySetResourceSettingsOutput() AvailabilitySetResourceSettingsOutput {
	return i.ToAvailabilitySetResourceSettingsOutputWithContext(context.Background())
}

func (i AvailabilitySetResourceSettingsArgs) ToAvailabilitySetResourceSettingsOutputWithContext(ctx context.Context) AvailabilitySetResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailabilitySetResourceSettingsOutput)
}

// Gets or sets the availability set resource settings.
type AvailabilitySetResourceSettingsResponse struct {
	// Gets or sets the target fault domain.
	FaultDomain *int `pulumi:"faultDomain"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Gets or sets the target update domain.
	UpdateDomain *int `pulumi:"updateDomain"`
}

// Gets or sets the availability set resource settings.
type AvailabilitySetResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (AvailabilitySetResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilitySetResourceSettingsResponse)(nil)).Elem()
}

func (o AvailabilitySetResourceSettingsResponseOutput) ToAvailabilitySetResourceSettingsResponseOutput() AvailabilitySetResourceSettingsResponseOutput {
	return o
}

func (o AvailabilitySetResourceSettingsResponseOutput) ToAvailabilitySetResourceSettingsResponseOutputWithContext(ctx context.Context) AvailabilitySetResourceSettingsResponseOutput {
	return o
}

// Gets or sets the target fault domain.
func (o AvailabilitySetResourceSettingsResponseOutput) FaultDomain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilitySetResourceSettingsResponse) *int { return v.FaultDomain }).(pulumi.IntPtrOutput)
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
func (o AvailabilitySetResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilitySetResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o AvailabilitySetResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilitySetResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Gets or sets the target update domain.
func (o AvailabilitySetResourceSettingsResponseOutput) UpdateDomain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AvailabilitySetResourceSettingsResponse) *int { return v.UpdateDomain }).(pulumi.IntPtrOutput)
}

// Defines the MSI properties of the Move Collection.
type Identity struct {
	// Gets or sets the principal id.
	PrincipalId *string `pulumi:"principalId"`
	// Gets or sets the tenant id.
	TenantId *string `pulumi:"tenantId"`
	// The type of identity used for the resource mover service.
	Type *string `pulumi:"type"`
}

// IdentityInput is an input type that accepts IdentityArgs and IdentityOutput values.
// You can construct a concrete instance of `IdentityInput` via:
//
//          IdentityArgs{...}
type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(context.Context) IdentityOutput
}

// Defines the MSI properties of the Move Collection.
type IdentityArgs struct {
	// Gets or sets the principal id.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// Gets or sets the tenant id.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The type of identity used for the resource mover service.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (i IdentityArgs) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

func (i IdentityArgs) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput).ToIdentityPtrOutputWithContext(ctx)
}

// IdentityPtrInput is an input type that accepts IdentityArgs, IdentityPtr and IdentityPtrOutput values.
// You can construct a concrete instance of `IdentityPtrInput` via:
//
//          IdentityArgs{...}
//
//  or:
//
//          nil
type IdentityPtrInput interface {
	pulumi.Input

	ToIdentityPtrOutput() IdentityPtrOutput
	ToIdentityPtrOutputWithContext(context.Context) IdentityPtrOutput
}

type identityPtrType IdentityArgs

func IdentityPtr(v *IdentityArgs) IdentityPtrInput {
	return (*identityPtrType)(v)
}

func (*identityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *identityPtrType) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i *identityPtrType) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPtrOutput)
}

// Defines the MSI properties of the Move Collection.
type IdentityResponse struct {
	// Gets or sets the principal id.
	PrincipalId *string `pulumi:"principalId"`
	// Gets or sets the tenant id.
	TenantId *string `pulumi:"tenantId"`
	// The type of identity used for the resource mover service.
	Type *string `pulumi:"type"`
}

// Defines the MSI properties of the Move Collection.
type IdentityResponseOutput struct{ *pulumi.OutputState }

func (IdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (o IdentityResponseOutput) ToIdentityResponseOutput() IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o.ApplyT(func(v IdentityResponse) *IdentityResponse {
		return &v
	}).(IdentityResponsePtrOutput)
}

// Gets or sets the principal id.
func (o IdentityResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// Gets or sets the tenant id.
func (o IdentityResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The type of identity used for the resource mover service.
func (o IdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) Elem() IdentityResponseOutput {
	return o.ApplyT(func(v *IdentityResponse) IdentityResponse { return *v }).(IdentityResponseOutput)
}

// Gets or sets the principal id.
func (o IdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the tenant id.
func (o IdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of identity used for the resource mover service.
func (o IdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Defines the job status.
type JobStatusResponse struct {
	// Defines the job name.
	JobName *string `pulumi:"jobName"`
	// Gets or sets the monitoring job percentage.
	JobProgress string `pulumi:"jobProgress"`
}

// Defines the job status.
type JobStatusResponseOutput struct{ *pulumi.OutputState }

func (JobStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStatusResponse)(nil)).Elem()
}

func (o JobStatusResponseOutput) ToJobStatusResponseOutput() JobStatusResponseOutput {
	return o
}

func (o JobStatusResponseOutput) ToJobStatusResponseOutputWithContext(ctx context.Context) JobStatusResponseOutput {
	return o
}

func (o JobStatusResponseOutput) ToJobStatusResponsePtrOutput() JobStatusResponsePtrOutput {
	return o.ToJobStatusResponsePtrOutputWithContext(context.Background())
}

func (o JobStatusResponseOutput) ToJobStatusResponsePtrOutputWithContext(ctx context.Context) JobStatusResponsePtrOutput {
	return o.ApplyT(func(v JobStatusResponse) *JobStatusResponse {
		return &v
	}).(JobStatusResponsePtrOutput)
}

// Defines the job name.
func (o JobStatusResponseOutput) JobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStatusResponse) *string { return v.JobName }).(pulumi.StringPtrOutput)
}

// Gets or sets the monitoring job percentage.
func (o JobStatusResponseOutput) JobProgress() pulumi.StringOutput {
	return o.ApplyT(func(v JobStatusResponse) string { return v.JobProgress }).(pulumi.StringOutput)
}

type JobStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (JobStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStatusResponse)(nil)).Elem()
}

func (o JobStatusResponsePtrOutput) ToJobStatusResponsePtrOutput() JobStatusResponsePtrOutput {
	return o
}

func (o JobStatusResponsePtrOutput) ToJobStatusResponsePtrOutputWithContext(ctx context.Context) JobStatusResponsePtrOutput {
	return o
}

func (o JobStatusResponsePtrOutput) Elem() JobStatusResponseOutput {
	return o.ApplyT(func(v *JobStatusResponse) JobStatusResponse { return *v }).(JobStatusResponseOutput)
}

// Defines the job name.
func (o JobStatusResponsePtrOutput) JobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.JobName
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the monitoring job percentage.
func (o JobStatusResponsePtrOutput) JobProgress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.JobProgress
	}).(pulumi.StringPtrOutput)
}

// Defines load balancer backend address pool properties.
type LBBackendAddressPoolResourceSettings struct {
	// Gets or sets the backend address pool name.
	Name *string `pulumi:"name"`
}

// LBBackendAddressPoolResourceSettingsInput is an input type that accepts LBBackendAddressPoolResourceSettingsArgs and LBBackendAddressPoolResourceSettingsOutput values.
// You can construct a concrete instance of `LBBackendAddressPoolResourceSettingsInput` via:
//
//          LBBackendAddressPoolResourceSettingsArgs{...}
type LBBackendAddressPoolResourceSettingsInput interface {
	pulumi.Input

	ToLBBackendAddressPoolResourceSettingsOutput() LBBackendAddressPoolResourceSettingsOutput
	ToLBBackendAddressPoolResourceSettingsOutputWithContext(context.Context) LBBackendAddressPoolResourceSettingsOutput
}

// Defines load balancer backend address pool properties.
type LBBackendAddressPoolResourceSettingsArgs struct {
	// Gets or sets the backend address pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LBBackendAddressPoolResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBBackendAddressPoolResourceSettings)(nil)).Elem()
}

func (i LBBackendAddressPoolResourceSettingsArgs) ToLBBackendAddressPoolResourceSettingsOutput() LBBackendAddressPoolResourceSettingsOutput {
	return i.ToLBBackendAddressPoolResourceSettingsOutputWithContext(context.Background())
}

func (i LBBackendAddressPoolResourceSettingsArgs) ToLBBackendAddressPoolResourceSettingsOutputWithContext(ctx context.Context) LBBackendAddressPoolResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBBackendAddressPoolResourceSettingsOutput)
}

// LBBackendAddressPoolResourceSettingsArrayInput is an input type that accepts LBBackendAddressPoolResourceSettingsArray and LBBackendAddressPoolResourceSettingsArrayOutput values.
// You can construct a concrete instance of `LBBackendAddressPoolResourceSettingsArrayInput` via:
//
//          LBBackendAddressPoolResourceSettingsArray{ LBBackendAddressPoolResourceSettingsArgs{...} }
type LBBackendAddressPoolResourceSettingsArrayInput interface {
	pulumi.Input

	ToLBBackendAddressPoolResourceSettingsArrayOutput() LBBackendAddressPoolResourceSettingsArrayOutput
	ToLBBackendAddressPoolResourceSettingsArrayOutputWithContext(context.Context) LBBackendAddressPoolResourceSettingsArrayOutput
}

type LBBackendAddressPoolResourceSettingsArray []LBBackendAddressPoolResourceSettingsInput

func (LBBackendAddressPoolResourceSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBBackendAddressPoolResourceSettings)(nil)).Elem()
}

func (i LBBackendAddressPoolResourceSettingsArray) ToLBBackendAddressPoolResourceSettingsArrayOutput() LBBackendAddressPoolResourceSettingsArrayOutput {
	return i.ToLBBackendAddressPoolResourceSettingsArrayOutputWithContext(context.Background())
}

func (i LBBackendAddressPoolResourceSettingsArray) ToLBBackendAddressPoolResourceSettingsArrayOutputWithContext(ctx context.Context) LBBackendAddressPoolResourceSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBBackendAddressPoolResourceSettingsArrayOutput)
}

// Defines load balancer backend address pool properties.
type LBBackendAddressPoolResourceSettingsResponse struct {
	// Gets or sets the backend address pool name.
	Name *string `pulumi:"name"`
}

// Defines load balancer backend address pool properties.
type LBBackendAddressPoolResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (LBBackendAddressPoolResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBBackendAddressPoolResourceSettingsResponse)(nil)).Elem()
}

func (o LBBackendAddressPoolResourceSettingsResponseOutput) ToLBBackendAddressPoolResourceSettingsResponseOutput() LBBackendAddressPoolResourceSettingsResponseOutput {
	return o
}

func (o LBBackendAddressPoolResourceSettingsResponseOutput) ToLBBackendAddressPoolResourceSettingsResponseOutputWithContext(ctx context.Context) LBBackendAddressPoolResourceSettingsResponseOutput {
	return o
}

// Gets or sets the backend address pool name.
func (o LBBackendAddressPoolResourceSettingsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBBackendAddressPoolResourceSettingsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LBBackendAddressPoolResourceSettingsResponseArrayOutput struct{ *pulumi.OutputState }

func (LBBackendAddressPoolResourceSettingsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBBackendAddressPoolResourceSettingsResponse)(nil)).Elem()
}

func (o LBBackendAddressPoolResourceSettingsResponseArrayOutput) ToLBBackendAddressPoolResourceSettingsResponseArrayOutput() LBBackendAddressPoolResourceSettingsResponseArrayOutput {
	return o
}

func (o LBBackendAddressPoolResourceSettingsResponseArrayOutput) ToLBBackendAddressPoolResourceSettingsResponseArrayOutputWithContext(ctx context.Context) LBBackendAddressPoolResourceSettingsResponseArrayOutput {
	return o
}

func (o LBBackendAddressPoolResourceSettingsResponseArrayOutput) Index(i pulumi.IntInput) LBBackendAddressPoolResourceSettingsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBBackendAddressPoolResourceSettingsResponse {
		return vs[0].([]LBBackendAddressPoolResourceSettingsResponse)[vs[1].(int)]
	}).(LBBackendAddressPoolResourceSettingsResponseOutput)
}

// Defines load balancer frontend IP configuration properties.
type LBFrontendIPConfigurationResourceSettings struct {
	// Gets or sets the frontend IP configuration name.
	Name *string `pulumi:"name"`
	// Gets or sets the IP address of the Load Balancer.This is only specified if a specific
	// private IP address shall be allocated from the subnet specified in subnetRef.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// Gets or sets PrivateIP allocation method (Static/Dynamic).
	PrivateIpAllocationMethod *string `pulumi:"privateIpAllocationMethod"`
	// Defines reference to subnet.
	Subnet *SubnetReference `pulumi:"subnet"`
	// Gets or sets the csv list of zones.
	Zones *string `pulumi:"zones"`
}

// LBFrontendIPConfigurationResourceSettingsInput is an input type that accepts LBFrontendIPConfigurationResourceSettingsArgs and LBFrontendIPConfigurationResourceSettingsOutput values.
// You can construct a concrete instance of `LBFrontendIPConfigurationResourceSettingsInput` via:
//
//          LBFrontendIPConfigurationResourceSettingsArgs{...}
type LBFrontendIPConfigurationResourceSettingsInput interface {
	pulumi.Input

	ToLBFrontendIPConfigurationResourceSettingsOutput() LBFrontendIPConfigurationResourceSettingsOutput
	ToLBFrontendIPConfigurationResourceSettingsOutputWithContext(context.Context) LBFrontendIPConfigurationResourceSettingsOutput
}

// Defines load balancer frontend IP configuration properties.
type LBFrontendIPConfigurationResourceSettingsArgs struct {
	// Gets or sets the frontend IP configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets or sets the IP address of the Load Balancer.This is only specified if a specific
	// private IP address shall be allocated from the subnet specified in subnetRef.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// Gets or sets PrivateIP allocation method (Static/Dynamic).
	PrivateIpAllocationMethod pulumi.StringPtrInput `pulumi:"privateIpAllocationMethod"`
	// Defines reference to subnet.
	Subnet SubnetReferencePtrInput `pulumi:"subnet"`
	// Gets or sets the csv list of zones.
	Zones pulumi.StringPtrInput `pulumi:"zones"`
}

func (LBFrontendIPConfigurationResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LBFrontendIPConfigurationResourceSettings)(nil)).Elem()
}

func (i LBFrontendIPConfigurationResourceSettingsArgs) ToLBFrontendIPConfigurationResourceSettingsOutput() LBFrontendIPConfigurationResourceSettingsOutput {
	return i.ToLBFrontendIPConfigurationResourceSettingsOutputWithContext(context.Background())
}

func (i LBFrontendIPConfigurationResourceSettingsArgs) ToLBFrontendIPConfigurationResourceSettingsOutputWithContext(ctx context.Context) LBFrontendIPConfigurationResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBFrontendIPConfigurationResourceSettingsOutput)
}

// LBFrontendIPConfigurationResourceSettingsArrayInput is an input type that accepts LBFrontendIPConfigurationResourceSettingsArray and LBFrontendIPConfigurationResourceSettingsArrayOutput values.
// You can construct a concrete instance of `LBFrontendIPConfigurationResourceSettingsArrayInput` via:
//
//          LBFrontendIPConfigurationResourceSettingsArray{ LBFrontendIPConfigurationResourceSettingsArgs{...} }
type LBFrontendIPConfigurationResourceSettingsArrayInput interface {
	pulumi.Input

	ToLBFrontendIPConfigurationResourceSettingsArrayOutput() LBFrontendIPConfigurationResourceSettingsArrayOutput
	ToLBFrontendIPConfigurationResourceSettingsArrayOutputWithContext(context.Context) LBFrontendIPConfigurationResourceSettingsArrayOutput
}

type LBFrontendIPConfigurationResourceSettingsArray []LBFrontendIPConfigurationResourceSettingsInput

func (LBFrontendIPConfigurationResourceSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBFrontendIPConfigurationResourceSettings)(nil)).Elem()
}

func (i LBFrontendIPConfigurationResourceSettingsArray) ToLBFrontendIPConfigurationResourceSettingsArrayOutput() LBFrontendIPConfigurationResourceSettingsArrayOutput {
	return i.ToLBFrontendIPConfigurationResourceSettingsArrayOutputWithContext(context.Background())
}

func (i LBFrontendIPConfigurationResourceSettingsArray) ToLBFrontendIPConfigurationResourceSettingsArrayOutputWithContext(ctx context.Context) LBFrontendIPConfigurationResourceSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBFrontendIPConfigurationResourceSettingsArrayOutput)
}

// Defines load balancer frontend IP configuration properties.
type LBFrontendIPConfigurationResourceSettingsResponse struct {
	// Gets or sets the frontend IP configuration name.
	Name *string `pulumi:"name"`
	// Gets or sets the IP address of the Load Balancer.This is only specified if a specific
	// private IP address shall be allocated from the subnet specified in subnetRef.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// Gets or sets PrivateIP allocation method (Static/Dynamic).
	PrivateIpAllocationMethod *string `pulumi:"privateIpAllocationMethod"`
	// Defines reference to subnet.
	Subnet *SubnetReferenceResponse `pulumi:"subnet"`
	// Gets or sets the csv list of zones.
	Zones *string `pulumi:"zones"`
}

// Defines load balancer frontend IP configuration properties.
type LBFrontendIPConfigurationResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (LBFrontendIPConfigurationResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LBFrontendIPConfigurationResourceSettingsResponse)(nil)).Elem()
}

func (o LBFrontendIPConfigurationResourceSettingsResponseOutput) ToLBFrontendIPConfigurationResourceSettingsResponseOutput() LBFrontendIPConfigurationResourceSettingsResponseOutput {
	return o
}

func (o LBFrontendIPConfigurationResourceSettingsResponseOutput) ToLBFrontendIPConfigurationResourceSettingsResponseOutputWithContext(ctx context.Context) LBFrontendIPConfigurationResourceSettingsResponseOutput {
	return o
}

// Gets or sets the frontend IP configuration name.
func (o LBFrontendIPConfigurationResourceSettingsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBFrontendIPConfigurationResourceSettingsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets or sets the IP address of the Load Balancer.This is only specified if a specific
// private IP address shall be allocated from the subnet specified in subnetRef.
func (o LBFrontendIPConfigurationResourceSettingsResponseOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBFrontendIPConfigurationResourceSettingsResponse) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// Gets or sets PrivateIP allocation method (Static/Dynamic).
func (o LBFrontendIPConfigurationResourceSettingsResponseOutput) PrivateIpAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBFrontendIPConfigurationResourceSettingsResponse) *string { return v.PrivateIpAllocationMethod }).(pulumi.StringPtrOutput)
}

// Defines reference to subnet.
func (o LBFrontendIPConfigurationResourceSettingsResponseOutput) Subnet() SubnetReferenceResponsePtrOutput {
	return o.ApplyT(func(v LBFrontendIPConfigurationResourceSettingsResponse) *SubnetReferenceResponse { return v.Subnet }).(SubnetReferenceResponsePtrOutput)
}

// Gets or sets the csv list of zones.
func (o LBFrontendIPConfigurationResourceSettingsResponseOutput) Zones() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LBFrontendIPConfigurationResourceSettingsResponse) *string { return v.Zones }).(pulumi.StringPtrOutput)
}

type LBFrontendIPConfigurationResourceSettingsResponseArrayOutput struct{ *pulumi.OutputState }

func (LBFrontendIPConfigurationResourceSettingsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LBFrontendIPConfigurationResourceSettingsResponse)(nil)).Elem()
}

func (o LBFrontendIPConfigurationResourceSettingsResponseArrayOutput) ToLBFrontendIPConfigurationResourceSettingsResponseArrayOutput() LBFrontendIPConfigurationResourceSettingsResponseArrayOutput {
	return o
}

func (o LBFrontendIPConfigurationResourceSettingsResponseArrayOutput) ToLBFrontendIPConfigurationResourceSettingsResponseArrayOutputWithContext(ctx context.Context) LBFrontendIPConfigurationResourceSettingsResponseArrayOutput {
	return o
}

func (o LBFrontendIPConfigurationResourceSettingsResponseArrayOutput) Index(i pulumi.IntInput) LBFrontendIPConfigurationResourceSettingsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LBFrontendIPConfigurationResourceSettingsResponse {
		return vs[0].([]LBFrontendIPConfigurationResourceSettingsResponse)[vs[1].(int)]
	}).(LBFrontendIPConfigurationResourceSettingsResponseOutput)
}

// Defines reference to load balancer backend address pools.
type LoadBalancerBackendAddressPoolReference struct {
	// Gets the name of the proxy resource on the target side.
	Name *string `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId string `pulumi:"sourceArmResourceId"`
}

// LoadBalancerBackendAddressPoolReferenceInput is an input type that accepts LoadBalancerBackendAddressPoolReferenceArgs and LoadBalancerBackendAddressPoolReferenceOutput values.
// You can construct a concrete instance of `LoadBalancerBackendAddressPoolReferenceInput` via:
//
//          LoadBalancerBackendAddressPoolReferenceArgs{...}
type LoadBalancerBackendAddressPoolReferenceInput interface {
	pulumi.Input

	ToLoadBalancerBackendAddressPoolReferenceOutput() LoadBalancerBackendAddressPoolReferenceOutput
	ToLoadBalancerBackendAddressPoolReferenceOutputWithContext(context.Context) LoadBalancerBackendAddressPoolReferenceOutput
}

// Defines reference to load balancer backend address pools.
type LoadBalancerBackendAddressPoolReferenceArgs struct {
	// Gets the name of the proxy resource on the target side.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId pulumi.StringInput `pulumi:"sourceArmResourceId"`
}

func (LoadBalancerBackendAddressPoolReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBackendAddressPoolReference)(nil)).Elem()
}

func (i LoadBalancerBackendAddressPoolReferenceArgs) ToLoadBalancerBackendAddressPoolReferenceOutput() LoadBalancerBackendAddressPoolReferenceOutput {
	return i.ToLoadBalancerBackendAddressPoolReferenceOutputWithContext(context.Background())
}

func (i LoadBalancerBackendAddressPoolReferenceArgs) ToLoadBalancerBackendAddressPoolReferenceOutputWithContext(ctx context.Context) LoadBalancerBackendAddressPoolReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerBackendAddressPoolReferenceOutput)
}

// LoadBalancerBackendAddressPoolReferenceArrayInput is an input type that accepts LoadBalancerBackendAddressPoolReferenceArray and LoadBalancerBackendAddressPoolReferenceArrayOutput values.
// You can construct a concrete instance of `LoadBalancerBackendAddressPoolReferenceArrayInput` via:
//
//          LoadBalancerBackendAddressPoolReferenceArray{ LoadBalancerBackendAddressPoolReferenceArgs{...} }
type LoadBalancerBackendAddressPoolReferenceArrayInput interface {
	pulumi.Input

	ToLoadBalancerBackendAddressPoolReferenceArrayOutput() LoadBalancerBackendAddressPoolReferenceArrayOutput
	ToLoadBalancerBackendAddressPoolReferenceArrayOutputWithContext(context.Context) LoadBalancerBackendAddressPoolReferenceArrayOutput
}

type LoadBalancerBackendAddressPoolReferenceArray []LoadBalancerBackendAddressPoolReferenceInput

func (LoadBalancerBackendAddressPoolReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerBackendAddressPoolReference)(nil)).Elem()
}

func (i LoadBalancerBackendAddressPoolReferenceArray) ToLoadBalancerBackendAddressPoolReferenceArrayOutput() LoadBalancerBackendAddressPoolReferenceArrayOutput {
	return i.ToLoadBalancerBackendAddressPoolReferenceArrayOutputWithContext(context.Background())
}

func (i LoadBalancerBackendAddressPoolReferenceArray) ToLoadBalancerBackendAddressPoolReferenceArrayOutputWithContext(ctx context.Context) LoadBalancerBackendAddressPoolReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerBackendAddressPoolReferenceArrayOutput)
}

// Defines reference to load balancer backend address pools.
type LoadBalancerBackendAddressPoolReferenceResponse struct {
	// Gets the name of the proxy resource on the target side.
	Name *string `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId string `pulumi:"sourceArmResourceId"`
}

// Defines reference to load balancer backend address pools.
type LoadBalancerBackendAddressPoolReferenceResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendAddressPoolReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBackendAddressPoolReferenceResponse)(nil)).Elem()
}

func (o LoadBalancerBackendAddressPoolReferenceResponseOutput) ToLoadBalancerBackendAddressPoolReferenceResponseOutput() LoadBalancerBackendAddressPoolReferenceResponseOutput {
	return o
}

func (o LoadBalancerBackendAddressPoolReferenceResponseOutput) ToLoadBalancerBackendAddressPoolReferenceResponseOutputWithContext(ctx context.Context) LoadBalancerBackendAddressPoolReferenceResponseOutput {
	return o
}

// Gets the name of the proxy resource on the target side.
func (o LoadBalancerBackendAddressPoolReferenceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressPoolReferenceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o LoadBalancerBackendAddressPoolReferenceResponseOutput) SourceArmResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressPoolReferenceResponse) string { return v.SourceArmResourceId }).(pulumi.StringOutput)
}

type LoadBalancerBackendAddressPoolReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendAddressPoolReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerBackendAddressPoolReferenceResponse)(nil)).Elem()
}

func (o LoadBalancerBackendAddressPoolReferenceResponseArrayOutput) ToLoadBalancerBackendAddressPoolReferenceResponseArrayOutput() LoadBalancerBackendAddressPoolReferenceResponseArrayOutput {
	return o
}

func (o LoadBalancerBackendAddressPoolReferenceResponseArrayOutput) ToLoadBalancerBackendAddressPoolReferenceResponseArrayOutputWithContext(ctx context.Context) LoadBalancerBackendAddressPoolReferenceResponseArrayOutput {
	return o
}

func (o LoadBalancerBackendAddressPoolReferenceResponseArrayOutput) Index(i pulumi.IntInput) LoadBalancerBackendAddressPoolReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerBackendAddressPoolReferenceResponse {
		return vs[0].([]LoadBalancerBackendAddressPoolReferenceResponse)[vs[1].(int)]
	}).(LoadBalancerBackendAddressPoolReferenceResponseOutput)
}

// Defines the load balancer resource settings.
type LoadBalancerResourceSettings struct {
	// Gets or sets the backend address pools of the load balancer.
	BackendAddressPools []LBBackendAddressPoolResourceSettings `pulumi:"backendAddressPools"`
	// Gets or sets the frontend IP configurations of the load balancer.
	FrontendIPConfigurations []LBFrontendIPConfigurationResourceSettings `pulumi:"frontendIPConfigurations"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets load balancer sku (Basic/Standard).
	Sku *string `pulumi:"sku"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Gets or sets the csv list of zones common for all frontend IP configurations. Note this is given
	//  precedence only if frontend IP configurations settings are not present.
	Zones *string `pulumi:"zones"`
}

// LoadBalancerResourceSettingsInput is an input type that accepts LoadBalancerResourceSettingsArgs and LoadBalancerResourceSettingsOutput values.
// You can construct a concrete instance of `LoadBalancerResourceSettingsInput` via:
//
//          LoadBalancerResourceSettingsArgs{...}
type LoadBalancerResourceSettingsInput interface {
	pulumi.Input

	ToLoadBalancerResourceSettingsOutput() LoadBalancerResourceSettingsOutput
	ToLoadBalancerResourceSettingsOutputWithContext(context.Context) LoadBalancerResourceSettingsOutput
}

// Defines the load balancer resource settings.
type LoadBalancerResourceSettingsArgs struct {
	// Gets or sets the backend address pools of the load balancer.
	BackendAddressPools LBBackendAddressPoolResourceSettingsArrayInput `pulumi:"backendAddressPools"`
	// Gets or sets the frontend IP configurations of the load balancer.
	FrontendIPConfigurations LBFrontendIPConfigurationResourceSettingsArrayInput `pulumi:"frontendIPConfigurations"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets load balancer sku (Basic/Standard).
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Gets or sets the csv list of zones common for all frontend IP configurations. Note this is given
	//  precedence only if frontend IP configurations settings are not present.
	Zones pulumi.StringPtrInput `pulumi:"zones"`
}

func (LoadBalancerResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerResourceSettings)(nil)).Elem()
}

func (i LoadBalancerResourceSettingsArgs) ToLoadBalancerResourceSettingsOutput() LoadBalancerResourceSettingsOutput {
	return i.ToLoadBalancerResourceSettingsOutputWithContext(context.Background())
}

func (i LoadBalancerResourceSettingsArgs) ToLoadBalancerResourceSettingsOutputWithContext(ctx context.Context) LoadBalancerResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerResourceSettingsOutput)
}

// Defines the load balancer resource settings.
type LoadBalancerResourceSettingsResponse struct {
	// Gets or sets the backend address pools of the load balancer.
	BackendAddressPools []LBBackendAddressPoolResourceSettingsResponse `pulumi:"backendAddressPools"`
	// Gets or sets the frontend IP configurations of the load balancer.
	FrontendIPConfigurations []LBFrontendIPConfigurationResourceSettingsResponse `pulumi:"frontendIPConfigurations"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets load balancer sku (Basic/Standard).
	Sku *string `pulumi:"sku"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Gets or sets the csv list of zones common for all frontend IP configurations. Note this is given
	//  precedence only if frontend IP configurations settings are not present.
	Zones *string `pulumi:"zones"`
}

// Defines the load balancer resource settings.
type LoadBalancerResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerResourceSettingsResponse)(nil)).Elem()
}

func (o LoadBalancerResourceSettingsResponseOutput) ToLoadBalancerResourceSettingsResponseOutput() LoadBalancerResourceSettingsResponseOutput {
	return o
}

func (o LoadBalancerResourceSettingsResponseOutput) ToLoadBalancerResourceSettingsResponseOutputWithContext(ctx context.Context) LoadBalancerResourceSettingsResponseOutput {
	return o
}

// Gets or sets the backend address pools of the load balancer.
func (o LoadBalancerResourceSettingsResponseOutput) BackendAddressPools() LBBackendAddressPoolResourceSettingsResponseArrayOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettingsResponse) []LBBackendAddressPoolResourceSettingsResponse {
		return v.BackendAddressPools
	}).(LBBackendAddressPoolResourceSettingsResponseArrayOutput)
}

// Gets or sets the frontend IP configurations of the load balancer.
func (o LoadBalancerResourceSettingsResponseOutput) FrontendIPConfigurations() LBFrontendIPConfigurationResourceSettingsResponseArrayOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettingsResponse) []LBFrontendIPConfigurationResourceSettingsResponse {
		return v.FrontendIPConfigurations
	}).(LBFrontendIPConfigurationResourceSettingsResponseArrayOutput)
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
func (o LoadBalancerResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets load balancer sku (Basic/Standard).
func (o LoadBalancerResourceSettingsResponseOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettingsResponse) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// Gets or sets the target Resource name.
func (o LoadBalancerResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Gets or sets the csv list of zones common for all frontend IP configurations. Note this is given
//  precedence only if frontend IP configurations settings are not present.
func (o LoadBalancerResourceSettingsResponseOutput) Zones() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerResourceSettingsResponse) *string { return v.Zones }).(pulumi.StringPtrOutput)
}

// Defines the properties for manual resolution.
type ManualResolutionPropertiesResponse struct {
	// Gets or sets the target resource ARM ID of the dependent resource if the resource type is Manual.
	TargetId *string `pulumi:"targetId"`
}

// Defines the properties for manual resolution.
type ManualResolutionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ManualResolutionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualResolutionPropertiesResponse)(nil)).Elem()
}

func (o ManualResolutionPropertiesResponseOutput) ToManualResolutionPropertiesResponseOutput() ManualResolutionPropertiesResponseOutput {
	return o
}

func (o ManualResolutionPropertiesResponseOutput) ToManualResolutionPropertiesResponseOutputWithContext(ctx context.Context) ManualResolutionPropertiesResponseOutput {
	return o
}

func (o ManualResolutionPropertiesResponseOutput) ToManualResolutionPropertiesResponsePtrOutput() ManualResolutionPropertiesResponsePtrOutput {
	return o.ToManualResolutionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ManualResolutionPropertiesResponseOutput) ToManualResolutionPropertiesResponsePtrOutputWithContext(ctx context.Context) ManualResolutionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ManualResolutionPropertiesResponse) *ManualResolutionPropertiesResponse {
		return &v
	}).(ManualResolutionPropertiesResponsePtrOutput)
}

// Gets or sets the target resource ARM ID of the dependent resource if the resource type is Manual.
func (o ManualResolutionPropertiesResponseOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManualResolutionPropertiesResponse) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

type ManualResolutionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ManualResolutionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManualResolutionPropertiesResponse)(nil)).Elem()
}

func (o ManualResolutionPropertiesResponsePtrOutput) ToManualResolutionPropertiesResponsePtrOutput() ManualResolutionPropertiesResponsePtrOutput {
	return o
}

func (o ManualResolutionPropertiesResponsePtrOutput) ToManualResolutionPropertiesResponsePtrOutputWithContext(ctx context.Context) ManualResolutionPropertiesResponsePtrOutput {
	return o
}

func (o ManualResolutionPropertiesResponsePtrOutput) Elem() ManualResolutionPropertiesResponseOutput {
	return o.ApplyT(func(v *ManualResolutionPropertiesResponse) ManualResolutionPropertiesResponse { return *v }).(ManualResolutionPropertiesResponseOutput)
}

// Gets or sets the target resource ARM ID of the dependent resource if the resource type is Manual.
func (o ManualResolutionPropertiesResponsePtrOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManualResolutionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetId
	}).(pulumi.StringPtrOutput)
}

// Defines the move collection properties.
type MoveCollectionProperties struct {
	// Defines the provisioning states.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Gets or sets the source region.
	SourceRegion string `pulumi:"sourceRegion"`
	// Gets or sets the target region.
	TargetRegion string `pulumi:"targetRegion"`
}

// MoveCollectionPropertiesInput is an input type that accepts MoveCollectionPropertiesArgs and MoveCollectionPropertiesOutput values.
// You can construct a concrete instance of `MoveCollectionPropertiesInput` via:
//
//          MoveCollectionPropertiesArgs{...}
type MoveCollectionPropertiesInput interface {
	pulumi.Input

	ToMoveCollectionPropertiesOutput() MoveCollectionPropertiesOutput
	ToMoveCollectionPropertiesOutputWithContext(context.Context) MoveCollectionPropertiesOutput
}

// Defines the move collection properties.
type MoveCollectionPropertiesArgs struct {
	// Defines the provisioning states.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Gets or sets the source region.
	SourceRegion pulumi.StringInput `pulumi:"sourceRegion"`
	// Gets or sets the target region.
	TargetRegion pulumi.StringInput `pulumi:"targetRegion"`
}

func (MoveCollectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveCollectionProperties)(nil)).Elem()
}

func (i MoveCollectionPropertiesArgs) ToMoveCollectionPropertiesOutput() MoveCollectionPropertiesOutput {
	return i.ToMoveCollectionPropertiesOutputWithContext(context.Background())
}

func (i MoveCollectionPropertiesArgs) ToMoveCollectionPropertiesOutputWithContext(ctx context.Context) MoveCollectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveCollectionPropertiesOutput)
}

func (i MoveCollectionPropertiesArgs) ToMoveCollectionPropertiesPtrOutput() MoveCollectionPropertiesPtrOutput {
	return i.ToMoveCollectionPropertiesPtrOutputWithContext(context.Background())
}

func (i MoveCollectionPropertiesArgs) ToMoveCollectionPropertiesPtrOutputWithContext(ctx context.Context) MoveCollectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveCollectionPropertiesOutput).ToMoveCollectionPropertiesPtrOutputWithContext(ctx)
}

// MoveCollectionPropertiesPtrInput is an input type that accepts MoveCollectionPropertiesArgs, MoveCollectionPropertiesPtr and MoveCollectionPropertiesPtrOutput values.
// You can construct a concrete instance of `MoveCollectionPropertiesPtrInput` via:
//
//          MoveCollectionPropertiesArgs{...}
//
//  or:
//
//          nil
type MoveCollectionPropertiesPtrInput interface {
	pulumi.Input

	ToMoveCollectionPropertiesPtrOutput() MoveCollectionPropertiesPtrOutput
	ToMoveCollectionPropertiesPtrOutputWithContext(context.Context) MoveCollectionPropertiesPtrOutput
}

type moveCollectionPropertiesPtrType MoveCollectionPropertiesArgs

func MoveCollectionPropertiesPtr(v *MoveCollectionPropertiesArgs) MoveCollectionPropertiesPtrInput {
	return (*moveCollectionPropertiesPtrType)(v)
}

func (*moveCollectionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveCollectionProperties)(nil)).Elem()
}

func (i *moveCollectionPropertiesPtrType) ToMoveCollectionPropertiesPtrOutput() MoveCollectionPropertiesPtrOutput {
	return i.ToMoveCollectionPropertiesPtrOutputWithContext(context.Background())
}

func (i *moveCollectionPropertiesPtrType) ToMoveCollectionPropertiesPtrOutputWithContext(ctx context.Context) MoveCollectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveCollectionPropertiesPtrOutput)
}

// Defines the move collection properties.
type MoveCollectionPropertiesResponse struct {
	// Defines the provisioning states.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Gets or sets the source region.
	SourceRegion string `pulumi:"sourceRegion"`
	// Gets or sets the target region.
	TargetRegion string `pulumi:"targetRegion"`
}

// Defines the move collection properties.
type MoveCollectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MoveCollectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveCollectionPropertiesResponse)(nil)).Elem()
}

func (o MoveCollectionPropertiesResponseOutput) ToMoveCollectionPropertiesResponseOutput() MoveCollectionPropertiesResponseOutput {
	return o
}

func (o MoveCollectionPropertiesResponseOutput) ToMoveCollectionPropertiesResponseOutputWithContext(ctx context.Context) MoveCollectionPropertiesResponseOutput {
	return o
}

func (o MoveCollectionPropertiesResponseOutput) ToMoveCollectionPropertiesResponsePtrOutput() MoveCollectionPropertiesResponsePtrOutput {
	return o.ToMoveCollectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o MoveCollectionPropertiesResponseOutput) ToMoveCollectionPropertiesResponsePtrOutputWithContext(ctx context.Context) MoveCollectionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v MoveCollectionPropertiesResponse) *MoveCollectionPropertiesResponse {
		return &v
	}).(MoveCollectionPropertiesResponsePtrOutput)
}

// Defines the provisioning states.
func (o MoveCollectionPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveCollectionPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Gets or sets the source region.
func (o MoveCollectionPropertiesResponseOutput) SourceRegion() pulumi.StringOutput {
	return o.ApplyT(func(v MoveCollectionPropertiesResponse) string { return v.SourceRegion }).(pulumi.StringOutput)
}

// Gets or sets the target region.
func (o MoveCollectionPropertiesResponseOutput) TargetRegion() pulumi.StringOutput {
	return o.ApplyT(func(v MoveCollectionPropertiesResponse) string { return v.TargetRegion }).(pulumi.StringOutput)
}

type MoveCollectionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (MoveCollectionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveCollectionPropertiesResponse)(nil)).Elem()
}

func (o MoveCollectionPropertiesResponsePtrOutput) ToMoveCollectionPropertiesResponsePtrOutput() MoveCollectionPropertiesResponsePtrOutput {
	return o
}

func (o MoveCollectionPropertiesResponsePtrOutput) ToMoveCollectionPropertiesResponsePtrOutputWithContext(ctx context.Context) MoveCollectionPropertiesResponsePtrOutput {
	return o
}

func (o MoveCollectionPropertiesResponsePtrOutput) Elem() MoveCollectionPropertiesResponseOutput {
	return o.ApplyT(func(v *MoveCollectionPropertiesResponse) MoveCollectionPropertiesResponse { return *v }).(MoveCollectionPropertiesResponseOutput)
}

// Defines the provisioning states.
func (o MoveCollectionPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveCollectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the source region.
func (o MoveCollectionPropertiesResponsePtrOutput) SourceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveCollectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SourceRegion
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the target region.
func (o MoveCollectionPropertiesResponsePtrOutput) TargetRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveCollectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetRegion
	}).(pulumi.StringPtrOutput)
}

// Defines the dependency override of the move resource.
type MoveResourceDependencyOverride struct {
	// Gets or sets the ARM ID of the dependent resource.
	Id *string `pulumi:"id"`
	// Gets or sets the resource ARM id of either the MoveResource or the resource ARM ID of
	// the dependent resource.
	TargetId *string `pulumi:"targetId"`
}

// MoveResourceDependencyOverrideInput is an input type that accepts MoveResourceDependencyOverrideArgs and MoveResourceDependencyOverrideOutput values.
// You can construct a concrete instance of `MoveResourceDependencyOverrideInput` via:
//
//          MoveResourceDependencyOverrideArgs{...}
type MoveResourceDependencyOverrideInput interface {
	pulumi.Input

	ToMoveResourceDependencyOverrideOutput() MoveResourceDependencyOverrideOutput
	ToMoveResourceDependencyOverrideOutputWithContext(context.Context) MoveResourceDependencyOverrideOutput
}

// Defines the dependency override of the move resource.
type MoveResourceDependencyOverrideArgs struct {
	// Gets or sets the ARM ID of the dependent resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets or sets the resource ARM id of either the MoveResource or the resource ARM ID of
	// the dependent resource.
	TargetId pulumi.StringPtrInput `pulumi:"targetId"`
}

func (MoveResourceDependencyOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceDependencyOverride)(nil)).Elem()
}

func (i MoveResourceDependencyOverrideArgs) ToMoveResourceDependencyOverrideOutput() MoveResourceDependencyOverrideOutput {
	return i.ToMoveResourceDependencyOverrideOutputWithContext(context.Background())
}

func (i MoveResourceDependencyOverrideArgs) ToMoveResourceDependencyOverrideOutputWithContext(ctx context.Context) MoveResourceDependencyOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceDependencyOverrideOutput)
}

// MoveResourceDependencyOverrideArrayInput is an input type that accepts MoveResourceDependencyOverrideArray and MoveResourceDependencyOverrideArrayOutput values.
// You can construct a concrete instance of `MoveResourceDependencyOverrideArrayInput` via:
//
//          MoveResourceDependencyOverrideArray{ MoveResourceDependencyOverrideArgs{...} }
type MoveResourceDependencyOverrideArrayInput interface {
	pulumi.Input

	ToMoveResourceDependencyOverrideArrayOutput() MoveResourceDependencyOverrideArrayOutput
	ToMoveResourceDependencyOverrideArrayOutputWithContext(context.Context) MoveResourceDependencyOverrideArrayOutput
}

type MoveResourceDependencyOverrideArray []MoveResourceDependencyOverrideInput

func (MoveResourceDependencyOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MoveResourceDependencyOverride)(nil)).Elem()
}

func (i MoveResourceDependencyOverrideArray) ToMoveResourceDependencyOverrideArrayOutput() MoveResourceDependencyOverrideArrayOutput {
	return i.ToMoveResourceDependencyOverrideArrayOutputWithContext(context.Background())
}

func (i MoveResourceDependencyOverrideArray) ToMoveResourceDependencyOverrideArrayOutputWithContext(ctx context.Context) MoveResourceDependencyOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourceDependencyOverrideArrayOutput)
}

// Defines the dependency override of the move resource.
type MoveResourceDependencyOverrideResponse struct {
	// Gets or sets the ARM ID of the dependent resource.
	Id *string `pulumi:"id"`
	// Gets or sets the resource ARM id of either the MoveResource or the resource ARM ID of
	// the dependent resource.
	TargetId *string `pulumi:"targetId"`
}

// Defines the dependency override of the move resource.
type MoveResourceDependencyOverrideResponseOutput struct{ *pulumi.OutputState }

func (MoveResourceDependencyOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceDependencyOverrideResponse)(nil)).Elem()
}

func (o MoveResourceDependencyOverrideResponseOutput) ToMoveResourceDependencyOverrideResponseOutput() MoveResourceDependencyOverrideResponseOutput {
	return o
}

func (o MoveResourceDependencyOverrideResponseOutput) ToMoveResourceDependencyOverrideResponseOutputWithContext(ctx context.Context) MoveResourceDependencyOverrideResponseOutput {
	return o
}

// Gets or sets the ARM ID of the dependent resource.
func (o MoveResourceDependencyOverrideResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyOverrideResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets or sets the resource ARM id of either the MoveResource or the resource ARM ID of
// the dependent resource.
func (o MoveResourceDependencyOverrideResponseOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyOverrideResponse) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

type MoveResourceDependencyOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (MoveResourceDependencyOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MoveResourceDependencyOverrideResponse)(nil)).Elem()
}

func (o MoveResourceDependencyOverrideResponseArrayOutput) ToMoveResourceDependencyOverrideResponseArrayOutput() MoveResourceDependencyOverrideResponseArrayOutput {
	return o
}

func (o MoveResourceDependencyOverrideResponseArrayOutput) ToMoveResourceDependencyOverrideResponseArrayOutputWithContext(ctx context.Context) MoveResourceDependencyOverrideResponseArrayOutput {
	return o
}

func (o MoveResourceDependencyOverrideResponseArrayOutput) Index(i pulumi.IntInput) MoveResourceDependencyOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MoveResourceDependencyOverrideResponse {
		return vs[0].([]MoveResourceDependencyOverrideResponse)[vs[1].(int)]
	}).(MoveResourceDependencyOverrideResponseOutput)
}

// Defines the dependency of the move resource.
type MoveResourceDependencyResponse struct {
	// Defines the properties for automatic resolution.
	AutomaticResolution *AutomaticResolutionPropertiesResponse `pulumi:"automaticResolution"`
	// Defines the dependency type.
	DependencyType *string `pulumi:"dependencyType"`
	// Gets the source ARM ID of the dependent resource.
	Id *string `pulumi:"id"`
	// Gets or sets a value indicating whether the dependency is optional.
	IsOptional *string `pulumi:"isOptional"`
	// Defines the properties for manual resolution.
	ManualResolution *ManualResolutionPropertiesResponse `pulumi:"manualResolution"`
	// Gets the dependency resolution status.
	ResolutionStatus *string `pulumi:"resolutionStatus"`
	// Defines the resolution type.
	ResolutionType *string `pulumi:"resolutionType"`
}

// Defines the dependency of the move resource.
type MoveResourceDependencyResponseOutput struct{ *pulumi.OutputState }

func (MoveResourceDependencyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceDependencyResponse)(nil)).Elem()
}

func (o MoveResourceDependencyResponseOutput) ToMoveResourceDependencyResponseOutput() MoveResourceDependencyResponseOutput {
	return o
}

func (o MoveResourceDependencyResponseOutput) ToMoveResourceDependencyResponseOutputWithContext(ctx context.Context) MoveResourceDependencyResponseOutput {
	return o
}

// Defines the properties for automatic resolution.
func (o MoveResourceDependencyResponseOutput) AutomaticResolution() AutomaticResolutionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyResponse) *AutomaticResolutionPropertiesResponse {
		return v.AutomaticResolution
	}).(AutomaticResolutionPropertiesResponsePtrOutput)
}

// Defines the dependency type.
func (o MoveResourceDependencyResponseOutput) DependencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyResponse) *string { return v.DependencyType }).(pulumi.StringPtrOutput)
}

// Gets the source ARM ID of the dependent resource.
func (o MoveResourceDependencyResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets or sets a value indicating whether the dependency is optional.
func (o MoveResourceDependencyResponseOutput) IsOptional() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyResponse) *string { return v.IsOptional }).(pulumi.StringPtrOutput)
}

// Defines the properties for manual resolution.
func (o MoveResourceDependencyResponseOutput) ManualResolution() ManualResolutionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyResponse) *ManualResolutionPropertiesResponse { return v.ManualResolution }).(ManualResolutionPropertiesResponsePtrOutput)
}

// Gets the dependency resolution status.
func (o MoveResourceDependencyResponseOutput) ResolutionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyResponse) *string { return v.ResolutionStatus }).(pulumi.StringPtrOutput)
}

// Defines the resolution type.
func (o MoveResourceDependencyResponseOutput) ResolutionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourceDependencyResponse) *string { return v.ResolutionType }).(pulumi.StringPtrOutput)
}

type MoveResourceDependencyResponseArrayOutput struct{ *pulumi.OutputState }

func (MoveResourceDependencyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MoveResourceDependencyResponse)(nil)).Elem()
}

func (o MoveResourceDependencyResponseArrayOutput) ToMoveResourceDependencyResponseArrayOutput() MoveResourceDependencyResponseArrayOutput {
	return o
}

func (o MoveResourceDependencyResponseArrayOutput) ToMoveResourceDependencyResponseArrayOutputWithContext(ctx context.Context) MoveResourceDependencyResponseArrayOutput {
	return o
}

func (o MoveResourceDependencyResponseArrayOutput) Index(i pulumi.IntInput) MoveResourceDependencyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MoveResourceDependencyResponse {
		return vs[0].([]MoveResourceDependencyResponse)[vs[1].(int)]
	}).(MoveResourceDependencyResponseOutput)
}

// An error response from the Azure Migrate service.
type MoveResourceErrorBodyResponse struct {
	// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
	Code string `pulumi:"code"`
	// A list of additional details about the error.
	Details []MoveResourceErrorBodyResponse `pulumi:"details"`
	// A message describing the error, intended to be suitable for display in a user interface.
	Message string `pulumi:"message"`
	// The target of the particular error. For example, the name of the property in error.
	Target string `pulumi:"target"`
}

// An error response from the Azure Migrate service.
type MoveResourceErrorBodyResponseOutput struct{ *pulumi.OutputState }

func (MoveResourceErrorBodyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceErrorBodyResponse)(nil)).Elem()
}

func (o MoveResourceErrorBodyResponseOutput) ToMoveResourceErrorBodyResponseOutput() MoveResourceErrorBodyResponseOutput {
	return o
}

func (o MoveResourceErrorBodyResponseOutput) ToMoveResourceErrorBodyResponseOutputWithContext(ctx context.Context) MoveResourceErrorBodyResponseOutput {
	return o
}

func (o MoveResourceErrorBodyResponseOutput) ToMoveResourceErrorBodyResponsePtrOutput() MoveResourceErrorBodyResponsePtrOutput {
	return o.ToMoveResourceErrorBodyResponsePtrOutputWithContext(context.Background())
}

func (o MoveResourceErrorBodyResponseOutput) ToMoveResourceErrorBodyResponsePtrOutputWithContext(ctx context.Context) MoveResourceErrorBodyResponsePtrOutput {
	return o.ApplyT(func(v MoveResourceErrorBodyResponse) *MoveResourceErrorBodyResponse {
		return &v
	}).(MoveResourceErrorBodyResponsePtrOutput)
}

// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
func (o MoveResourceErrorBodyResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourceErrorBodyResponse) string { return v.Code }).(pulumi.StringOutput)
}

// A list of additional details about the error.
func (o MoveResourceErrorBodyResponseOutput) Details() MoveResourceErrorBodyResponseArrayOutput {
	return o.ApplyT(func(v MoveResourceErrorBodyResponse) []MoveResourceErrorBodyResponse { return v.Details }).(MoveResourceErrorBodyResponseArrayOutput)
}

// A message describing the error, intended to be suitable for display in a user interface.
func (o MoveResourceErrorBodyResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourceErrorBodyResponse) string { return v.Message }).(pulumi.StringOutput)
}

// The target of the particular error. For example, the name of the property in error.
func (o MoveResourceErrorBodyResponseOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourceErrorBodyResponse) string { return v.Target }).(pulumi.StringOutput)
}

type MoveResourceErrorBodyResponsePtrOutput struct{ *pulumi.OutputState }

func (MoveResourceErrorBodyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourceErrorBodyResponse)(nil)).Elem()
}

func (o MoveResourceErrorBodyResponsePtrOutput) ToMoveResourceErrorBodyResponsePtrOutput() MoveResourceErrorBodyResponsePtrOutput {
	return o
}

func (o MoveResourceErrorBodyResponsePtrOutput) ToMoveResourceErrorBodyResponsePtrOutputWithContext(ctx context.Context) MoveResourceErrorBodyResponsePtrOutput {
	return o
}

func (o MoveResourceErrorBodyResponsePtrOutput) Elem() MoveResourceErrorBodyResponseOutput {
	return o.ApplyT(func(v *MoveResourceErrorBodyResponse) MoveResourceErrorBodyResponse { return *v }).(MoveResourceErrorBodyResponseOutput)
}

// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
func (o MoveResourceErrorBodyResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourceErrorBodyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

// A list of additional details about the error.
func (o MoveResourceErrorBodyResponsePtrOutput) Details() MoveResourceErrorBodyResponseArrayOutput {
	return o.ApplyT(func(v *MoveResourceErrorBodyResponse) []MoveResourceErrorBodyResponse {
		if v == nil {
			return nil
		}
		return v.Details
	}).(MoveResourceErrorBodyResponseArrayOutput)
}

// A message describing the error, intended to be suitable for display in a user interface.
func (o MoveResourceErrorBodyResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourceErrorBodyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// The target of the particular error. For example, the name of the property in error.
func (o MoveResourceErrorBodyResponsePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourceErrorBodyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(pulumi.StringPtrOutput)
}

type MoveResourceErrorBodyResponseArrayOutput struct{ *pulumi.OutputState }

func (MoveResourceErrorBodyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MoveResourceErrorBodyResponse)(nil)).Elem()
}

func (o MoveResourceErrorBodyResponseArrayOutput) ToMoveResourceErrorBodyResponseArrayOutput() MoveResourceErrorBodyResponseArrayOutput {
	return o
}

func (o MoveResourceErrorBodyResponseArrayOutput) ToMoveResourceErrorBodyResponseArrayOutputWithContext(ctx context.Context) MoveResourceErrorBodyResponseArrayOutput {
	return o
}

func (o MoveResourceErrorBodyResponseArrayOutput) Index(i pulumi.IntInput) MoveResourceErrorBodyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MoveResourceErrorBodyResponse {
		return vs[0].([]MoveResourceErrorBodyResponse)[vs[1].(int)]
	}).(MoveResourceErrorBodyResponseOutput)
}

// An error response from the azure resource mover service.
type MoveResourceErrorResponse struct {
	// The move resource error body.
	Properties *MoveResourceErrorBodyResponse `pulumi:"properties"`
}

// An error response from the azure resource mover service.
type MoveResourceErrorResponseOutput struct{ *pulumi.OutputState }

func (MoveResourceErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceErrorResponse)(nil)).Elem()
}

func (o MoveResourceErrorResponseOutput) ToMoveResourceErrorResponseOutput() MoveResourceErrorResponseOutput {
	return o
}

func (o MoveResourceErrorResponseOutput) ToMoveResourceErrorResponseOutputWithContext(ctx context.Context) MoveResourceErrorResponseOutput {
	return o
}

func (o MoveResourceErrorResponseOutput) ToMoveResourceErrorResponsePtrOutput() MoveResourceErrorResponsePtrOutput {
	return o.ToMoveResourceErrorResponsePtrOutputWithContext(context.Background())
}

func (o MoveResourceErrorResponseOutput) ToMoveResourceErrorResponsePtrOutputWithContext(ctx context.Context) MoveResourceErrorResponsePtrOutput {
	return o.ApplyT(func(v MoveResourceErrorResponse) *MoveResourceErrorResponse {
		return &v
	}).(MoveResourceErrorResponsePtrOutput)
}

// The move resource error body.
func (o MoveResourceErrorResponseOutput) Properties() MoveResourceErrorBodyResponsePtrOutput {
	return o.ApplyT(func(v MoveResourceErrorResponse) *MoveResourceErrorBodyResponse { return v.Properties }).(MoveResourceErrorBodyResponsePtrOutput)
}

type MoveResourceErrorResponsePtrOutput struct{ *pulumi.OutputState }

func (MoveResourceErrorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourceErrorResponse)(nil)).Elem()
}

func (o MoveResourceErrorResponsePtrOutput) ToMoveResourceErrorResponsePtrOutput() MoveResourceErrorResponsePtrOutput {
	return o
}

func (o MoveResourceErrorResponsePtrOutput) ToMoveResourceErrorResponsePtrOutputWithContext(ctx context.Context) MoveResourceErrorResponsePtrOutput {
	return o
}

func (o MoveResourceErrorResponsePtrOutput) Elem() MoveResourceErrorResponseOutput {
	return o.ApplyT(func(v *MoveResourceErrorResponse) MoveResourceErrorResponse { return *v }).(MoveResourceErrorResponseOutput)
}

// The move resource error body.
func (o MoveResourceErrorResponsePtrOutput) Properties() MoveResourceErrorBodyResponsePtrOutput {
	return o.ApplyT(func(v *MoveResourceErrorResponse) *MoveResourceErrorBodyResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(MoveResourceErrorBodyResponsePtrOutput)
}

// Defines the move resource properties.
type MoveResourceProperties struct {
	// Gets or sets the move resource dependencies overrides.
	DependsOnOverrides []MoveResourceDependencyOverride `pulumi:"dependsOnOverrides"`
	// Gets or sets the existing target ARM Id of the resource.
	ExistingTargetId *string `pulumi:"existingTargetId"`
	// Defines the provisioning states.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Gets or sets the resource settings.
	ResourceSettings interface{} `pulumi:"resourceSettings"`
	// Gets or sets the Source ARM Id of the resource.
	SourceId string `pulumi:"sourceId"`
}

// MoveResourcePropertiesInput is an input type that accepts MoveResourcePropertiesArgs and MoveResourcePropertiesOutput values.
// You can construct a concrete instance of `MoveResourcePropertiesInput` via:
//
//          MoveResourcePropertiesArgs{...}
type MoveResourcePropertiesInput interface {
	pulumi.Input

	ToMoveResourcePropertiesOutput() MoveResourcePropertiesOutput
	ToMoveResourcePropertiesOutputWithContext(context.Context) MoveResourcePropertiesOutput
}

// Defines the move resource properties.
type MoveResourcePropertiesArgs struct {
	// Gets or sets the move resource dependencies overrides.
	DependsOnOverrides MoveResourceDependencyOverrideArrayInput `pulumi:"dependsOnOverrides"`
	// Gets or sets the existing target ARM Id of the resource.
	ExistingTargetId pulumi.StringPtrInput `pulumi:"existingTargetId"`
	// Defines the provisioning states.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Gets or sets the resource settings.
	ResourceSettings pulumi.Input `pulumi:"resourceSettings"`
	// Gets or sets the Source ARM Id of the resource.
	SourceId pulumi.StringInput `pulumi:"sourceId"`
}

func (MoveResourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourceProperties)(nil)).Elem()
}

func (i MoveResourcePropertiesArgs) ToMoveResourcePropertiesOutput() MoveResourcePropertiesOutput {
	return i.ToMoveResourcePropertiesOutputWithContext(context.Background())
}

func (i MoveResourcePropertiesArgs) ToMoveResourcePropertiesOutputWithContext(ctx context.Context) MoveResourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourcePropertiesOutput)
}

func (i MoveResourcePropertiesArgs) ToMoveResourcePropertiesPtrOutput() MoveResourcePropertiesPtrOutput {
	return i.ToMoveResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i MoveResourcePropertiesArgs) ToMoveResourcePropertiesPtrOutputWithContext(ctx context.Context) MoveResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourcePropertiesOutput).ToMoveResourcePropertiesPtrOutputWithContext(ctx)
}

// MoveResourcePropertiesPtrInput is an input type that accepts MoveResourcePropertiesArgs, MoveResourcePropertiesPtr and MoveResourcePropertiesPtrOutput values.
// You can construct a concrete instance of `MoveResourcePropertiesPtrInput` via:
//
//          MoveResourcePropertiesArgs{...}
//
//  or:
//
//          nil
type MoveResourcePropertiesPtrInput interface {
	pulumi.Input

	ToMoveResourcePropertiesPtrOutput() MoveResourcePropertiesPtrOutput
	ToMoveResourcePropertiesPtrOutputWithContext(context.Context) MoveResourcePropertiesPtrOutput
}

type moveResourcePropertiesPtrType MoveResourcePropertiesArgs

func MoveResourcePropertiesPtr(v *MoveResourcePropertiesArgs) MoveResourcePropertiesPtrInput {
	return (*moveResourcePropertiesPtrType)(v)
}

func (*moveResourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourceProperties)(nil)).Elem()
}

func (i *moveResourcePropertiesPtrType) ToMoveResourcePropertiesPtrOutput() MoveResourcePropertiesPtrOutput {
	return i.ToMoveResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *moveResourcePropertiesPtrType) ToMoveResourcePropertiesPtrOutputWithContext(ctx context.Context) MoveResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveResourcePropertiesPtrOutput)
}

// Defines the move resource properties.
type MoveResourcePropertiesResponse struct {
	// Gets or sets the move resource dependencies.
	DependsOn []MoveResourceDependencyResponse `pulumi:"dependsOn"`
	// Gets or sets the move resource dependencies overrides.
	DependsOnOverrides []MoveResourceDependencyOverrideResponse `pulumi:"dependsOnOverrides"`
	// Defines the move resource errors.
	Errors MoveResourcePropertiesResponseErrors `pulumi:"errors"`
	// Gets or sets the existing target ARM Id of the resource.
	ExistingTargetId *string `pulumi:"existingTargetId"`
	// Defines the move resource status.
	MoveStatus MoveResourcePropertiesResponseMoveStatus `pulumi:"moveStatus"`
	// Defines the provisioning states.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Gets or sets the resource settings.
	ResourceSettings interface{} `pulumi:"resourceSettings"`
	// Gets or sets the Source ARM Id of the resource.
	SourceId string `pulumi:"sourceId"`
	// Gets or sets the source resource settings.
	SourceResourceSettings MoveResourcePropertiesResponseSourceResourceSettings `pulumi:"sourceResourceSettings"`
	// Gets or sets the Target ARM Id of the resource.
	TargetId string `pulumi:"targetId"`
}

// Defines the move resource properties.
type MoveResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (MoveResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourcePropertiesResponse)(nil)).Elem()
}

func (o MoveResourcePropertiesResponseOutput) ToMoveResourcePropertiesResponseOutput() MoveResourcePropertiesResponseOutput {
	return o
}

func (o MoveResourcePropertiesResponseOutput) ToMoveResourcePropertiesResponseOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseOutput {
	return o
}

func (o MoveResourcePropertiesResponseOutput) ToMoveResourcePropertiesResponsePtrOutput() MoveResourcePropertiesResponsePtrOutput {
	return o.ToMoveResourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o MoveResourcePropertiesResponseOutput) ToMoveResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) MoveResourcePropertiesResponsePtrOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) *MoveResourcePropertiesResponse {
		return &v
	}).(MoveResourcePropertiesResponsePtrOutput)
}

// Gets or sets the move resource dependencies.
func (o MoveResourcePropertiesResponseOutput) DependsOn() MoveResourceDependencyResponseArrayOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) []MoveResourceDependencyResponse { return v.DependsOn }).(MoveResourceDependencyResponseArrayOutput)
}

// Gets or sets the move resource dependencies overrides.
func (o MoveResourcePropertiesResponseOutput) DependsOnOverrides() MoveResourceDependencyOverrideResponseArrayOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) []MoveResourceDependencyOverrideResponse {
		return v.DependsOnOverrides
	}).(MoveResourceDependencyOverrideResponseArrayOutput)
}

// Defines the move resource errors.
func (o MoveResourcePropertiesResponseOutput) Errors() MoveResourcePropertiesResponseErrorsOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) MoveResourcePropertiesResponseErrors { return v.Errors }).(MoveResourcePropertiesResponseErrorsOutput)
}

// Gets or sets the existing target ARM Id of the resource.
func (o MoveResourcePropertiesResponseOutput) ExistingTargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) *string { return v.ExistingTargetId }).(pulumi.StringPtrOutput)
}

// Defines the move resource status.
func (o MoveResourcePropertiesResponseOutput) MoveStatus() MoveResourcePropertiesResponseMoveStatusOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) MoveResourcePropertiesResponseMoveStatus { return v.MoveStatus }).(MoveResourcePropertiesResponseMoveStatusOutput)
}

// Defines the provisioning states.
func (o MoveResourcePropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Gets or sets the resource settings.
func (o MoveResourcePropertiesResponseOutput) ResourceSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) interface{} { return v.ResourceSettings }).(pulumi.AnyOutput)
}

// Gets or sets the Source ARM Id of the resource.
func (o MoveResourcePropertiesResponseOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) string { return v.SourceId }).(pulumi.StringOutput)
}

// Gets or sets the source resource settings.
func (o MoveResourcePropertiesResponseOutput) SourceResourceSettings() MoveResourcePropertiesResponseSourceResourceSettingsOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) MoveResourcePropertiesResponseSourceResourceSettings {
		return v.SourceResourceSettings
	}).(MoveResourcePropertiesResponseSourceResourceSettingsOutput)
}

// Gets or sets the Target ARM Id of the resource.
func (o MoveResourcePropertiesResponseOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponse) string { return v.TargetId }).(pulumi.StringOutput)
}

type MoveResourcePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (MoveResourcePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourcePropertiesResponse)(nil)).Elem()
}

func (o MoveResourcePropertiesResponsePtrOutput) ToMoveResourcePropertiesResponsePtrOutput() MoveResourcePropertiesResponsePtrOutput {
	return o
}

func (o MoveResourcePropertiesResponsePtrOutput) ToMoveResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) MoveResourcePropertiesResponsePtrOutput {
	return o
}

func (o MoveResourcePropertiesResponsePtrOutput) Elem() MoveResourcePropertiesResponseOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) MoveResourcePropertiesResponse { return *v }).(MoveResourcePropertiesResponseOutput)
}

// Gets or sets the move resource dependencies.
func (o MoveResourcePropertiesResponsePtrOutput) DependsOn() MoveResourceDependencyResponseArrayOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) []MoveResourceDependencyResponse {
		if v == nil {
			return nil
		}
		return v.DependsOn
	}).(MoveResourceDependencyResponseArrayOutput)
}

// Gets or sets the move resource dependencies overrides.
func (o MoveResourcePropertiesResponsePtrOutput) DependsOnOverrides() MoveResourceDependencyOverrideResponseArrayOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) []MoveResourceDependencyOverrideResponse {
		if v == nil {
			return nil
		}
		return v.DependsOnOverrides
	}).(MoveResourceDependencyOverrideResponseArrayOutput)
}

// Defines the move resource errors.
func (o MoveResourcePropertiesResponsePtrOutput) Errors() MoveResourcePropertiesResponseErrorsPtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) *MoveResourcePropertiesResponseErrors {
		if v == nil {
			return nil
		}
		return &v.Errors
	}).(MoveResourcePropertiesResponseErrorsPtrOutput)
}

// Gets or sets the existing target ARM Id of the resource.
func (o MoveResourcePropertiesResponsePtrOutput) ExistingTargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ExistingTargetId
	}).(pulumi.StringPtrOutput)
}

// Defines the move resource status.
func (o MoveResourcePropertiesResponsePtrOutput) MoveStatus() MoveResourcePropertiesResponseMoveStatusPtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) *MoveResourcePropertiesResponseMoveStatus {
		if v == nil {
			return nil
		}
		return &v.MoveStatus
	}).(MoveResourcePropertiesResponseMoveStatusPtrOutput)
}

// Defines the provisioning states.
func (o MoveResourcePropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the resource settings.
func (o MoveResourcePropertiesResponsePtrOutput) ResourceSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.ResourceSettings
	}).(pulumi.AnyOutput)
}

// Gets or sets the Source ARM Id of the resource.
func (o MoveResourcePropertiesResponsePtrOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SourceId
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the source resource settings.
func (o MoveResourcePropertiesResponsePtrOutput) SourceResourceSettings() MoveResourcePropertiesResponseSourceResourceSettingsPtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) *MoveResourcePropertiesResponseSourceResourceSettings {
		if v == nil {
			return nil
		}
		return &v.SourceResourceSettings
	}).(MoveResourcePropertiesResponseSourceResourceSettingsPtrOutput)
}

// Gets or sets the Target ARM Id of the resource.
func (o MoveResourcePropertiesResponsePtrOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetId
	}).(pulumi.StringPtrOutput)
}

// Defines the move resource errors.
type MoveResourcePropertiesResponseErrors struct {
	// The move resource error body.
	Properties *MoveResourceErrorBodyResponse `pulumi:"properties"`
}

// Defines the move resource errors.
type MoveResourcePropertiesResponseErrorsOutput struct{ *pulumi.OutputState }

func (MoveResourcePropertiesResponseErrorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourcePropertiesResponseErrors)(nil)).Elem()
}

func (o MoveResourcePropertiesResponseErrorsOutput) ToMoveResourcePropertiesResponseErrorsOutput() MoveResourcePropertiesResponseErrorsOutput {
	return o
}

func (o MoveResourcePropertiesResponseErrorsOutput) ToMoveResourcePropertiesResponseErrorsOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseErrorsOutput {
	return o
}

func (o MoveResourcePropertiesResponseErrorsOutput) ToMoveResourcePropertiesResponseErrorsPtrOutput() MoveResourcePropertiesResponseErrorsPtrOutput {
	return o.ToMoveResourcePropertiesResponseErrorsPtrOutputWithContext(context.Background())
}

func (o MoveResourcePropertiesResponseErrorsOutput) ToMoveResourcePropertiesResponseErrorsPtrOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseErrorsPtrOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponseErrors) *MoveResourcePropertiesResponseErrors {
		return &v
	}).(MoveResourcePropertiesResponseErrorsPtrOutput)
}

// The move resource error body.
func (o MoveResourcePropertiesResponseErrorsOutput) Properties() MoveResourceErrorBodyResponsePtrOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponseErrors) *MoveResourceErrorBodyResponse { return v.Properties }).(MoveResourceErrorBodyResponsePtrOutput)
}

type MoveResourcePropertiesResponseErrorsPtrOutput struct{ *pulumi.OutputState }

func (MoveResourcePropertiesResponseErrorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourcePropertiesResponseErrors)(nil)).Elem()
}

func (o MoveResourcePropertiesResponseErrorsPtrOutput) ToMoveResourcePropertiesResponseErrorsPtrOutput() MoveResourcePropertiesResponseErrorsPtrOutput {
	return o
}

func (o MoveResourcePropertiesResponseErrorsPtrOutput) ToMoveResourcePropertiesResponseErrorsPtrOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseErrorsPtrOutput {
	return o
}

func (o MoveResourcePropertiesResponseErrorsPtrOutput) Elem() MoveResourcePropertiesResponseErrorsOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponseErrors) MoveResourcePropertiesResponseErrors { return *v }).(MoveResourcePropertiesResponseErrorsOutput)
}

// The move resource error body.
func (o MoveResourcePropertiesResponseErrorsPtrOutput) Properties() MoveResourceErrorBodyResponsePtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponseErrors) *MoveResourceErrorBodyResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(MoveResourceErrorBodyResponsePtrOutput)
}

// Defines the move resource status.
type MoveResourcePropertiesResponseMoveStatus struct {
	// An error response from the azure resource mover service.
	Errors *MoveResourceErrorResponse `pulumi:"errors"`
	// Defines the job status.
	JobStatus *JobStatusResponse `pulumi:"jobStatus"`
	// Defines the MoveResource states.
	MoveState *string `pulumi:"moveState"`
	// Gets the Target ARM Id of the resource.
	TargetId string `pulumi:"targetId"`
}

// Defines the move resource status.
type MoveResourcePropertiesResponseMoveStatusOutput struct{ *pulumi.OutputState }

func (MoveResourcePropertiesResponseMoveStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourcePropertiesResponseMoveStatus)(nil)).Elem()
}

func (o MoveResourcePropertiesResponseMoveStatusOutput) ToMoveResourcePropertiesResponseMoveStatusOutput() MoveResourcePropertiesResponseMoveStatusOutput {
	return o
}

func (o MoveResourcePropertiesResponseMoveStatusOutput) ToMoveResourcePropertiesResponseMoveStatusOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseMoveStatusOutput {
	return o
}

func (o MoveResourcePropertiesResponseMoveStatusOutput) ToMoveResourcePropertiesResponseMoveStatusPtrOutput() MoveResourcePropertiesResponseMoveStatusPtrOutput {
	return o.ToMoveResourcePropertiesResponseMoveStatusPtrOutputWithContext(context.Background())
}

func (o MoveResourcePropertiesResponseMoveStatusOutput) ToMoveResourcePropertiesResponseMoveStatusPtrOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseMoveStatusPtrOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponseMoveStatus) *MoveResourcePropertiesResponseMoveStatus {
		return &v
	}).(MoveResourcePropertiesResponseMoveStatusPtrOutput)
}

// An error response from the azure resource mover service.
func (o MoveResourcePropertiesResponseMoveStatusOutput) Errors() MoveResourceErrorResponsePtrOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponseMoveStatus) *MoveResourceErrorResponse { return v.Errors }).(MoveResourceErrorResponsePtrOutput)
}

// Defines the job status.
func (o MoveResourcePropertiesResponseMoveStatusOutput) JobStatus() JobStatusResponsePtrOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponseMoveStatus) *JobStatusResponse { return v.JobStatus }).(JobStatusResponsePtrOutput)
}

// Defines the MoveResource states.
func (o MoveResourcePropertiesResponseMoveStatusOutput) MoveState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponseMoveStatus) *string { return v.MoveState }).(pulumi.StringPtrOutput)
}

// Gets the Target ARM Id of the resource.
func (o MoveResourcePropertiesResponseMoveStatusOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponseMoveStatus) string { return v.TargetId }).(pulumi.StringOutput)
}

type MoveResourcePropertiesResponseMoveStatusPtrOutput struct{ *pulumi.OutputState }

func (MoveResourcePropertiesResponseMoveStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourcePropertiesResponseMoveStatus)(nil)).Elem()
}

func (o MoveResourcePropertiesResponseMoveStatusPtrOutput) ToMoveResourcePropertiesResponseMoveStatusPtrOutput() MoveResourcePropertiesResponseMoveStatusPtrOutput {
	return o
}

func (o MoveResourcePropertiesResponseMoveStatusPtrOutput) ToMoveResourcePropertiesResponseMoveStatusPtrOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseMoveStatusPtrOutput {
	return o
}

func (o MoveResourcePropertiesResponseMoveStatusPtrOutput) Elem() MoveResourcePropertiesResponseMoveStatusOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponseMoveStatus) MoveResourcePropertiesResponseMoveStatus { return *v }).(MoveResourcePropertiesResponseMoveStatusOutput)
}

// An error response from the azure resource mover service.
func (o MoveResourcePropertiesResponseMoveStatusPtrOutput) Errors() MoveResourceErrorResponsePtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponseMoveStatus) *MoveResourceErrorResponse {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(MoveResourceErrorResponsePtrOutput)
}

// Defines the job status.
func (o MoveResourcePropertiesResponseMoveStatusPtrOutput) JobStatus() JobStatusResponsePtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponseMoveStatus) *JobStatusResponse {
		if v == nil {
			return nil
		}
		return v.JobStatus
	}).(JobStatusResponsePtrOutput)
}

// Defines the MoveResource states.
func (o MoveResourcePropertiesResponseMoveStatusPtrOutput) MoveState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponseMoveStatus) *string {
		if v == nil {
			return nil
		}
		return v.MoveState
	}).(pulumi.StringPtrOutput)
}

// Gets the Target ARM Id of the resource.
func (o MoveResourcePropertiesResponseMoveStatusPtrOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponseMoveStatus) *string {
		if v == nil {
			return nil
		}
		return &v.TargetId
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the source resource settings.
type MoveResourcePropertiesResponseSourceResourceSettings struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// Gets or sets the source resource settings.
type MoveResourcePropertiesResponseSourceResourceSettingsOutput struct{ *pulumi.OutputState }

func (MoveResourcePropertiesResponseSourceResourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveResourcePropertiesResponseSourceResourceSettings)(nil)).Elem()
}

func (o MoveResourcePropertiesResponseSourceResourceSettingsOutput) ToMoveResourcePropertiesResponseSourceResourceSettingsOutput() MoveResourcePropertiesResponseSourceResourceSettingsOutput {
	return o
}

func (o MoveResourcePropertiesResponseSourceResourceSettingsOutput) ToMoveResourcePropertiesResponseSourceResourceSettingsOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseSourceResourceSettingsOutput {
	return o
}

func (o MoveResourcePropertiesResponseSourceResourceSettingsOutput) ToMoveResourcePropertiesResponseSourceResourceSettingsPtrOutput() MoveResourcePropertiesResponseSourceResourceSettingsPtrOutput {
	return o.ToMoveResourcePropertiesResponseSourceResourceSettingsPtrOutputWithContext(context.Background())
}

func (o MoveResourcePropertiesResponseSourceResourceSettingsOutput) ToMoveResourcePropertiesResponseSourceResourceSettingsPtrOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseSourceResourceSettingsPtrOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponseSourceResourceSettings) *MoveResourcePropertiesResponseSourceResourceSettings {
		return &v
	}).(MoveResourcePropertiesResponseSourceResourceSettingsPtrOutput)
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
func (o MoveResourcePropertiesResponseSourceResourceSettingsOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponseSourceResourceSettings) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o MoveResourcePropertiesResponseSourceResourceSettingsOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v MoveResourcePropertiesResponseSourceResourceSettings) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

type MoveResourcePropertiesResponseSourceResourceSettingsPtrOutput struct{ *pulumi.OutputState }

func (MoveResourcePropertiesResponseSourceResourceSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveResourcePropertiesResponseSourceResourceSettings)(nil)).Elem()
}

func (o MoveResourcePropertiesResponseSourceResourceSettingsPtrOutput) ToMoveResourcePropertiesResponseSourceResourceSettingsPtrOutput() MoveResourcePropertiesResponseSourceResourceSettingsPtrOutput {
	return o
}

func (o MoveResourcePropertiesResponseSourceResourceSettingsPtrOutput) ToMoveResourcePropertiesResponseSourceResourceSettingsPtrOutputWithContext(ctx context.Context) MoveResourcePropertiesResponseSourceResourceSettingsPtrOutput {
	return o
}

func (o MoveResourcePropertiesResponseSourceResourceSettingsPtrOutput) Elem() MoveResourcePropertiesResponseSourceResourceSettingsOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponseSourceResourceSettings) MoveResourcePropertiesResponseSourceResourceSettings {
		return *v
	}).(MoveResourcePropertiesResponseSourceResourceSettingsOutput)
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
func (o MoveResourcePropertiesResponseSourceResourceSettingsPtrOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponseSourceResourceSettings) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceType
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the target Resource name.
func (o MoveResourcePropertiesResponseSourceResourceSettingsPtrOutput) TargetResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveResourcePropertiesResponseSourceResourceSettings) *string {
		if v == nil {
			return nil
		}
		return &v.TargetResourceName
	}).(pulumi.StringPtrOutput)
}

// Defines the network interface resource settings.
type NetworkInterfaceResourceSettings struct {
	// Gets or sets a value indicating whether accelerated networking is enabled.
	EnableAcceleratedNetworking *bool `pulumi:"enableAcceleratedNetworking"`
	// Gets or sets the IP configurations of the NIC.
	IpConfigurations []NicIpConfigurationResourceSettings `pulumi:"ipConfigurations"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// NetworkInterfaceResourceSettingsInput is an input type that accepts NetworkInterfaceResourceSettingsArgs and NetworkInterfaceResourceSettingsOutput values.
// You can construct a concrete instance of `NetworkInterfaceResourceSettingsInput` via:
//
//          NetworkInterfaceResourceSettingsArgs{...}
type NetworkInterfaceResourceSettingsInput interface {
	pulumi.Input

	ToNetworkInterfaceResourceSettingsOutput() NetworkInterfaceResourceSettingsOutput
	ToNetworkInterfaceResourceSettingsOutputWithContext(context.Context) NetworkInterfaceResourceSettingsOutput
}

// Defines the network interface resource settings.
type NetworkInterfaceResourceSettingsArgs struct {
	// Gets or sets a value indicating whether accelerated networking is enabled.
	EnableAcceleratedNetworking pulumi.BoolPtrInput `pulumi:"enableAcceleratedNetworking"`
	// Gets or sets the IP configurations of the NIC.
	IpConfigurations NicIpConfigurationResourceSettingsArrayInput `pulumi:"ipConfigurations"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (NetworkInterfaceResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResourceSettings)(nil)).Elem()
}

func (i NetworkInterfaceResourceSettingsArgs) ToNetworkInterfaceResourceSettingsOutput() NetworkInterfaceResourceSettingsOutput {
	return i.ToNetworkInterfaceResourceSettingsOutputWithContext(context.Background())
}

func (i NetworkInterfaceResourceSettingsArgs) ToNetworkInterfaceResourceSettingsOutputWithContext(ctx context.Context) NetworkInterfaceResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceResourceSettingsOutput)
}

// Defines the network interface resource settings.
type NetworkInterfaceResourceSettingsResponse struct {
	// Gets or sets a value indicating whether accelerated networking is enabled.
	EnableAcceleratedNetworking *bool `pulumi:"enableAcceleratedNetworking"`
	// Gets or sets the IP configurations of the NIC.
	IpConfigurations []NicIpConfigurationResourceSettingsResponse `pulumi:"ipConfigurations"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// Defines the network interface resource settings.
type NetworkInterfaceResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResourceSettingsResponse)(nil)).Elem()
}

func (o NetworkInterfaceResourceSettingsResponseOutput) ToNetworkInterfaceResourceSettingsResponseOutput() NetworkInterfaceResourceSettingsResponseOutput {
	return o
}

func (o NetworkInterfaceResourceSettingsResponseOutput) ToNetworkInterfaceResourceSettingsResponseOutputWithContext(ctx context.Context) NetworkInterfaceResourceSettingsResponseOutput {
	return o
}

// Gets or sets a value indicating whether accelerated networking is enabled.
func (o NetworkInterfaceResourceSettingsResponseOutput) EnableAcceleratedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResourceSettingsResponse) *bool { return v.EnableAcceleratedNetworking }).(pulumi.BoolPtrOutput)
}

// Gets or sets the IP configurations of the NIC.
func (o NetworkInterfaceResourceSettingsResponseOutput) IpConfigurations() NicIpConfigurationResourceSettingsResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceResourceSettingsResponse) []NicIpConfigurationResourceSettingsResponse {
		return v.IpConfigurations
	}).(NicIpConfigurationResourceSettingsResponseArrayOutput)
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
func (o NetworkInterfaceResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o NetworkInterfaceResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the NSG resource settings.
type NetworkSecurityGroupResourceSettings struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets Security rules of network security group.
	SecurityRules []NsgSecurityRule `pulumi:"securityRules"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// NetworkSecurityGroupResourceSettingsInput is an input type that accepts NetworkSecurityGroupResourceSettingsArgs and NetworkSecurityGroupResourceSettingsOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupResourceSettingsInput` via:
//
//          NetworkSecurityGroupResourceSettingsArgs{...}
type NetworkSecurityGroupResourceSettingsInput interface {
	pulumi.Input

	ToNetworkSecurityGroupResourceSettingsOutput() NetworkSecurityGroupResourceSettingsOutput
	ToNetworkSecurityGroupResourceSettingsOutputWithContext(context.Context) NetworkSecurityGroupResourceSettingsOutput
}

// Defines the NSG resource settings.
type NetworkSecurityGroupResourceSettingsArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets Security rules of network security group.
	SecurityRules NsgSecurityRuleArrayInput `pulumi:"securityRules"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (NetworkSecurityGroupResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupResourceSettings)(nil)).Elem()
}

func (i NetworkSecurityGroupResourceSettingsArgs) ToNetworkSecurityGroupResourceSettingsOutput() NetworkSecurityGroupResourceSettingsOutput {
	return i.ToNetworkSecurityGroupResourceSettingsOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupResourceSettingsArgs) ToNetworkSecurityGroupResourceSettingsOutputWithContext(ctx context.Context) NetworkSecurityGroupResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupResourceSettingsOutput)
}

// Defines the NSG resource settings.
type NetworkSecurityGroupResourceSettingsResponse struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets Security rules of network security group.
	SecurityRules []NsgSecurityRuleResponse `pulumi:"securityRules"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// Defines the NSG resource settings.
type NetworkSecurityGroupResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupResourceSettingsResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupResourceSettingsResponseOutput) ToNetworkSecurityGroupResourceSettingsResponseOutput() NetworkSecurityGroupResourceSettingsResponseOutput {
	return o
}

func (o NetworkSecurityGroupResourceSettingsResponseOutput) ToNetworkSecurityGroupResourceSettingsResponseOutputWithContext(ctx context.Context) NetworkSecurityGroupResourceSettingsResponseOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
func (o NetworkSecurityGroupResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets Security rules of network security group.
func (o NetworkSecurityGroupResourceSettingsResponseOutput) SecurityRules() NsgSecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResourceSettingsResponse) []NsgSecurityRuleResponse { return v.SecurityRules }).(NsgSecurityRuleResponseArrayOutput)
}

// Gets or sets the target Resource name.
func (o NetworkSecurityGroupResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines NIC IP configuration properties.
type NicIpConfigurationResourceSettings struct {
	// Gets or sets the references of the load balancer backend address pools.
	LoadBalancerBackendAddressPools []LoadBalancerBackendAddressPoolReference `pulumi:"loadBalancerBackendAddressPools"`
	// Gets or sets the IP configuration name.
	Name *string `pulumi:"name"`
	// Gets or sets a value indicating whether this IP configuration is the primary.
	Primary *bool `pulumi:"primary"`
	// Gets or sets the private IP address of the network interface IP Configuration.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// Gets or sets the private IP address allocation method.
	PrivateIpAllocationMethod *string `pulumi:"privateIpAllocationMethod"`
	// Defines reference to subnet.
	Subnet *SubnetReference `pulumi:"subnet"`
}

// NicIpConfigurationResourceSettingsInput is an input type that accepts NicIpConfigurationResourceSettingsArgs and NicIpConfigurationResourceSettingsOutput values.
// You can construct a concrete instance of `NicIpConfigurationResourceSettingsInput` via:
//
//          NicIpConfigurationResourceSettingsArgs{...}
type NicIpConfigurationResourceSettingsInput interface {
	pulumi.Input

	ToNicIpConfigurationResourceSettingsOutput() NicIpConfigurationResourceSettingsOutput
	ToNicIpConfigurationResourceSettingsOutputWithContext(context.Context) NicIpConfigurationResourceSettingsOutput
}

// Defines NIC IP configuration properties.
type NicIpConfigurationResourceSettingsArgs struct {
	// Gets or sets the references of the load balancer backend address pools.
	LoadBalancerBackendAddressPools LoadBalancerBackendAddressPoolReferenceArrayInput `pulumi:"loadBalancerBackendAddressPools"`
	// Gets or sets the IP configuration name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets or sets a value indicating whether this IP configuration is the primary.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// Gets or sets the private IP address of the network interface IP Configuration.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// Gets or sets the private IP address allocation method.
	PrivateIpAllocationMethod pulumi.StringPtrInput `pulumi:"privateIpAllocationMethod"`
	// Defines reference to subnet.
	Subnet SubnetReferencePtrInput `pulumi:"subnet"`
}

func (NicIpConfigurationResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NicIpConfigurationResourceSettings)(nil)).Elem()
}

func (i NicIpConfigurationResourceSettingsArgs) ToNicIpConfigurationResourceSettingsOutput() NicIpConfigurationResourceSettingsOutput {
	return i.ToNicIpConfigurationResourceSettingsOutputWithContext(context.Background())
}

func (i NicIpConfigurationResourceSettingsArgs) ToNicIpConfigurationResourceSettingsOutputWithContext(ctx context.Context) NicIpConfigurationResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NicIpConfigurationResourceSettingsOutput)
}

// NicIpConfigurationResourceSettingsArrayInput is an input type that accepts NicIpConfigurationResourceSettingsArray and NicIpConfigurationResourceSettingsArrayOutput values.
// You can construct a concrete instance of `NicIpConfigurationResourceSettingsArrayInput` via:
//
//          NicIpConfigurationResourceSettingsArray{ NicIpConfigurationResourceSettingsArgs{...} }
type NicIpConfigurationResourceSettingsArrayInput interface {
	pulumi.Input

	ToNicIpConfigurationResourceSettingsArrayOutput() NicIpConfigurationResourceSettingsArrayOutput
	ToNicIpConfigurationResourceSettingsArrayOutputWithContext(context.Context) NicIpConfigurationResourceSettingsArrayOutput
}

type NicIpConfigurationResourceSettingsArray []NicIpConfigurationResourceSettingsInput

func (NicIpConfigurationResourceSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicIpConfigurationResourceSettings)(nil)).Elem()
}

func (i NicIpConfigurationResourceSettingsArray) ToNicIpConfigurationResourceSettingsArrayOutput() NicIpConfigurationResourceSettingsArrayOutput {
	return i.ToNicIpConfigurationResourceSettingsArrayOutputWithContext(context.Background())
}

func (i NicIpConfigurationResourceSettingsArray) ToNicIpConfigurationResourceSettingsArrayOutputWithContext(ctx context.Context) NicIpConfigurationResourceSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NicIpConfigurationResourceSettingsArrayOutput)
}

// Defines NIC IP configuration properties.
type NicIpConfigurationResourceSettingsResponse struct {
	// Gets or sets the references of the load balancer backend address pools.
	LoadBalancerBackendAddressPools []LoadBalancerBackendAddressPoolReferenceResponse `pulumi:"loadBalancerBackendAddressPools"`
	// Gets or sets the IP configuration name.
	Name *string `pulumi:"name"`
	// Gets or sets a value indicating whether this IP configuration is the primary.
	Primary *bool `pulumi:"primary"`
	// Gets or sets the private IP address of the network interface IP Configuration.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// Gets or sets the private IP address allocation method.
	PrivateIpAllocationMethod *string `pulumi:"privateIpAllocationMethod"`
	// Defines reference to subnet.
	Subnet *SubnetReferenceResponse `pulumi:"subnet"`
}

// Defines NIC IP configuration properties.
type NicIpConfigurationResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (NicIpConfigurationResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NicIpConfigurationResourceSettingsResponse)(nil)).Elem()
}

func (o NicIpConfigurationResourceSettingsResponseOutput) ToNicIpConfigurationResourceSettingsResponseOutput() NicIpConfigurationResourceSettingsResponseOutput {
	return o
}

func (o NicIpConfigurationResourceSettingsResponseOutput) ToNicIpConfigurationResourceSettingsResponseOutputWithContext(ctx context.Context) NicIpConfigurationResourceSettingsResponseOutput {
	return o
}

// Gets or sets the references of the load balancer backend address pools.
func (o NicIpConfigurationResourceSettingsResponseOutput) LoadBalancerBackendAddressPools() LoadBalancerBackendAddressPoolReferenceResponseArrayOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettingsResponse) []LoadBalancerBackendAddressPoolReferenceResponse {
		return v.LoadBalancerBackendAddressPools
	}).(LoadBalancerBackendAddressPoolReferenceResponseArrayOutput)
}

// Gets or sets the IP configuration name.
func (o NicIpConfigurationResourceSettingsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettingsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets or sets a value indicating whether this IP configuration is the primary.
func (o NicIpConfigurationResourceSettingsResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettingsResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// Gets or sets the private IP address of the network interface IP Configuration.
func (o NicIpConfigurationResourceSettingsResponseOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettingsResponse) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// Gets or sets the private IP address allocation method.
func (o NicIpConfigurationResourceSettingsResponseOutput) PrivateIpAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettingsResponse) *string { return v.PrivateIpAllocationMethod }).(pulumi.StringPtrOutput)
}

// Defines reference to subnet.
func (o NicIpConfigurationResourceSettingsResponseOutput) Subnet() SubnetReferenceResponsePtrOutput {
	return o.ApplyT(func(v NicIpConfigurationResourceSettingsResponse) *SubnetReferenceResponse { return v.Subnet }).(SubnetReferenceResponsePtrOutput)
}

type NicIpConfigurationResourceSettingsResponseArrayOutput struct{ *pulumi.OutputState }

func (NicIpConfigurationResourceSettingsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicIpConfigurationResourceSettingsResponse)(nil)).Elem()
}

func (o NicIpConfigurationResourceSettingsResponseArrayOutput) ToNicIpConfigurationResourceSettingsResponseArrayOutput() NicIpConfigurationResourceSettingsResponseArrayOutput {
	return o
}

func (o NicIpConfigurationResourceSettingsResponseArrayOutput) ToNicIpConfigurationResourceSettingsResponseArrayOutputWithContext(ctx context.Context) NicIpConfigurationResourceSettingsResponseArrayOutput {
	return o
}

func (o NicIpConfigurationResourceSettingsResponseArrayOutput) Index(i pulumi.IntInput) NicIpConfigurationResourceSettingsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NicIpConfigurationResourceSettingsResponse {
		return vs[0].([]NicIpConfigurationResourceSettingsResponse)[vs[1].(int)]
	}).(NicIpConfigurationResourceSettingsResponseOutput)
}

// Security Rule data model for Network Security Groups.
type NsgSecurityRule struct {
	// Gets or sets whether network traffic is allowed or denied.
	// Possible values are “Allow” and “Deny”.
	Access *string `pulumi:"access"`
	// Gets or sets a description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// Gets or sets destination address prefix. CIDR or source IP range.
	//  A “*” can also be used to match all source IPs. Default tags such
	// as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used.
	DestinationAddressPrefix *string `pulumi:"destinationAddressPrefix"`
	// Gets or sets Destination Port or Range. Integer or range between
	// 0 and 65535. A “*” can also be used to match all ports.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// Gets or sets the direction of the rule.InBound or Outbound. The
	// direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction *string `pulumi:"direction"`
	// Gets or sets the Security rule name.
	Name *string `pulumi:"name"`
	// Gets or sets the priority of the rule. The value can be between
	// 100 and 4096. The priority number must be unique for each rule in the collection.
	// The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).
	Protocol *string `pulumi:"protocol"`
	// Gets or sets source address prefix. CIDR or source IP range. A
	// “*” can also be used to match all source IPs.  Default tags such as ‘VirtualNetwork’,
	// ‘AzureLoadBalancer’ and ‘Internet’ can also be used. If this is an ingress
	// rule, specifies where network traffic originates from.
	SourceAddressPrefix *string `pulumi:"sourceAddressPrefix"`
	// Gets or sets Source Port or Range. Integer or range between 0 and
	// 65535. A “*” can also be used to match all ports.
	SourcePortRange *string `pulumi:"sourcePortRange"`
}

// NsgSecurityRuleInput is an input type that accepts NsgSecurityRuleArgs and NsgSecurityRuleOutput values.
// You can construct a concrete instance of `NsgSecurityRuleInput` via:
//
//          NsgSecurityRuleArgs{...}
type NsgSecurityRuleInput interface {
	pulumi.Input

	ToNsgSecurityRuleOutput() NsgSecurityRuleOutput
	ToNsgSecurityRuleOutputWithContext(context.Context) NsgSecurityRuleOutput
}

// Security Rule data model for Network Security Groups.
type NsgSecurityRuleArgs struct {
	// Gets or sets whether network traffic is allowed or denied.
	// Possible values are “Allow” and “Deny”.
	Access pulumi.StringPtrInput `pulumi:"access"`
	// Gets or sets a description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Gets or sets destination address prefix. CIDR or source IP range.
	//  A “*” can also be used to match all source IPs. Default tags such
	// as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used.
	DestinationAddressPrefix pulumi.StringPtrInput `pulumi:"destinationAddressPrefix"`
	// Gets or sets Destination Port or Range. Integer or range between
	// 0 and 65535. A “*” can also be used to match all ports.
	DestinationPortRange pulumi.StringPtrInput `pulumi:"destinationPortRange"`
	// Gets or sets the direction of the rule.InBound or Outbound. The
	// direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Gets or sets the Security rule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets or sets the priority of the rule. The value can be between
	// 100 and 4096. The priority number must be unique for each rule in the collection.
	// The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Gets or sets source address prefix. CIDR or source IP range. A
	// “*” can also be used to match all source IPs.  Default tags such as ‘VirtualNetwork’,
	// ‘AzureLoadBalancer’ and ‘Internet’ can also be used. If this is an ingress
	// rule, specifies where network traffic originates from.
	SourceAddressPrefix pulumi.StringPtrInput `pulumi:"sourceAddressPrefix"`
	// Gets or sets Source Port or Range. Integer or range between 0 and
	// 65535. A “*” can also be used to match all ports.
	SourcePortRange pulumi.StringPtrInput `pulumi:"sourcePortRange"`
}

func (NsgSecurityRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NsgSecurityRule)(nil)).Elem()
}

func (i NsgSecurityRuleArgs) ToNsgSecurityRuleOutput() NsgSecurityRuleOutput {
	return i.ToNsgSecurityRuleOutputWithContext(context.Background())
}

func (i NsgSecurityRuleArgs) ToNsgSecurityRuleOutputWithContext(ctx context.Context) NsgSecurityRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsgSecurityRuleOutput)
}

// NsgSecurityRuleArrayInput is an input type that accepts NsgSecurityRuleArray and NsgSecurityRuleArrayOutput values.
// You can construct a concrete instance of `NsgSecurityRuleArrayInput` via:
//
//          NsgSecurityRuleArray{ NsgSecurityRuleArgs{...} }
type NsgSecurityRuleArrayInput interface {
	pulumi.Input

	ToNsgSecurityRuleArrayOutput() NsgSecurityRuleArrayOutput
	ToNsgSecurityRuleArrayOutputWithContext(context.Context) NsgSecurityRuleArrayOutput
}

type NsgSecurityRuleArray []NsgSecurityRuleInput

func (NsgSecurityRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsgSecurityRule)(nil)).Elem()
}

func (i NsgSecurityRuleArray) ToNsgSecurityRuleArrayOutput() NsgSecurityRuleArrayOutput {
	return i.ToNsgSecurityRuleArrayOutputWithContext(context.Background())
}

func (i NsgSecurityRuleArray) ToNsgSecurityRuleArrayOutputWithContext(ctx context.Context) NsgSecurityRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsgSecurityRuleArrayOutput)
}

// Security Rule data model for Network Security Groups.
type NsgSecurityRuleResponse struct {
	// Gets or sets whether network traffic is allowed or denied.
	// Possible values are “Allow” and “Deny”.
	Access *string `pulumi:"access"`
	// Gets or sets a description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// Gets or sets destination address prefix. CIDR or source IP range.
	//  A “*” can also be used to match all source IPs. Default tags such
	// as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used.
	DestinationAddressPrefix *string `pulumi:"destinationAddressPrefix"`
	// Gets or sets Destination Port or Range. Integer or range between
	// 0 and 65535. A “*” can also be used to match all ports.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// Gets or sets the direction of the rule.InBound or Outbound. The
	// direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction *string `pulumi:"direction"`
	// Gets or sets the Security rule name.
	Name *string `pulumi:"name"`
	// Gets or sets the priority of the rule. The value can be between
	// 100 and 4096. The priority number must be unique for each rule in the collection.
	// The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).
	Protocol *string `pulumi:"protocol"`
	// Gets or sets source address prefix. CIDR or source IP range. A
	// “*” can also be used to match all source IPs.  Default tags such as ‘VirtualNetwork’,
	// ‘AzureLoadBalancer’ and ‘Internet’ can also be used. If this is an ingress
	// rule, specifies where network traffic originates from.
	SourceAddressPrefix *string `pulumi:"sourceAddressPrefix"`
	// Gets or sets Source Port or Range. Integer or range between 0 and
	// 65535. A “*” can also be used to match all ports.
	SourcePortRange *string `pulumi:"sourcePortRange"`
}

// Security Rule data model for Network Security Groups.
type NsgSecurityRuleResponseOutput struct{ *pulumi.OutputState }

func (NsgSecurityRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NsgSecurityRuleResponse)(nil)).Elem()
}

func (o NsgSecurityRuleResponseOutput) ToNsgSecurityRuleResponseOutput() NsgSecurityRuleResponseOutput {
	return o
}

func (o NsgSecurityRuleResponseOutput) ToNsgSecurityRuleResponseOutputWithContext(ctx context.Context) NsgSecurityRuleResponseOutput {
	return o
}

// Gets or sets whether network traffic is allowed or denied.
// Possible values are “Allow” and “Deny”.
func (o NsgSecurityRuleResponseOutput) Access() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleResponse) *string { return v.Access }).(pulumi.StringPtrOutput)
}

// Gets or sets a description for this rule. Restricted to 140 chars.
func (o NsgSecurityRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets or sets destination address prefix. CIDR or source IP range.
//  A “*” can also be used to match all source IPs. Default tags such
// as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used.
func (o NsgSecurityRuleResponseOutput) DestinationAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleResponse) *string { return v.DestinationAddressPrefix }).(pulumi.StringPtrOutput)
}

// Gets or sets Destination Port or Range. Integer or range between
// 0 and 65535. A “*” can also be used to match all ports.
func (o NsgSecurityRuleResponseOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleResponse) *string { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// Gets or sets the direction of the rule.InBound or Outbound. The
// direction specifies if rule will be evaluated on incoming or outgoing traffic.
func (o NsgSecurityRuleResponseOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleResponse) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Gets or sets the Security rule name.
func (o NsgSecurityRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets or sets the priority of the rule. The value can be between
// 100 and 4096. The priority number must be unique for each rule in the collection.
// The lower the priority number, the higher the priority of the rule.
func (o NsgSecurityRuleResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).
func (o NsgSecurityRuleResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Gets or sets source address prefix. CIDR or source IP range. A
// “*” can also be used to match all source IPs.  Default tags such as ‘VirtualNetwork’,
// ‘AzureLoadBalancer’ and ‘Internet’ can also be used. If this is an ingress
// rule, specifies where network traffic originates from.
func (o NsgSecurityRuleResponseOutput) SourceAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleResponse) *string { return v.SourceAddressPrefix }).(pulumi.StringPtrOutput)
}

// Gets or sets Source Port or Range. Integer or range between 0 and
// 65535. A “*” can also be used to match all ports.
func (o NsgSecurityRuleResponseOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NsgSecurityRuleResponse) *string { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

type NsgSecurityRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (NsgSecurityRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NsgSecurityRuleResponse)(nil)).Elem()
}

func (o NsgSecurityRuleResponseArrayOutput) ToNsgSecurityRuleResponseArrayOutput() NsgSecurityRuleResponseArrayOutput {
	return o
}

func (o NsgSecurityRuleResponseArrayOutput) ToNsgSecurityRuleResponseArrayOutputWithContext(ctx context.Context) NsgSecurityRuleResponseArrayOutput {
	return o
}

func (o NsgSecurityRuleResponseArrayOutput) Index(i pulumi.IntInput) NsgSecurityRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NsgSecurityRuleResponse {
		return vs[0].([]NsgSecurityRuleResponse)[vs[1].(int)]
	}).(NsgSecurityRuleResponseOutput)
}

// Defines the public IP address resource settings.
type PublicIPAddressResourceSettings struct {
	// Gets or sets the domain name label.
	DomainNameLabel *string `pulumi:"domainNameLabel"`
	// Gets or sets the fully qualified domain name.
	FQDN *string `pulumi:"fQDN"`
	// Gets or sets public IP allocation method.
	PublicIpAllocationMethod *string `pulumi:"publicIpAllocationMethod"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets public IP sku.
	Sku *string `pulumi:"sku"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Gets or sets public IP zones.
	Zones *string `pulumi:"zones"`
}

// PublicIPAddressResourceSettingsInput is an input type that accepts PublicIPAddressResourceSettingsArgs and PublicIPAddressResourceSettingsOutput values.
// You can construct a concrete instance of `PublicIPAddressResourceSettingsInput` via:
//
//          PublicIPAddressResourceSettingsArgs{...}
type PublicIPAddressResourceSettingsInput interface {
	pulumi.Input

	ToPublicIPAddressResourceSettingsOutput() PublicIPAddressResourceSettingsOutput
	ToPublicIPAddressResourceSettingsOutputWithContext(context.Context) PublicIPAddressResourceSettingsOutput
}

// Defines the public IP address resource settings.
type PublicIPAddressResourceSettingsArgs struct {
	// Gets or sets the domain name label.
	DomainNameLabel pulumi.StringPtrInput `pulumi:"domainNameLabel"`
	// Gets or sets the fully qualified domain name.
	FQDN pulumi.StringPtrInput `pulumi:"fQDN"`
	// Gets or sets public IP allocation method.
	PublicIpAllocationMethod pulumi.StringPtrInput `pulumi:"publicIpAllocationMethod"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets public IP sku.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Gets or sets public IP zones.
	Zones pulumi.StringPtrInput `pulumi:"zones"`
}

func (PublicIPAddressResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressResourceSettings)(nil)).Elem()
}

func (i PublicIPAddressResourceSettingsArgs) ToPublicIPAddressResourceSettingsOutput() PublicIPAddressResourceSettingsOutput {
	return i.ToPublicIPAddressResourceSettingsOutputWithContext(context.Background())
}

func (i PublicIPAddressResourceSettingsArgs) ToPublicIPAddressResourceSettingsOutputWithContext(ctx context.Context) PublicIPAddressResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressResourceSettingsOutput)
}

// Defines the public IP address resource settings.
type PublicIPAddressResourceSettingsResponse struct {
	// Gets or sets the domain name label.
	DomainNameLabel *string `pulumi:"domainNameLabel"`
	// Gets or sets the fully qualified domain name.
	FQDN *string `pulumi:"fQDN"`
	// Gets or sets public IP allocation method.
	PublicIpAllocationMethod *string `pulumi:"publicIpAllocationMethod"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets public IP sku.
	Sku *string `pulumi:"sku"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Gets or sets public IP zones.
	Zones *string `pulumi:"zones"`
}

// Defines the public IP address resource settings.
type PublicIPAddressResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressResourceSettingsResponse)(nil)).Elem()
}

func (o PublicIPAddressResourceSettingsResponseOutput) ToPublicIPAddressResourceSettingsResponseOutput() PublicIPAddressResourceSettingsResponseOutput {
	return o
}

func (o PublicIPAddressResourceSettingsResponseOutput) ToPublicIPAddressResourceSettingsResponseOutputWithContext(ctx context.Context) PublicIPAddressResourceSettingsResponseOutput {
	return o
}

// Gets or sets the domain name label.
func (o PublicIPAddressResourceSettingsResponseOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettingsResponse) *string { return v.DomainNameLabel }).(pulumi.StringPtrOutput)
}

// Gets or sets the fully qualified domain name.
func (o PublicIPAddressResourceSettingsResponseOutput) FQDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettingsResponse) *string { return v.FQDN }).(pulumi.StringPtrOutput)
}

// Gets or sets public IP allocation method.
func (o PublicIPAddressResourceSettingsResponseOutput) PublicIpAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettingsResponse) *string { return v.PublicIpAllocationMethod }).(pulumi.StringPtrOutput)
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
func (o PublicIPAddressResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets public IP sku.
func (o PublicIPAddressResourceSettingsResponseOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettingsResponse) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// Gets or sets the target Resource name.
func (o PublicIPAddressResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Gets or sets public IP zones.
func (o PublicIPAddressResourceSettingsResponseOutput) Zones() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResourceSettingsResponse) *string { return v.Zones }).(pulumi.StringPtrOutput)
}

// Defines the resource group resource settings.
type ResourceGroupResourceSettings struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// ResourceGroupResourceSettingsInput is an input type that accepts ResourceGroupResourceSettingsArgs and ResourceGroupResourceSettingsOutput values.
// You can construct a concrete instance of `ResourceGroupResourceSettingsInput` via:
//
//          ResourceGroupResourceSettingsArgs{...}
type ResourceGroupResourceSettingsInput interface {
	pulumi.Input

	ToResourceGroupResourceSettingsOutput() ResourceGroupResourceSettingsOutput
	ToResourceGroupResourceSettingsOutputWithContext(context.Context) ResourceGroupResourceSettingsOutput
}

// Defines the resource group resource settings.
type ResourceGroupResourceSettingsArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (ResourceGroupResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceSettings)(nil)).Elem()
}

func (i ResourceGroupResourceSettingsArgs) ToResourceGroupResourceSettingsOutput() ResourceGroupResourceSettingsOutput {
	return i.ToResourceGroupResourceSettingsOutputWithContext(context.Background())
}

func (i ResourceGroupResourceSettingsArgs) ToResourceGroupResourceSettingsOutputWithContext(ctx context.Context) ResourceGroupResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupResourceSettingsOutput)
}

// Defines the resource group resource settings.
type ResourceGroupResourceSettingsResponse struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// Defines the resource group resource settings.
type ResourceGroupResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (ResourceGroupResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceSettingsResponse)(nil)).Elem()
}

func (o ResourceGroupResourceSettingsResponseOutput) ToResourceGroupResourceSettingsResponseOutput() ResourceGroupResourceSettingsResponseOutput {
	return o
}

func (o ResourceGroupResourceSettingsResponseOutput) ToResourceGroupResourceSettingsResponseOutputWithContext(ctx context.Context) ResourceGroupResourceSettingsResponseOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
func (o ResourceGroupResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o ResourceGroupResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the Sql Database resource settings.
type SqlDatabaseResourceSettings struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Defines the zone redundant resource setting.
	ZoneRedundant *string `pulumi:"zoneRedundant"`
}

// SqlDatabaseResourceSettingsInput is an input type that accepts SqlDatabaseResourceSettingsArgs and SqlDatabaseResourceSettingsOutput values.
// You can construct a concrete instance of `SqlDatabaseResourceSettingsInput` via:
//
//          SqlDatabaseResourceSettingsArgs{...}
type SqlDatabaseResourceSettingsInput interface {
	pulumi.Input

	ToSqlDatabaseResourceSettingsOutput() SqlDatabaseResourceSettingsOutput
	ToSqlDatabaseResourceSettingsOutputWithContext(context.Context) SqlDatabaseResourceSettingsOutput
}

// Defines the Sql Database resource settings.
type SqlDatabaseResourceSettingsArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Defines the zone redundant resource setting.
	ZoneRedundant pulumi.StringPtrInput `pulumi:"zoneRedundant"`
}

func (SqlDatabaseResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseResourceSettings)(nil)).Elem()
}

func (i SqlDatabaseResourceSettingsArgs) ToSqlDatabaseResourceSettingsOutput() SqlDatabaseResourceSettingsOutput {
	return i.ToSqlDatabaseResourceSettingsOutputWithContext(context.Background())
}

func (i SqlDatabaseResourceSettingsArgs) ToSqlDatabaseResourceSettingsOutputWithContext(ctx context.Context) SqlDatabaseResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseResourceSettingsOutput)
}

// Defines the Sql Database resource settings.
type SqlDatabaseResourceSettingsResponse struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Defines the zone redundant resource setting.
	ZoneRedundant *string `pulumi:"zoneRedundant"`
}

// Defines the Sql Database resource settings.
type SqlDatabaseResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (SqlDatabaseResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseResourceSettingsResponse)(nil)).Elem()
}

func (o SqlDatabaseResourceSettingsResponseOutput) ToSqlDatabaseResourceSettingsResponseOutput() SqlDatabaseResourceSettingsResponseOutput {
	return o
}

func (o SqlDatabaseResourceSettingsResponseOutput) ToSqlDatabaseResourceSettingsResponseOutputWithContext(ctx context.Context) SqlDatabaseResourceSettingsResponseOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
func (o SqlDatabaseResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDatabaseResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o SqlDatabaseResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDatabaseResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the zone redundant resource setting.
func (o SqlDatabaseResourceSettingsResponseOutput) ZoneRedundant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlDatabaseResourceSettingsResponse) *string { return v.ZoneRedundant }).(pulumi.StringPtrOutput)
}

// Defines the Sql ElasticPool resource settings.
type SqlElasticPoolResourceSettings struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Defines the zone redundant resource setting.
	ZoneRedundant *string `pulumi:"zoneRedundant"`
}

// SqlElasticPoolResourceSettingsInput is an input type that accepts SqlElasticPoolResourceSettingsArgs and SqlElasticPoolResourceSettingsOutput values.
// You can construct a concrete instance of `SqlElasticPoolResourceSettingsInput` via:
//
//          SqlElasticPoolResourceSettingsArgs{...}
type SqlElasticPoolResourceSettingsInput interface {
	pulumi.Input

	ToSqlElasticPoolResourceSettingsOutput() SqlElasticPoolResourceSettingsOutput
	ToSqlElasticPoolResourceSettingsOutputWithContext(context.Context) SqlElasticPoolResourceSettingsOutput
}

// Defines the Sql ElasticPool resource settings.
type SqlElasticPoolResourceSettingsArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Defines the zone redundant resource setting.
	ZoneRedundant pulumi.StringPtrInput `pulumi:"zoneRedundant"`
}

func (SqlElasticPoolResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlElasticPoolResourceSettings)(nil)).Elem()
}

func (i SqlElasticPoolResourceSettingsArgs) ToSqlElasticPoolResourceSettingsOutput() SqlElasticPoolResourceSettingsOutput {
	return i.ToSqlElasticPoolResourceSettingsOutputWithContext(context.Background())
}

func (i SqlElasticPoolResourceSettingsArgs) ToSqlElasticPoolResourceSettingsOutputWithContext(ctx context.Context) SqlElasticPoolResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlElasticPoolResourceSettingsOutput)
}

// Defines the Sql ElasticPool resource settings.
type SqlElasticPoolResourceSettingsResponse struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Defines the zone redundant resource setting.
	ZoneRedundant *string `pulumi:"zoneRedundant"`
}

// Defines the Sql ElasticPool resource settings.
type SqlElasticPoolResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (SqlElasticPoolResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlElasticPoolResourceSettingsResponse)(nil)).Elem()
}

func (o SqlElasticPoolResourceSettingsResponseOutput) ToSqlElasticPoolResourceSettingsResponseOutput() SqlElasticPoolResourceSettingsResponseOutput {
	return o
}

func (o SqlElasticPoolResourceSettingsResponseOutput) ToSqlElasticPoolResourceSettingsResponseOutputWithContext(ctx context.Context) SqlElasticPoolResourceSettingsResponseOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
func (o SqlElasticPoolResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v SqlElasticPoolResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o SqlElasticPoolResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v SqlElasticPoolResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines the zone redundant resource setting.
func (o SqlElasticPoolResourceSettingsResponseOutput) ZoneRedundant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlElasticPoolResourceSettingsResponse) *string { return v.ZoneRedundant }).(pulumi.StringPtrOutput)
}

// Defines the SQL Server resource settings.
type SqlServerResourceSettings struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// SqlServerResourceSettingsInput is an input type that accepts SqlServerResourceSettingsArgs and SqlServerResourceSettingsOutput values.
// You can construct a concrete instance of `SqlServerResourceSettingsInput` via:
//
//          SqlServerResourceSettingsArgs{...}
type SqlServerResourceSettingsInput interface {
	pulumi.Input

	ToSqlServerResourceSettingsOutput() SqlServerResourceSettingsOutput
	ToSqlServerResourceSettingsOutputWithContext(context.Context) SqlServerResourceSettingsOutput
}

// Defines the SQL Server resource settings.
type SqlServerResourceSettingsArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (SqlServerResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerResourceSettings)(nil)).Elem()
}

func (i SqlServerResourceSettingsArgs) ToSqlServerResourceSettingsOutput() SqlServerResourceSettingsOutput {
	return i.ToSqlServerResourceSettingsOutputWithContext(context.Background())
}

func (i SqlServerResourceSettingsArgs) ToSqlServerResourceSettingsOutputWithContext(ctx context.Context) SqlServerResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlServerResourceSettingsOutput)
}

// Defines the SQL Server resource settings.
type SqlServerResourceSettingsResponse struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// Defines the SQL Server resource settings.
type SqlServerResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (SqlServerResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlServerResourceSettingsResponse)(nil)).Elem()
}

func (o SqlServerResourceSettingsResponseOutput) ToSqlServerResourceSettingsResponseOutput() SqlServerResourceSettingsResponseOutput {
	return o
}

func (o SqlServerResourceSettingsResponseOutput) ToSqlServerResourceSettingsResponseOutputWithContext(ctx context.Context) SqlServerResourceSettingsResponseOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
func (o SqlServerResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target Resource name.
func (o SqlServerResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v SqlServerResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Defines reference to subnet.
type SubnetReference struct {
	// Gets the name of the proxy resource on the target side.
	Name *string `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId string `pulumi:"sourceArmResourceId"`
}

// SubnetReferenceInput is an input type that accepts SubnetReferenceArgs and SubnetReferenceOutput values.
// You can construct a concrete instance of `SubnetReferenceInput` via:
//
//          SubnetReferenceArgs{...}
type SubnetReferenceInput interface {
	pulumi.Input

	ToSubnetReferenceOutput() SubnetReferenceOutput
	ToSubnetReferenceOutputWithContext(context.Context) SubnetReferenceOutput
}

// Defines reference to subnet.
type SubnetReferenceArgs struct {
	// Gets the name of the proxy resource on the target side.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId pulumi.StringInput `pulumi:"sourceArmResourceId"`
}

func (SubnetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetReference)(nil)).Elem()
}

func (i SubnetReferenceArgs) ToSubnetReferenceOutput() SubnetReferenceOutput {
	return i.ToSubnetReferenceOutputWithContext(context.Background())
}

func (i SubnetReferenceArgs) ToSubnetReferenceOutputWithContext(ctx context.Context) SubnetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetReferenceOutput)
}

func (i SubnetReferenceArgs) ToSubnetReferencePtrOutput() SubnetReferencePtrOutput {
	return i.ToSubnetReferencePtrOutputWithContext(context.Background())
}

func (i SubnetReferenceArgs) ToSubnetReferencePtrOutputWithContext(ctx context.Context) SubnetReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetReferenceOutput).ToSubnetReferencePtrOutputWithContext(ctx)
}

// SubnetReferencePtrInput is an input type that accepts SubnetReferenceArgs, SubnetReferencePtr and SubnetReferencePtrOutput values.
// You can construct a concrete instance of `SubnetReferencePtrInput` via:
//
//          SubnetReferenceArgs{...}
//
//  or:
//
//          nil
type SubnetReferencePtrInput interface {
	pulumi.Input

	ToSubnetReferencePtrOutput() SubnetReferencePtrOutput
	ToSubnetReferencePtrOutputWithContext(context.Context) SubnetReferencePtrOutput
}

type subnetReferencePtrType SubnetReferenceArgs

func SubnetReferencePtr(v *SubnetReferenceArgs) SubnetReferencePtrInput {
	return (*subnetReferencePtrType)(v)
}

func (*subnetReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetReference)(nil)).Elem()
}

func (i *subnetReferencePtrType) ToSubnetReferencePtrOutput() SubnetReferencePtrOutput {
	return i.ToSubnetReferencePtrOutputWithContext(context.Background())
}

func (i *subnetReferencePtrType) ToSubnetReferencePtrOutputWithContext(ctx context.Context) SubnetReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetReferencePtrOutput)
}

// Defines reference to subnet.
type SubnetReferenceResponse struct {
	// Gets the name of the proxy resource on the target side.
	Name *string `pulumi:"name"`
	// Gets the ARM resource ID of the tracked resource being referenced.
	SourceArmResourceId string `pulumi:"sourceArmResourceId"`
}

// Defines reference to subnet.
type SubnetReferenceResponseOutput struct{ *pulumi.OutputState }

func (SubnetReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetReferenceResponse)(nil)).Elem()
}

func (o SubnetReferenceResponseOutput) ToSubnetReferenceResponseOutput() SubnetReferenceResponseOutput {
	return o
}

func (o SubnetReferenceResponseOutput) ToSubnetReferenceResponseOutputWithContext(ctx context.Context) SubnetReferenceResponseOutput {
	return o
}

func (o SubnetReferenceResponseOutput) ToSubnetReferenceResponsePtrOutput() SubnetReferenceResponsePtrOutput {
	return o.ToSubnetReferenceResponsePtrOutputWithContext(context.Background())
}

func (o SubnetReferenceResponseOutput) ToSubnetReferenceResponsePtrOutputWithContext(ctx context.Context) SubnetReferenceResponsePtrOutput {
	return o.ApplyT(func(v SubnetReferenceResponse) *SubnetReferenceResponse {
		return &v
	}).(SubnetReferenceResponsePtrOutput)
}

// Gets the name of the proxy resource on the target side.
func (o SubnetReferenceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetReferenceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o SubnetReferenceResponseOutput) SourceArmResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetReferenceResponse) string { return v.SourceArmResourceId }).(pulumi.StringOutput)
}

type SubnetReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (SubnetReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetReferenceResponse)(nil)).Elem()
}

func (o SubnetReferenceResponsePtrOutput) ToSubnetReferenceResponsePtrOutput() SubnetReferenceResponsePtrOutput {
	return o
}

func (o SubnetReferenceResponsePtrOutput) ToSubnetReferenceResponsePtrOutputWithContext(ctx context.Context) SubnetReferenceResponsePtrOutput {
	return o
}

func (o SubnetReferenceResponsePtrOutput) Elem() SubnetReferenceResponseOutput {
	return o.ApplyT(func(v *SubnetReferenceResponse) SubnetReferenceResponse { return *v }).(SubnetReferenceResponseOutput)
}

// Gets the name of the proxy resource on the target side.
func (o SubnetReferenceResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gets the ARM resource ID of the tracked resource being referenced.
func (o SubnetReferenceResponsePtrOutput) SourceArmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SourceArmResourceId
	}).(pulumi.StringPtrOutput)
}

// Defines the virtual network subnets resource settings.
type SubnetResourceSettings struct {
	// Gets or sets address prefix for the subnet.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// Gets or sets the Subnet name.
	Name *string `pulumi:"name"`
}

// SubnetResourceSettingsInput is an input type that accepts SubnetResourceSettingsArgs and SubnetResourceSettingsOutput values.
// You can construct a concrete instance of `SubnetResourceSettingsInput` via:
//
//          SubnetResourceSettingsArgs{...}
type SubnetResourceSettingsInput interface {
	pulumi.Input

	ToSubnetResourceSettingsOutput() SubnetResourceSettingsOutput
	ToSubnetResourceSettingsOutputWithContext(context.Context) SubnetResourceSettingsOutput
}

// Defines the virtual network subnets resource settings.
type SubnetResourceSettingsArgs struct {
	// Gets or sets address prefix for the subnet.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// Gets or sets the Subnet name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SubnetResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResourceSettings)(nil)).Elem()
}

func (i SubnetResourceSettingsArgs) ToSubnetResourceSettingsOutput() SubnetResourceSettingsOutput {
	return i.ToSubnetResourceSettingsOutputWithContext(context.Background())
}

func (i SubnetResourceSettingsArgs) ToSubnetResourceSettingsOutputWithContext(ctx context.Context) SubnetResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResourceSettingsOutput)
}

// SubnetResourceSettingsArrayInput is an input type that accepts SubnetResourceSettingsArray and SubnetResourceSettingsArrayOutput values.
// You can construct a concrete instance of `SubnetResourceSettingsArrayInput` via:
//
//          SubnetResourceSettingsArray{ SubnetResourceSettingsArgs{...} }
type SubnetResourceSettingsArrayInput interface {
	pulumi.Input

	ToSubnetResourceSettingsArrayOutput() SubnetResourceSettingsArrayOutput
	ToSubnetResourceSettingsArrayOutputWithContext(context.Context) SubnetResourceSettingsArrayOutput
}

type SubnetResourceSettingsArray []SubnetResourceSettingsInput

func (SubnetResourceSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResourceSettings)(nil)).Elem()
}

func (i SubnetResourceSettingsArray) ToSubnetResourceSettingsArrayOutput() SubnetResourceSettingsArrayOutput {
	return i.ToSubnetResourceSettingsArrayOutputWithContext(context.Background())
}

func (i SubnetResourceSettingsArray) ToSubnetResourceSettingsArrayOutputWithContext(ctx context.Context) SubnetResourceSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResourceSettingsArrayOutput)
}

// Defines the virtual network subnets resource settings.
type SubnetResourceSettingsResponse struct {
	// Gets or sets address prefix for the subnet.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// Gets or sets the Subnet name.
	Name *string `pulumi:"name"`
}

// Defines the virtual network subnets resource settings.
type SubnetResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (SubnetResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResourceSettingsResponse)(nil)).Elem()
}

func (o SubnetResourceSettingsResponseOutput) ToSubnetResourceSettingsResponseOutput() SubnetResourceSettingsResponseOutput {
	return o
}

func (o SubnetResourceSettingsResponseOutput) ToSubnetResourceSettingsResponseOutputWithContext(ctx context.Context) SubnetResourceSettingsResponseOutput {
	return o
}

// Gets or sets address prefix for the subnet.
func (o SubnetResourceSettingsResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResourceSettingsResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// Gets or sets the Subnet name.
func (o SubnetResourceSettingsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResourceSettingsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SubnetResourceSettingsResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetResourceSettingsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResourceSettingsResponse)(nil)).Elem()
}

func (o SubnetResourceSettingsResponseArrayOutput) ToSubnetResourceSettingsResponseArrayOutput() SubnetResourceSettingsResponseArrayOutput {
	return o
}

func (o SubnetResourceSettingsResponseArrayOutput) ToSubnetResourceSettingsResponseArrayOutputWithContext(ctx context.Context) SubnetResourceSettingsResponseArrayOutput {
	return o
}

func (o SubnetResourceSettingsResponseArrayOutput) Index(i pulumi.IntInput) SubnetResourceSettingsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetResourceSettingsResponse {
		return vs[0].([]SubnetResourceSettingsResponse)[vs[1].(int)]
	}).(SubnetResourceSettingsResponseOutput)
}

// Gets or sets the virtual machine resource settings.
type VirtualMachineResourceSettings struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target availability set id for virtual machines not in an availability set at source.
	TargetAvailabilitySetId *string `pulumi:"targetAvailabilitySetId"`
	// Gets or sets the target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Gets or sets the target virtual machine size.
	TargetVmSize *string `pulumi:"targetVmSize"`
}

// VirtualMachineResourceSettingsInput is an input type that accepts VirtualMachineResourceSettingsArgs and VirtualMachineResourceSettingsOutput values.
// You can construct a concrete instance of `VirtualMachineResourceSettingsInput` via:
//
//          VirtualMachineResourceSettingsArgs{...}
type VirtualMachineResourceSettingsInput interface {
	pulumi.Input

	ToVirtualMachineResourceSettingsOutput() VirtualMachineResourceSettingsOutput
	ToVirtualMachineResourceSettingsOutputWithContext(context.Context) VirtualMachineResourceSettingsOutput
}

// Gets or sets the virtual machine resource settings.
type VirtualMachineResourceSettingsArgs struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets the target availability set id for virtual machines not in an availability set at source.
	TargetAvailabilitySetId pulumi.StringPtrInput `pulumi:"targetAvailabilitySetId"`
	// Gets or sets the target availability zone.
	TargetAvailabilityZone pulumi.StringPtrInput `pulumi:"targetAvailabilityZone"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
	// Gets or sets the target virtual machine size.
	TargetVmSize pulumi.StringPtrInput `pulumi:"targetVmSize"`
}

func (VirtualMachineResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineResourceSettings)(nil)).Elem()
}

func (i VirtualMachineResourceSettingsArgs) ToVirtualMachineResourceSettingsOutput() VirtualMachineResourceSettingsOutput {
	return i.ToVirtualMachineResourceSettingsOutputWithContext(context.Background())
}

func (i VirtualMachineResourceSettingsArgs) ToVirtualMachineResourceSettingsOutputWithContext(ctx context.Context) VirtualMachineResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineResourceSettingsOutput)
}

// Gets or sets the virtual machine resource settings.
type VirtualMachineResourceSettingsResponse struct {
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets the target availability set id for virtual machines not in an availability set at source.
	TargetAvailabilitySetId *string `pulumi:"targetAvailabilitySetId"`
	// Gets or sets the target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
	// Gets or sets the target virtual machine size.
	TargetVmSize *string `pulumi:"targetVmSize"`
}

// Gets or sets the virtual machine resource settings.
type VirtualMachineResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineResourceSettingsResponse)(nil)).Elem()
}

func (o VirtualMachineResourceSettingsResponseOutput) ToVirtualMachineResourceSettingsResponseOutput() VirtualMachineResourceSettingsResponseOutput {
	return o
}

func (o VirtualMachineResourceSettingsResponseOutput) ToVirtualMachineResourceSettingsResponseOutputWithContext(ctx context.Context) VirtualMachineResourceSettingsResponseOutput {
	return o
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
func (o VirtualMachineResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets the target availability set id for virtual machines not in an availability set at source.
func (o VirtualMachineResourceSettingsResponseOutput) TargetAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResourceSettingsResponse) *string { return v.TargetAvailabilitySetId }).(pulumi.StringPtrOutput)
}

// Gets or sets the target availability zone.
func (o VirtualMachineResourceSettingsResponseOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResourceSettingsResponse) *string { return v.TargetAvailabilityZone }).(pulumi.StringPtrOutput)
}

// Gets or sets the target Resource name.
func (o VirtualMachineResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

// Gets or sets the target virtual machine size.
func (o VirtualMachineResourceSettingsResponseOutput) TargetVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineResourceSettingsResponse) *string { return v.TargetVmSize }).(pulumi.StringPtrOutput)
}

// Defines the virtual network resource settings.
type VirtualNetworkResourceSettings struct {
	// Gets or sets the address prefixes for the virtual network.
	AddressSpace []string `pulumi:"addressSpace"`
	// Gets or sets DHCPOptions that contains an array of DNS servers available to VMs
	// deployed in the virtual network.
	DnsServers []string `pulumi:"dnsServers"`
	// Gets or sets a value indicating whether gets or sets whether the
	// DDOS protection should be switched on.
	EnableDdosProtection *bool `pulumi:"enableDdosProtection"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets List of subnets in a VirtualNetwork.
	Subnets []SubnetResourceSettings `pulumi:"subnets"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// VirtualNetworkResourceSettingsInput is an input type that accepts VirtualNetworkResourceSettingsArgs and VirtualNetworkResourceSettingsOutput values.
// You can construct a concrete instance of `VirtualNetworkResourceSettingsInput` via:
//
//          VirtualNetworkResourceSettingsArgs{...}
type VirtualNetworkResourceSettingsInput interface {
	pulumi.Input

	ToVirtualNetworkResourceSettingsOutput() VirtualNetworkResourceSettingsOutput
	ToVirtualNetworkResourceSettingsOutputWithContext(context.Context) VirtualNetworkResourceSettingsOutput
}

// Defines the virtual network resource settings.
type VirtualNetworkResourceSettingsArgs struct {
	// Gets or sets the address prefixes for the virtual network.
	AddressSpace pulumi.StringArrayInput `pulumi:"addressSpace"`
	// Gets or sets DHCPOptions that contains an array of DNS servers available to VMs
	// deployed in the virtual network.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// Gets or sets a value indicating whether gets or sets whether the
	// DDOS protection should be switched on.
	EnableDdosProtection pulumi.BoolPtrInput `pulumi:"enableDdosProtection"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Gets or sets List of subnets in a VirtualNetwork.
	Subnets SubnetResourceSettingsArrayInput `pulumi:"subnets"`
	// Gets or sets the target Resource name.
	TargetResourceName pulumi.StringInput `pulumi:"targetResourceName"`
}

func (VirtualNetworkResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkResourceSettings)(nil)).Elem()
}

func (i VirtualNetworkResourceSettingsArgs) ToVirtualNetworkResourceSettingsOutput() VirtualNetworkResourceSettingsOutput {
	return i.ToVirtualNetworkResourceSettingsOutputWithContext(context.Background())
}

func (i VirtualNetworkResourceSettingsArgs) ToVirtualNetworkResourceSettingsOutputWithContext(ctx context.Context) VirtualNetworkResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkResourceSettingsOutput)
}

// Defines the virtual network resource settings.
type VirtualNetworkResourceSettingsResponse struct {
	// Gets or sets the address prefixes for the virtual network.
	AddressSpace []string `pulumi:"addressSpace"`
	// Gets or sets DHCPOptions that contains an array of DNS servers available to VMs
	// deployed in the virtual network.
	DnsServers []string `pulumi:"dnsServers"`
	// Gets or sets a value indicating whether gets or sets whether the
	// DDOS protection should be switched on.
	EnableDdosProtection *bool `pulumi:"enableDdosProtection"`
	// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
	ResourceType string `pulumi:"resourceType"`
	// Gets or sets List of subnets in a VirtualNetwork.
	Subnets []SubnetResourceSettingsResponse `pulumi:"subnets"`
	// Gets or sets the target Resource name.
	TargetResourceName string `pulumi:"targetResourceName"`
}

// Defines the virtual network resource settings.
type VirtualNetworkResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkResourceSettingsResponse)(nil)).Elem()
}

func (o VirtualNetworkResourceSettingsResponseOutput) ToVirtualNetworkResourceSettingsResponseOutput() VirtualNetworkResourceSettingsResponseOutput {
	return o
}

func (o VirtualNetworkResourceSettingsResponseOutput) ToVirtualNetworkResourceSettingsResponseOutputWithContext(ctx context.Context) VirtualNetworkResourceSettingsResponseOutput {
	return o
}

// Gets or sets the address prefixes for the virtual network.
func (o VirtualNetworkResourceSettingsResponseOutput) AddressSpace() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettingsResponse) []string { return v.AddressSpace }).(pulumi.StringArrayOutput)
}

// Gets or sets DHCPOptions that contains an array of DNS servers available to VMs
// deployed in the virtual network.
func (o VirtualNetworkResourceSettingsResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettingsResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Gets or sets a value indicating whether gets or sets whether the
// DDOS protection should be switched on.
func (o VirtualNetworkResourceSettingsResponseOutput) EnableDdosProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettingsResponse) *bool { return v.EnableDdosProtection }).(pulumi.BoolPtrOutput)
}

// The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
func (o VirtualNetworkResourceSettingsResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettingsResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Gets or sets List of subnets in a VirtualNetwork.
func (o VirtualNetworkResourceSettingsResponseOutput) Subnets() SubnetResourceSettingsResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettingsResponse) []SubnetResourceSettingsResponse { return v.Subnets }).(SubnetResourceSettingsResponseArrayOutput)
}

// Gets or sets the target Resource name.
func (o VirtualNetworkResourceSettingsResponseOutput) TargetResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkResourceSettingsResponse) string { return v.TargetResourceName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AutomaticResolutionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AutomaticResolutionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AvailabilitySetResourceSettingsOutput{})
	pulumi.RegisterOutputType(AvailabilitySetResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityPtrOutput{})
	pulumi.RegisterOutputType(IdentityResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(JobStatusResponseOutput{})
	pulumi.RegisterOutputType(JobStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(LBBackendAddressPoolResourceSettingsOutput{})
	pulumi.RegisterOutputType(LBBackendAddressPoolResourceSettingsArrayOutput{})
	pulumi.RegisterOutputType(LBBackendAddressPoolResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(LBBackendAddressPoolResourceSettingsResponseArrayOutput{})
	pulumi.RegisterOutputType(LBFrontendIPConfigurationResourceSettingsOutput{})
	pulumi.RegisterOutputType(LBFrontendIPConfigurationResourceSettingsArrayOutput{})
	pulumi.RegisterOutputType(LBFrontendIPConfigurationResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(LBFrontendIPConfigurationResourceSettingsResponseArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendAddressPoolReferenceOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendAddressPoolReferenceArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendAddressPoolReferenceResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendAddressPoolReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerResourceSettingsOutput{})
	pulumi.RegisterOutputType(LoadBalancerResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(ManualResolutionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ManualResolutionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(MoveCollectionPropertiesOutput{})
	pulumi.RegisterOutputType(MoveCollectionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(MoveCollectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MoveCollectionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(MoveResourceDependencyOverrideOutput{})
	pulumi.RegisterOutputType(MoveResourceDependencyOverrideArrayOutput{})
	pulumi.RegisterOutputType(MoveResourceDependencyOverrideResponseOutput{})
	pulumi.RegisterOutputType(MoveResourceDependencyOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(MoveResourceDependencyResponseOutput{})
	pulumi.RegisterOutputType(MoveResourceDependencyResponseArrayOutput{})
	pulumi.RegisterOutputType(MoveResourceErrorBodyResponseOutput{})
	pulumi.RegisterOutputType(MoveResourceErrorBodyResponsePtrOutput{})
	pulumi.RegisterOutputType(MoveResourceErrorBodyResponseArrayOutput{})
	pulumi.RegisterOutputType(MoveResourceErrorResponseOutput{})
	pulumi.RegisterOutputType(MoveResourceErrorResponsePtrOutput{})
	pulumi.RegisterOutputType(MoveResourcePropertiesOutput{})
	pulumi.RegisterOutputType(MoveResourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(MoveResourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(MoveResourcePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(MoveResourcePropertiesResponseErrorsOutput{})
	pulumi.RegisterOutputType(MoveResourcePropertiesResponseErrorsPtrOutput{})
	pulumi.RegisterOutputType(MoveResourcePropertiesResponseMoveStatusOutput{})
	pulumi.RegisterOutputType(MoveResourcePropertiesResponseMoveStatusPtrOutput{})
	pulumi.RegisterOutputType(MoveResourcePropertiesResponseSourceResourceSettingsOutput{})
	pulumi.RegisterOutputType(MoveResourcePropertiesResponseSourceResourceSettingsPtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResourceSettingsOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupResourceSettingsOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(NicIpConfigurationResourceSettingsOutput{})
	pulumi.RegisterOutputType(NicIpConfigurationResourceSettingsArrayOutput{})
	pulumi.RegisterOutputType(NicIpConfigurationResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(NicIpConfigurationResourceSettingsResponseArrayOutput{})
	pulumi.RegisterOutputType(NsgSecurityRuleOutput{})
	pulumi.RegisterOutputType(NsgSecurityRuleArrayOutput{})
	pulumi.RegisterOutputType(NsgSecurityRuleResponseOutput{})
	pulumi.RegisterOutputType(NsgSecurityRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(PublicIPAddressResourceSettingsOutput{})
	pulumi.RegisterOutputType(PublicIPAddressResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceSettingsOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(SqlDatabaseResourceSettingsOutput{})
	pulumi.RegisterOutputType(SqlDatabaseResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(SqlElasticPoolResourceSettingsOutput{})
	pulumi.RegisterOutputType(SqlElasticPoolResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(SqlServerResourceSettingsOutput{})
	pulumi.RegisterOutputType(SqlServerResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(SubnetReferenceOutput{})
	pulumi.RegisterOutputType(SubnetReferencePtrOutput{})
	pulumi.RegisterOutputType(SubnetReferenceResponseOutput{})
	pulumi.RegisterOutputType(SubnetReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(SubnetResourceSettingsOutput{})
	pulumi.RegisterOutputType(SubnetResourceSettingsArrayOutput{})
	pulumi.RegisterOutputType(SubnetResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(SubnetResourceSettingsResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineResourceSettingsOutput{})
	pulumi.RegisterOutputType(VirtualMachineResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkResourceSettingsOutput{})
	pulumi.RegisterOutputType(VirtualNetworkResourceSettingsResponseOutput{})
}
