// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datashare

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A Trigger data transfer object.
type AccountShareSubscriptionTrigger struct {
	pulumi.CustomResourceState

	// Kind of synchronization
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Name of the azure resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Type of the azure resource
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAccountShareSubscriptionTrigger registers a new resource with the given unique name, arguments, and options.
func NewAccountShareSubscriptionTrigger(ctx *pulumi.Context,
	name string, args *AccountShareSubscriptionTriggerArgs, opts ...pulumi.ResourceOption) (*AccountShareSubscriptionTrigger, error) {
	if args == nil || args.AccountName == nil {
		return nil, errors.New("missing required argument 'AccountName'")
	}
	if args == nil || args.Kind == nil {
		return nil, errors.New("missing required argument 'Kind'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.ShareSubscriptionName == nil {
		return nil, errors.New("missing required argument 'ShareSubscriptionName'")
	}
	if args == nil {
		args = &AccountShareSubscriptionTriggerArgs{}
	}
	var resource AccountShareSubscriptionTrigger
	err := ctx.RegisterResource("azurerm:datashare:AccountShareSubscriptionTrigger", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountShareSubscriptionTrigger gets an existing AccountShareSubscriptionTrigger resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountShareSubscriptionTrigger(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountShareSubscriptionTriggerState, opts ...pulumi.ResourceOption) (*AccountShareSubscriptionTrigger, error) {
	var resource AccountShareSubscriptionTrigger
	err := ctx.ReadResource("azurerm:datashare:AccountShareSubscriptionTrigger", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountShareSubscriptionTrigger resources.
type accountShareSubscriptionTriggerState struct {
	// Kind of synchronization
	Kind *string `pulumi:"kind"`
	// Name of the azure resource
	Name *string `pulumi:"name"`
	// Type of the azure resource
	Type *string `pulumi:"type"`
}

type AccountShareSubscriptionTriggerState struct {
	// Kind of synchronization
	Kind pulumi.StringPtrInput
	// Name of the azure resource
	Name pulumi.StringPtrInput
	// Type of the azure resource
	Type pulumi.StringPtrInput
}

func (AccountShareSubscriptionTriggerState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountShareSubscriptionTriggerState)(nil)).Elem()
}

type accountShareSubscriptionTriggerArgs struct {
	// The name of the share account.
	AccountName string `pulumi:"accountName"`
	// Kind of synchronization
	Kind string `pulumi:"kind"`
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the share subscription which will hold the data set sink.
	ShareSubscriptionName string `pulumi:"shareSubscriptionName"`
}

// The set of arguments for constructing a AccountShareSubscriptionTrigger resource.
type AccountShareSubscriptionTriggerArgs struct {
	// The name of the share account.
	AccountName pulumi.StringInput
	// Kind of synchronization
	Kind pulumi.StringInput
	// The name of the trigger.
	Name pulumi.StringInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
	// The name of the share subscription which will hold the data set sink.
	ShareSubscriptionName pulumi.StringInput
}

func (AccountShareSubscriptionTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountShareSubscriptionTriggerArgs)(nil)).Elem()
}
