// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datashare

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A share data transfer object.
type AccountShare struct {
	pulumi.CustomResourceState

	// Name of the azure resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Properties on the share
	Properties SharePropertiesResponseOutput `pulumi:"properties"`
	// Type of the azure resource
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAccountShare registers a new resource with the given unique name, arguments, and options.
func NewAccountShare(ctx *pulumi.Context,
	name string, args *AccountShareArgs, opts ...pulumi.ResourceOption) (*AccountShare, error) {
	if args == nil || args.AccountName == nil {
		return nil, errors.New("missing required argument 'AccountName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &AccountShareArgs{}
	}
	var resource AccountShare
	err := ctx.RegisterResource("azurerm:datashare:AccountShare", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountShare gets an existing AccountShare resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountShare(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountShareState, opts ...pulumi.ResourceOption) (*AccountShare, error) {
	var resource AccountShare
	err := ctx.ReadResource("azurerm:datashare:AccountShare", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountShare resources.
type accountShareState struct {
	// Name of the azure resource
	Name *string `pulumi:"name"`
	// Properties on the share
	Properties *SharePropertiesResponse `pulumi:"properties"`
	// Type of the azure resource
	Type *string `pulumi:"type"`
}

type AccountShareState struct {
	// Name of the azure resource
	Name pulumi.StringPtrInput
	// Properties on the share
	Properties SharePropertiesResponsePtrInput
	// Type of the azure resource
	Type pulumi.StringPtrInput
}

func (AccountShareState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountShareState)(nil)).Elem()
}

type accountShareArgs struct {
	// The name of the share account.
	AccountName string `pulumi:"accountName"`
	// The name of the share.
	Name string `pulumi:"name"`
	// Properties on the share
	Properties *ShareProperties `pulumi:"properties"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a AccountShare resource.
type AccountShareArgs struct {
	// The name of the share account.
	AccountName pulumi.StringInput
	// The name of the share.
	Name pulumi.StringInput
	// Properties on the share
	Properties SharePropertiesPtrInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
}

func (AccountShareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountShareArgs)(nil)).Elem()
}
