// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datashare

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A share data transfer object.
type Share struct {
	pulumi.CustomResourceState

	// Name of the azure resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Properties on the share
	Properties SharePropertiesResponseOutput `pulumi:"properties"`
	// Type of the azure resource
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewShare registers a new resource with the given unique name, arguments, and options.
func NewShare(ctx *pulumi.Context,
	name string, args *ShareArgs, opts ...pulumi.ResourceOption) (*Share, error) {
	if args == nil || args.AccountName == nil {
		return nil, errors.New("missing required argument 'AccountName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &ShareArgs{}
	}
	var resource Share
	err := ctx.RegisterResource("azurerm:datashare:Share", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetShare gets an existing Share resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetShare(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ShareState, opts ...pulumi.ResourceOption) (*Share, error) {
	var resource Share
	err := ctx.ReadResource("azurerm:datashare:Share", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Share resources.
type shareState struct {
	// Name of the azure resource
	Name *string `pulumi:"name"`
	// Properties on the share
	Properties *SharePropertiesResponse `pulumi:"properties"`
	// Type of the azure resource
	Type *string `pulumi:"type"`
}

type ShareState struct {
	// Name of the azure resource
	Name pulumi.StringPtrInput
	// Properties on the share
	Properties SharePropertiesResponsePtrInput
	// Type of the azure resource
	Type pulumi.StringPtrInput
}

func (ShareState) ElementType() reflect.Type {
	return reflect.TypeOf((*shareState)(nil)).Elem()
}

type shareArgs struct {
	// The name of the share account.
	AccountName string `pulumi:"accountName"`
	// The name of the share.
	Name string `pulumi:"name"`
	// Properties on the share
	Properties *ShareProperties `pulumi:"properties"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a Share resource.
type ShareArgs struct {
	// The name of the share account.
	AccountName pulumi.StringInput
	// The name of the share.
	Name pulumi.StringInput
	// Properties on the share
	Properties SharePropertiesPtrInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
}

func (ShareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*shareArgs)(nil)).Elem()
}
