// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datashare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An account data transfer object.
type AccountType struct {
	// Identity Info on the Account
	Identity IdentityResponse `pulumi:"identity"`
	// Location of the azure resource.
	Location *string `pulumi:"location"`
	// Name of the azure resource
	Name string `pulumi:"name"`
	// Properties on the account
	Properties AccountPropertiesResponse `pulumi:"properties"`
	// Tags on the azure resource.
	Tags map[string]string `pulumi:"tags"`
	// Type of the azure resource
	Type string `pulumi:"type"`
}

// AccountTypeInput is an input type that accepts AccountTypeArgs and AccountTypeOutput values.
// You can construct a concrete instance of `AccountTypeInput` via:
//
//          AccountTypeArgs{...}
type AccountTypeInput interface {
	pulumi.Input

	ToAccountTypeOutput() AccountTypeOutput
	ToAccountTypeOutputWithContext(context.Context) AccountTypeOutput
}

// An account data transfer object.
type AccountTypeArgs struct {
	// Identity Info on the Account
	Identity IdentityResponseInput `pulumi:"identity"`
	// Location of the azure resource.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Name of the azure resource
	Name pulumi.StringInput `pulumi:"name"`
	// Properties on the account
	Properties AccountPropertiesResponseInput `pulumi:"properties"`
	// Tags on the azure resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Type of the azure resource
	Type pulumi.StringInput `pulumi:"type"`
}

func (AccountTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountType)(nil)).Elem()
}

func (i AccountTypeArgs) ToAccountTypeOutput() AccountTypeOutput {
	return i.ToAccountTypeOutputWithContext(context.Background())
}

func (i AccountTypeArgs) ToAccountTypeOutputWithContext(ctx context.Context) AccountTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountTypeOutput)
}

// An account data transfer object.
type AccountTypeOutput struct{ *pulumi.OutputState }

func (AccountTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountType)(nil)).Elem()
}

func (o AccountTypeOutput) ToAccountTypeOutput() AccountTypeOutput {
	return o
}

func (o AccountTypeOutput) ToAccountTypeOutputWithContext(ctx context.Context) AccountTypeOutput {
	return o
}

// Identity Info on the Account
func (o AccountTypeOutput) Identity() IdentityResponseOutput {
	return o.ApplyT(func(v AccountType) IdentityResponse { return v.Identity }).(IdentityResponseOutput)
}

// Location of the azure resource.
func (o AccountTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Name of the azure resource
func (o AccountTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AccountType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties on the account
func (o AccountTypeOutput) Properties() AccountPropertiesResponseOutput {
	return o.ApplyT(func(v AccountType) AccountPropertiesResponse { return v.Properties }).(AccountPropertiesResponseOutput)
}

// Tags on the azure resource.
func (o AccountTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AccountType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Type of the azure resource
func (o AccountTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AccountType) string { return v.Type }).(pulumi.StringOutput)
}

// Account property bag.
type AccountProperties struct {
}

// AccountPropertiesInput is an input type that accepts AccountPropertiesArgs and AccountPropertiesOutput values.
// You can construct a concrete instance of `AccountPropertiesInput` via:
//
//          AccountPropertiesArgs{...}
type AccountPropertiesInput interface {
	pulumi.Input

	ToAccountPropertiesOutput() AccountPropertiesOutput
	ToAccountPropertiesOutputWithContext(context.Context) AccountPropertiesOutput
}

// Account property bag.
type AccountPropertiesArgs struct {
}

func (AccountPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountProperties)(nil)).Elem()
}

func (i AccountPropertiesArgs) ToAccountPropertiesOutput() AccountPropertiesOutput {
	return i.ToAccountPropertiesOutputWithContext(context.Background())
}

func (i AccountPropertiesArgs) ToAccountPropertiesOutputWithContext(ctx context.Context) AccountPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPropertiesOutput)
}

func (i AccountPropertiesArgs) ToAccountPropertiesPtrOutput() AccountPropertiesPtrOutput {
	return i.ToAccountPropertiesPtrOutputWithContext(context.Background())
}

func (i AccountPropertiesArgs) ToAccountPropertiesPtrOutputWithContext(ctx context.Context) AccountPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPropertiesOutput).ToAccountPropertiesPtrOutputWithContext(ctx)
}

// AccountPropertiesPtrInput is an input type that accepts AccountPropertiesArgs, AccountPropertiesPtr and AccountPropertiesPtrOutput values.
// You can construct a concrete instance of `AccountPropertiesPtrInput` via:
//
//          AccountPropertiesArgs{...}
//
//  or:
//
//          nil
type AccountPropertiesPtrInput interface {
	pulumi.Input

	ToAccountPropertiesPtrOutput() AccountPropertiesPtrOutput
	ToAccountPropertiesPtrOutputWithContext(context.Context) AccountPropertiesPtrOutput
}

type accountPropertiesPtrType AccountPropertiesArgs

func AccountPropertiesPtr(v *AccountPropertiesArgs) AccountPropertiesPtrInput {
	return (*accountPropertiesPtrType)(v)
}

func (*accountPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountProperties)(nil)).Elem()
}

func (i *accountPropertiesPtrType) ToAccountPropertiesPtrOutput() AccountPropertiesPtrOutput {
	return i.ToAccountPropertiesPtrOutputWithContext(context.Background())
}

func (i *accountPropertiesPtrType) ToAccountPropertiesPtrOutputWithContext(ctx context.Context) AccountPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPropertiesPtrOutput)
}

// Account property bag.
type AccountPropertiesOutput struct{ *pulumi.OutputState }

func (AccountPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountProperties)(nil)).Elem()
}

func (o AccountPropertiesOutput) ToAccountPropertiesOutput() AccountPropertiesOutput {
	return o
}

func (o AccountPropertiesOutput) ToAccountPropertiesOutputWithContext(ctx context.Context) AccountPropertiesOutput {
	return o
}

func (o AccountPropertiesOutput) ToAccountPropertiesPtrOutput() AccountPropertiesPtrOutput {
	return o.ToAccountPropertiesPtrOutputWithContext(context.Background())
}

func (o AccountPropertiesOutput) ToAccountPropertiesPtrOutputWithContext(ctx context.Context) AccountPropertiesPtrOutput {
	return o.ApplyT(func(v AccountProperties) *AccountProperties {
		return &v
	}).(AccountPropertiesPtrOutput)
}

type AccountPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AccountPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountProperties)(nil)).Elem()
}

func (o AccountPropertiesPtrOutput) ToAccountPropertiesPtrOutput() AccountPropertiesPtrOutput {
	return o
}

func (o AccountPropertiesPtrOutput) ToAccountPropertiesPtrOutputWithContext(ctx context.Context) AccountPropertiesPtrOutput {
	return o
}

func (o AccountPropertiesPtrOutput) Elem() AccountPropertiesOutput {
	return o.ApplyT(func(v *AccountProperties) AccountProperties { return *v }).(AccountPropertiesOutput)
}

// Account property bag.
type AccountPropertiesResponse struct {
	// Time at which the account was created.
	CreatedAt string `pulumi:"createdAt"`
	// Provisioning state of the Account
	ProvisioningState string `pulumi:"provisioningState"`
	// Email of the user who created the resource
	UserEmail string `pulumi:"userEmail"`
	// Name of the user who created the resource
	UserName string `pulumi:"userName"`
}

// AccountPropertiesResponseInput is an input type that accepts AccountPropertiesResponseArgs and AccountPropertiesResponseOutput values.
// You can construct a concrete instance of `AccountPropertiesResponseInput` via:
//
//          AccountPropertiesResponseArgs{...}
type AccountPropertiesResponseInput interface {
	pulumi.Input

	ToAccountPropertiesResponseOutput() AccountPropertiesResponseOutput
	ToAccountPropertiesResponseOutputWithContext(context.Context) AccountPropertiesResponseOutput
}

// Account property bag.
type AccountPropertiesResponseArgs struct {
	// Time at which the account was created.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Provisioning state of the Account
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Email of the user who created the resource
	UserEmail pulumi.StringInput `pulumi:"userEmail"`
	// Name of the user who created the resource
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (AccountPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountPropertiesResponse)(nil)).Elem()
}

func (i AccountPropertiesResponseArgs) ToAccountPropertiesResponseOutput() AccountPropertiesResponseOutput {
	return i.ToAccountPropertiesResponseOutputWithContext(context.Background())
}

func (i AccountPropertiesResponseArgs) ToAccountPropertiesResponseOutputWithContext(ctx context.Context) AccountPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPropertiesResponseOutput)
}

func (i AccountPropertiesResponseArgs) ToAccountPropertiesResponsePtrOutput() AccountPropertiesResponsePtrOutput {
	return i.ToAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i AccountPropertiesResponseArgs) ToAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) AccountPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPropertiesResponseOutput).ToAccountPropertiesResponsePtrOutputWithContext(ctx)
}

// AccountPropertiesResponsePtrInput is an input type that accepts AccountPropertiesResponseArgs, AccountPropertiesResponsePtr and AccountPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `AccountPropertiesResponsePtrInput` via:
//
//          AccountPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type AccountPropertiesResponsePtrInput interface {
	pulumi.Input

	ToAccountPropertiesResponsePtrOutput() AccountPropertiesResponsePtrOutput
	ToAccountPropertiesResponsePtrOutputWithContext(context.Context) AccountPropertiesResponsePtrOutput
}

type accountPropertiesResponsePtrType AccountPropertiesResponseArgs

func AccountPropertiesResponsePtr(v *AccountPropertiesResponseArgs) AccountPropertiesResponsePtrInput {
	return (*accountPropertiesResponsePtrType)(v)
}

func (*accountPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountPropertiesResponse)(nil)).Elem()
}

func (i *accountPropertiesResponsePtrType) ToAccountPropertiesResponsePtrOutput() AccountPropertiesResponsePtrOutput {
	return i.ToAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *accountPropertiesResponsePtrType) ToAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) AccountPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPropertiesResponsePtrOutput)
}

// Account property bag.
type AccountPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AccountPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountPropertiesResponse)(nil)).Elem()
}

func (o AccountPropertiesResponseOutput) ToAccountPropertiesResponseOutput() AccountPropertiesResponseOutput {
	return o
}

func (o AccountPropertiesResponseOutput) ToAccountPropertiesResponseOutputWithContext(ctx context.Context) AccountPropertiesResponseOutput {
	return o
}

func (o AccountPropertiesResponseOutput) ToAccountPropertiesResponsePtrOutput() AccountPropertiesResponsePtrOutput {
	return o.ToAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AccountPropertiesResponseOutput) ToAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) AccountPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) *AccountPropertiesResponse {
		return &v
	}).(AccountPropertiesResponsePtrOutput)
}

// Time at which the account was created.
func (o AccountPropertiesResponseOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Provisioning state of the Account
func (o AccountPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Email of the user who created the resource
func (o AccountPropertiesResponseOutput) UserEmail() pulumi.StringOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) string { return v.UserEmail }).(pulumi.StringOutput)
}

// Name of the user who created the resource
func (o AccountPropertiesResponseOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) string { return v.UserName }).(pulumi.StringOutput)
}

type AccountPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AccountPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountPropertiesResponse)(nil)).Elem()
}

func (o AccountPropertiesResponsePtrOutput) ToAccountPropertiesResponsePtrOutput() AccountPropertiesResponsePtrOutput {
	return o
}

func (o AccountPropertiesResponsePtrOutput) ToAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) AccountPropertiesResponsePtrOutput {
	return o
}

func (o AccountPropertiesResponsePtrOutput) Elem() AccountPropertiesResponseOutput {
	return o.ApplyT(func(v *AccountPropertiesResponse) AccountPropertiesResponse { return *v }).(AccountPropertiesResponseOutput)
}

// Time at which the account was created.
func (o AccountPropertiesResponsePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the Account
func (o AccountPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Email of the user who created the resource
func (o AccountPropertiesResponsePtrOutput) UserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserEmail
	}).(pulumi.StringPtrOutput)
}

// Name of the user who created the resource
func (o AccountPropertiesResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

// A share data transfer object.
type AccountShareType struct {
	// Name of the azure resource
	Name string `pulumi:"name"`
	// Properties on the share
	Properties SharePropertiesResponse `pulumi:"properties"`
	// Type of the azure resource
	Type string `pulumi:"type"`
}

// AccountShareTypeInput is an input type that accepts AccountShareTypeArgs and AccountShareTypeOutput values.
// You can construct a concrete instance of `AccountShareTypeInput` via:
//
//          AccountShareTypeArgs{...}
type AccountShareTypeInput interface {
	pulumi.Input

	ToAccountShareTypeOutput() AccountShareTypeOutput
	ToAccountShareTypeOutputWithContext(context.Context) AccountShareTypeOutput
}

// A share data transfer object.
type AccountShareTypeArgs struct {
	// Name of the azure resource
	Name pulumi.StringInput `pulumi:"name"`
	// Properties on the share
	Properties SharePropertiesResponseInput `pulumi:"properties"`
	// Type of the azure resource
	Type pulumi.StringInput `pulumi:"type"`
}

func (AccountShareTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountShareType)(nil)).Elem()
}

func (i AccountShareTypeArgs) ToAccountShareTypeOutput() AccountShareTypeOutput {
	return i.ToAccountShareTypeOutputWithContext(context.Background())
}

func (i AccountShareTypeArgs) ToAccountShareTypeOutputWithContext(ctx context.Context) AccountShareTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountShareTypeOutput)
}

// A share data transfer object.
type AccountShareTypeOutput struct{ *pulumi.OutputState }

func (AccountShareTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountShareType)(nil)).Elem()
}

func (o AccountShareTypeOutput) ToAccountShareTypeOutput() AccountShareTypeOutput {
	return o
}

func (o AccountShareTypeOutput) ToAccountShareTypeOutputWithContext(ctx context.Context) AccountShareTypeOutput {
	return o
}

// Name of the azure resource
func (o AccountShareTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AccountShareType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties on the share
func (o AccountShareTypeOutput) Properties() SharePropertiesResponseOutput {
	return o.ApplyT(func(v AccountShareType) SharePropertiesResponse { return v.Properties }).(SharePropertiesResponseOutput)
}

// Type of the azure resource
func (o AccountShareTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AccountShareType) string { return v.Type }).(pulumi.StringOutput)
}

// A DataSet data transfer object.
type AccountShareDataSetType struct {
	// Kind of data set.
	Kind string `pulumi:"kind"`
	// Name of the azure resource
	Name string `pulumi:"name"`
	// Type of the azure resource
	Type string `pulumi:"type"`
}

// AccountShareDataSetTypeInput is an input type that accepts AccountShareDataSetTypeArgs and AccountShareDataSetTypeOutput values.
// You can construct a concrete instance of `AccountShareDataSetTypeInput` via:
//
//          AccountShareDataSetTypeArgs{...}
type AccountShareDataSetTypeInput interface {
	pulumi.Input

	ToAccountShareDataSetTypeOutput() AccountShareDataSetTypeOutput
	ToAccountShareDataSetTypeOutputWithContext(context.Context) AccountShareDataSetTypeOutput
}

// A DataSet data transfer object.
type AccountShareDataSetTypeArgs struct {
	// Kind of data set.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name of the azure resource
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the azure resource
	Type pulumi.StringInput `pulumi:"type"`
}

func (AccountShareDataSetTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountShareDataSetType)(nil)).Elem()
}

func (i AccountShareDataSetTypeArgs) ToAccountShareDataSetTypeOutput() AccountShareDataSetTypeOutput {
	return i.ToAccountShareDataSetTypeOutputWithContext(context.Background())
}

func (i AccountShareDataSetTypeArgs) ToAccountShareDataSetTypeOutputWithContext(ctx context.Context) AccountShareDataSetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountShareDataSetTypeOutput)
}

// A DataSet data transfer object.
type AccountShareDataSetTypeOutput struct{ *pulumi.OutputState }

func (AccountShareDataSetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountShareDataSetType)(nil)).Elem()
}

func (o AccountShareDataSetTypeOutput) ToAccountShareDataSetTypeOutput() AccountShareDataSetTypeOutput {
	return o
}

func (o AccountShareDataSetTypeOutput) ToAccountShareDataSetTypeOutputWithContext(ctx context.Context) AccountShareDataSetTypeOutput {
	return o
}

// Kind of data set.
func (o AccountShareDataSetTypeOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v AccountShareDataSetType) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of the azure resource
func (o AccountShareDataSetTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AccountShareDataSetType) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the azure resource
func (o AccountShareDataSetTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AccountShareDataSetType) string { return v.Type }).(pulumi.StringOutput)
}

// A Invitation data transfer object.
type AccountShareInvitationType struct {
	// Name of the azure resource
	Name string `pulumi:"name"`
	// Properties on the Invitation
	Properties InvitationPropertiesResponse `pulumi:"properties"`
	// Type of the azure resource
	Type string `pulumi:"type"`
}

// AccountShareInvitationTypeInput is an input type that accepts AccountShareInvitationTypeArgs and AccountShareInvitationTypeOutput values.
// You can construct a concrete instance of `AccountShareInvitationTypeInput` via:
//
//          AccountShareInvitationTypeArgs{...}
type AccountShareInvitationTypeInput interface {
	pulumi.Input

	ToAccountShareInvitationTypeOutput() AccountShareInvitationTypeOutput
	ToAccountShareInvitationTypeOutputWithContext(context.Context) AccountShareInvitationTypeOutput
}

// A Invitation data transfer object.
type AccountShareInvitationTypeArgs struct {
	// Name of the azure resource
	Name pulumi.StringInput `pulumi:"name"`
	// Properties on the Invitation
	Properties InvitationPropertiesResponseInput `pulumi:"properties"`
	// Type of the azure resource
	Type pulumi.StringInput `pulumi:"type"`
}

func (AccountShareInvitationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountShareInvitationType)(nil)).Elem()
}

func (i AccountShareInvitationTypeArgs) ToAccountShareInvitationTypeOutput() AccountShareInvitationTypeOutput {
	return i.ToAccountShareInvitationTypeOutputWithContext(context.Background())
}

func (i AccountShareInvitationTypeArgs) ToAccountShareInvitationTypeOutputWithContext(ctx context.Context) AccountShareInvitationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountShareInvitationTypeOutput)
}

// A Invitation data transfer object.
type AccountShareInvitationTypeOutput struct{ *pulumi.OutputState }

func (AccountShareInvitationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountShareInvitationType)(nil)).Elem()
}

func (o AccountShareInvitationTypeOutput) ToAccountShareInvitationTypeOutput() AccountShareInvitationTypeOutput {
	return o
}

func (o AccountShareInvitationTypeOutput) ToAccountShareInvitationTypeOutputWithContext(ctx context.Context) AccountShareInvitationTypeOutput {
	return o
}

// Name of the azure resource
func (o AccountShareInvitationTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AccountShareInvitationType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties on the Invitation
func (o AccountShareInvitationTypeOutput) Properties() InvitationPropertiesResponseOutput {
	return o.ApplyT(func(v AccountShareInvitationType) InvitationPropertiesResponse { return v.Properties }).(InvitationPropertiesResponseOutput)
}

// Type of the azure resource
func (o AccountShareInvitationTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AccountShareInvitationType) string { return v.Type }).(pulumi.StringOutput)
}

// A share subscription data transfer object.
type AccountShareSubscriptionType struct {
	// Name of the azure resource
	Name string `pulumi:"name"`
	// Properties on the share subscription
	Properties ShareSubscriptionPropertiesResponse `pulumi:"properties"`
	// Type of the azure resource
	Type string `pulumi:"type"`
}

// AccountShareSubscriptionTypeInput is an input type that accepts AccountShareSubscriptionTypeArgs and AccountShareSubscriptionTypeOutput values.
// You can construct a concrete instance of `AccountShareSubscriptionTypeInput` via:
//
//          AccountShareSubscriptionTypeArgs{...}
type AccountShareSubscriptionTypeInput interface {
	pulumi.Input

	ToAccountShareSubscriptionTypeOutput() AccountShareSubscriptionTypeOutput
	ToAccountShareSubscriptionTypeOutputWithContext(context.Context) AccountShareSubscriptionTypeOutput
}

// A share subscription data transfer object.
type AccountShareSubscriptionTypeArgs struct {
	// Name of the azure resource
	Name pulumi.StringInput `pulumi:"name"`
	// Properties on the share subscription
	Properties ShareSubscriptionPropertiesResponseInput `pulumi:"properties"`
	// Type of the azure resource
	Type pulumi.StringInput `pulumi:"type"`
}

func (AccountShareSubscriptionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountShareSubscriptionType)(nil)).Elem()
}

func (i AccountShareSubscriptionTypeArgs) ToAccountShareSubscriptionTypeOutput() AccountShareSubscriptionTypeOutput {
	return i.ToAccountShareSubscriptionTypeOutputWithContext(context.Background())
}

func (i AccountShareSubscriptionTypeArgs) ToAccountShareSubscriptionTypeOutputWithContext(ctx context.Context) AccountShareSubscriptionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountShareSubscriptionTypeOutput)
}

// A share subscription data transfer object.
type AccountShareSubscriptionTypeOutput struct{ *pulumi.OutputState }

func (AccountShareSubscriptionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountShareSubscriptionType)(nil)).Elem()
}

func (o AccountShareSubscriptionTypeOutput) ToAccountShareSubscriptionTypeOutput() AccountShareSubscriptionTypeOutput {
	return o
}

func (o AccountShareSubscriptionTypeOutput) ToAccountShareSubscriptionTypeOutputWithContext(ctx context.Context) AccountShareSubscriptionTypeOutput {
	return o
}

// Name of the azure resource
func (o AccountShareSubscriptionTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AccountShareSubscriptionType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties on the share subscription
func (o AccountShareSubscriptionTypeOutput) Properties() ShareSubscriptionPropertiesResponseOutput {
	return o.ApplyT(func(v AccountShareSubscriptionType) ShareSubscriptionPropertiesResponse { return v.Properties }).(ShareSubscriptionPropertiesResponseOutput)
}

// Type of the azure resource
func (o AccountShareSubscriptionTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AccountShareSubscriptionType) string { return v.Type }).(pulumi.StringOutput)
}

// A data set mapping data transfer object.
type AccountShareSubscriptionDataSetMappingType struct {
	// Kind of data set mapping.
	Kind string `pulumi:"kind"`
	// Name of the azure resource
	Name string `pulumi:"name"`
	// Type of the azure resource
	Type string `pulumi:"type"`
}

// AccountShareSubscriptionDataSetMappingTypeInput is an input type that accepts AccountShareSubscriptionDataSetMappingTypeArgs and AccountShareSubscriptionDataSetMappingTypeOutput values.
// You can construct a concrete instance of `AccountShareSubscriptionDataSetMappingTypeInput` via:
//
//          AccountShareSubscriptionDataSetMappingTypeArgs{...}
type AccountShareSubscriptionDataSetMappingTypeInput interface {
	pulumi.Input

	ToAccountShareSubscriptionDataSetMappingTypeOutput() AccountShareSubscriptionDataSetMappingTypeOutput
	ToAccountShareSubscriptionDataSetMappingTypeOutputWithContext(context.Context) AccountShareSubscriptionDataSetMappingTypeOutput
}

// A data set mapping data transfer object.
type AccountShareSubscriptionDataSetMappingTypeArgs struct {
	// Kind of data set mapping.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name of the azure resource
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the azure resource
	Type pulumi.StringInput `pulumi:"type"`
}

func (AccountShareSubscriptionDataSetMappingTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountShareSubscriptionDataSetMappingType)(nil)).Elem()
}

func (i AccountShareSubscriptionDataSetMappingTypeArgs) ToAccountShareSubscriptionDataSetMappingTypeOutput() AccountShareSubscriptionDataSetMappingTypeOutput {
	return i.ToAccountShareSubscriptionDataSetMappingTypeOutputWithContext(context.Background())
}

func (i AccountShareSubscriptionDataSetMappingTypeArgs) ToAccountShareSubscriptionDataSetMappingTypeOutputWithContext(ctx context.Context) AccountShareSubscriptionDataSetMappingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountShareSubscriptionDataSetMappingTypeOutput)
}

// A data set mapping data transfer object.
type AccountShareSubscriptionDataSetMappingTypeOutput struct{ *pulumi.OutputState }

func (AccountShareSubscriptionDataSetMappingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountShareSubscriptionDataSetMappingType)(nil)).Elem()
}

func (o AccountShareSubscriptionDataSetMappingTypeOutput) ToAccountShareSubscriptionDataSetMappingTypeOutput() AccountShareSubscriptionDataSetMappingTypeOutput {
	return o
}

func (o AccountShareSubscriptionDataSetMappingTypeOutput) ToAccountShareSubscriptionDataSetMappingTypeOutputWithContext(ctx context.Context) AccountShareSubscriptionDataSetMappingTypeOutput {
	return o
}

// Kind of data set mapping.
func (o AccountShareSubscriptionDataSetMappingTypeOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v AccountShareSubscriptionDataSetMappingType) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of the azure resource
func (o AccountShareSubscriptionDataSetMappingTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AccountShareSubscriptionDataSetMappingType) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the azure resource
func (o AccountShareSubscriptionDataSetMappingTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AccountShareSubscriptionDataSetMappingType) string { return v.Type }).(pulumi.StringOutput)
}

// A Trigger data transfer object.
type AccountShareSubscriptionTriggerType struct {
	// Kind of synchronization
	Kind string `pulumi:"kind"`
	// Name of the azure resource
	Name string `pulumi:"name"`
	// Type of the azure resource
	Type string `pulumi:"type"`
}

// AccountShareSubscriptionTriggerTypeInput is an input type that accepts AccountShareSubscriptionTriggerTypeArgs and AccountShareSubscriptionTriggerTypeOutput values.
// You can construct a concrete instance of `AccountShareSubscriptionTriggerTypeInput` via:
//
//          AccountShareSubscriptionTriggerTypeArgs{...}
type AccountShareSubscriptionTriggerTypeInput interface {
	pulumi.Input

	ToAccountShareSubscriptionTriggerTypeOutput() AccountShareSubscriptionTriggerTypeOutput
	ToAccountShareSubscriptionTriggerTypeOutputWithContext(context.Context) AccountShareSubscriptionTriggerTypeOutput
}

// A Trigger data transfer object.
type AccountShareSubscriptionTriggerTypeArgs struct {
	// Kind of synchronization
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name of the azure resource
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the azure resource
	Type pulumi.StringInput `pulumi:"type"`
}

func (AccountShareSubscriptionTriggerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountShareSubscriptionTriggerType)(nil)).Elem()
}

func (i AccountShareSubscriptionTriggerTypeArgs) ToAccountShareSubscriptionTriggerTypeOutput() AccountShareSubscriptionTriggerTypeOutput {
	return i.ToAccountShareSubscriptionTriggerTypeOutputWithContext(context.Background())
}

func (i AccountShareSubscriptionTriggerTypeArgs) ToAccountShareSubscriptionTriggerTypeOutputWithContext(ctx context.Context) AccountShareSubscriptionTriggerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountShareSubscriptionTriggerTypeOutput)
}

// A Trigger data transfer object.
type AccountShareSubscriptionTriggerTypeOutput struct{ *pulumi.OutputState }

func (AccountShareSubscriptionTriggerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountShareSubscriptionTriggerType)(nil)).Elem()
}

func (o AccountShareSubscriptionTriggerTypeOutput) ToAccountShareSubscriptionTriggerTypeOutput() AccountShareSubscriptionTriggerTypeOutput {
	return o
}

func (o AccountShareSubscriptionTriggerTypeOutput) ToAccountShareSubscriptionTriggerTypeOutputWithContext(ctx context.Context) AccountShareSubscriptionTriggerTypeOutput {
	return o
}

// Kind of synchronization
func (o AccountShareSubscriptionTriggerTypeOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v AccountShareSubscriptionTriggerType) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of the azure resource
func (o AccountShareSubscriptionTriggerTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AccountShareSubscriptionTriggerType) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the azure resource
func (o AccountShareSubscriptionTriggerTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AccountShareSubscriptionTriggerType) string { return v.Type }).(pulumi.StringOutput)
}

// A Synchronization Setting data transfer object.
type AccountShareSynchronizationSettingType struct {
	// Kind of synchronization
	Kind string `pulumi:"kind"`
	// Name of the azure resource
	Name string `pulumi:"name"`
	// Type of the azure resource
	Type string `pulumi:"type"`
}

// AccountShareSynchronizationSettingTypeInput is an input type that accepts AccountShareSynchronizationSettingTypeArgs and AccountShareSynchronizationSettingTypeOutput values.
// You can construct a concrete instance of `AccountShareSynchronizationSettingTypeInput` via:
//
//          AccountShareSynchronizationSettingTypeArgs{...}
type AccountShareSynchronizationSettingTypeInput interface {
	pulumi.Input

	ToAccountShareSynchronizationSettingTypeOutput() AccountShareSynchronizationSettingTypeOutput
	ToAccountShareSynchronizationSettingTypeOutputWithContext(context.Context) AccountShareSynchronizationSettingTypeOutput
}

// A Synchronization Setting data transfer object.
type AccountShareSynchronizationSettingTypeArgs struct {
	// Kind of synchronization
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name of the azure resource
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the azure resource
	Type pulumi.StringInput `pulumi:"type"`
}

func (AccountShareSynchronizationSettingTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountShareSynchronizationSettingType)(nil)).Elem()
}

func (i AccountShareSynchronizationSettingTypeArgs) ToAccountShareSynchronizationSettingTypeOutput() AccountShareSynchronizationSettingTypeOutput {
	return i.ToAccountShareSynchronizationSettingTypeOutputWithContext(context.Background())
}

func (i AccountShareSynchronizationSettingTypeArgs) ToAccountShareSynchronizationSettingTypeOutputWithContext(ctx context.Context) AccountShareSynchronizationSettingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountShareSynchronizationSettingTypeOutput)
}

// A Synchronization Setting data transfer object.
type AccountShareSynchronizationSettingTypeOutput struct{ *pulumi.OutputState }

func (AccountShareSynchronizationSettingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountShareSynchronizationSettingType)(nil)).Elem()
}

func (o AccountShareSynchronizationSettingTypeOutput) ToAccountShareSynchronizationSettingTypeOutput() AccountShareSynchronizationSettingTypeOutput {
	return o
}

func (o AccountShareSynchronizationSettingTypeOutput) ToAccountShareSynchronizationSettingTypeOutputWithContext(ctx context.Context) AccountShareSynchronizationSettingTypeOutput {
	return o
}

// Kind of synchronization
func (o AccountShareSynchronizationSettingTypeOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v AccountShareSynchronizationSettingType) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of the azure resource
func (o AccountShareSynchronizationSettingTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AccountShareSynchronizationSettingType) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the azure resource
func (o AccountShareSynchronizationSettingTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AccountShareSynchronizationSettingType) string { return v.Type }).(pulumi.StringOutput)
}

// Identity of resource
type Identity struct {
	// Identity Type
	Type *string `pulumi:"type"`
}

// IdentityInput is an input type that accepts IdentityArgs and IdentityOutput values.
// You can construct a concrete instance of `IdentityInput` via:
//
//          IdentityArgs{...}
type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(context.Context) IdentityOutput
}

// Identity of resource
type IdentityArgs struct {
	// Identity Type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (i IdentityArgs) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

func (i IdentityArgs) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput).ToIdentityPtrOutputWithContext(ctx)
}

// IdentityPtrInput is an input type that accepts IdentityArgs, IdentityPtr and IdentityPtrOutput values.
// You can construct a concrete instance of `IdentityPtrInput` via:
//
//          IdentityArgs{...}
//
//  or:
//
//          nil
type IdentityPtrInput interface {
	pulumi.Input

	ToIdentityPtrOutput() IdentityPtrOutput
	ToIdentityPtrOutputWithContext(context.Context) IdentityPtrOutput
}

type identityPtrType IdentityArgs

func IdentityPtr(v *IdentityArgs) IdentityPtrInput {
	return (*identityPtrType)(v)
}

func (*identityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *identityPtrType) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i *identityPtrType) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPtrOutput)
}

// Identity of resource
type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o.ToIdentityPtrOutputWithContext(context.Background())
}

func (o IdentityOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o.ApplyT(func(v Identity) *Identity {
		return &v
	}).(IdentityPtrOutput)
}

// Identity Type
func (o IdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Identity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IdentityPtrOutput struct{ *pulumi.OutputState }

func (IdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityPtrOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) Elem() IdentityOutput {
	return o.ApplyT(func(v *Identity) Identity { return *v }).(IdentityOutput)
}

// Identity Type
func (o IdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity of resource
type IdentityResponse struct {
	// service principal Id
	PrincipalId string `pulumi:"principalId"`
	// Tenant Id
	TenantId string `pulumi:"tenantId"`
	// Identity Type
	Type *string `pulumi:"type"`
}

// IdentityResponseInput is an input type that accepts IdentityResponseArgs and IdentityResponseOutput values.
// You can construct a concrete instance of `IdentityResponseInput` via:
//
//          IdentityResponseArgs{...}
type IdentityResponseInput interface {
	pulumi.Input

	ToIdentityResponseOutput() IdentityResponseOutput
	ToIdentityResponseOutputWithContext(context.Context) IdentityResponseOutput
}

// Identity of resource
type IdentityResponseArgs struct {
	// service principal Id
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// Tenant Id
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// Identity Type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (i IdentityResponseArgs) ToIdentityResponseOutput() IdentityResponseOutput {
	return i.ToIdentityResponseOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput)
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput).ToIdentityResponsePtrOutputWithContext(ctx)
}

// IdentityResponsePtrInput is an input type that accepts IdentityResponseArgs, IdentityResponsePtr and IdentityResponsePtrOutput values.
// You can construct a concrete instance of `IdentityResponsePtrInput` via:
//
//          IdentityResponseArgs{...}
//
//  or:
//
//          nil
type IdentityResponsePtrInput interface {
	pulumi.Input

	ToIdentityResponsePtrOutput() IdentityResponsePtrOutput
	ToIdentityResponsePtrOutputWithContext(context.Context) IdentityResponsePtrOutput
}

type identityResponsePtrType IdentityResponseArgs

func IdentityResponsePtr(v *IdentityResponseArgs) IdentityResponsePtrInput {
	return (*identityResponsePtrType)(v)
}

func (*identityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponsePtrOutput)
}

// Identity of resource
type IdentityResponseOutput struct{ *pulumi.OutputState }

func (IdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (o IdentityResponseOutput) ToIdentityResponseOutput() IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o.ApplyT(func(v IdentityResponse) *IdentityResponse {
		return &v
	}).(IdentityResponsePtrOutput)
}

// service principal Id
func (o IdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// Tenant Id
func (o IdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Identity Type
func (o IdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) Elem() IdentityResponseOutput {
	return o.ApplyT(func(v *IdentityResponse) IdentityResponse { return *v }).(IdentityResponseOutput)
}

// service principal Id
func (o IdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Tenant Id
func (o IdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Identity Type
func (o IdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Invitation property bag.
type InvitationProperties struct {
	// The target Azure AD Id. Can't be combined with email.
	TargetActiveDirectoryId *string `pulumi:"targetActiveDirectoryId"`
	// The email the invitation is directed to.
	TargetEmail *string `pulumi:"targetEmail"`
	// The target user or application Id that invitation is being sent to.
	// Must be specified along TargetActiveDirectoryId. This enables sending
	// invitations to specific users or applications in an AD tenant.
	TargetObjectId *string `pulumi:"targetObjectId"`
}

// InvitationPropertiesInput is an input type that accepts InvitationPropertiesArgs and InvitationPropertiesOutput values.
// You can construct a concrete instance of `InvitationPropertiesInput` via:
//
//          InvitationPropertiesArgs{...}
type InvitationPropertiesInput interface {
	pulumi.Input

	ToInvitationPropertiesOutput() InvitationPropertiesOutput
	ToInvitationPropertiesOutputWithContext(context.Context) InvitationPropertiesOutput
}

// Invitation property bag.
type InvitationPropertiesArgs struct {
	// The target Azure AD Id. Can't be combined with email.
	TargetActiveDirectoryId pulumi.StringPtrInput `pulumi:"targetActiveDirectoryId"`
	// The email the invitation is directed to.
	TargetEmail pulumi.StringPtrInput `pulumi:"targetEmail"`
	// The target user or application Id that invitation is being sent to.
	// Must be specified along TargetActiveDirectoryId. This enables sending
	// invitations to specific users or applications in an AD tenant.
	TargetObjectId pulumi.StringPtrInput `pulumi:"targetObjectId"`
}

func (InvitationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InvitationProperties)(nil)).Elem()
}

func (i InvitationPropertiesArgs) ToInvitationPropertiesOutput() InvitationPropertiesOutput {
	return i.ToInvitationPropertiesOutputWithContext(context.Background())
}

func (i InvitationPropertiesArgs) ToInvitationPropertiesOutputWithContext(ctx context.Context) InvitationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvitationPropertiesOutput)
}

func (i InvitationPropertiesArgs) ToInvitationPropertiesPtrOutput() InvitationPropertiesPtrOutput {
	return i.ToInvitationPropertiesPtrOutputWithContext(context.Background())
}

func (i InvitationPropertiesArgs) ToInvitationPropertiesPtrOutputWithContext(ctx context.Context) InvitationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvitationPropertiesOutput).ToInvitationPropertiesPtrOutputWithContext(ctx)
}

// InvitationPropertiesPtrInput is an input type that accepts InvitationPropertiesArgs, InvitationPropertiesPtr and InvitationPropertiesPtrOutput values.
// You can construct a concrete instance of `InvitationPropertiesPtrInput` via:
//
//          InvitationPropertiesArgs{...}
//
//  or:
//
//          nil
type InvitationPropertiesPtrInput interface {
	pulumi.Input

	ToInvitationPropertiesPtrOutput() InvitationPropertiesPtrOutput
	ToInvitationPropertiesPtrOutputWithContext(context.Context) InvitationPropertiesPtrOutput
}

type invitationPropertiesPtrType InvitationPropertiesArgs

func InvitationPropertiesPtr(v *InvitationPropertiesArgs) InvitationPropertiesPtrInput {
	return (*invitationPropertiesPtrType)(v)
}

func (*invitationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InvitationProperties)(nil)).Elem()
}

func (i *invitationPropertiesPtrType) ToInvitationPropertiesPtrOutput() InvitationPropertiesPtrOutput {
	return i.ToInvitationPropertiesPtrOutputWithContext(context.Background())
}

func (i *invitationPropertiesPtrType) ToInvitationPropertiesPtrOutputWithContext(ctx context.Context) InvitationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvitationPropertiesPtrOutput)
}

// Invitation property bag.
type InvitationPropertiesOutput struct{ *pulumi.OutputState }

func (InvitationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InvitationProperties)(nil)).Elem()
}

func (o InvitationPropertiesOutput) ToInvitationPropertiesOutput() InvitationPropertiesOutput {
	return o
}

func (o InvitationPropertiesOutput) ToInvitationPropertiesOutputWithContext(ctx context.Context) InvitationPropertiesOutput {
	return o
}

func (o InvitationPropertiesOutput) ToInvitationPropertiesPtrOutput() InvitationPropertiesPtrOutput {
	return o.ToInvitationPropertiesPtrOutputWithContext(context.Background())
}

func (o InvitationPropertiesOutput) ToInvitationPropertiesPtrOutputWithContext(ctx context.Context) InvitationPropertiesPtrOutput {
	return o.ApplyT(func(v InvitationProperties) *InvitationProperties {
		return &v
	}).(InvitationPropertiesPtrOutput)
}

// The target Azure AD Id. Can't be combined with email.
func (o InvitationPropertiesOutput) TargetActiveDirectoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InvitationProperties) *string { return v.TargetActiveDirectoryId }).(pulumi.StringPtrOutput)
}

// The email the invitation is directed to.
func (o InvitationPropertiesOutput) TargetEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InvitationProperties) *string { return v.TargetEmail }).(pulumi.StringPtrOutput)
}

// The target user or application Id that invitation is being sent to.
// Must be specified along TargetActiveDirectoryId. This enables sending
// invitations to specific users or applications in an AD tenant.
func (o InvitationPropertiesOutput) TargetObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InvitationProperties) *string { return v.TargetObjectId }).(pulumi.StringPtrOutput)
}

type InvitationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (InvitationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InvitationProperties)(nil)).Elem()
}

func (o InvitationPropertiesPtrOutput) ToInvitationPropertiesPtrOutput() InvitationPropertiesPtrOutput {
	return o
}

func (o InvitationPropertiesPtrOutput) ToInvitationPropertiesPtrOutputWithContext(ctx context.Context) InvitationPropertiesPtrOutput {
	return o
}

func (o InvitationPropertiesPtrOutput) Elem() InvitationPropertiesOutput {
	return o.ApplyT(func(v *InvitationProperties) InvitationProperties { return *v }).(InvitationPropertiesOutput)
}

// The target Azure AD Id. Can't be combined with email.
func (o InvitationPropertiesPtrOutput) TargetActiveDirectoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvitationProperties) *string {
		if v == nil {
			return nil
		}
		return v.TargetActiveDirectoryId
	}).(pulumi.StringPtrOutput)
}

// The email the invitation is directed to.
func (o InvitationPropertiesPtrOutput) TargetEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvitationProperties) *string {
		if v == nil {
			return nil
		}
		return v.TargetEmail
	}).(pulumi.StringPtrOutput)
}

// The target user or application Id that invitation is being sent to.
// Must be specified along TargetActiveDirectoryId. This enables sending
// invitations to specific users or applications in an AD tenant.
func (o InvitationPropertiesPtrOutput) TargetObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvitationProperties) *string {
		if v == nil {
			return nil
		}
		return v.TargetObjectId
	}).(pulumi.StringPtrOutput)
}

// Invitation property bag.
type InvitationPropertiesResponse struct {
	// unique invitation id
	InvitationId string `pulumi:"invitationId"`
	// The status of the invitation.
	InvitationStatus string `pulumi:"invitationStatus"`
	// The time the recipient responded to the invitation.
	RespondedAt string `pulumi:"respondedAt"`
	// Gets the time at which the invitation was sent.
	SentAt string `pulumi:"sentAt"`
	// The target Azure AD Id. Can't be combined with email.
	TargetActiveDirectoryId *string `pulumi:"targetActiveDirectoryId"`
	// The email the invitation is directed to.
	TargetEmail *string `pulumi:"targetEmail"`
	// The target user or application Id that invitation is being sent to.
	// Must be specified along TargetActiveDirectoryId. This enables sending
	// invitations to specific users or applications in an AD tenant.
	TargetObjectId *string `pulumi:"targetObjectId"`
	// Email of the user who created the resource
	UserEmail string `pulumi:"userEmail"`
	// Name of the user who created the resource
	UserName string `pulumi:"userName"`
}

// InvitationPropertiesResponseInput is an input type that accepts InvitationPropertiesResponseArgs and InvitationPropertiesResponseOutput values.
// You can construct a concrete instance of `InvitationPropertiesResponseInput` via:
//
//          InvitationPropertiesResponseArgs{...}
type InvitationPropertiesResponseInput interface {
	pulumi.Input

	ToInvitationPropertiesResponseOutput() InvitationPropertiesResponseOutput
	ToInvitationPropertiesResponseOutputWithContext(context.Context) InvitationPropertiesResponseOutput
}

// Invitation property bag.
type InvitationPropertiesResponseArgs struct {
	// unique invitation id
	InvitationId pulumi.StringInput `pulumi:"invitationId"`
	// The status of the invitation.
	InvitationStatus pulumi.StringInput `pulumi:"invitationStatus"`
	// The time the recipient responded to the invitation.
	RespondedAt pulumi.StringInput `pulumi:"respondedAt"`
	// Gets the time at which the invitation was sent.
	SentAt pulumi.StringInput `pulumi:"sentAt"`
	// The target Azure AD Id. Can't be combined with email.
	TargetActiveDirectoryId pulumi.StringPtrInput `pulumi:"targetActiveDirectoryId"`
	// The email the invitation is directed to.
	TargetEmail pulumi.StringPtrInput `pulumi:"targetEmail"`
	// The target user or application Id that invitation is being sent to.
	// Must be specified along TargetActiveDirectoryId. This enables sending
	// invitations to specific users or applications in an AD tenant.
	TargetObjectId pulumi.StringPtrInput `pulumi:"targetObjectId"`
	// Email of the user who created the resource
	UserEmail pulumi.StringInput `pulumi:"userEmail"`
	// Name of the user who created the resource
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (InvitationPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InvitationPropertiesResponse)(nil)).Elem()
}

func (i InvitationPropertiesResponseArgs) ToInvitationPropertiesResponseOutput() InvitationPropertiesResponseOutput {
	return i.ToInvitationPropertiesResponseOutputWithContext(context.Background())
}

func (i InvitationPropertiesResponseArgs) ToInvitationPropertiesResponseOutputWithContext(ctx context.Context) InvitationPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvitationPropertiesResponseOutput)
}

func (i InvitationPropertiesResponseArgs) ToInvitationPropertiesResponsePtrOutput() InvitationPropertiesResponsePtrOutput {
	return i.ToInvitationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i InvitationPropertiesResponseArgs) ToInvitationPropertiesResponsePtrOutputWithContext(ctx context.Context) InvitationPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvitationPropertiesResponseOutput).ToInvitationPropertiesResponsePtrOutputWithContext(ctx)
}

// InvitationPropertiesResponsePtrInput is an input type that accepts InvitationPropertiesResponseArgs, InvitationPropertiesResponsePtr and InvitationPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `InvitationPropertiesResponsePtrInput` via:
//
//          InvitationPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type InvitationPropertiesResponsePtrInput interface {
	pulumi.Input

	ToInvitationPropertiesResponsePtrOutput() InvitationPropertiesResponsePtrOutput
	ToInvitationPropertiesResponsePtrOutputWithContext(context.Context) InvitationPropertiesResponsePtrOutput
}

type invitationPropertiesResponsePtrType InvitationPropertiesResponseArgs

func InvitationPropertiesResponsePtr(v *InvitationPropertiesResponseArgs) InvitationPropertiesResponsePtrInput {
	return (*invitationPropertiesResponsePtrType)(v)
}

func (*invitationPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InvitationPropertiesResponse)(nil)).Elem()
}

func (i *invitationPropertiesResponsePtrType) ToInvitationPropertiesResponsePtrOutput() InvitationPropertiesResponsePtrOutput {
	return i.ToInvitationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *invitationPropertiesResponsePtrType) ToInvitationPropertiesResponsePtrOutputWithContext(ctx context.Context) InvitationPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvitationPropertiesResponsePtrOutput)
}

// Invitation property bag.
type InvitationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (InvitationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InvitationPropertiesResponse)(nil)).Elem()
}

func (o InvitationPropertiesResponseOutput) ToInvitationPropertiesResponseOutput() InvitationPropertiesResponseOutput {
	return o
}

func (o InvitationPropertiesResponseOutput) ToInvitationPropertiesResponseOutputWithContext(ctx context.Context) InvitationPropertiesResponseOutput {
	return o
}

func (o InvitationPropertiesResponseOutput) ToInvitationPropertiesResponsePtrOutput() InvitationPropertiesResponsePtrOutput {
	return o.ToInvitationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o InvitationPropertiesResponseOutput) ToInvitationPropertiesResponsePtrOutputWithContext(ctx context.Context) InvitationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v InvitationPropertiesResponse) *InvitationPropertiesResponse {
		return &v
	}).(InvitationPropertiesResponsePtrOutput)
}

// unique invitation id
func (o InvitationPropertiesResponseOutput) InvitationId() pulumi.StringOutput {
	return o.ApplyT(func(v InvitationPropertiesResponse) string { return v.InvitationId }).(pulumi.StringOutput)
}

// The status of the invitation.
func (o InvitationPropertiesResponseOutput) InvitationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v InvitationPropertiesResponse) string { return v.InvitationStatus }).(pulumi.StringOutput)
}

// The time the recipient responded to the invitation.
func (o InvitationPropertiesResponseOutput) RespondedAt() pulumi.StringOutput {
	return o.ApplyT(func(v InvitationPropertiesResponse) string { return v.RespondedAt }).(pulumi.StringOutput)
}

// Gets the time at which the invitation was sent.
func (o InvitationPropertiesResponseOutput) SentAt() pulumi.StringOutput {
	return o.ApplyT(func(v InvitationPropertiesResponse) string { return v.SentAt }).(pulumi.StringOutput)
}

// The target Azure AD Id. Can't be combined with email.
func (o InvitationPropertiesResponseOutput) TargetActiveDirectoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InvitationPropertiesResponse) *string { return v.TargetActiveDirectoryId }).(pulumi.StringPtrOutput)
}

// The email the invitation is directed to.
func (o InvitationPropertiesResponseOutput) TargetEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InvitationPropertiesResponse) *string { return v.TargetEmail }).(pulumi.StringPtrOutput)
}

// The target user or application Id that invitation is being sent to.
// Must be specified along TargetActiveDirectoryId. This enables sending
// invitations to specific users or applications in an AD tenant.
func (o InvitationPropertiesResponseOutput) TargetObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InvitationPropertiesResponse) *string { return v.TargetObjectId }).(pulumi.StringPtrOutput)
}

// Email of the user who created the resource
func (o InvitationPropertiesResponseOutput) UserEmail() pulumi.StringOutput {
	return o.ApplyT(func(v InvitationPropertiesResponse) string { return v.UserEmail }).(pulumi.StringOutput)
}

// Name of the user who created the resource
func (o InvitationPropertiesResponseOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v InvitationPropertiesResponse) string { return v.UserName }).(pulumi.StringOutput)
}

type InvitationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (InvitationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InvitationPropertiesResponse)(nil)).Elem()
}

func (o InvitationPropertiesResponsePtrOutput) ToInvitationPropertiesResponsePtrOutput() InvitationPropertiesResponsePtrOutput {
	return o
}

func (o InvitationPropertiesResponsePtrOutput) ToInvitationPropertiesResponsePtrOutputWithContext(ctx context.Context) InvitationPropertiesResponsePtrOutput {
	return o
}

func (o InvitationPropertiesResponsePtrOutput) Elem() InvitationPropertiesResponseOutput {
	return o.ApplyT(func(v *InvitationPropertiesResponse) InvitationPropertiesResponse { return *v }).(InvitationPropertiesResponseOutput)
}

// unique invitation id
func (o InvitationPropertiesResponsePtrOutput) InvitationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvitationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InvitationId
	}).(pulumi.StringPtrOutput)
}

// The status of the invitation.
func (o InvitationPropertiesResponsePtrOutput) InvitationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvitationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InvitationStatus
	}).(pulumi.StringPtrOutput)
}

// The time the recipient responded to the invitation.
func (o InvitationPropertiesResponsePtrOutput) RespondedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvitationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RespondedAt
	}).(pulumi.StringPtrOutput)
}

// Gets the time at which the invitation was sent.
func (o InvitationPropertiesResponsePtrOutput) SentAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvitationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SentAt
	}).(pulumi.StringPtrOutput)
}

// The target Azure AD Id. Can't be combined with email.
func (o InvitationPropertiesResponsePtrOutput) TargetActiveDirectoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvitationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetActiveDirectoryId
	}).(pulumi.StringPtrOutput)
}

// The email the invitation is directed to.
func (o InvitationPropertiesResponsePtrOutput) TargetEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvitationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetEmail
	}).(pulumi.StringPtrOutput)
}

// The target user or application Id that invitation is being sent to.
// Must be specified along TargetActiveDirectoryId. This enables sending
// invitations to specific users or applications in an AD tenant.
func (o InvitationPropertiesResponsePtrOutput) TargetObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvitationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetObjectId
	}).(pulumi.StringPtrOutput)
}

// Email of the user who created the resource
func (o InvitationPropertiesResponsePtrOutput) UserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvitationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserEmail
	}).(pulumi.StringPtrOutput)
}

// Name of the user who created the resource
func (o InvitationPropertiesResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvitationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

// Share property bag.
type ShareProperties struct {
	// Share description.
	Description *string `pulumi:"description"`
	// Share kind.
	ShareKind *string `pulumi:"shareKind"`
	// Share terms.
	Terms *string `pulumi:"terms"`
}

// SharePropertiesInput is an input type that accepts SharePropertiesArgs and SharePropertiesOutput values.
// You can construct a concrete instance of `SharePropertiesInput` via:
//
//          SharePropertiesArgs{...}
type SharePropertiesInput interface {
	pulumi.Input

	ToSharePropertiesOutput() SharePropertiesOutput
	ToSharePropertiesOutputWithContext(context.Context) SharePropertiesOutput
}

// Share property bag.
type SharePropertiesArgs struct {
	// Share description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Share kind.
	ShareKind pulumi.StringPtrInput `pulumi:"shareKind"`
	// Share terms.
	Terms pulumi.StringPtrInput `pulumi:"terms"`
}

func (SharePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareProperties)(nil)).Elem()
}

func (i SharePropertiesArgs) ToSharePropertiesOutput() SharePropertiesOutput {
	return i.ToSharePropertiesOutputWithContext(context.Background())
}

func (i SharePropertiesArgs) ToSharePropertiesOutputWithContext(ctx context.Context) SharePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharePropertiesOutput)
}

func (i SharePropertiesArgs) ToSharePropertiesPtrOutput() SharePropertiesPtrOutput {
	return i.ToSharePropertiesPtrOutputWithContext(context.Background())
}

func (i SharePropertiesArgs) ToSharePropertiesPtrOutputWithContext(ctx context.Context) SharePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharePropertiesOutput).ToSharePropertiesPtrOutputWithContext(ctx)
}

// SharePropertiesPtrInput is an input type that accepts SharePropertiesArgs, SharePropertiesPtr and SharePropertiesPtrOutput values.
// You can construct a concrete instance of `SharePropertiesPtrInput` via:
//
//          SharePropertiesArgs{...}
//
//  or:
//
//          nil
type SharePropertiesPtrInput interface {
	pulumi.Input

	ToSharePropertiesPtrOutput() SharePropertiesPtrOutput
	ToSharePropertiesPtrOutputWithContext(context.Context) SharePropertiesPtrOutput
}

type sharePropertiesPtrType SharePropertiesArgs

func SharePropertiesPtr(v *SharePropertiesArgs) SharePropertiesPtrInput {
	return (*sharePropertiesPtrType)(v)
}

func (*sharePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShareProperties)(nil)).Elem()
}

func (i *sharePropertiesPtrType) ToSharePropertiesPtrOutput() SharePropertiesPtrOutput {
	return i.ToSharePropertiesPtrOutputWithContext(context.Background())
}

func (i *sharePropertiesPtrType) ToSharePropertiesPtrOutputWithContext(ctx context.Context) SharePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharePropertiesPtrOutput)
}

// Share property bag.
type SharePropertiesOutput struct{ *pulumi.OutputState }

func (SharePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareProperties)(nil)).Elem()
}

func (o SharePropertiesOutput) ToSharePropertiesOutput() SharePropertiesOutput {
	return o
}

func (o SharePropertiesOutput) ToSharePropertiesOutputWithContext(ctx context.Context) SharePropertiesOutput {
	return o
}

func (o SharePropertiesOutput) ToSharePropertiesPtrOutput() SharePropertiesPtrOutput {
	return o.ToSharePropertiesPtrOutputWithContext(context.Background())
}

func (o SharePropertiesOutput) ToSharePropertiesPtrOutputWithContext(ctx context.Context) SharePropertiesPtrOutput {
	return o.ApplyT(func(v ShareProperties) *ShareProperties {
		return &v
	}).(SharePropertiesPtrOutput)
}

// Share description.
func (o SharePropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShareProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Share kind.
func (o SharePropertiesOutput) ShareKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShareProperties) *string { return v.ShareKind }).(pulumi.StringPtrOutput)
}

// Share terms.
func (o SharePropertiesOutput) Terms() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShareProperties) *string { return v.Terms }).(pulumi.StringPtrOutput)
}

type SharePropertiesPtrOutput struct{ *pulumi.OutputState }

func (SharePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShareProperties)(nil)).Elem()
}

func (o SharePropertiesPtrOutput) ToSharePropertiesPtrOutput() SharePropertiesPtrOutput {
	return o
}

func (o SharePropertiesPtrOutput) ToSharePropertiesPtrOutputWithContext(ctx context.Context) SharePropertiesPtrOutput {
	return o
}

func (o SharePropertiesPtrOutput) Elem() SharePropertiesOutput {
	return o.ApplyT(func(v *ShareProperties) ShareProperties { return *v }).(SharePropertiesOutput)
}

// Share description.
func (o SharePropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShareProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Share kind.
func (o SharePropertiesPtrOutput) ShareKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShareProperties) *string {
		if v == nil {
			return nil
		}
		return v.ShareKind
	}).(pulumi.StringPtrOutput)
}

// Share terms.
func (o SharePropertiesPtrOutput) Terms() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShareProperties) *string {
		if v == nil {
			return nil
		}
		return v.Terms
	}).(pulumi.StringPtrOutput)
}

// Share property bag.
type SharePropertiesResponse struct {
	// Time at which the share was created.
	CreatedAt string `pulumi:"createdAt"`
	// Share description.
	Description *string `pulumi:"description"`
	// Gets or sets the provisioning state
	ProvisioningState string `pulumi:"provisioningState"`
	// Share kind.
	ShareKind *string `pulumi:"shareKind"`
	// Share terms.
	Terms *string `pulumi:"terms"`
	// Email of the user who created the resource
	UserEmail string `pulumi:"userEmail"`
	// Name of the user who created the resource
	UserName string `pulumi:"userName"`
}

// SharePropertiesResponseInput is an input type that accepts SharePropertiesResponseArgs and SharePropertiesResponseOutput values.
// You can construct a concrete instance of `SharePropertiesResponseInput` via:
//
//          SharePropertiesResponseArgs{...}
type SharePropertiesResponseInput interface {
	pulumi.Input

	ToSharePropertiesResponseOutput() SharePropertiesResponseOutput
	ToSharePropertiesResponseOutputWithContext(context.Context) SharePropertiesResponseOutput
}

// Share property bag.
type SharePropertiesResponseArgs struct {
	// Time at which the share was created.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Share description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Gets or sets the provisioning state
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Share kind.
	ShareKind pulumi.StringPtrInput `pulumi:"shareKind"`
	// Share terms.
	Terms pulumi.StringPtrInput `pulumi:"terms"`
	// Email of the user who created the resource
	UserEmail pulumi.StringInput `pulumi:"userEmail"`
	// Name of the user who created the resource
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (SharePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharePropertiesResponse)(nil)).Elem()
}

func (i SharePropertiesResponseArgs) ToSharePropertiesResponseOutput() SharePropertiesResponseOutput {
	return i.ToSharePropertiesResponseOutputWithContext(context.Background())
}

func (i SharePropertiesResponseArgs) ToSharePropertiesResponseOutputWithContext(ctx context.Context) SharePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharePropertiesResponseOutput)
}

func (i SharePropertiesResponseArgs) ToSharePropertiesResponsePtrOutput() SharePropertiesResponsePtrOutput {
	return i.ToSharePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i SharePropertiesResponseArgs) ToSharePropertiesResponsePtrOutputWithContext(ctx context.Context) SharePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharePropertiesResponseOutput).ToSharePropertiesResponsePtrOutputWithContext(ctx)
}

// SharePropertiesResponsePtrInput is an input type that accepts SharePropertiesResponseArgs, SharePropertiesResponsePtr and SharePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `SharePropertiesResponsePtrInput` via:
//
//          SharePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type SharePropertiesResponsePtrInput interface {
	pulumi.Input

	ToSharePropertiesResponsePtrOutput() SharePropertiesResponsePtrOutput
	ToSharePropertiesResponsePtrOutputWithContext(context.Context) SharePropertiesResponsePtrOutput
}

type sharePropertiesResponsePtrType SharePropertiesResponseArgs

func SharePropertiesResponsePtr(v *SharePropertiesResponseArgs) SharePropertiesResponsePtrInput {
	return (*sharePropertiesResponsePtrType)(v)
}

func (*sharePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SharePropertiesResponse)(nil)).Elem()
}

func (i *sharePropertiesResponsePtrType) ToSharePropertiesResponsePtrOutput() SharePropertiesResponsePtrOutput {
	return i.ToSharePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *sharePropertiesResponsePtrType) ToSharePropertiesResponsePtrOutputWithContext(ctx context.Context) SharePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharePropertiesResponsePtrOutput)
}

// Share property bag.
type SharePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SharePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharePropertiesResponse)(nil)).Elem()
}

func (o SharePropertiesResponseOutput) ToSharePropertiesResponseOutput() SharePropertiesResponseOutput {
	return o
}

func (o SharePropertiesResponseOutput) ToSharePropertiesResponseOutputWithContext(ctx context.Context) SharePropertiesResponseOutput {
	return o
}

func (o SharePropertiesResponseOutput) ToSharePropertiesResponsePtrOutput() SharePropertiesResponsePtrOutput {
	return o.ToSharePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o SharePropertiesResponseOutput) ToSharePropertiesResponsePtrOutputWithContext(ctx context.Context) SharePropertiesResponsePtrOutput {
	return o.ApplyT(func(v SharePropertiesResponse) *SharePropertiesResponse {
		return &v
	}).(SharePropertiesResponsePtrOutput)
}

// Time at which the share was created.
func (o SharePropertiesResponseOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v SharePropertiesResponse) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Share description.
func (o SharePropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharePropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets or sets the provisioning state
func (o SharePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SharePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Share kind.
func (o SharePropertiesResponseOutput) ShareKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharePropertiesResponse) *string { return v.ShareKind }).(pulumi.StringPtrOutput)
}

// Share terms.
func (o SharePropertiesResponseOutput) Terms() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharePropertiesResponse) *string { return v.Terms }).(pulumi.StringPtrOutput)
}

// Email of the user who created the resource
func (o SharePropertiesResponseOutput) UserEmail() pulumi.StringOutput {
	return o.ApplyT(func(v SharePropertiesResponse) string { return v.UserEmail }).(pulumi.StringOutput)
}

// Name of the user who created the resource
func (o SharePropertiesResponseOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v SharePropertiesResponse) string { return v.UserName }).(pulumi.StringOutput)
}

type SharePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SharePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SharePropertiesResponse)(nil)).Elem()
}

func (o SharePropertiesResponsePtrOutput) ToSharePropertiesResponsePtrOutput() SharePropertiesResponsePtrOutput {
	return o
}

func (o SharePropertiesResponsePtrOutput) ToSharePropertiesResponsePtrOutputWithContext(ctx context.Context) SharePropertiesResponsePtrOutput {
	return o
}

func (o SharePropertiesResponsePtrOutput) Elem() SharePropertiesResponseOutput {
	return o.ApplyT(func(v *SharePropertiesResponse) SharePropertiesResponse { return *v }).(SharePropertiesResponseOutput)
}

// Time at which the share was created.
func (o SharePropertiesResponsePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// Share description.
func (o SharePropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the provisioning state
func (o SharePropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Share kind.
func (o SharePropertiesResponsePtrOutput) ShareKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ShareKind
	}).(pulumi.StringPtrOutput)
}

// Share terms.
func (o SharePropertiesResponsePtrOutput) Terms() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Terms
	}).(pulumi.StringPtrOutput)
}

// Email of the user who created the resource
func (o SharePropertiesResponsePtrOutput) UserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserEmail
	}).(pulumi.StringPtrOutput)
}

// Name of the user who created the resource
func (o SharePropertiesResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

// Share subscription property bag.
type ShareSubscriptionProperties struct {
	// The invitation id.
	InvitationId string `pulumi:"invitationId"`
	// Source share location.
	SourceShareLocation string `pulumi:"sourceShareLocation"`
}

// ShareSubscriptionPropertiesInput is an input type that accepts ShareSubscriptionPropertiesArgs and ShareSubscriptionPropertiesOutput values.
// You can construct a concrete instance of `ShareSubscriptionPropertiesInput` via:
//
//          ShareSubscriptionPropertiesArgs{...}
type ShareSubscriptionPropertiesInput interface {
	pulumi.Input

	ToShareSubscriptionPropertiesOutput() ShareSubscriptionPropertiesOutput
	ToShareSubscriptionPropertiesOutputWithContext(context.Context) ShareSubscriptionPropertiesOutput
}

// Share subscription property bag.
type ShareSubscriptionPropertiesArgs struct {
	// The invitation id.
	InvitationId pulumi.StringInput `pulumi:"invitationId"`
	// Source share location.
	SourceShareLocation pulumi.StringInput `pulumi:"sourceShareLocation"`
}

func (ShareSubscriptionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareSubscriptionProperties)(nil)).Elem()
}

func (i ShareSubscriptionPropertiesArgs) ToShareSubscriptionPropertiesOutput() ShareSubscriptionPropertiesOutput {
	return i.ToShareSubscriptionPropertiesOutputWithContext(context.Background())
}

func (i ShareSubscriptionPropertiesArgs) ToShareSubscriptionPropertiesOutputWithContext(ctx context.Context) ShareSubscriptionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareSubscriptionPropertiesOutput)
}

func (i ShareSubscriptionPropertiesArgs) ToShareSubscriptionPropertiesPtrOutput() ShareSubscriptionPropertiesPtrOutput {
	return i.ToShareSubscriptionPropertiesPtrOutputWithContext(context.Background())
}

func (i ShareSubscriptionPropertiesArgs) ToShareSubscriptionPropertiesPtrOutputWithContext(ctx context.Context) ShareSubscriptionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareSubscriptionPropertiesOutput).ToShareSubscriptionPropertiesPtrOutputWithContext(ctx)
}

// ShareSubscriptionPropertiesPtrInput is an input type that accepts ShareSubscriptionPropertiesArgs, ShareSubscriptionPropertiesPtr and ShareSubscriptionPropertiesPtrOutput values.
// You can construct a concrete instance of `ShareSubscriptionPropertiesPtrInput` via:
//
//          ShareSubscriptionPropertiesArgs{...}
//
//  or:
//
//          nil
type ShareSubscriptionPropertiesPtrInput interface {
	pulumi.Input

	ToShareSubscriptionPropertiesPtrOutput() ShareSubscriptionPropertiesPtrOutput
	ToShareSubscriptionPropertiesPtrOutputWithContext(context.Context) ShareSubscriptionPropertiesPtrOutput
}

type shareSubscriptionPropertiesPtrType ShareSubscriptionPropertiesArgs

func ShareSubscriptionPropertiesPtr(v *ShareSubscriptionPropertiesArgs) ShareSubscriptionPropertiesPtrInput {
	return (*shareSubscriptionPropertiesPtrType)(v)
}

func (*shareSubscriptionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShareSubscriptionProperties)(nil)).Elem()
}

func (i *shareSubscriptionPropertiesPtrType) ToShareSubscriptionPropertiesPtrOutput() ShareSubscriptionPropertiesPtrOutput {
	return i.ToShareSubscriptionPropertiesPtrOutputWithContext(context.Background())
}

func (i *shareSubscriptionPropertiesPtrType) ToShareSubscriptionPropertiesPtrOutputWithContext(ctx context.Context) ShareSubscriptionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareSubscriptionPropertiesPtrOutput)
}

// Share subscription property bag.
type ShareSubscriptionPropertiesOutput struct{ *pulumi.OutputState }

func (ShareSubscriptionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareSubscriptionProperties)(nil)).Elem()
}

func (o ShareSubscriptionPropertiesOutput) ToShareSubscriptionPropertiesOutput() ShareSubscriptionPropertiesOutput {
	return o
}

func (o ShareSubscriptionPropertiesOutput) ToShareSubscriptionPropertiesOutputWithContext(ctx context.Context) ShareSubscriptionPropertiesOutput {
	return o
}

func (o ShareSubscriptionPropertiesOutput) ToShareSubscriptionPropertiesPtrOutput() ShareSubscriptionPropertiesPtrOutput {
	return o.ToShareSubscriptionPropertiesPtrOutputWithContext(context.Background())
}

func (o ShareSubscriptionPropertiesOutput) ToShareSubscriptionPropertiesPtrOutputWithContext(ctx context.Context) ShareSubscriptionPropertiesPtrOutput {
	return o.ApplyT(func(v ShareSubscriptionProperties) *ShareSubscriptionProperties {
		return &v
	}).(ShareSubscriptionPropertiesPtrOutput)
}

// The invitation id.
func (o ShareSubscriptionPropertiesOutput) InvitationId() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSubscriptionProperties) string { return v.InvitationId }).(pulumi.StringOutput)
}

// Source share location.
func (o ShareSubscriptionPropertiesOutput) SourceShareLocation() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSubscriptionProperties) string { return v.SourceShareLocation }).(pulumi.StringOutput)
}

type ShareSubscriptionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ShareSubscriptionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShareSubscriptionProperties)(nil)).Elem()
}

func (o ShareSubscriptionPropertiesPtrOutput) ToShareSubscriptionPropertiesPtrOutput() ShareSubscriptionPropertiesPtrOutput {
	return o
}

func (o ShareSubscriptionPropertiesPtrOutput) ToShareSubscriptionPropertiesPtrOutputWithContext(ctx context.Context) ShareSubscriptionPropertiesPtrOutput {
	return o
}

func (o ShareSubscriptionPropertiesPtrOutput) Elem() ShareSubscriptionPropertiesOutput {
	return o.ApplyT(func(v *ShareSubscriptionProperties) ShareSubscriptionProperties { return *v }).(ShareSubscriptionPropertiesOutput)
}

// The invitation id.
func (o ShareSubscriptionPropertiesPtrOutput) InvitationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShareSubscriptionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.InvitationId
	}).(pulumi.StringPtrOutput)
}

// Source share location.
func (o ShareSubscriptionPropertiesPtrOutput) SourceShareLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShareSubscriptionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.SourceShareLocation
	}).(pulumi.StringPtrOutput)
}

// Share subscription property bag.
type ShareSubscriptionPropertiesResponse struct {
	// Time at which the share subscription was created.
	CreatedAt string `pulumi:"createdAt"`
	// The invitation id.
	InvitationId string `pulumi:"invitationId"`
	// Email of the provider who created the resource
	ProviderEmail string `pulumi:"providerEmail"`
	// Name of the provider who created the resource
	ProviderName string `pulumi:"providerName"`
	// Tenant name of the provider who created the resource
	ProviderTenantName string `pulumi:"providerTenantName"`
	// Provisioning state of the share subscription
	ProvisioningState string `pulumi:"provisioningState"`
	// Description of share
	ShareDescription string `pulumi:"shareDescription"`
	// Kind of share
	ShareKind string `pulumi:"shareKind"`
	// Name of the share
	ShareName string `pulumi:"shareName"`
	// Gets the current status of share subscription.
	ShareSubscriptionStatus string `pulumi:"shareSubscriptionStatus"`
	// Terms of a share
	ShareTerms string `pulumi:"shareTerms"`
	// Source share location.
	SourceShareLocation string `pulumi:"sourceShareLocation"`
	// Email of the user who created the resource
	UserEmail string `pulumi:"userEmail"`
	// Name of the user who created the resource
	UserName string `pulumi:"userName"`
}

// ShareSubscriptionPropertiesResponseInput is an input type that accepts ShareSubscriptionPropertiesResponseArgs and ShareSubscriptionPropertiesResponseOutput values.
// You can construct a concrete instance of `ShareSubscriptionPropertiesResponseInput` via:
//
//          ShareSubscriptionPropertiesResponseArgs{...}
type ShareSubscriptionPropertiesResponseInput interface {
	pulumi.Input

	ToShareSubscriptionPropertiesResponseOutput() ShareSubscriptionPropertiesResponseOutput
	ToShareSubscriptionPropertiesResponseOutputWithContext(context.Context) ShareSubscriptionPropertiesResponseOutput
}

// Share subscription property bag.
type ShareSubscriptionPropertiesResponseArgs struct {
	// Time at which the share subscription was created.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The invitation id.
	InvitationId pulumi.StringInput `pulumi:"invitationId"`
	// Email of the provider who created the resource
	ProviderEmail pulumi.StringInput `pulumi:"providerEmail"`
	// Name of the provider who created the resource
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Tenant name of the provider who created the resource
	ProviderTenantName pulumi.StringInput `pulumi:"providerTenantName"`
	// Provisioning state of the share subscription
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Description of share
	ShareDescription pulumi.StringInput `pulumi:"shareDescription"`
	// Kind of share
	ShareKind pulumi.StringInput `pulumi:"shareKind"`
	// Name of the share
	ShareName pulumi.StringInput `pulumi:"shareName"`
	// Gets the current status of share subscription.
	ShareSubscriptionStatus pulumi.StringInput `pulumi:"shareSubscriptionStatus"`
	// Terms of a share
	ShareTerms pulumi.StringInput `pulumi:"shareTerms"`
	// Source share location.
	SourceShareLocation pulumi.StringInput `pulumi:"sourceShareLocation"`
	// Email of the user who created the resource
	UserEmail pulumi.StringInput `pulumi:"userEmail"`
	// Name of the user who created the resource
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ShareSubscriptionPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareSubscriptionPropertiesResponse)(nil)).Elem()
}

func (i ShareSubscriptionPropertiesResponseArgs) ToShareSubscriptionPropertiesResponseOutput() ShareSubscriptionPropertiesResponseOutput {
	return i.ToShareSubscriptionPropertiesResponseOutputWithContext(context.Background())
}

func (i ShareSubscriptionPropertiesResponseArgs) ToShareSubscriptionPropertiesResponseOutputWithContext(ctx context.Context) ShareSubscriptionPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareSubscriptionPropertiesResponseOutput)
}

func (i ShareSubscriptionPropertiesResponseArgs) ToShareSubscriptionPropertiesResponsePtrOutput() ShareSubscriptionPropertiesResponsePtrOutput {
	return i.ToShareSubscriptionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ShareSubscriptionPropertiesResponseArgs) ToShareSubscriptionPropertiesResponsePtrOutputWithContext(ctx context.Context) ShareSubscriptionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareSubscriptionPropertiesResponseOutput).ToShareSubscriptionPropertiesResponsePtrOutputWithContext(ctx)
}

// ShareSubscriptionPropertiesResponsePtrInput is an input type that accepts ShareSubscriptionPropertiesResponseArgs, ShareSubscriptionPropertiesResponsePtr and ShareSubscriptionPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ShareSubscriptionPropertiesResponsePtrInput` via:
//
//          ShareSubscriptionPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ShareSubscriptionPropertiesResponsePtrInput interface {
	pulumi.Input

	ToShareSubscriptionPropertiesResponsePtrOutput() ShareSubscriptionPropertiesResponsePtrOutput
	ToShareSubscriptionPropertiesResponsePtrOutputWithContext(context.Context) ShareSubscriptionPropertiesResponsePtrOutput
}

type shareSubscriptionPropertiesResponsePtrType ShareSubscriptionPropertiesResponseArgs

func ShareSubscriptionPropertiesResponsePtr(v *ShareSubscriptionPropertiesResponseArgs) ShareSubscriptionPropertiesResponsePtrInput {
	return (*shareSubscriptionPropertiesResponsePtrType)(v)
}

func (*shareSubscriptionPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShareSubscriptionPropertiesResponse)(nil)).Elem()
}

func (i *shareSubscriptionPropertiesResponsePtrType) ToShareSubscriptionPropertiesResponsePtrOutput() ShareSubscriptionPropertiesResponsePtrOutput {
	return i.ToShareSubscriptionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *shareSubscriptionPropertiesResponsePtrType) ToShareSubscriptionPropertiesResponsePtrOutputWithContext(ctx context.Context) ShareSubscriptionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareSubscriptionPropertiesResponsePtrOutput)
}

// Share subscription property bag.
type ShareSubscriptionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ShareSubscriptionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareSubscriptionPropertiesResponse)(nil)).Elem()
}

func (o ShareSubscriptionPropertiesResponseOutput) ToShareSubscriptionPropertiesResponseOutput() ShareSubscriptionPropertiesResponseOutput {
	return o
}

func (o ShareSubscriptionPropertiesResponseOutput) ToShareSubscriptionPropertiesResponseOutputWithContext(ctx context.Context) ShareSubscriptionPropertiesResponseOutput {
	return o
}

func (o ShareSubscriptionPropertiesResponseOutput) ToShareSubscriptionPropertiesResponsePtrOutput() ShareSubscriptionPropertiesResponsePtrOutput {
	return o.ToShareSubscriptionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ShareSubscriptionPropertiesResponseOutput) ToShareSubscriptionPropertiesResponsePtrOutputWithContext(ctx context.Context) ShareSubscriptionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ShareSubscriptionPropertiesResponse) *ShareSubscriptionPropertiesResponse {
		return &v
	}).(ShareSubscriptionPropertiesResponsePtrOutput)
}

// Time at which the share subscription was created.
func (o ShareSubscriptionPropertiesResponseOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSubscriptionPropertiesResponse) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The invitation id.
func (o ShareSubscriptionPropertiesResponseOutput) InvitationId() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSubscriptionPropertiesResponse) string { return v.InvitationId }).(pulumi.StringOutput)
}

// Email of the provider who created the resource
func (o ShareSubscriptionPropertiesResponseOutput) ProviderEmail() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSubscriptionPropertiesResponse) string { return v.ProviderEmail }).(pulumi.StringOutput)
}

// Name of the provider who created the resource
func (o ShareSubscriptionPropertiesResponseOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSubscriptionPropertiesResponse) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Tenant name of the provider who created the resource
func (o ShareSubscriptionPropertiesResponseOutput) ProviderTenantName() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSubscriptionPropertiesResponse) string { return v.ProviderTenantName }).(pulumi.StringOutput)
}

// Provisioning state of the share subscription
func (o ShareSubscriptionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSubscriptionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Description of share
func (o ShareSubscriptionPropertiesResponseOutput) ShareDescription() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSubscriptionPropertiesResponse) string { return v.ShareDescription }).(pulumi.StringOutput)
}

// Kind of share
func (o ShareSubscriptionPropertiesResponseOutput) ShareKind() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSubscriptionPropertiesResponse) string { return v.ShareKind }).(pulumi.StringOutput)
}

// Name of the share
func (o ShareSubscriptionPropertiesResponseOutput) ShareName() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSubscriptionPropertiesResponse) string { return v.ShareName }).(pulumi.StringOutput)
}

// Gets the current status of share subscription.
func (o ShareSubscriptionPropertiesResponseOutput) ShareSubscriptionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSubscriptionPropertiesResponse) string { return v.ShareSubscriptionStatus }).(pulumi.StringOutput)
}

// Terms of a share
func (o ShareSubscriptionPropertiesResponseOutput) ShareTerms() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSubscriptionPropertiesResponse) string { return v.ShareTerms }).(pulumi.StringOutput)
}

// Source share location.
func (o ShareSubscriptionPropertiesResponseOutput) SourceShareLocation() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSubscriptionPropertiesResponse) string { return v.SourceShareLocation }).(pulumi.StringOutput)
}

// Email of the user who created the resource
func (o ShareSubscriptionPropertiesResponseOutput) UserEmail() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSubscriptionPropertiesResponse) string { return v.UserEmail }).(pulumi.StringOutput)
}

// Name of the user who created the resource
func (o ShareSubscriptionPropertiesResponseOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSubscriptionPropertiesResponse) string { return v.UserName }).(pulumi.StringOutput)
}

type ShareSubscriptionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ShareSubscriptionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShareSubscriptionPropertiesResponse)(nil)).Elem()
}

func (o ShareSubscriptionPropertiesResponsePtrOutput) ToShareSubscriptionPropertiesResponsePtrOutput() ShareSubscriptionPropertiesResponsePtrOutput {
	return o
}

func (o ShareSubscriptionPropertiesResponsePtrOutput) ToShareSubscriptionPropertiesResponsePtrOutputWithContext(ctx context.Context) ShareSubscriptionPropertiesResponsePtrOutput {
	return o
}

func (o ShareSubscriptionPropertiesResponsePtrOutput) Elem() ShareSubscriptionPropertiesResponseOutput {
	return o.ApplyT(func(v *ShareSubscriptionPropertiesResponse) ShareSubscriptionPropertiesResponse { return *v }).(ShareSubscriptionPropertiesResponseOutput)
}

// Time at which the share subscription was created.
func (o ShareSubscriptionPropertiesResponsePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShareSubscriptionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// The invitation id.
func (o ShareSubscriptionPropertiesResponsePtrOutput) InvitationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShareSubscriptionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InvitationId
	}).(pulumi.StringPtrOutput)
}

// Email of the provider who created the resource
func (o ShareSubscriptionPropertiesResponsePtrOutput) ProviderEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShareSubscriptionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProviderEmail
	}).(pulumi.StringPtrOutput)
}

// Name of the provider who created the resource
func (o ShareSubscriptionPropertiesResponsePtrOutput) ProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShareSubscriptionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProviderName
	}).(pulumi.StringPtrOutput)
}

// Tenant name of the provider who created the resource
func (o ShareSubscriptionPropertiesResponsePtrOutput) ProviderTenantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShareSubscriptionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProviderTenantName
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the share subscription
func (o ShareSubscriptionPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShareSubscriptionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Description of share
func (o ShareSubscriptionPropertiesResponsePtrOutput) ShareDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShareSubscriptionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ShareDescription
	}).(pulumi.StringPtrOutput)
}

// Kind of share
func (o ShareSubscriptionPropertiesResponsePtrOutput) ShareKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShareSubscriptionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ShareKind
	}).(pulumi.StringPtrOutput)
}

// Name of the share
func (o ShareSubscriptionPropertiesResponsePtrOutput) ShareName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShareSubscriptionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ShareName
	}).(pulumi.StringPtrOutput)
}

// Gets the current status of share subscription.
func (o ShareSubscriptionPropertiesResponsePtrOutput) ShareSubscriptionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShareSubscriptionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ShareSubscriptionStatus
	}).(pulumi.StringPtrOutput)
}

// Terms of a share
func (o ShareSubscriptionPropertiesResponsePtrOutput) ShareTerms() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShareSubscriptionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ShareTerms
	}).(pulumi.StringPtrOutput)
}

// Source share location.
func (o ShareSubscriptionPropertiesResponsePtrOutput) SourceShareLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShareSubscriptionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SourceShareLocation
	}).(pulumi.StringPtrOutput)
}

// Email of the user who created the resource
func (o ShareSubscriptionPropertiesResponsePtrOutput) UserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShareSubscriptionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserEmail
	}).(pulumi.StringPtrOutput)
}

// Name of the user who created the resource
func (o ShareSubscriptionPropertiesResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShareSubscriptionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AccountTypeOutput{})
	pulumi.RegisterOutputType(AccountPropertiesOutput{})
	pulumi.RegisterOutputType(AccountPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AccountPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AccountPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AccountShareTypeOutput{})
	pulumi.RegisterOutputType(AccountShareDataSetTypeOutput{})
	pulumi.RegisterOutputType(AccountShareInvitationTypeOutput{})
	pulumi.RegisterOutputType(AccountShareSubscriptionTypeOutput{})
	pulumi.RegisterOutputType(AccountShareSubscriptionDataSetMappingTypeOutput{})
	pulumi.RegisterOutputType(AccountShareSubscriptionTriggerTypeOutput{})
	pulumi.RegisterOutputType(AccountShareSynchronizationSettingTypeOutput{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityPtrOutput{})
	pulumi.RegisterOutputType(IdentityResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(InvitationPropertiesOutput{})
	pulumi.RegisterOutputType(InvitationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(InvitationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(InvitationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SharePropertiesOutput{})
	pulumi.RegisterOutputType(SharePropertiesPtrOutput{})
	pulumi.RegisterOutputType(SharePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SharePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ShareSubscriptionPropertiesOutput{})
	pulumi.RegisterOutputType(ShareSubscriptionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ShareSubscriptionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ShareSubscriptionPropertiesResponsePtrOutput{})
}
