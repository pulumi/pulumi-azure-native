// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package devtestlab

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A container for a managed identity to execute DevTest lab services.
type LabServicerunner struct {
	pulumi.CustomResourceState

	// The identity of the resource.
	Identity IdentityPropertiesResponsePtrOutput `pulumi:"identity"`
	// The location of the resource.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The tags of the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewLabServicerunner registers a new resource with the given unique name, arguments, and options.
func NewLabServicerunner(ctx *pulumi.Context,
	name string, args *LabServicerunnerArgs, opts ...pulumi.ResourceOption) (*LabServicerunner, error) {
	if args == nil || args.LabName == nil {
		return nil, errors.New("missing required argument 'LabName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &LabServicerunnerArgs{}
	}
	var resource LabServicerunner
	err := ctx.RegisterResource("azurerm:devtestlab:LabServicerunner", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLabServicerunner gets an existing LabServicerunner resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLabServicerunner(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LabServicerunnerState, opts ...pulumi.ResourceOption) (*LabServicerunner, error) {
	var resource LabServicerunner
	err := ctx.ReadResource("azurerm:devtestlab:LabServicerunner", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LabServicerunner resources.
type labServicerunnerState struct {
	// The identity of the resource.
	Identity *IdentityPropertiesResponse `pulumi:"identity"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The name of the resource.
	Name *string `pulumi:"name"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

type LabServicerunnerState struct {
	// The identity of the resource.
	Identity IdentityPropertiesResponsePtrInput
	// The location of the resource.
	Location pulumi.StringPtrInput
	// The name of the resource.
	Name pulumi.StringPtrInput
	// The tags of the resource.
	Tags pulumi.StringMapInput
	// The type of the resource.
	Type pulumi.StringPtrInput
}

func (LabServicerunnerState) ElementType() reflect.Type {
	return reflect.TypeOf((*labServicerunnerState)(nil)).Elem()
}

type labServicerunnerArgs struct {
	// The identity of the resource.
	Identity *IdentityProperties `pulumi:"identity"`
	// The name of the lab.
	LabName string `pulumi:"labName"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The name of the service runner.
	Name string `pulumi:"name"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a LabServicerunner resource.
type LabServicerunnerArgs struct {
	// The identity of the resource.
	Identity IdentityPropertiesPtrInput
	// The name of the lab.
	LabName pulumi.StringInput
	// The location of the resource.
	Location pulumi.StringPtrInput
	// The name of the service runner.
	Name pulumi.StringInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// The tags of the resource.
	Tags pulumi.StringMapInput
}

func (LabServicerunnerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*labServicerunnerArgs)(nil)).Elem()
}
