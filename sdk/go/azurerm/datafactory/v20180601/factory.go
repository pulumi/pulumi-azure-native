// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180601

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Factory resource type.
type Factory struct {
	pulumi.CustomResourceState

	// Etag identifies change in the resource.
	ETag pulumi.StringOutput `pulumi:"eTag"`
	// Managed service identity of the factory.
	Identity FactoryIdentityResponsePtrOutput `pulumi:"identity"`
	// The resource location.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Properties of the factory.
	Properties FactoryPropertiesResponseOutput `pulumi:"properties"`
	// The resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewFactory registers a new resource with the given unique name, arguments, and options.
func NewFactory(ctx *pulumi.Context,
	name string, args *FactoryArgs, opts ...pulumi.ResourceOption) (*Factory, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &FactoryArgs{}
	}
	var resource Factory
	err := ctx.RegisterResource("azurerm:datafactory/v20180601:Factory", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFactory gets an existing Factory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFactory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FactoryState, opts ...pulumi.ResourceOption) (*Factory, error) {
	var resource Factory
	err := ctx.ReadResource("azurerm:datafactory/v20180601:Factory", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Factory resources.
type factoryState struct {
	// Etag identifies change in the resource.
	ETag *string `pulumi:"eTag"`
	// Managed service identity of the factory.
	Identity *FactoryIdentityResponse `pulumi:"identity"`
	// The resource location.
	Location *string `pulumi:"location"`
	// The resource name.
	Name *string `pulumi:"name"`
	// Properties of the factory.
	Properties *FactoryPropertiesResponse `pulumi:"properties"`
	// The resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The resource type.
	Type *string `pulumi:"type"`
}

type FactoryState struct {
	// Etag identifies change in the resource.
	ETag pulumi.StringPtrInput
	// Managed service identity of the factory.
	Identity FactoryIdentityResponsePtrInput
	// The resource location.
	Location pulumi.StringPtrInput
	// The resource name.
	Name pulumi.StringPtrInput
	// Properties of the factory.
	Properties FactoryPropertiesResponsePtrInput
	// The resource tags.
	Tags pulumi.StringMapInput
	// The resource type.
	Type pulumi.StringPtrInput
}

func (FactoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*factoryState)(nil)).Elem()
}

type factoryArgs struct {
	// List of parameters for factory.
	GlobalParameters map[string]GlobalParameterSpecification `pulumi:"globalParameters"`
	// Managed service identity of the factory.
	Identity *FactoryIdentity `pulumi:"identity"`
	// The resource location.
	Location *string `pulumi:"location"`
	// The factory name.
	Name string `pulumi:"name"`
	// Git repo information of the factory.
	RepoConfiguration *FactoryRepoConfiguration `pulumi:"repoConfiguration"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Factory resource.
type FactoryArgs struct {
	// List of parameters for factory.
	GlobalParameters GlobalParameterSpecificationMapInput
	// Managed service identity of the factory.
	Identity FactoryIdentityPtrInput
	// The resource location.
	Location pulumi.StringPtrInput
	// The factory name.
	Name pulumi.StringInput
	// Git repo information of the factory.
	RepoConfiguration FactoryRepoConfigurationPtrInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
	// The resource tags.
	Tags pulumi.StringMapInput
}

func (FactoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*factoryArgs)(nil)).Elem()
}
