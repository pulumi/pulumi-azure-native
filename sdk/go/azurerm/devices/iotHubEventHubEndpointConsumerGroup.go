// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package devices

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The properties of the EventHubConsumerGroupInfo object.
type IotHubEventHubEndpointConsumerGroup struct {
	pulumi.CustomResourceState

	// The etag.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The Event Hub-compatible consumer group name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The tags.
	Properties pulumi.StringMapOutput `pulumi:"properties"`
	// the resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewIotHubEventHubEndpointConsumerGroup registers a new resource with the given unique name, arguments, and options.
func NewIotHubEventHubEndpointConsumerGroup(ctx *pulumi.Context,
	name string, args *IotHubEventHubEndpointConsumerGroupArgs, opts ...pulumi.ResourceOption) (*IotHubEventHubEndpointConsumerGroup, error) {
	if args == nil || args.EventHubEndpointName == nil {
		return nil, errors.New("missing required argument 'EventHubEndpointName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.ResourceName == nil {
		return nil, errors.New("missing required argument 'ResourceName'")
	}
	if args == nil {
		args = &IotHubEventHubEndpointConsumerGroupArgs{}
	}
	var resource IotHubEventHubEndpointConsumerGroup
	err := ctx.RegisterResource("azurerm:devices:IotHubEventHubEndpointConsumerGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIotHubEventHubEndpointConsumerGroup gets an existing IotHubEventHubEndpointConsumerGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIotHubEventHubEndpointConsumerGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IotHubEventHubEndpointConsumerGroupState, opts ...pulumi.ResourceOption) (*IotHubEventHubEndpointConsumerGroup, error) {
	var resource IotHubEventHubEndpointConsumerGroup
	err := ctx.ReadResource("azurerm:devices:IotHubEventHubEndpointConsumerGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IotHubEventHubEndpointConsumerGroup resources.
type iotHubEventHubEndpointConsumerGroupState struct {
	// The etag.
	Etag *string `pulumi:"etag"`
	// The Event Hub-compatible consumer group name.
	Name *string `pulumi:"name"`
	// The tags.
	Properties map[string]string `pulumi:"properties"`
	// the resource type.
	Type *string `pulumi:"type"`
}

type IotHubEventHubEndpointConsumerGroupState struct {
	// The etag.
	Etag pulumi.StringPtrInput
	// The Event Hub-compatible consumer group name.
	Name pulumi.StringPtrInput
	// The tags.
	Properties pulumi.StringMapInput
	// the resource type.
	Type pulumi.StringPtrInput
}

func (IotHubEventHubEndpointConsumerGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*iotHubEventHubEndpointConsumerGroupState)(nil)).Elem()
}

type iotHubEventHubEndpointConsumerGroupArgs struct {
	// The name of the Event Hub-compatible endpoint in the IoT hub.
	EventHubEndpointName string `pulumi:"eventHubEndpointName"`
	// The name of the consumer group to add.
	Name string `pulumi:"name"`
	// The name of the resource group that contains the IoT hub.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the IoT hub.
	ResourceName string `pulumi:"resourceName"`
}

// The set of arguments for constructing a IotHubEventHubEndpointConsumerGroup resource.
type IotHubEventHubEndpointConsumerGroupArgs struct {
	// The name of the Event Hub-compatible endpoint in the IoT hub.
	EventHubEndpointName pulumi.StringInput
	// The name of the consumer group to add.
	Name pulumi.StringInput
	// The name of the resource group that contains the IoT hub.
	ResourceGroupName pulumi.StringInput
	// The name of the IoT hub.
	ResourceName pulumi.StringInput
}

func (IotHubEventHubEndpointConsumerGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iotHubEventHubEndpointConsumerGroupArgs)(nil)).Elem()
}
