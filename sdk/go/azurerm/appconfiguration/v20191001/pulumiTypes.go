// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20191001

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The configuration store along with all resource properties. The Configuration Store will have all information to begin utilizing it.
type ConfigurationStoreType struct {
	// The managed identity information, if configured.
	Identity *ResourceIdentityResponse `pulumi:"identity"`
	// The location of the resource. This cannot be changed after the resource is created.
	Location string `pulumi:"location"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The properties of a configuration store.
	Properties ConfigurationStorePropertiesResponse `pulumi:"properties"`
	// The sku of the configuration store.
	Sku SkuResponse `pulumi:"sku"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type string `pulumi:"type"`
}

// ConfigurationStoreTypeInput is an input type that accepts ConfigurationStoreTypeArgs and ConfigurationStoreTypeOutput values.
// You can construct a concrete instance of `ConfigurationStoreTypeInput` via:
//
//          ConfigurationStoreTypeArgs{...}
type ConfigurationStoreTypeInput interface {
	pulumi.Input

	ToConfigurationStoreTypeOutput() ConfigurationStoreTypeOutput
	ToConfigurationStoreTypeOutputWithContext(context.Context) ConfigurationStoreTypeOutput
}

// The configuration store along with all resource properties. The Configuration Store will have all information to begin utilizing it.
type ConfigurationStoreTypeArgs struct {
	// The managed identity information, if configured.
	Identity ResourceIdentityResponsePtrInput `pulumi:"identity"`
	// The location of the resource. This cannot be changed after the resource is created.
	Location pulumi.StringInput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of a configuration store.
	Properties ConfigurationStorePropertiesResponseInput `pulumi:"properties"`
	// The sku of the configuration store.
	Sku SkuResponseInput `pulumi:"sku"`
	// The tags of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ConfigurationStoreTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStoreType)(nil)).Elem()
}

func (i ConfigurationStoreTypeArgs) ToConfigurationStoreTypeOutput() ConfigurationStoreTypeOutput {
	return i.ToConfigurationStoreTypeOutputWithContext(context.Background())
}

func (i ConfigurationStoreTypeArgs) ToConfigurationStoreTypeOutputWithContext(ctx context.Context) ConfigurationStoreTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStoreTypeOutput)
}

// The configuration store along with all resource properties. The Configuration Store will have all information to begin utilizing it.
type ConfigurationStoreTypeOutput struct{ *pulumi.OutputState }

func (ConfigurationStoreTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStoreType)(nil)).Elem()
}

func (o ConfigurationStoreTypeOutput) ToConfigurationStoreTypeOutput() ConfigurationStoreTypeOutput {
	return o
}

func (o ConfigurationStoreTypeOutput) ToConfigurationStoreTypeOutputWithContext(ctx context.Context) ConfigurationStoreTypeOutput {
	return o
}

// The managed identity information, if configured.
func (o ConfigurationStoreTypeOutput) Identity() ResourceIdentityResponsePtrOutput {
	return o.ApplyT(func(v ConfigurationStoreType) *ResourceIdentityResponse { return v.Identity }).(ResourceIdentityResponsePtrOutput)
}

// The location of the resource. This cannot be changed after the resource is created.
func (o ConfigurationStoreTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationStoreType) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource.
func (o ConfigurationStoreTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationStoreType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of a configuration store.
func (o ConfigurationStoreTypeOutput) Properties() ConfigurationStorePropertiesResponseOutput {
	return o.ApplyT(func(v ConfigurationStoreType) ConfigurationStorePropertiesResponse { return v.Properties }).(ConfigurationStorePropertiesResponseOutput)
}

// The sku of the configuration store.
func (o ConfigurationStoreTypeOutput) Sku() SkuResponseOutput {
	return o.ApplyT(func(v ConfigurationStoreType) SkuResponse { return v.Sku }).(SkuResponseOutput)
}

// The tags of the resource.
func (o ConfigurationStoreTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConfigurationStoreType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o ConfigurationStoreTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationStoreType) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of a configuration store.
type ConfigurationStoreProperties struct {
}

// ConfigurationStorePropertiesInput is an input type that accepts ConfigurationStorePropertiesArgs and ConfigurationStorePropertiesOutput values.
// You can construct a concrete instance of `ConfigurationStorePropertiesInput` via:
//
//          ConfigurationStorePropertiesArgs{...}
type ConfigurationStorePropertiesInput interface {
	pulumi.Input

	ToConfigurationStorePropertiesOutput() ConfigurationStorePropertiesOutput
	ToConfigurationStorePropertiesOutputWithContext(context.Context) ConfigurationStorePropertiesOutput
}

// The properties of a configuration store.
type ConfigurationStorePropertiesArgs struct {
}

func (ConfigurationStorePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStoreProperties)(nil)).Elem()
}

func (i ConfigurationStorePropertiesArgs) ToConfigurationStorePropertiesOutput() ConfigurationStorePropertiesOutput {
	return i.ToConfigurationStorePropertiesOutputWithContext(context.Background())
}

func (i ConfigurationStorePropertiesArgs) ToConfigurationStorePropertiesOutputWithContext(ctx context.Context) ConfigurationStorePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStorePropertiesOutput)
}

func (i ConfigurationStorePropertiesArgs) ToConfigurationStorePropertiesPtrOutput() ConfigurationStorePropertiesPtrOutput {
	return i.ToConfigurationStorePropertiesPtrOutputWithContext(context.Background())
}

func (i ConfigurationStorePropertiesArgs) ToConfigurationStorePropertiesPtrOutputWithContext(ctx context.Context) ConfigurationStorePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStorePropertiesOutput).ToConfigurationStorePropertiesPtrOutputWithContext(ctx)
}

// ConfigurationStorePropertiesPtrInput is an input type that accepts ConfigurationStorePropertiesArgs, ConfigurationStorePropertiesPtr and ConfigurationStorePropertiesPtrOutput values.
// You can construct a concrete instance of `ConfigurationStorePropertiesPtrInput` via:
//
//          ConfigurationStorePropertiesArgs{...}
//
//  or:
//
//          nil
type ConfigurationStorePropertiesPtrInput interface {
	pulumi.Input

	ToConfigurationStorePropertiesPtrOutput() ConfigurationStorePropertiesPtrOutput
	ToConfigurationStorePropertiesPtrOutputWithContext(context.Context) ConfigurationStorePropertiesPtrOutput
}

type configurationStorePropertiesPtrType ConfigurationStorePropertiesArgs

func ConfigurationStorePropertiesPtr(v *ConfigurationStorePropertiesArgs) ConfigurationStorePropertiesPtrInput {
	return (*configurationStorePropertiesPtrType)(v)
}

func (*configurationStorePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationStoreProperties)(nil)).Elem()
}

func (i *configurationStorePropertiesPtrType) ToConfigurationStorePropertiesPtrOutput() ConfigurationStorePropertiesPtrOutput {
	return i.ToConfigurationStorePropertiesPtrOutputWithContext(context.Background())
}

func (i *configurationStorePropertiesPtrType) ToConfigurationStorePropertiesPtrOutputWithContext(ctx context.Context) ConfigurationStorePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStorePropertiesPtrOutput)
}

// The properties of a configuration store.
type ConfigurationStorePropertiesOutput struct{ *pulumi.OutputState }

func (ConfigurationStorePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStoreProperties)(nil)).Elem()
}

func (o ConfigurationStorePropertiesOutput) ToConfigurationStorePropertiesOutput() ConfigurationStorePropertiesOutput {
	return o
}

func (o ConfigurationStorePropertiesOutput) ToConfigurationStorePropertiesOutputWithContext(ctx context.Context) ConfigurationStorePropertiesOutput {
	return o
}

func (o ConfigurationStorePropertiesOutput) ToConfigurationStorePropertiesPtrOutput() ConfigurationStorePropertiesPtrOutput {
	return o.ToConfigurationStorePropertiesPtrOutputWithContext(context.Background())
}

func (o ConfigurationStorePropertiesOutput) ToConfigurationStorePropertiesPtrOutputWithContext(ctx context.Context) ConfigurationStorePropertiesPtrOutput {
	return o.ApplyT(func(v ConfigurationStoreProperties) *ConfigurationStoreProperties {
		return &v
	}).(ConfigurationStorePropertiesPtrOutput)
}

type ConfigurationStorePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationStorePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationStoreProperties)(nil)).Elem()
}

func (o ConfigurationStorePropertiesPtrOutput) ToConfigurationStorePropertiesPtrOutput() ConfigurationStorePropertiesPtrOutput {
	return o
}

func (o ConfigurationStorePropertiesPtrOutput) ToConfigurationStorePropertiesPtrOutputWithContext(ctx context.Context) ConfigurationStorePropertiesPtrOutput {
	return o
}

func (o ConfigurationStorePropertiesPtrOutput) Elem() ConfigurationStorePropertiesOutput {
	return o.ApplyT(func(v *ConfigurationStoreProperties) ConfigurationStoreProperties { return *v }).(ConfigurationStorePropertiesOutput)
}

// The properties of a configuration store.
type ConfigurationStorePropertiesResponse struct {
	// The creation date of configuration store.
	CreationDate string `pulumi:"creationDate"`
	// The DNS endpoint where the configuration store API will be available.
	Endpoint string `pulumi:"endpoint"`
	// The provisioning state of the configuration store.
	ProvisioningState string `pulumi:"provisioningState"`
}

// ConfigurationStorePropertiesResponseInput is an input type that accepts ConfigurationStorePropertiesResponseArgs and ConfigurationStorePropertiesResponseOutput values.
// You can construct a concrete instance of `ConfigurationStorePropertiesResponseInput` via:
//
//          ConfigurationStorePropertiesResponseArgs{...}
type ConfigurationStorePropertiesResponseInput interface {
	pulumi.Input

	ToConfigurationStorePropertiesResponseOutput() ConfigurationStorePropertiesResponseOutput
	ToConfigurationStorePropertiesResponseOutputWithContext(context.Context) ConfigurationStorePropertiesResponseOutput
}

// The properties of a configuration store.
type ConfigurationStorePropertiesResponseArgs struct {
	// The creation date of configuration store.
	CreationDate pulumi.StringInput `pulumi:"creationDate"`
	// The DNS endpoint where the configuration store API will be available.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// The provisioning state of the configuration store.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (ConfigurationStorePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStorePropertiesResponse)(nil)).Elem()
}

func (i ConfigurationStorePropertiesResponseArgs) ToConfigurationStorePropertiesResponseOutput() ConfigurationStorePropertiesResponseOutput {
	return i.ToConfigurationStorePropertiesResponseOutputWithContext(context.Background())
}

func (i ConfigurationStorePropertiesResponseArgs) ToConfigurationStorePropertiesResponseOutputWithContext(ctx context.Context) ConfigurationStorePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStorePropertiesResponseOutput)
}

func (i ConfigurationStorePropertiesResponseArgs) ToConfigurationStorePropertiesResponsePtrOutput() ConfigurationStorePropertiesResponsePtrOutput {
	return i.ToConfigurationStorePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ConfigurationStorePropertiesResponseArgs) ToConfigurationStorePropertiesResponsePtrOutputWithContext(ctx context.Context) ConfigurationStorePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStorePropertiesResponseOutput).ToConfigurationStorePropertiesResponsePtrOutputWithContext(ctx)
}

// ConfigurationStorePropertiesResponsePtrInput is an input type that accepts ConfigurationStorePropertiesResponseArgs, ConfigurationStorePropertiesResponsePtr and ConfigurationStorePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ConfigurationStorePropertiesResponsePtrInput` via:
//
//          ConfigurationStorePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ConfigurationStorePropertiesResponsePtrInput interface {
	pulumi.Input

	ToConfigurationStorePropertiesResponsePtrOutput() ConfigurationStorePropertiesResponsePtrOutput
	ToConfigurationStorePropertiesResponsePtrOutputWithContext(context.Context) ConfigurationStorePropertiesResponsePtrOutput
}

type configurationStorePropertiesResponsePtrType ConfigurationStorePropertiesResponseArgs

func ConfigurationStorePropertiesResponsePtr(v *ConfigurationStorePropertiesResponseArgs) ConfigurationStorePropertiesResponsePtrInput {
	return (*configurationStorePropertiesResponsePtrType)(v)
}

func (*configurationStorePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationStorePropertiesResponse)(nil)).Elem()
}

func (i *configurationStorePropertiesResponsePtrType) ToConfigurationStorePropertiesResponsePtrOutput() ConfigurationStorePropertiesResponsePtrOutput {
	return i.ToConfigurationStorePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *configurationStorePropertiesResponsePtrType) ToConfigurationStorePropertiesResponsePtrOutputWithContext(ctx context.Context) ConfigurationStorePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStorePropertiesResponsePtrOutput)
}

// The properties of a configuration store.
type ConfigurationStorePropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConfigurationStorePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStorePropertiesResponse)(nil)).Elem()
}

func (o ConfigurationStorePropertiesResponseOutput) ToConfigurationStorePropertiesResponseOutput() ConfigurationStorePropertiesResponseOutput {
	return o
}

func (o ConfigurationStorePropertiesResponseOutput) ToConfigurationStorePropertiesResponseOutputWithContext(ctx context.Context) ConfigurationStorePropertiesResponseOutput {
	return o
}

func (o ConfigurationStorePropertiesResponseOutput) ToConfigurationStorePropertiesResponsePtrOutput() ConfigurationStorePropertiesResponsePtrOutput {
	return o.ToConfigurationStorePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ConfigurationStorePropertiesResponseOutput) ToConfigurationStorePropertiesResponsePtrOutputWithContext(ctx context.Context) ConfigurationStorePropertiesResponsePtrOutput {
	return o.ApplyT(func(v ConfigurationStorePropertiesResponse) *ConfigurationStorePropertiesResponse {
		return &v
	}).(ConfigurationStorePropertiesResponsePtrOutput)
}

// The creation date of configuration store.
func (o ConfigurationStorePropertiesResponseOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationStorePropertiesResponse) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The DNS endpoint where the configuration store API will be available.
func (o ConfigurationStorePropertiesResponseOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationStorePropertiesResponse) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The provisioning state of the configuration store.
func (o ConfigurationStorePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationStorePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type ConfigurationStorePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ConfigurationStorePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationStorePropertiesResponse)(nil)).Elem()
}

func (o ConfigurationStorePropertiesResponsePtrOutput) ToConfigurationStorePropertiesResponsePtrOutput() ConfigurationStorePropertiesResponsePtrOutput {
	return o
}

func (o ConfigurationStorePropertiesResponsePtrOutput) ToConfigurationStorePropertiesResponsePtrOutputWithContext(ctx context.Context) ConfigurationStorePropertiesResponsePtrOutput {
	return o
}

func (o ConfigurationStorePropertiesResponsePtrOutput) Elem() ConfigurationStorePropertiesResponseOutput {
	return o.ApplyT(func(v *ConfigurationStorePropertiesResponse) ConfigurationStorePropertiesResponse { return *v }).(ConfigurationStorePropertiesResponseOutput)
}

// The creation date of configuration store.
func (o ConfigurationStorePropertiesResponsePtrOutput) CreationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationStorePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreationDate
	}).(pulumi.StringPtrOutput)
}

// The DNS endpoint where the configuration store API will be available.
func (o ConfigurationStorePropertiesResponsePtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationStorePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the configuration store.
func (o ConfigurationStorePropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationStorePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

type ResourceIdentity struct {
	// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
	Type *string `pulumi:"type"`
	// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]string `pulumi:"userAssignedIdentities"`
}

// ResourceIdentityInput is an input type that accepts ResourceIdentityArgs and ResourceIdentityOutput values.
// You can construct a concrete instance of `ResourceIdentityInput` via:
//
//          ResourceIdentityArgs{...}
type ResourceIdentityInput interface {
	pulumi.Input

	ToResourceIdentityOutput() ResourceIdentityOutput
	ToResourceIdentityOutputWithContext(context.Context) ResourceIdentityOutput
}

type ResourceIdentityArgs struct {
	// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities pulumi.StringMapInput `pulumi:"userAssignedIdentities"`
}

func (ResourceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (i ResourceIdentityArgs) ToResourceIdentityOutput() ResourceIdentityOutput {
	return i.ToResourceIdentityOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput)
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput).ToResourceIdentityPtrOutputWithContext(ctx)
}

// ResourceIdentityPtrInput is an input type that accepts ResourceIdentityArgs, ResourceIdentityPtr and ResourceIdentityPtrOutput values.
// You can construct a concrete instance of `ResourceIdentityPtrInput` via:
//
//          ResourceIdentityArgs{...}
//
//  or:
//
//          nil
type ResourceIdentityPtrInput interface {
	pulumi.Input

	ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput
	ToResourceIdentityPtrOutputWithContext(context.Context) ResourceIdentityPtrOutput
}

type resourceIdentityPtrType ResourceIdentityArgs

func ResourceIdentityPtr(v *ResourceIdentityArgs) ResourceIdentityPtrInput {
	return (*resourceIdentityPtrType)(v)
}

func (*resourceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityPtrOutput)
}

type ResourceIdentityOutput struct{ *pulumi.OutputState }

func (ResourceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityOutput) ToResourceIdentityOutput() ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o.ApplyT(func(v ResourceIdentity) *ResourceIdentity {
		return &v
	}).(ResourceIdentityPtrOutput)
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
func (o ResourceIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ResourceIdentityOutput) UserAssignedIdentities() pulumi.StringMapOutput {
	return o.ApplyT(func(v ResourceIdentity) map[string]string { return v.UserAssignedIdentities }).(pulumi.StringMapOutput)
}

type ResourceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) Elem() ResourceIdentityOutput {
	return o.ApplyT(func(v *ResourceIdentity) ResourceIdentity { return *v }).(ResourceIdentityOutput)
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
func (o ResourceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ResourceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ResourceIdentity) map[string]string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringMapOutput)
}

type ResourceIdentityResponse struct {
	// The principal id of the identity. This property will only be provided for a system-assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant id associated with the resource's identity. This property will only be provided for a system-assigned identity.
	TenantId string `pulumi:"tenantId"`
	// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
	Type *string `pulumi:"type"`
	// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]string `pulumi:"userAssignedIdentities"`
}

// ResourceIdentityResponseInput is an input type that accepts ResourceIdentityResponseArgs and ResourceIdentityResponseOutput values.
// You can construct a concrete instance of `ResourceIdentityResponseInput` via:
//
//          ResourceIdentityResponseArgs{...}
type ResourceIdentityResponseInput interface {
	pulumi.Input

	ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput
	ToResourceIdentityResponseOutputWithContext(context.Context) ResourceIdentityResponseOutput
}

type ResourceIdentityResponseArgs struct {
	// The principal id of the identity. This property will only be provided for a system-assigned identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant id associated with the resource's identity. This property will only be provided for a system-assigned identity.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities pulumi.StringMapInput `pulumi:"userAssignedIdentities"`
}

func (ResourceIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityResponse)(nil)).Elem()
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput {
	return i.ToResourceIdentityResponseOutputWithContext(context.Background())
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponseOutputWithContext(ctx context.Context) ResourceIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityResponseOutput)
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return i.ToResourceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityResponseOutput).ToResourceIdentityResponsePtrOutputWithContext(ctx)
}

// ResourceIdentityResponsePtrInput is an input type that accepts ResourceIdentityResponseArgs, ResourceIdentityResponsePtr and ResourceIdentityResponsePtrOutput values.
// You can construct a concrete instance of `ResourceIdentityResponsePtrInput` via:
//
//          ResourceIdentityResponseArgs{...}
//
//  or:
//
//          nil
type ResourceIdentityResponsePtrInput interface {
	pulumi.Input

	ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput
	ToResourceIdentityResponsePtrOutputWithContext(context.Context) ResourceIdentityResponsePtrOutput
}

type resourceIdentityResponsePtrType ResourceIdentityResponseArgs

func ResourceIdentityResponsePtr(v *ResourceIdentityResponseArgs) ResourceIdentityResponsePtrInput {
	return (*resourceIdentityResponsePtrType)(v)
}

func (*resourceIdentityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityResponse)(nil)).Elem()
}

func (i *resourceIdentityResponsePtrType) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return i.ToResourceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *resourceIdentityResponsePtrType) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityResponsePtrOutput)
}

type ResourceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput {
	return o
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutputWithContext(ctx context.Context) ResourceIdentityResponseOutput {
	return o
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return o.ToResourceIdentityResponsePtrOutputWithContext(context.Background())
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) *ResourceIdentityResponse {
		return &v
	}).(ResourceIdentityResponsePtrOutput)
}

// The principal id of the identity. This property will only be provided for a system-assigned identity.
func (o ResourceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant id associated with the resource's identity. This property will only be provided for a system-assigned identity.
func (o ResourceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
func (o ResourceIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ResourceIdentityResponseOutput) UserAssignedIdentities() pulumi.StringMapOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) map[string]string { return v.UserAssignedIdentities }).(pulumi.StringMapOutput)
}

type ResourceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) Elem() ResourceIdentityResponseOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) ResourceIdentityResponse { return *v }).(ResourceIdentityResponseOutput)
}

// The principal id of the identity. This property will only be provided for a system-assigned identity.
func (o ResourceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant id associated with the resource's identity. This property will only be provided for a system-assigned identity.
func (o ResourceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
func (o ResourceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ResourceIdentityResponsePtrOutput) UserAssignedIdentities() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringMapOutput)
}

// Describes a configuration store SKU.
type Sku struct {
	// The SKU name of the configuration store.
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// Describes a configuration store SKU.
type SkuArgs struct {
	// The SKU name of the configuration store.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// Describes a configuration store SKU.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The SKU name of the configuration store.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// The SKU name of the configuration store.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Describes a configuration store SKU.
type SkuResponse struct {
	// The SKU name of the configuration store.
	Name string `pulumi:"name"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// Describes a configuration store SKU.
type SkuResponseArgs struct {
	// The SKU name of the configuration store.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// Describes a configuration store SKU.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// The SKU name of the configuration store.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// The SKU name of the configuration store.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ConfigurationStoreTypeOutput{})
	pulumi.RegisterOutputType(ConfigurationStorePropertiesOutput{})
	pulumi.RegisterOutputType(ConfigurationStorePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConfigurationStorePropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConfigurationStorePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityOutput{})
	pulumi.RegisterOutputType(ResourceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
}
