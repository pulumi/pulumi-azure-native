// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package batch

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Contains information about a certificate.
type BatchAccountCertificate struct {
	pulumi.CustomResourceState

	// The ETag of the resource, used for concurrency statements.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The properties associated with the certificate.
	Properties CertificatePropertiesResponseOutput `pulumi:"properties"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewBatchAccountCertificate registers a new resource with the given unique name, arguments, and options.
func NewBatchAccountCertificate(ctx *pulumi.Context,
	name string, args *BatchAccountCertificateArgs, opts ...pulumi.ResourceOption) (*BatchAccountCertificate, error) {
	if args == nil || args.AccountName == nil {
		return nil, errors.New("missing required argument 'AccountName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &BatchAccountCertificateArgs{}
	}
	var resource BatchAccountCertificate
	err := ctx.RegisterResource("azurerm:batch:BatchAccountCertificate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBatchAccountCertificate gets an existing BatchAccountCertificate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBatchAccountCertificate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BatchAccountCertificateState, opts ...pulumi.ResourceOption) (*BatchAccountCertificate, error) {
	var resource BatchAccountCertificate
	err := ctx.ReadResource("azurerm:batch:BatchAccountCertificate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BatchAccountCertificate resources.
type batchAccountCertificateState struct {
	// The ETag of the resource, used for concurrency statements.
	Etag *string `pulumi:"etag"`
	// The name of the resource.
	Name *string `pulumi:"name"`
	// The properties associated with the certificate.
	Properties *CertificatePropertiesResponse `pulumi:"properties"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

type BatchAccountCertificateState struct {
	// The ETag of the resource, used for concurrency statements.
	Etag pulumi.StringPtrInput
	// The name of the resource.
	Name pulumi.StringPtrInput
	// The properties associated with the certificate.
	Properties CertificatePropertiesResponsePtrInput
	// The type of the resource.
	Type pulumi.StringPtrInput
}

func (BatchAccountCertificateState) ElementType() reflect.Type {
	return reflect.TypeOf((*batchAccountCertificateState)(nil)).Elem()
}

type batchAccountCertificateArgs struct {
	// The name of the Batch account.
	AccountName string `pulumi:"accountName"`
	// The identifier for the certificate. This must be made up of algorithm and thumbprint separated by a dash, and must match the certificate data in the request. For example SHA1-a3d1c5.
	Name string `pulumi:"name"`
	// The properties associated with the certificate.
	Properties *CertificateCreateOrUpdateProperties `pulumi:"properties"`
	// The name of the resource group that contains the Batch account.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a BatchAccountCertificate resource.
type BatchAccountCertificateArgs struct {
	// The name of the Batch account.
	AccountName pulumi.StringInput
	// The identifier for the certificate. This must be made up of algorithm and thumbprint separated by a dash, and must match the certificate data in the request. For example SHA1-a3d1c5.
	Name pulumi.StringInput
	// The properties associated with the certificate.
	Properties CertificateCreateOrUpdatePropertiesPtrInput
	// The name of the resource group that contains the Batch account.
	ResourceGroupName pulumi.StringInput
}

func (BatchAccountCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*batchAccountCertificateArgs)(nil)).Elem()
}
