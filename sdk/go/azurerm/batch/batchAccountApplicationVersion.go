// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package batch

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An application package which represents a particular version of an application.
type BatchAccountApplicationVersion struct {
	pulumi.CustomResourceState

	// The ETag of the resource, used for concurrency statements.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The properties associated with the Application Package.
	Properties ApplicationPackagePropertiesResponseOutput `pulumi:"properties"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewBatchAccountApplicationVersion registers a new resource with the given unique name, arguments, and options.
func NewBatchAccountApplicationVersion(ctx *pulumi.Context,
	name string, args *BatchAccountApplicationVersionArgs, opts ...pulumi.ResourceOption) (*BatchAccountApplicationVersion, error) {
	if args == nil || args.AccountName == nil {
		return nil, errors.New("missing required argument 'AccountName'")
	}
	if args == nil || args.ApplicationName == nil {
		return nil, errors.New("missing required argument 'ApplicationName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &BatchAccountApplicationVersionArgs{}
	}
	var resource BatchAccountApplicationVersion
	err := ctx.RegisterResource("azurerm:batch:BatchAccountApplicationVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBatchAccountApplicationVersion gets an existing BatchAccountApplicationVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBatchAccountApplicationVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BatchAccountApplicationVersionState, opts ...pulumi.ResourceOption) (*BatchAccountApplicationVersion, error) {
	var resource BatchAccountApplicationVersion
	err := ctx.ReadResource("azurerm:batch:BatchAccountApplicationVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BatchAccountApplicationVersion resources.
type batchAccountApplicationVersionState struct {
	// The ETag of the resource, used for concurrency statements.
	Etag *string `pulumi:"etag"`
	// The name of the resource.
	Name *string `pulumi:"name"`
	// The properties associated with the Application Package.
	Properties *ApplicationPackagePropertiesResponse `pulumi:"properties"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

type BatchAccountApplicationVersionState struct {
	// The ETag of the resource, used for concurrency statements.
	Etag pulumi.StringPtrInput
	// The name of the resource.
	Name pulumi.StringPtrInput
	// The properties associated with the Application Package.
	Properties ApplicationPackagePropertiesResponsePtrInput
	// The type of the resource.
	Type pulumi.StringPtrInput
}

func (BatchAccountApplicationVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*batchAccountApplicationVersionState)(nil)).Elem()
}

type batchAccountApplicationVersionArgs struct {
	// The name of the Batch account.
	AccountName string `pulumi:"accountName"`
	// The name of the application. This must be unique within the account.
	ApplicationName string `pulumi:"applicationName"`
	// The version of the application.
	Name string `pulumi:"name"`
	// The properties associated with the Application Package.
	Properties *ApplicationPackageProperties `pulumi:"properties"`
	// The name of the resource group that contains the Batch account.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a BatchAccountApplicationVersion resource.
type BatchAccountApplicationVersionArgs struct {
	// The name of the Batch account.
	AccountName pulumi.StringInput
	// The name of the application. This must be unique within the account.
	ApplicationName pulumi.StringInput
	// The version of the application.
	Name pulumi.StringInput
	// The properties associated with the Application Package.
	Properties ApplicationPackagePropertiesPtrInput
	// The name of the resource group that contains the Batch account.
	ResourceGroupName pulumi.StringInput
}

func (BatchAccountApplicationVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*batchAccountApplicationVersionArgs)(nil)).Elem()
}
