// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Contains information about an application in a Batch account.
type ApplicationType struct {
	// A value indicating whether packages within the application may be overwritten using the same version string.
	AllowUpdates *bool `pulumi:"allowUpdates"`
	// The package to use if a client requests the application but does not specify a version.
	DefaultVersion *string `pulumi:"defaultVersion"`
	// The display name for the application.
	DisplayName *string `pulumi:"displayName"`
	// The list of packages under this application.
	Packages []ApplicationPackageResponse `pulumi:"packages"`
}

// ApplicationTypeInput is an input type that accepts ApplicationTypeArgs and ApplicationTypeOutput values.
// You can construct a concrete instance of `ApplicationTypeInput` via:
//
//          ApplicationTypeArgs{...}
type ApplicationTypeInput interface {
	pulumi.Input

	ToApplicationTypeOutput() ApplicationTypeOutput
	ToApplicationTypeOutputWithContext(context.Context) ApplicationTypeOutput
}

// Contains information about an application in a Batch account.
type ApplicationTypeArgs struct {
	// A value indicating whether packages within the application may be overwritten using the same version string.
	AllowUpdates pulumi.BoolPtrInput `pulumi:"allowUpdates"`
	// The package to use if a client requests the application but does not specify a version.
	DefaultVersion pulumi.StringPtrInput `pulumi:"defaultVersion"`
	// The display name for the application.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The list of packages under this application.
	Packages ApplicationPackageResponseArrayInput `pulumi:"packages"`
}

func (ApplicationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationType)(nil)).Elem()
}

func (i ApplicationTypeArgs) ToApplicationTypeOutput() ApplicationTypeOutput {
	return i.ToApplicationTypeOutputWithContext(context.Background())
}

func (i ApplicationTypeArgs) ToApplicationTypeOutputWithContext(ctx context.Context) ApplicationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationTypeOutput)
}

// Contains information about an application in a Batch account.
type ApplicationTypeOutput struct{ *pulumi.OutputState }

func (ApplicationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationType)(nil)).Elem()
}

func (o ApplicationTypeOutput) ToApplicationTypeOutput() ApplicationTypeOutput {
	return o
}

func (o ApplicationTypeOutput) ToApplicationTypeOutputWithContext(ctx context.Context) ApplicationTypeOutput {
	return o
}

// A value indicating whether packages within the application may be overwritten using the same version string.
func (o ApplicationTypeOutput) AllowUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationType) *bool { return v.AllowUpdates }).(pulumi.BoolPtrOutput)
}

// The package to use if a client requests the application but does not specify a version.
func (o ApplicationTypeOutput) DefaultVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationType) *string { return v.DefaultVersion }).(pulumi.StringPtrOutput)
}

// The display name for the application.
func (o ApplicationTypeOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationType) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The list of packages under this application.
func (o ApplicationTypeOutput) Packages() ApplicationPackageResponseArrayOutput {
	return o.ApplyT(func(v ApplicationType) []ApplicationPackageResponse { return v.Packages }).(ApplicationPackageResponseArrayOutput)
}

// An application package which represents a particular version of an application.
type ApplicationPackageType struct {
	// The format of the application package, if the package is active.
	Format string `pulumi:"format"`
	// The time at which the package was last activated, if the package is active.
	LastActivationTime string `pulumi:"lastActivationTime"`
	// The current state of the application package.
	State string `pulumi:"state"`
	// The storage URL at which the application package is stored.
	StorageUrl string `pulumi:"storageUrl"`
	// The UTC time at which the storage URL will expire.
	StorageUrlExpiry string `pulumi:"storageUrlExpiry"`
	// The version of the application package.
	Version string `pulumi:"version"`
}

// ApplicationPackageTypeInput is an input type that accepts ApplicationPackageTypeArgs and ApplicationPackageTypeOutput values.
// You can construct a concrete instance of `ApplicationPackageTypeInput` via:
//
//          ApplicationPackageTypeArgs{...}
type ApplicationPackageTypeInput interface {
	pulumi.Input

	ToApplicationPackageTypeOutput() ApplicationPackageTypeOutput
	ToApplicationPackageTypeOutputWithContext(context.Context) ApplicationPackageTypeOutput
}

// An application package which represents a particular version of an application.
type ApplicationPackageTypeArgs struct {
	// The format of the application package, if the package is active.
	Format pulumi.StringInput `pulumi:"format"`
	// The time at which the package was last activated, if the package is active.
	LastActivationTime pulumi.StringInput `pulumi:"lastActivationTime"`
	// The current state of the application package.
	State pulumi.StringInput `pulumi:"state"`
	// The storage URL at which the application package is stored.
	StorageUrl pulumi.StringInput `pulumi:"storageUrl"`
	// The UTC time at which the storage URL will expire.
	StorageUrlExpiry pulumi.StringInput `pulumi:"storageUrlExpiry"`
	// The version of the application package.
	Version pulumi.StringInput `pulumi:"version"`
}

func (ApplicationPackageTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationPackageType)(nil)).Elem()
}

func (i ApplicationPackageTypeArgs) ToApplicationPackageTypeOutput() ApplicationPackageTypeOutput {
	return i.ToApplicationPackageTypeOutputWithContext(context.Background())
}

func (i ApplicationPackageTypeArgs) ToApplicationPackageTypeOutputWithContext(ctx context.Context) ApplicationPackageTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPackageTypeOutput)
}

// An application package which represents a particular version of an application.
type ApplicationPackageTypeOutput struct{ *pulumi.OutputState }

func (ApplicationPackageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationPackageType)(nil)).Elem()
}

func (o ApplicationPackageTypeOutput) ToApplicationPackageTypeOutput() ApplicationPackageTypeOutput {
	return o
}

func (o ApplicationPackageTypeOutput) ToApplicationPackageTypeOutputWithContext(ctx context.Context) ApplicationPackageTypeOutput {
	return o
}

// The format of the application package, if the package is active.
func (o ApplicationPackageTypeOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationPackageType) string { return v.Format }).(pulumi.StringOutput)
}

// The time at which the package was last activated, if the package is active.
func (o ApplicationPackageTypeOutput) LastActivationTime() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationPackageType) string { return v.LastActivationTime }).(pulumi.StringOutput)
}

// The current state of the application package.
func (o ApplicationPackageTypeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationPackageType) string { return v.State }).(pulumi.StringOutput)
}

// The storage URL at which the application package is stored.
func (o ApplicationPackageTypeOutput) StorageUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationPackageType) string { return v.StorageUrl }).(pulumi.StringOutput)
}

// The UTC time at which the storage URL will expire.
func (o ApplicationPackageTypeOutput) StorageUrlExpiry() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationPackageType) string { return v.StorageUrlExpiry }).(pulumi.StringOutput)
}

// The version of the application package.
func (o ApplicationPackageTypeOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationPackageType) string { return v.Version }).(pulumi.StringOutput)
}

// An application package which represents a particular version of an application.
type ApplicationPackageResponse struct {
	// The format of the application package, if the package is active.
	Format string `pulumi:"format"`
	// The ID of the application.
	Id string `pulumi:"id"`
	// The time at which the package was last activated, if the package is active.
	LastActivationTime string `pulumi:"lastActivationTime"`
	// The current state of the application package.
	State string `pulumi:"state"`
	// The storage URL at which the application package is stored.
	StorageUrl string `pulumi:"storageUrl"`
	// The UTC time at which the storage URL will expire.
	StorageUrlExpiry string `pulumi:"storageUrlExpiry"`
	// The version of the application package.
	Version string `pulumi:"version"`
}

// ApplicationPackageResponseInput is an input type that accepts ApplicationPackageResponseArgs and ApplicationPackageResponseOutput values.
// You can construct a concrete instance of `ApplicationPackageResponseInput` via:
//
//          ApplicationPackageResponseArgs{...}
type ApplicationPackageResponseInput interface {
	pulumi.Input

	ToApplicationPackageResponseOutput() ApplicationPackageResponseOutput
	ToApplicationPackageResponseOutputWithContext(context.Context) ApplicationPackageResponseOutput
}

// An application package which represents a particular version of an application.
type ApplicationPackageResponseArgs struct {
	// The format of the application package, if the package is active.
	Format pulumi.StringInput `pulumi:"format"`
	// The ID of the application.
	Id pulumi.StringInput `pulumi:"id"`
	// The time at which the package was last activated, if the package is active.
	LastActivationTime pulumi.StringInput `pulumi:"lastActivationTime"`
	// The current state of the application package.
	State pulumi.StringInput `pulumi:"state"`
	// The storage URL at which the application package is stored.
	StorageUrl pulumi.StringInput `pulumi:"storageUrl"`
	// The UTC time at which the storage URL will expire.
	StorageUrlExpiry pulumi.StringInput `pulumi:"storageUrlExpiry"`
	// The version of the application package.
	Version pulumi.StringInput `pulumi:"version"`
}

func (ApplicationPackageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationPackageResponse)(nil)).Elem()
}

func (i ApplicationPackageResponseArgs) ToApplicationPackageResponseOutput() ApplicationPackageResponseOutput {
	return i.ToApplicationPackageResponseOutputWithContext(context.Background())
}

func (i ApplicationPackageResponseArgs) ToApplicationPackageResponseOutputWithContext(ctx context.Context) ApplicationPackageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPackageResponseOutput)
}

// ApplicationPackageResponseArrayInput is an input type that accepts ApplicationPackageResponseArray and ApplicationPackageResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationPackageResponseArrayInput` via:
//
//          ApplicationPackageResponseArray{ ApplicationPackageResponseArgs{...} }
type ApplicationPackageResponseArrayInput interface {
	pulumi.Input

	ToApplicationPackageResponseArrayOutput() ApplicationPackageResponseArrayOutput
	ToApplicationPackageResponseArrayOutputWithContext(context.Context) ApplicationPackageResponseArrayOutput
}

type ApplicationPackageResponseArray []ApplicationPackageResponseInput

func (ApplicationPackageResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationPackageResponse)(nil)).Elem()
}

func (i ApplicationPackageResponseArray) ToApplicationPackageResponseArrayOutput() ApplicationPackageResponseArrayOutput {
	return i.ToApplicationPackageResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationPackageResponseArray) ToApplicationPackageResponseArrayOutputWithContext(ctx context.Context) ApplicationPackageResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPackageResponseArrayOutput)
}

// An application package which represents a particular version of an application.
type ApplicationPackageResponseOutput struct{ *pulumi.OutputState }

func (ApplicationPackageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationPackageResponse)(nil)).Elem()
}

func (o ApplicationPackageResponseOutput) ToApplicationPackageResponseOutput() ApplicationPackageResponseOutput {
	return o
}

func (o ApplicationPackageResponseOutput) ToApplicationPackageResponseOutputWithContext(ctx context.Context) ApplicationPackageResponseOutput {
	return o
}

// The format of the application package, if the package is active.
func (o ApplicationPackageResponseOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationPackageResponse) string { return v.Format }).(pulumi.StringOutput)
}

// The ID of the application.
func (o ApplicationPackageResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationPackageResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The time at which the package was last activated, if the package is active.
func (o ApplicationPackageResponseOutput) LastActivationTime() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationPackageResponse) string { return v.LastActivationTime }).(pulumi.StringOutput)
}

// The current state of the application package.
func (o ApplicationPackageResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationPackageResponse) string { return v.State }).(pulumi.StringOutput)
}

// The storage URL at which the application package is stored.
func (o ApplicationPackageResponseOutput) StorageUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationPackageResponse) string { return v.StorageUrl }).(pulumi.StringOutput)
}

// The UTC time at which the storage URL will expire.
func (o ApplicationPackageResponseOutput) StorageUrlExpiry() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationPackageResponse) string { return v.StorageUrlExpiry }).(pulumi.StringOutput)
}

// The version of the application package.
func (o ApplicationPackageResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationPackageResponse) string { return v.Version }).(pulumi.StringOutput)
}

type ApplicationPackageResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationPackageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationPackageResponse)(nil)).Elem()
}

func (o ApplicationPackageResponseArrayOutput) ToApplicationPackageResponseArrayOutput() ApplicationPackageResponseArrayOutput {
	return o
}

func (o ApplicationPackageResponseArrayOutput) ToApplicationPackageResponseArrayOutputWithContext(ctx context.Context) ApplicationPackageResponseArrayOutput {
	return o
}

func (o ApplicationPackageResponseArrayOutput) Index(i pulumi.IntInput) ApplicationPackageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationPackageResponse {
		return vs[0].([]ApplicationPackageResponse)[vs[1].(int)]
	}).(ApplicationPackageResponseOutput)
}

// The properties related to auto storage account.
type AutoStorageBaseProperties struct {
	// The resource ID of the storage account to be used for auto storage account.
	StorageAccountId string `pulumi:"storageAccountId"`
}

// AutoStorageBasePropertiesInput is an input type that accepts AutoStorageBasePropertiesArgs and AutoStorageBasePropertiesOutput values.
// You can construct a concrete instance of `AutoStorageBasePropertiesInput` via:
//
//          AutoStorageBasePropertiesArgs{...}
type AutoStorageBasePropertiesInput interface {
	pulumi.Input

	ToAutoStorageBasePropertiesOutput() AutoStorageBasePropertiesOutput
	ToAutoStorageBasePropertiesOutputWithContext(context.Context) AutoStorageBasePropertiesOutput
}

// The properties related to auto storage account.
type AutoStorageBasePropertiesArgs struct {
	// The resource ID of the storage account to be used for auto storage account.
	StorageAccountId pulumi.StringInput `pulumi:"storageAccountId"`
}

func (AutoStorageBasePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoStorageBaseProperties)(nil)).Elem()
}

func (i AutoStorageBasePropertiesArgs) ToAutoStorageBasePropertiesOutput() AutoStorageBasePropertiesOutput {
	return i.ToAutoStorageBasePropertiesOutputWithContext(context.Background())
}

func (i AutoStorageBasePropertiesArgs) ToAutoStorageBasePropertiesOutputWithContext(ctx context.Context) AutoStorageBasePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoStorageBasePropertiesOutput)
}

func (i AutoStorageBasePropertiesArgs) ToAutoStorageBasePropertiesPtrOutput() AutoStorageBasePropertiesPtrOutput {
	return i.ToAutoStorageBasePropertiesPtrOutputWithContext(context.Background())
}

func (i AutoStorageBasePropertiesArgs) ToAutoStorageBasePropertiesPtrOutputWithContext(ctx context.Context) AutoStorageBasePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoStorageBasePropertiesOutput).ToAutoStorageBasePropertiesPtrOutputWithContext(ctx)
}

// AutoStorageBasePropertiesPtrInput is an input type that accepts AutoStorageBasePropertiesArgs, AutoStorageBasePropertiesPtr and AutoStorageBasePropertiesPtrOutput values.
// You can construct a concrete instance of `AutoStorageBasePropertiesPtrInput` via:
//
//          AutoStorageBasePropertiesArgs{...}
//
//  or:
//
//          nil
type AutoStorageBasePropertiesPtrInput interface {
	pulumi.Input

	ToAutoStorageBasePropertiesPtrOutput() AutoStorageBasePropertiesPtrOutput
	ToAutoStorageBasePropertiesPtrOutputWithContext(context.Context) AutoStorageBasePropertiesPtrOutput
}

type autoStorageBasePropertiesPtrType AutoStorageBasePropertiesArgs

func AutoStorageBasePropertiesPtr(v *AutoStorageBasePropertiesArgs) AutoStorageBasePropertiesPtrInput {
	return (*autoStorageBasePropertiesPtrType)(v)
}

func (*autoStorageBasePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoStorageBaseProperties)(nil)).Elem()
}

func (i *autoStorageBasePropertiesPtrType) ToAutoStorageBasePropertiesPtrOutput() AutoStorageBasePropertiesPtrOutput {
	return i.ToAutoStorageBasePropertiesPtrOutputWithContext(context.Background())
}

func (i *autoStorageBasePropertiesPtrType) ToAutoStorageBasePropertiesPtrOutputWithContext(ctx context.Context) AutoStorageBasePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoStorageBasePropertiesPtrOutput)
}

// The properties related to auto storage account.
type AutoStorageBasePropertiesOutput struct{ *pulumi.OutputState }

func (AutoStorageBasePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoStorageBaseProperties)(nil)).Elem()
}

func (o AutoStorageBasePropertiesOutput) ToAutoStorageBasePropertiesOutput() AutoStorageBasePropertiesOutput {
	return o
}

func (o AutoStorageBasePropertiesOutput) ToAutoStorageBasePropertiesOutputWithContext(ctx context.Context) AutoStorageBasePropertiesOutput {
	return o
}

func (o AutoStorageBasePropertiesOutput) ToAutoStorageBasePropertiesPtrOutput() AutoStorageBasePropertiesPtrOutput {
	return o.ToAutoStorageBasePropertiesPtrOutputWithContext(context.Background())
}

func (o AutoStorageBasePropertiesOutput) ToAutoStorageBasePropertiesPtrOutputWithContext(ctx context.Context) AutoStorageBasePropertiesPtrOutput {
	return o.ApplyT(func(v AutoStorageBaseProperties) *AutoStorageBaseProperties {
		return &v
	}).(AutoStorageBasePropertiesPtrOutput)
}

// The resource ID of the storage account to be used for auto storage account.
func (o AutoStorageBasePropertiesOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v AutoStorageBaseProperties) string { return v.StorageAccountId }).(pulumi.StringOutput)
}

type AutoStorageBasePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AutoStorageBasePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoStorageBaseProperties)(nil)).Elem()
}

func (o AutoStorageBasePropertiesPtrOutput) ToAutoStorageBasePropertiesPtrOutput() AutoStorageBasePropertiesPtrOutput {
	return o
}

func (o AutoStorageBasePropertiesPtrOutput) ToAutoStorageBasePropertiesPtrOutputWithContext(ctx context.Context) AutoStorageBasePropertiesPtrOutput {
	return o
}

func (o AutoStorageBasePropertiesPtrOutput) Elem() AutoStorageBasePropertiesOutput {
	return o.ApplyT(func(v *AutoStorageBaseProperties) AutoStorageBaseProperties { return *v }).(AutoStorageBasePropertiesOutput)
}

// The resource ID of the storage account to be used for auto storage account.
func (o AutoStorageBasePropertiesPtrOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoStorageBaseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountId
	}).(pulumi.StringPtrOutput)
}

// Contains information about the auto storage account associated with a Batch account.
type AutoStoragePropertiesResponse struct {
	// The UTC time at which storage keys were last synchronized with the Batch account.
	LastKeySync string `pulumi:"lastKeySync"`
	// The resource ID of the storage account to be used for auto storage account.
	StorageAccountId string `pulumi:"storageAccountId"`
}

// AutoStoragePropertiesResponseInput is an input type that accepts AutoStoragePropertiesResponseArgs and AutoStoragePropertiesResponseOutput values.
// You can construct a concrete instance of `AutoStoragePropertiesResponseInput` via:
//
//          AutoStoragePropertiesResponseArgs{...}
type AutoStoragePropertiesResponseInput interface {
	pulumi.Input

	ToAutoStoragePropertiesResponseOutput() AutoStoragePropertiesResponseOutput
	ToAutoStoragePropertiesResponseOutputWithContext(context.Context) AutoStoragePropertiesResponseOutput
}

// Contains information about the auto storage account associated with a Batch account.
type AutoStoragePropertiesResponseArgs struct {
	// The UTC time at which storage keys were last synchronized with the Batch account.
	LastKeySync pulumi.StringInput `pulumi:"lastKeySync"`
	// The resource ID of the storage account to be used for auto storage account.
	StorageAccountId pulumi.StringInput `pulumi:"storageAccountId"`
}

func (AutoStoragePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoStoragePropertiesResponse)(nil)).Elem()
}

func (i AutoStoragePropertiesResponseArgs) ToAutoStoragePropertiesResponseOutput() AutoStoragePropertiesResponseOutput {
	return i.ToAutoStoragePropertiesResponseOutputWithContext(context.Background())
}

func (i AutoStoragePropertiesResponseArgs) ToAutoStoragePropertiesResponseOutputWithContext(ctx context.Context) AutoStoragePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoStoragePropertiesResponseOutput)
}

func (i AutoStoragePropertiesResponseArgs) ToAutoStoragePropertiesResponsePtrOutput() AutoStoragePropertiesResponsePtrOutput {
	return i.ToAutoStoragePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i AutoStoragePropertiesResponseArgs) ToAutoStoragePropertiesResponsePtrOutputWithContext(ctx context.Context) AutoStoragePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoStoragePropertiesResponseOutput).ToAutoStoragePropertiesResponsePtrOutputWithContext(ctx)
}

// AutoStoragePropertiesResponsePtrInput is an input type that accepts AutoStoragePropertiesResponseArgs, AutoStoragePropertiesResponsePtr and AutoStoragePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `AutoStoragePropertiesResponsePtrInput` via:
//
//          AutoStoragePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type AutoStoragePropertiesResponsePtrInput interface {
	pulumi.Input

	ToAutoStoragePropertiesResponsePtrOutput() AutoStoragePropertiesResponsePtrOutput
	ToAutoStoragePropertiesResponsePtrOutputWithContext(context.Context) AutoStoragePropertiesResponsePtrOutput
}

type autoStoragePropertiesResponsePtrType AutoStoragePropertiesResponseArgs

func AutoStoragePropertiesResponsePtr(v *AutoStoragePropertiesResponseArgs) AutoStoragePropertiesResponsePtrInput {
	return (*autoStoragePropertiesResponsePtrType)(v)
}

func (*autoStoragePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoStoragePropertiesResponse)(nil)).Elem()
}

func (i *autoStoragePropertiesResponsePtrType) ToAutoStoragePropertiesResponsePtrOutput() AutoStoragePropertiesResponsePtrOutput {
	return i.ToAutoStoragePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *autoStoragePropertiesResponsePtrType) ToAutoStoragePropertiesResponsePtrOutputWithContext(ctx context.Context) AutoStoragePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoStoragePropertiesResponsePtrOutput)
}

// Contains information about the auto storage account associated with a Batch account.
type AutoStoragePropertiesResponseOutput struct{ *pulumi.OutputState }

func (AutoStoragePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoStoragePropertiesResponse)(nil)).Elem()
}

func (o AutoStoragePropertiesResponseOutput) ToAutoStoragePropertiesResponseOutput() AutoStoragePropertiesResponseOutput {
	return o
}

func (o AutoStoragePropertiesResponseOutput) ToAutoStoragePropertiesResponseOutputWithContext(ctx context.Context) AutoStoragePropertiesResponseOutput {
	return o
}

func (o AutoStoragePropertiesResponseOutput) ToAutoStoragePropertiesResponsePtrOutput() AutoStoragePropertiesResponsePtrOutput {
	return o.ToAutoStoragePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AutoStoragePropertiesResponseOutput) ToAutoStoragePropertiesResponsePtrOutputWithContext(ctx context.Context) AutoStoragePropertiesResponsePtrOutput {
	return o.ApplyT(func(v AutoStoragePropertiesResponse) *AutoStoragePropertiesResponse {
		return &v
	}).(AutoStoragePropertiesResponsePtrOutput)
}

// The UTC time at which storage keys were last synchronized with the Batch account.
func (o AutoStoragePropertiesResponseOutput) LastKeySync() pulumi.StringOutput {
	return o.ApplyT(func(v AutoStoragePropertiesResponse) string { return v.LastKeySync }).(pulumi.StringOutput)
}

// The resource ID of the storage account to be used for auto storage account.
func (o AutoStoragePropertiesResponseOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v AutoStoragePropertiesResponse) string { return v.StorageAccountId }).(pulumi.StringOutput)
}

type AutoStoragePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoStoragePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoStoragePropertiesResponse)(nil)).Elem()
}

func (o AutoStoragePropertiesResponsePtrOutput) ToAutoStoragePropertiesResponsePtrOutput() AutoStoragePropertiesResponsePtrOutput {
	return o
}

func (o AutoStoragePropertiesResponsePtrOutput) ToAutoStoragePropertiesResponsePtrOutputWithContext(ctx context.Context) AutoStoragePropertiesResponsePtrOutput {
	return o
}

func (o AutoStoragePropertiesResponsePtrOutput) Elem() AutoStoragePropertiesResponseOutput {
	return o.ApplyT(func(v *AutoStoragePropertiesResponse) AutoStoragePropertiesResponse { return *v }).(AutoStoragePropertiesResponseOutput)
}

// The UTC time at which storage keys were last synchronized with the Batch account.
func (o AutoStoragePropertiesResponsePtrOutput) LastKeySync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoStoragePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastKeySync
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the storage account to be used for auto storage account.
func (o AutoStoragePropertiesResponsePtrOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoStoragePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountId
	}).(pulumi.StringPtrOutput)
}

// Contains information about an Azure Batch account.
type BatchAccountType struct {
	// The location of the resource
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The properties associated with the account.
	Properties BatchAccountPropertiesResponse `pulumi:"properties"`
	// The tags of the resource
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource
	Type string `pulumi:"type"`
}

// BatchAccountTypeInput is an input type that accepts BatchAccountTypeArgs and BatchAccountTypeOutput values.
// You can construct a concrete instance of `BatchAccountTypeInput` via:
//
//          BatchAccountTypeArgs{...}
type BatchAccountTypeInput interface {
	pulumi.Input

	ToBatchAccountTypeOutput() BatchAccountTypeOutput
	ToBatchAccountTypeOutputWithContext(context.Context) BatchAccountTypeOutput
}

// Contains information about an Azure Batch account.
type BatchAccountTypeArgs struct {
	// The location of the resource
	Location pulumi.StringInput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringInput `pulumi:"name"`
	// The properties associated with the account.
	Properties BatchAccountPropertiesResponseInput `pulumi:"properties"`
	// The tags of the resource
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the resource
	Type pulumi.StringInput `pulumi:"type"`
}

func (BatchAccountTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchAccountType)(nil)).Elem()
}

func (i BatchAccountTypeArgs) ToBatchAccountTypeOutput() BatchAccountTypeOutput {
	return i.ToBatchAccountTypeOutputWithContext(context.Background())
}

func (i BatchAccountTypeArgs) ToBatchAccountTypeOutputWithContext(ctx context.Context) BatchAccountTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchAccountTypeOutput)
}

// Contains information about an Azure Batch account.
type BatchAccountTypeOutput struct{ *pulumi.OutputState }

func (BatchAccountTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchAccountType)(nil)).Elem()
}

func (o BatchAccountTypeOutput) ToBatchAccountTypeOutput() BatchAccountTypeOutput {
	return o
}

func (o BatchAccountTypeOutput) ToBatchAccountTypeOutputWithContext(ctx context.Context) BatchAccountTypeOutput {
	return o
}

// The location of the resource
func (o BatchAccountTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v BatchAccountType) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o BatchAccountTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BatchAccountType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties associated with the account.
func (o BatchAccountTypeOutput) Properties() BatchAccountPropertiesResponseOutput {
	return o.ApplyT(func(v BatchAccountType) BatchAccountPropertiesResponse { return v.Properties }).(BatchAccountPropertiesResponseOutput)
}

// The tags of the resource
func (o BatchAccountTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v BatchAccountType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource
func (o BatchAccountTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BatchAccountType) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of a Batch account.
type BatchAccountBaseProperties struct {
	// The properties related to auto storage account.
	AutoStorage *AutoStorageBaseProperties `pulumi:"autoStorage"`
	// A reference to the Azure key vault associated with the Batch account.
	KeyVaultReference *KeyVaultReference `pulumi:"keyVaultReference"`
	// The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use Azure Active Directory. The default is BatchService.
	PoolAllocationMode *string `pulumi:"poolAllocationMode"`
}

// BatchAccountBasePropertiesInput is an input type that accepts BatchAccountBasePropertiesArgs and BatchAccountBasePropertiesOutput values.
// You can construct a concrete instance of `BatchAccountBasePropertiesInput` via:
//
//          BatchAccountBasePropertiesArgs{...}
type BatchAccountBasePropertiesInput interface {
	pulumi.Input

	ToBatchAccountBasePropertiesOutput() BatchAccountBasePropertiesOutput
	ToBatchAccountBasePropertiesOutputWithContext(context.Context) BatchAccountBasePropertiesOutput
}

// The properties of a Batch account.
type BatchAccountBasePropertiesArgs struct {
	// The properties related to auto storage account.
	AutoStorage AutoStorageBasePropertiesPtrInput `pulumi:"autoStorage"`
	// A reference to the Azure key vault associated with the Batch account.
	KeyVaultReference KeyVaultReferencePtrInput `pulumi:"keyVaultReference"`
	// The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use Azure Active Directory. The default is BatchService.
	PoolAllocationMode pulumi.StringPtrInput `pulumi:"poolAllocationMode"`
}

func (BatchAccountBasePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchAccountBaseProperties)(nil)).Elem()
}

func (i BatchAccountBasePropertiesArgs) ToBatchAccountBasePropertiesOutput() BatchAccountBasePropertiesOutput {
	return i.ToBatchAccountBasePropertiesOutputWithContext(context.Background())
}

func (i BatchAccountBasePropertiesArgs) ToBatchAccountBasePropertiesOutputWithContext(ctx context.Context) BatchAccountBasePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchAccountBasePropertiesOutput)
}

func (i BatchAccountBasePropertiesArgs) ToBatchAccountBasePropertiesPtrOutput() BatchAccountBasePropertiesPtrOutput {
	return i.ToBatchAccountBasePropertiesPtrOutputWithContext(context.Background())
}

func (i BatchAccountBasePropertiesArgs) ToBatchAccountBasePropertiesPtrOutputWithContext(ctx context.Context) BatchAccountBasePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchAccountBasePropertiesOutput).ToBatchAccountBasePropertiesPtrOutputWithContext(ctx)
}

// BatchAccountBasePropertiesPtrInput is an input type that accepts BatchAccountBasePropertiesArgs, BatchAccountBasePropertiesPtr and BatchAccountBasePropertiesPtrOutput values.
// You can construct a concrete instance of `BatchAccountBasePropertiesPtrInput` via:
//
//          BatchAccountBasePropertiesArgs{...}
//
//  or:
//
//          nil
type BatchAccountBasePropertiesPtrInput interface {
	pulumi.Input

	ToBatchAccountBasePropertiesPtrOutput() BatchAccountBasePropertiesPtrOutput
	ToBatchAccountBasePropertiesPtrOutputWithContext(context.Context) BatchAccountBasePropertiesPtrOutput
}

type batchAccountBasePropertiesPtrType BatchAccountBasePropertiesArgs

func BatchAccountBasePropertiesPtr(v *BatchAccountBasePropertiesArgs) BatchAccountBasePropertiesPtrInput {
	return (*batchAccountBasePropertiesPtrType)(v)
}

func (*batchAccountBasePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchAccountBaseProperties)(nil)).Elem()
}

func (i *batchAccountBasePropertiesPtrType) ToBatchAccountBasePropertiesPtrOutput() BatchAccountBasePropertiesPtrOutput {
	return i.ToBatchAccountBasePropertiesPtrOutputWithContext(context.Background())
}

func (i *batchAccountBasePropertiesPtrType) ToBatchAccountBasePropertiesPtrOutputWithContext(ctx context.Context) BatchAccountBasePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchAccountBasePropertiesPtrOutput)
}

// The properties of a Batch account.
type BatchAccountBasePropertiesOutput struct{ *pulumi.OutputState }

func (BatchAccountBasePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchAccountBaseProperties)(nil)).Elem()
}

func (o BatchAccountBasePropertiesOutput) ToBatchAccountBasePropertiesOutput() BatchAccountBasePropertiesOutput {
	return o
}

func (o BatchAccountBasePropertiesOutput) ToBatchAccountBasePropertiesOutputWithContext(ctx context.Context) BatchAccountBasePropertiesOutput {
	return o
}

func (o BatchAccountBasePropertiesOutput) ToBatchAccountBasePropertiesPtrOutput() BatchAccountBasePropertiesPtrOutput {
	return o.ToBatchAccountBasePropertiesPtrOutputWithContext(context.Background())
}

func (o BatchAccountBasePropertiesOutput) ToBatchAccountBasePropertiesPtrOutputWithContext(ctx context.Context) BatchAccountBasePropertiesPtrOutput {
	return o.ApplyT(func(v BatchAccountBaseProperties) *BatchAccountBaseProperties {
		return &v
	}).(BatchAccountBasePropertiesPtrOutput)
}

// The properties related to auto storage account.
func (o BatchAccountBasePropertiesOutput) AutoStorage() AutoStorageBasePropertiesPtrOutput {
	return o.ApplyT(func(v BatchAccountBaseProperties) *AutoStorageBaseProperties { return v.AutoStorage }).(AutoStorageBasePropertiesPtrOutput)
}

// A reference to the Azure key vault associated with the Batch account.
func (o BatchAccountBasePropertiesOutput) KeyVaultReference() KeyVaultReferencePtrOutput {
	return o.ApplyT(func(v BatchAccountBaseProperties) *KeyVaultReference { return v.KeyVaultReference }).(KeyVaultReferencePtrOutput)
}

// The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use Azure Active Directory. The default is BatchService.
func (o BatchAccountBasePropertiesOutput) PoolAllocationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchAccountBaseProperties) *string { return v.PoolAllocationMode }).(pulumi.StringPtrOutput)
}

type BatchAccountBasePropertiesPtrOutput struct{ *pulumi.OutputState }

func (BatchAccountBasePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchAccountBaseProperties)(nil)).Elem()
}

func (o BatchAccountBasePropertiesPtrOutput) ToBatchAccountBasePropertiesPtrOutput() BatchAccountBasePropertiesPtrOutput {
	return o
}

func (o BatchAccountBasePropertiesPtrOutput) ToBatchAccountBasePropertiesPtrOutputWithContext(ctx context.Context) BatchAccountBasePropertiesPtrOutput {
	return o
}

func (o BatchAccountBasePropertiesPtrOutput) Elem() BatchAccountBasePropertiesOutput {
	return o.ApplyT(func(v *BatchAccountBaseProperties) BatchAccountBaseProperties { return *v }).(BatchAccountBasePropertiesOutput)
}

// The properties related to auto storage account.
func (o BatchAccountBasePropertiesPtrOutput) AutoStorage() AutoStorageBasePropertiesPtrOutput {
	return o.ApplyT(func(v *BatchAccountBaseProperties) *AutoStorageBaseProperties {
		if v == nil {
			return nil
		}
		return v.AutoStorage
	}).(AutoStorageBasePropertiesPtrOutput)
}

// A reference to the Azure key vault associated with the Batch account.
func (o BatchAccountBasePropertiesPtrOutput) KeyVaultReference() KeyVaultReferencePtrOutput {
	return o.ApplyT(func(v *BatchAccountBaseProperties) *KeyVaultReference {
		if v == nil {
			return nil
		}
		return v.KeyVaultReference
	}).(KeyVaultReferencePtrOutput)
}

// The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use Azure Active Directory. The default is BatchService.
func (o BatchAccountBasePropertiesPtrOutput) PoolAllocationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchAccountBaseProperties) *string {
		if v == nil {
			return nil
		}
		return v.PoolAllocationMode
	}).(pulumi.StringPtrOutput)
}

// Account specific properties.
type BatchAccountPropertiesResponse struct {
	// The endpoint used by this account to interact with the Batch services.
	AccountEndpoint              string `pulumi:"accountEndpoint"`
	ActiveJobAndJobScheduleQuota int    `pulumi:"activeJobAndJobScheduleQuota"`
	// Contains information about the auto storage account associated with a Batch account.
	AutoStorage AutoStoragePropertiesResponse `pulumi:"autoStorage"`
	CoreQuota   int                           `pulumi:"coreQuota"`
	// Identifies the Azure key vault associated with a Batch account.
	KeyVaultReference KeyVaultReferenceResponse `pulumi:"keyVaultReference"`
	// The allocation mode for creating pools in the Batch account.
	PoolAllocationMode string `pulumi:"poolAllocationMode"`
	PoolQuota          int    `pulumi:"poolQuota"`
	// The provisioned state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
}

// BatchAccountPropertiesResponseInput is an input type that accepts BatchAccountPropertiesResponseArgs and BatchAccountPropertiesResponseOutput values.
// You can construct a concrete instance of `BatchAccountPropertiesResponseInput` via:
//
//          BatchAccountPropertiesResponseArgs{...}
type BatchAccountPropertiesResponseInput interface {
	pulumi.Input

	ToBatchAccountPropertiesResponseOutput() BatchAccountPropertiesResponseOutput
	ToBatchAccountPropertiesResponseOutputWithContext(context.Context) BatchAccountPropertiesResponseOutput
}

// Account specific properties.
type BatchAccountPropertiesResponseArgs struct {
	// The endpoint used by this account to interact with the Batch services.
	AccountEndpoint              pulumi.StringInput `pulumi:"accountEndpoint"`
	ActiveJobAndJobScheduleQuota pulumi.IntInput    `pulumi:"activeJobAndJobScheduleQuota"`
	// Contains information about the auto storage account associated with a Batch account.
	AutoStorage AutoStoragePropertiesResponseInput `pulumi:"autoStorage"`
	CoreQuota   pulumi.IntInput                    `pulumi:"coreQuota"`
	// Identifies the Azure key vault associated with a Batch account.
	KeyVaultReference KeyVaultReferenceResponseInput `pulumi:"keyVaultReference"`
	// The allocation mode for creating pools in the Batch account.
	PoolAllocationMode pulumi.StringInput `pulumi:"poolAllocationMode"`
	PoolQuota          pulumi.IntInput    `pulumi:"poolQuota"`
	// The provisioned state of the resource
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (BatchAccountPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchAccountPropertiesResponse)(nil)).Elem()
}

func (i BatchAccountPropertiesResponseArgs) ToBatchAccountPropertiesResponseOutput() BatchAccountPropertiesResponseOutput {
	return i.ToBatchAccountPropertiesResponseOutputWithContext(context.Background())
}

func (i BatchAccountPropertiesResponseArgs) ToBatchAccountPropertiesResponseOutputWithContext(ctx context.Context) BatchAccountPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchAccountPropertiesResponseOutput)
}

func (i BatchAccountPropertiesResponseArgs) ToBatchAccountPropertiesResponsePtrOutput() BatchAccountPropertiesResponsePtrOutput {
	return i.ToBatchAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i BatchAccountPropertiesResponseArgs) ToBatchAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) BatchAccountPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchAccountPropertiesResponseOutput).ToBatchAccountPropertiesResponsePtrOutputWithContext(ctx)
}

// BatchAccountPropertiesResponsePtrInput is an input type that accepts BatchAccountPropertiesResponseArgs, BatchAccountPropertiesResponsePtr and BatchAccountPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `BatchAccountPropertiesResponsePtrInput` via:
//
//          BatchAccountPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type BatchAccountPropertiesResponsePtrInput interface {
	pulumi.Input

	ToBatchAccountPropertiesResponsePtrOutput() BatchAccountPropertiesResponsePtrOutput
	ToBatchAccountPropertiesResponsePtrOutputWithContext(context.Context) BatchAccountPropertiesResponsePtrOutput
}

type batchAccountPropertiesResponsePtrType BatchAccountPropertiesResponseArgs

func BatchAccountPropertiesResponsePtr(v *BatchAccountPropertiesResponseArgs) BatchAccountPropertiesResponsePtrInput {
	return (*batchAccountPropertiesResponsePtrType)(v)
}

func (*batchAccountPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchAccountPropertiesResponse)(nil)).Elem()
}

func (i *batchAccountPropertiesResponsePtrType) ToBatchAccountPropertiesResponsePtrOutput() BatchAccountPropertiesResponsePtrOutput {
	return i.ToBatchAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *batchAccountPropertiesResponsePtrType) ToBatchAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) BatchAccountPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchAccountPropertiesResponsePtrOutput)
}

// Account specific properties.
type BatchAccountPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BatchAccountPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchAccountPropertiesResponse)(nil)).Elem()
}

func (o BatchAccountPropertiesResponseOutput) ToBatchAccountPropertiesResponseOutput() BatchAccountPropertiesResponseOutput {
	return o
}

func (o BatchAccountPropertiesResponseOutput) ToBatchAccountPropertiesResponseOutputWithContext(ctx context.Context) BatchAccountPropertiesResponseOutput {
	return o
}

func (o BatchAccountPropertiesResponseOutput) ToBatchAccountPropertiesResponsePtrOutput() BatchAccountPropertiesResponsePtrOutput {
	return o.ToBatchAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o BatchAccountPropertiesResponseOutput) ToBatchAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) BatchAccountPropertiesResponsePtrOutput {
	return o.ApplyT(func(v BatchAccountPropertiesResponse) *BatchAccountPropertiesResponse {
		return &v
	}).(BatchAccountPropertiesResponsePtrOutput)
}

// The endpoint used by this account to interact with the Batch services.
func (o BatchAccountPropertiesResponseOutput) AccountEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v BatchAccountPropertiesResponse) string { return v.AccountEndpoint }).(pulumi.StringOutput)
}

func (o BatchAccountPropertiesResponseOutput) ActiveJobAndJobScheduleQuota() pulumi.IntOutput {
	return o.ApplyT(func(v BatchAccountPropertiesResponse) int { return v.ActiveJobAndJobScheduleQuota }).(pulumi.IntOutput)
}

// Contains information about the auto storage account associated with a Batch account.
func (o BatchAccountPropertiesResponseOutput) AutoStorage() AutoStoragePropertiesResponseOutput {
	return o.ApplyT(func(v BatchAccountPropertiesResponse) AutoStoragePropertiesResponse { return v.AutoStorage }).(AutoStoragePropertiesResponseOutput)
}

func (o BatchAccountPropertiesResponseOutput) CoreQuota() pulumi.IntOutput {
	return o.ApplyT(func(v BatchAccountPropertiesResponse) int { return v.CoreQuota }).(pulumi.IntOutput)
}

// Identifies the Azure key vault associated with a Batch account.
func (o BatchAccountPropertiesResponseOutput) KeyVaultReference() KeyVaultReferenceResponseOutput {
	return o.ApplyT(func(v BatchAccountPropertiesResponse) KeyVaultReferenceResponse { return v.KeyVaultReference }).(KeyVaultReferenceResponseOutput)
}

// The allocation mode for creating pools in the Batch account.
func (o BatchAccountPropertiesResponseOutput) PoolAllocationMode() pulumi.StringOutput {
	return o.ApplyT(func(v BatchAccountPropertiesResponse) string { return v.PoolAllocationMode }).(pulumi.StringOutput)
}

func (o BatchAccountPropertiesResponseOutput) PoolQuota() pulumi.IntOutput {
	return o.ApplyT(func(v BatchAccountPropertiesResponse) int { return v.PoolQuota }).(pulumi.IntOutput)
}

// The provisioned state of the resource
func (o BatchAccountPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v BatchAccountPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type BatchAccountPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (BatchAccountPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchAccountPropertiesResponse)(nil)).Elem()
}

func (o BatchAccountPropertiesResponsePtrOutput) ToBatchAccountPropertiesResponsePtrOutput() BatchAccountPropertiesResponsePtrOutput {
	return o
}

func (o BatchAccountPropertiesResponsePtrOutput) ToBatchAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) BatchAccountPropertiesResponsePtrOutput {
	return o
}

func (o BatchAccountPropertiesResponsePtrOutput) Elem() BatchAccountPropertiesResponseOutput {
	return o.ApplyT(func(v *BatchAccountPropertiesResponse) BatchAccountPropertiesResponse { return *v }).(BatchAccountPropertiesResponseOutput)
}

// The endpoint used by this account to interact with the Batch services.
func (o BatchAccountPropertiesResponsePtrOutput) AccountEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchAccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AccountEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o BatchAccountPropertiesResponsePtrOutput) ActiveJobAndJobScheduleQuota() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BatchAccountPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ActiveJobAndJobScheduleQuota
	}).(pulumi.IntPtrOutput)
}

// Contains information about the auto storage account associated with a Batch account.
func (o BatchAccountPropertiesResponsePtrOutput) AutoStorage() AutoStoragePropertiesResponsePtrOutput {
	return o.ApplyT(func(v *BatchAccountPropertiesResponse) *AutoStoragePropertiesResponse {
		if v == nil {
			return nil
		}
		return &v.AutoStorage
	}).(AutoStoragePropertiesResponsePtrOutput)
}

func (o BatchAccountPropertiesResponsePtrOutput) CoreQuota() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BatchAccountPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.CoreQuota
	}).(pulumi.IntPtrOutput)
}

// Identifies the Azure key vault associated with a Batch account.
func (o BatchAccountPropertiesResponsePtrOutput) KeyVaultReference() KeyVaultReferenceResponsePtrOutput {
	return o.ApplyT(func(v *BatchAccountPropertiesResponse) *KeyVaultReferenceResponse {
		if v == nil {
			return nil
		}
		return &v.KeyVaultReference
	}).(KeyVaultReferenceResponsePtrOutput)
}

// The allocation mode for creating pools in the Batch account.
func (o BatchAccountPropertiesResponsePtrOutput) PoolAllocationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchAccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PoolAllocationMode
	}).(pulumi.StringPtrOutput)
}

func (o BatchAccountPropertiesResponsePtrOutput) PoolQuota() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BatchAccountPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.PoolQuota
	}).(pulumi.IntPtrOutput)
}

// The provisioned state of the resource
func (o BatchAccountPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchAccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Identifies the Azure key vault associated with a Batch account.
type KeyVaultReference struct {
	// The resource ID of the Azure key vault associated with the Batch account.
	Id string `pulumi:"id"`
	// The Url of the Azure key vault associated with the Batch account.
	Url string `pulumi:"url"`
}

// KeyVaultReferenceInput is an input type that accepts KeyVaultReferenceArgs and KeyVaultReferenceOutput values.
// You can construct a concrete instance of `KeyVaultReferenceInput` via:
//
//          KeyVaultReferenceArgs{...}
type KeyVaultReferenceInput interface {
	pulumi.Input

	ToKeyVaultReferenceOutput() KeyVaultReferenceOutput
	ToKeyVaultReferenceOutputWithContext(context.Context) KeyVaultReferenceOutput
}

// Identifies the Azure key vault associated with a Batch account.
type KeyVaultReferenceArgs struct {
	// The resource ID of the Azure key vault associated with the Batch account.
	Id pulumi.StringInput `pulumi:"id"`
	// The Url of the Azure key vault associated with the Batch account.
	Url pulumi.StringInput `pulumi:"url"`
}

func (KeyVaultReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultReference)(nil)).Elem()
}

func (i KeyVaultReferenceArgs) ToKeyVaultReferenceOutput() KeyVaultReferenceOutput {
	return i.ToKeyVaultReferenceOutputWithContext(context.Background())
}

func (i KeyVaultReferenceArgs) ToKeyVaultReferenceOutputWithContext(ctx context.Context) KeyVaultReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultReferenceOutput)
}

func (i KeyVaultReferenceArgs) ToKeyVaultReferencePtrOutput() KeyVaultReferencePtrOutput {
	return i.ToKeyVaultReferencePtrOutputWithContext(context.Background())
}

func (i KeyVaultReferenceArgs) ToKeyVaultReferencePtrOutputWithContext(ctx context.Context) KeyVaultReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultReferenceOutput).ToKeyVaultReferencePtrOutputWithContext(ctx)
}

// KeyVaultReferencePtrInput is an input type that accepts KeyVaultReferenceArgs, KeyVaultReferencePtr and KeyVaultReferencePtrOutput values.
// You can construct a concrete instance of `KeyVaultReferencePtrInput` via:
//
//          KeyVaultReferenceArgs{...}
//
//  or:
//
//          nil
type KeyVaultReferencePtrInput interface {
	pulumi.Input

	ToKeyVaultReferencePtrOutput() KeyVaultReferencePtrOutput
	ToKeyVaultReferencePtrOutputWithContext(context.Context) KeyVaultReferencePtrOutput
}

type keyVaultReferencePtrType KeyVaultReferenceArgs

func KeyVaultReferencePtr(v *KeyVaultReferenceArgs) KeyVaultReferencePtrInput {
	return (*keyVaultReferencePtrType)(v)
}

func (*keyVaultReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultReference)(nil)).Elem()
}

func (i *keyVaultReferencePtrType) ToKeyVaultReferencePtrOutput() KeyVaultReferencePtrOutput {
	return i.ToKeyVaultReferencePtrOutputWithContext(context.Background())
}

func (i *keyVaultReferencePtrType) ToKeyVaultReferencePtrOutputWithContext(ctx context.Context) KeyVaultReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultReferencePtrOutput)
}

// Identifies the Azure key vault associated with a Batch account.
type KeyVaultReferenceOutput struct{ *pulumi.OutputState }

func (KeyVaultReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultReference)(nil)).Elem()
}

func (o KeyVaultReferenceOutput) ToKeyVaultReferenceOutput() KeyVaultReferenceOutput {
	return o
}

func (o KeyVaultReferenceOutput) ToKeyVaultReferenceOutputWithContext(ctx context.Context) KeyVaultReferenceOutput {
	return o
}

func (o KeyVaultReferenceOutput) ToKeyVaultReferencePtrOutput() KeyVaultReferencePtrOutput {
	return o.ToKeyVaultReferencePtrOutputWithContext(context.Background())
}

func (o KeyVaultReferenceOutput) ToKeyVaultReferencePtrOutputWithContext(ctx context.Context) KeyVaultReferencePtrOutput {
	return o.ApplyT(func(v KeyVaultReference) *KeyVaultReference {
		return &v
	}).(KeyVaultReferencePtrOutput)
}

// The resource ID of the Azure key vault associated with the Batch account.
func (o KeyVaultReferenceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultReference) string { return v.Id }).(pulumi.StringOutput)
}

// The Url of the Azure key vault associated with the Batch account.
func (o KeyVaultReferenceOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultReference) string { return v.Url }).(pulumi.StringOutput)
}

type KeyVaultReferencePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultReference)(nil)).Elem()
}

func (o KeyVaultReferencePtrOutput) ToKeyVaultReferencePtrOutput() KeyVaultReferencePtrOutput {
	return o
}

func (o KeyVaultReferencePtrOutput) ToKeyVaultReferencePtrOutputWithContext(ctx context.Context) KeyVaultReferencePtrOutput {
	return o
}

func (o KeyVaultReferencePtrOutput) Elem() KeyVaultReferenceOutput {
	return o.ApplyT(func(v *KeyVaultReference) KeyVaultReference { return *v }).(KeyVaultReferenceOutput)
}

// The resource ID of the Azure key vault associated with the Batch account.
func (o KeyVaultReferencePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultReference) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The Url of the Azure key vault associated with the Batch account.
func (o KeyVaultReferencePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultReference) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// Identifies the Azure key vault associated with a Batch account.
type KeyVaultReferenceResponse struct {
	// The resource ID of the Azure key vault associated with the Batch account.
	Id string `pulumi:"id"`
	// The Url of the Azure key vault associated with the Batch account.
	Url string `pulumi:"url"`
}

// KeyVaultReferenceResponseInput is an input type that accepts KeyVaultReferenceResponseArgs and KeyVaultReferenceResponseOutput values.
// You can construct a concrete instance of `KeyVaultReferenceResponseInput` via:
//
//          KeyVaultReferenceResponseArgs{...}
type KeyVaultReferenceResponseInput interface {
	pulumi.Input

	ToKeyVaultReferenceResponseOutput() KeyVaultReferenceResponseOutput
	ToKeyVaultReferenceResponseOutputWithContext(context.Context) KeyVaultReferenceResponseOutput
}

// Identifies the Azure key vault associated with a Batch account.
type KeyVaultReferenceResponseArgs struct {
	// The resource ID of the Azure key vault associated with the Batch account.
	Id pulumi.StringInput `pulumi:"id"`
	// The Url of the Azure key vault associated with the Batch account.
	Url pulumi.StringInput `pulumi:"url"`
}

func (KeyVaultReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultReferenceResponse)(nil)).Elem()
}

func (i KeyVaultReferenceResponseArgs) ToKeyVaultReferenceResponseOutput() KeyVaultReferenceResponseOutput {
	return i.ToKeyVaultReferenceResponseOutputWithContext(context.Background())
}

func (i KeyVaultReferenceResponseArgs) ToKeyVaultReferenceResponseOutputWithContext(ctx context.Context) KeyVaultReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultReferenceResponseOutput)
}

func (i KeyVaultReferenceResponseArgs) ToKeyVaultReferenceResponsePtrOutput() KeyVaultReferenceResponsePtrOutput {
	return i.ToKeyVaultReferenceResponsePtrOutputWithContext(context.Background())
}

func (i KeyVaultReferenceResponseArgs) ToKeyVaultReferenceResponsePtrOutputWithContext(ctx context.Context) KeyVaultReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultReferenceResponseOutput).ToKeyVaultReferenceResponsePtrOutputWithContext(ctx)
}

// KeyVaultReferenceResponsePtrInput is an input type that accepts KeyVaultReferenceResponseArgs, KeyVaultReferenceResponsePtr and KeyVaultReferenceResponsePtrOutput values.
// You can construct a concrete instance of `KeyVaultReferenceResponsePtrInput` via:
//
//          KeyVaultReferenceResponseArgs{...}
//
//  or:
//
//          nil
type KeyVaultReferenceResponsePtrInput interface {
	pulumi.Input

	ToKeyVaultReferenceResponsePtrOutput() KeyVaultReferenceResponsePtrOutput
	ToKeyVaultReferenceResponsePtrOutputWithContext(context.Context) KeyVaultReferenceResponsePtrOutput
}

type keyVaultReferenceResponsePtrType KeyVaultReferenceResponseArgs

func KeyVaultReferenceResponsePtr(v *KeyVaultReferenceResponseArgs) KeyVaultReferenceResponsePtrInput {
	return (*keyVaultReferenceResponsePtrType)(v)
}

func (*keyVaultReferenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultReferenceResponse)(nil)).Elem()
}

func (i *keyVaultReferenceResponsePtrType) ToKeyVaultReferenceResponsePtrOutput() KeyVaultReferenceResponsePtrOutput {
	return i.ToKeyVaultReferenceResponsePtrOutputWithContext(context.Background())
}

func (i *keyVaultReferenceResponsePtrType) ToKeyVaultReferenceResponsePtrOutputWithContext(ctx context.Context) KeyVaultReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultReferenceResponsePtrOutput)
}

// Identifies the Azure key vault associated with a Batch account.
type KeyVaultReferenceResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultReferenceResponse)(nil)).Elem()
}

func (o KeyVaultReferenceResponseOutput) ToKeyVaultReferenceResponseOutput() KeyVaultReferenceResponseOutput {
	return o
}

func (o KeyVaultReferenceResponseOutput) ToKeyVaultReferenceResponseOutputWithContext(ctx context.Context) KeyVaultReferenceResponseOutput {
	return o
}

func (o KeyVaultReferenceResponseOutput) ToKeyVaultReferenceResponsePtrOutput() KeyVaultReferenceResponsePtrOutput {
	return o.ToKeyVaultReferenceResponsePtrOutputWithContext(context.Background())
}

func (o KeyVaultReferenceResponseOutput) ToKeyVaultReferenceResponsePtrOutputWithContext(ctx context.Context) KeyVaultReferenceResponsePtrOutput {
	return o.ApplyT(func(v KeyVaultReferenceResponse) *KeyVaultReferenceResponse {
		return &v
	}).(KeyVaultReferenceResponsePtrOutput)
}

// The resource ID of the Azure key vault associated with the Batch account.
func (o KeyVaultReferenceResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultReferenceResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The Url of the Azure key vault associated with the Batch account.
func (o KeyVaultReferenceResponseOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultReferenceResponse) string { return v.Url }).(pulumi.StringOutput)
}

type KeyVaultReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultReferenceResponse)(nil)).Elem()
}

func (o KeyVaultReferenceResponsePtrOutput) ToKeyVaultReferenceResponsePtrOutput() KeyVaultReferenceResponsePtrOutput {
	return o
}

func (o KeyVaultReferenceResponsePtrOutput) ToKeyVaultReferenceResponsePtrOutputWithContext(ctx context.Context) KeyVaultReferenceResponsePtrOutput {
	return o
}

func (o KeyVaultReferenceResponsePtrOutput) Elem() KeyVaultReferenceResponseOutput {
	return o.ApplyT(func(v *KeyVaultReferenceResponse) KeyVaultReferenceResponse { return *v }).(KeyVaultReferenceResponseOutput)
}

// The resource ID of the Azure key vault associated with the Batch account.
func (o KeyVaultReferenceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The Url of the Azure key vault associated with the Batch account.
func (o KeyVaultReferenceResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationTypeOutput{})
	pulumi.RegisterOutputType(ApplicationPackageTypeOutput{})
	pulumi.RegisterOutputType(ApplicationPackageResponseOutput{})
	pulumi.RegisterOutputType(ApplicationPackageResponseArrayOutput{})
	pulumi.RegisterOutputType(AutoStorageBasePropertiesOutput{})
	pulumi.RegisterOutputType(AutoStorageBasePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AutoStoragePropertiesResponseOutput{})
	pulumi.RegisterOutputType(AutoStoragePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(BatchAccountTypeOutput{})
	pulumi.RegisterOutputType(BatchAccountBasePropertiesOutput{})
	pulumi.RegisterOutputType(BatchAccountBasePropertiesPtrOutput{})
	pulumi.RegisterOutputType(BatchAccountPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BatchAccountPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultReferenceOutput{})
	pulumi.RegisterOutputType(KeyVaultReferencePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultReferenceResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultReferenceResponsePtrOutput{})
}
