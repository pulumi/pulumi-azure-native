// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20151201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Contains information about an application in a Batch account.
type ApplicationType struct {
	// A value indicating whether packages within the application may be overwritten using the same version string.
	AllowUpdates *bool `pulumi:"allowUpdates"`
	// The package to use if a client requests the application but does not specify a version.
	DefaultVersion *string `pulumi:"defaultVersion"`
	// The display name for the application.
	DisplayName *string `pulumi:"displayName"`
	// The list of packages under this application.
	Packages []ApplicationPackageResponse `pulumi:"packages"`
}

// ApplicationTypeInput is an input type that accepts ApplicationTypeArgs and ApplicationTypeOutput values.
// You can construct a concrete instance of `ApplicationTypeInput` via:
//
//          ApplicationTypeArgs{...}
type ApplicationTypeInput interface {
	pulumi.Input

	ToApplicationTypeOutput() ApplicationTypeOutput
	ToApplicationTypeOutputWithContext(context.Context) ApplicationTypeOutput
}

// Contains information about an application in a Batch account.
type ApplicationTypeArgs struct {
	// A value indicating whether packages within the application may be overwritten using the same version string.
	AllowUpdates pulumi.BoolPtrInput `pulumi:"allowUpdates"`
	// The package to use if a client requests the application but does not specify a version.
	DefaultVersion pulumi.StringPtrInput `pulumi:"defaultVersion"`
	// The display name for the application.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The list of packages under this application.
	Packages ApplicationPackageResponseArrayInput `pulumi:"packages"`
}

func (ApplicationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationType)(nil)).Elem()
}

func (i ApplicationTypeArgs) ToApplicationTypeOutput() ApplicationTypeOutput {
	return i.ToApplicationTypeOutputWithContext(context.Background())
}

func (i ApplicationTypeArgs) ToApplicationTypeOutputWithContext(ctx context.Context) ApplicationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationTypeOutput)
}

// Contains information about an application in a Batch account.
type ApplicationTypeOutput struct{ *pulumi.OutputState }

func (ApplicationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationType)(nil)).Elem()
}

func (o ApplicationTypeOutput) ToApplicationTypeOutput() ApplicationTypeOutput {
	return o
}

func (o ApplicationTypeOutput) ToApplicationTypeOutputWithContext(ctx context.Context) ApplicationTypeOutput {
	return o
}

// A value indicating whether packages within the application may be overwritten using the same version string.
func (o ApplicationTypeOutput) AllowUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationType) *bool { return v.AllowUpdates }).(pulumi.BoolPtrOutput)
}

// The package to use if a client requests the application but does not specify a version.
func (o ApplicationTypeOutput) DefaultVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationType) *string { return v.DefaultVersion }).(pulumi.StringPtrOutput)
}

// The display name for the application.
func (o ApplicationTypeOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationType) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The list of packages under this application.
func (o ApplicationTypeOutput) Packages() ApplicationPackageResponseArrayOutput {
	return o.ApplyT(func(v ApplicationType) []ApplicationPackageResponse { return v.Packages }).(ApplicationPackageResponseArrayOutput)
}

// An application package which represents a particular version of an application.
type ApplicationPackageType struct {
	// The format of the application package, if the package is active.
	Format *string `pulumi:"format"`
	// The time at which the package was last activated, if the package is active.
	LastActivationTime *string `pulumi:"lastActivationTime"`
	// The current state of the application package.
	State *string `pulumi:"state"`
	// The storage URL at which the application package is stored.
	StorageUrl *string `pulumi:"storageUrl"`
	// The UTC time at which the storage URL will expire.
	StorageUrlExpiry *string `pulumi:"storageUrlExpiry"`
	// The version of the application package.
	Version *string `pulumi:"version"`
}

// ApplicationPackageTypeInput is an input type that accepts ApplicationPackageTypeArgs and ApplicationPackageTypeOutput values.
// You can construct a concrete instance of `ApplicationPackageTypeInput` via:
//
//          ApplicationPackageTypeArgs{...}
type ApplicationPackageTypeInput interface {
	pulumi.Input

	ToApplicationPackageTypeOutput() ApplicationPackageTypeOutput
	ToApplicationPackageTypeOutputWithContext(context.Context) ApplicationPackageTypeOutput
}

// An application package which represents a particular version of an application.
type ApplicationPackageTypeArgs struct {
	// The format of the application package, if the package is active.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// The time at which the package was last activated, if the package is active.
	LastActivationTime pulumi.StringPtrInput `pulumi:"lastActivationTime"`
	// The current state of the application package.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The storage URL at which the application package is stored.
	StorageUrl pulumi.StringPtrInput `pulumi:"storageUrl"`
	// The UTC time at which the storage URL will expire.
	StorageUrlExpiry pulumi.StringPtrInput `pulumi:"storageUrlExpiry"`
	// The version of the application package.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ApplicationPackageTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationPackageType)(nil)).Elem()
}

func (i ApplicationPackageTypeArgs) ToApplicationPackageTypeOutput() ApplicationPackageTypeOutput {
	return i.ToApplicationPackageTypeOutputWithContext(context.Background())
}

func (i ApplicationPackageTypeArgs) ToApplicationPackageTypeOutputWithContext(ctx context.Context) ApplicationPackageTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPackageTypeOutput)
}

// An application package which represents a particular version of an application.
type ApplicationPackageTypeOutput struct{ *pulumi.OutputState }

func (ApplicationPackageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationPackageType)(nil)).Elem()
}

func (o ApplicationPackageTypeOutput) ToApplicationPackageTypeOutput() ApplicationPackageTypeOutput {
	return o
}

func (o ApplicationPackageTypeOutput) ToApplicationPackageTypeOutputWithContext(ctx context.Context) ApplicationPackageTypeOutput {
	return o
}

// The format of the application package, if the package is active.
func (o ApplicationPackageTypeOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationPackageType) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// The time at which the package was last activated, if the package is active.
func (o ApplicationPackageTypeOutput) LastActivationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationPackageType) *string { return v.LastActivationTime }).(pulumi.StringPtrOutput)
}

// The current state of the application package.
func (o ApplicationPackageTypeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationPackageType) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The storage URL at which the application package is stored.
func (o ApplicationPackageTypeOutput) StorageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationPackageType) *string { return v.StorageUrl }).(pulumi.StringPtrOutput)
}

// The UTC time at which the storage URL will expire.
func (o ApplicationPackageTypeOutput) StorageUrlExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationPackageType) *string { return v.StorageUrlExpiry }).(pulumi.StringPtrOutput)
}

// The version of the application package.
func (o ApplicationPackageTypeOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationPackageType) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// An application package which represents a particular version of an application.
type ApplicationPackageResponse struct {
	// The format of the application package, if the package is active.
	Format *string `pulumi:"format"`
	// The ID of the application.
	Id *string `pulumi:"id"`
	// The time at which the package was last activated, if the package is active.
	LastActivationTime *string `pulumi:"lastActivationTime"`
	// The current state of the application package.
	State *string `pulumi:"state"`
	// The storage URL at which the application package is stored.
	StorageUrl *string `pulumi:"storageUrl"`
	// The UTC time at which the storage URL will expire.
	StorageUrlExpiry *string `pulumi:"storageUrlExpiry"`
	// The version of the application package.
	Version *string `pulumi:"version"`
}

// ApplicationPackageResponseInput is an input type that accepts ApplicationPackageResponseArgs and ApplicationPackageResponseOutput values.
// You can construct a concrete instance of `ApplicationPackageResponseInput` via:
//
//          ApplicationPackageResponseArgs{...}
type ApplicationPackageResponseInput interface {
	pulumi.Input

	ToApplicationPackageResponseOutput() ApplicationPackageResponseOutput
	ToApplicationPackageResponseOutputWithContext(context.Context) ApplicationPackageResponseOutput
}

// An application package which represents a particular version of an application.
type ApplicationPackageResponseArgs struct {
	// The format of the application package, if the package is active.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// The ID of the application.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The time at which the package was last activated, if the package is active.
	LastActivationTime pulumi.StringPtrInput `pulumi:"lastActivationTime"`
	// The current state of the application package.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The storage URL at which the application package is stored.
	StorageUrl pulumi.StringPtrInput `pulumi:"storageUrl"`
	// The UTC time at which the storage URL will expire.
	StorageUrlExpiry pulumi.StringPtrInput `pulumi:"storageUrlExpiry"`
	// The version of the application package.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ApplicationPackageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationPackageResponse)(nil)).Elem()
}

func (i ApplicationPackageResponseArgs) ToApplicationPackageResponseOutput() ApplicationPackageResponseOutput {
	return i.ToApplicationPackageResponseOutputWithContext(context.Background())
}

func (i ApplicationPackageResponseArgs) ToApplicationPackageResponseOutputWithContext(ctx context.Context) ApplicationPackageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPackageResponseOutput)
}

// ApplicationPackageResponseArrayInput is an input type that accepts ApplicationPackageResponseArray and ApplicationPackageResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationPackageResponseArrayInput` via:
//
//          ApplicationPackageResponseArray{ ApplicationPackageResponseArgs{...} }
type ApplicationPackageResponseArrayInput interface {
	pulumi.Input

	ToApplicationPackageResponseArrayOutput() ApplicationPackageResponseArrayOutput
	ToApplicationPackageResponseArrayOutputWithContext(context.Context) ApplicationPackageResponseArrayOutput
}

type ApplicationPackageResponseArray []ApplicationPackageResponseInput

func (ApplicationPackageResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationPackageResponse)(nil)).Elem()
}

func (i ApplicationPackageResponseArray) ToApplicationPackageResponseArrayOutput() ApplicationPackageResponseArrayOutput {
	return i.ToApplicationPackageResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationPackageResponseArray) ToApplicationPackageResponseArrayOutputWithContext(ctx context.Context) ApplicationPackageResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPackageResponseArrayOutput)
}

// An application package which represents a particular version of an application.
type ApplicationPackageResponseOutput struct{ *pulumi.OutputState }

func (ApplicationPackageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationPackageResponse)(nil)).Elem()
}

func (o ApplicationPackageResponseOutput) ToApplicationPackageResponseOutput() ApplicationPackageResponseOutput {
	return o
}

func (o ApplicationPackageResponseOutput) ToApplicationPackageResponseOutputWithContext(ctx context.Context) ApplicationPackageResponseOutput {
	return o
}

// The format of the application package, if the package is active.
func (o ApplicationPackageResponseOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationPackageResponse) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// The ID of the application.
func (o ApplicationPackageResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationPackageResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The time at which the package was last activated, if the package is active.
func (o ApplicationPackageResponseOutput) LastActivationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationPackageResponse) *string { return v.LastActivationTime }).(pulumi.StringPtrOutput)
}

// The current state of the application package.
func (o ApplicationPackageResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationPackageResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The storage URL at which the application package is stored.
func (o ApplicationPackageResponseOutput) StorageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationPackageResponse) *string { return v.StorageUrl }).(pulumi.StringPtrOutput)
}

// The UTC time at which the storage URL will expire.
func (o ApplicationPackageResponseOutput) StorageUrlExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationPackageResponse) *string { return v.StorageUrlExpiry }).(pulumi.StringPtrOutput)
}

// The version of the application package.
func (o ApplicationPackageResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationPackageResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ApplicationPackageResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationPackageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationPackageResponse)(nil)).Elem()
}

func (o ApplicationPackageResponseArrayOutput) ToApplicationPackageResponseArrayOutput() ApplicationPackageResponseArrayOutput {
	return o
}

func (o ApplicationPackageResponseArrayOutput) ToApplicationPackageResponseArrayOutputWithContext(ctx context.Context) ApplicationPackageResponseArrayOutput {
	return o
}

func (o ApplicationPackageResponseArrayOutput) Index(i pulumi.IntInput) ApplicationPackageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationPackageResponse {
		return vs[0].([]ApplicationPackageResponse)[vs[1].(int)]
	}).(ApplicationPackageResponseOutput)
}

// The properties related to auto storage account.
type AutoStorageBaseProperties struct {
	// The resource ID of the storage account to be used for auto storage account.
	StorageAccountId string `pulumi:"storageAccountId"`
}

// AutoStorageBasePropertiesInput is an input type that accepts AutoStorageBasePropertiesArgs and AutoStorageBasePropertiesOutput values.
// You can construct a concrete instance of `AutoStorageBasePropertiesInput` via:
//
//          AutoStorageBasePropertiesArgs{...}
type AutoStorageBasePropertiesInput interface {
	pulumi.Input

	ToAutoStorageBasePropertiesOutput() AutoStorageBasePropertiesOutput
	ToAutoStorageBasePropertiesOutputWithContext(context.Context) AutoStorageBasePropertiesOutput
}

// The properties related to auto storage account.
type AutoStorageBasePropertiesArgs struct {
	// The resource ID of the storage account to be used for auto storage account.
	StorageAccountId pulumi.StringInput `pulumi:"storageAccountId"`
}

func (AutoStorageBasePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoStorageBaseProperties)(nil)).Elem()
}

func (i AutoStorageBasePropertiesArgs) ToAutoStorageBasePropertiesOutput() AutoStorageBasePropertiesOutput {
	return i.ToAutoStorageBasePropertiesOutputWithContext(context.Background())
}

func (i AutoStorageBasePropertiesArgs) ToAutoStorageBasePropertiesOutputWithContext(ctx context.Context) AutoStorageBasePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoStorageBasePropertiesOutput)
}

func (i AutoStorageBasePropertiesArgs) ToAutoStorageBasePropertiesPtrOutput() AutoStorageBasePropertiesPtrOutput {
	return i.ToAutoStorageBasePropertiesPtrOutputWithContext(context.Background())
}

func (i AutoStorageBasePropertiesArgs) ToAutoStorageBasePropertiesPtrOutputWithContext(ctx context.Context) AutoStorageBasePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoStorageBasePropertiesOutput).ToAutoStorageBasePropertiesPtrOutputWithContext(ctx)
}

// AutoStorageBasePropertiesPtrInput is an input type that accepts AutoStorageBasePropertiesArgs, AutoStorageBasePropertiesPtr and AutoStorageBasePropertiesPtrOutput values.
// You can construct a concrete instance of `AutoStorageBasePropertiesPtrInput` via:
//
//          AutoStorageBasePropertiesArgs{...}
//
//  or:
//
//          nil
type AutoStorageBasePropertiesPtrInput interface {
	pulumi.Input

	ToAutoStorageBasePropertiesPtrOutput() AutoStorageBasePropertiesPtrOutput
	ToAutoStorageBasePropertiesPtrOutputWithContext(context.Context) AutoStorageBasePropertiesPtrOutput
}

type autoStorageBasePropertiesPtrType AutoStorageBasePropertiesArgs

func AutoStorageBasePropertiesPtr(v *AutoStorageBasePropertiesArgs) AutoStorageBasePropertiesPtrInput {
	return (*autoStorageBasePropertiesPtrType)(v)
}

func (*autoStorageBasePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoStorageBaseProperties)(nil)).Elem()
}

func (i *autoStorageBasePropertiesPtrType) ToAutoStorageBasePropertiesPtrOutput() AutoStorageBasePropertiesPtrOutput {
	return i.ToAutoStorageBasePropertiesPtrOutputWithContext(context.Background())
}

func (i *autoStorageBasePropertiesPtrType) ToAutoStorageBasePropertiesPtrOutputWithContext(ctx context.Context) AutoStorageBasePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoStorageBasePropertiesPtrOutput)
}

// The properties related to auto storage account.
type AutoStorageBasePropertiesOutput struct{ *pulumi.OutputState }

func (AutoStorageBasePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoStorageBaseProperties)(nil)).Elem()
}

func (o AutoStorageBasePropertiesOutput) ToAutoStorageBasePropertiesOutput() AutoStorageBasePropertiesOutput {
	return o
}

func (o AutoStorageBasePropertiesOutput) ToAutoStorageBasePropertiesOutputWithContext(ctx context.Context) AutoStorageBasePropertiesOutput {
	return o
}

func (o AutoStorageBasePropertiesOutput) ToAutoStorageBasePropertiesPtrOutput() AutoStorageBasePropertiesPtrOutput {
	return o.ToAutoStorageBasePropertiesPtrOutputWithContext(context.Background())
}

func (o AutoStorageBasePropertiesOutput) ToAutoStorageBasePropertiesPtrOutputWithContext(ctx context.Context) AutoStorageBasePropertiesPtrOutput {
	return o.ApplyT(func(v AutoStorageBaseProperties) *AutoStorageBaseProperties {
		return &v
	}).(AutoStorageBasePropertiesPtrOutput)
}

// The resource ID of the storage account to be used for auto storage account.
func (o AutoStorageBasePropertiesOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v AutoStorageBaseProperties) string { return v.StorageAccountId }).(pulumi.StringOutput)
}

type AutoStorageBasePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AutoStorageBasePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoStorageBaseProperties)(nil)).Elem()
}

func (o AutoStorageBasePropertiesPtrOutput) ToAutoStorageBasePropertiesPtrOutput() AutoStorageBasePropertiesPtrOutput {
	return o
}

func (o AutoStorageBasePropertiesPtrOutput) ToAutoStorageBasePropertiesPtrOutputWithContext(ctx context.Context) AutoStorageBasePropertiesPtrOutput {
	return o
}

func (o AutoStorageBasePropertiesPtrOutput) Elem() AutoStorageBasePropertiesOutput {
	return o.ApplyT(func(v *AutoStorageBaseProperties) AutoStorageBaseProperties { return *v }).(AutoStorageBasePropertiesOutput)
}

// The resource ID of the storage account to be used for auto storage account.
func (o AutoStorageBasePropertiesPtrOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoStorageBaseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountId
	}).(pulumi.StringPtrOutput)
}

// Contains information about the auto storage account associated with a Batch account.
type AutoStoragePropertiesResponse struct {
	// The UTC time at which storage keys were last synchronized with the Batch account.
	LastKeySync string `pulumi:"lastKeySync"`
	// The resource ID of the storage account to be used for auto storage account.
	StorageAccountId string `pulumi:"storageAccountId"`
}

// AutoStoragePropertiesResponseInput is an input type that accepts AutoStoragePropertiesResponseArgs and AutoStoragePropertiesResponseOutput values.
// You can construct a concrete instance of `AutoStoragePropertiesResponseInput` via:
//
//          AutoStoragePropertiesResponseArgs{...}
type AutoStoragePropertiesResponseInput interface {
	pulumi.Input

	ToAutoStoragePropertiesResponseOutput() AutoStoragePropertiesResponseOutput
	ToAutoStoragePropertiesResponseOutputWithContext(context.Context) AutoStoragePropertiesResponseOutput
}

// Contains information about the auto storage account associated with a Batch account.
type AutoStoragePropertiesResponseArgs struct {
	// The UTC time at which storage keys were last synchronized with the Batch account.
	LastKeySync pulumi.StringInput `pulumi:"lastKeySync"`
	// The resource ID of the storage account to be used for auto storage account.
	StorageAccountId pulumi.StringInput `pulumi:"storageAccountId"`
}

func (AutoStoragePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoStoragePropertiesResponse)(nil)).Elem()
}

func (i AutoStoragePropertiesResponseArgs) ToAutoStoragePropertiesResponseOutput() AutoStoragePropertiesResponseOutput {
	return i.ToAutoStoragePropertiesResponseOutputWithContext(context.Background())
}

func (i AutoStoragePropertiesResponseArgs) ToAutoStoragePropertiesResponseOutputWithContext(ctx context.Context) AutoStoragePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoStoragePropertiesResponseOutput)
}

func (i AutoStoragePropertiesResponseArgs) ToAutoStoragePropertiesResponsePtrOutput() AutoStoragePropertiesResponsePtrOutput {
	return i.ToAutoStoragePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i AutoStoragePropertiesResponseArgs) ToAutoStoragePropertiesResponsePtrOutputWithContext(ctx context.Context) AutoStoragePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoStoragePropertiesResponseOutput).ToAutoStoragePropertiesResponsePtrOutputWithContext(ctx)
}

// AutoStoragePropertiesResponsePtrInput is an input type that accepts AutoStoragePropertiesResponseArgs, AutoStoragePropertiesResponsePtr and AutoStoragePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `AutoStoragePropertiesResponsePtrInput` via:
//
//          AutoStoragePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type AutoStoragePropertiesResponsePtrInput interface {
	pulumi.Input

	ToAutoStoragePropertiesResponsePtrOutput() AutoStoragePropertiesResponsePtrOutput
	ToAutoStoragePropertiesResponsePtrOutputWithContext(context.Context) AutoStoragePropertiesResponsePtrOutput
}

type autoStoragePropertiesResponsePtrType AutoStoragePropertiesResponseArgs

func AutoStoragePropertiesResponsePtr(v *AutoStoragePropertiesResponseArgs) AutoStoragePropertiesResponsePtrInput {
	return (*autoStoragePropertiesResponsePtrType)(v)
}

func (*autoStoragePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoStoragePropertiesResponse)(nil)).Elem()
}

func (i *autoStoragePropertiesResponsePtrType) ToAutoStoragePropertiesResponsePtrOutput() AutoStoragePropertiesResponsePtrOutput {
	return i.ToAutoStoragePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *autoStoragePropertiesResponsePtrType) ToAutoStoragePropertiesResponsePtrOutputWithContext(ctx context.Context) AutoStoragePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoStoragePropertiesResponsePtrOutput)
}

// Contains information about the auto storage account associated with a Batch account.
type AutoStoragePropertiesResponseOutput struct{ *pulumi.OutputState }

func (AutoStoragePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoStoragePropertiesResponse)(nil)).Elem()
}

func (o AutoStoragePropertiesResponseOutput) ToAutoStoragePropertiesResponseOutput() AutoStoragePropertiesResponseOutput {
	return o
}

func (o AutoStoragePropertiesResponseOutput) ToAutoStoragePropertiesResponseOutputWithContext(ctx context.Context) AutoStoragePropertiesResponseOutput {
	return o
}

func (o AutoStoragePropertiesResponseOutput) ToAutoStoragePropertiesResponsePtrOutput() AutoStoragePropertiesResponsePtrOutput {
	return o.ToAutoStoragePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AutoStoragePropertiesResponseOutput) ToAutoStoragePropertiesResponsePtrOutputWithContext(ctx context.Context) AutoStoragePropertiesResponsePtrOutput {
	return o.ApplyT(func(v AutoStoragePropertiesResponse) *AutoStoragePropertiesResponse {
		return &v
	}).(AutoStoragePropertiesResponsePtrOutput)
}

// The UTC time at which storage keys were last synchronized with the Batch account.
func (o AutoStoragePropertiesResponseOutput) LastKeySync() pulumi.StringOutput {
	return o.ApplyT(func(v AutoStoragePropertiesResponse) string { return v.LastKeySync }).(pulumi.StringOutput)
}

// The resource ID of the storage account to be used for auto storage account.
func (o AutoStoragePropertiesResponseOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v AutoStoragePropertiesResponse) string { return v.StorageAccountId }).(pulumi.StringOutput)
}

type AutoStoragePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoStoragePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoStoragePropertiesResponse)(nil)).Elem()
}

func (o AutoStoragePropertiesResponsePtrOutput) ToAutoStoragePropertiesResponsePtrOutput() AutoStoragePropertiesResponsePtrOutput {
	return o
}

func (o AutoStoragePropertiesResponsePtrOutput) ToAutoStoragePropertiesResponsePtrOutputWithContext(ctx context.Context) AutoStoragePropertiesResponsePtrOutput {
	return o
}

func (o AutoStoragePropertiesResponsePtrOutput) Elem() AutoStoragePropertiesResponseOutput {
	return o.ApplyT(func(v *AutoStoragePropertiesResponse) AutoStoragePropertiesResponse { return *v }).(AutoStoragePropertiesResponseOutput)
}

// The UTC time at which storage keys were last synchronized with the Batch account.
func (o AutoStoragePropertiesResponsePtrOutput) LastKeySync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoStoragePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastKeySync
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the storage account to be used for auto storage account.
func (o AutoStoragePropertiesResponsePtrOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoStoragePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountId
	}).(pulumi.StringPtrOutput)
}

// Contains information about an Azure Batch account.
type BatchAccountType struct {
	// The location of the resource
	Location *string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The properties associated with the account.
	Properties BatchAccountPropertiesResponse `pulumi:"properties"`
	// The tags of the resource
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource
	Type string `pulumi:"type"`
}

// BatchAccountTypeInput is an input type that accepts BatchAccountTypeArgs and BatchAccountTypeOutput values.
// You can construct a concrete instance of `BatchAccountTypeInput` via:
//
//          BatchAccountTypeArgs{...}
type BatchAccountTypeInput interface {
	pulumi.Input

	ToBatchAccountTypeOutput() BatchAccountTypeOutput
	ToBatchAccountTypeOutputWithContext(context.Context) BatchAccountTypeOutput
}

// Contains information about an Azure Batch account.
type BatchAccountTypeArgs struct {
	// The location of the resource
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringInput `pulumi:"name"`
	// The properties associated with the account.
	Properties BatchAccountPropertiesResponseInput `pulumi:"properties"`
	// The tags of the resource
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the resource
	Type pulumi.StringInput `pulumi:"type"`
}

func (BatchAccountTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchAccountType)(nil)).Elem()
}

func (i BatchAccountTypeArgs) ToBatchAccountTypeOutput() BatchAccountTypeOutput {
	return i.ToBatchAccountTypeOutputWithContext(context.Background())
}

func (i BatchAccountTypeArgs) ToBatchAccountTypeOutputWithContext(ctx context.Context) BatchAccountTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchAccountTypeOutput)
}

// Contains information about an Azure Batch account.
type BatchAccountTypeOutput struct{ *pulumi.OutputState }

func (BatchAccountTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchAccountType)(nil)).Elem()
}

func (o BatchAccountTypeOutput) ToBatchAccountTypeOutput() BatchAccountTypeOutput {
	return o
}

func (o BatchAccountTypeOutput) ToBatchAccountTypeOutputWithContext(ctx context.Context) BatchAccountTypeOutput {
	return o
}

// The location of the resource
func (o BatchAccountTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchAccountType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o BatchAccountTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BatchAccountType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties associated with the account.
func (o BatchAccountTypeOutput) Properties() BatchAccountPropertiesResponseOutput {
	return o.ApplyT(func(v BatchAccountType) BatchAccountPropertiesResponse { return v.Properties }).(BatchAccountPropertiesResponseOutput)
}

// The tags of the resource
func (o BatchAccountTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v BatchAccountType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource
func (o BatchAccountTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BatchAccountType) string { return v.Type }).(pulumi.StringOutput)
}

// Account specific properties.
type BatchAccountPropertiesResponse struct {
	// The endpoint used by this account to interact with the Batch services.
	AccountEndpoint string `pulumi:"accountEndpoint"`
	// The active job and job schedule quota for this Batch account.
	ActiveJobAndJobScheduleQuota int `pulumi:"activeJobAndJobScheduleQuota"`
	// The properties and status of any auto storage account associated with the account.
	AutoStorage *AutoStoragePropertiesResponse `pulumi:"autoStorage"`
	// The core quota for this Batch account.
	CoreQuota int `pulumi:"coreQuota"`
	// The pool quota for this Batch account.
	PoolQuota int `pulumi:"poolQuota"`
	// The provisioned state of the resource
	ProvisioningState *string `pulumi:"provisioningState"`
}

// BatchAccountPropertiesResponseInput is an input type that accepts BatchAccountPropertiesResponseArgs and BatchAccountPropertiesResponseOutput values.
// You can construct a concrete instance of `BatchAccountPropertiesResponseInput` via:
//
//          BatchAccountPropertiesResponseArgs{...}
type BatchAccountPropertiesResponseInput interface {
	pulumi.Input

	ToBatchAccountPropertiesResponseOutput() BatchAccountPropertiesResponseOutput
	ToBatchAccountPropertiesResponseOutputWithContext(context.Context) BatchAccountPropertiesResponseOutput
}

// Account specific properties.
type BatchAccountPropertiesResponseArgs struct {
	// The endpoint used by this account to interact with the Batch services.
	AccountEndpoint pulumi.StringInput `pulumi:"accountEndpoint"`
	// The active job and job schedule quota for this Batch account.
	ActiveJobAndJobScheduleQuota pulumi.IntInput `pulumi:"activeJobAndJobScheduleQuota"`
	// The properties and status of any auto storage account associated with the account.
	AutoStorage AutoStoragePropertiesResponsePtrInput `pulumi:"autoStorage"`
	// The core quota for this Batch account.
	CoreQuota pulumi.IntInput `pulumi:"coreQuota"`
	// The pool quota for this Batch account.
	PoolQuota pulumi.IntInput `pulumi:"poolQuota"`
	// The provisioned state of the resource
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (BatchAccountPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchAccountPropertiesResponse)(nil)).Elem()
}

func (i BatchAccountPropertiesResponseArgs) ToBatchAccountPropertiesResponseOutput() BatchAccountPropertiesResponseOutput {
	return i.ToBatchAccountPropertiesResponseOutputWithContext(context.Background())
}

func (i BatchAccountPropertiesResponseArgs) ToBatchAccountPropertiesResponseOutputWithContext(ctx context.Context) BatchAccountPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchAccountPropertiesResponseOutput)
}

func (i BatchAccountPropertiesResponseArgs) ToBatchAccountPropertiesResponsePtrOutput() BatchAccountPropertiesResponsePtrOutput {
	return i.ToBatchAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i BatchAccountPropertiesResponseArgs) ToBatchAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) BatchAccountPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchAccountPropertiesResponseOutput).ToBatchAccountPropertiesResponsePtrOutputWithContext(ctx)
}

// BatchAccountPropertiesResponsePtrInput is an input type that accepts BatchAccountPropertiesResponseArgs, BatchAccountPropertiesResponsePtr and BatchAccountPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `BatchAccountPropertiesResponsePtrInput` via:
//
//          BatchAccountPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type BatchAccountPropertiesResponsePtrInput interface {
	pulumi.Input

	ToBatchAccountPropertiesResponsePtrOutput() BatchAccountPropertiesResponsePtrOutput
	ToBatchAccountPropertiesResponsePtrOutputWithContext(context.Context) BatchAccountPropertiesResponsePtrOutput
}

type batchAccountPropertiesResponsePtrType BatchAccountPropertiesResponseArgs

func BatchAccountPropertiesResponsePtr(v *BatchAccountPropertiesResponseArgs) BatchAccountPropertiesResponsePtrInput {
	return (*batchAccountPropertiesResponsePtrType)(v)
}

func (*batchAccountPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchAccountPropertiesResponse)(nil)).Elem()
}

func (i *batchAccountPropertiesResponsePtrType) ToBatchAccountPropertiesResponsePtrOutput() BatchAccountPropertiesResponsePtrOutput {
	return i.ToBatchAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *batchAccountPropertiesResponsePtrType) ToBatchAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) BatchAccountPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchAccountPropertiesResponsePtrOutput)
}

// Account specific properties.
type BatchAccountPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BatchAccountPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchAccountPropertiesResponse)(nil)).Elem()
}

func (o BatchAccountPropertiesResponseOutput) ToBatchAccountPropertiesResponseOutput() BatchAccountPropertiesResponseOutput {
	return o
}

func (o BatchAccountPropertiesResponseOutput) ToBatchAccountPropertiesResponseOutputWithContext(ctx context.Context) BatchAccountPropertiesResponseOutput {
	return o
}

func (o BatchAccountPropertiesResponseOutput) ToBatchAccountPropertiesResponsePtrOutput() BatchAccountPropertiesResponsePtrOutput {
	return o.ToBatchAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o BatchAccountPropertiesResponseOutput) ToBatchAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) BatchAccountPropertiesResponsePtrOutput {
	return o.ApplyT(func(v BatchAccountPropertiesResponse) *BatchAccountPropertiesResponse {
		return &v
	}).(BatchAccountPropertiesResponsePtrOutput)
}

// The endpoint used by this account to interact with the Batch services.
func (o BatchAccountPropertiesResponseOutput) AccountEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v BatchAccountPropertiesResponse) string { return v.AccountEndpoint }).(pulumi.StringOutput)
}

// The active job and job schedule quota for this Batch account.
func (o BatchAccountPropertiesResponseOutput) ActiveJobAndJobScheduleQuota() pulumi.IntOutput {
	return o.ApplyT(func(v BatchAccountPropertiesResponse) int { return v.ActiveJobAndJobScheduleQuota }).(pulumi.IntOutput)
}

// The properties and status of any auto storage account associated with the account.
func (o BatchAccountPropertiesResponseOutput) AutoStorage() AutoStoragePropertiesResponsePtrOutput {
	return o.ApplyT(func(v BatchAccountPropertiesResponse) *AutoStoragePropertiesResponse { return v.AutoStorage }).(AutoStoragePropertiesResponsePtrOutput)
}

// The core quota for this Batch account.
func (o BatchAccountPropertiesResponseOutput) CoreQuota() pulumi.IntOutput {
	return o.ApplyT(func(v BatchAccountPropertiesResponse) int { return v.CoreQuota }).(pulumi.IntOutput)
}

// The pool quota for this Batch account.
func (o BatchAccountPropertiesResponseOutput) PoolQuota() pulumi.IntOutput {
	return o.ApplyT(func(v BatchAccountPropertiesResponse) int { return v.PoolQuota }).(pulumi.IntOutput)
}

// The provisioned state of the resource
func (o BatchAccountPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchAccountPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type BatchAccountPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (BatchAccountPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchAccountPropertiesResponse)(nil)).Elem()
}

func (o BatchAccountPropertiesResponsePtrOutput) ToBatchAccountPropertiesResponsePtrOutput() BatchAccountPropertiesResponsePtrOutput {
	return o
}

func (o BatchAccountPropertiesResponsePtrOutput) ToBatchAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) BatchAccountPropertiesResponsePtrOutput {
	return o
}

func (o BatchAccountPropertiesResponsePtrOutput) Elem() BatchAccountPropertiesResponseOutput {
	return o.ApplyT(func(v *BatchAccountPropertiesResponse) BatchAccountPropertiesResponse { return *v }).(BatchAccountPropertiesResponseOutput)
}

// The endpoint used by this account to interact with the Batch services.
func (o BatchAccountPropertiesResponsePtrOutput) AccountEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchAccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AccountEndpoint
	}).(pulumi.StringPtrOutput)
}

// The active job and job schedule quota for this Batch account.
func (o BatchAccountPropertiesResponsePtrOutput) ActiveJobAndJobScheduleQuota() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BatchAccountPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ActiveJobAndJobScheduleQuota
	}).(pulumi.IntPtrOutput)
}

// The properties and status of any auto storage account associated with the account.
func (o BatchAccountPropertiesResponsePtrOutput) AutoStorage() AutoStoragePropertiesResponsePtrOutput {
	return o.ApplyT(func(v *BatchAccountPropertiesResponse) *AutoStoragePropertiesResponse {
		if v == nil {
			return nil
		}
		return v.AutoStorage
	}).(AutoStoragePropertiesResponsePtrOutput)
}

// The core quota for this Batch account.
func (o BatchAccountPropertiesResponsePtrOutput) CoreQuota() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BatchAccountPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.CoreQuota
	}).(pulumi.IntPtrOutput)
}

// The pool quota for this Batch account.
func (o BatchAccountPropertiesResponsePtrOutput) PoolQuota() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BatchAccountPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.PoolQuota
	}).(pulumi.IntPtrOutput)
}

// The provisioned state of the resource
func (o BatchAccountPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchAccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationTypeOutput{})
	pulumi.RegisterOutputType(ApplicationPackageTypeOutput{})
	pulumi.RegisterOutputType(ApplicationPackageResponseOutput{})
	pulumi.RegisterOutputType(ApplicationPackageResponseArrayOutput{})
	pulumi.RegisterOutputType(AutoStorageBasePropertiesOutput{})
	pulumi.RegisterOutputType(AutoStorageBasePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AutoStoragePropertiesResponseOutput{})
	pulumi.RegisterOutputType(AutoStoragePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(BatchAccountTypeOutput{})
	pulumi.RegisterOutputType(BatchAccountPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BatchAccountPropertiesResponsePtrOutput{})
}
