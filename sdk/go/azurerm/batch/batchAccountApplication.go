// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package batch

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Contains information about an application in a Batch account.
type BatchAccountApplication struct {
	pulumi.CustomResourceState

	// The ETag of the resource, used for concurrency statements.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The properties associated with the Application.
	Properties ApplicationPropertiesResponseOutput `pulumi:"properties"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewBatchAccountApplication registers a new resource with the given unique name, arguments, and options.
func NewBatchAccountApplication(ctx *pulumi.Context,
	name string, args *BatchAccountApplicationArgs, opts ...pulumi.ResourceOption) (*BatchAccountApplication, error) {
	if args == nil || args.AccountName == nil {
		return nil, errors.New("missing required argument 'AccountName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &BatchAccountApplicationArgs{}
	}
	var resource BatchAccountApplication
	err := ctx.RegisterResource("azurerm:batch:BatchAccountApplication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBatchAccountApplication gets an existing BatchAccountApplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBatchAccountApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BatchAccountApplicationState, opts ...pulumi.ResourceOption) (*BatchAccountApplication, error) {
	var resource BatchAccountApplication
	err := ctx.ReadResource("azurerm:batch:BatchAccountApplication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BatchAccountApplication resources.
type batchAccountApplicationState struct {
	// The ETag of the resource, used for concurrency statements.
	Etag *string `pulumi:"etag"`
	// The name of the resource.
	Name *string `pulumi:"name"`
	// The properties associated with the Application.
	Properties *ApplicationPropertiesResponse `pulumi:"properties"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

type BatchAccountApplicationState struct {
	// The ETag of the resource, used for concurrency statements.
	Etag pulumi.StringPtrInput
	// The name of the resource.
	Name pulumi.StringPtrInput
	// The properties associated with the Application.
	Properties ApplicationPropertiesResponsePtrInput
	// The type of the resource.
	Type pulumi.StringPtrInput
}

func (BatchAccountApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*batchAccountApplicationState)(nil)).Elem()
}

type batchAccountApplicationArgs struct {
	// The name of the Batch account.
	AccountName string `pulumi:"accountName"`
	// The name of the application. This must be unique within the account.
	Name string `pulumi:"name"`
	// The properties associated with the Application.
	Properties *ApplicationProperties `pulumi:"properties"`
	// The name of the resource group that contains the Batch account.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a BatchAccountApplication resource.
type BatchAccountApplicationArgs struct {
	// The name of the Batch account.
	AccountName pulumi.StringInput
	// The name of the application. This must be unique within the account.
	Name pulumi.StringInput
	// The properties associated with the Application.
	Properties ApplicationPropertiesPtrInput
	// The name of the resource group that contains the Batch account.
	ResourceGroupName pulumi.StringInput
}

func (BatchAccountApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*batchAccountApplicationArgs)(nil)).Elem()
}
