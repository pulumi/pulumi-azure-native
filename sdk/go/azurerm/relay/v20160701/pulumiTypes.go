// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20160701

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// AuthorizationRule properties.
type AuthorizationRulePropertiesResponse struct {
	// The rights associated with the rule.
	Rights []string `pulumi:"rights"`
}

// AuthorizationRulePropertiesResponseInput is an input type that accepts AuthorizationRulePropertiesResponseArgs and AuthorizationRulePropertiesResponseOutput values.
// You can construct a concrete instance of `AuthorizationRulePropertiesResponseInput` via:
//
//          AuthorizationRulePropertiesResponseArgs{...}
type AuthorizationRulePropertiesResponseInput interface {
	pulumi.Input

	ToAuthorizationRulePropertiesResponseOutput() AuthorizationRulePropertiesResponseOutput
	ToAuthorizationRulePropertiesResponseOutputWithContext(context.Context) AuthorizationRulePropertiesResponseOutput
}

// AuthorizationRule properties.
type AuthorizationRulePropertiesResponseArgs struct {
	// The rights associated with the rule.
	Rights pulumi.StringArrayInput `pulumi:"rights"`
}

func (AuthorizationRulePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationRulePropertiesResponse)(nil)).Elem()
}

func (i AuthorizationRulePropertiesResponseArgs) ToAuthorizationRulePropertiesResponseOutput() AuthorizationRulePropertiesResponseOutput {
	return i.ToAuthorizationRulePropertiesResponseOutputWithContext(context.Background())
}

func (i AuthorizationRulePropertiesResponseArgs) ToAuthorizationRulePropertiesResponseOutputWithContext(ctx context.Context) AuthorizationRulePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationRulePropertiesResponseOutput)
}

func (i AuthorizationRulePropertiesResponseArgs) ToAuthorizationRulePropertiesResponsePtrOutput() AuthorizationRulePropertiesResponsePtrOutput {
	return i.ToAuthorizationRulePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i AuthorizationRulePropertiesResponseArgs) ToAuthorizationRulePropertiesResponsePtrOutputWithContext(ctx context.Context) AuthorizationRulePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationRulePropertiesResponseOutput).ToAuthorizationRulePropertiesResponsePtrOutputWithContext(ctx)
}

// AuthorizationRulePropertiesResponsePtrInput is an input type that accepts AuthorizationRulePropertiesResponseArgs, AuthorizationRulePropertiesResponsePtr and AuthorizationRulePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `AuthorizationRulePropertiesResponsePtrInput` via:
//
//          AuthorizationRulePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type AuthorizationRulePropertiesResponsePtrInput interface {
	pulumi.Input

	ToAuthorizationRulePropertiesResponsePtrOutput() AuthorizationRulePropertiesResponsePtrOutput
	ToAuthorizationRulePropertiesResponsePtrOutputWithContext(context.Context) AuthorizationRulePropertiesResponsePtrOutput
}

type authorizationRulePropertiesResponsePtrType AuthorizationRulePropertiesResponseArgs

func AuthorizationRulePropertiesResponsePtr(v *AuthorizationRulePropertiesResponseArgs) AuthorizationRulePropertiesResponsePtrInput {
	return (*authorizationRulePropertiesResponsePtrType)(v)
}

func (*authorizationRulePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationRulePropertiesResponse)(nil)).Elem()
}

func (i *authorizationRulePropertiesResponsePtrType) ToAuthorizationRulePropertiesResponsePtrOutput() AuthorizationRulePropertiesResponsePtrOutput {
	return i.ToAuthorizationRulePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *authorizationRulePropertiesResponsePtrType) ToAuthorizationRulePropertiesResponsePtrOutputWithContext(ctx context.Context) AuthorizationRulePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationRulePropertiesResponsePtrOutput)
}

// AuthorizationRule properties.
type AuthorizationRulePropertiesResponseOutput struct{ *pulumi.OutputState }

func (AuthorizationRulePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationRulePropertiesResponse)(nil)).Elem()
}

func (o AuthorizationRulePropertiesResponseOutput) ToAuthorizationRulePropertiesResponseOutput() AuthorizationRulePropertiesResponseOutput {
	return o
}

func (o AuthorizationRulePropertiesResponseOutput) ToAuthorizationRulePropertiesResponseOutputWithContext(ctx context.Context) AuthorizationRulePropertiesResponseOutput {
	return o
}

func (o AuthorizationRulePropertiesResponseOutput) ToAuthorizationRulePropertiesResponsePtrOutput() AuthorizationRulePropertiesResponsePtrOutput {
	return o.ToAuthorizationRulePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AuthorizationRulePropertiesResponseOutput) ToAuthorizationRulePropertiesResponsePtrOutputWithContext(ctx context.Context) AuthorizationRulePropertiesResponsePtrOutput {
	return o.ApplyT(func(v AuthorizationRulePropertiesResponse) *AuthorizationRulePropertiesResponse {
		return &v
	}).(AuthorizationRulePropertiesResponsePtrOutput)
}

// The rights associated with the rule.
func (o AuthorizationRulePropertiesResponseOutput) Rights() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationRulePropertiesResponse) []string { return v.Rights }).(pulumi.StringArrayOutput)
}

type AuthorizationRulePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AuthorizationRulePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationRulePropertiesResponse)(nil)).Elem()
}

func (o AuthorizationRulePropertiesResponsePtrOutput) ToAuthorizationRulePropertiesResponsePtrOutput() AuthorizationRulePropertiesResponsePtrOutput {
	return o
}

func (o AuthorizationRulePropertiesResponsePtrOutput) ToAuthorizationRulePropertiesResponsePtrOutputWithContext(ctx context.Context) AuthorizationRulePropertiesResponsePtrOutput {
	return o
}

func (o AuthorizationRulePropertiesResponsePtrOutput) Elem() AuthorizationRulePropertiesResponseOutput {
	return o.ApplyT(func(v *AuthorizationRulePropertiesResponse) AuthorizationRulePropertiesResponse { return *v }).(AuthorizationRulePropertiesResponseOutput)
}

// The rights associated with the rule.
func (o AuthorizationRulePropertiesResponsePtrOutput) Rights() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationRulePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Rights
	}).(pulumi.StringArrayOutput)
}

// Properties of the HybridConnection.
type HybridConnectionPropertiesResponse struct {
	// The time the HybridConnection was created.
	CreatedAt string `pulumi:"createdAt"`
	// The number of listeners for this HybridConnection. min : 1 and max:25 supported
	ListenerCount int `pulumi:"listenerCount"`
	// true if client authorization is needed for this HybridConnection; otherwise, false.
	RequiresClientAuthorization *bool `pulumi:"requiresClientAuthorization"`
	// The time the namespace was updated.
	UpdatedAt string `pulumi:"updatedAt"`
	// usermetadata is a placeholder to store user-defined string data for the HybridConnection endpoint.e.g. it can be used to store  descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.
	UserMetadata *string `pulumi:"userMetadata"`
}

// HybridConnectionPropertiesResponseInput is an input type that accepts HybridConnectionPropertiesResponseArgs and HybridConnectionPropertiesResponseOutput values.
// You can construct a concrete instance of `HybridConnectionPropertiesResponseInput` via:
//
//          HybridConnectionPropertiesResponseArgs{...}
type HybridConnectionPropertiesResponseInput interface {
	pulumi.Input

	ToHybridConnectionPropertiesResponseOutput() HybridConnectionPropertiesResponseOutput
	ToHybridConnectionPropertiesResponseOutputWithContext(context.Context) HybridConnectionPropertiesResponseOutput
}

// Properties of the HybridConnection.
type HybridConnectionPropertiesResponseArgs struct {
	// The time the HybridConnection was created.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The number of listeners for this HybridConnection. min : 1 and max:25 supported
	ListenerCount pulumi.IntInput `pulumi:"listenerCount"`
	// true if client authorization is needed for this HybridConnection; otherwise, false.
	RequiresClientAuthorization pulumi.BoolPtrInput `pulumi:"requiresClientAuthorization"`
	// The time the namespace was updated.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// usermetadata is a placeholder to store user-defined string data for the HybridConnection endpoint.e.g. it can be used to store  descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.
	UserMetadata pulumi.StringPtrInput `pulumi:"userMetadata"`
}

func (HybridConnectionPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridConnectionPropertiesResponse)(nil)).Elem()
}

func (i HybridConnectionPropertiesResponseArgs) ToHybridConnectionPropertiesResponseOutput() HybridConnectionPropertiesResponseOutput {
	return i.ToHybridConnectionPropertiesResponseOutputWithContext(context.Background())
}

func (i HybridConnectionPropertiesResponseArgs) ToHybridConnectionPropertiesResponseOutputWithContext(ctx context.Context) HybridConnectionPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridConnectionPropertiesResponseOutput)
}

func (i HybridConnectionPropertiesResponseArgs) ToHybridConnectionPropertiesResponsePtrOutput() HybridConnectionPropertiesResponsePtrOutput {
	return i.ToHybridConnectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i HybridConnectionPropertiesResponseArgs) ToHybridConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) HybridConnectionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridConnectionPropertiesResponseOutput).ToHybridConnectionPropertiesResponsePtrOutputWithContext(ctx)
}

// HybridConnectionPropertiesResponsePtrInput is an input type that accepts HybridConnectionPropertiesResponseArgs, HybridConnectionPropertiesResponsePtr and HybridConnectionPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `HybridConnectionPropertiesResponsePtrInput` via:
//
//          HybridConnectionPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type HybridConnectionPropertiesResponsePtrInput interface {
	pulumi.Input

	ToHybridConnectionPropertiesResponsePtrOutput() HybridConnectionPropertiesResponsePtrOutput
	ToHybridConnectionPropertiesResponsePtrOutputWithContext(context.Context) HybridConnectionPropertiesResponsePtrOutput
}

type hybridConnectionPropertiesResponsePtrType HybridConnectionPropertiesResponseArgs

func HybridConnectionPropertiesResponsePtr(v *HybridConnectionPropertiesResponseArgs) HybridConnectionPropertiesResponsePtrInput {
	return (*hybridConnectionPropertiesResponsePtrType)(v)
}

func (*hybridConnectionPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HybridConnectionPropertiesResponse)(nil)).Elem()
}

func (i *hybridConnectionPropertiesResponsePtrType) ToHybridConnectionPropertiesResponsePtrOutput() HybridConnectionPropertiesResponsePtrOutput {
	return i.ToHybridConnectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *hybridConnectionPropertiesResponsePtrType) ToHybridConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) HybridConnectionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridConnectionPropertiesResponsePtrOutput)
}

// Properties of the HybridConnection.
type HybridConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (HybridConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridConnectionPropertiesResponse)(nil)).Elem()
}

func (o HybridConnectionPropertiesResponseOutput) ToHybridConnectionPropertiesResponseOutput() HybridConnectionPropertiesResponseOutput {
	return o
}

func (o HybridConnectionPropertiesResponseOutput) ToHybridConnectionPropertiesResponseOutputWithContext(ctx context.Context) HybridConnectionPropertiesResponseOutput {
	return o
}

func (o HybridConnectionPropertiesResponseOutput) ToHybridConnectionPropertiesResponsePtrOutput() HybridConnectionPropertiesResponsePtrOutput {
	return o.ToHybridConnectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o HybridConnectionPropertiesResponseOutput) ToHybridConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) HybridConnectionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v HybridConnectionPropertiesResponse) *HybridConnectionPropertiesResponse {
		return &v
	}).(HybridConnectionPropertiesResponsePtrOutput)
}

// The time the HybridConnection was created.
func (o HybridConnectionPropertiesResponseOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v HybridConnectionPropertiesResponse) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The number of listeners for this HybridConnection. min : 1 and max:25 supported
func (o HybridConnectionPropertiesResponseOutput) ListenerCount() pulumi.IntOutput {
	return o.ApplyT(func(v HybridConnectionPropertiesResponse) int { return v.ListenerCount }).(pulumi.IntOutput)
}

// true if client authorization is needed for this HybridConnection; otherwise, false.
func (o HybridConnectionPropertiesResponseOutput) RequiresClientAuthorization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HybridConnectionPropertiesResponse) *bool { return v.RequiresClientAuthorization }).(pulumi.BoolPtrOutput)
}

// The time the namespace was updated.
func (o HybridConnectionPropertiesResponseOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v HybridConnectionPropertiesResponse) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// usermetadata is a placeholder to store user-defined string data for the HybridConnection endpoint.e.g. it can be used to store  descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.
func (o HybridConnectionPropertiesResponseOutput) UserMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridConnectionPropertiesResponse) *string { return v.UserMetadata }).(pulumi.StringPtrOutput)
}

type HybridConnectionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (HybridConnectionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HybridConnectionPropertiesResponse)(nil)).Elem()
}

func (o HybridConnectionPropertiesResponsePtrOutput) ToHybridConnectionPropertiesResponsePtrOutput() HybridConnectionPropertiesResponsePtrOutput {
	return o
}

func (o HybridConnectionPropertiesResponsePtrOutput) ToHybridConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) HybridConnectionPropertiesResponsePtrOutput {
	return o
}

func (o HybridConnectionPropertiesResponsePtrOutput) Elem() HybridConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v *HybridConnectionPropertiesResponse) HybridConnectionPropertiesResponse { return *v }).(HybridConnectionPropertiesResponseOutput)
}

// The time the HybridConnection was created.
func (o HybridConnectionPropertiesResponsePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HybridConnectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// The number of listeners for this HybridConnection. min : 1 and max:25 supported
func (o HybridConnectionPropertiesResponsePtrOutput) ListenerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HybridConnectionPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ListenerCount
	}).(pulumi.IntPtrOutput)
}

// true if client authorization is needed for this HybridConnection; otherwise, false.
func (o HybridConnectionPropertiesResponsePtrOutput) RequiresClientAuthorization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HybridConnectionPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RequiresClientAuthorization
	}).(pulumi.BoolPtrOutput)
}

// The time the namespace was updated.
func (o HybridConnectionPropertiesResponsePtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HybridConnectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

// usermetadata is a placeholder to store user-defined string data for the HybridConnection endpoint.e.g. it can be used to store  descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.
func (o HybridConnectionPropertiesResponsePtrOutput) UserMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HybridConnectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserMetadata
	}).(pulumi.StringPtrOutput)
}

// Properties of the Namespace.
type RelayNamespacePropertiesResponse struct {
	// The time the namespace was created.
	CreatedAt string `pulumi:"createdAt"`
	// Identifier for Azure Insights metrics
	MetricId string `pulumi:"metricId"`
	// Provisioning state of the namespace.
	ProvisioningState string `pulumi:"provisioningState"`
	// Endpoint you can use to perform Service Bus operations.
	ServiceBusEndpoint string `pulumi:"serviceBusEndpoint"`
	// The time the namespace was updated.
	UpdatedAt string `pulumi:"updatedAt"`
}

// RelayNamespacePropertiesResponseInput is an input type that accepts RelayNamespacePropertiesResponseArgs and RelayNamespacePropertiesResponseOutput values.
// You can construct a concrete instance of `RelayNamespacePropertiesResponseInput` via:
//
//          RelayNamespacePropertiesResponseArgs{...}
type RelayNamespacePropertiesResponseInput interface {
	pulumi.Input

	ToRelayNamespacePropertiesResponseOutput() RelayNamespacePropertiesResponseOutput
	ToRelayNamespacePropertiesResponseOutputWithContext(context.Context) RelayNamespacePropertiesResponseOutput
}

// Properties of the Namespace.
type RelayNamespacePropertiesResponseArgs struct {
	// The time the namespace was created.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Identifier for Azure Insights metrics
	MetricId pulumi.StringInput `pulumi:"metricId"`
	// Provisioning state of the namespace.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Endpoint you can use to perform Service Bus operations.
	ServiceBusEndpoint pulumi.StringInput `pulumi:"serviceBusEndpoint"`
	// The time the namespace was updated.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (RelayNamespacePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RelayNamespacePropertiesResponse)(nil)).Elem()
}

func (i RelayNamespacePropertiesResponseArgs) ToRelayNamespacePropertiesResponseOutput() RelayNamespacePropertiesResponseOutput {
	return i.ToRelayNamespacePropertiesResponseOutputWithContext(context.Background())
}

func (i RelayNamespacePropertiesResponseArgs) ToRelayNamespacePropertiesResponseOutputWithContext(ctx context.Context) RelayNamespacePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RelayNamespacePropertiesResponseOutput)
}

func (i RelayNamespacePropertiesResponseArgs) ToRelayNamespacePropertiesResponsePtrOutput() RelayNamespacePropertiesResponsePtrOutput {
	return i.ToRelayNamespacePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i RelayNamespacePropertiesResponseArgs) ToRelayNamespacePropertiesResponsePtrOutputWithContext(ctx context.Context) RelayNamespacePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RelayNamespacePropertiesResponseOutput).ToRelayNamespacePropertiesResponsePtrOutputWithContext(ctx)
}

// RelayNamespacePropertiesResponsePtrInput is an input type that accepts RelayNamespacePropertiesResponseArgs, RelayNamespacePropertiesResponsePtr and RelayNamespacePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `RelayNamespacePropertiesResponsePtrInput` via:
//
//          RelayNamespacePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type RelayNamespacePropertiesResponsePtrInput interface {
	pulumi.Input

	ToRelayNamespacePropertiesResponsePtrOutput() RelayNamespacePropertiesResponsePtrOutput
	ToRelayNamespacePropertiesResponsePtrOutputWithContext(context.Context) RelayNamespacePropertiesResponsePtrOutput
}

type relayNamespacePropertiesResponsePtrType RelayNamespacePropertiesResponseArgs

func RelayNamespacePropertiesResponsePtr(v *RelayNamespacePropertiesResponseArgs) RelayNamespacePropertiesResponsePtrInput {
	return (*relayNamespacePropertiesResponsePtrType)(v)
}

func (*relayNamespacePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RelayNamespacePropertiesResponse)(nil)).Elem()
}

func (i *relayNamespacePropertiesResponsePtrType) ToRelayNamespacePropertiesResponsePtrOutput() RelayNamespacePropertiesResponsePtrOutput {
	return i.ToRelayNamespacePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *relayNamespacePropertiesResponsePtrType) ToRelayNamespacePropertiesResponsePtrOutputWithContext(ctx context.Context) RelayNamespacePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RelayNamespacePropertiesResponsePtrOutput)
}

// Properties of the Namespace.
type RelayNamespacePropertiesResponseOutput struct{ *pulumi.OutputState }

func (RelayNamespacePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RelayNamespacePropertiesResponse)(nil)).Elem()
}

func (o RelayNamespacePropertiesResponseOutput) ToRelayNamespacePropertiesResponseOutput() RelayNamespacePropertiesResponseOutput {
	return o
}

func (o RelayNamespacePropertiesResponseOutput) ToRelayNamespacePropertiesResponseOutputWithContext(ctx context.Context) RelayNamespacePropertiesResponseOutput {
	return o
}

func (o RelayNamespacePropertiesResponseOutput) ToRelayNamespacePropertiesResponsePtrOutput() RelayNamespacePropertiesResponsePtrOutput {
	return o.ToRelayNamespacePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o RelayNamespacePropertiesResponseOutput) ToRelayNamespacePropertiesResponsePtrOutputWithContext(ctx context.Context) RelayNamespacePropertiesResponsePtrOutput {
	return o.ApplyT(func(v RelayNamespacePropertiesResponse) *RelayNamespacePropertiesResponse {
		return &v
	}).(RelayNamespacePropertiesResponsePtrOutput)
}

// The time the namespace was created.
func (o RelayNamespacePropertiesResponseOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v RelayNamespacePropertiesResponse) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Identifier for Azure Insights metrics
func (o RelayNamespacePropertiesResponseOutput) MetricId() pulumi.StringOutput {
	return o.ApplyT(func(v RelayNamespacePropertiesResponse) string { return v.MetricId }).(pulumi.StringOutput)
}

// Provisioning state of the namespace.
func (o RelayNamespacePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RelayNamespacePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Endpoint you can use to perform Service Bus operations.
func (o RelayNamespacePropertiesResponseOutput) ServiceBusEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v RelayNamespacePropertiesResponse) string { return v.ServiceBusEndpoint }).(pulumi.StringOutput)
}

// The time the namespace was updated.
func (o RelayNamespacePropertiesResponseOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v RelayNamespacePropertiesResponse) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type RelayNamespacePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (RelayNamespacePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RelayNamespacePropertiesResponse)(nil)).Elem()
}

func (o RelayNamespacePropertiesResponsePtrOutput) ToRelayNamespacePropertiesResponsePtrOutput() RelayNamespacePropertiesResponsePtrOutput {
	return o
}

func (o RelayNamespacePropertiesResponsePtrOutput) ToRelayNamespacePropertiesResponsePtrOutputWithContext(ctx context.Context) RelayNamespacePropertiesResponsePtrOutput {
	return o
}

func (o RelayNamespacePropertiesResponsePtrOutput) Elem() RelayNamespacePropertiesResponseOutput {
	return o.ApplyT(func(v *RelayNamespacePropertiesResponse) RelayNamespacePropertiesResponse { return *v }).(RelayNamespacePropertiesResponseOutput)
}

// The time the namespace was created.
func (o RelayNamespacePropertiesResponsePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayNamespacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// Identifier for Azure Insights metrics
func (o RelayNamespacePropertiesResponsePtrOutput) MetricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayNamespacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MetricId
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the namespace.
func (o RelayNamespacePropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayNamespacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Endpoint you can use to perform Service Bus operations.
func (o RelayNamespacePropertiesResponsePtrOutput) ServiceBusEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayNamespacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceBusEndpoint
	}).(pulumi.StringPtrOutput)
}

// The time the namespace was updated.
func (o RelayNamespacePropertiesResponsePtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RelayNamespacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

// Sku of the Namespace.
type Sku struct {
	// Name of this Sku
	Name string `pulumi:"name"`
	// The tier of this particular SKU
	Tier string `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// Sku of the Namespace.
type SkuArgs struct {
	// Name of this Sku
	Name pulumi.StringInput `pulumi:"name"`
	// The tier of this particular SKU
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// Sku of the Namespace.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// Name of this Sku
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The tier of this particular SKU
func (o SkuOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Tier }).(pulumi.StringOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// Name of this Sku
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The tier of this particular SKU
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// Sku of the Namespace.
type SkuResponse struct {
	// Name of this Sku
	Name string `pulumi:"name"`
	// The tier of this particular SKU
	Tier string `pulumi:"tier"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// Sku of the Namespace.
type SkuResponseArgs struct {
	// Name of this Sku
	Name pulumi.StringInput `pulumi:"name"`
	// The tier of this particular SKU
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// Sku of the Namespace.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// Name of this Sku
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The tier of this particular SKU
func (o SkuResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Tier }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// Name of this Sku
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The tier of this particular SKU
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// Properties of the WcfRelay Properties.
type WcfRelayPropertiesResponse struct {
	// The time the WCFRelay was created.
	CreatedAt string `pulumi:"createdAt"`
	// true if the relay is dynamic; otherwise, false.
	IsDynamic bool `pulumi:"isDynamic"`
	// The number of listeners for this relay. min : 1 and max:25 supported
	ListenerCount int `pulumi:"listenerCount"`
	// WCFRelay Type.
	RelayType *string `pulumi:"relayType"`
	// true if client authorization is needed for this relay; otherwise, false.
	RequiresClientAuthorization *bool `pulumi:"requiresClientAuthorization"`
	// true if transport security is needed for this relay; otherwise, false.
	RequiresTransportSecurity *bool `pulumi:"requiresTransportSecurity"`
	// The time the namespace was updated.
	UpdatedAt string `pulumi:"updatedAt"`
	// usermetadata is a placeholder to store user-defined string data for the HybridConnection endpoint.e.g. it can be used to store  descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.
	UserMetadata *string `pulumi:"userMetadata"`
}

// WcfRelayPropertiesResponseInput is an input type that accepts WcfRelayPropertiesResponseArgs and WcfRelayPropertiesResponseOutput values.
// You can construct a concrete instance of `WcfRelayPropertiesResponseInput` via:
//
//          WcfRelayPropertiesResponseArgs{...}
type WcfRelayPropertiesResponseInput interface {
	pulumi.Input

	ToWcfRelayPropertiesResponseOutput() WcfRelayPropertiesResponseOutput
	ToWcfRelayPropertiesResponseOutputWithContext(context.Context) WcfRelayPropertiesResponseOutput
}

// Properties of the WcfRelay Properties.
type WcfRelayPropertiesResponseArgs struct {
	// The time the WCFRelay was created.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// true if the relay is dynamic; otherwise, false.
	IsDynamic pulumi.BoolInput `pulumi:"isDynamic"`
	// The number of listeners for this relay. min : 1 and max:25 supported
	ListenerCount pulumi.IntInput `pulumi:"listenerCount"`
	// WCFRelay Type.
	RelayType pulumi.StringPtrInput `pulumi:"relayType"`
	// true if client authorization is needed for this relay; otherwise, false.
	RequiresClientAuthorization pulumi.BoolPtrInput `pulumi:"requiresClientAuthorization"`
	// true if transport security is needed for this relay; otherwise, false.
	RequiresTransportSecurity pulumi.BoolPtrInput `pulumi:"requiresTransportSecurity"`
	// The time the namespace was updated.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// usermetadata is a placeholder to store user-defined string data for the HybridConnection endpoint.e.g. it can be used to store  descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.
	UserMetadata pulumi.StringPtrInput `pulumi:"userMetadata"`
}

func (WcfRelayPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WcfRelayPropertiesResponse)(nil)).Elem()
}

func (i WcfRelayPropertiesResponseArgs) ToWcfRelayPropertiesResponseOutput() WcfRelayPropertiesResponseOutput {
	return i.ToWcfRelayPropertiesResponseOutputWithContext(context.Background())
}

func (i WcfRelayPropertiesResponseArgs) ToWcfRelayPropertiesResponseOutputWithContext(ctx context.Context) WcfRelayPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WcfRelayPropertiesResponseOutput)
}

func (i WcfRelayPropertiesResponseArgs) ToWcfRelayPropertiesResponsePtrOutput() WcfRelayPropertiesResponsePtrOutput {
	return i.ToWcfRelayPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i WcfRelayPropertiesResponseArgs) ToWcfRelayPropertiesResponsePtrOutputWithContext(ctx context.Context) WcfRelayPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WcfRelayPropertiesResponseOutput).ToWcfRelayPropertiesResponsePtrOutputWithContext(ctx)
}

// WcfRelayPropertiesResponsePtrInput is an input type that accepts WcfRelayPropertiesResponseArgs, WcfRelayPropertiesResponsePtr and WcfRelayPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `WcfRelayPropertiesResponsePtrInput` via:
//
//          WcfRelayPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type WcfRelayPropertiesResponsePtrInput interface {
	pulumi.Input

	ToWcfRelayPropertiesResponsePtrOutput() WcfRelayPropertiesResponsePtrOutput
	ToWcfRelayPropertiesResponsePtrOutputWithContext(context.Context) WcfRelayPropertiesResponsePtrOutput
}

type wcfRelayPropertiesResponsePtrType WcfRelayPropertiesResponseArgs

func WcfRelayPropertiesResponsePtr(v *WcfRelayPropertiesResponseArgs) WcfRelayPropertiesResponsePtrInput {
	return (*wcfRelayPropertiesResponsePtrType)(v)
}

func (*wcfRelayPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WcfRelayPropertiesResponse)(nil)).Elem()
}

func (i *wcfRelayPropertiesResponsePtrType) ToWcfRelayPropertiesResponsePtrOutput() WcfRelayPropertiesResponsePtrOutput {
	return i.ToWcfRelayPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *wcfRelayPropertiesResponsePtrType) ToWcfRelayPropertiesResponsePtrOutputWithContext(ctx context.Context) WcfRelayPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WcfRelayPropertiesResponsePtrOutput)
}

// Properties of the WcfRelay Properties.
type WcfRelayPropertiesResponseOutput struct{ *pulumi.OutputState }

func (WcfRelayPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WcfRelayPropertiesResponse)(nil)).Elem()
}

func (o WcfRelayPropertiesResponseOutput) ToWcfRelayPropertiesResponseOutput() WcfRelayPropertiesResponseOutput {
	return o
}

func (o WcfRelayPropertiesResponseOutput) ToWcfRelayPropertiesResponseOutputWithContext(ctx context.Context) WcfRelayPropertiesResponseOutput {
	return o
}

func (o WcfRelayPropertiesResponseOutput) ToWcfRelayPropertiesResponsePtrOutput() WcfRelayPropertiesResponsePtrOutput {
	return o.ToWcfRelayPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o WcfRelayPropertiesResponseOutput) ToWcfRelayPropertiesResponsePtrOutputWithContext(ctx context.Context) WcfRelayPropertiesResponsePtrOutput {
	return o.ApplyT(func(v WcfRelayPropertiesResponse) *WcfRelayPropertiesResponse {
		return &v
	}).(WcfRelayPropertiesResponsePtrOutput)
}

// The time the WCFRelay was created.
func (o WcfRelayPropertiesResponseOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v WcfRelayPropertiesResponse) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// true if the relay is dynamic; otherwise, false.
func (o WcfRelayPropertiesResponseOutput) IsDynamic() pulumi.BoolOutput {
	return o.ApplyT(func(v WcfRelayPropertiesResponse) bool { return v.IsDynamic }).(pulumi.BoolOutput)
}

// The number of listeners for this relay. min : 1 and max:25 supported
func (o WcfRelayPropertiesResponseOutput) ListenerCount() pulumi.IntOutput {
	return o.ApplyT(func(v WcfRelayPropertiesResponse) int { return v.ListenerCount }).(pulumi.IntOutput)
}

// WCFRelay Type.
func (o WcfRelayPropertiesResponseOutput) RelayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WcfRelayPropertiesResponse) *string { return v.RelayType }).(pulumi.StringPtrOutput)
}

// true if client authorization is needed for this relay; otherwise, false.
func (o WcfRelayPropertiesResponseOutput) RequiresClientAuthorization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WcfRelayPropertiesResponse) *bool { return v.RequiresClientAuthorization }).(pulumi.BoolPtrOutput)
}

// true if transport security is needed for this relay; otherwise, false.
func (o WcfRelayPropertiesResponseOutput) RequiresTransportSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WcfRelayPropertiesResponse) *bool { return v.RequiresTransportSecurity }).(pulumi.BoolPtrOutput)
}

// The time the namespace was updated.
func (o WcfRelayPropertiesResponseOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v WcfRelayPropertiesResponse) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// usermetadata is a placeholder to store user-defined string data for the HybridConnection endpoint.e.g. it can be used to store  descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.
func (o WcfRelayPropertiesResponseOutput) UserMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WcfRelayPropertiesResponse) *string { return v.UserMetadata }).(pulumi.StringPtrOutput)
}

type WcfRelayPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (WcfRelayPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WcfRelayPropertiesResponse)(nil)).Elem()
}

func (o WcfRelayPropertiesResponsePtrOutput) ToWcfRelayPropertiesResponsePtrOutput() WcfRelayPropertiesResponsePtrOutput {
	return o
}

func (o WcfRelayPropertiesResponsePtrOutput) ToWcfRelayPropertiesResponsePtrOutputWithContext(ctx context.Context) WcfRelayPropertiesResponsePtrOutput {
	return o
}

func (o WcfRelayPropertiesResponsePtrOutput) Elem() WcfRelayPropertiesResponseOutput {
	return o.ApplyT(func(v *WcfRelayPropertiesResponse) WcfRelayPropertiesResponse { return *v }).(WcfRelayPropertiesResponseOutput)
}

// The time the WCFRelay was created.
func (o WcfRelayPropertiesResponsePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WcfRelayPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// true if the relay is dynamic; otherwise, false.
func (o WcfRelayPropertiesResponsePtrOutput) IsDynamic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WcfRelayPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsDynamic
	}).(pulumi.BoolPtrOutput)
}

// The number of listeners for this relay. min : 1 and max:25 supported
func (o WcfRelayPropertiesResponsePtrOutput) ListenerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WcfRelayPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ListenerCount
	}).(pulumi.IntPtrOutput)
}

// WCFRelay Type.
func (o WcfRelayPropertiesResponsePtrOutput) RelayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WcfRelayPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RelayType
	}).(pulumi.StringPtrOutput)
}

// true if client authorization is needed for this relay; otherwise, false.
func (o WcfRelayPropertiesResponsePtrOutput) RequiresClientAuthorization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WcfRelayPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RequiresClientAuthorization
	}).(pulumi.BoolPtrOutput)
}

// true if transport security is needed for this relay; otherwise, false.
func (o WcfRelayPropertiesResponsePtrOutput) RequiresTransportSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WcfRelayPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RequiresTransportSecurity
	}).(pulumi.BoolPtrOutput)
}

// The time the namespace was updated.
func (o WcfRelayPropertiesResponsePtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WcfRelayPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

// usermetadata is a placeholder to store user-defined string data for the HybridConnection endpoint.e.g. it can be used to store  descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.
func (o WcfRelayPropertiesResponsePtrOutput) UserMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WcfRelayPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserMetadata
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AuthorizationRulePropertiesResponseOutput{})
	pulumi.RegisterOutputType(AuthorizationRulePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(HybridConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(HybridConnectionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(RelayNamespacePropertiesResponseOutput{})
	pulumi.RegisterOutputType(RelayNamespacePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(WcfRelayPropertiesResponseOutput{})
	pulumi.RegisterOutputType(WcfRelayPropertiesResponsePtrOutput{})
}
