// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20191109

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Class representing an attached database configuration.
type AttachedDatabaseConfigurationType struct {
	// Resource location.
	Location *string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The properties of the attached database configuration.
	Properties AttachedDatabaseConfigurationPropertiesResponse `pulumi:"properties"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type string `pulumi:"type"`
}

// AttachedDatabaseConfigurationTypeInput is an input type that accepts AttachedDatabaseConfigurationTypeArgs and AttachedDatabaseConfigurationTypeOutput values.
// You can construct a concrete instance of `AttachedDatabaseConfigurationTypeInput` via:
//
//          AttachedDatabaseConfigurationTypeArgs{...}
type AttachedDatabaseConfigurationTypeInput interface {
	pulumi.Input

	ToAttachedDatabaseConfigurationTypeOutput() AttachedDatabaseConfigurationTypeOutput
	ToAttachedDatabaseConfigurationTypeOutputWithContext(context.Context) AttachedDatabaseConfigurationTypeOutput
}

// Class representing an attached database configuration.
type AttachedDatabaseConfigurationTypeArgs struct {
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of the attached database configuration.
	Properties AttachedDatabaseConfigurationPropertiesResponseInput `pulumi:"properties"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AttachedDatabaseConfigurationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDatabaseConfigurationType)(nil)).Elem()
}

func (i AttachedDatabaseConfigurationTypeArgs) ToAttachedDatabaseConfigurationTypeOutput() AttachedDatabaseConfigurationTypeOutput {
	return i.ToAttachedDatabaseConfigurationTypeOutputWithContext(context.Background())
}

func (i AttachedDatabaseConfigurationTypeArgs) ToAttachedDatabaseConfigurationTypeOutputWithContext(ctx context.Context) AttachedDatabaseConfigurationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedDatabaseConfigurationTypeOutput)
}

// Class representing an attached database configuration.
type AttachedDatabaseConfigurationTypeOutput struct{ *pulumi.OutputState }

func (AttachedDatabaseConfigurationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDatabaseConfigurationType)(nil)).Elem()
}

func (o AttachedDatabaseConfigurationTypeOutput) ToAttachedDatabaseConfigurationTypeOutput() AttachedDatabaseConfigurationTypeOutput {
	return o
}

func (o AttachedDatabaseConfigurationTypeOutput) ToAttachedDatabaseConfigurationTypeOutputWithContext(ctx context.Context) AttachedDatabaseConfigurationTypeOutput {
	return o
}

// Resource location.
func (o AttachedDatabaseConfigurationTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachedDatabaseConfigurationType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o AttachedDatabaseConfigurationTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AttachedDatabaseConfigurationType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of the attached database configuration.
func (o AttachedDatabaseConfigurationTypeOutput) Properties() AttachedDatabaseConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v AttachedDatabaseConfigurationType) AttachedDatabaseConfigurationPropertiesResponse {
		return v.Properties
	}).(AttachedDatabaseConfigurationPropertiesResponseOutput)
}

// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
func (o AttachedDatabaseConfigurationTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AttachedDatabaseConfigurationType) string { return v.Type }).(pulumi.StringOutput)
}

// Class representing the an attached database configuration properties of kind specific.
type AttachedDatabaseConfigurationProperties struct {
	// The resource id of the cluster where the databases you would like to attach reside.
	ClusterResourceId string `pulumi:"clusterResourceId"`
	// The name of the database which you would like to attach, use * if you want to follow all current and future databases.
	DatabaseName string `pulumi:"databaseName"`
	// The default principals modification kind
	DefaultPrincipalsModificationKind string `pulumi:"defaultPrincipalsModificationKind"`
}

// AttachedDatabaseConfigurationPropertiesInput is an input type that accepts AttachedDatabaseConfigurationPropertiesArgs and AttachedDatabaseConfigurationPropertiesOutput values.
// You can construct a concrete instance of `AttachedDatabaseConfigurationPropertiesInput` via:
//
//          AttachedDatabaseConfigurationPropertiesArgs{...}
type AttachedDatabaseConfigurationPropertiesInput interface {
	pulumi.Input

	ToAttachedDatabaseConfigurationPropertiesOutput() AttachedDatabaseConfigurationPropertiesOutput
	ToAttachedDatabaseConfigurationPropertiesOutputWithContext(context.Context) AttachedDatabaseConfigurationPropertiesOutput
}

// Class representing the an attached database configuration properties of kind specific.
type AttachedDatabaseConfigurationPropertiesArgs struct {
	// The resource id of the cluster where the databases you would like to attach reside.
	ClusterResourceId pulumi.StringInput `pulumi:"clusterResourceId"`
	// The name of the database which you would like to attach, use * if you want to follow all current and future databases.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// The default principals modification kind
	DefaultPrincipalsModificationKind pulumi.StringInput `pulumi:"defaultPrincipalsModificationKind"`
}

func (AttachedDatabaseConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDatabaseConfigurationProperties)(nil)).Elem()
}

func (i AttachedDatabaseConfigurationPropertiesArgs) ToAttachedDatabaseConfigurationPropertiesOutput() AttachedDatabaseConfigurationPropertiesOutput {
	return i.ToAttachedDatabaseConfigurationPropertiesOutputWithContext(context.Background())
}

func (i AttachedDatabaseConfigurationPropertiesArgs) ToAttachedDatabaseConfigurationPropertiesOutputWithContext(ctx context.Context) AttachedDatabaseConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedDatabaseConfigurationPropertiesOutput)
}

func (i AttachedDatabaseConfigurationPropertiesArgs) ToAttachedDatabaseConfigurationPropertiesPtrOutput() AttachedDatabaseConfigurationPropertiesPtrOutput {
	return i.ToAttachedDatabaseConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i AttachedDatabaseConfigurationPropertiesArgs) ToAttachedDatabaseConfigurationPropertiesPtrOutputWithContext(ctx context.Context) AttachedDatabaseConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedDatabaseConfigurationPropertiesOutput).ToAttachedDatabaseConfigurationPropertiesPtrOutputWithContext(ctx)
}

// AttachedDatabaseConfigurationPropertiesPtrInput is an input type that accepts AttachedDatabaseConfigurationPropertiesArgs, AttachedDatabaseConfigurationPropertiesPtr and AttachedDatabaseConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `AttachedDatabaseConfigurationPropertiesPtrInput` via:
//
//          AttachedDatabaseConfigurationPropertiesArgs{...}
//
//  or:
//
//          nil
type AttachedDatabaseConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToAttachedDatabaseConfigurationPropertiesPtrOutput() AttachedDatabaseConfigurationPropertiesPtrOutput
	ToAttachedDatabaseConfigurationPropertiesPtrOutputWithContext(context.Context) AttachedDatabaseConfigurationPropertiesPtrOutput
}

type attachedDatabaseConfigurationPropertiesPtrType AttachedDatabaseConfigurationPropertiesArgs

func AttachedDatabaseConfigurationPropertiesPtr(v *AttachedDatabaseConfigurationPropertiesArgs) AttachedDatabaseConfigurationPropertiesPtrInput {
	return (*attachedDatabaseConfigurationPropertiesPtrType)(v)
}

func (*attachedDatabaseConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedDatabaseConfigurationProperties)(nil)).Elem()
}

func (i *attachedDatabaseConfigurationPropertiesPtrType) ToAttachedDatabaseConfigurationPropertiesPtrOutput() AttachedDatabaseConfigurationPropertiesPtrOutput {
	return i.ToAttachedDatabaseConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *attachedDatabaseConfigurationPropertiesPtrType) ToAttachedDatabaseConfigurationPropertiesPtrOutputWithContext(ctx context.Context) AttachedDatabaseConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedDatabaseConfigurationPropertiesPtrOutput)
}

// Class representing the an attached database configuration properties of kind specific.
type AttachedDatabaseConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (AttachedDatabaseConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDatabaseConfigurationProperties)(nil)).Elem()
}

func (o AttachedDatabaseConfigurationPropertiesOutput) ToAttachedDatabaseConfigurationPropertiesOutput() AttachedDatabaseConfigurationPropertiesOutput {
	return o
}

func (o AttachedDatabaseConfigurationPropertiesOutput) ToAttachedDatabaseConfigurationPropertiesOutputWithContext(ctx context.Context) AttachedDatabaseConfigurationPropertiesOutput {
	return o
}

func (o AttachedDatabaseConfigurationPropertiesOutput) ToAttachedDatabaseConfigurationPropertiesPtrOutput() AttachedDatabaseConfigurationPropertiesPtrOutput {
	return o.ToAttachedDatabaseConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o AttachedDatabaseConfigurationPropertiesOutput) ToAttachedDatabaseConfigurationPropertiesPtrOutputWithContext(ctx context.Context) AttachedDatabaseConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v AttachedDatabaseConfigurationProperties) *AttachedDatabaseConfigurationProperties {
		return &v
	}).(AttachedDatabaseConfigurationPropertiesPtrOutput)
}

// The resource id of the cluster where the databases you would like to attach reside.
func (o AttachedDatabaseConfigurationPropertiesOutput) ClusterResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v AttachedDatabaseConfigurationProperties) string { return v.ClusterResourceId }).(pulumi.StringOutput)
}

// The name of the database which you would like to attach, use * if you want to follow all current and future databases.
func (o AttachedDatabaseConfigurationPropertiesOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v AttachedDatabaseConfigurationProperties) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// The default principals modification kind
func (o AttachedDatabaseConfigurationPropertiesOutput) DefaultPrincipalsModificationKind() pulumi.StringOutput {
	return o.ApplyT(func(v AttachedDatabaseConfigurationProperties) string { return v.DefaultPrincipalsModificationKind }).(pulumi.StringOutput)
}

type AttachedDatabaseConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AttachedDatabaseConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedDatabaseConfigurationProperties)(nil)).Elem()
}

func (o AttachedDatabaseConfigurationPropertiesPtrOutput) ToAttachedDatabaseConfigurationPropertiesPtrOutput() AttachedDatabaseConfigurationPropertiesPtrOutput {
	return o
}

func (o AttachedDatabaseConfigurationPropertiesPtrOutput) ToAttachedDatabaseConfigurationPropertiesPtrOutputWithContext(ctx context.Context) AttachedDatabaseConfigurationPropertiesPtrOutput {
	return o
}

func (o AttachedDatabaseConfigurationPropertiesPtrOutput) Elem() AttachedDatabaseConfigurationPropertiesOutput {
	return o.ApplyT(func(v *AttachedDatabaseConfigurationProperties) AttachedDatabaseConfigurationProperties { return *v }).(AttachedDatabaseConfigurationPropertiesOutput)
}

// The resource id of the cluster where the databases you would like to attach reside.
func (o AttachedDatabaseConfigurationPropertiesPtrOutput) ClusterResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttachedDatabaseConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterResourceId
	}).(pulumi.StringPtrOutput)
}

// The name of the database which you would like to attach, use * if you want to follow all current and future databases.
func (o AttachedDatabaseConfigurationPropertiesPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttachedDatabaseConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// The default principals modification kind
func (o AttachedDatabaseConfigurationPropertiesPtrOutput) DefaultPrincipalsModificationKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttachedDatabaseConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultPrincipalsModificationKind
	}).(pulumi.StringPtrOutput)
}

// Class representing the an attached database configuration properties of kind specific.
type AttachedDatabaseConfigurationPropertiesResponse struct {
	// The list of databases from the clusterResourceId which are currently attached to the cluster.
	AttachedDatabaseNames []string `pulumi:"attachedDatabaseNames"`
	// The resource id of the cluster where the databases you would like to attach reside.
	ClusterResourceId string `pulumi:"clusterResourceId"`
	// The name of the database which you would like to attach, use * if you want to follow all current and future databases.
	DatabaseName string `pulumi:"databaseName"`
	// The default principals modification kind
	DefaultPrincipalsModificationKind string `pulumi:"defaultPrincipalsModificationKind"`
	// The provisioned state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
}

// AttachedDatabaseConfigurationPropertiesResponseInput is an input type that accepts AttachedDatabaseConfigurationPropertiesResponseArgs and AttachedDatabaseConfigurationPropertiesResponseOutput values.
// You can construct a concrete instance of `AttachedDatabaseConfigurationPropertiesResponseInput` via:
//
//          AttachedDatabaseConfigurationPropertiesResponseArgs{...}
type AttachedDatabaseConfigurationPropertiesResponseInput interface {
	pulumi.Input

	ToAttachedDatabaseConfigurationPropertiesResponseOutput() AttachedDatabaseConfigurationPropertiesResponseOutput
	ToAttachedDatabaseConfigurationPropertiesResponseOutputWithContext(context.Context) AttachedDatabaseConfigurationPropertiesResponseOutput
}

// Class representing the an attached database configuration properties of kind specific.
type AttachedDatabaseConfigurationPropertiesResponseArgs struct {
	// The list of databases from the clusterResourceId which are currently attached to the cluster.
	AttachedDatabaseNames pulumi.StringArrayInput `pulumi:"attachedDatabaseNames"`
	// The resource id of the cluster where the databases you would like to attach reside.
	ClusterResourceId pulumi.StringInput `pulumi:"clusterResourceId"`
	// The name of the database which you would like to attach, use * if you want to follow all current and future databases.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// The default principals modification kind
	DefaultPrincipalsModificationKind pulumi.StringInput `pulumi:"defaultPrincipalsModificationKind"`
	// The provisioned state of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (AttachedDatabaseConfigurationPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDatabaseConfigurationPropertiesResponse)(nil)).Elem()
}

func (i AttachedDatabaseConfigurationPropertiesResponseArgs) ToAttachedDatabaseConfigurationPropertiesResponseOutput() AttachedDatabaseConfigurationPropertiesResponseOutput {
	return i.ToAttachedDatabaseConfigurationPropertiesResponseOutputWithContext(context.Background())
}

func (i AttachedDatabaseConfigurationPropertiesResponseArgs) ToAttachedDatabaseConfigurationPropertiesResponseOutputWithContext(ctx context.Context) AttachedDatabaseConfigurationPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedDatabaseConfigurationPropertiesResponseOutput)
}

func (i AttachedDatabaseConfigurationPropertiesResponseArgs) ToAttachedDatabaseConfigurationPropertiesResponsePtrOutput() AttachedDatabaseConfigurationPropertiesResponsePtrOutput {
	return i.ToAttachedDatabaseConfigurationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i AttachedDatabaseConfigurationPropertiesResponseArgs) ToAttachedDatabaseConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) AttachedDatabaseConfigurationPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedDatabaseConfigurationPropertiesResponseOutput).ToAttachedDatabaseConfigurationPropertiesResponsePtrOutputWithContext(ctx)
}

// AttachedDatabaseConfigurationPropertiesResponsePtrInput is an input type that accepts AttachedDatabaseConfigurationPropertiesResponseArgs, AttachedDatabaseConfigurationPropertiesResponsePtr and AttachedDatabaseConfigurationPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `AttachedDatabaseConfigurationPropertiesResponsePtrInput` via:
//
//          AttachedDatabaseConfigurationPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type AttachedDatabaseConfigurationPropertiesResponsePtrInput interface {
	pulumi.Input

	ToAttachedDatabaseConfigurationPropertiesResponsePtrOutput() AttachedDatabaseConfigurationPropertiesResponsePtrOutput
	ToAttachedDatabaseConfigurationPropertiesResponsePtrOutputWithContext(context.Context) AttachedDatabaseConfigurationPropertiesResponsePtrOutput
}

type attachedDatabaseConfigurationPropertiesResponsePtrType AttachedDatabaseConfigurationPropertiesResponseArgs

func AttachedDatabaseConfigurationPropertiesResponsePtr(v *AttachedDatabaseConfigurationPropertiesResponseArgs) AttachedDatabaseConfigurationPropertiesResponsePtrInput {
	return (*attachedDatabaseConfigurationPropertiesResponsePtrType)(v)
}

func (*attachedDatabaseConfigurationPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedDatabaseConfigurationPropertiesResponse)(nil)).Elem()
}

func (i *attachedDatabaseConfigurationPropertiesResponsePtrType) ToAttachedDatabaseConfigurationPropertiesResponsePtrOutput() AttachedDatabaseConfigurationPropertiesResponsePtrOutput {
	return i.ToAttachedDatabaseConfigurationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *attachedDatabaseConfigurationPropertiesResponsePtrType) ToAttachedDatabaseConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) AttachedDatabaseConfigurationPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedDatabaseConfigurationPropertiesResponsePtrOutput)
}

// Class representing the an attached database configuration properties of kind specific.
type AttachedDatabaseConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AttachedDatabaseConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDatabaseConfigurationPropertiesResponse)(nil)).Elem()
}

func (o AttachedDatabaseConfigurationPropertiesResponseOutput) ToAttachedDatabaseConfigurationPropertiesResponseOutput() AttachedDatabaseConfigurationPropertiesResponseOutput {
	return o
}

func (o AttachedDatabaseConfigurationPropertiesResponseOutput) ToAttachedDatabaseConfigurationPropertiesResponseOutputWithContext(ctx context.Context) AttachedDatabaseConfigurationPropertiesResponseOutput {
	return o
}

func (o AttachedDatabaseConfigurationPropertiesResponseOutput) ToAttachedDatabaseConfigurationPropertiesResponsePtrOutput() AttachedDatabaseConfigurationPropertiesResponsePtrOutput {
	return o.ToAttachedDatabaseConfigurationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AttachedDatabaseConfigurationPropertiesResponseOutput) ToAttachedDatabaseConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) AttachedDatabaseConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AttachedDatabaseConfigurationPropertiesResponse) *AttachedDatabaseConfigurationPropertiesResponse {
		return &v
	}).(AttachedDatabaseConfigurationPropertiesResponsePtrOutput)
}

// The list of databases from the clusterResourceId which are currently attached to the cluster.
func (o AttachedDatabaseConfigurationPropertiesResponseOutput) AttachedDatabaseNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttachedDatabaseConfigurationPropertiesResponse) []string { return v.AttachedDatabaseNames }).(pulumi.StringArrayOutput)
}

// The resource id of the cluster where the databases you would like to attach reside.
func (o AttachedDatabaseConfigurationPropertiesResponseOutput) ClusterResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v AttachedDatabaseConfigurationPropertiesResponse) string { return v.ClusterResourceId }).(pulumi.StringOutput)
}

// The name of the database which you would like to attach, use * if you want to follow all current and future databases.
func (o AttachedDatabaseConfigurationPropertiesResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v AttachedDatabaseConfigurationPropertiesResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// The default principals modification kind
func (o AttachedDatabaseConfigurationPropertiesResponseOutput) DefaultPrincipalsModificationKind() pulumi.StringOutput {
	return o.ApplyT(func(v AttachedDatabaseConfigurationPropertiesResponse) string {
		return v.DefaultPrincipalsModificationKind
	}).(pulumi.StringOutput)
}

// The provisioned state of the resource.
func (o AttachedDatabaseConfigurationPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AttachedDatabaseConfigurationPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type AttachedDatabaseConfigurationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AttachedDatabaseConfigurationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedDatabaseConfigurationPropertiesResponse)(nil)).Elem()
}

func (o AttachedDatabaseConfigurationPropertiesResponsePtrOutput) ToAttachedDatabaseConfigurationPropertiesResponsePtrOutput() AttachedDatabaseConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o AttachedDatabaseConfigurationPropertiesResponsePtrOutput) ToAttachedDatabaseConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) AttachedDatabaseConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o AttachedDatabaseConfigurationPropertiesResponsePtrOutput) Elem() AttachedDatabaseConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v *AttachedDatabaseConfigurationPropertiesResponse) AttachedDatabaseConfigurationPropertiesResponse {
		return *v
	}).(AttachedDatabaseConfigurationPropertiesResponseOutput)
}

// The list of databases from the clusterResourceId which are currently attached to the cluster.
func (o AttachedDatabaseConfigurationPropertiesResponsePtrOutput) AttachedDatabaseNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttachedDatabaseConfigurationPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.AttachedDatabaseNames
	}).(pulumi.StringArrayOutput)
}

// The resource id of the cluster where the databases you would like to attach reside.
func (o AttachedDatabaseConfigurationPropertiesResponsePtrOutput) ClusterResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttachedDatabaseConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterResourceId
	}).(pulumi.StringPtrOutput)
}

// The name of the database which you would like to attach, use * if you want to follow all current and future databases.
func (o AttachedDatabaseConfigurationPropertiesResponsePtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttachedDatabaseConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// The default principals modification kind
func (o AttachedDatabaseConfigurationPropertiesResponsePtrOutput) DefaultPrincipalsModificationKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttachedDatabaseConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultPrincipalsModificationKind
	}).(pulumi.StringPtrOutput)
}

// The provisioned state of the resource.
func (o AttachedDatabaseConfigurationPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttachedDatabaseConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Azure SKU definition.
type AzureSku struct {
	// The number of instances of the cluster.
	Capacity *int `pulumi:"capacity"`
	// SKU name.
	Name string `pulumi:"name"`
	// SKU tier.
	Tier string `pulumi:"tier"`
}

// AzureSkuInput is an input type that accepts AzureSkuArgs and AzureSkuOutput values.
// You can construct a concrete instance of `AzureSkuInput` via:
//
//          AzureSkuArgs{...}
type AzureSkuInput interface {
	pulumi.Input

	ToAzureSkuOutput() AzureSkuOutput
	ToAzureSkuOutputWithContext(context.Context) AzureSkuOutput
}

// Azure SKU definition.
type AzureSkuArgs struct {
	// The number of instances of the cluster.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// SKU name.
	Name pulumi.StringInput `pulumi:"name"`
	// SKU tier.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (AzureSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSku)(nil)).Elem()
}

func (i AzureSkuArgs) ToAzureSkuOutput() AzureSkuOutput {
	return i.ToAzureSkuOutputWithContext(context.Background())
}

func (i AzureSkuArgs) ToAzureSkuOutputWithContext(ctx context.Context) AzureSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSkuOutput)
}

func (i AzureSkuArgs) ToAzureSkuPtrOutput() AzureSkuPtrOutput {
	return i.ToAzureSkuPtrOutputWithContext(context.Background())
}

func (i AzureSkuArgs) ToAzureSkuPtrOutputWithContext(ctx context.Context) AzureSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSkuOutput).ToAzureSkuPtrOutputWithContext(ctx)
}

// AzureSkuPtrInput is an input type that accepts AzureSkuArgs, AzureSkuPtr and AzureSkuPtrOutput values.
// You can construct a concrete instance of `AzureSkuPtrInput` via:
//
//          AzureSkuArgs{...}
//
//  or:
//
//          nil
type AzureSkuPtrInput interface {
	pulumi.Input

	ToAzureSkuPtrOutput() AzureSkuPtrOutput
	ToAzureSkuPtrOutputWithContext(context.Context) AzureSkuPtrOutput
}

type azureSkuPtrType AzureSkuArgs

func AzureSkuPtr(v *AzureSkuArgs) AzureSkuPtrInput {
	return (*azureSkuPtrType)(v)
}

func (*azureSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSku)(nil)).Elem()
}

func (i *azureSkuPtrType) ToAzureSkuPtrOutput() AzureSkuPtrOutput {
	return i.ToAzureSkuPtrOutputWithContext(context.Background())
}

func (i *azureSkuPtrType) ToAzureSkuPtrOutputWithContext(ctx context.Context) AzureSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSkuPtrOutput)
}

// Azure SKU definition.
type AzureSkuOutput struct{ *pulumi.OutputState }

func (AzureSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSku)(nil)).Elem()
}

func (o AzureSkuOutput) ToAzureSkuOutput() AzureSkuOutput {
	return o
}

func (o AzureSkuOutput) ToAzureSkuOutputWithContext(ctx context.Context) AzureSkuOutput {
	return o
}

func (o AzureSkuOutput) ToAzureSkuPtrOutput() AzureSkuPtrOutput {
	return o.ToAzureSkuPtrOutputWithContext(context.Background())
}

func (o AzureSkuOutput) ToAzureSkuPtrOutputWithContext(ctx context.Context) AzureSkuPtrOutput {
	return o.ApplyT(func(v AzureSku) *AzureSku {
		return &v
	}).(AzureSkuPtrOutput)
}

// The number of instances of the cluster.
func (o AzureSkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureSku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// SKU name.
func (o AzureSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSku) string { return v.Name }).(pulumi.StringOutput)
}

// SKU tier.
func (o AzureSkuOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSku) string { return v.Tier }).(pulumi.StringOutput)
}

type AzureSkuPtrOutput struct{ *pulumi.OutputState }

func (AzureSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSku)(nil)).Elem()
}

func (o AzureSkuPtrOutput) ToAzureSkuPtrOutput() AzureSkuPtrOutput {
	return o
}

func (o AzureSkuPtrOutput) ToAzureSkuPtrOutputWithContext(ctx context.Context) AzureSkuPtrOutput {
	return o
}

func (o AzureSkuPtrOutput) Elem() AzureSkuOutput {
	return o.ApplyT(func(v *AzureSku) AzureSku { return *v }).(AzureSkuOutput)
}

// The number of instances of the cluster.
func (o AzureSkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureSku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// SKU name.
func (o AzureSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// SKU tier.
func (o AzureSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSku) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// Azure SKU definition.
type AzureSkuResponse struct {
	// The number of instances of the cluster.
	Capacity *int `pulumi:"capacity"`
	// SKU name.
	Name string `pulumi:"name"`
	// SKU tier.
	Tier string `pulumi:"tier"`
}

// AzureSkuResponseInput is an input type that accepts AzureSkuResponseArgs and AzureSkuResponseOutput values.
// You can construct a concrete instance of `AzureSkuResponseInput` via:
//
//          AzureSkuResponseArgs{...}
type AzureSkuResponseInput interface {
	pulumi.Input

	ToAzureSkuResponseOutput() AzureSkuResponseOutput
	ToAzureSkuResponseOutputWithContext(context.Context) AzureSkuResponseOutput
}

// Azure SKU definition.
type AzureSkuResponseArgs struct {
	// The number of instances of the cluster.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// SKU name.
	Name pulumi.StringInput `pulumi:"name"`
	// SKU tier.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (AzureSkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSkuResponse)(nil)).Elem()
}

func (i AzureSkuResponseArgs) ToAzureSkuResponseOutput() AzureSkuResponseOutput {
	return i.ToAzureSkuResponseOutputWithContext(context.Background())
}

func (i AzureSkuResponseArgs) ToAzureSkuResponseOutputWithContext(ctx context.Context) AzureSkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSkuResponseOutput)
}

func (i AzureSkuResponseArgs) ToAzureSkuResponsePtrOutput() AzureSkuResponsePtrOutput {
	return i.ToAzureSkuResponsePtrOutputWithContext(context.Background())
}

func (i AzureSkuResponseArgs) ToAzureSkuResponsePtrOutputWithContext(ctx context.Context) AzureSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSkuResponseOutput).ToAzureSkuResponsePtrOutputWithContext(ctx)
}

// AzureSkuResponsePtrInput is an input type that accepts AzureSkuResponseArgs, AzureSkuResponsePtr and AzureSkuResponsePtrOutput values.
// You can construct a concrete instance of `AzureSkuResponsePtrInput` via:
//
//          AzureSkuResponseArgs{...}
//
//  or:
//
//          nil
type AzureSkuResponsePtrInput interface {
	pulumi.Input

	ToAzureSkuResponsePtrOutput() AzureSkuResponsePtrOutput
	ToAzureSkuResponsePtrOutputWithContext(context.Context) AzureSkuResponsePtrOutput
}

type azureSkuResponsePtrType AzureSkuResponseArgs

func AzureSkuResponsePtr(v *AzureSkuResponseArgs) AzureSkuResponsePtrInput {
	return (*azureSkuResponsePtrType)(v)
}

func (*azureSkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSkuResponse)(nil)).Elem()
}

func (i *azureSkuResponsePtrType) ToAzureSkuResponsePtrOutput() AzureSkuResponsePtrOutput {
	return i.ToAzureSkuResponsePtrOutputWithContext(context.Background())
}

func (i *azureSkuResponsePtrType) ToAzureSkuResponsePtrOutputWithContext(ctx context.Context) AzureSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSkuResponsePtrOutput)
}

// Azure SKU definition.
type AzureSkuResponseOutput struct{ *pulumi.OutputState }

func (AzureSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSkuResponse)(nil)).Elem()
}

func (o AzureSkuResponseOutput) ToAzureSkuResponseOutput() AzureSkuResponseOutput {
	return o
}

func (o AzureSkuResponseOutput) ToAzureSkuResponseOutputWithContext(ctx context.Context) AzureSkuResponseOutput {
	return o
}

func (o AzureSkuResponseOutput) ToAzureSkuResponsePtrOutput() AzureSkuResponsePtrOutput {
	return o.ToAzureSkuResponsePtrOutputWithContext(context.Background())
}

func (o AzureSkuResponseOutput) ToAzureSkuResponsePtrOutputWithContext(ctx context.Context) AzureSkuResponsePtrOutput {
	return o.ApplyT(func(v AzureSkuResponse) *AzureSkuResponse {
		return &v
	}).(AzureSkuResponsePtrOutput)
}

// The number of instances of the cluster.
func (o AzureSkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureSkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// SKU name.
func (o AzureSkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// SKU tier.
func (o AzureSkuResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSkuResponse) string { return v.Tier }).(pulumi.StringOutput)
}

type AzureSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSkuResponse)(nil)).Elem()
}

func (o AzureSkuResponsePtrOutput) ToAzureSkuResponsePtrOutput() AzureSkuResponsePtrOutput {
	return o
}

func (o AzureSkuResponsePtrOutput) ToAzureSkuResponsePtrOutputWithContext(ctx context.Context) AzureSkuResponsePtrOutput {
	return o
}

func (o AzureSkuResponsePtrOutput) Elem() AzureSkuResponseOutput {
	return o.ApplyT(func(v *AzureSkuResponse) AzureSkuResponse { return *v }).(AzureSkuResponseOutput)
}

// The number of instances of the cluster.
func (o AzureSkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureSkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// SKU name.
func (o AzureSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// SKU tier.
func (o AzureSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// Class representing a Kusto cluster.
type ClusterType struct {
	// The identity of the cluster, if configured.
	Identity *IdentityResponse `pulumi:"identity"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The cluster properties.
	Properties ClusterPropertiesResponse `pulumi:"properties"`
	// The SKU of the cluster.
	Sku AzureSkuResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type string `pulumi:"type"`
	// The availability zones of the cluster.
	Zones *ZonesResponse `pulumi:"zones"`
}

// ClusterTypeInput is an input type that accepts ClusterTypeArgs and ClusterTypeOutput values.
// You can construct a concrete instance of `ClusterTypeInput` via:
//
//          ClusterTypeArgs{...}
type ClusterTypeInput interface {
	pulumi.Input

	ToClusterTypeOutput() ClusterTypeOutput
	ToClusterTypeOutputWithContext(context.Context) ClusterTypeOutput
}

// Class representing a Kusto cluster.
type ClusterTypeArgs struct {
	// The identity of the cluster, if configured.
	Identity IdentityResponsePtrInput `pulumi:"identity"`
	// The geo-location where the resource lives
	Location pulumi.StringInput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringInput `pulumi:"name"`
	// The cluster properties.
	Properties ClusterPropertiesResponseInput `pulumi:"properties"`
	// The SKU of the cluster.
	Sku AzureSkuResponseInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringInput `pulumi:"type"`
	// The availability zones of the cluster.
	Zones ZonesResponsePtrInput `pulumi:"zones"`
}

func (ClusterTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterType)(nil)).Elem()
}

func (i ClusterTypeArgs) ToClusterTypeOutput() ClusterTypeOutput {
	return i.ToClusterTypeOutputWithContext(context.Background())
}

func (i ClusterTypeArgs) ToClusterTypeOutputWithContext(ctx context.Context) ClusterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterTypeOutput)
}

// Class representing a Kusto cluster.
type ClusterTypeOutput struct{ *pulumi.OutputState }

func (ClusterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterType)(nil)).Elem()
}

func (o ClusterTypeOutput) ToClusterTypeOutput() ClusterTypeOutput {
	return o
}

func (o ClusterTypeOutput) ToClusterTypeOutputWithContext(ctx context.Context) ClusterTypeOutput {
	return o
}

// The identity of the cluster, if configured.
func (o ClusterTypeOutput) Identity() IdentityResponsePtrOutput {
	return o.ApplyT(func(v ClusterType) *IdentityResponse { return v.Identity }).(IdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o ClusterTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterType) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o ClusterTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterType) string { return v.Name }).(pulumi.StringOutput)
}

// The cluster properties.
func (o ClusterTypeOutput) Properties() ClusterPropertiesResponseOutput {
	return o.ApplyT(func(v ClusterType) ClusterPropertiesResponse { return v.Properties }).(ClusterPropertiesResponseOutput)
}

// The SKU of the cluster.
func (o ClusterTypeOutput) Sku() AzureSkuResponseOutput {
	return o.ApplyT(func(v ClusterType) AzureSkuResponse { return v.Sku }).(AzureSkuResponseOutput)
}

// Resource tags.
func (o ClusterTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
func (o ClusterTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterType) string { return v.Type }).(pulumi.StringOutput)
}

// The availability zones of the cluster.
func (o ClusterTypeOutput) Zones() ZonesResponsePtrOutput {
	return o.ApplyT(func(v ClusterType) *ZonesResponse { return v.Zones }).(ZonesResponsePtrOutput)
}

// Class representing a cluster principal assignment.
type ClusterPrincipalAssignmentType struct {
	// The name of the resource
	Name string `pulumi:"name"`
	// The cluster principal.
	Properties ClusterPrincipalPropertiesResponse `pulumi:"properties"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type string `pulumi:"type"`
}

// ClusterPrincipalAssignmentTypeInput is an input type that accepts ClusterPrincipalAssignmentTypeArgs and ClusterPrincipalAssignmentTypeOutput values.
// You can construct a concrete instance of `ClusterPrincipalAssignmentTypeInput` via:
//
//          ClusterPrincipalAssignmentTypeArgs{...}
type ClusterPrincipalAssignmentTypeInput interface {
	pulumi.Input

	ToClusterPrincipalAssignmentTypeOutput() ClusterPrincipalAssignmentTypeOutput
	ToClusterPrincipalAssignmentTypeOutputWithContext(context.Context) ClusterPrincipalAssignmentTypeOutput
}

// Class representing a cluster principal assignment.
type ClusterPrincipalAssignmentTypeArgs struct {
	// The name of the resource
	Name pulumi.StringInput `pulumi:"name"`
	// The cluster principal.
	Properties ClusterPrincipalPropertiesResponseInput `pulumi:"properties"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterPrincipalAssignmentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrincipalAssignmentType)(nil)).Elem()
}

func (i ClusterPrincipalAssignmentTypeArgs) ToClusterPrincipalAssignmentTypeOutput() ClusterPrincipalAssignmentTypeOutput {
	return i.ToClusterPrincipalAssignmentTypeOutputWithContext(context.Background())
}

func (i ClusterPrincipalAssignmentTypeArgs) ToClusterPrincipalAssignmentTypeOutputWithContext(ctx context.Context) ClusterPrincipalAssignmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrincipalAssignmentTypeOutput)
}

// Class representing a cluster principal assignment.
type ClusterPrincipalAssignmentTypeOutput struct{ *pulumi.OutputState }

func (ClusterPrincipalAssignmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrincipalAssignmentType)(nil)).Elem()
}

func (o ClusterPrincipalAssignmentTypeOutput) ToClusterPrincipalAssignmentTypeOutput() ClusterPrincipalAssignmentTypeOutput {
	return o
}

func (o ClusterPrincipalAssignmentTypeOutput) ToClusterPrincipalAssignmentTypeOutputWithContext(ctx context.Context) ClusterPrincipalAssignmentTypeOutput {
	return o
}

// The name of the resource
func (o ClusterPrincipalAssignmentTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPrincipalAssignmentType) string { return v.Name }).(pulumi.StringOutput)
}

// The cluster principal.
func (o ClusterPrincipalAssignmentTypeOutput) Properties() ClusterPrincipalPropertiesResponseOutput {
	return o.ApplyT(func(v ClusterPrincipalAssignmentType) ClusterPrincipalPropertiesResponse { return v.Properties }).(ClusterPrincipalPropertiesResponseOutput)
}

// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
func (o ClusterPrincipalAssignmentTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPrincipalAssignmentType) string { return v.Type }).(pulumi.StringOutput)
}

// A class representing cluster principal property.
type ClusterPrincipalProperties struct {
	// The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.
	PrincipalId string `pulumi:"principalId"`
	// Principal type.
	PrincipalType string `pulumi:"principalType"`
	// Cluster principal role.
	Role string `pulumi:"role"`
	// The tenant id of the principal
	TenantId *string `pulumi:"tenantId"`
}

// ClusterPrincipalPropertiesInput is an input type that accepts ClusterPrincipalPropertiesArgs and ClusterPrincipalPropertiesOutput values.
// You can construct a concrete instance of `ClusterPrincipalPropertiesInput` via:
//
//          ClusterPrincipalPropertiesArgs{...}
type ClusterPrincipalPropertiesInput interface {
	pulumi.Input

	ToClusterPrincipalPropertiesOutput() ClusterPrincipalPropertiesOutput
	ToClusterPrincipalPropertiesOutputWithContext(context.Context) ClusterPrincipalPropertiesOutput
}

// A class representing cluster principal property.
type ClusterPrincipalPropertiesArgs struct {
	// The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// Principal type.
	PrincipalType pulumi.StringInput `pulumi:"principalType"`
	// Cluster principal role.
	Role pulumi.StringInput `pulumi:"role"`
	// The tenant id of the principal
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (ClusterPrincipalPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrincipalProperties)(nil)).Elem()
}

func (i ClusterPrincipalPropertiesArgs) ToClusterPrincipalPropertiesOutput() ClusterPrincipalPropertiesOutput {
	return i.ToClusterPrincipalPropertiesOutputWithContext(context.Background())
}

func (i ClusterPrincipalPropertiesArgs) ToClusterPrincipalPropertiesOutputWithContext(ctx context.Context) ClusterPrincipalPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrincipalPropertiesOutput)
}

func (i ClusterPrincipalPropertiesArgs) ToClusterPrincipalPropertiesPtrOutput() ClusterPrincipalPropertiesPtrOutput {
	return i.ToClusterPrincipalPropertiesPtrOutputWithContext(context.Background())
}

func (i ClusterPrincipalPropertiesArgs) ToClusterPrincipalPropertiesPtrOutputWithContext(ctx context.Context) ClusterPrincipalPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrincipalPropertiesOutput).ToClusterPrincipalPropertiesPtrOutputWithContext(ctx)
}

// ClusterPrincipalPropertiesPtrInput is an input type that accepts ClusterPrincipalPropertiesArgs, ClusterPrincipalPropertiesPtr and ClusterPrincipalPropertiesPtrOutput values.
// You can construct a concrete instance of `ClusterPrincipalPropertiesPtrInput` via:
//
//          ClusterPrincipalPropertiesArgs{...}
//
//  or:
//
//          nil
type ClusterPrincipalPropertiesPtrInput interface {
	pulumi.Input

	ToClusterPrincipalPropertiesPtrOutput() ClusterPrincipalPropertiesPtrOutput
	ToClusterPrincipalPropertiesPtrOutputWithContext(context.Context) ClusterPrincipalPropertiesPtrOutput
}

type clusterPrincipalPropertiesPtrType ClusterPrincipalPropertiesArgs

func ClusterPrincipalPropertiesPtr(v *ClusterPrincipalPropertiesArgs) ClusterPrincipalPropertiesPtrInput {
	return (*clusterPrincipalPropertiesPtrType)(v)
}

func (*clusterPrincipalPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPrincipalProperties)(nil)).Elem()
}

func (i *clusterPrincipalPropertiesPtrType) ToClusterPrincipalPropertiesPtrOutput() ClusterPrincipalPropertiesPtrOutput {
	return i.ToClusterPrincipalPropertiesPtrOutputWithContext(context.Background())
}

func (i *clusterPrincipalPropertiesPtrType) ToClusterPrincipalPropertiesPtrOutputWithContext(ctx context.Context) ClusterPrincipalPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrincipalPropertiesPtrOutput)
}

// A class representing cluster principal property.
type ClusterPrincipalPropertiesOutput struct{ *pulumi.OutputState }

func (ClusterPrincipalPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrincipalProperties)(nil)).Elem()
}

func (o ClusterPrincipalPropertiesOutput) ToClusterPrincipalPropertiesOutput() ClusterPrincipalPropertiesOutput {
	return o
}

func (o ClusterPrincipalPropertiesOutput) ToClusterPrincipalPropertiesOutputWithContext(ctx context.Context) ClusterPrincipalPropertiesOutput {
	return o
}

func (o ClusterPrincipalPropertiesOutput) ToClusterPrincipalPropertiesPtrOutput() ClusterPrincipalPropertiesPtrOutput {
	return o.ToClusterPrincipalPropertiesPtrOutputWithContext(context.Background())
}

func (o ClusterPrincipalPropertiesOutput) ToClusterPrincipalPropertiesPtrOutputWithContext(ctx context.Context) ClusterPrincipalPropertiesPtrOutput {
	return o.ApplyT(func(v ClusterPrincipalProperties) *ClusterPrincipalProperties {
		return &v
	}).(ClusterPrincipalPropertiesPtrOutput)
}

// The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.
func (o ClusterPrincipalPropertiesOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPrincipalProperties) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// Principal type.
func (o ClusterPrincipalPropertiesOutput) PrincipalType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPrincipalProperties) string { return v.PrincipalType }).(pulumi.StringOutput)
}

// Cluster principal role.
func (o ClusterPrincipalPropertiesOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPrincipalProperties) string { return v.Role }).(pulumi.StringOutput)
}

// The tenant id of the principal
func (o ClusterPrincipalPropertiesOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrincipalProperties) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type ClusterPrincipalPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ClusterPrincipalPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPrincipalProperties)(nil)).Elem()
}

func (o ClusterPrincipalPropertiesPtrOutput) ToClusterPrincipalPropertiesPtrOutput() ClusterPrincipalPropertiesPtrOutput {
	return o
}

func (o ClusterPrincipalPropertiesPtrOutput) ToClusterPrincipalPropertiesPtrOutputWithContext(ctx context.Context) ClusterPrincipalPropertiesPtrOutput {
	return o
}

func (o ClusterPrincipalPropertiesPtrOutput) Elem() ClusterPrincipalPropertiesOutput {
	return o.ApplyT(func(v *ClusterPrincipalProperties) ClusterPrincipalProperties { return *v }).(ClusterPrincipalPropertiesOutput)
}

// The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.
func (o ClusterPrincipalPropertiesPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPrincipalProperties) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Principal type.
func (o ClusterPrincipalPropertiesPtrOutput) PrincipalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPrincipalProperties) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalType
	}).(pulumi.StringPtrOutput)
}

// Cluster principal role.
func (o ClusterPrincipalPropertiesPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPrincipalProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Role
	}).(pulumi.StringPtrOutput)
}

// The tenant id of the principal
func (o ClusterPrincipalPropertiesPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPrincipalProperties) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// A class representing cluster principal property.
type ClusterPrincipalPropertiesResponse struct {
	// The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.
	PrincipalId string `pulumi:"principalId"`
	// The principal name
	PrincipalName string `pulumi:"principalName"`
	// Principal type.
	PrincipalType string `pulumi:"principalType"`
	// The provisioned state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Cluster principal role.
	Role string `pulumi:"role"`
	// The tenant id of the principal
	TenantId *string `pulumi:"tenantId"`
	// The tenant name of the principal
	TenantName string `pulumi:"tenantName"`
}

// ClusterPrincipalPropertiesResponseInput is an input type that accepts ClusterPrincipalPropertiesResponseArgs and ClusterPrincipalPropertiesResponseOutput values.
// You can construct a concrete instance of `ClusterPrincipalPropertiesResponseInput` via:
//
//          ClusterPrincipalPropertiesResponseArgs{...}
type ClusterPrincipalPropertiesResponseInput interface {
	pulumi.Input

	ToClusterPrincipalPropertiesResponseOutput() ClusterPrincipalPropertiesResponseOutput
	ToClusterPrincipalPropertiesResponseOutputWithContext(context.Context) ClusterPrincipalPropertiesResponseOutput
}

// A class representing cluster principal property.
type ClusterPrincipalPropertiesResponseArgs struct {
	// The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The principal name
	PrincipalName pulumi.StringInput `pulumi:"principalName"`
	// Principal type.
	PrincipalType pulumi.StringInput `pulumi:"principalType"`
	// The provisioned state of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Cluster principal role.
	Role pulumi.StringInput `pulumi:"role"`
	// The tenant id of the principal
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The tenant name of the principal
	TenantName pulumi.StringInput `pulumi:"tenantName"`
}

func (ClusterPrincipalPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrincipalPropertiesResponse)(nil)).Elem()
}

func (i ClusterPrincipalPropertiesResponseArgs) ToClusterPrincipalPropertiesResponseOutput() ClusterPrincipalPropertiesResponseOutput {
	return i.ToClusterPrincipalPropertiesResponseOutputWithContext(context.Background())
}

func (i ClusterPrincipalPropertiesResponseArgs) ToClusterPrincipalPropertiesResponseOutputWithContext(ctx context.Context) ClusterPrincipalPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrincipalPropertiesResponseOutput)
}

func (i ClusterPrincipalPropertiesResponseArgs) ToClusterPrincipalPropertiesResponsePtrOutput() ClusterPrincipalPropertiesResponsePtrOutput {
	return i.ToClusterPrincipalPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ClusterPrincipalPropertiesResponseArgs) ToClusterPrincipalPropertiesResponsePtrOutputWithContext(ctx context.Context) ClusterPrincipalPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrincipalPropertiesResponseOutput).ToClusterPrincipalPropertiesResponsePtrOutputWithContext(ctx)
}

// ClusterPrincipalPropertiesResponsePtrInput is an input type that accepts ClusterPrincipalPropertiesResponseArgs, ClusterPrincipalPropertiesResponsePtr and ClusterPrincipalPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ClusterPrincipalPropertiesResponsePtrInput` via:
//
//          ClusterPrincipalPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ClusterPrincipalPropertiesResponsePtrInput interface {
	pulumi.Input

	ToClusterPrincipalPropertiesResponsePtrOutput() ClusterPrincipalPropertiesResponsePtrOutput
	ToClusterPrincipalPropertiesResponsePtrOutputWithContext(context.Context) ClusterPrincipalPropertiesResponsePtrOutput
}

type clusterPrincipalPropertiesResponsePtrType ClusterPrincipalPropertiesResponseArgs

func ClusterPrincipalPropertiesResponsePtr(v *ClusterPrincipalPropertiesResponseArgs) ClusterPrincipalPropertiesResponsePtrInput {
	return (*clusterPrincipalPropertiesResponsePtrType)(v)
}

func (*clusterPrincipalPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPrincipalPropertiesResponse)(nil)).Elem()
}

func (i *clusterPrincipalPropertiesResponsePtrType) ToClusterPrincipalPropertiesResponsePtrOutput() ClusterPrincipalPropertiesResponsePtrOutput {
	return i.ToClusterPrincipalPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *clusterPrincipalPropertiesResponsePtrType) ToClusterPrincipalPropertiesResponsePtrOutputWithContext(ctx context.Context) ClusterPrincipalPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrincipalPropertiesResponsePtrOutput)
}

// A class representing cluster principal property.
type ClusterPrincipalPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ClusterPrincipalPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrincipalPropertiesResponse)(nil)).Elem()
}

func (o ClusterPrincipalPropertiesResponseOutput) ToClusterPrincipalPropertiesResponseOutput() ClusterPrincipalPropertiesResponseOutput {
	return o
}

func (o ClusterPrincipalPropertiesResponseOutput) ToClusterPrincipalPropertiesResponseOutputWithContext(ctx context.Context) ClusterPrincipalPropertiesResponseOutput {
	return o
}

func (o ClusterPrincipalPropertiesResponseOutput) ToClusterPrincipalPropertiesResponsePtrOutput() ClusterPrincipalPropertiesResponsePtrOutput {
	return o.ToClusterPrincipalPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ClusterPrincipalPropertiesResponseOutput) ToClusterPrincipalPropertiesResponsePtrOutputWithContext(ctx context.Context) ClusterPrincipalPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ClusterPrincipalPropertiesResponse) *ClusterPrincipalPropertiesResponse {
		return &v
	}).(ClusterPrincipalPropertiesResponsePtrOutput)
}

// The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.
func (o ClusterPrincipalPropertiesResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPrincipalPropertiesResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The principal name
func (o ClusterPrincipalPropertiesResponseOutput) PrincipalName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPrincipalPropertiesResponse) string { return v.PrincipalName }).(pulumi.StringOutput)
}

// Principal type.
func (o ClusterPrincipalPropertiesResponseOutput) PrincipalType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPrincipalPropertiesResponse) string { return v.PrincipalType }).(pulumi.StringOutput)
}

// The provisioned state of the resource.
func (o ClusterPrincipalPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPrincipalPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Cluster principal role.
func (o ClusterPrincipalPropertiesResponseOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPrincipalPropertiesResponse) string { return v.Role }).(pulumi.StringOutput)
}

// The tenant id of the principal
func (o ClusterPrincipalPropertiesResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrincipalPropertiesResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The tenant name of the principal
func (o ClusterPrincipalPropertiesResponseOutput) TenantName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPrincipalPropertiesResponse) string { return v.TenantName }).(pulumi.StringOutput)
}

type ClusterPrincipalPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ClusterPrincipalPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPrincipalPropertiesResponse)(nil)).Elem()
}

func (o ClusterPrincipalPropertiesResponsePtrOutput) ToClusterPrincipalPropertiesResponsePtrOutput() ClusterPrincipalPropertiesResponsePtrOutput {
	return o
}

func (o ClusterPrincipalPropertiesResponsePtrOutput) ToClusterPrincipalPropertiesResponsePtrOutputWithContext(ctx context.Context) ClusterPrincipalPropertiesResponsePtrOutput {
	return o
}

func (o ClusterPrincipalPropertiesResponsePtrOutput) Elem() ClusterPrincipalPropertiesResponseOutput {
	return o.ApplyT(func(v *ClusterPrincipalPropertiesResponse) ClusterPrincipalPropertiesResponse { return *v }).(ClusterPrincipalPropertiesResponseOutput)
}

// The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.
func (o ClusterPrincipalPropertiesResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPrincipalPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The principal name
func (o ClusterPrincipalPropertiesResponsePtrOutput) PrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPrincipalPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalName
	}).(pulumi.StringPtrOutput)
}

// Principal type.
func (o ClusterPrincipalPropertiesResponsePtrOutput) PrincipalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPrincipalPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalType
	}).(pulumi.StringPtrOutput)
}

// The provisioned state of the resource.
func (o ClusterPrincipalPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPrincipalPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Cluster principal role.
func (o ClusterPrincipalPropertiesResponsePtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPrincipalPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Role
	}).(pulumi.StringPtrOutput)
}

// The tenant id of the principal
func (o ClusterPrincipalPropertiesResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPrincipalPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The tenant name of the principal
func (o ClusterPrincipalPropertiesResponsePtrOutput) TenantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPrincipalPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantName
	}).(pulumi.StringPtrOutput)
}

// Class representing the Kusto cluster properties.
type ClusterProperties struct {
	// A boolean value that indicates if the cluster's disks are encrypted.
	EnableDiskEncryption *bool `pulumi:"enableDiskEncryption"`
	// A boolean value that indicates if the streaming ingest is enabled.
	EnableStreamingIngest *bool `pulumi:"enableStreamingIngest"`
	// KeyVault properties for the cluster encryption.
	KeyVaultProperties *KeyVaultProperties `pulumi:"keyVaultProperties"`
	// Optimized auto scale definition.
	OptimizedAutoscale *OptimizedAutoscale `pulumi:"optimizedAutoscale"`
	// The cluster's external tenants.
	TrustedExternalTenants []TrustedExternalTenant `pulumi:"trustedExternalTenants"`
	// Virtual network definition.
	VirtualNetworkConfiguration *VirtualNetworkConfiguration `pulumi:"virtualNetworkConfiguration"`
}

// ClusterPropertiesInput is an input type that accepts ClusterPropertiesArgs and ClusterPropertiesOutput values.
// You can construct a concrete instance of `ClusterPropertiesInput` via:
//
//          ClusterPropertiesArgs{...}
type ClusterPropertiesInput interface {
	pulumi.Input

	ToClusterPropertiesOutput() ClusterPropertiesOutput
	ToClusterPropertiesOutputWithContext(context.Context) ClusterPropertiesOutput
}

// Class representing the Kusto cluster properties.
type ClusterPropertiesArgs struct {
	// A boolean value that indicates if the cluster's disks are encrypted.
	EnableDiskEncryption pulumi.BoolPtrInput `pulumi:"enableDiskEncryption"`
	// A boolean value that indicates if the streaming ingest is enabled.
	EnableStreamingIngest pulumi.BoolPtrInput `pulumi:"enableStreamingIngest"`
	// KeyVault properties for the cluster encryption.
	KeyVaultProperties KeyVaultPropertiesPtrInput `pulumi:"keyVaultProperties"`
	// Optimized auto scale definition.
	OptimizedAutoscale OptimizedAutoscalePtrInput `pulumi:"optimizedAutoscale"`
	// The cluster's external tenants.
	TrustedExternalTenants TrustedExternalTenantArrayInput `pulumi:"trustedExternalTenants"`
	// Virtual network definition.
	VirtualNetworkConfiguration VirtualNetworkConfigurationPtrInput `pulumi:"virtualNetworkConfiguration"`
}

func (ClusterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterProperties)(nil)).Elem()
}

func (i ClusterPropertiesArgs) ToClusterPropertiesOutput() ClusterPropertiesOutput {
	return i.ToClusterPropertiesOutputWithContext(context.Background())
}

func (i ClusterPropertiesArgs) ToClusterPropertiesOutputWithContext(ctx context.Context) ClusterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesOutput)
}

func (i ClusterPropertiesArgs) ToClusterPropertiesPtrOutput() ClusterPropertiesPtrOutput {
	return i.ToClusterPropertiesPtrOutputWithContext(context.Background())
}

func (i ClusterPropertiesArgs) ToClusterPropertiesPtrOutputWithContext(ctx context.Context) ClusterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesOutput).ToClusterPropertiesPtrOutputWithContext(ctx)
}

// ClusterPropertiesPtrInput is an input type that accepts ClusterPropertiesArgs, ClusterPropertiesPtr and ClusterPropertiesPtrOutput values.
// You can construct a concrete instance of `ClusterPropertiesPtrInput` via:
//
//          ClusterPropertiesArgs{...}
//
//  or:
//
//          nil
type ClusterPropertiesPtrInput interface {
	pulumi.Input

	ToClusterPropertiesPtrOutput() ClusterPropertiesPtrOutput
	ToClusterPropertiesPtrOutputWithContext(context.Context) ClusterPropertiesPtrOutput
}

type clusterPropertiesPtrType ClusterPropertiesArgs

func ClusterPropertiesPtr(v *ClusterPropertiesArgs) ClusterPropertiesPtrInput {
	return (*clusterPropertiesPtrType)(v)
}

func (*clusterPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterProperties)(nil)).Elem()
}

func (i *clusterPropertiesPtrType) ToClusterPropertiesPtrOutput() ClusterPropertiesPtrOutput {
	return i.ToClusterPropertiesPtrOutputWithContext(context.Background())
}

func (i *clusterPropertiesPtrType) ToClusterPropertiesPtrOutputWithContext(ctx context.Context) ClusterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesPtrOutput)
}

// Class representing the Kusto cluster properties.
type ClusterPropertiesOutput struct{ *pulumi.OutputState }

func (ClusterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterProperties)(nil)).Elem()
}

func (o ClusterPropertiesOutput) ToClusterPropertiesOutput() ClusterPropertiesOutput {
	return o
}

func (o ClusterPropertiesOutput) ToClusterPropertiesOutputWithContext(ctx context.Context) ClusterPropertiesOutput {
	return o
}

func (o ClusterPropertiesOutput) ToClusterPropertiesPtrOutput() ClusterPropertiesPtrOutput {
	return o.ToClusterPropertiesPtrOutputWithContext(context.Background())
}

func (o ClusterPropertiesOutput) ToClusterPropertiesPtrOutputWithContext(ctx context.Context) ClusterPropertiesPtrOutput {
	return o.ApplyT(func(v ClusterProperties) *ClusterProperties {
		return &v
	}).(ClusterPropertiesPtrOutput)
}

// A boolean value that indicates if the cluster's disks are encrypted.
func (o ClusterPropertiesOutput) EnableDiskEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterProperties) *bool { return v.EnableDiskEncryption }).(pulumi.BoolPtrOutput)
}

// A boolean value that indicates if the streaming ingest is enabled.
func (o ClusterPropertiesOutput) EnableStreamingIngest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterProperties) *bool { return v.EnableStreamingIngest }).(pulumi.BoolPtrOutput)
}

// KeyVault properties for the cluster encryption.
func (o ClusterPropertiesOutput) KeyVaultProperties() KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v ClusterProperties) *KeyVaultProperties { return v.KeyVaultProperties }).(KeyVaultPropertiesPtrOutput)
}

// Optimized auto scale definition.
func (o ClusterPropertiesOutput) OptimizedAutoscale() OptimizedAutoscalePtrOutput {
	return o.ApplyT(func(v ClusterProperties) *OptimizedAutoscale { return v.OptimizedAutoscale }).(OptimizedAutoscalePtrOutput)
}

// The cluster's external tenants.
func (o ClusterPropertiesOutput) TrustedExternalTenants() TrustedExternalTenantArrayOutput {
	return o.ApplyT(func(v ClusterProperties) []TrustedExternalTenant { return v.TrustedExternalTenants }).(TrustedExternalTenantArrayOutput)
}

// Virtual network definition.
func (o ClusterPropertiesOutput) VirtualNetworkConfiguration() VirtualNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v ClusterProperties) *VirtualNetworkConfiguration { return v.VirtualNetworkConfiguration }).(VirtualNetworkConfigurationPtrOutput)
}

type ClusterPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ClusterPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterProperties)(nil)).Elem()
}

func (o ClusterPropertiesPtrOutput) ToClusterPropertiesPtrOutput() ClusterPropertiesPtrOutput {
	return o
}

func (o ClusterPropertiesPtrOutput) ToClusterPropertiesPtrOutputWithContext(ctx context.Context) ClusterPropertiesPtrOutput {
	return o
}

func (o ClusterPropertiesPtrOutput) Elem() ClusterPropertiesOutput {
	return o.ApplyT(func(v *ClusterProperties) ClusterProperties { return *v }).(ClusterPropertiesOutput)
}

// A boolean value that indicates if the cluster's disks are encrypted.
func (o ClusterPropertiesPtrOutput) EnableDiskEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDiskEncryption
	}).(pulumi.BoolPtrOutput)
}

// A boolean value that indicates if the streaming ingest is enabled.
func (o ClusterPropertiesPtrOutput) EnableStreamingIngest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableStreamingIngest
	}).(pulumi.BoolPtrOutput)
}

// KeyVault properties for the cluster encryption.
func (o ClusterPropertiesPtrOutput) KeyVaultProperties() KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v *ClusterProperties) *KeyVaultProperties {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(KeyVaultPropertiesPtrOutput)
}

// Optimized auto scale definition.
func (o ClusterPropertiesPtrOutput) OptimizedAutoscale() OptimizedAutoscalePtrOutput {
	return o.ApplyT(func(v *ClusterProperties) *OptimizedAutoscale {
		if v == nil {
			return nil
		}
		return v.OptimizedAutoscale
	}).(OptimizedAutoscalePtrOutput)
}

// The cluster's external tenants.
func (o ClusterPropertiesPtrOutput) TrustedExternalTenants() TrustedExternalTenantArrayOutput {
	return o.ApplyT(func(v *ClusterProperties) []TrustedExternalTenant {
		if v == nil {
			return nil
		}
		return v.TrustedExternalTenants
	}).(TrustedExternalTenantArrayOutput)
}

// Virtual network definition.
func (o ClusterPropertiesPtrOutput) VirtualNetworkConfiguration() VirtualNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v *ClusterProperties) *VirtualNetworkConfiguration {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkConfiguration
	}).(VirtualNetworkConfigurationPtrOutput)
}

// Class representing the Kusto cluster properties.
type ClusterPropertiesResponse struct {
	// The cluster data ingestion URI.
	DataIngestionUri string `pulumi:"dataIngestionUri"`
	// A boolean value that indicates if the cluster's disks are encrypted.
	EnableDiskEncryption *bool `pulumi:"enableDiskEncryption"`
	// A boolean value that indicates if the streaming ingest is enabled.
	EnableStreamingIngest *bool `pulumi:"enableStreamingIngest"`
	// KeyVault properties for the cluster encryption.
	KeyVaultProperties *KeyVaultPropertiesResponse `pulumi:"keyVaultProperties"`
	// Optimized auto scale definition.
	OptimizedAutoscale *OptimizedAutoscaleResponse `pulumi:"optimizedAutoscale"`
	// The provisioned state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The state of the resource.
	State string `pulumi:"state"`
	// The reason for the cluster's current state.
	StateReason string `pulumi:"stateReason"`
	// The cluster's external tenants.
	TrustedExternalTenants []TrustedExternalTenantResponse `pulumi:"trustedExternalTenants"`
	// The cluster URI.
	Uri string `pulumi:"uri"`
	// Virtual network definition.
	VirtualNetworkConfiguration *VirtualNetworkConfigurationResponse `pulumi:"virtualNetworkConfiguration"`
}

// ClusterPropertiesResponseInput is an input type that accepts ClusterPropertiesResponseArgs and ClusterPropertiesResponseOutput values.
// You can construct a concrete instance of `ClusterPropertiesResponseInput` via:
//
//          ClusterPropertiesResponseArgs{...}
type ClusterPropertiesResponseInput interface {
	pulumi.Input

	ToClusterPropertiesResponseOutput() ClusterPropertiesResponseOutput
	ToClusterPropertiesResponseOutputWithContext(context.Context) ClusterPropertiesResponseOutput
}

// Class representing the Kusto cluster properties.
type ClusterPropertiesResponseArgs struct {
	// The cluster data ingestion URI.
	DataIngestionUri pulumi.StringInput `pulumi:"dataIngestionUri"`
	// A boolean value that indicates if the cluster's disks are encrypted.
	EnableDiskEncryption pulumi.BoolPtrInput `pulumi:"enableDiskEncryption"`
	// A boolean value that indicates if the streaming ingest is enabled.
	EnableStreamingIngest pulumi.BoolPtrInput `pulumi:"enableStreamingIngest"`
	// KeyVault properties for the cluster encryption.
	KeyVaultProperties KeyVaultPropertiesResponsePtrInput `pulumi:"keyVaultProperties"`
	// Optimized auto scale definition.
	OptimizedAutoscale OptimizedAutoscaleResponsePtrInput `pulumi:"optimizedAutoscale"`
	// The provisioned state of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The state of the resource.
	State pulumi.StringInput `pulumi:"state"`
	// The reason for the cluster's current state.
	StateReason pulumi.StringInput `pulumi:"stateReason"`
	// The cluster's external tenants.
	TrustedExternalTenants TrustedExternalTenantResponseArrayInput `pulumi:"trustedExternalTenants"`
	// The cluster URI.
	Uri pulumi.StringInput `pulumi:"uri"`
	// Virtual network definition.
	VirtualNetworkConfiguration VirtualNetworkConfigurationResponsePtrInput `pulumi:"virtualNetworkConfiguration"`
}

func (ClusterPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPropertiesResponse)(nil)).Elem()
}

func (i ClusterPropertiesResponseArgs) ToClusterPropertiesResponseOutput() ClusterPropertiesResponseOutput {
	return i.ToClusterPropertiesResponseOutputWithContext(context.Background())
}

func (i ClusterPropertiesResponseArgs) ToClusterPropertiesResponseOutputWithContext(ctx context.Context) ClusterPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesResponseOutput)
}

func (i ClusterPropertiesResponseArgs) ToClusterPropertiesResponsePtrOutput() ClusterPropertiesResponsePtrOutput {
	return i.ToClusterPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ClusterPropertiesResponseArgs) ToClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) ClusterPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesResponseOutput).ToClusterPropertiesResponsePtrOutputWithContext(ctx)
}

// ClusterPropertiesResponsePtrInput is an input type that accepts ClusterPropertiesResponseArgs, ClusterPropertiesResponsePtr and ClusterPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ClusterPropertiesResponsePtrInput` via:
//
//          ClusterPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ClusterPropertiesResponsePtrInput interface {
	pulumi.Input

	ToClusterPropertiesResponsePtrOutput() ClusterPropertiesResponsePtrOutput
	ToClusterPropertiesResponsePtrOutputWithContext(context.Context) ClusterPropertiesResponsePtrOutput
}

type clusterPropertiesResponsePtrType ClusterPropertiesResponseArgs

func ClusterPropertiesResponsePtr(v *ClusterPropertiesResponseArgs) ClusterPropertiesResponsePtrInput {
	return (*clusterPropertiesResponsePtrType)(v)
}

func (*clusterPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPropertiesResponse)(nil)).Elem()
}

func (i *clusterPropertiesResponsePtrType) ToClusterPropertiesResponsePtrOutput() ClusterPropertiesResponsePtrOutput {
	return i.ToClusterPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *clusterPropertiesResponsePtrType) ToClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) ClusterPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesResponsePtrOutput)
}

// Class representing the Kusto cluster properties.
type ClusterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ClusterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPropertiesResponse)(nil)).Elem()
}

func (o ClusterPropertiesResponseOutput) ToClusterPropertiesResponseOutput() ClusterPropertiesResponseOutput {
	return o
}

func (o ClusterPropertiesResponseOutput) ToClusterPropertiesResponseOutputWithContext(ctx context.Context) ClusterPropertiesResponseOutput {
	return o
}

func (o ClusterPropertiesResponseOutput) ToClusterPropertiesResponsePtrOutput() ClusterPropertiesResponsePtrOutput {
	return o.ToClusterPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ClusterPropertiesResponseOutput) ToClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) ClusterPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) *ClusterPropertiesResponse {
		return &v
	}).(ClusterPropertiesResponsePtrOutput)
}

// The cluster data ingestion URI.
func (o ClusterPropertiesResponseOutput) DataIngestionUri() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) string { return v.DataIngestionUri }).(pulumi.StringOutput)
}

// A boolean value that indicates if the cluster's disks are encrypted.
func (o ClusterPropertiesResponseOutput) EnableDiskEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) *bool { return v.EnableDiskEncryption }).(pulumi.BoolPtrOutput)
}

// A boolean value that indicates if the streaming ingest is enabled.
func (o ClusterPropertiesResponseOutput) EnableStreamingIngest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) *bool { return v.EnableStreamingIngest }).(pulumi.BoolPtrOutput)
}

// KeyVault properties for the cluster encryption.
func (o ClusterPropertiesResponseOutput) KeyVaultProperties() KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) *KeyVaultPropertiesResponse { return v.KeyVaultProperties }).(KeyVaultPropertiesResponsePtrOutput)
}

// Optimized auto scale definition.
func (o ClusterPropertiesResponseOutput) OptimizedAutoscale() OptimizedAutoscaleResponsePtrOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) *OptimizedAutoscaleResponse { return v.OptimizedAutoscale }).(OptimizedAutoscaleResponsePtrOutput)
}

// The provisioned state of the resource.
func (o ClusterPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The state of the resource.
func (o ClusterPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// The reason for the cluster's current state.
func (o ClusterPropertiesResponseOutput) StateReason() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) string { return v.StateReason }).(pulumi.StringOutput)
}

// The cluster's external tenants.
func (o ClusterPropertiesResponseOutput) TrustedExternalTenants() TrustedExternalTenantResponseArrayOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) []TrustedExternalTenantResponse { return v.TrustedExternalTenants }).(TrustedExternalTenantResponseArrayOutput)
}

// The cluster URI.
func (o ClusterPropertiesResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// Virtual network definition.
func (o ClusterPropertiesResponseOutput) VirtualNetworkConfiguration() VirtualNetworkConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) *VirtualNetworkConfigurationResponse {
		return v.VirtualNetworkConfiguration
	}).(VirtualNetworkConfigurationResponsePtrOutput)
}

type ClusterPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ClusterPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPropertiesResponse)(nil)).Elem()
}

func (o ClusterPropertiesResponsePtrOutput) ToClusterPropertiesResponsePtrOutput() ClusterPropertiesResponsePtrOutput {
	return o
}

func (o ClusterPropertiesResponsePtrOutput) ToClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) ClusterPropertiesResponsePtrOutput {
	return o
}

func (o ClusterPropertiesResponsePtrOutput) Elem() ClusterPropertiesResponseOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) ClusterPropertiesResponse { return *v }).(ClusterPropertiesResponseOutput)
}

// The cluster data ingestion URI.
func (o ClusterPropertiesResponsePtrOutput) DataIngestionUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataIngestionUri
	}).(pulumi.StringPtrOutput)
}

// A boolean value that indicates if the cluster's disks are encrypted.
func (o ClusterPropertiesResponsePtrOutput) EnableDiskEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDiskEncryption
	}).(pulumi.BoolPtrOutput)
}

// A boolean value that indicates if the streaming ingest is enabled.
func (o ClusterPropertiesResponsePtrOutput) EnableStreamingIngest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableStreamingIngest
	}).(pulumi.BoolPtrOutput)
}

// KeyVault properties for the cluster encryption.
func (o ClusterPropertiesResponsePtrOutput) KeyVaultProperties() KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) *KeyVaultPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(KeyVaultPropertiesResponsePtrOutput)
}

// Optimized auto scale definition.
func (o ClusterPropertiesResponsePtrOutput) OptimizedAutoscale() OptimizedAutoscaleResponsePtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) *OptimizedAutoscaleResponse {
		if v == nil {
			return nil
		}
		return v.OptimizedAutoscale
	}).(OptimizedAutoscaleResponsePtrOutput)
}

// The provisioned state of the resource.
func (o ClusterPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The state of the resource.
func (o ClusterPropertiesResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// The reason for the cluster's current state.
func (o ClusterPropertiesResponsePtrOutput) StateReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StateReason
	}).(pulumi.StringPtrOutput)
}

// The cluster's external tenants.
func (o ClusterPropertiesResponsePtrOutput) TrustedExternalTenants() TrustedExternalTenantResponseArrayOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) []TrustedExternalTenantResponse {
		if v == nil {
			return nil
		}
		return v.TrustedExternalTenants
	}).(TrustedExternalTenantResponseArrayOutput)
}

// The cluster URI.
func (o ClusterPropertiesResponsePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

// Virtual network definition.
func (o ClusterPropertiesResponsePtrOutput) VirtualNetworkConfiguration() VirtualNetworkConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) *VirtualNetworkConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkConfiguration
	}).(VirtualNetworkConfigurationResponsePtrOutput)
}

// Class representing an data connection.
type DataConnectionType struct {
	// Kind of the endpoint for the data connection
	Kind string `pulumi:"kind"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type string `pulumi:"type"`
}

// DataConnectionTypeInput is an input type that accepts DataConnectionTypeArgs and DataConnectionTypeOutput values.
// You can construct a concrete instance of `DataConnectionTypeInput` via:
//
//          DataConnectionTypeArgs{...}
type DataConnectionTypeInput interface {
	pulumi.Input

	ToDataConnectionTypeOutput() DataConnectionTypeOutput
	ToDataConnectionTypeOutputWithContext(context.Context) DataConnectionTypeOutput
}

// Class representing an data connection.
type DataConnectionTypeArgs struct {
	// Kind of the endpoint for the data connection
	Kind pulumi.StringInput `pulumi:"kind"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DataConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataConnectionType)(nil)).Elem()
}

func (i DataConnectionTypeArgs) ToDataConnectionTypeOutput() DataConnectionTypeOutput {
	return i.ToDataConnectionTypeOutputWithContext(context.Background())
}

func (i DataConnectionTypeArgs) ToDataConnectionTypeOutputWithContext(ctx context.Context) DataConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataConnectionTypeOutput)
}

// Class representing an data connection.
type DataConnectionTypeOutput struct{ *pulumi.OutputState }

func (DataConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataConnectionType)(nil)).Elem()
}

func (o DataConnectionTypeOutput) ToDataConnectionTypeOutput() DataConnectionTypeOutput {
	return o
}

func (o DataConnectionTypeOutput) ToDataConnectionTypeOutputWithContext(ctx context.Context) DataConnectionTypeOutput {
	return o
}

// Kind of the endpoint for the data connection
func (o DataConnectionTypeOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v DataConnectionType) string { return v.Kind }).(pulumi.StringOutput)
}

// Resource location.
func (o DataConnectionTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataConnectionType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o DataConnectionTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataConnectionType) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
func (o DataConnectionTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DataConnectionType) string { return v.Type }).(pulumi.StringOutput)
}

// Class representing a Kusto database.
type DatabaseType struct {
	// Kind of the database
	Kind string `pulumi:"kind"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type string `pulumi:"type"`
}

// DatabaseTypeInput is an input type that accepts DatabaseTypeArgs and DatabaseTypeOutput values.
// You can construct a concrete instance of `DatabaseTypeInput` via:
//
//          DatabaseTypeArgs{...}
type DatabaseTypeInput interface {
	pulumi.Input

	ToDatabaseTypeOutput() DatabaseTypeOutput
	ToDatabaseTypeOutputWithContext(context.Context) DatabaseTypeOutput
}

// Class representing a Kusto database.
type DatabaseTypeArgs struct {
	// Kind of the database
	Kind pulumi.StringInput `pulumi:"kind"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatabaseTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseType)(nil)).Elem()
}

func (i DatabaseTypeArgs) ToDatabaseTypeOutput() DatabaseTypeOutput {
	return i.ToDatabaseTypeOutputWithContext(context.Background())
}

func (i DatabaseTypeArgs) ToDatabaseTypeOutputWithContext(ctx context.Context) DatabaseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseTypeOutput)
}

// Class representing a Kusto database.
type DatabaseTypeOutput struct{ *pulumi.OutputState }

func (DatabaseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseType)(nil)).Elem()
}

func (o DatabaseTypeOutput) ToDatabaseTypeOutput() DatabaseTypeOutput {
	return o
}

func (o DatabaseTypeOutput) ToDatabaseTypeOutputWithContext(ctx context.Context) DatabaseTypeOutput {
	return o
}

// Kind of the database
func (o DatabaseTypeOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseType) string { return v.Kind }).(pulumi.StringOutput)
}

// Resource location.
func (o DatabaseTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o DatabaseTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseType) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
func (o DatabaseTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseType) string { return v.Type }).(pulumi.StringOutput)
}

// Class representing a database principal assignment.
type DatabasePrincipalAssignmentType struct {
	// The name of the resource
	Name string `pulumi:"name"`
	// The database principal.
	Properties DatabasePrincipalPropertiesResponse `pulumi:"properties"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type string `pulumi:"type"`
}

// DatabasePrincipalAssignmentTypeInput is an input type that accepts DatabasePrincipalAssignmentTypeArgs and DatabasePrincipalAssignmentTypeOutput values.
// You can construct a concrete instance of `DatabasePrincipalAssignmentTypeInput` via:
//
//          DatabasePrincipalAssignmentTypeArgs{...}
type DatabasePrincipalAssignmentTypeInput interface {
	pulumi.Input

	ToDatabasePrincipalAssignmentTypeOutput() DatabasePrincipalAssignmentTypeOutput
	ToDatabasePrincipalAssignmentTypeOutputWithContext(context.Context) DatabasePrincipalAssignmentTypeOutput
}

// Class representing a database principal assignment.
type DatabasePrincipalAssignmentTypeArgs struct {
	// The name of the resource
	Name pulumi.StringInput `pulumi:"name"`
	// The database principal.
	Properties DatabasePrincipalPropertiesResponseInput `pulumi:"properties"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatabasePrincipalAssignmentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasePrincipalAssignmentType)(nil)).Elem()
}

func (i DatabasePrincipalAssignmentTypeArgs) ToDatabasePrincipalAssignmentTypeOutput() DatabasePrincipalAssignmentTypeOutput {
	return i.ToDatabasePrincipalAssignmentTypeOutputWithContext(context.Background())
}

func (i DatabasePrincipalAssignmentTypeArgs) ToDatabasePrincipalAssignmentTypeOutputWithContext(ctx context.Context) DatabasePrincipalAssignmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasePrincipalAssignmentTypeOutput)
}

// Class representing a database principal assignment.
type DatabasePrincipalAssignmentTypeOutput struct{ *pulumi.OutputState }

func (DatabasePrincipalAssignmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasePrincipalAssignmentType)(nil)).Elem()
}

func (o DatabasePrincipalAssignmentTypeOutput) ToDatabasePrincipalAssignmentTypeOutput() DatabasePrincipalAssignmentTypeOutput {
	return o
}

func (o DatabasePrincipalAssignmentTypeOutput) ToDatabasePrincipalAssignmentTypeOutputWithContext(ctx context.Context) DatabasePrincipalAssignmentTypeOutput {
	return o
}

// The name of the resource
func (o DatabasePrincipalAssignmentTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasePrincipalAssignmentType) string { return v.Name }).(pulumi.StringOutput)
}

// The database principal.
func (o DatabasePrincipalAssignmentTypeOutput) Properties() DatabasePrincipalPropertiesResponseOutput {
	return o.ApplyT(func(v DatabasePrincipalAssignmentType) DatabasePrincipalPropertiesResponse { return v.Properties }).(DatabasePrincipalPropertiesResponseOutput)
}

// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
func (o DatabasePrincipalAssignmentTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasePrincipalAssignmentType) string { return v.Type }).(pulumi.StringOutput)
}

// A class representing database principal property.
type DatabasePrincipalProperties struct {
	// The principal ID assigned to the database principal. It can be a user email, application ID, or security group name.
	PrincipalId string `pulumi:"principalId"`
	// Principal type.
	PrincipalType string `pulumi:"principalType"`
	// Database principal role.
	Role string `pulumi:"role"`
	// The tenant id of the principal
	TenantId *string `pulumi:"tenantId"`
}

// DatabasePrincipalPropertiesInput is an input type that accepts DatabasePrincipalPropertiesArgs and DatabasePrincipalPropertiesOutput values.
// You can construct a concrete instance of `DatabasePrincipalPropertiesInput` via:
//
//          DatabasePrincipalPropertiesArgs{...}
type DatabasePrincipalPropertiesInput interface {
	pulumi.Input

	ToDatabasePrincipalPropertiesOutput() DatabasePrincipalPropertiesOutput
	ToDatabasePrincipalPropertiesOutputWithContext(context.Context) DatabasePrincipalPropertiesOutput
}

// A class representing database principal property.
type DatabasePrincipalPropertiesArgs struct {
	// The principal ID assigned to the database principal. It can be a user email, application ID, or security group name.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// Principal type.
	PrincipalType pulumi.StringInput `pulumi:"principalType"`
	// Database principal role.
	Role pulumi.StringInput `pulumi:"role"`
	// The tenant id of the principal
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (DatabasePrincipalPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasePrincipalProperties)(nil)).Elem()
}

func (i DatabasePrincipalPropertiesArgs) ToDatabasePrincipalPropertiesOutput() DatabasePrincipalPropertiesOutput {
	return i.ToDatabasePrincipalPropertiesOutputWithContext(context.Background())
}

func (i DatabasePrincipalPropertiesArgs) ToDatabasePrincipalPropertiesOutputWithContext(ctx context.Context) DatabasePrincipalPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasePrincipalPropertiesOutput)
}

func (i DatabasePrincipalPropertiesArgs) ToDatabasePrincipalPropertiesPtrOutput() DatabasePrincipalPropertiesPtrOutput {
	return i.ToDatabasePrincipalPropertiesPtrOutputWithContext(context.Background())
}

func (i DatabasePrincipalPropertiesArgs) ToDatabasePrincipalPropertiesPtrOutputWithContext(ctx context.Context) DatabasePrincipalPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasePrincipalPropertiesOutput).ToDatabasePrincipalPropertiesPtrOutputWithContext(ctx)
}

// DatabasePrincipalPropertiesPtrInput is an input type that accepts DatabasePrincipalPropertiesArgs, DatabasePrincipalPropertiesPtr and DatabasePrincipalPropertiesPtrOutput values.
// You can construct a concrete instance of `DatabasePrincipalPropertiesPtrInput` via:
//
//          DatabasePrincipalPropertiesArgs{...}
//
//  or:
//
//          nil
type DatabasePrincipalPropertiesPtrInput interface {
	pulumi.Input

	ToDatabasePrincipalPropertiesPtrOutput() DatabasePrincipalPropertiesPtrOutput
	ToDatabasePrincipalPropertiesPtrOutputWithContext(context.Context) DatabasePrincipalPropertiesPtrOutput
}

type databasePrincipalPropertiesPtrType DatabasePrincipalPropertiesArgs

func DatabasePrincipalPropertiesPtr(v *DatabasePrincipalPropertiesArgs) DatabasePrincipalPropertiesPtrInput {
	return (*databasePrincipalPropertiesPtrType)(v)
}

func (*databasePrincipalPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabasePrincipalProperties)(nil)).Elem()
}

func (i *databasePrincipalPropertiesPtrType) ToDatabasePrincipalPropertiesPtrOutput() DatabasePrincipalPropertiesPtrOutput {
	return i.ToDatabasePrincipalPropertiesPtrOutputWithContext(context.Background())
}

func (i *databasePrincipalPropertiesPtrType) ToDatabasePrincipalPropertiesPtrOutputWithContext(ctx context.Context) DatabasePrincipalPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasePrincipalPropertiesPtrOutput)
}

// A class representing database principal property.
type DatabasePrincipalPropertiesOutput struct{ *pulumi.OutputState }

func (DatabasePrincipalPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasePrincipalProperties)(nil)).Elem()
}

func (o DatabasePrincipalPropertiesOutput) ToDatabasePrincipalPropertiesOutput() DatabasePrincipalPropertiesOutput {
	return o
}

func (o DatabasePrincipalPropertiesOutput) ToDatabasePrincipalPropertiesOutputWithContext(ctx context.Context) DatabasePrincipalPropertiesOutput {
	return o
}

func (o DatabasePrincipalPropertiesOutput) ToDatabasePrincipalPropertiesPtrOutput() DatabasePrincipalPropertiesPtrOutput {
	return o.ToDatabasePrincipalPropertiesPtrOutputWithContext(context.Background())
}

func (o DatabasePrincipalPropertiesOutput) ToDatabasePrincipalPropertiesPtrOutputWithContext(ctx context.Context) DatabasePrincipalPropertiesPtrOutput {
	return o.ApplyT(func(v DatabasePrincipalProperties) *DatabasePrincipalProperties {
		return &v
	}).(DatabasePrincipalPropertiesPtrOutput)
}

// The principal ID assigned to the database principal. It can be a user email, application ID, or security group name.
func (o DatabasePrincipalPropertiesOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasePrincipalProperties) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// Principal type.
func (o DatabasePrincipalPropertiesOutput) PrincipalType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasePrincipalProperties) string { return v.PrincipalType }).(pulumi.StringOutput)
}

// Database principal role.
func (o DatabasePrincipalPropertiesOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasePrincipalProperties) string { return v.Role }).(pulumi.StringOutput)
}

// The tenant id of the principal
func (o DatabasePrincipalPropertiesOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabasePrincipalProperties) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type DatabasePrincipalPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DatabasePrincipalPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabasePrincipalProperties)(nil)).Elem()
}

func (o DatabasePrincipalPropertiesPtrOutput) ToDatabasePrincipalPropertiesPtrOutput() DatabasePrincipalPropertiesPtrOutput {
	return o
}

func (o DatabasePrincipalPropertiesPtrOutput) ToDatabasePrincipalPropertiesPtrOutputWithContext(ctx context.Context) DatabasePrincipalPropertiesPtrOutput {
	return o
}

func (o DatabasePrincipalPropertiesPtrOutput) Elem() DatabasePrincipalPropertiesOutput {
	return o.ApplyT(func(v *DatabasePrincipalProperties) DatabasePrincipalProperties { return *v }).(DatabasePrincipalPropertiesOutput)
}

// The principal ID assigned to the database principal. It can be a user email, application ID, or security group name.
func (o DatabasePrincipalPropertiesPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasePrincipalProperties) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Principal type.
func (o DatabasePrincipalPropertiesPtrOutput) PrincipalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasePrincipalProperties) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalType
	}).(pulumi.StringPtrOutput)
}

// Database principal role.
func (o DatabasePrincipalPropertiesPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasePrincipalProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Role
	}).(pulumi.StringPtrOutput)
}

// The tenant id of the principal
func (o DatabasePrincipalPropertiesPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasePrincipalProperties) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// A class representing database principal property.
type DatabasePrincipalPropertiesResponse struct {
	// The principal ID assigned to the database principal. It can be a user email, application ID, or security group name.
	PrincipalId string `pulumi:"principalId"`
	// The principal name
	PrincipalName string `pulumi:"principalName"`
	// Principal type.
	PrincipalType string `pulumi:"principalType"`
	// The provisioned state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Database principal role.
	Role string `pulumi:"role"`
	// The tenant id of the principal
	TenantId *string `pulumi:"tenantId"`
	// The tenant name of the principal
	TenantName string `pulumi:"tenantName"`
}

// DatabasePrincipalPropertiesResponseInput is an input type that accepts DatabasePrincipalPropertiesResponseArgs and DatabasePrincipalPropertiesResponseOutput values.
// You can construct a concrete instance of `DatabasePrincipalPropertiesResponseInput` via:
//
//          DatabasePrincipalPropertiesResponseArgs{...}
type DatabasePrincipalPropertiesResponseInput interface {
	pulumi.Input

	ToDatabasePrincipalPropertiesResponseOutput() DatabasePrincipalPropertiesResponseOutput
	ToDatabasePrincipalPropertiesResponseOutputWithContext(context.Context) DatabasePrincipalPropertiesResponseOutput
}

// A class representing database principal property.
type DatabasePrincipalPropertiesResponseArgs struct {
	// The principal ID assigned to the database principal. It can be a user email, application ID, or security group name.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The principal name
	PrincipalName pulumi.StringInput `pulumi:"principalName"`
	// Principal type.
	PrincipalType pulumi.StringInput `pulumi:"principalType"`
	// The provisioned state of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Database principal role.
	Role pulumi.StringInput `pulumi:"role"`
	// The tenant id of the principal
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The tenant name of the principal
	TenantName pulumi.StringInput `pulumi:"tenantName"`
}

func (DatabasePrincipalPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasePrincipalPropertiesResponse)(nil)).Elem()
}

func (i DatabasePrincipalPropertiesResponseArgs) ToDatabasePrincipalPropertiesResponseOutput() DatabasePrincipalPropertiesResponseOutput {
	return i.ToDatabasePrincipalPropertiesResponseOutputWithContext(context.Background())
}

func (i DatabasePrincipalPropertiesResponseArgs) ToDatabasePrincipalPropertiesResponseOutputWithContext(ctx context.Context) DatabasePrincipalPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasePrincipalPropertiesResponseOutput)
}

func (i DatabasePrincipalPropertiesResponseArgs) ToDatabasePrincipalPropertiesResponsePtrOutput() DatabasePrincipalPropertiesResponsePtrOutput {
	return i.ToDatabasePrincipalPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i DatabasePrincipalPropertiesResponseArgs) ToDatabasePrincipalPropertiesResponsePtrOutputWithContext(ctx context.Context) DatabasePrincipalPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasePrincipalPropertiesResponseOutput).ToDatabasePrincipalPropertiesResponsePtrOutputWithContext(ctx)
}

// DatabasePrincipalPropertiesResponsePtrInput is an input type that accepts DatabasePrincipalPropertiesResponseArgs, DatabasePrincipalPropertiesResponsePtr and DatabasePrincipalPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `DatabasePrincipalPropertiesResponsePtrInput` via:
//
//          DatabasePrincipalPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type DatabasePrincipalPropertiesResponsePtrInput interface {
	pulumi.Input

	ToDatabasePrincipalPropertiesResponsePtrOutput() DatabasePrincipalPropertiesResponsePtrOutput
	ToDatabasePrincipalPropertiesResponsePtrOutputWithContext(context.Context) DatabasePrincipalPropertiesResponsePtrOutput
}

type databasePrincipalPropertiesResponsePtrType DatabasePrincipalPropertiesResponseArgs

func DatabasePrincipalPropertiesResponsePtr(v *DatabasePrincipalPropertiesResponseArgs) DatabasePrincipalPropertiesResponsePtrInput {
	return (*databasePrincipalPropertiesResponsePtrType)(v)
}

func (*databasePrincipalPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabasePrincipalPropertiesResponse)(nil)).Elem()
}

func (i *databasePrincipalPropertiesResponsePtrType) ToDatabasePrincipalPropertiesResponsePtrOutput() DatabasePrincipalPropertiesResponsePtrOutput {
	return i.ToDatabasePrincipalPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *databasePrincipalPropertiesResponsePtrType) ToDatabasePrincipalPropertiesResponsePtrOutputWithContext(ctx context.Context) DatabasePrincipalPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasePrincipalPropertiesResponsePtrOutput)
}

// A class representing database principal property.
type DatabasePrincipalPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DatabasePrincipalPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasePrincipalPropertiesResponse)(nil)).Elem()
}

func (o DatabasePrincipalPropertiesResponseOutput) ToDatabasePrincipalPropertiesResponseOutput() DatabasePrincipalPropertiesResponseOutput {
	return o
}

func (o DatabasePrincipalPropertiesResponseOutput) ToDatabasePrincipalPropertiesResponseOutputWithContext(ctx context.Context) DatabasePrincipalPropertiesResponseOutput {
	return o
}

func (o DatabasePrincipalPropertiesResponseOutput) ToDatabasePrincipalPropertiesResponsePtrOutput() DatabasePrincipalPropertiesResponsePtrOutput {
	return o.ToDatabasePrincipalPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o DatabasePrincipalPropertiesResponseOutput) ToDatabasePrincipalPropertiesResponsePtrOutputWithContext(ctx context.Context) DatabasePrincipalPropertiesResponsePtrOutput {
	return o.ApplyT(func(v DatabasePrincipalPropertiesResponse) *DatabasePrincipalPropertiesResponse {
		return &v
	}).(DatabasePrincipalPropertiesResponsePtrOutput)
}

// The principal ID assigned to the database principal. It can be a user email, application ID, or security group name.
func (o DatabasePrincipalPropertiesResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasePrincipalPropertiesResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The principal name
func (o DatabasePrincipalPropertiesResponseOutput) PrincipalName() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasePrincipalPropertiesResponse) string { return v.PrincipalName }).(pulumi.StringOutput)
}

// Principal type.
func (o DatabasePrincipalPropertiesResponseOutput) PrincipalType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasePrincipalPropertiesResponse) string { return v.PrincipalType }).(pulumi.StringOutput)
}

// The provisioned state of the resource.
func (o DatabasePrincipalPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasePrincipalPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Database principal role.
func (o DatabasePrincipalPropertiesResponseOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasePrincipalPropertiesResponse) string { return v.Role }).(pulumi.StringOutput)
}

// The tenant id of the principal
func (o DatabasePrincipalPropertiesResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabasePrincipalPropertiesResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The tenant name of the principal
func (o DatabasePrincipalPropertiesResponseOutput) TenantName() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasePrincipalPropertiesResponse) string { return v.TenantName }).(pulumi.StringOutput)
}

type DatabasePrincipalPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DatabasePrincipalPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabasePrincipalPropertiesResponse)(nil)).Elem()
}

func (o DatabasePrincipalPropertiesResponsePtrOutput) ToDatabasePrincipalPropertiesResponsePtrOutput() DatabasePrincipalPropertiesResponsePtrOutput {
	return o
}

func (o DatabasePrincipalPropertiesResponsePtrOutput) ToDatabasePrincipalPropertiesResponsePtrOutputWithContext(ctx context.Context) DatabasePrincipalPropertiesResponsePtrOutput {
	return o
}

func (o DatabasePrincipalPropertiesResponsePtrOutput) Elem() DatabasePrincipalPropertiesResponseOutput {
	return o.ApplyT(func(v *DatabasePrincipalPropertiesResponse) DatabasePrincipalPropertiesResponse { return *v }).(DatabasePrincipalPropertiesResponseOutput)
}

// The principal ID assigned to the database principal. It can be a user email, application ID, or security group name.
func (o DatabasePrincipalPropertiesResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasePrincipalPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The principal name
func (o DatabasePrincipalPropertiesResponsePtrOutput) PrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasePrincipalPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalName
	}).(pulumi.StringPtrOutput)
}

// Principal type.
func (o DatabasePrincipalPropertiesResponsePtrOutput) PrincipalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasePrincipalPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalType
	}).(pulumi.StringPtrOutput)
}

// The provisioned state of the resource.
func (o DatabasePrincipalPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasePrincipalPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Database principal role.
func (o DatabasePrincipalPropertiesResponsePtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasePrincipalPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Role
	}).(pulumi.StringPtrOutput)
}

// The tenant id of the principal
func (o DatabasePrincipalPropertiesResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasePrincipalPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The tenant name of the principal
func (o DatabasePrincipalPropertiesResponsePtrOutput) TenantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasePrincipalPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantName
	}).(pulumi.StringPtrOutput)
}

// A class representing database principal entity.
type DatabasePrincipalResponse struct {
	// Application id - relevant only for application principal type.
	AppId *string `pulumi:"appId"`
	// Database principal email if exists.
	Email *string `pulumi:"email"`
	// Database principal fully qualified name.
	Fqn *string `pulumi:"fqn"`
	// Database principal name.
	Name string `pulumi:"name"`
	// Database principal role.
	Role string `pulumi:"role"`
	// The tenant name of the principal
	TenantName string `pulumi:"tenantName"`
	// Database principal type.
	Type string `pulumi:"type"`
}

// DatabasePrincipalResponseInput is an input type that accepts DatabasePrincipalResponseArgs and DatabasePrincipalResponseOutput values.
// You can construct a concrete instance of `DatabasePrincipalResponseInput` via:
//
//          DatabasePrincipalResponseArgs{...}
type DatabasePrincipalResponseInput interface {
	pulumi.Input

	ToDatabasePrincipalResponseOutput() DatabasePrincipalResponseOutput
	ToDatabasePrincipalResponseOutputWithContext(context.Context) DatabasePrincipalResponseOutput
}

// A class representing database principal entity.
type DatabasePrincipalResponseArgs struct {
	// Application id - relevant only for application principal type.
	AppId pulumi.StringPtrInput `pulumi:"appId"`
	// Database principal email if exists.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// Database principal fully qualified name.
	Fqn pulumi.StringPtrInput `pulumi:"fqn"`
	// Database principal name.
	Name pulumi.StringInput `pulumi:"name"`
	// Database principal role.
	Role pulumi.StringInput `pulumi:"role"`
	// The tenant name of the principal
	TenantName pulumi.StringInput `pulumi:"tenantName"`
	// Database principal type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatabasePrincipalResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasePrincipalResponse)(nil)).Elem()
}

func (i DatabasePrincipalResponseArgs) ToDatabasePrincipalResponseOutput() DatabasePrincipalResponseOutput {
	return i.ToDatabasePrincipalResponseOutputWithContext(context.Background())
}

func (i DatabasePrincipalResponseArgs) ToDatabasePrincipalResponseOutputWithContext(ctx context.Context) DatabasePrincipalResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasePrincipalResponseOutput)
}

// DatabasePrincipalResponseArrayInput is an input type that accepts DatabasePrincipalResponseArray and DatabasePrincipalResponseArrayOutput values.
// You can construct a concrete instance of `DatabasePrincipalResponseArrayInput` via:
//
//          DatabasePrincipalResponseArray{ DatabasePrincipalResponseArgs{...} }
type DatabasePrincipalResponseArrayInput interface {
	pulumi.Input

	ToDatabasePrincipalResponseArrayOutput() DatabasePrincipalResponseArrayOutput
	ToDatabasePrincipalResponseArrayOutputWithContext(context.Context) DatabasePrincipalResponseArrayOutput
}

type DatabasePrincipalResponseArray []DatabasePrincipalResponseInput

func (DatabasePrincipalResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabasePrincipalResponse)(nil)).Elem()
}

func (i DatabasePrincipalResponseArray) ToDatabasePrincipalResponseArrayOutput() DatabasePrincipalResponseArrayOutput {
	return i.ToDatabasePrincipalResponseArrayOutputWithContext(context.Background())
}

func (i DatabasePrincipalResponseArray) ToDatabasePrincipalResponseArrayOutputWithContext(ctx context.Context) DatabasePrincipalResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasePrincipalResponseArrayOutput)
}

// A class representing database principal entity.
type DatabasePrincipalResponseOutput struct{ *pulumi.OutputState }

func (DatabasePrincipalResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasePrincipalResponse)(nil)).Elem()
}

func (o DatabasePrincipalResponseOutput) ToDatabasePrincipalResponseOutput() DatabasePrincipalResponseOutput {
	return o
}

func (o DatabasePrincipalResponseOutput) ToDatabasePrincipalResponseOutputWithContext(ctx context.Context) DatabasePrincipalResponseOutput {
	return o
}

// Application id - relevant only for application principal type.
func (o DatabasePrincipalResponseOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabasePrincipalResponse) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// Database principal email if exists.
func (o DatabasePrincipalResponseOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabasePrincipalResponse) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Database principal fully qualified name.
func (o DatabasePrincipalResponseOutput) Fqn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabasePrincipalResponse) *string { return v.Fqn }).(pulumi.StringPtrOutput)
}

// Database principal name.
func (o DatabasePrincipalResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasePrincipalResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Database principal role.
func (o DatabasePrincipalResponseOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasePrincipalResponse) string { return v.Role }).(pulumi.StringOutput)
}

// The tenant name of the principal
func (o DatabasePrincipalResponseOutput) TenantName() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasePrincipalResponse) string { return v.TenantName }).(pulumi.StringOutput)
}

// Database principal type.
func (o DatabasePrincipalResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasePrincipalResponse) string { return v.Type }).(pulumi.StringOutput)
}

type DatabasePrincipalResponseArrayOutput struct{ *pulumi.OutputState }

func (DatabasePrincipalResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabasePrincipalResponse)(nil)).Elem()
}

func (o DatabasePrincipalResponseArrayOutput) ToDatabasePrincipalResponseArrayOutput() DatabasePrincipalResponseArrayOutput {
	return o
}

func (o DatabasePrincipalResponseArrayOutput) ToDatabasePrincipalResponseArrayOutputWithContext(ctx context.Context) DatabasePrincipalResponseArrayOutput {
	return o
}

func (o DatabasePrincipalResponseArrayOutput) Index(i pulumi.IntInput) DatabasePrincipalResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabasePrincipalResponse {
		return vs[0].([]DatabasePrincipalResponse)[vs[1].(int)]
	}).(DatabasePrincipalResponseOutput)
}

// A class representing follower database request.
type FollowerDatabaseDefinitionResponse struct {
	// Resource name of the attached database configuration in the follower cluster.
	AttachedDatabaseConfigurationName string `pulumi:"attachedDatabaseConfigurationName"`
	// Resource id of the cluster that follows a database owned by this cluster.
	ClusterResourceId string `pulumi:"clusterResourceId"`
	// The database name owned by this cluster that was followed. * in case following all databases.
	DatabaseName string `pulumi:"databaseName"`
}

// FollowerDatabaseDefinitionResponseInput is an input type that accepts FollowerDatabaseDefinitionResponseArgs and FollowerDatabaseDefinitionResponseOutput values.
// You can construct a concrete instance of `FollowerDatabaseDefinitionResponseInput` via:
//
//          FollowerDatabaseDefinitionResponseArgs{...}
type FollowerDatabaseDefinitionResponseInput interface {
	pulumi.Input

	ToFollowerDatabaseDefinitionResponseOutput() FollowerDatabaseDefinitionResponseOutput
	ToFollowerDatabaseDefinitionResponseOutputWithContext(context.Context) FollowerDatabaseDefinitionResponseOutput
}

// A class representing follower database request.
type FollowerDatabaseDefinitionResponseArgs struct {
	// Resource name of the attached database configuration in the follower cluster.
	AttachedDatabaseConfigurationName pulumi.StringInput `pulumi:"attachedDatabaseConfigurationName"`
	// Resource id of the cluster that follows a database owned by this cluster.
	ClusterResourceId pulumi.StringInput `pulumi:"clusterResourceId"`
	// The database name owned by this cluster that was followed. * in case following all databases.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
}

func (FollowerDatabaseDefinitionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FollowerDatabaseDefinitionResponse)(nil)).Elem()
}

func (i FollowerDatabaseDefinitionResponseArgs) ToFollowerDatabaseDefinitionResponseOutput() FollowerDatabaseDefinitionResponseOutput {
	return i.ToFollowerDatabaseDefinitionResponseOutputWithContext(context.Background())
}

func (i FollowerDatabaseDefinitionResponseArgs) ToFollowerDatabaseDefinitionResponseOutputWithContext(ctx context.Context) FollowerDatabaseDefinitionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FollowerDatabaseDefinitionResponseOutput)
}

// FollowerDatabaseDefinitionResponseArrayInput is an input type that accepts FollowerDatabaseDefinitionResponseArray and FollowerDatabaseDefinitionResponseArrayOutput values.
// You can construct a concrete instance of `FollowerDatabaseDefinitionResponseArrayInput` via:
//
//          FollowerDatabaseDefinitionResponseArray{ FollowerDatabaseDefinitionResponseArgs{...} }
type FollowerDatabaseDefinitionResponseArrayInput interface {
	pulumi.Input

	ToFollowerDatabaseDefinitionResponseArrayOutput() FollowerDatabaseDefinitionResponseArrayOutput
	ToFollowerDatabaseDefinitionResponseArrayOutputWithContext(context.Context) FollowerDatabaseDefinitionResponseArrayOutput
}

type FollowerDatabaseDefinitionResponseArray []FollowerDatabaseDefinitionResponseInput

func (FollowerDatabaseDefinitionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FollowerDatabaseDefinitionResponse)(nil)).Elem()
}

func (i FollowerDatabaseDefinitionResponseArray) ToFollowerDatabaseDefinitionResponseArrayOutput() FollowerDatabaseDefinitionResponseArrayOutput {
	return i.ToFollowerDatabaseDefinitionResponseArrayOutputWithContext(context.Background())
}

func (i FollowerDatabaseDefinitionResponseArray) ToFollowerDatabaseDefinitionResponseArrayOutputWithContext(ctx context.Context) FollowerDatabaseDefinitionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FollowerDatabaseDefinitionResponseArrayOutput)
}

// A class representing follower database request.
type FollowerDatabaseDefinitionResponseOutput struct{ *pulumi.OutputState }

func (FollowerDatabaseDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FollowerDatabaseDefinitionResponse)(nil)).Elem()
}

func (o FollowerDatabaseDefinitionResponseOutput) ToFollowerDatabaseDefinitionResponseOutput() FollowerDatabaseDefinitionResponseOutput {
	return o
}

func (o FollowerDatabaseDefinitionResponseOutput) ToFollowerDatabaseDefinitionResponseOutputWithContext(ctx context.Context) FollowerDatabaseDefinitionResponseOutput {
	return o
}

// Resource name of the attached database configuration in the follower cluster.
func (o FollowerDatabaseDefinitionResponseOutput) AttachedDatabaseConfigurationName() pulumi.StringOutput {
	return o.ApplyT(func(v FollowerDatabaseDefinitionResponse) string { return v.AttachedDatabaseConfigurationName }).(pulumi.StringOutput)
}

// Resource id of the cluster that follows a database owned by this cluster.
func (o FollowerDatabaseDefinitionResponseOutput) ClusterResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v FollowerDatabaseDefinitionResponse) string { return v.ClusterResourceId }).(pulumi.StringOutput)
}

// The database name owned by this cluster that was followed. * in case following all databases.
func (o FollowerDatabaseDefinitionResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v FollowerDatabaseDefinitionResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

type FollowerDatabaseDefinitionResponseArrayOutput struct{ *pulumi.OutputState }

func (FollowerDatabaseDefinitionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FollowerDatabaseDefinitionResponse)(nil)).Elem()
}

func (o FollowerDatabaseDefinitionResponseArrayOutput) ToFollowerDatabaseDefinitionResponseArrayOutput() FollowerDatabaseDefinitionResponseArrayOutput {
	return o
}

func (o FollowerDatabaseDefinitionResponseArrayOutput) ToFollowerDatabaseDefinitionResponseArrayOutputWithContext(ctx context.Context) FollowerDatabaseDefinitionResponseArrayOutput {
	return o
}

func (o FollowerDatabaseDefinitionResponseArrayOutput) Index(i pulumi.IntInput) FollowerDatabaseDefinitionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FollowerDatabaseDefinitionResponse {
		return vs[0].([]FollowerDatabaseDefinitionResponse)[vs[1].(int)]
	}).(FollowerDatabaseDefinitionResponseOutput)
}

// Identity for the resource.
type Identity struct {
	// The identity type.
	Type string `pulumi:"type"`
	// The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]string `pulumi:"userAssignedIdentities"`
}

// IdentityInput is an input type that accepts IdentityArgs and IdentityOutput values.
// You can construct a concrete instance of `IdentityInput` via:
//
//          IdentityArgs{...}
type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(context.Context) IdentityOutput
}

// Identity for the resource.
type IdentityArgs struct {
	// The identity type.
	Type pulumi.StringInput `pulumi:"type"`
	// The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities pulumi.StringMapInput `pulumi:"userAssignedIdentities"`
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (i IdentityArgs) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

func (i IdentityArgs) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput).ToIdentityPtrOutputWithContext(ctx)
}

// IdentityPtrInput is an input type that accepts IdentityArgs, IdentityPtr and IdentityPtrOutput values.
// You can construct a concrete instance of `IdentityPtrInput` via:
//
//          IdentityArgs{...}
//
//  or:
//
//          nil
type IdentityPtrInput interface {
	pulumi.Input

	ToIdentityPtrOutput() IdentityPtrOutput
	ToIdentityPtrOutputWithContext(context.Context) IdentityPtrOutput
}

type identityPtrType IdentityArgs

func IdentityPtr(v *IdentityArgs) IdentityPtrInput {
	return (*identityPtrType)(v)
}

func (*identityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *identityPtrType) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i *identityPtrType) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPtrOutput)
}

// Identity for the resource.
type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o.ToIdentityPtrOutputWithContext(context.Background())
}

func (o IdentityOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o.ApplyT(func(v Identity) *Identity {
		return &v
	}).(IdentityPtrOutput)
}

// The identity type.
func (o IdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v Identity) string { return v.Type }).(pulumi.StringOutput)
}

// The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityOutput) UserAssignedIdentities() pulumi.StringMapOutput {
	return o.ApplyT(func(v Identity) map[string]string { return v.UserAssignedIdentities }).(pulumi.StringMapOutput)
}

type IdentityPtrOutput struct{ *pulumi.OutputState }

func (IdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityPtrOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) Elem() IdentityOutput {
	return o.ApplyT(func(v *Identity) Identity { return *v }).(IdentityOutput)
}

// The identity type.
func (o IdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityPtrOutput) UserAssignedIdentities() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Identity) map[string]string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringMapOutput)
}

// Identity for the resource.
type IdentityResponse struct {
	// The principal ID of resource identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId string `pulumi:"tenantId"`
	// The identity type.
	Type string `pulumi:"type"`
	// The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]string `pulumi:"userAssignedIdentities"`
}

// IdentityResponseInput is an input type that accepts IdentityResponseArgs and IdentityResponseOutput values.
// You can construct a concrete instance of `IdentityResponseInput` via:
//
//          IdentityResponseArgs{...}
type IdentityResponseInput interface {
	pulumi.Input

	ToIdentityResponseOutput() IdentityResponseOutput
	ToIdentityResponseOutputWithContext(context.Context) IdentityResponseOutput
}

// Identity for the resource.
type IdentityResponseArgs struct {
	// The principal ID of resource identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The identity type.
	Type pulumi.StringInput `pulumi:"type"`
	// The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities pulumi.StringMapInput `pulumi:"userAssignedIdentities"`
}

func (IdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (i IdentityResponseArgs) ToIdentityResponseOutput() IdentityResponseOutput {
	return i.ToIdentityResponseOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput)
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput).ToIdentityResponsePtrOutputWithContext(ctx)
}

// IdentityResponsePtrInput is an input type that accepts IdentityResponseArgs, IdentityResponsePtr and IdentityResponsePtrOutput values.
// You can construct a concrete instance of `IdentityResponsePtrInput` via:
//
//          IdentityResponseArgs{...}
//
//  or:
//
//          nil
type IdentityResponsePtrInput interface {
	pulumi.Input

	ToIdentityResponsePtrOutput() IdentityResponsePtrOutput
	ToIdentityResponsePtrOutputWithContext(context.Context) IdentityResponsePtrOutput
}

type identityResponsePtrType IdentityResponseArgs

func IdentityResponsePtr(v *IdentityResponseArgs) IdentityResponsePtrInput {
	return (*identityResponsePtrType)(v)
}

func (*identityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponsePtrOutput)
}

// Identity for the resource.
type IdentityResponseOutput struct{ *pulumi.OutputState }

func (IdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (o IdentityResponseOutput) ToIdentityResponseOutput() IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o.ApplyT(func(v IdentityResponse) *IdentityResponse {
		return &v
	}).(IdentityResponsePtrOutput)
}

// The principal ID of resource identity.
func (o IdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of resource.
func (o IdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type.
func (o IdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityResponseOutput) UserAssignedIdentities() pulumi.StringMapOutput {
	return o.ApplyT(func(v IdentityResponse) map[string]string { return v.UserAssignedIdentities }).(pulumi.StringMapOutput)
}

type IdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) Elem() IdentityResponseOutput {
	return o.ApplyT(func(v *IdentityResponse) IdentityResponse { return *v }).(IdentityResponseOutput)
}

// The principal ID of resource identity.
func (o IdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityResponsePtrOutput) UserAssignedIdentities() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IdentityResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringMapOutput)
}

// Properties of the key vault.
type KeyVaultProperties struct {
	// The name of the key vault key.
	KeyName string `pulumi:"keyName"`
	// The Uri of the key vault.
	KeyVaultUri string `pulumi:"keyVaultUri"`
	// The version of the key vault key.
	KeyVersion string `pulumi:"keyVersion"`
}

// KeyVaultPropertiesInput is an input type that accepts KeyVaultPropertiesArgs and KeyVaultPropertiesOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesInput` via:
//
//          KeyVaultPropertiesArgs{...}
type KeyVaultPropertiesInput interface {
	pulumi.Input

	ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput
	ToKeyVaultPropertiesOutputWithContext(context.Context) KeyVaultPropertiesOutput
}

// Properties of the key vault.
type KeyVaultPropertiesArgs struct {
	// The name of the key vault key.
	KeyName pulumi.StringInput `pulumi:"keyName"`
	// The Uri of the key vault.
	KeyVaultUri pulumi.StringInput `pulumi:"keyVaultUri"`
	// The version of the key vault key.
	KeyVersion pulumi.StringInput `pulumi:"keyVersion"`
}

func (KeyVaultPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultProperties)(nil)).Elem()
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput {
	return i.ToKeyVaultPropertiesOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesOutputWithContext(ctx context.Context) KeyVaultPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesOutput)
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return i.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesOutput).ToKeyVaultPropertiesPtrOutputWithContext(ctx)
}

// KeyVaultPropertiesPtrInput is an input type that accepts KeyVaultPropertiesArgs, KeyVaultPropertiesPtr and KeyVaultPropertiesPtrOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesPtrInput` via:
//
//          KeyVaultPropertiesArgs{...}
//
//  or:
//
//          nil
type KeyVaultPropertiesPtrInput interface {
	pulumi.Input

	ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput
	ToKeyVaultPropertiesPtrOutputWithContext(context.Context) KeyVaultPropertiesPtrOutput
}

type keyVaultPropertiesPtrType KeyVaultPropertiesArgs

func KeyVaultPropertiesPtr(v *KeyVaultPropertiesArgs) KeyVaultPropertiesPtrInput {
	return (*keyVaultPropertiesPtrType)(v)
}

func (*keyVaultPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultProperties)(nil)).Elem()
}

func (i *keyVaultPropertiesPtrType) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return i.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i *keyVaultPropertiesPtrType) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesPtrOutput)
}

// Properties of the key vault.
type KeyVaultPropertiesOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultProperties)(nil)).Elem()
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput {
	return o
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesOutputWithContext(ctx context.Context) KeyVaultPropertiesOutput {
	return o
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return o.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *KeyVaultProperties {
		return &v
	}).(KeyVaultPropertiesPtrOutput)
}

// The name of the key vault key.
func (o KeyVaultPropertiesOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultProperties) string { return v.KeyName }).(pulumi.StringOutput)
}

// The Uri of the key vault.
func (o KeyVaultPropertiesOutput) KeyVaultUri() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultProperties) string { return v.KeyVaultUri }).(pulumi.StringOutput)
}

// The version of the key vault key.
func (o KeyVaultPropertiesOutput) KeyVersion() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultProperties) string { return v.KeyVersion }).(pulumi.StringOutput)
}

type KeyVaultPropertiesPtrOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultProperties)(nil)).Elem()
}

func (o KeyVaultPropertiesPtrOutput) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return o
}

func (o KeyVaultPropertiesPtrOutput) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return o
}

func (o KeyVaultPropertiesPtrOutput) Elem() KeyVaultPropertiesOutput {
	return o.ApplyT(func(v *KeyVaultProperties) KeyVaultProperties { return *v }).(KeyVaultPropertiesOutput)
}

// The name of the key vault key.
func (o KeyVaultPropertiesPtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return &v.KeyName
	}).(pulumi.StringPtrOutput)
}

// The Uri of the key vault.
func (o KeyVaultPropertiesPtrOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultUri
	}).(pulumi.StringPtrOutput)
}

// The version of the key vault key.
func (o KeyVaultPropertiesPtrOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVersion
	}).(pulumi.StringPtrOutput)
}

// Properties of the key vault.
type KeyVaultPropertiesResponse struct {
	// The name of the key vault key.
	KeyName string `pulumi:"keyName"`
	// The Uri of the key vault.
	KeyVaultUri string `pulumi:"keyVaultUri"`
	// The version of the key vault key.
	KeyVersion string `pulumi:"keyVersion"`
}

// KeyVaultPropertiesResponseInput is an input type that accepts KeyVaultPropertiesResponseArgs and KeyVaultPropertiesResponseOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesResponseInput` via:
//
//          KeyVaultPropertiesResponseArgs{...}
type KeyVaultPropertiesResponseInput interface {
	pulumi.Input

	ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput
	ToKeyVaultPropertiesResponseOutputWithContext(context.Context) KeyVaultPropertiesResponseOutput
}

// Properties of the key vault.
type KeyVaultPropertiesResponseArgs struct {
	// The name of the key vault key.
	KeyName pulumi.StringInput `pulumi:"keyName"`
	// The Uri of the key vault.
	KeyVaultUri pulumi.StringInput `pulumi:"keyVaultUri"`
	// The version of the key vault key.
	KeyVersion pulumi.StringInput `pulumi:"keyVersion"`
}

func (KeyVaultPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultPropertiesResponse)(nil)).Elem()
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput {
	return i.ToKeyVaultPropertiesResponseOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) KeyVaultPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesResponseOutput)
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return i.ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesResponseArgs) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesResponseOutput).ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx)
}

// KeyVaultPropertiesResponsePtrInput is an input type that accepts KeyVaultPropertiesResponseArgs, KeyVaultPropertiesResponsePtr and KeyVaultPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesResponsePtrInput` via:
//
//          KeyVaultPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type KeyVaultPropertiesResponsePtrInput interface {
	pulumi.Input

	ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput
	ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Context) KeyVaultPropertiesResponsePtrOutput
}

type keyVaultPropertiesResponsePtrType KeyVaultPropertiesResponseArgs

func KeyVaultPropertiesResponsePtr(v *KeyVaultPropertiesResponseArgs) KeyVaultPropertiesResponsePtrInput {
	return (*keyVaultPropertiesResponsePtrType)(v)
}

func (*keyVaultPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultPropertiesResponse)(nil)).Elem()
}

func (i *keyVaultPropertiesResponsePtrType) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return i.ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *keyVaultPropertiesResponsePtrType) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesResponsePtrOutput)
}

// Properties of the key vault.
type KeyVaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput {
	return o
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) KeyVaultPropertiesResponseOutput {
	return o
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return o.ToKeyVaultPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *KeyVaultPropertiesResponse {
		return &v
	}).(KeyVaultPropertiesResponsePtrOutput)
}

// The name of the key vault key.
func (o KeyVaultPropertiesResponseOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) string { return v.KeyName }).(pulumi.StringOutput)
}

// The Uri of the key vault.
func (o KeyVaultPropertiesResponseOutput) KeyVaultUri() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) string { return v.KeyVaultUri }).(pulumi.StringOutput)
}

// The version of the key vault key.
func (o KeyVaultPropertiesResponseOutput) KeyVersion() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) string { return v.KeyVersion }).(pulumi.StringOutput)
}

type KeyVaultPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesResponsePtrOutput) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o KeyVaultPropertiesResponsePtrOutput) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o KeyVaultPropertiesResponsePtrOutput) Elem() KeyVaultPropertiesResponseOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) KeyVaultPropertiesResponse { return *v }).(KeyVaultPropertiesResponseOutput)
}

// The name of the key vault key.
func (o KeyVaultPropertiesResponsePtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeyName
	}).(pulumi.StringPtrOutput)
}

// The Uri of the key vault.
func (o KeyVaultPropertiesResponsePtrOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultUri
	}).(pulumi.StringPtrOutput)
}

// The version of the key vault key.
func (o KeyVaultPropertiesResponsePtrOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVersion
	}).(pulumi.StringPtrOutput)
}

// A class that contains the optimized auto scale definition.
type OptimizedAutoscale struct {
	// A boolean value that indicate if the optimized autoscale feature is enabled or not.
	IsEnabled bool `pulumi:"isEnabled"`
	// Maximum allowed instances count.
	Maximum int `pulumi:"maximum"`
	// Minimum allowed instances count.
	Minimum int `pulumi:"minimum"`
	// The version of the template defined, for instance 1.
	Version int `pulumi:"version"`
}

// OptimizedAutoscaleInput is an input type that accepts OptimizedAutoscaleArgs and OptimizedAutoscaleOutput values.
// You can construct a concrete instance of `OptimizedAutoscaleInput` via:
//
//          OptimizedAutoscaleArgs{...}
type OptimizedAutoscaleInput interface {
	pulumi.Input

	ToOptimizedAutoscaleOutput() OptimizedAutoscaleOutput
	ToOptimizedAutoscaleOutputWithContext(context.Context) OptimizedAutoscaleOutput
}

// A class that contains the optimized auto scale definition.
type OptimizedAutoscaleArgs struct {
	// A boolean value that indicate if the optimized autoscale feature is enabled or not.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Maximum allowed instances count.
	Maximum pulumi.IntInput `pulumi:"maximum"`
	// Minimum allowed instances count.
	Minimum pulumi.IntInput `pulumi:"minimum"`
	// The version of the template defined, for instance 1.
	Version pulumi.IntInput `pulumi:"version"`
}

func (OptimizedAutoscaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OptimizedAutoscale)(nil)).Elem()
}

func (i OptimizedAutoscaleArgs) ToOptimizedAutoscaleOutput() OptimizedAutoscaleOutput {
	return i.ToOptimizedAutoscaleOutputWithContext(context.Background())
}

func (i OptimizedAutoscaleArgs) ToOptimizedAutoscaleOutputWithContext(ctx context.Context) OptimizedAutoscaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptimizedAutoscaleOutput)
}

func (i OptimizedAutoscaleArgs) ToOptimizedAutoscalePtrOutput() OptimizedAutoscalePtrOutput {
	return i.ToOptimizedAutoscalePtrOutputWithContext(context.Background())
}

func (i OptimizedAutoscaleArgs) ToOptimizedAutoscalePtrOutputWithContext(ctx context.Context) OptimizedAutoscalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptimizedAutoscaleOutput).ToOptimizedAutoscalePtrOutputWithContext(ctx)
}

// OptimizedAutoscalePtrInput is an input type that accepts OptimizedAutoscaleArgs, OptimizedAutoscalePtr and OptimizedAutoscalePtrOutput values.
// You can construct a concrete instance of `OptimizedAutoscalePtrInput` via:
//
//          OptimizedAutoscaleArgs{...}
//
//  or:
//
//          nil
type OptimizedAutoscalePtrInput interface {
	pulumi.Input

	ToOptimizedAutoscalePtrOutput() OptimizedAutoscalePtrOutput
	ToOptimizedAutoscalePtrOutputWithContext(context.Context) OptimizedAutoscalePtrOutput
}

type optimizedAutoscalePtrType OptimizedAutoscaleArgs

func OptimizedAutoscalePtr(v *OptimizedAutoscaleArgs) OptimizedAutoscalePtrInput {
	return (*optimizedAutoscalePtrType)(v)
}

func (*optimizedAutoscalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OptimizedAutoscale)(nil)).Elem()
}

func (i *optimizedAutoscalePtrType) ToOptimizedAutoscalePtrOutput() OptimizedAutoscalePtrOutput {
	return i.ToOptimizedAutoscalePtrOutputWithContext(context.Background())
}

func (i *optimizedAutoscalePtrType) ToOptimizedAutoscalePtrOutputWithContext(ctx context.Context) OptimizedAutoscalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptimizedAutoscalePtrOutput)
}

// A class that contains the optimized auto scale definition.
type OptimizedAutoscaleOutput struct{ *pulumi.OutputState }

func (OptimizedAutoscaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OptimizedAutoscale)(nil)).Elem()
}

func (o OptimizedAutoscaleOutput) ToOptimizedAutoscaleOutput() OptimizedAutoscaleOutput {
	return o
}

func (o OptimizedAutoscaleOutput) ToOptimizedAutoscaleOutputWithContext(ctx context.Context) OptimizedAutoscaleOutput {
	return o
}

func (o OptimizedAutoscaleOutput) ToOptimizedAutoscalePtrOutput() OptimizedAutoscalePtrOutput {
	return o.ToOptimizedAutoscalePtrOutputWithContext(context.Background())
}

func (o OptimizedAutoscaleOutput) ToOptimizedAutoscalePtrOutputWithContext(ctx context.Context) OptimizedAutoscalePtrOutput {
	return o.ApplyT(func(v OptimizedAutoscale) *OptimizedAutoscale {
		return &v
	}).(OptimizedAutoscalePtrOutput)
}

// A boolean value that indicate if the optimized autoscale feature is enabled or not.
func (o OptimizedAutoscaleOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v OptimizedAutoscale) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Maximum allowed instances count.
func (o OptimizedAutoscaleOutput) Maximum() pulumi.IntOutput {
	return o.ApplyT(func(v OptimizedAutoscale) int { return v.Maximum }).(pulumi.IntOutput)
}

// Minimum allowed instances count.
func (o OptimizedAutoscaleOutput) Minimum() pulumi.IntOutput {
	return o.ApplyT(func(v OptimizedAutoscale) int { return v.Minimum }).(pulumi.IntOutput)
}

// The version of the template defined, for instance 1.
func (o OptimizedAutoscaleOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v OptimizedAutoscale) int { return v.Version }).(pulumi.IntOutput)
}

type OptimizedAutoscalePtrOutput struct{ *pulumi.OutputState }

func (OptimizedAutoscalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OptimizedAutoscale)(nil)).Elem()
}

func (o OptimizedAutoscalePtrOutput) ToOptimizedAutoscalePtrOutput() OptimizedAutoscalePtrOutput {
	return o
}

func (o OptimizedAutoscalePtrOutput) ToOptimizedAutoscalePtrOutputWithContext(ctx context.Context) OptimizedAutoscalePtrOutput {
	return o
}

func (o OptimizedAutoscalePtrOutput) Elem() OptimizedAutoscaleOutput {
	return o.ApplyT(func(v *OptimizedAutoscale) OptimizedAutoscale { return *v }).(OptimizedAutoscaleOutput)
}

// A boolean value that indicate if the optimized autoscale feature is enabled or not.
func (o OptimizedAutoscalePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OptimizedAutoscale) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Maximum allowed instances count.
func (o OptimizedAutoscalePtrOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OptimizedAutoscale) *int {
		if v == nil {
			return nil
		}
		return &v.Maximum
	}).(pulumi.IntPtrOutput)
}

// Minimum allowed instances count.
func (o OptimizedAutoscalePtrOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OptimizedAutoscale) *int {
		if v == nil {
			return nil
		}
		return &v.Minimum
	}).(pulumi.IntPtrOutput)
}

// The version of the template defined, for instance 1.
func (o OptimizedAutoscalePtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OptimizedAutoscale) *int {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.IntPtrOutput)
}

// A class that contains the optimized auto scale definition.
type OptimizedAutoscaleResponse struct {
	// A boolean value that indicate if the optimized autoscale feature is enabled or not.
	IsEnabled bool `pulumi:"isEnabled"`
	// Maximum allowed instances count.
	Maximum int `pulumi:"maximum"`
	// Minimum allowed instances count.
	Minimum int `pulumi:"minimum"`
	// The version of the template defined, for instance 1.
	Version int `pulumi:"version"`
}

// OptimizedAutoscaleResponseInput is an input type that accepts OptimizedAutoscaleResponseArgs and OptimizedAutoscaleResponseOutput values.
// You can construct a concrete instance of `OptimizedAutoscaleResponseInput` via:
//
//          OptimizedAutoscaleResponseArgs{...}
type OptimizedAutoscaleResponseInput interface {
	pulumi.Input

	ToOptimizedAutoscaleResponseOutput() OptimizedAutoscaleResponseOutput
	ToOptimizedAutoscaleResponseOutputWithContext(context.Context) OptimizedAutoscaleResponseOutput
}

// A class that contains the optimized auto scale definition.
type OptimizedAutoscaleResponseArgs struct {
	// A boolean value that indicate if the optimized autoscale feature is enabled or not.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Maximum allowed instances count.
	Maximum pulumi.IntInput `pulumi:"maximum"`
	// Minimum allowed instances count.
	Minimum pulumi.IntInput `pulumi:"minimum"`
	// The version of the template defined, for instance 1.
	Version pulumi.IntInput `pulumi:"version"`
}

func (OptimizedAutoscaleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OptimizedAutoscaleResponse)(nil)).Elem()
}

func (i OptimizedAutoscaleResponseArgs) ToOptimizedAutoscaleResponseOutput() OptimizedAutoscaleResponseOutput {
	return i.ToOptimizedAutoscaleResponseOutputWithContext(context.Background())
}

func (i OptimizedAutoscaleResponseArgs) ToOptimizedAutoscaleResponseOutputWithContext(ctx context.Context) OptimizedAutoscaleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptimizedAutoscaleResponseOutput)
}

func (i OptimizedAutoscaleResponseArgs) ToOptimizedAutoscaleResponsePtrOutput() OptimizedAutoscaleResponsePtrOutput {
	return i.ToOptimizedAutoscaleResponsePtrOutputWithContext(context.Background())
}

func (i OptimizedAutoscaleResponseArgs) ToOptimizedAutoscaleResponsePtrOutputWithContext(ctx context.Context) OptimizedAutoscaleResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptimizedAutoscaleResponseOutput).ToOptimizedAutoscaleResponsePtrOutputWithContext(ctx)
}

// OptimizedAutoscaleResponsePtrInput is an input type that accepts OptimizedAutoscaleResponseArgs, OptimizedAutoscaleResponsePtr and OptimizedAutoscaleResponsePtrOutput values.
// You can construct a concrete instance of `OptimizedAutoscaleResponsePtrInput` via:
//
//          OptimizedAutoscaleResponseArgs{...}
//
//  or:
//
//          nil
type OptimizedAutoscaleResponsePtrInput interface {
	pulumi.Input

	ToOptimizedAutoscaleResponsePtrOutput() OptimizedAutoscaleResponsePtrOutput
	ToOptimizedAutoscaleResponsePtrOutputWithContext(context.Context) OptimizedAutoscaleResponsePtrOutput
}

type optimizedAutoscaleResponsePtrType OptimizedAutoscaleResponseArgs

func OptimizedAutoscaleResponsePtr(v *OptimizedAutoscaleResponseArgs) OptimizedAutoscaleResponsePtrInput {
	return (*optimizedAutoscaleResponsePtrType)(v)
}

func (*optimizedAutoscaleResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OptimizedAutoscaleResponse)(nil)).Elem()
}

func (i *optimizedAutoscaleResponsePtrType) ToOptimizedAutoscaleResponsePtrOutput() OptimizedAutoscaleResponsePtrOutput {
	return i.ToOptimizedAutoscaleResponsePtrOutputWithContext(context.Background())
}

func (i *optimizedAutoscaleResponsePtrType) ToOptimizedAutoscaleResponsePtrOutputWithContext(ctx context.Context) OptimizedAutoscaleResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptimizedAutoscaleResponsePtrOutput)
}

// A class that contains the optimized auto scale definition.
type OptimizedAutoscaleResponseOutput struct{ *pulumi.OutputState }

func (OptimizedAutoscaleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OptimizedAutoscaleResponse)(nil)).Elem()
}

func (o OptimizedAutoscaleResponseOutput) ToOptimizedAutoscaleResponseOutput() OptimizedAutoscaleResponseOutput {
	return o
}

func (o OptimizedAutoscaleResponseOutput) ToOptimizedAutoscaleResponseOutputWithContext(ctx context.Context) OptimizedAutoscaleResponseOutput {
	return o
}

func (o OptimizedAutoscaleResponseOutput) ToOptimizedAutoscaleResponsePtrOutput() OptimizedAutoscaleResponsePtrOutput {
	return o.ToOptimizedAutoscaleResponsePtrOutputWithContext(context.Background())
}

func (o OptimizedAutoscaleResponseOutput) ToOptimizedAutoscaleResponsePtrOutputWithContext(ctx context.Context) OptimizedAutoscaleResponsePtrOutput {
	return o.ApplyT(func(v OptimizedAutoscaleResponse) *OptimizedAutoscaleResponse {
		return &v
	}).(OptimizedAutoscaleResponsePtrOutput)
}

// A boolean value that indicate if the optimized autoscale feature is enabled or not.
func (o OptimizedAutoscaleResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v OptimizedAutoscaleResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Maximum allowed instances count.
func (o OptimizedAutoscaleResponseOutput) Maximum() pulumi.IntOutput {
	return o.ApplyT(func(v OptimizedAutoscaleResponse) int { return v.Maximum }).(pulumi.IntOutput)
}

// Minimum allowed instances count.
func (o OptimizedAutoscaleResponseOutput) Minimum() pulumi.IntOutput {
	return o.ApplyT(func(v OptimizedAutoscaleResponse) int { return v.Minimum }).(pulumi.IntOutput)
}

// The version of the template defined, for instance 1.
func (o OptimizedAutoscaleResponseOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v OptimizedAutoscaleResponse) int { return v.Version }).(pulumi.IntOutput)
}

type OptimizedAutoscaleResponsePtrOutput struct{ *pulumi.OutputState }

func (OptimizedAutoscaleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OptimizedAutoscaleResponse)(nil)).Elem()
}

func (o OptimizedAutoscaleResponsePtrOutput) ToOptimizedAutoscaleResponsePtrOutput() OptimizedAutoscaleResponsePtrOutput {
	return o
}

func (o OptimizedAutoscaleResponsePtrOutput) ToOptimizedAutoscaleResponsePtrOutputWithContext(ctx context.Context) OptimizedAutoscaleResponsePtrOutput {
	return o
}

func (o OptimizedAutoscaleResponsePtrOutput) Elem() OptimizedAutoscaleResponseOutput {
	return o.ApplyT(func(v *OptimizedAutoscaleResponse) OptimizedAutoscaleResponse { return *v }).(OptimizedAutoscaleResponseOutput)
}

// A boolean value that indicate if the optimized autoscale feature is enabled or not.
func (o OptimizedAutoscaleResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OptimizedAutoscaleResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Maximum allowed instances count.
func (o OptimizedAutoscaleResponsePtrOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OptimizedAutoscaleResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Maximum
	}).(pulumi.IntPtrOutput)
}

// Minimum allowed instances count.
func (o OptimizedAutoscaleResponsePtrOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OptimizedAutoscaleResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Minimum
	}).(pulumi.IntPtrOutput)
}

// The version of the template defined, for instance 1.
func (o OptimizedAutoscaleResponsePtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OptimizedAutoscaleResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.IntPtrOutput)
}

// Represents a tenant ID that is trusted by the cluster.
type TrustedExternalTenant struct {
	// GUID representing an external tenant.
	Value *string `pulumi:"value"`
}

// TrustedExternalTenantInput is an input type that accepts TrustedExternalTenantArgs and TrustedExternalTenantOutput values.
// You can construct a concrete instance of `TrustedExternalTenantInput` via:
//
//          TrustedExternalTenantArgs{...}
type TrustedExternalTenantInput interface {
	pulumi.Input

	ToTrustedExternalTenantOutput() TrustedExternalTenantOutput
	ToTrustedExternalTenantOutputWithContext(context.Context) TrustedExternalTenantOutput
}

// Represents a tenant ID that is trusted by the cluster.
type TrustedExternalTenantArgs struct {
	// GUID representing an external tenant.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TrustedExternalTenantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustedExternalTenant)(nil)).Elem()
}

func (i TrustedExternalTenantArgs) ToTrustedExternalTenantOutput() TrustedExternalTenantOutput {
	return i.ToTrustedExternalTenantOutputWithContext(context.Background())
}

func (i TrustedExternalTenantArgs) ToTrustedExternalTenantOutputWithContext(ctx context.Context) TrustedExternalTenantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustedExternalTenantOutput)
}

// TrustedExternalTenantArrayInput is an input type that accepts TrustedExternalTenantArray and TrustedExternalTenantArrayOutput values.
// You can construct a concrete instance of `TrustedExternalTenantArrayInput` via:
//
//          TrustedExternalTenantArray{ TrustedExternalTenantArgs{...} }
type TrustedExternalTenantArrayInput interface {
	pulumi.Input

	ToTrustedExternalTenantArrayOutput() TrustedExternalTenantArrayOutput
	ToTrustedExternalTenantArrayOutputWithContext(context.Context) TrustedExternalTenantArrayOutput
}

type TrustedExternalTenantArray []TrustedExternalTenantInput

func (TrustedExternalTenantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrustedExternalTenant)(nil)).Elem()
}

func (i TrustedExternalTenantArray) ToTrustedExternalTenantArrayOutput() TrustedExternalTenantArrayOutput {
	return i.ToTrustedExternalTenantArrayOutputWithContext(context.Background())
}

func (i TrustedExternalTenantArray) ToTrustedExternalTenantArrayOutputWithContext(ctx context.Context) TrustedExternalTenantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustedExternalTenantArrayOutput)
}

// Represents a tenant ID that is trusted by the cluster.
type TrustedExternalTenantOutput struct{ *pulumi.OutputState }

func (TrustedExternalTenantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustedExternalTenant)(nil)).Elem()
}

func (o TrustedExternalTenantOutput) ToTrustedExternalTenantOutput() TrustedExternalTenantOutput {
	return o
}

func (o TrustedExternalTenantOutput) ToTrustedExternalTenantOutputWithContext(ctx context.Context) TrustedExternalTenantOutput {
	return o
}

// GUID representing an external tenant.
func (o TrustedExternalTenantOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrustedExternalTenant) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TrustedExternalTenantArrayOutput struct{ *pulumi.OutputState }

func (TrustedExternalTenantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrustedExternalTenant)(nil)).Elem()
}

func (o TrustedExternalTenantArrayOutput) ToTrustedExternalTenantArrayOutput() TrustedExternalTenantArrayOutput {
	return o
}

func (o TrustedExternalTenantArrayOutput) ToTrustedExternalTenantArrayOutputWithContext(ctx context.Context) TrustedExternalTenantArrayOutput {
	return o
}

func (o TrustedExternalTenantArrayOutput) Index(i pulumi.IntInput) TrustedExternalTenantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrustedExternalTenant {
		return vs[0].([]TrustedExternalTenant)[vs[1].(int)]
	}).(TrustedExternalTenantOutput)
}

// Represents a tenant ID that is trusted by the cluster.
type TrustedExternalTenantResponse struct {
	// GUID representing an external tenant.
	Value *string `pulumi:"value"`
}

// TrustedExternalTenantResponseInput is an input type that accepts TrustedExternalTenantResponseArgs and TrustedExternalTenantResponseOutput values.
// You can construct a concrete instance of `TrustedExternalTenantResponseInput` via:
//
//          TrustedExternalTenantResponseArgs{...}
type TrustedExternalTenantResponseInput interface {
	pulumi.Input

	ToTrustedExternalTenantResponseOutput() TrustedExternalTenantResponseOutput
	ToTrustedExternalTenantResponseOutputWithContext(context.Context) TrustedExternalTenantResponseOutput
}

// Represents a tenant ID that is trusted by the cluster.
type TrustedExternalTenantResponseArgs struct {
	// GUID representing an external tenant.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TrustedExternalTenantResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustedExternalTenantResponse)(nil)).Elem()
}

func (i TrustedExternalTenantResponseArgs) ToTrustedExternalTenantResponseOutput() TrustedExternalTenantResponseOutput {
	return i.ToTrustedExternalTenantResponseOutputWithContext(context.Background())
}

func (i TrustedExternalTenantResponseArgs) ToTrustedExternalTenantResponseOutputWithContext(ctx context.Context) TrustedExternalTenantResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustedExternalTenantResponseOutput)
}

// TrustedExternalTenantResponseArrayInput is an input type that accepts TrustedExternalTenantResponseArray and TrustedExternalTenantResponseArrayOutput values.
// You can construct a concrete instance of `TrustedExternalTenantResponseArrayInput` via:
//
//          TrustedExternalTenantResponseArray{ TrustedExternalTenantResponseArgs{...} }
type TrustedExternalTenantResponseArrayInput interface {
	pulumi.Input

	ToTrustedExternalTenantResponseArrayOutput() TrustedExternalTenantResponseArrayOutput
	ToTrustedExternalTenantResponseArrayOutputWithContext(context.Context) TrustedExternalTenantResponseArrayOutput
}

type TrustedExternalTenantResponseArray []TrustedExternalTenantResponseInput

func (TrustedExternalTenantResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrustedExternalTenantResponse)(nil)).Elem()
}

func (i TrustedExternalTenantResponseArray) ToTrustedExternalTenantResponseArrayOutput() TrustedExternalTenantResponseArrayOutput {
	return i.ToTrustedExternalTenantResponseArrayOutputWithContext(context.Background())
}

func (i TrustedExternalTenantResponseArray) ToTrustedExternalTenantResponseArrayOutputWithContext(ctx context.Context) TrustedExternalTenantResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustedExternalTenantResponseArrayOutput)
}

// Represents a tenant ID that is trusted by the cluster.
type TrustedExternalTenantResponseOutput struct{ *pulumi.OutputState }

func (TrustedExternalTenantResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustedExternalTenantResponse)(nil)).Elem()
}

func (o TrustedExternalTenantResponseOutput) ToTrustedExternalTenantResponseOutput() TrustedExternalTenantResponseOutput {
	return o
}

func (o TrustedExternalTenantResponseOutput) ToTrustedExternalTenantResponseOutputWithContext(ctx context.Context) TrustedExternalTenantResponseOutput {
	return o
}

// GUID representing an external tenant.
func (o TrustedExternalTenantResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrustedExternalTenantResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TrustedExternalTenantResponseArrayOutput struct{ *pulumi.OutputState }

func (TrustedExternalTenantResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrustedExternalTenantResponse)(nil)).Elem()
}

func (o TrustedExternalTenantResponseArrayOutput) ToTrustedExternalTenantResponseArrayOutput() TrustedExternalTenantResponseArrayOutput {
	return o
}

func (o TrustedExternalTenantResponseArrayOutput) ToTrustedExternalTenantResponseArrayOutputWithContext(ctx context.Context) TrustedExternalTenantResponseArrayOutput {
	return o
}

func (o TrustedExternalTenantResponseArrayOutput) Index(i pulumi.IntInput) TrustedExternalTenantResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrustedExternalTenantResponse {
		return vs[0].([]TrustedExternalTenantResponse)[vs[1].(int)]
	}).(TrustedExternalTenantResponseOutput)
}

// A class that contains virtual network definition.
type VirtualNetworkConfiguration struct {
	// Data management's service public IP address resource id.
	DataManagementPublicIpId string `pulumi:"dataManagementPublicIpId"`
	// Engine service's public IP address resource id.
	EnginePublicIpId string `pulumi:"enginePublicIpId"`
	// The subnet resource id.
	SubnetId string `pulumi:"subnetId"`
}

// VirtualNetworkConfigurationInput is an input type that accepts VirtualNetworkConfigurationArgs and VirtualNetworkConfigurationOutput values.
// You can construct a concrete instance of `VirtualNetworkConfigurationInput` via:
//
//          VirtualNetworkConfigurationArgs{...}
type VirtualNetworkConfigurationInput interface {
	pulumi.Input

	ToVirtualNetworkConfigurationOutput() VirtualNetworkConfigurationOutput
	ToVirtualNetworkConfigurationOutputWithContext(context.Context) VirtualNetworkConfigurationOutput
}

// A class that contains virtual network definition.
type VirtualNetworkConfigurationArgs struct {
	// Data management's service public IP address resource id.
	DataManagementPublicIpId pulumi.StringInput `pulumi:"dataManagementPublicIpId"`
	// Engine service's public IP address resource id.
	EnginePublicIpId pulumi.StringInput `pulumi:"enginePublicIpId"`
	// The subnet resource id.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (VirtualNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkConfiguration)(nil)).Elem()
}

func (i VirtualNetworkConfigurationArgs) ToVirtualNetworkConfigurationOutput() VirtualNetworkConfigurationOutput {
	return i.ToVirtualNetworkConfigurationOutputWithContext(context.Background())
}

func (i VirtualNetworkConfigurationArgs) ToVirtualNetworkConfigurationOutputWithContext(ctx context.Context) VirtualNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkConfigurationOutput)
}

func (i VirtualNetworkConfigurationArgs) ToVirtualNetworkConfigurationPtrOutput() VirtualNetworkConfigurationPtrOutput {
	return i.ToVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkConfigurationArgs) ToVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkConfigurationOutput).ToVirtualNetworkConfigurationPtrOutputWithContext(ctx)
}

// VirtualNetworkConfigurationPtrInput is an input type that accepts VirtualNetworkConfigurationArgs, VirtualNetworkConfigurationPtr and VirtualNetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkConfigurationPtrInput` via:
//
//          VirtualNetworkConfigurationArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkConfigurationPtrInput interface {
	pulumi.Input

	ToVirtualNetworkConfigurationPtrOutput() VirtualNetworkConfigurationPtrOutput
	ToVirtualNetworkConfigurationPtrOutputWithContext(context.Context) VirtualNetworkConfigurationPtrOutput
}

type virtualNetworkConfigurationPtrType VirtualNetworkConfigurationArgs

func VirtualNetworkConfigurationPtr(v *VirtualNetworkConfigurationArgs) VirtualNetworkConfigurationPtrInput {
	return (*virtualNetworkConfigurationPtrType)(v)
}

func (*virtualNetworkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkConfiguration)(nil)).Elem()
}

func (i *virtualNetworkConfigurationPtrType) ToVirtualNetworkConfigurationPtrOutput() VirtualNetworkConfigurationPtrOutput {
	return i.ToVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkConfigurationPtrType) ToVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkConfigurationPtrOutput)
}

// A class that contains virtual network definition.
type VirtualNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkConfiguration)(nil)).Elem()
}

func (o VirtualNetworkConfigurationOutput) ToVirtualNetworkConfigurationOutput() VirtualNetworkConfigurationOutput {
	return o
}

func (o VirtualNetworkConfigurationOutput) ToVirtualNetworkConfigurationOutputWithContext(ctx context.Context) VirtualNetworkConfigurationOutput {
	return o
}

func (o VirtualNetworkConfigurationOutput) ToVirtualNetworkConfigurationPtrOutput() VirtualNetworkConfigurationPtrOutput {
	return o.ToVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkConfigurationOutput) ToVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualNetworkConfiguration) *VirtualNetworkConfiguration {
		return &v
	}).(VirtualNetworkConfigurationPtrOutput)
}

// Data management's service public IP address resource id.
func (o VirtualNetworkConfigurationOutput) DataManagementPublicIpId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkConfiguration) string { return v.DataManagementPublicIpId }).(pulumi.StringOutput)
}

// Engine service's public IP address resource id.
func (o VirtualNetworkConfigurationOutput) EnginePublicIpId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkConfiguration) string { return v.EnginePublicIpId }).(pulumi.StringOutput)
}

// The subnet resource id.
func (o VirtualNetworkConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type VirtualNetworkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkConfiguration)(nil)).Elem()
}

func (o VirtualNetworkConfigurationPtrOutput) ToVirtualNetworkConfigurationPtrOutput() VirtualNetworkConfigurationPtrOutput {
	return o
}

func (o VirtualNetworkConfigurationPtrOutput) ToVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationPtrOutput {
	return o
}

func (o VirtualNetworkConfigurationPtrOutput) Elem() VirtualNetworkConfigurationOutput {
	return o.ApplyT(func(v *VirtualNetworkConfiguration) VirtualNetworkConfiguration { return *v }).(VirtualNetworkConfigurationOutput)
}

// Data management's service public IP address resource id.
func (o VirtualNetworkConfigurationPtrOutput) DataManagementPublicIpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.DataManagementPublicIpId
	}).(pulumi.StringPtrOutput)
}

// Engine service's public IP address resource id.
func (o VirtualNetworkConfigurationPtrOutput) EnginePublicIpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.EnginePublicIpId
	}).(pulumi.StringPtrOutput)
}

// The subnet resource id.
func (o VirtualNetworkConfigurationPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// A class that contains virtual network definition.
type VirtualNetworkConfigurationResponse struct {
	// Data management's service public IP address resource id.
	DataManagementPublicIpId string `pulumi:"dataManagementPublicIpId"`
	// Engine service's public IP address resource id.
	EnginePublicIpId string `pulumi:"enginePublicIpId"`
	// The subnet resource id.
	SubnetId string `pulumi:"subnetId"`
}

// VirtualNetworkConfigurationResponseInput is an input type that accepts VirtualNetworkConfigurationResponseArgs and VirtualNetworkConfigurationResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkConfigurationResponseInput` via:
//
//          VirtualNetworkConfigurationResponseArgs{...}
type VirtualNetworkConfigurationResponseInput interface {
	pulumi.Input

	ToVirtualNetworkConfigurationResponseOutput() VirtualNetworkConfigurationResponseOutput
	ToVirtualNetworkConfigurationResponseOutputWithContext(context.Context) VirtualNetworkConfigurationResponseOutput
}

// A class that contains virtual network definition.
type VirtualNetworkConfigurationResponseArgs struct {
	// Data management's service public IP address resource id.
	DataManagementPublicIpId pulumi.StringInput `pulumi:"dataManagementPublicIpId"`
	// Engine service's public IP address resource id.
	EnginePublicIpId pulumi.StringInput `pulumi:"enginePublicIpId"`
	// The subnet resource id.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (VirtualNetworkConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkConfigurationResponse)(nil)).Elem()
}

func (i VirtualNetworkConfigurationResponseArgs) ToVirtualNetworkConfigurationResponseOutput() VirtualNetworkConfigurationResponseOutput {
	return i.ToVirtualNetworkConfigurationResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkConfigurationResponseArgs) ToVirtualNetworkConfigurationResponseOutputWithContext(ctx context.Context) VirtualNetworkConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkConfigurationResponseOutput)
}

func (i VirtualNetworkConfigurationResponseArgs) ToVirtualNetworkConfigurationResponsePtrOutput() VirtualNetworkConfigurationResponsePtrOutput {
	return i.ToVirtualNetworkConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkConfigurationResponseArgs) ToVirtualNetworkConfigurationResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkConfigurationResponseOutput).ToVirtualNetworkConfigurationResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkConfigurationResponsePtrInput is an input type that accepts VirtualNetworkConfigurationResponseArgs, VirtualNetworkConfigurationResponsePtr and VirtualNetworkConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkConfigurationResponsePtrInput` via:
//
//          VirtualNetworkConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkConfigurationResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkConfigurationResponsePtrOutput() VirtualNetworkConfigurationResponsePtrOutput
	ToVirtualNetworkConfigurationResponsePtrOutputWithContext(context.Context) VirtualNetworkConfigurationResponsePtrOutput
}

type virtualNetworkConfigurationResponsePtrType VirtualNetworkConfigurationResponseArgs

func VirtualNetworkConfigurationResponsePtr(v *VirtualNetworkConfigurationResponseArgs) VirtualNetworkConfigurationResponsePtrInput {
	return (*virtualNetworkConfigurationResponsePtrType)(v)
}

func (*virtualNetworkConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkConfigurationResponse)(nil)).Elem()
}

func (i *virtualNetworkConfigurationResponsePtrType) ToVirtualNetworkConfigurationResponsePtrOutput() VirtualNetworkConfigurationResponsePtrOutput {
	return i.ToVirtualNetworkConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkConfigurationResponsePtrType) ToVirtualNetworkConfigurationResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkConfigurationResponsePtrOutput)
}

// A class that contains virtual network definition.
type VirtualNetworkConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkConfigurationResponse)(nil)).Elem()
}

func (o VirtualNetworkConfigurationResponseOutput) ToVirtualNetworkConfigurationResponseOutput() VirtualNetworkConfigurationResponseOutput {
	return o
}

func (o VirtualNetworkConfigurationResponseOutput) ToVirtualNetworkConfigurationResponseOutputWithContext(ctx context.Context) VirtualNetworkConfigurationResponseOutput {
	return o
}

func (o VirtualNetworkConfigurationResponseOutput) ToVirtualNetworkConfigurationResponsePtrOutput() VirtualNetworkConfigurationResponsePtrOutput {
	return o.ToVirtualNetworkConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkConfigurationResponseOutput) ToVirtualNetworkConfigurationResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkConfigurationResponse) *VirtualNetworkConfigurationResponse {
		return &v
	}).(VirtualNetworkConfigurationResponsePtrOutput)
}

// Data management's service public IP address resource id.
func (o VirtualNetworkConfigurationResponseOutput) DataManagementPublicIpId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkConfigurationResponse) string { return v.DataManagementPublicIpId }).(pulumi.StringOutput)
}

// Engine service's public IP address resource id.
func (o VirtualNetworkConfigurationResponseOutput) EnginePublicIpId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkConfigurationResponse) string { return v.EnginePublicIpId }).(pulumi.StringOutput)
}

// The subnet resource id.
func (o VirtualNetworkConfigurationResponseOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkConfigurationResponse) string { return v.SubnetId }).(pulumi.StringOutput)
}

type VirtualNetworkConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkConfigurationResponse)(nil)).Elem()
}

func (o VirtualNetworkConfigurationResponsePtrOutput) ToVirtualNetworkConfigurationResponsePtrOutput() VirtualNetworkConfigurationResponsePtrOutput {
	return o
}

func (o VirtualNetworkConfigurationResponsePtrOutput) ToVirtualNetworkConfigurationResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationResponsePtrOutput {
	return o
}

func (o VirtualNetworkConfigurationResponsePtrOutput) Elem() VirtualNetworkConfigurationResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkConfigurationResponse) VirtualNetworkConfigurationResponse { return *v }).(VirtualNetworkConfigurationResponseOutput)
}

// Data management's service public IP address resource id.
func (o VirtualNetworkConfigurationResponsePtrOutput) DataManagementPublicIpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataManagementPublicIpId
	}).(pulumi.StringPtrOutput)
}

// Engine service's public IP address resource id.
func (o VirtualNetworkConfigurationResponsePtrOutput) EnginePublicIpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EnginePublicIpId
	}).(pulumi.StringPtrOutput)
}

// The subnet resource id.
func (o VirtualNetworkConfigurationResponsePtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// An array represents the availability zones of the cluster.
type Zones struct {
}

// ZonesInput is an input type that accepts ZonesArgs and ZonesOutput values.
// You can construct a concrete instance of `ZonesInput` via:
//
//          ZonesArgs{...}
type ZonesInput interface {
	pulumi.Input

	ToZonesOutput() ZonesOutput
	ToZonesOutputWithContext(context.Context) ZonesOutput
}

// An array represents the availability zones of the cluster.
type ZonesArgs struct {
}

func (ZonesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Zones)(nil)).Elem()
}

func (i ZonesArgs) ToZonesOutput() ZonesOutput {
	return i.ToZonesOutputWithContext(context.Background())
}

func (i ZonesArgs) ToZonesOutputWithContext(ctx context.Context) ZonesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZonesOutput)
}

func (i ZonesArgs) ToZonesPtrOutput() ZonesPtrOutput {
	return i.ToZonesPtrOutputWithContext(context.Background())
}

func (i ZonesArgs) ToZonesPtrOutputWithContext(ctx context.Context) ZonesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZonesOutput).ToZonesPtrOutputWithContext(ctx)
}

// ZonesPtrInput is an input type that accepts ZonesArgs, ZonesPtr and ZonesPtrOutput values.
// You can construct a concrete instance of `ZonesPtrInput` via:
//
//          ZonesArgs{...}
//
//  or:
//
//          nil
type ZonesPtrInput interface {
	pulumi.Input

	ToZonesPtrOutput() ZonesPtrOutput
	ToZonesPtrOutputWithContext(context.Context) ZonesPtrOutput
}

type zonesPtrType ZonesArgs

func ZonesPtr(v *ZonesArgs) ZonesPtrInput {
	return (*zonesPtrType)(v)
}

func (*zonesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Zones)(nil)).Elem()
}

func (i *zonesPtrType) ToZonesPtrOutput() ZonesPtrOutput {
	return i.ToZonesPtrOutputWithContext(context.Background())
}

func (i *zonesPtrType) ToZonesPtrOutputWithContext(ctx context.Context) ZonesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZonesPtrOutput)
}

// An array represents the availability zones of the cluster.
type ZonesOutput struct{ *pulumi.OutputState }

func (ZonesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Zones)(nil)).Elem()
}

func (o ZonesOutput) ToZonesOutput() ZonesOutput {
	return o
}

func (o ZonesOutput) ToZonesOutputWithContext(ctx context.Context) ZonesOutput {
	return o
}

func (o ZonesOutput) ToZonesPtrOutput() ZonesPtrOutput {
	return o.ToZonesPtrOutputWithContext(context.Background())
}

func (o ZonesOutput) ToZonesPtrOutputWithContext(ctx context.Context) ZonesPtrOutput {
	return o.ApplyT(func(v Zones) *Zones {
		return &v
	}).(ZonesPtrOutput)
}

type ZonesPtrOutput struct{ *pulumi.OutputState }

func (ZonesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Zones)(nil)).Elem()
}

func (o ZonesPtrOutput) ToZonesPtrOutput() ZonesPtrOutput {
	return o
}

func (o ZonesPtrOutput) ToZonesPtrOutputWithContext(ctx context.Context) ZonesPtrOutput {
	return o
}

func (o ZonesPtrOutput) Elem() ZonesOutput {
	return o.ApplyT(func(v *Zones) Zones { return *v }).(ZonesOutput)
}

// An array represents the availability zones of the cluster.
type ZonesResponse struct {
}

// ZonesResponseInput is an input type that accepts ZonesResponseArgs and ZonesResponseOutput values.
// You can construct a concrete instance of `ZonesResponseInput` via:
//
//          ZonesResponseArgs{...}
type ZonesResponseInput interface {
	pulumi.Input

	ToZonesResponseOutput() ZonesResponseOutput
	ToZonesResponseOutputWithContext(context.Context) ZonesResponseOutput
}

// An array represents the availability zones of the cluster.
type ZonesResponseArgs struct {
}

func (ZonesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZonesResponse)(nil)).Elem()
}

func (i ZonesResponseArgs) ToZonesResponseOutput() ZonesResponseOutput {
	return i.ToZonesResponseOutputWithContext(context.Background())
}

func (i ZonesResponseArgs) ToZonesResponseOutputWithContext(ctx context.Context) ZonesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZonesResponseOutput)
}

func (i ZonesResponseArgs) ToZonesResponsePtrOutput() ZonesResponsePtrOutput {
	return i.ToZonesResponsePtrOutputWithContext(context.Background())
}

func (i ZonesResponseArgs) ToZonesResponsePtrOutputWithContext(ctx context.Context) ZonesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZonesResponseOutput).ToZonesResponsePtrOutputWithContext(ctx)
}

// ZonesResponsePtrInput is an input type that accepts ZonesResponseArgs, ZonesResponsePtr and ZonesResponsePtrOutput values.
// You can construct a concrete instance of `ZonesResponsePtrInput` via:
//
//          ZonesResponseArgs{...}
//
//  or:
//
//          nil
type ZonesResponsePtrInput interface {
	pulumi.Input

	ToZonesResponsePtrOutput() ZonesResponsePtrOutput
	ToZonesResponsePtrOutputWithContext(context.Context) ZonesResponsePtrOutput
}

type zonesResponsePtrType ZonesResponseArgs

func ZonesResponsePtr(v *ZonesResponseArgs) ZonesResponsePtrInput {
	return (*zonesResponsePtrType)(v)
}

func (*zonesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZonesResponse)(nil)).Elem()
}

func (i *zonesResponsePtrType) ToZonesResponsePtrOutput() ZonesResponsePtrOutput {
	return i.ToZonesResponsePtrOutputWithContext(context.Background())
}

func (i *zonesResponsePtrType) ToZonesResponsePtrOutputWithContext(ctx context.Context) ZonesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZonesResponsePtrOutput)
}

// An array represents the availability zones of the cluster.
type ZonesResponseOutput struct{ *pulumi.OutputState }

func (ZonesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZonesResponse)(nil)).Elem()
}

func (o ZonesResponseOutput) ToZonesResponseOutput() ZonesResponseOutput {
	return o
}

func (o ZonesResponseOutput) ToZonesResponseOutputWithContext(ctx context.Context) ZonesResponseOutput {
	return o
}

func (o ZonesResponseOutput) ToZonesResponsePtrOutput() ZonesResponsePtrOutput {
	return o.ToZonesResponsePtrOutputWithContext(context.Background())
}

func (o ZonesResponseOutput) ToZonesResponsePtrOutputWithContext(ctx context.Context) ZonesResponsePtrOutput {
	return o.ApplyT(func(v ZonesResponse) *ZonesResponse {
		return &v
	}).(ZonesResponsePtrOutput)
}

type ZonesResponsePtrOutput struct{ *pulumi.OutputState }

func (ZonesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZonesResponse)(nil)).Elem()
}

func (o ZonesResponsePtrOutput) ToZonesResponsePtrOutput() ZonesResponsePtrOutput {
	return o
}

func (o ZonesResponsePtrOutput) ToZonesResponsePtrOutputWithContext(ctx context.Context) ZonesResponsePtrOutput {
	return o
}

func (o ZonesResponsePtrOutput) Elem() ZonesResponseOutput {
	return o.ApplyT(func(v *ZonesResponse) ZonesResponse { return *v }).(ZonesResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AttachedDatabaseConfigurationTypeOutput{})
	pulumi.RegisterOutputType(AttachedDatabaseConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(AttachedDatabaseConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AttachedDatabaseConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AttachedDatabaseConfigurationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureSkuOutput{})
	pulumi.RegisterOutputType(AzureSkuPtrOutput{})
	pulumi.RegisterOutputType(AzureSkuResponseOutput{})
	pulumi.RegisterOutputType(AzureSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(ClusterTypeOutput{})
	pulumi.RegisterOutputType(ClusterPrincipalAssignmentTypeOutput{})
	pulumi.RegisterOutputType(ClusterPrincipalPropertiesOutput{})
	pulumi.RegisterOutputType(ClusterPrincipalPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ClusterPrincipalPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ClusterPrincipalPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DataConnectionTypeOutput{})
	pulumi.RegisterOutputType(DatabaseTypeOutput{})
	pulumi.RegisterOutputType(DatabasePrincipalAssignmentTypeOutput{})
	pulumi.RegisterOutputType(DatabasePrincipalPropertiesOutput{})
	pulumi.RegisterOutputType(DatabasePrincipalPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DatabasePrincipalPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DatabasePrincipalPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DatabasePrincipalResponseOutput{})
	pulumi.RegisterOutputType(DatabasePrincipalResponseArrayOutput{})
	pulumi.RegisterOutputType(FollowerDatabaseDefinitionResponseOutput{})
	pulumi.RegisterOutputType(FollowerDatabaseDefinitionResponseArrayOutput{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityPtrOutput{})
	pulumi.RegisterOutputType(IdentityResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesPtrOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(OptimizedAutoscaleOutput{})
	pulumi.RegisterOutputType(OptimizedAutoscalePtrOutput{})
	pulumi.RegisterOutputType(OptimizedAutoscaleResponseOutput{})
	pulumi.RegisterOutputType(OptimizedAutoscaleResponsePtrOutput{})
	pulumi.RegisterOutputType(TrustedExternalTenantOutput{})
	pulumi.RegisterOutputType(TrustedExternalTenantArrayOutput{})
	pulumi.RegisterOutputType(TrustedExternalTenantResponseOutput{})
	pulumi.RegisterOutputType(TrustedExternalTenantResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualNetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ZonesOutput{})
	pulumi.RegisterOutputType(ZonesPtrOutput{})
	pulumi.RegisterOutputType(ZonesResponseOutput{})
	pulumi.RegisterOutputType(ZonesResponsePtrOutput{})
}
