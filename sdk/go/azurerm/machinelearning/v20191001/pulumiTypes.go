// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20191001

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Sku of the resource
type Sku struct {
	// Name of the sku
	Name *string `pulumi:"name"`
	// Tier of the sku like Basic or Enterprise
	Tier *string `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// Sku of the resource
type SkuArgs struct {
	// Name of the sku
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of the sku like Basic or Enterprise
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// Sku of the resource
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// Name of the sku
func (o SkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of the sku like Basic or Enterprise
func (o SkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// Name of the sku
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of the sku like Basic or Enterprise
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Sku of the resource
type SkuResponse struct {
	// Name of the sku
	Name *string `pulumi:"name"`
	// Tier of the sku like Basic or Enterprise
	Tier *string `pulumi:"tier"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// Sku of the resource
type SkuResponseArgs struct {
	// Name of the sku
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of the sku like Basic or Enterprise
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// Sku of the resource
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// Name of the sku
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of the sku like Basic or Enterprise
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// Name of the sku
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of the sku like Basic or Enterprise
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// An object that represents a machine learning workspace.
type WorkspaceType struct {
	// The location of the resource. This cannot be changed after the resource is created.
	Location string `pulumi:"location"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The properties of the machine learning workspace.
	Properties WorkspacePropertiesResponse `pulumi:"properties"`
	// The sku of the workspace.
	Sku *SkuResponse `pulumi:"sku"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type string `pulumi:"type"`
}

// WorkspaceTypeInput is an input type that accepts WorkspaceTypeArgs and WorkspaceTypeOutput values.
// You can construct a concrete instance of `WorkspaceTypeInput` via:
//
//          WorkspaceTypeArgs{...}
type WorkspaceTypeInput interface {
	pulumi.Input

	ToWorkspaceTypeOutput() WorkspaceTypeOutput
	ToWorkspaceTypeOutputWithContext(context.Context) WorkspaceTypeOutput
}

// An object that represents a machine learning workspace.
type WorkspaceTypeArgs struct {
	// The location of the resource. This cannot be changed after the resource is created.
	Location pulumi.StringInput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of the machine learning workspace.
	Properties WorkspacePropertiesResponseInput `pulumi:"properties"`
	// The sku of the workspace.
	Sku SkuResponsePtrInput `pulumi:"sku"`
	// The tags of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WorkspaceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceType)(nil)).Elem()
}

func (i WorkspaceTypeArgs) ToWorkspaceTypeOutput() WorkspaceTypeOutput {
	return i.ToWorkspaceTypeOutputWithContext(context.Background())
}

func (i WorkspaceTypeArgs) ToWorkspaceTypeOutputWithContext(ctx context.Context) WorkspaceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceTypeOutput)
}

// An object that represents a machine learning workspace.
type WorkspaceTypeOutput struct{ *pulumi.OutputState }

func (WorkspaceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceType)(nil)).Elem()
}

func (o WorkspaceTypeOutput) ToWorkspaceTypeOutput() WorkspaceTypeOutput {
	return o
}

func (o WorkspaceTypeOutput) ToWorkspaceTypeOutputWithContext(ctx context.Context) WorkspaceTypeOutput {
	return o
}

// The location of the resource. This cannot be changed after the resource is created.
func (o WorkspaceTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceType) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource.
func (o WorkspaceTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of the machine learning workspace.
func (o WorkspaceTypeOutput) Properties() WorkspacePropertiesResponseOutput {
	return o.ApplyT(func(v WorkspaceType) WorkspacePropertiesResponse { return v.Properties }).(WorkspacePropertiesResponseOutput)
}

// The sku of the workspace.
func (o WorkspaceTypeOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v WorkspaceType) *SkuResponse { return v.Sku }).(SkuResponsePtrOutput)
}

// The tags of the resource.
func (o WorkspaceTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkspaceType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o WorkspaceTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceType) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of a machine learning workspace.
type WorkspacePropertiesResponse struct {
	// The creation time for this workspace resource.
	CreationTime string `pulumi:"creationTime"`
	// The key vault identifier used for encrypted workspaces.
	KeyVaultIdentifierId *string `pulumi:"keyVaultIdentifierId"`
	// The email id of the owner for this workspace.
	OwnerEmail string `pulumi:"ownerEmail"`
	// The regional endpoint for the machine learning studio service which hosts this workspace.
	StudioEndpoint string `pulumi:"studioEndpoint"`
	// The fully qualified arm id of the storage account associated with this workspace.
	UserStorageAccountId string `pulumi:"userStorageAccountId"`
	// The immutable id associated with this workspace.
	WorkspaceId string `pulumi:"workspaceId"`
	// The current state of workspace resource.
	WorkspaceState string `pulumi:"workspaceState"`
	// The type of this workspace.
	WorkspaceType string `pulumi:"workspaceType"`
}

// WorkspacePropertiesResponseInput is an input type that accepts WorkspacePropertiesResponseArgs and WorkspacePropertiesResponseOutput values.
// You can construct a concrete instance of `WorkspacePropertiesResponseInput` via:
//
//          WorkspacePropertiesResponseArgs{...}
type WorkspacePropertiesResponseInput interface {
	pulumi.Input

	ToWorkspacePropertiesResponseOutput() WorkspacePropertiesResponseOutput
	ToWorkspacePropertiesResponseOutputWithContext(context.Context) WorkspacePropertiesResponseOutput
}

// The properties of a machine learning workspace.
type WorkspacePropertiesResponseArgs struct {
	// The creation time for this workspace resource.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The key vault identifier used for encrypted workspaces.
	KeyVaultIdentifierId pulumi.StringPtrInput `pulumi:"keyVaultIdentifierId"`
	// The email id of the owner for this workspace.
	OwnerEmail pulumi.StringInput `pulumi:"ownerEmail"`
	// The regional endpoint for the machine learning studio service which hosts this workspace.
	StudioEndpoint pulumi.StringInput `pulumi:"studioEndpoint"`
	// The fully qualified arm id of the storage account associated with this workspace.
	UserStorageAccountId pulumi.StringInput `pulumi:"userStorageAccountId"`
	// The immutable id associated with this workspace.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
	// The current state of workspace resource.
	WorkspaceState pulumi.StringInput `pulumi:"workspaceState"`
	// The type of this workspace.
	WorkspaceType pulumi.StringInput `pulumi:"workspaceType"`
}

func (WorkspacePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacePropertiesResponse)(nil)).Elem()
}

func (i WorkspacePropertiesResponseArgs) ToWorkspacePropertiesResponseOutput() WorkspacePropertiesResponseOutput {
	return i.ToWorkspacePropertiesResponseOutputWithContext(context.Background())
}

func (i WorkspacePropertiesResponseArgs) ToWorkspacePropertiesResponseOutputWithContext(ctx context.Context) WorkspacePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacePropertiesResponseOutput)
}

func (i WorkspacePropertiesResponseArgs) ToWorkspacePropertiesResponsePtrOutput() WorkspacePropertiesResponsePtrOutput {
	return i.ToWorkspacePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i WorkspacePropertiesResponseArgs) ToWorkspacePropertiesResponsePtrOutputWithContext(ctx context.Context) WorkspacePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacePropertiesResponseOutput).ToWorkspacePropertiesResponsePtrOutputWithContext(ctx)
}

// WorkspacePropertiesResponsePtrInput is an input type that accepts WorkspacePropertiesResponseArgs, WorkspacePropertiesResponsePtr and WorkspacePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `WorkspacePropertiesResponsePtrInput` via:
//
//          WorkspacePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type WorkspacePropertiesResponsePtrInput interface {
	pulumi.Input

	ToWorkspacePropertiesResponsePtrOutput() WorkspacePropertiesResponsePtrOutput
	ToWorkspacePropertiesResponsePtrOutputWithContext(context.Context) WorkspacePropertiesResponsePtrOutput
}

type workspacePropertiesResponsePtrType WorkspacePropertiesResponseArgs

func WorkspacePropertiesResponsePtr(v *WorkspacePropertiesResponseArgs) WorkspacePropertiesResponsePtrInput {
	return (*workspacePropertiesResponsePtrType)(v)
}

func (*workspacePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspacePropertiesResponse)(nil)).Elem()
}

func (i *workspacePropertiesResponsePtrType) ToWorkspacePropertiesResponsePtrOutput() WorkspacePropertiesResponsePtrOutput {
	return i.ToWorkspacePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *workspacePropertiesResponsePtrType) ToWorkspacePropertiesResponsePtrOutputWithContext(ctx context.Context) WorkspacePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacePropertiesResponsePtrOutput)
}

// The properties of a machine learning workspace.
type WorkspacePropertiesResponseOutput struct{ *pulumi.OutputState }

func (WorkspacePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacePropertiesResponse)(nil)).Elem()
}

func (o WorkspacePropertiesResponseOutput) ToWorkspacePropertiesResponseOutput() WorkspacePropertiesResponseOutput {
	return o
}

func (o WorkspacePropertiesResponseOutput) ToWorkspacePropertiesResponseOutputWithContext(ctx context.Context) WorkspacePropertiesResponseOutput {
	return o
}

func (o WorkspacePropertiesResponseOutput) ToWorkspacePropertiesResponsePtrOutput() WorkspacePropertiesResponsePtrOutput {
	return o.ToWorkspacePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o WorkspacePropertiesResponseOutput) ToWorkspacePropertiesResponsePtrOutputWithContext(ctx context.Context) WorkspacePropertiesResponsePtrOutput {
	return o.ApplyT(func(v WorkspacePropertiesResponse) *WorkspacePropertiesResponse {
		return &v
	}).(WorkspacePropertiesResponsePtrOutput)
}

// The creation time for this workspace resource.
func (o WorkspacePropertiesResponseOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacePropertiesResponse) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The key vault identifier used for encrypted workspaces.
func (o WorkspacePropertiesResponseOutput) KeyVaultIdentifierId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspacePropertiesResponse) *string { return v.KeyVaultIdentifierId }).(pulumi.StringPtrOutput)
}

// The email id of the owner for this workspace.
func (o WorkspacePropertiesResponseOutput) OwnerEmail() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacePropertiesResponse) string { return v.OwnerEmail }).(pulumi.StringOutput)
}

// The regional endpoint for the machine learning studio service which hosts this workspace.
func (o WorkspacePropertiesResponseOutput) StudioEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacePropertiesResponse) string { return v.StudioEndpoint }).(pulumi.StringOutput)
}

// The fully qualified arm id of the storage account associated with this workspace.
func (o WorkspacePropertiesResponseOutput) UserStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacePropertiesResponse) string { return v.UserStorageAccountId }).(pulumi.StringOutput)
}

// The immutable id associated with this workspace.
func (o WorkspacePropertiesResponseOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacePropertiesResponse) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

// The current state of workspace resource.
func (o WorkspacePropertiesResponseOutput) WorkspaceState() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacePropertiesResponse) string { return v.WorkspaceState }).(pulumi.StringOutput)
}

// The type of this workspace.
func (o WorkspacePropertiesResponseOutput) WorkspaceType() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacePropertiesResponse) string { return v.WorkspaceType }).(pulumi.StringOutput)
}

type WorkspacePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkspacePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspacePropertiesResponse)(nil)).Elem()
}

func (o WorkspacePropertiesResponsePtrOutput) ToWorkspacePropertiesResponsePtrOutput() WorkspacePropertiesResponsePtrOutput {
	return o
}

func (o WorkspacePropertiesResponsePtrOutput) ToWorkspacePropertiesResponsePtrOutputWithContext(ctx context.Context) WorkspacePropertiesResponsePtrOutput {
	return o
}

func (o WorkspacePropertiesResponsePtrOutput) Elem() WorkspacePropertiesResponseOutput {
	return o.ApplyT(func(v *WorkspacePropertiesResponse) WorkspacePropertiesResponse { return *v }).(WorkspacePropertiesResponseOutput)
}

// The creation time for this workspace resource.
func (o WorkspacePropertiesResponsePtrOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreationTime
	}).(pulumi.StringPtrOutput)
}

// The key vault identifier used for encrypted workspaces.
func (o WorkspacePropertiesResponsePtrOutput) KeyVaultIdentifierId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultIdentifierId
	}).(pulumi.StringPtrOutput)
}

// The email id of the owner for this workspace.
func (o WorkspacePropertiesResponsePtrOutput) OwnerEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OwnerEmail
	}).(pulumi.StringPtrOutput)
}

// The regional endpoint for the machine learning studio service which hosts this workspace.
func (o WorkspacePropertiesResponsePtrOutput) StudioEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StudioEndpoint
	}).(pulumi.StringPtrOutput)
}

// The fully qualified arm id of the storage account associated with this workspace.
func (o WorkspacePropertiesResponsePtrOutput) UserStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserStorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The immutable id associated with this workspace.
func (o WorkspacePropertiesResponsePtrOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.WorkspaceId
	}).(pulumi.StringPtrOutput)
}

// The current state of workspace resource.
func (o WorkspacePropertiesResponsePtrOutput) WorkspaceState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.WorkspaceState
	}).(pulumi.StringPtrOutput)
}

// The type of this workspace.
func (o WorkspacePropertiesResponsePtrOutput) WorkspaceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.WorkspaceType
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(WorkspaceTypeOutput{})
	pulumi.RegisterOutputType(WorkspacePropertiesResponseOutput{})
	pulumi.RegisterOutputType(WorkspacePropertiesResponsePtrOutput{})
}
