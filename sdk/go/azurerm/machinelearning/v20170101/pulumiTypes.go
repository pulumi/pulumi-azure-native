// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Information about an asset associated with the web service.
type AssetItem struct {
	// Asset's Id.
	Id *string `pulumi:"id"`
	// Information about the asset's input ports.
	InputPorts map[string]InputPort `pulumi:"inputPorts"`
	// Access information for the asset.
	LocationInfo BlobLocation `pulumi:"locationInfo"`
	// If the asset is a custom module, this holds the module's metadata.
	Metadata map[string]string `pulumi:"metadata"`
	// Asset's friendly name.
	Name string `pulumi:"name"`
	// Information about the asset's output ports.
	OutputPorts map[string]OutputPort `pulumi:"outputPorts"`
	// If the asset is a custom module, this holds the module's parameters.
	Parameters []ModuleAssetParameter `pulumi:"parameters"`
	// Asset's type.
	Type string `pulumi:"type"`
}

// AssetItemInput is an input type that accepts AssetItemArgs and AssetItemOutput values.
// You can construct a concrete instance of `AssetItemInput` via:
//
//          AssetItemArgs{...}
type AssetItemInput interface {
	pulumi.Input

	ToAssetItemOutput() AssetItemOutput
	ToAssetItemOutputWithContext(context.Context) AssetItemOutput
}

// Information about an asset associated with the web service.
type AssetItemArgs struct {
	// Asset's Id.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Information about the asset's input ports.
	InputPorts InputPortMapInput `pulumi:"inputPorts"`
	// Access information for the asset.
	LocationInfo BlobLocationInput `pulumi:"locationInfo"`
	// If the asset is a custom module, this holds the module's metadata.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Asset's friendly name.
	Name pulumi.StringInput `pulumi:"name"`
	// Information about the asset's output ports.
	OutputPorts OutputPortMapInput `pulumi:"outputPorts"`
	// If the asset is a custom module, this holds the module's parameters.
	Parameters ModuleAssetParameterArrayInput `pulumi:"parameters"`
	// Asset's type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AssetItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AssetItem)(nil)).Elem()
}

func (i AssetItemArgs) ToAssetItemOutput() AssetItemOutput {
	return i.ToAssetItemOutputWithContext(context.Background())
}

func (i AssetItemArgs) ToAssetItemOutputWithContext(ctx context.Context) AssetItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssetItemOutput)
}

// AssetItemMapInput is an input type that accepts AssetItemMap and AssetItemMapOutput values.
// You can construct a concrete instance of `AssetItemMapInput` via:
//
//          AssetItemMap{ "key": AssetItemArgs{...} }
type AssetItemMapInput interface {
	pulumi.Input

	ToAssetItemMapOutput() AssetItemMapOutput
	ToAssetItemMapOutputWithContext(context.Context) AssetItemMapOutput
}

type AssetItemMap map[string]AssetItemInput

func (AssetItemMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AssetItem)(nil)).Elem()
}

func (i AssetItemMap) ToAssetItemMapOutput() AssetItemMapOutput {
	return i.ToAssetItemMapOutputWithContext(context.Background())
}

func (i AssetItemMap) ToAssetItemMapOutputWithContext(ctx context.Context) AssetItemMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssetItemMapOutput)
}

// Information about an asset associated with the web service.
type AssetItemResponse struct {
	// Asset's Id.
	Id *string `pulumi:"id"`
	// Information about the asset's input ports.
	InputPorts map[string]InputPortResponse `pulumi:"inputPorts"`
	// Access information for the asset.
	LocationInfo BlobLocationResponse `pulumi:"locationInfo"`
	// If the asset is a custom module, this holds the module's metadata.
	Metadata map[string]string `pulumi:"metadata"`
	// Asset's friendly name.
	Name string `pulumi:"name"`
	// Information about the asset's output ports.
	OutputPorts map[string]OutputPortResponse `pulumi:"outputPorts"`
	// If the asset is a custom module, this holds the module's parameters.
	Parameters []ModuleAssetParameterResponse `pulumi:"parameters"`
	// Asset's type.
	Type string `pulumi:"type"`
}

// Information about an asset associated with the web service.
type AssetItemResponseOutput struct{ *pulumi.OutputState }

func (AssetItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssetItemResponse)(nil)).Elem()
}

func (o AssetItemResponseOutput) ToAssetItemResponseOutput() AssetItemResponseOutput {
	return o
}

func (o AssetItemResponseOutput) ToAssetItemResponseOutputWithContext(ctx context.Context) AssetItemResponseOutput {
	return o
}

// Asset's Id.
func (o AssetItemResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AssetItemResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Information about the asset's input ports.
func (o AssetItemResponseOutput) InputPorts() InputPortResponseMapOutput {
	return o.ApplyT(func(v AssetItemResponse) map[string]InputPortResponse { return v.InputPorts }).(InputPortResponseMapOutput)
}

// Access information for the asset.
func (o AssetItemResponseOutput) LocationInfo() BlobLocationResponseOutput {
	return o.ApplyT(func(v AssetItemResponse) BlobLocationResponse { return v.LocationInfo }).(BlobLocationResponseOutput)
}

// If the asset is a custom module, this holds the module's metadata.
func (o AssetItemResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v AssetItemResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Asset's friendly name.
func (o AssetItemResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AssetItemResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Information about the asset's output ports.
func (o AssetItemResponseOutput) OutputPorts() OutputPortResponseMapOutput {
	return o.ApplyT(func(v AssetItemResponse) map[string]OutputPortResponse { return v.OutputPorts }).(OutputPortResponseMapOutput)
}

// If the asset is a custom module, this holds the module's parameters.
func (o AssetItemResponseOutput) Parameters() ModuleAssetParameterResponseArrayOutput {
	return o.ApplyT(func(v AssetItemResponse) []ModuleAssetParameterResponse { return v.Parameters }).(ModuleAssetParameterResponseArrayOutput)
}

// Asset's type.
func (o AssetItemResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AssetItemResponse) string { return v.Type }).(pulumi.StringOutput)
}

type AssetItemResponseMapOutput struct{ *pulumi.OutputState }

func (AssetItemResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AssetItemResponse)(nil)).Elem()
}

func (o AssetItemResponseMapOutput) ToAssetItemResponseMapOutput() AssetItemResponseMapOutput {
	return o
}

func (o AssetItemResponseMapOutput) ToAssetItemResponseMapOutputWithContext(ctx context.Context) AssetItemResponseMapOutput {
	return o
}

func (o AssetItemResponseMapOutput) MapIndex(k pulumi.StringInput) AssetItemResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AssetItemResponse {
		return vs[0].(map[string]AssetItemResponse)[vs[1].(string)]
	}).(AssetItemResponseOutput)
}

// Describes the access location for a blob.
type BlobLocation struct {
	// Access credentials for the blob, if applicable (e.g. blob specified by storage account connection string + blob URI)
	Credentials *string `pulumi:"credentials"`
	// The URI from which the blob is accessible from. For example, aml://abc for system assets or https://xyz for user assets or payload.
	Uri string `pulumi:"uri"`
}

// BlobLocationInput is an input type that accepts BlobLocationArgs and BlobLocationOutput values.
// You can construct a concrete instance of `BlobLocationInput` via:
//
//          BlobLocationArgs{...}
type BlobLocationInput interface {
	pulumi.Input

	ToBlobLocationOutput() BlobLocationOutput
	ToBlobLocationOutputWithContext(context.Context) BlobLocationOutput
}

// Describes the access location for a blob.
type BlobLocationArgs struct {
	// Access credentials for the blob, if applicable (e.g. blob specified by storage account connection string + blob URI)
	Credentials pulumi.StringPtrInput `pulumi:"credentials"`
	// The URI from which the blob is accessible from. For example, aml://abc for system assets or https://xyz for user assets or payload.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (BlobLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobLocation)(nil)).Elem()
}

func (i BlobLocationArgs) ToBlobLocationOutput() BlobLocationOutput {
	return i.ToBlobLocationOutputWithContext(context.Background())
}

func (i BlobLocationArgs) ToBlobLocationOutputWithContext(ctx context.Context) BlobLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobLocationOutput)
}

func (i BlobLocationArgs) ToBlobLocationPtrOutput() BlobLocationPtrOutput {
	return i.ToBlobLocationPtrOutputWithContext(context.Background())
}

func (i BlobLocationArgs) ToBlobLocationPtrOutputWithContext(ctx context.Context) BlobLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobLocationOutput).ToBlobLocationPtrOutputWithContext(ctx)
}

// BlobLocationPtrInput is an input type that accepts BlobLocationArgs, BlobLocationPtr and BlobLocationPtrOutput values.
// You can construct a concrete instance of `BlobLocationPtrInput` via:
//
//          BlobLocationArgs{...}
//
//  or:
//
//          nil
type BlobLocationPtrInput interface {
	pulumi.Input

	ToBlobLocationPtrOutput() BlobLocationPtrOutput
	ToBlobLocationPtrOutputWithContext(context.Context) BlobLocationPtrOutput
}

type blobLocationPtrType BlobLocationArgs

func BlobLocationPtr(v *BlobLocationArgs) BlobLocationPtrInput {
	return (*blobLocationPtrType)(v)
}

func (*blobLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobLocation)(nil)).Elem()
}

func (i *blobLocationPtrType) ToBlobLocationPtrOutput() BlobLocationPtrOutput {
	return i.ToBlobLocationPtrOutputWithContext(context.Background())
}

func (i *blobLocationPtrType) ToBlobLocationPtrOutputWithContext(ctx context.Context) BlobLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobLocationPtrOutput)
}

// Describes the access location for a blob.
type BlobLocationResponse struct {
	// Access credentials for the blob, if applicable (e.g. blob specified by storage account connection string + blob URI)
	Credentials *string `pulumi:"credentials"`
	// The URI from which the blob is accessible from. For example, aml://abc for system assets or https://xyz for user assets or payload.
	Uri string `pulumi:"uri"`
}

// Describes the access location for a blob.
type BlobLocationResponseOutput struct{ *pulumi.OutputState }

func (BlobLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobLocationResponse)(nil)).Elem()
}

func (o BlobLocationResponseOutput) ToBlobLocationResponseOutput() BlobLocationResponseOutput {
	return o
}

func (o BlobLocationResponseOutput) ToBlobLocationResponseOutputWithContext(ctx context.Context) BlobLocationResponseOutput {
	return o
}

func (o BlobLocationResponseOutput) ToBlobLocationResponsePtrOutput() BlobLocationResponsePtrOutput {
	return o.ToBlobLocationResponsePtrOutputWithContext(context.Background())
}

func (o BlobLocationResponseOutput) ToBlobLocationResponsePtrOutputWithContext(ctx context.Context) BlobLocationResponsePtrOutput {
	return o.ApplyT(func(v BlobLocationResponse) *BlobLocationResponse {
		return &v
	}).(BlobLocationResponsePtrOutput)
}

// Access credentials for the blob, if applicable (e.g. blob specified by storage account connection string + blob URI)
func (o BlobLocationResponseOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobLocationResponse) *string { return v.Credentials }).(pulumi.StringPtrOutput)
}

// The URI from which the blob is accessible from. For example, aml://abc for system assets or https://xyz for user assets or payload.
func (o BlobLocationResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v BlobLocationResponse) string { return v.Uri }).(pulumi.StringOutput)
}

type BlobLocationResponsePtrOutput struct{ *pulumi.OutputState }

func (BlobLocationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobLocationResponse)(nil)).Elem()
}

func (o BlobLocationResponsePtrOutput) ToBlobLocationResponsePtrOutput() BlobLocationResponsePtrOutput {
	return o
}

func (o BlobLocationResponsePtrOutput) ToBlobLocationResponsePtrOutputWithContext(ctx context.Context) BlobLocationResponsePtrOutput {
	return o
}

func (o BlobLocationResponsePtrOutput) Elem() BlobLocationResponseOutput {
	return o.ApplyT(func(v *BlobLocationResponse) BlobLocationResponse { return *v }).(BlobLocationResponseOutput)
}

// Access credentials for the blob, if applicable (e.g. blob specified by storage account connection string + blob URI)
func (o BlobLocationResponsePtrOutput) Credentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlobLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(pulumi.StringPtrOutput)
}

// The URI from which the blob is accessible from. For example, aml://abc for system assets or https://xyz for user assets or payload.
func (o BlobLocationResponsePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlobLocationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

// Swagger 2.0 schema for a column within the data table representing a web service input or output. See Swagger specification: http://swagger.io/specification/
type ColumnSpecification struct {
	// If the data type is categorical, this provides the list of accepted categories.
	Enum []map[string]interface{} `pulumi:"enum"`
	// Additional format information for the data type.
	Format *string `pulumi:"format"`
	// Data type of the column.
	Type string `pulumi:"type"`
	// Flag indicating if the type supports null values or not.
	XMsIsnullable *bool `pulumi:"xMsIsnullable"`
	// Flag indicating whether the categories are treated as an ordered set or not, if this is a categorical column.
	XMsIsordered *bool `pulumi:"xMsIsordered"`
}

// ColumnSpecificationInput is an input type that accepts ColumnSpecificationArgs and ColumnSpecificationOutput values.
// You can construct a concrete instance of `ColumnSpecificationInput` via:
//
//          ColumnSpecificationArgs{...}
type ColumnSpecificationInput interface {
	pulumi.Input

	ToColumnSpecificationOutput() ColumnSpecificationOutput
	ToColumnSpecificationOutputWithContext(context.Context) ColumnSpecificationOutput
}

// Swagger 2.0 schema for a column within the data table representing a web service input or output. See Swagger specification: http://swagger.io/specification/
type ColumnSpecificationArgs struct {
	// If the data type is categorical, this provides the list of accepted categories.
	Enum pulumi.MapArrayInput `pulumi:"enum"`
	// Additional format information for the data type.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Data type of the column.
	Type pulumi.StringInput `pulumi:"type"`
	// Flag indicating if the type supports null values or not.
	XMsIsnullable pulumi.BoolPtrInput `pulumi:"xMsIsnullable"`
	// Flag indicating whether the categories are treated as an ordered set or not, if this is a categorical column.
	XMsIsordered pulumi.BoolPtrInput `pulumi:"xMsIsordered"`
}

func (ColumnSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ColumnSpecification)(nil)).Elem()
}

func (i ColumnSpecificationArgs) ToColumnSpecificationOutput() ColumnSpecificationOutput {
	return i.ToColumnSpecificationOutputWithContext(context.Background())
}

func (i ColumnSpecificationArgs) ToColumnSpecificationOutputWithContext(ctx context.Context) ColumnSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ColumnSpecificationOutput)
}

// ColumnSpecificationMapInput is an input type that accepts ColumnSpecificationMap and ColumnSpecificationMapOutput values.
// You can construct a concrete instance of `ColumnSpecificationMapInput` via:
//
//          ColumnSpecificationMap{ "key": ColumnSpecificationArgs{...} }
type ColumnSpecificationMapInput interface {
	pulumi.Input

	ToColumnSpecificationMapOutput() ColumnSpecificationMapOutput
	ToColumnSpecificationMapOutputWithContext(context.Context) ColumnSpecificationMapOutput
}

type ColumnSpecificationMap map[string]ColumnSpecificationInput

func (ColumnSpecificationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ColumnSpecification)(nil)).Elem()
}

func (i ColumnSpecificationMap) ToColumnSpecificationMapOutput() ColumnSpecificationMapOutput {
	return i.ToColumnSpecificationMapOutputWithContext(context.Background())
}

func (i ColumnSpecificationMap) ToColumnSpecificationMapOutputWithContext(ctx context.Context) ColumnSpecificationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ColumnSpecificationMapOutput)
}

// Swagger 2.0 schema for a column within the data table representing a web service input or output. See Swagger specification: http://swagger.io/specification/
type ColumnSpecificationResponse struct {
	// If the data type is categorical, this provides the list of accepted categories.
	Enum []map[string]interface{} `pulumi:"enum"`
	// Additional format information for the data type.
	Format *string `pulumi:"format"`
	// Data type of the column.
	Type string `pulumi:"type"`
	// Flag indicating if the type supports null values or not.
	XMsIsnullable *bool `pulumi:"xMsIsnullable"`
	// Flag indicating whether the categories are treated as an ordered set or not, if this is a categorical column.
	XMsIsordered *bool `pulumi:"xMsIsordered"`
}

// Swagger 2.0 schema for a column within the data table representing a web service input or output. See Swagger specification: http://swagger.io/specification/
type ColumnSpecificationResponseOutput struct{ *pulumi.OutputState }

func (ColumnSpecificationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ColumnSpecificationResponse)(nil)).Elem()
}

func (o ColumnSpecificationResponseOutput) ToColumnSpecificationResponseOutput() ColumnSpecificationResponseOutput {
	return o
}

func (o ColumnSpecificationResponseOutput) ToColumnSpecificationResponseOutputWithContext(ctx context.Context) ColumnSpecificationResponseOutput {
	return o
}

// If the data type is categorical, this provides the list of accepted categories.
func (o ColumnSpecificationResponseOutput) Enum() pulumi.MapArrayOutput {
	return o.ApplyT(func(v ColumnSpecificationResponse) []map[string]interface{} { return v.Enum }).(pulumi.MapArrayOutput)
}

// Additional format information for the data type.
func (o ColumnSpecificationResponseOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ColumnSpecificationResponse) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Data type of the column.
func (o ColumnSpecificationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ColumnSpecificationResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Flag indicating if the type supports null values or not.
func (o ColumnSpecificationResponseOutput) XMsIsnullable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ColumnSpecificationResponse) *bool { return v.XMsIsnullable }).(pulumi.BoolPtrOutput)
}

// Flag indicating whether the categories are treated as an ordered set or not, if this is a categorical column.
func (o ColumnSpecificationResponseOutput) XMsIsordered() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ColumnSpecificationResponse) *bool { return v.XMsIsordered }).(pulumi.BoolPtrOutput)
}

type ColumnSpecificationResponseMapOutput struct{ *pulumi.OutputState }

func (ColumnSpecificationResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ColumnSpecificationResponse)(nil)).Elem()
}

func (o ColumnSpecificationResponseMapOutput) ToColumnSpecificationResponseMapOutput() ColumnSpecificationResponseMapOutput {
	return o
}

func (o ColumnSpecificationResponseMapOutput) ToColumnSpecificationResponseMapOutputWithContext(ctx context.Context) ColumnSpecificationResponseMapOutput {
	return o
}

func (o ColumnSpecificationResponseMapOutput) MapIndex(k pulumi.StringInput) ColumnSpecificationResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ColumnSpecificationResponse {
		return vs[0].(map[string]ColumnSpecificationResponse)[vs[1].(string)]
	}).(ColumnSpecificationResponseOutput)
}

// Information about the machine learning commitment plan associated with the web service.
type CommitmentPlan struct {
	// Specifies the Azure Resource Manager ID of the commitment plan associated with the web service.
	Id string `pulumi:"id"`
}

// CommitmentPlanInput is an input type that accepts CommitmentPlanArgs and CommitmentPlanOutput values.
// You can construct a concrete instance of `CommitmentPlanInput` via:
//
//          CommitmentPlanArgs{...}
type CommitmentPlanInput interface {
	pulumi.Input

	ToCommitmentPlanOutput() CommitmentPlanOutput
	ToCommitmentPlanOutputWithContext(context.Context) CommitmentPlanOutput
}

// Information about the machine learning commitment plan associated with the web service.
type CommitmentPlanArgs struct {
	// Specifies the Azure Resource Manager ID of the commitment plan associated with the web service.
	Id pulumi.StringInput `pulumi:"id"`
}

func (CommitmentPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentPlan)(nil)).Elem()
}

func (i CommitmentPlanArgs) ToCommitmentPlanOutput() CommitmentPlanOutput {
	return i.ToCommitmentPlanOutputWithContext(context.Background())
}

func (i CommitmentPlanArgs) ToCommitmentPlanOutputWithContext(ctx context.Context) CommitmentPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentPlanOutput)
}

func (i CommitmentPlanArgs) ToCommitmentPlanPtrOutput() CommitmentPlanPtrOutput {
	return i.ToCommitmentPlanPtrOutputWithContext(context.Background())
}

func (i CommitmentPlanArgs) ToCommitmentPlanPtrOutputWithContext(ctx context.Context) CommitmentPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentPlanOutput).ToCommitmentPlanPtrOutputWithContext(ctx)
}

// CommitmentPlanPtrInput is an input type that accepts CommitmentPlanArgs, CommitmentPlanPtr and CommitmentPlanPtrOutput values.
// You can construct a concrete instance of `CommitmentPlanPtrInput` via:
//
//          CommitmentPlanArgs{...}
//
//  or:
//
//          nil
type CommitmentPlanPtrInput interface {
	pulumi.Input

	ToCommitmentPlanPtrOutput() CommitmentPlanPtrOutput
	ToCommitmentPlanPtrOutputWithContext(context.Context) CommitmentPlanPtrOutput
}

type commitmentPlanPtrType CommitmentPlanArgs

func CommitmentPlanPtr(v *CommitmentPlanArgs) CommitmentPlanPtrInput {
	return (*commitmentPlanPtrType)(v)
}

func (*commitmentPlanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CommitmentPlan)(nil)).Elem()
}

func (i *commitmentPlanPtrType) ToCommitmentPlanPtrOutput() CommitmentPlanPtrOutput {
	return i.ToCommitmentPlanPtrOutputWithContext(context.Background())
}

func (i *commitmentPlanPtrType) ToCommitmentPlanPtrOutputWithContext(ctx context.Context) CommitmentPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentPlanPtrOutput)
}

// Information about the machine learning commitment plan associated with the web service.
type CommitmentPlanResponse struct {
	// Specifies the Azure Resource Manager ID of the commitment plan associated with the web service.
	Id string `pulumi:"id"`
}

// Information about the machine learning commitment plan associated with the web service.
type CommitmentPlanResponseOutput struct{ *pulumi.OutputState }

func (CommitmentPlanResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentPlanResponse)(nil)).Elem()
}

func (o CommitmentPlanResponseOutput) ToCommitmentPlanResponseOutput() CommitmentPlanResponseOutput {
	return o
}

func (o CommitmentPlanResponseOutput) ToCommitmentPlanResponseOutputWithContext(ctx context.Context) CommitmentPlanResponseOutput {
	return o
}

func (o CommitmentPlanResponseOutput) ToCommitmentPlanResponsePtrOutput() CommitmentPlanResponsePtrOutput {
	return o.ToCommitmentPlanResponsePtrOutputWithContext(context.Background())
}

func (o CommitmentPlanResponseOutput) ToCommitmentPlanResponsePtrOutputWithContext(ctx context.Context) CommitmentPlanResponsePtrOutput {
	return o.ApplyT(func(v CommitmentPlanResponse) *CommitmentPlanResponse {
		return &v
	}).(CommitmentPlanResponsePtrOutput)
}

// Specifies the Azure Resource Manager ID of the commitment plan associated with the web service.
func (o CommitmentPlanResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentPlanResponse) string { return v.Id }).(pulumi.StringOutput)
}

type CommitmentPlanResponsePtrOutput struct{ *pulumi.OutputState }

func (CommitmentPlanResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CommitmentPlanResponse)(nil)).Elem()
}

func (o CommitmentPlanResponsePtrOutput) ToCommitmentPlanResponsePtrOutput() CommitmentPlanResponsePtrOutput {
	return o
}

func (o CommitmentPlanResponsePtrOutput) ToCommitmentPlanResponsePtrOutputWithContext(ctx context.Context) CommitmentPlanResponsePtrOutput {
	return o
}

func (o CommitmentPlanResponsePtrOutput) Elem() CommitmentPlanResponseOutput {
	return o.ApplyT(func(v *CommitmentPlanResponse) CommitmentPlanResponse { return *v }).(CommitmentPlanResponseOutput)
}

// Specifies the Azure Resource Manager ID of the commitment plan associated with the web service.
func (o CommitmentPlanResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommitmentPlanResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Diagnostics settings for an Azure ML web service.
type DiagnosticsConfiguration struct {
	// Specifies the date and time when the logging will cease. If null, diagnostic collection is not time limited.
	Expiry *string `pulumi:"expiry"`
	// Specifies the verbosity of the diagnostic output. Valid values are: None - disables tracing; Error - collects only error (stderr) traces; All - collects all traces (stdout and stderr).
	Level string `pulumi:"level"`
}

// DiagnosticsConfigurationInput is an input type that accepts DiagnosticsConfigurationArgs and DiagnosticsConfigurationOutput values.
// You can construct a concrete instance of `DiagnosticsConfigurationInput` via:
//
//          DiagnosticsConfigurationArgs{...}
type DiagnosticsConfigurationInput interface {
	pulumi.Input

	ToDiagnosticsConfigurationOutput() DiagnosticsConfigurationOutput
	ToDiagnosticsConfigurationOutputWithContext(context.Context) DiagnosticsConfigurationOutput
}

// Diagnostics settings for an Azure ML web service.
type DiagnosticsConfigurationArgs struct {
	// Specifies the date and time when the logging will cease. If null, diagnostic collection is not time limited.
	Expiry pulumi.StringPtrInput `pulumi:"expiry"`
	// Specifies the verbosity of the diagnostic output. Valid values are: None - disables tracing; Error - collects only error (stderr) traces; All - collects all traces (stdout and stderr).
	Level pulumi.StringInput `pulumi:"level"`
}

func (DiagnosticsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticsConfiguration)(nil)).Elem()
}

func (i DiagnosticsConfigurationArgs) ToDiagnosticsConfigurationOutput() DiagnosticsConfigurationOutput {
	return i.ToDiagnosticsConfigurationOutputWithContext(context.Background())
}

func (i DiagnosticsConfigurationArgs) ToDiagnosticsConfigurationOutputWithContext(ctx context.Context) DiagnosticsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsConfigurationOutput)
}

func (i DiagnosticsConfigurationArgs) ToDiagnosticsConfigurationPtrOutput() DiagnosticsConfigurationPtrOutput {
	return i.ToDiagnosticsConfigurationPtrOutputWithContext(context.Background())
}

func (i DiagnosticsConfigurationArgs) ToDiagnosticsConfigurationPtrOutputWithContext(ctx context.Context) DiagnosticsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsConfigurationOutput).ToDiagnosticsConfigurationPtrOutputWithContext(ctx)
}

// DiagnosticsConfigurationPtrInput is an input type that accepts DiagnosticsConfigurationArgs, DiagnosticsConfigurationPtr and DiagnosticsConfigurationPtrOutput values.
// You can construct a concrete instance of `DiagnosticsConfigurationPtrInput` via:
//
//          DiagnosticsConfigurationArgs{...}
//
//  or:
//
//          nil
type DiagnosticsConfigurationPtrInput interface {
	pulumi.Input

	ToDiagnosticsConfigurationPtrOutput() DiagnosticsConfigurationPtrOutput
	ToDiagnosticsConfigurationPtrOutputWithContext(context.Context) DiagnosticsConfigurationPtrOutput
}

type diagnosticsConfigurationPtrType DiagnosticsConfigurationArgs

func DiagnosticsConfigurationPtr(v *DiagnosticsConfigurationArgs) DiagnosticsConfigurationPtrInput {
	return (*diagnosticsConfigurationPtrType)(v)
}

func (*diagnosticsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticsConfiguration)(nil)).Elem()
}

func (i *diagnosticsConfigurationPtrType) ToDiagnosticsConfigurationPtrOutput() DiagnosticsConfigurationPtrOutput {
	return i.ToDiagnosticsConfigurationPtrOutputWithContext(context.Background())
}

func (i *diagnosticsConfigurationPtrType) ToDiagnosticsConfigurationPtrOutputWithContext(ctx context.Context) DiagnosticsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsConfigurationPtrOutput)
}

// Diagnostics settings for an Azure ML web service.
type DiagnosticsConfigurationResponse struct {
	// Specifies the date and time when the logging will cease. If null, diagnostic collection is not time limited.
	Expiry *string `pulumi:"expiry"`
	// Specifies the verbosity of the diagnostic output. Valid values are: None - disables tracing; Error - collects only error (stderr) traces; All - collects all traces (stdout and stderr).
	Level string `pulumi:"level"`
}

// Diagnostics settings for an Azure ML web service.
type DiagnosticsConfigurationResponseOutput struct{ *pulumi.OutputState }

func (DiagnosticsConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticsConfigurationResponse)(nil)).Elem()
}

func (o DiagnosticsConfigurationResponseOutput) ToDiagnosticsConfigurationResponseOutput() DiagnosticsConfigurationResponseOutput {
	return o
}

func (o DiagnosticsConfigurationResponseOutput) ToDiagnosticsConfigurationResponseOutputWithContext(ctx context.Context) DiagnosticsConfigurationResponseOutput {
	return o
}

func (o DiagnosticsConfigurationResponseOutput) ToDiagnosticsConfigurationResponsePtrOutput() DiagnosticsConfigurationResponsePtrOutput {
	return o.ToDiagnosticsConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o DiagnosticsConfigurationResponseOutput) ToDiagnosticsConfigurationResponsePtrOutputWithContext(ctx context.Context) DiagnosticsConfigurationResponsePtrOutput {
	return o.ApplyT(func(v DiagnosticsConfigurationResponse) *DiagnosticsConfigurationResponse {
		return &v
	}).(DiagnosticsConfigurationResponsePtrOutput)
}

// Specifies the date and time when the logging will cease. If null, diagnostic collection is not time limited.
func (o DiagnosticsConfigurationResponseOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiagnosticsConfigurationResponse) *string { return v.Expiry }).(pulumi.StringPtrOutput)
}

// Specifies the verbosity of the diagnostic output. Valid values are: None - disables tracing; Error - collects only error (stderr) traces; All - collects all traces (stdout and stderr).
func (o DiagnosticsConfigurationResponseOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticsConfigurationResponse) string { return v.Level }).(pulumi.StringOutput)
}

type DiagnosticsConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (DiagnosticsConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticsConfigurationResponse)(nil)).Elem()
}

func (o DiagnosticsConfigurationResponsePtrOutput) ToDiagnosticsConfigurationResponsePtrOutput() DiagnosticsConfigurationResponsePtrOutput {
	return o
}

func (o DiagnosticsConfigurationResponsePtrOutput) ToDiagnosticsConfigurationResponsePtrOutputWithContext(ctx context.Context) DiagnosticsConfigurationResponsePtrOutput {
	return o
}

func (o DiagnosticsConfigurationResponsePtrOutput) Elem() DiagnosticsConfigurationResponseOutput {
	return o.ApplyT(func(v *DiagnosticsConfigurationResponse) DiagnosticsConfigurationResponse { return *v }).(DiagnosticsConfigurationResponseOutput)
}

// Specifies the date and time when the logging will cease. If null, diagnostic collection is not time limited.
func (o DiagnosticsConfigurationResponsePtrOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiagnosticsConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Expiry
	}).(pulumi.StringPtrOutput)
}

// Specifies the verbosity of the diagnostic output. Valid values are: None - disables tracing; Error - collects only error (stderr) traces; All - collects all traces (stdout and stderr).
func (o DiagnosticsConfigurationResponsePtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiagnosticsConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Level
	}).(pulumi.StringPtrOutput)
}

// Sample input data for the service's input(s).
type ExampleRequest struct {
	// Sample input data for the web service's global parameters
	GlobalParameters map[string]map[string]interface{} `pulumi:"globalParameters"`
	// Sample input data for the web service's input(s) given as an input name to sample input values matrix map.
	Inputs map[string][][]map[string]interface{} `pulumi:"inputs"`
}

// ExampleRequestInput is an input type that accepts ExampleRequestArgs and ExampleRequestOutput values.
// You can construct a concrete instance of `ExampleRequestInput` via:
//
//          ExampleRequestArgs{...}
type ExampleRequestInput interface {
	pulumi.Input

	ToExampleRequestOutput() ExampleRequestOutput
	ToExampleRequestOutputWithContext(context.Context) ExampleRequestOutput
}

// Sample input data for the service's input(s).
type ExampleRequestArgs struct {
	// Sample input data for the web service's global parameters
	GlobalParameters pulumi.MapMapInput `pulumi:"globalParameters"`
	// Sample input data for the web service's input(s) given as an input name to sample input values matrix map.
	Inputs pulumi.MapArrayArrayMapInput `pulumi:"inputs"`
}

func (ExampleRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExampleRequest)(nil)).Elem()
}

func (i ExampleRequestArgs) ToExampleRequestOutput() ExampleRequestOutput {
	return i.ToExampleRequestOutputWithContext(context.Background())
}

func (i ExampleRequestArgs) ToExampleRequestOutputWithContext(ctx context.Context) ExampleRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExampleRequestOutput)
}

func (i ExampleRequestArgs) ToExampleRequestPtrOutput() ExampleRequestPtrOutput {
	return i.ToExampleRequestPtrOutputWithContext(context.Background())
}

func (i ExampleRequestArgs) ToExampleRequestPtrOutputWithContext(ctx context.Context) ExampleRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExampleRequestOutput).ToExampleRequestPtrOutputWithContext(ctx)
}

// ExampleRequestPtrInput is an input type that accepts ExampleRequestArgs, ExampleRequestPtr and ExampleRequestPtrOutput values.
// You can construct a concrete instance of `ExampleRequestPtrInput` via:
//
//          ExampleRequestArgs{...}
//
//  or:
//
//          nil
type ExampleRequestPtrInput interface {
	pulumi.Input

	ToExampleRequestPtrOutput() ExampleRequestPtrOutput
	ToExampleRequestPtrOutputWithContext(context.Context) ExampleRequestPtrOutput
}

type exampleRequestPtrType ExampleRequestArgs

func ExampleRequestPtr(v *ExampleRequestArgs) ExampleRequestPtrInput {
	return (*exampleRequestPtrType)(v)
}

func (*exampleRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExampleRequest)(nil)).Elem()
}

func (i *exampleRequestPtrType) ToExampleRequestPtrOutput() ExampleRequestPtrOutput {
	return i.ToExampleRequestPtrOutputWithContext(context.Background())
}

func (i *exampleRequestPtrType) ToExampleRequestPtrOutputWithContext(ctx context.Context) ExampleRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExampleRequestPtrOutput)
}

// Sample input data for the service's input(s).
type ExampleRequestResponse struct {
	// Sample input data for the web service's global parameters
	GlobalParameters map[string]map[string]interface{} `pulumi:"globalParameters"`
	// Sample input data for the web service's input(s) given as an input name to sample input values matrix map.
	Inputs map[string][][]map[string]interface{} `pulumi:"inputs"`
}

// Sample input data for the service's input(s).
type ExampleRequestResponseOutput struct{ *pulumi.OutputState }

func (ExampleRequestResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExampleRequestResponse)(nil)).Elem()
}

func (o ExampleRequestResponseOutput) ToExampleRequestResponseOutput() ExampleRequestResponseOutput {
	return o
}

func (o ExampleRequestResponseOutput) ToExampleRequestResponseOutputWithContext(ctx context.Context) ExampleRequestResponseOutput {
	return o
}

func (o ExampleRequestResponseOutput) ToExampleRequestResponsePtrOutput() ExampleRequestResponsePtrOutput {
	return o.ToExampleRequestResponsePtrOutputWithContext(context.Background())
}

func (o ExampleRequestResponseOutput) ToExampleRequestResponsePtrOutputWithContext(ctx context.Context) ExampleRequestResponsePtrOutput {
	return o.ApplyT(func(v ExampleRequestResponse) *ExampleRequestResponse {
		return &v
	}).(ExampleRequestResponsePtrOutput)
}

// Sample input data for the web service's global parameters
func (o ExampleRequestResponseOutput) GlobalParameters() pulumi.MapMapOutput {
	return o.ApplyT(func(v ExampleRequestResponse) map[string]map[string]interface{} { return v.GlobalParameters }).(pulumi.MapMapOutput)
}

// Sample input data for the web service's input(s) given as an input name to sample input values matrix map.
func (o ExampleRequestResponseOutput) Inputs() pulumi.MapArrayArrayMapOutput {
	return o.ApplyT(func(v ExampleRequestResponse) map[string][][]map[string]interface{} { return v.Inputs }).(pulumi.MapArrayArrayMapOutput)
}

type ExampleRequestResponsePtrOutput struct{ *pulumi.OutputState }

func (ExampleRequestResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExampleRequestResponse)(nil)).Elem()
}

func (o ExampleRequestResponsePtrOutput) ToExampleRequestResponsePtrOutput() ExampleRequestResponsePtrOutput {
	return o
}

func (o ExampleRequestResponsePtrOutput) ToExampleRequestResponsePtrOutputWithContext(ctx context.Context) ExampleRequestResponsePtrOutput {
	return o
}

func (o ExampleRequestResponsePtrOutput) Elem() ExampleRequestResponseOutput {
	return o.ApplyT(func(v *ExampleRequestResponse) ExampleRequestResponse { return *v }).(ExampleRequestResponseOutput)
}

// Sample input data for the web service's global parameters
func (o ExampleRequestResponsePtrOutput) GlobalParameters() pulumi.MapMapOutput {
	return o.ApplyT(func(v *ExampleRequestResponse) map[string]map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.GlobalParameters
	}).(pulumi.MapMapOutput)
}

// Sample input data for the web service's input(s) given as an input name to sample input values matrix map.
func (o ExampleRequestResponsePtrOutput) Inputs() pulumi.MapArrayArrayMapOutput {
	return o.ApplyT(func(v *ExampleRequestResponse) map[string][][]map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Inputs
	}).(pulumi.MapArrayArrayMapOutput)
}

// Defines an edge within the web service's graph.
type GraphEdge struct {
	// The source graph node's identifier.
	SourceNodeId *string `pulumi:"sourceNodeId"`
	// The identifier of the source node's port that the edge connects from.
	SourcePortId *string `pulumi:"sourcePortId"`
	// The destination graph node's identifier.
	TargetNodeId *string `pulumi:"targetNodeId"`
	// The identifier of the destination node's port that the edge connects into.
	TargetPortId *string `pulumi:"targetPortId"`
}

// GraphEdgeInput is an input type that accepts GraphEdgeArgs and GraphEdgeOutput values.
// You can construct a concrete instance of `GraphEdgeInput` via:
//
//          GraphEdgeArgs{...}
type GraphEdgeInput interface {
	pulumi.Input

	ToGraphEdgeOutput() GraphEdgeOutput
	ToGraphEdgeOutputWithContext(context.Context) GraphEdgeOutput
}

// Defines an edge within the web service's graph.
type GraphEdgeArgs struct {
	// The source graph node's identifier.
	SourceNodeId pulumi.StringPtrInput `pulumi:"sourceNodeId"`
	// The identifier of the source node's port that the edge connects from.
	SourcePortId pulumi.StringPtrInput `pulumi:"sourcePortId"`
	// The destination graph node's identifier.
	TargetNodeId pulumi.StringPtrInput `pulumi:"targetNodeId"`
	// The identifier of the destination node's port that the edge connects into.
	TargetPortId pulumi.StringPtrInput `pulumi:"targetPortId"`
}

func (GraphEdgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphEdge)(nil)).Elem()
}

func (i GraphEdgeArgs) ToGraphEdgeOutput() GraphEdgeOutput {
	return i.ToGraphEdgeOutputWithContext(context.Background())
}

func (i GraphEdgeArgs) ToGraphEdgeOutputWithContext(ctx context.Context) GraphEdgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphEdgeOutput)
}

// GraphEdgeArrayInput is an input type that accepts GraphEdgeArray and GraphEdgeArrayOutput values.
// You can construct a concrete instance of `GraphEdgeArrayInput` via:
//
//          GraphEdgeArray{ GraphEdgeArgs{...} }
type GraphEdgeArrayInput interface {
	pulumi.Input

	ToGraphEdgeArrayOutput() GraphEdgeArrayOutput
	ToGraphEdgeArrayOutputWithContext(context.Context) GraphEdgeArrayOutput
}

type GraphEdgeArray []GraphEdgeInput

func (GraphEdgeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GraphEdge)(nil)).Elem()
}

func (i GraphEdgeArray) ToGraphEdgeArrayOutput() GraphEdgeArrayOutput {
	return i.ToGraphEdgeArrayOutputWithContext(context.Background())
}

func (i GraphEdgeArray) ToGraphEdgeArrayOutputWithContext(ctx context.Context) GraphEdgeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphEdgeArrayOutput)
}

// Defines an edge within the web service's graph.
type GraphEdgeResponse struct {
	// The source graph node's identifier.
	SourceNodeId *string `pulumi:"sourceNodeId"`
	// The identifier of the source node's port that the edge connects from.
	SourcePortId *string `pulumi:"sourcePortId"`
	// The destination graph node's identifier.
	TargetNodeId *string `pulumi:"targetNodeId"`
	// The identifier of the destination node's port that the edge connects into.
	TargetPortId *string `pulumi:"targetPortId"`
}

// Defines an edge within the web service's graph.
type GraphEdgeResponseOutput struct{ *pulumi.OutputState }

func (GraphEdgeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphEdgeResponse)(nil)).Elem()
}

func (o GraphEdgeResponseOutput) ToGraphEdgeResponseOutput() GraphEdgeResponseOutput {
	return o
}

func (o GraphEdgeResponseOutput) ToGraphEdgeResponseOutputWithContext(ctx context.Context) GraphEdgeResponseOutput {
	return o
}

// The source graph node's identifier.
func (o GraphEdgeResponseOutput) SourceNodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphEdgeResponse) *string { return v.SourceNodeId }).(pulumi.StringPtrOutput)
}

// The identifier of the source node's port that the edge connects from.
func (o GraphEdgeResponseOutput) SourcePortId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphEdgeResponse) *string { return v.SourcePortId }).(pulumi.StringPtrOutput)
}

// The destination graph node's identifier.
func (o GraphEdgeResponseOutput) TargetNodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphEdgeResponse) *string { return v.TargetNodeId }).(pulumi.StringPtrOutput)
}

// The identifier of the destination node's port that the edge connects into.
func (o GraphEdgeResponseOutput) TargetPortId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphEdgeResponse) *string { return v.TargetPortId }).(pulumi.StringPtrOutput)
}

type GraphEdgeResponseArrayOutput struct{ *pulumi.OutputState }

func (GraphEdgeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GraphEdgeResponse)(nil)).Elem()
}

func (o GraphEdgeResponseArrayOutput) ToGraphEdgeResponseArrayOutput() GraphEdgeResponseArrayOutput {
	return o
}

func (o GraphEdgeResponseArrayOutput) ToGraphEdgeResponseArrayOutputWithContext(ctx context.Context) GraphEdgeResponseArrayOutput {
	return o
}

func (o GraphEdgeResponseArrayOutput) Index(i pulumi.IntInput) GraphEdgeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GraphEdgeResponse {
		return vs[0].([]GraphEdgeResponse)[vs[1].(int)]
	}).(GraphEdgeResponseOutput)
}

// Specifies a node in the web service graph. The node can either be an input, output or asset node, so only one of the corresponding id properties is populated at any given time.
type GraphNode struct {
	// The id of the asset represented by this node.
	AssetId *string `pulumi:"assetId"`
	// The id of the input element represented by this node.
	InputId *string `pulumi:"inputId"`
	// The id of the output element represented by this node.
	OutputId *string `pulumi:"outputId"`
	// If applicable, parameters of the node. Global graph parameters map into these, with values set at runtime.
	Parameters map[string]WebServiceParameter `pulumi:"parameters"`
}

// GraphNodeInput is an input type that accepts GraphNodeArgs and GraphNodeOutput values.
// You can construct a concrete instance of `GraphNodeInput` via:
//
//          GraphNodeArgs{...}
type GraphNodeInput interface {
	pulumi.Input

	ToGraphNodeOutput() GraphNodeOutput
	ToGraphNodeOutputWithContext(context.Context) GraphNodeOutput
}

// Specifies a node in the web service graph. The node can either be an input, output or asset node, so only one of the corresponding id properties is populated at any given time.
type GraphNodeArgs struct {
	// The id of the asset represented by this node.
	AssetId pulumi.StringPtrInput `pulumi:"assetId"`
	// The id of the input element represented by this node.
	InputId pulumi.StringPtrInput `pulumi:"inputId"`
	// The id of the output element represented by this node.
	OutputId pulumi.StringPtrInput `pulumi:"outputId"`
	// If applicable, parameters of the node. Global graph parameters map into these, with values set at runtime.
	Parameters WebServiceParameterMapInput `pulumi:"parameters"`
}

func (GraphNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphNode)(nil)).Elem()
}

func (i GraphNodeArgs) ToGraphNodeOutput() GraphNodeOutput {
	return i.ToGraphNodeOutputWithContext(context.Background())
}

func (i GraphNodeArgs) ToGraphNodeOutputWithContext(ctx context.Context) GraphNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphNodeOutput)
}

// GraphNodeMapInput is an input type that accepts GraphNodeMap and GraphNodeMapOutput values.
// You can construct a concrete instance of `GraphNodeMapInput` via:
//
//          GraphNodeMap{ "key": GraphNodeArgs{...} }
type GraphNodeMapInput interface {
	pulumi.Input

	ToGraphNodeMapOutput() GraphNodeMapOutput
	ToGraphNodeMapOutputWithContext(context.Context) GraphNodeMapOutput
}

type GraphNodeMap map[string]GraphNodeInput

func (GraphNodeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GraphNode)(nil)).Elem()
}

func (i GraphNodeMap) ToGraphNodeMapOutput() GraphNodeMapOutput {
	return i.ToGraphNodeMapOutputWithContext(context.Background())
}

func (i GraphNodeMap) ToGraphNodeMapOutputWithContext(ctx context.Context) GraphNodeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphNodeMapOutput)
}

// Specifies a node in the web service graph. The node can either be an input, output or asset node, so only one of the corresponding id properties is populated at any given time.
type GraphNodeResponse struct {
	// The id of the asset represented by this node.
	AssetId *string `pulumi:"assetId"`
	// The id of the input element represented by this node.
	InputId *string `pulumi:"inputId"`
	// The id of the output element represented by this node.
	OutputId *string `pulumi:"outputId"`
	// If applicable, parameters of the node. Global graph parameters map into these, with values set at runtime.
	Parameters map[string]WebServiceParameterResponse `pulumi:"parameters"`
}

// Specifies a node in the web service graph. The node can either be an input, output or asset node, so only one of the corresponding id properties is populated at any given time.
type GraphNodeResponseOutput struct{ *pulumi.OutputState }

func (GraphNodeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphNodeResponse)(nil)).Elem()
}

func (o GraphNodeResponseOutput) ToGraphNodeResponseOutput() GraphNodeResponseOutput {
	return o
}

func (o GraphNodeResponseOutput) ToGraphNodeResponseOutputWithContext(ctx context.Context) GraphNodeResponseOutput {
	return o
}

// The id of the asset represented by this node.
func (o GraphNodeResponseOutput) AssetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphNodeResponse) *string { return v.AssetId }).(pulumi.StringPtrOutput)
}

// The id of the input element represented by this node.
func (o GraphNodeResponseOutput) InputId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphNodeResponse) *string { return v.InputId }).(pulumi.StringPtrOutput)
}

// The id of the output element represented by this node.
func (o GraphNodeResponseOutput) OutputId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphNodeResponse) *string { return v.OutputId }).(pulumi.StringPtrOutput)
}

// If applicable, parameters of the node. Global graph parameters map into these, with values set at runtime.
func (o GraphNodeResponseOutput) Parameters() WebServiceParameterResponseMapOutput {
	return o.ApplyT(func(v GraphNodeResponse) map[string]WebServiceParameterResponse { return v.Parameters }).(WebServiceParameterResponseMapOutput)
}

type GraphNodeResponseMapOutput struct{ *pulumi.OutputState }

func (GraphNodeResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GraphNodeResponse)(nil)).Elem()
}

func (o GraphNodeResponseMapOutput) ToGraphNodeResponseMapOutput() GraphNodeResponseMapOutput {
	return o
}

func (o GraphNodeResponseMapOutput) ToGraphNodeResponseMapOutputWithContext(ctx context.Context) GraphNodeResponseMapOutput {
	return o
}

func (o GraphNodeResponseMapOutput) MapIndex(k pulumi.StringInput) GraphNodeResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GraphNodeResponse {
		return vs[0].(map[string]GraphNodeResponse)[vs[1].(string)]
	}).(GraphNodeResponseOutput)
}

// Defines the graph of modules making up the machine learning solution.
type GraphPackage struct {
	// The list of edges making up the graph.
	Edges []GraphEdge `pulumi:"edges"`
	// The collection of global parameters for the graph, given as a global parameter name to GraphParameter map. Each parameter here has a 1:1 match with the global parameters values map declared at the WebServiceProperties level.
	GraphParameters map[string]GraphParameter `pulumi:"graphParameters"`
	// The set of nodes making up the graph, provided as a nodeId to GraphNode map
	Nodes map[string]GraphNode `pulumi:"nodes"`
}

// GraphPackageInput is an input type that accepts GraphPackageArgs and GraphPackageOutput values.
// You can construct a concrete instance of `GraphPackageInput` via:
//
//          GraphPackageArgs{...}
type GraphPackageInput interface {
	pulumi.Input

	ToGraphPackageOutput() GraphPackageOutput
	ToGraphPackageOutputWithContext(context.Context) GraphPackageOutput
}

// Defines the graph of modules making up the machine learning solution.
type GraphPackageArgs struct {
	// The list of edges making up the graph.
	Edges GraphEdgeArrayInput `pulumi:"edges"`
	// The collection of global parameters for the graph, given as a global parameter name to GraphParameter map. Each parameter here has a 1:1 match with the global parameters values map declared at the WebServiceProperties level.
	GraphParameters GraphParameterMapInput `pulumi:"graphParameters"`
	// The set of nodes making up the graph, provided as a nodeId to GraphNode map
	Nodes GraphNodeMapInput `pulumi:"nodes"`
}

func (GraphPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphPackage)(nil)).Elem()
}

func (i GraphPackageArgs) ToGraphPackageOutput() GraphPackageOutput {
	return i.ToGraphPackageOutputWithContext(context.Background())
}

func (i GraphPackageArgs) ToGraphPackageOutputWithContext(ctx context.Context) GraphPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphPackageOutput)
}

func (i GraphPackageArgs) ToGraphPackagePtrOutput() GraphPackagePtrOutput {
	return i.ToGraphPackagePtrOutputWithContext(context.Background())
}

func (i GraphPackageArgs) ToGraphPackagePtrOutputWithContext(ctx context.Context) GraphPackagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphPackageOutput).ToGraphPackagePtrOutputWithContext(ctx)
}

// GraphPackagePtrInput is an input type that accepts GraphPackageArgs, GraphPackagePtr and GraphPackagePtrOutput values.
// You can construct a concrete instance of `GraphPackagePtrInput` via:
//
//          GraphPackageArgs{...}
//
//  or:
//
//          nil
type GraphPackagePtrInput interface {
	pulumi.Input

	ToGraphPackagePtrOutput() GraphPackagePtrOutput
	ToGraphPackagePtrOutputWithContext(context.Context) GraphPackagePtrOutput
}

type graphPackagePtrType GraphPackageArgs

func GraphPackagePtr(v *GraphPackageArgs) GraphPackagePtrInput {
	return (*graphPackagePtrType)(v)
}

func (*graphPackagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphPackage)(nil)).Elem()
}

func (i *graphPackagePtrType) ToGraphPackagePtrOutput() GraphPackagePtrOutput {
	return i.ToGraphPackagePtrOutputWithContext(context.Background())
}

func (i *graphPackagePtrType) ToGraphPackagePtrOutputWithContext(ctx context.Context) GraphPackagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphPackagePtrOutput)
}

// Defines the graph of modules making up the machine learning solution.
type GraphPackageResponse struct {
	// The list of edges making up the graph.
	Edges []GraphEdgeResponse `pulumi:"edges"`
	// The collection of global parameters for the graph, given as a global parameter name to GraphParameter map. Each parameter here has a 1:1 match with the global parameters values map declared at the WebServiceProperties level.
	GraphParameters map[string]GraphParameterResponse `pulumi:"graphParameters"`
	// The set of nodes making up the graph, provided as a nodeId to GraphNode map
	Nodes map[string]GraphNodeResponse `pulumi:"nodes"`
}

// Defines the graph of modules making up the machine learning solution.
type GraphPackageResponseOutput struct{ *pulumi.OutputState }

func (GraphPackageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphPackageResponse)(nil)).Elem()
}

func (o GraphPackageResponseOutput) ToGraphPackageResponseOutput() GraphPackageResponseOutput {
	return o
}

func (o GraphPackageResponseOutput) ToGraphPackageResponseOutputWithContext(ctx context.Context) GraphPackageResponseOutput {
	return o
}

func (o GraphPackageResponseOutput) ToGraphPackageResponsePtrOutput() GraphPackageResponsePtrOutput {
	return o.ToGraphPackageResponsePtrOutputWithContext(context.Background())
}

func (o GraphPackageResponseOutput) ToGraphPackageResponsePtrOutputWithContext(ctx context.Context) GraphPackageResponsePtrOutput {
	return o.ApplyT(func(v GraphPackageResponse) *GraphPackageResponse {
		return &v
	}).(GraphPackageResponsePtrOutput)
}

// The list of edges making up the graph.
func (o GraphPackageResponseOutput) Edges() GraphEdgeResponseArrayOutput {
	return o.ApplyT(func(v GraphPackageResponse) []GraphEdgeResponse { return v.Edges }).(GraphEdgeResponseArrayOutput)
}

// The collection of global parameters for the graph, given as a global parameter name to GraphParameter map. Each parameter here has a 1:1 match with the global parameters values map declared at the WebServiceProperties level.
func (o GraphPackageResponseOutput) GraphParameters() GraphParameterResponseMapOutput {
	return o.ApplyT(func(v GraphPackageResponse) map[string]GraphParameterResponse { return v.GraphParameters }).(GraphParameterResponseMapOutput)
}

// The set of nodes making up the graph, provided as a nodeId to GraphNode map
func (o GraphPackageResponseOutput) Nodes() GraphNodeResponseMapOutput {
	return o.ApplyT(func(v GraphPackageResponse) map[string]GraphNodeResponse { return v.Nodes }).(GraphNodeResponseMapOutput)
}

type GraphPackageResponsePtrOutput struct{ *pulumi.OutputState }

func (GraphPackageResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphPackageResponse)(nil)).Elem()
}

func (o GraphPackageResponsePtrOutput) ToGraphPackageResponsePtrOutput() GraphPackageResponsePtrOutput {
	return o
}

func (o GraphPackageResponsePtrOutput) ToGraphPackageResponsePtrOutputWithContext(ctx context.Context) GraphPackageResponsePtrOutput {
	return o
}

func (o GraphPackageResponsePtrOutput) Elem() GraphPackageResponseOutput {
	return o.ApplyT(func(v *GraphPackageResponse) GraphPackageResponse { return *v }).(GraphPackageResponseOutput)
}

// The list of edges making up the graph.
func (o GraphPackageResponsePtrOutput) Edges() GraphEdgeResponseArrayOutput {
	return o.ApplyT(func(v *GraphPackageResponse) []GraphEdgeResponse {
		if v == nil {
			return nil
		}
		return v.Edges
	}).(GraphEdgeResponseArrayOutput)
}

// The collection of global parameters for the graph, given as a global parameter name to GraphParameter map. Each parameter here has a 1:1 match with the global parameters values map declared at the WebServiceProperties level.
func (o GraphPackageResponsePtrOutput) GraphParameters() GraphParameterResponseMapOutput {
	return o.ApplyT(func(v *GraphPackageResponse) map[string]GraphParameterResponse {
		if v == nil {
			return nil
		}
		return v.GraphParameters
	}).(GraphParameterResponseMapOutput)
}

// The set of nodes making up the graph, provided as a nodeId to GraphNode map
func (o GraphPackageResponsePtrOutput) Nodes() GraphNodeResponseMapOutput {
	return o.ApplyT(func(v *GraphPackageResponse) map[string]GraphNodeResponse {
		if v == nil {
			return nil
		}
		return v.Nodes
	}).(GraphNodeResponseMapOutput)
}

// Defines a global parameter in the graph.
type GraphParameter struct {
	// Description of this graph parameter.
	Description *string `pulumi:"description"`
	// Association links for this parameter to nodes in the graph.
	Links []GraphParameterLink `pulumi:"links"`
	// Graph parameter's type.
	Type string `pulumi:"type"`
}

// GraphParameterInput is an input type that accepts GraphParameterArgs and GraphParameterOutput values.
// You can construct a concrete instance of `GraphParameterInput` via:
//
//          GraphParameterArgs{...}
type GraphParameterInput interface {
	pulumi.Input

	ToGraphParameterOutput() GraphParameterOutput
	ToGraphParameterOutputWithContext(context.Context) GraphParameterOutput
}

// Defines a global parameter in the graph.
type GraphParameterArgs struct {
	// Description of this graph parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Association links for this parameter to nodes in the graph.
	Links GraphParameterLinkArrayInput `pulumi:"links"`
	// Graph parameter's type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GraphParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphParameter)(nil)).Elem()
}

func (i GraphParameterArgs) ToGraphParameterOutput() GraphParameterOutput {
	return i.ToGraphParameterOutputWithContext(context.Background())
}

func (i GraphParameterArgs) ToGraphParameterOutputWithContext(ctx context.Context) GraphParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphParameterOutput)
}

// GraphParameterMapInput is an input type that accepts GraphParameterMap and GraphParameterMapOutput values.
// You can construct a concrete instance of `GraphParameterMapInput` via:
//
//          GraphParameterMap{ "key": GraphParameterArgs{...} }
type GraphParameterMapInput interface {
	pulumi.Input

	ToGraphParameterMapOutput() GraphParameterMapOutput
	ToGraphParameterMapOutputWithContext(context.Context) GraphParameterMapOutput
}

type GraphParameterMap map[string]GraphParameterInput

func (GraphParameterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GraphParameter)(nil)).Elem()
}

func (i GraphParameterMap) ToGraphParameterMapOutput() GraphParameterMapOutput {
	return i.ToGraphParameterMapOutputWithContext(context.Background())
}

func (i GraphParameterMap) ToGraphParameterMapOutputWithContext(ctx context.Context) GraphParameterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphParameterMapOutput)
}

// Association link for a graph global parameter to a node in the graph.
type GraphParameterLink struct {
	// The graph node's identifier
	NodeId string `pulumi:"nodeId"`
	// The identifier of the node parameter that the global parameter maps to.
	ParameterKey string `pulumi:"parameterKey"`
}

// GraphParameterLinkInput is an input type that accepts GraphParameterLinkArgs and GraphParameterLinkOutput values.
// You can construct a concrete instance of `GraphParameterLinkInput` via:
//
//          GraphParameterLinkArgs{...}
type GraphParameterLinkInput interface {
	pulumi.Input

	ToGraphParameterLinkOutput() GraphParameterLinkOutput
	ToGraphParameterLinkOutputWithContext(context.Context) GraphParameterLinkOutput
}

// Association link for a graph global parameter to a node in the graph.
type GraphParameterLinkArgs struct {
	// The graph node's identifier
	NodeId pulumi.StringInput `pulumi:"nodeId"`
	// The identifier of the node parameter that the global parameter maps to.
	ParameterKey pulumi.StringInput `pulumi:"parameterKey"`
}

func (GraphParameterLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphParameterLink)(nil)).Elem()
}

func (i GraphParameterLinkArgs) ToGraphParameterLinkOutput() GraphParameterLinkOutput {
	return i.ToGraphParameterLinkOutputWithContext(context.Background())
}

func (i GraphParameterLinkArgs) ToGraphParameterLinkOutputWithContext(ctx context.Context) GraphParameterLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphParameterLinkOutput)
}

// GraphParameterLinkArrayInput is an input type that accepts GraphParameterLinkArray and GraphParameterLinkArrayOutput values.
// You can construct a concrete instance of `GraphParameterLinkArrayInput` via:
//
//          GraphParameterLinkArray{ GraphParameterLinkArgs{...} }
type GraphParameterLinkArrayInput interface {
	pulumi.Input

	ToGraphParameterLinkArrayOutput() GraphParameterLinkArrayOutput
	ToGraphParameterLinkArrayOutputWithContext(context.Context) GraphParameterLinkArrayOutput
}

type GraphParameterLinkArray []GraphParameterLinkInput

func (GraphParameterLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GraphParameterLink)(nil)).Elem()
}

func (i GraphParameterLinkArray) ToGraphParameterLinkArrayOutput() GraphParameterLinkArrayOutput {
	return i.ToGraphParameterLinkArrayOutputWithContext(context.Background())
}

func (i GraphParameterLinkArray) ToGraphParameterLinkArrayOutputWithContext(ctx context.Context) GraphParameterLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphParameterLinkArrayOutput)
}

// Association link for a graph global parameter to a node in the graph.
type GraphParameterLinkResponse struct {
	// The graph node's identifier
	NodeId string `pulumi:"nodeId"`
	// The identifier of the node parameter that the global parameter maps to.
	ParameterKey string `pulumi:"parameterKey"`
}

// Association link for a graph global parameter to a node in the graph.
type GraphParameterLinkResponseOutput struct{ *pulumi.OutputState }

func (GraphParameterLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphParameterLinkResponse)(nil)).Elem()
}

func (o GraphParameterLinkResponseOutput) ToGraphParameterLinkResponseOutput() GraphParameterLinkResponseOutput {
	return o
}

func (o GraphParameterLinkResponseOutput) ToGraphParameterLinkResponseOutputWithContext(ctx context.Context) GraphParameterLinkResponseOutput {
	return o
}

// The graph node's identifier
func (o GraphParameterLinkResponseOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v GraphParameterLinkResponse) string { return v.NodeId }).(pulumi.StringOutput)
}

// The identifier of the node parameter that the global parameter maps to.
func (o GraphParameterLinkResponseOutput) ParameterKey() pulumi.StringOutput {
	return o.ApplyT(func(v GraphParameterLinkResponse) string { return v.ParameterKey }).(pulumi.StringOutput)
}

type GraphParameterLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (GraphParameterLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GraphParameterLinkResponse)(nil)).Elem()
}

func (o GraphParameterLinkResponseArrayOutput) ToGraphParameterLinkResponseArrayOutput() GraphParameterLinkResponseArrayOutput {
	return o
}

func (o GraphParameterLinkResponseArrayOutput) ToGraphParameterLinkResponseArrayOutputWithContext(ctx context.Context) GraphParameterLinkResponseArrayOutput {
	return o
}

func (o GraphParameterLinkResponseArrayOutput) Index(i pulumi.IntInput) GraphParameterLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GraphParameterLinkResponse {
		return vs[0].([]GraphParameterLinkResponse)[vs[1].(int)]
	}).(GraphParameterLinkResponseOutput)
}

// Defines a global parameter in the graph.
type GraphParameterResponse struct {
	// Description of this graph parameter.
	Description *string `pulumi:"description"`
	// Association links for this parameter to nodes in the graph.
	Links []GraphParameterLinkResponse `pulumi:"links"`
	// Graph parameter's type.
	Type string `pulumi:"type"`
}

// Defines a global parameter in the graph.
type GraphParameterResponseOutput struct{ *pulumi.OutputState }

func (GraphParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphParameterResponse)(nil)).Elem()
}

func (o GraphParameterResponseOutput) ToGraphParameterResponseOutput() GraphParameterResponseOutput {
	return o
}

func (o GraphParameterResponseOutput) ToGraphParameterResponseOutputWithContext(ctx context.Context) GraphParameterResponseOutput {
	return o
}

// Description of this graph parameter.
func (o GraphParameterResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphParameterResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Association links for this parameter to nodes in the graph.
func (o GraphParameterResponseOutput) Links() GraphParameterLinkResponseArrayOutput {
	return o.ApplyT(func(v GraphParameterResponse) []GraphParameterLinkResponse { return v.Links }).(GraphParameterLinkResponseArrayOutput)
}

// Graph parameter's type.
func (o GraphParameterResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GraphParameterResponse) string { return v.Type }).(pulumi.StringOutput)
}

type GraphParameterResponseMapOutput struct{ *pulumi.OutputState }

func (GraphParameterResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GraphParameterResponse)(nil)).Elem()
}

func (o GraphParameterResponseMapOutput) ToGraphParameterResponseMapOutput() GraphParameterResponseMapOutput {
	return o
}

func (o GraphParameterResponseMapOutput) ToGraphParameterResponseMapOutputWithContext(ctx context.Context) GraphParameterResponseMapOutput {
	return o
}

func (o GraphParameterResponseMapOutput) MapIndex(k pulumi.StringInput) GraphParameterResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GraphParameterResponse {
		return vs[0].(map[string]GraphParameterResponse)[vs[1].(string)]
	}).(GraphParameterResponseOutput)
}

// Asset input port
type InputPort struct {
	// Port data type.
	Type *string `pulumi:"type"`
}

// InputPortInput is an input type that accepts InputPortArgs and InputPortOutput values.
// You can construct a concrete instance of `InputPortInput` via:
//
//          InputPortArgs{...}
type InputPortInput interface {
	pulumi.Input

	ToInputPortOutput() InputPortOutput
	ToInputPortOutputWithContext(context.Context) InputPortOutput
}

// Asset input port
type InputPortArgs struct {
	// Port data type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (InputPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputPort)(nil)).Elem()
}

func (i InputPortArgs) ToInputPortOutput() InputPortOutput {
	return i.ToInputPortOutputWithContext(context.Background())
}

func (i InputPortArgs) ToInputPortOutputWithContext(ctx context.Context) InputPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputPortOutput)
}

// InputPortMapInput is an input type that accepts InputPortMap and InputPortMapOutput values.
// You can construct a concrete instance of `InputPortMapInput` via:
//
//          InputPortMap{ "key": InputPortArgs{...} }
type InputPortMapInput interface {
	pulumi.Input

	ToInputPortMapOutput() InputPortMapOutput
	ToInputPortMapOutputWithContext(context.Context) InputPortMapOutput
}

type InputPortMap map[string]InputPortInput

func (InputPortMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]InputPort)(nil)).Elem()
}

func (i InputPortMap) ToInputPortMapOutput() InputPortMapOutput {
	return i.ToInputPortMapOutputWithContext(context.Background())
}

func (i InputPortMap) ToInputPortMapOutputWithContext(ctx context.Context) InputPortMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputPortMapOutput)
}

// Asset input port
type InputPortResponse struct {
	// Port data type.
	Type *string `pulumi:"type"`
}

// Asset input port
type InputPortResponseOutput struct{ *pulumi.OutputState }

func (InputPortResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputPortResponse)(nil)).Elem()
}

func (o InputPortResponseOutput) ToInputPortResponseOutput() InputPortResponseOutput {
	return o
}

func (o InputPortResponseOutput) ToInputPortResponseOutputWithContext(ctx context.Context) InputPortResponseOutput {
	return o
}

// Port data type.
func (o InputPortResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputPortResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type InputPortResponseMapOutput struct{ *pulumi.OutputState }

func (InputPortResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]InputPortResponse)(nil)).Elem()
}

func (o InputPortResponseMapOutput) ToInputPortResponseMapOutput() InputPortResponseMapOutput {
	return o
}

func (o InputPortResponseMapOutput) ToInputPortResponseMapOutputWithContext(ctx context.Context) InputPortResponseMapOutput {
	return o
}

func (o InputPortResponseMapOutput) MapIndex(k pulumi.StringInput) InputPortResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) InputPortResponse {
		return vs[0].(map[string]InputPortResponse)[vs[1].(string)]
	}).(InputPortResponseOutput)
}

// Information about the machine learning workspace containing the experiment that is source for the web service.
type MachineLearningWorkspace struct {
	// Specifies the workspace ID of the machine learning workspace associated with the web service
	Id string `pulumi:"id"`
}

// MachineLearningWorkspaceInput is an input type that accepts MachineLearningWorkspaceArgs and MachineLearningWorkspaceOutput values.
// You can construct a concrete instance of `MachineLearningWorkspaceInput` via:
//
//          MachineLearningWorkspaceArgs{...}
type MachineLearningWorkspaceInput interface {
	pulumi.Input

	ToMachineLearningWorkspaceOutput() MachineLearningWorkspaceOutput
	ToMachineLearningWorkspaceOutputWithContext(context.Context) MachineLearningWorkspaceOutput
}

// Information about the machine learning workspace containing the experiment that is source for the web service.
type MachineLearningWorkspaceArgs struct {
	// Specifies the workspace ID of the machine learning workspace associated with the web service
	Id pulumi.StringInput `pulumi:"id"`
}

func (MachineLearningWorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineLearningWorkspace)(nil)).Elem()
}

func (i MachineLearningWorkspaceArgs) ToMachineLearningWorkspaceOutput() MachineLearningWorkspaceOutput {
	return i.ToMachineLearningWorkspaceOutputWithContext(context.Background())
}

func (i MachineLearningWorkspaceArgs) ToMachineLearningWorkspaceOutputWithContext(ctx context.Context) MachineLearningWorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineLearningWorkspaceOutput)
}

func (i MachineLearningWorkspaceArgs) ToMachineLearningWorkspacePtrOutput() MachineLearningWorkspacePtrOutput {
	return i.ToMachineLearningWorkspacePtrOutputWithContext(context.Background())
}

func (i MachineLearningWorkspaceArgs) ToMachineLearningWorkspacePtrOutputWithContext(ctx context.Context) MachineLearningWorkspacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineLearningWorkspaceOutput).ToMachineLearningWorkspacePtrOutputWithContext(ctx)
}

// MachineLearningWorkspacePtrInput is an input type that accepts MachineLearningWorkspaceArgs, MachineLearningWorkspacePtr and MachineLearningWorkspacePtrOutput values.
// You can construct a concrete instance of `MachineLearningWorkspacePtrInput` via:
//
//          MachineLearningWorkspaceArgs{...}
//
//  or:
//
//          nil
type MachineLearningWorkspacePtrInput interface {
	pulumi.Input

	ToMachineLearningWorkspacePtrOutput() MachineLearningWorkspacePtrOutput
	ToMachineLearningWorkspacePtrOutputWithContext(context.Context) MachineLearningWorkspacePtrOutput
}

type machineLearningWorkspacePtrType MachineLearningWorkspaceArgs

func MachineLearningWorkspacePtr(v *MachineLearningWorkspaceArgs) MachineLearningWorkspacePtrInput {
	return (*machineLearningWorkspacePtrType)(v)
}

func (*machineLearningWorkspacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineLearningWorkspace)(nil)).Elem()
}

func (i *machineLearningWorkspacePtrType) ToMachineLearningWorkspacePtrOutput() MachineLearningWorkspacePtrOutput {
	return i.ToMachineLearningWorkspacePtrOutputWithContext(context.Background())
}

func (i *machineLearningWorkspacePtrType) ToMachineLearningWorkspacePtrOutputWithContext(ctx context.Context) MachineLearningWorkspacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineLearningWorkspacePtrOutput)
}

// Information about the machine learning workspace containing the experiment that is source for the web service.
type MachineLearningWorkspaceResponse struct {
	// Specifies the workspace ID of the machine learning workspace associated with the web service
	Id string `pulumi:"id"`
}

// Information about the machine learning workspace containing the experiment that is source for the web service.
type MachineLearningWorkspaceResponseOutput struct{ *pulumi.OutputState }

func (MachineLearningWorkspaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineLearningWorkspaceResponse)(nil)).Elem()
}

func (o MachineLearningWorkspaceResponseOutput) ToMachineLearningWorkspaceResponseOutput() MachineLearningWorkspaceResponseOutput {
	return o
}

func (o MachineLearningWorkspaceResponseOutput) ToMachineLearningWorkspaceResponseOutputWithContext(ctx context.Context) MachineLearningWorkspaceResponseOutput {
	return o
}

func (o MachineLearningWorkspaceResponseOutput) ToMachineLearningWorkspaceResponsePtrOutput() MachineLearningWorkspaceResponsePtrOutput {
	return o.ToMachineLearningWorkspaceResponsePtrOutputWithContext(context.Background())
}

func (o MachineLearningWorkspaceResponseOutput) ToMachineLearningWorkspaceResponsePtrOutputWithContext(ctx context.Context) MachineLearningWorkspaceResponsePtrOutput {
	return o.ApplyT(func(v MachineLearningWorkspaceResponse) *MachineLearningWorkspaceResponse {
		return &v
	}).(MachineLearningWorkspaceResponsePtrOutput)
}

// Specifies the workspace ID of the machine learning workspace associated with the web service
func (o MachineLearningWorkspaceResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MachineLearningWorkspaceResponse) string { return v.Id }).(pulumi.StringOutput)
}

type MachineLearningWorkspaceResponsePtrOutput struct{ *pulumi.OutputState }

func (MachineLearningWorkspaceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineLearningWorkspaceResponse)(nil)).Elem()
}

func (o MachineLearningWorkspaceResponsePtrOutput) ToMachineLearningWorkspaceResponsePtrOutput() MachineLearningWorkspaceResponsePtrOutput {
	return o
}

func (o MachineLearningWorkspaceResponsePtrOutput) ToMachineLearningWorkspaceResponsePtrOutputWithContext(ctx context.Context) MachineLearningWorkspaceResponsePtrOutput {
	return o
}

func (o MachineLearningWorkspaceResponsePtrOutput) Elem() MachineLearningWorkspaceResponseOutput {
	return o.ApplyT(func(v *MachineLearningWorkspaceResponse) MachineLearningWorkspaceResponse { return *v }).(MachineLearningWorkspaceResponseOutput)
}

// Specifies the workspace ID of the machine learning workspace associated with the web service
func (o MachineLearningWorkspaceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineLearningWorkspaceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Nested parameter definition.
type ModeValueInfo struct {
	// The interface string name for the nested parameter.
	InterfaceString *string `pulumi:"interfaceString"`
	// The definition of the parameter.
	Parameters []ModuleAssetParameter `pulumi:"parameters"`
}

// ModeValueInfoInput is an input type that accepts ModeValueInfoArgs and ModeValueInfoOutput values.
// You can construct a concrete instance of `ModeValueInfoInput` via:
//
//          ModeValueInfoArgs{...}
type ModeValueInfoInput interface {
	pulumi.Input

	ToModeValueInfoOutput() ModeValueInfoOutput
	ToModeValueInfoOutputWithContext(context.Context) ModeValueInfoOutput
}

// Nested parameter definition.
type ModeValueInfoArgs struct {
	// The interface string name for the nested parameter.
	InterfaceString pulumi.StringPtrInput `pulumi:"interfaceString"`
	// The definition of the parameter.
	Parameters ModuleAssetParameterArrayInput `pulumi:"parameters"`
}

func (ModeValueInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModeValueInfo)(nil)).Elem()
}

func (i ModeValueInfoArgs) ToModeValueInfoOutput() ModeValueInfoOutput {
	return i.ToModeValueInfoOutputWithContext(context.Background())
}

func (i ModeValueInfoArgs) ToModeValueInfoOutputWithContext(ctx context.Context) ModeValueInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModeValueInfoOutput)
}

// ModeValueInfoMapInput is an input type that accepts ModeValueInfoMap and ModeValueInfoMapOutput values.
// You can construct a concrete instance of `ModeValueInfoMapInput` via:
//
//          ModeValueInfoMap{ "key": ModeValueInfoArgs{...} }
type ModeValueInfoMapInput interface {
	pulumi.Input

	ToModeValueInfoMapOutput() ModeValueInfoMapOutput
	ToModeValueInfoMapOutputWithContext(context.Context) ModeValueInfoMapOutput
}

type ModeValueInfoMap map[string]ModeValueInfoInput

func (ModeValueInfoMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ModeValueInfo)(nil)).Elem()
}

func (i ModeValueInfoMap) ToModeValueInfoMapOutput() ModeValueInfoMapOutput {
	return i.ToModeValueInfoMapOutputWithContext(context.Background())
}

func (i ModeValueInfoMap) ToModeValueInfoMapOutputWithContext(ctx context.Context) ModeValueInfoMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModeValueInfoMapOutput)
}

// Nested parameter definition.
type ModeValueInfoResponse struct {
	// The interface string name for the nested parameter.
	InterfaceString *string `pulumi:"interfaceString"`
	// The definition of the parameter.
	Parameters []ModuleAssetParameterResponse `pulumi:"parameters"`
}

// Nested parameter definition.
type ModeValueInfoResponseOutput struct{ *pulumi.OutputState }

func (ModeValueInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModeValueInfoResponse)(nil)).Elem()
}

func (o ModeValueInfoResponseOutput) ToModeValueInfoResponseOutput() ModeValueInfoResponseOutput {
	return o
}

func (o ModeValueInfoResponseOutput) ToModeValueInfoResponseOutputWithContext(ctx context.Context) ModeValueInfoResponseOutput {
	return o
}

// The interface string name for the nested parameter.
func (o ModeValueInfoResponseOutput) InterfaceString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModeValueInfoResponse) *string { return v.InterfaceString }).(pulumi.StringPtrOutput)
}

// The definition of the parameter.
func (o ModeValueInfoResponseOutput) Parameters() ModuleAssetParameterResponseArrayOutput {
	return o.ApplyT(func(v ModeValueInfoResponse) []ModuleAssetParameterResponse { return v.Parameters }).(ModuleAssetParameterResponseArrayOutput)
}

type ModeValueInfoResponseMapOutput struct{ *pulumi.OutputState }

func (ModeValueInfoResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ModeValueInfoResponse)(nil)).Elem()
}

func (o ModeValueInfoResponseMapOutput) ToModeValueInfoResponseMapOutput() ModeValueInfoResponseMapOutput {
	return o
}

func (o ModeValueInfoResponseMapOutput) ToModeValueInfoResponseMapOutputWithContext(ctx context.Context) ModeValueInfoResponseMapOutput {
	return o
}

func (o ModeValueInfoResponseMapOutput) MapIndex(k pulumi.StringInput) ModeValueInfoResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ModeValueInfoResponse {
		return vs[0].(map[string]ModeValueInfoResponse)[vs[1].(string)]
	}).(ModeValueInfoResponseOutput)
}

// Parameter definition for a module asset.
type ModuleAssetParameter struct {
	// Definitions for nested interface parameters if this is a complex module parameter.
	ModeValuesInfo map[string]ModeValueInfo `pulumi:"modeValuesInfo"`
	// Parameter name.
	Name *string `pulumi:"name"`
	// Parameter type.
	ParameterType *string `pulumi:"parameterType"`
}

// ModuleAssetParameterInput is an input type that accepts ModuleAssetParameterArgs and ModuleAssetParameterOutput values.
// You can construct a concrete instance of `ModuleAssetParameterInput` via:
//
//          ModuleAssetParameterArgs{...}
type ModuleAssetParameterInput interface {
	pulumi.Input

	ToModuleAssetParameterOutput() ModuleAssetParameterOutput
	ToModuleAssetParameterOutputWithContext(context.Context) ModuleAssetParameterOutput
}

// Parameter definition for a module asset.
type ModuleAssetParameterArgs struct {
	// Definitions for nested interface parameters if this is a complex module parameter.
	ModeValuesInfo ModeValueInfoMapInput `pulumi:"modeValuesInfo"`
	// Parameter name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Parameter type.
	ParameterType pulumi.StringPtrInput `pulumi:"parameterType"`
}

func (ModuleAssetParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModuleAssetParameter)(nil)).Elem()
}

func (i ModuleAssetParameterArgs) ToModuleAssetParameterOutput() ModuleAssetParameterOutput {
	return i.ToModuleAssetParameterOutputWithContext(context.Background())
}

func (i ModuleAssetParameterArgs) ToModuleAssetParameterOutputWithContext(ctx context.Context) ModuleAssetParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModuleAssetParameterOutput)
}

// ModuleAssetParameterArrayInput is an input type that accepts ModuleAssetParameterArray and ModuleAssetParameterArrayOutput values.
// You can construct a concrete instance of `ModuleAssetParameterArrayInput` via:
//
//          ModuleAssetParameterArray{ ModuleAssetParameterArgs{...} }
type ModuleAssetParameterArrayInput interface {
	pulumi.Input

	ToModuleAssetParameterArrayOutput() ModuleAssetParameterArrayOutput
	ToModuleAssetParameterArrayOutputWithContext(context.Context) ModuleAssetParameterArrayOutput
}

type ModuleAssetParameterArray []ModuleAssetParameterInput

func (ModuleAssetParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModuleAssetParameter)(nil)).Elem()
}

func (i ModuleAssetParameterArray) ToModuleAssetParameterArrayOutput() ModuleAssetParameterArrayOutput {
	return i.ToModuleAssetParameterArrayOutputWithContext(context.Background())
}

func (i ModuleAssetParameterArray) ToModuleAssetParameterArrayOutputWithContext(ctx context.Context) ModuleAssetParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModuleAssetParameterArrayOutput)
}

// Parameter definition for a module asset.
type ModuleAssetParameterResponse struct {
	// Definitions for nested interface parameters if this is a complex module parameter.
	ModeValuesInfo map[string]ModeValueInfoResponse `pulumi:"modeValuesInfo"`
	// Parameter name.
	Name *string `pulumi:"name"`
	// Parameter type.
	ParameterType *string `pulumi:"parameterType"`
}

// Parameter definition for a module asset.
type ModuleAssetParameterResponseOutput struct{ *pulumi.OutputState }

func (ModuleAssetParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModuleAssetParameterResponse)(nil)).Elem()
}

func (o ModuleAssetParameterResponseOutput) ToModuleAssetParameterResponseOutput() ModuleAssetParameterResponseOutput {
	return o
}

func (o ModuleAssetParameterResponseOutput) ToModuleAssetParameterResponseOutputWithContext(ctx context.Context) ModuleAssetParameterResponseOutput {
	return o
}

// Definitions for nested interface parameters if this is a complex module parameter.
func (o ModuleAssetParameterResponseOutput) ModeValuesInfo() ModeValueInfoResponseMapOutput {
	return o.ApplyT(func(v ModuleAssetParameterResponse) map[string]ModeValueInfoResponse { return v.ModeValuesInfo }).(ModeValueInfoResponseMapOutput)
}

// Parameter name.
func (o ModuleAssetParameterResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModuleAssetParameterResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Parameter type.
func (o ModuleAssetParameterResponseOutput) ParameterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModuleAssetParameterResponse) *string { return v.ParameterType }).(pulumi.StringPtrOutput)
}

type ModuleAssetParameterResponseArrayOutput struct{ *pulumi.OutputState }

func (ModuleAssetParameterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModuleAssetParameterResponse)(nil)).Elem()
}

func (o ModuleAssetParameterResponseArrayOutput) ToModuleAssetParameterResponseArrayOutput() ModuleAssetParameterResponseArrayOutput {
	return o
}

func (o ModuleAssetParameterResponseArrayOutput) ToModuleAssetParameterResponseArrayOutputWithContext(ctx context.Context) ModuleAssetParameterResponseArrayOutput {
	return o
}

func (o ModuleAssetParameterResponseArrayOutput) Index(i pulumi.IntInput) ModuleAssetParameterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ModuleAssetParameterResponse {
		return vs[0].([]ModuleAssetParameterResponse)[vs[1].(int)]
	}).(ModuleAssetParameterResponseOutput)
}

// Asset output port
type OutputPort struct {
	// Port data type.
	Type *string `pulumi:"type"`
}

// OutputPortInput is an input type that accepts OutputPortArgs and OutputPortOutput values.
// You can construct a concrete instance of `OutputPortInput` via:
//
//          OutputPortArgs{...}
type OutputPortInput interface {
	pulumi.Input

	ToOutputPortOutput() OutputPortOutput
	ToOutputPortOutputWithContext(context.Context) OutputPortOutput
}

// Asset output port
type OutputPortArgs struct {
	// Port data type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (OutputPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputPort)(nil)).Elem()
}

func (i OutputPortArgs) ToOutputPortOutput() OutputPortOutput {
	return i.ToOutputPortOutputWithContext(context.Background())
}

func (i OutputPortArgs) ToOutputPortOutputWithContext(ctx context.Context) OutputPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputPortOutput)
}

// OutputPortMapInput is an input type that accepts OutputPortMap and OutputPortMapOutput values.
// You can construct a concrete instance of `OutputPortMapInput` via:
//
//          OutputPortMap{ "key": OutputPortArgs{...} }
type OutputPortMapInput interface {
	pulumi.Input

	ToOutputPortMapOutput() OutputPortMapOutput
	ToOutputPortMapOutputWithContext(context.Context) OutputPortMapOutput
}

type OutputPortMap map[string]OutputPortInput

func (OutputPortMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]OutputPort)(nil)).Elem()
}

func (i OutputPortMap) ToOutputPortMapOutput() OutputPortMapOutput {
	return i.ToOutputPortMapOutputWithContext(context.Background())
}

func (i OutputPortMap) ToOutputPortMapOutputWithContext(ctx context.Context) OutputPortMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputPortMapOutput)
}

// Asset output port
type OutputPortResponse struct {
	// Port data type.
	Type *string `pulumi:"type"`
}

// Asset output port
type OutputPortResponseOutput struct{ *pulumi.OutputState }

func (OutputPortResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputPortResponse)(nil)).Elem()
}

func (o OutputPortResponseOutput) ToOutputPortResponseOutput() OutputPortResponseOutput {
	return o
}

func (o OutputPortResponseOutput) ToOutputPortResponseOutputWithContext(ctx context.Context) OutputPortResponseOutput {
	return o
}

// Port data type.
func (o OutputPortResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputPortResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type OutputPortResponseMapOutput struct{ *pulumi.OutputState }

func (OutputPortResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]OutputPortResponse)(nil)).Elem()
}

func (o OutputPortResponseMapOutput) ToOutputPortResponseMapOutput() OutputPortResponseMapOutput {
	return o
}

func (o OutputPortResponseMapOutput) ToOutputPortResponseMapOutputWithContext(ctx context.Context) OutputPortResponseMapOutput {
	return o
}

func (o OutputPortResponseMapOutput) MapIndex(k pulumi.StringInput) OutputPortResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) OutputPortResponse {
		return vs[0].(map[string]OutputPortResponse)[vs[1].(string)]
	}).(OutputPortResponseOutput)
}

// Holds the available configuration options for an Azure ML web service endpoint.
type RealtimeConfiguration struct {
	// Specifies the maximum concurrent calls that can be made to the web service. Minimum value: 4, Maximum value: 200.
	MaxConcurrentCalls *int `pulumi:"maxConcurrentCalls"`
}

// RealtimeConfigurationInput is an input type that accepts RealtimeConfigurationArgs and RealtimeConfigurationOutput values.
// You can construct a concrete instance of `RealtimeConfigurationInput` via:
//
//          RealtimeConfigurationArgs{...}
type RealtimeConfigurationInput interface {
	pulumi.Input

	ToRealtimeConfigurationOutput() RealtimeConfigurationOutput
	ToRealtimeConfigurationOutputWithContext(context.Context) RealtimeConfigurationOutput
}

// Holds the available configuration options for an Azure ML web service endpoint.
type RealtimeConfigurationArgs struct {
	// Specifies the maximum concurrent calls that can be made to the web service. Minimum value: 4, Maximum value: 200.
	MaxConcurrentCalls pulumi.IntPtrInput `pulumi:"maxConcurrentCalls"`
}

func (RealtimeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeConfiguration)(nil)).Elem()
}

func (i RealtimeConfigurationArgs) ToRealtimeConfigurationOutput() RealtimeConfigurationOutput {
	return i.ToRealtimeConfigurationOutputWithContext(context.Background())
}

func (i RealtimeConfigurationArgs) ToRealtimeConfigurationOutputWithContext(ctx context.Context) RealtimeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeConfigurationOutput)
}

func (i RealtimeConfigurationArgs) ToRealtimeConfigurationPtrOutput() RealtimeConfigurationPtrOutput {
	return i.ToRealtimeConfigurationPtrOutputWithContext(context.Background())
}

func (i RealtimeConfigurationArgs) ToRealtimeConfigurationPtrOutputWithContext(ctx context.Context) RealtimeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeConfigurationOutput).ToRealtimeConfigurationPtrOutputWithContext(ctx)
}

// RealtimeConfigurationPtrInput is an input type that accepts RealtimeConfigurationArgs, RealtimeConfigurationPtr and RealtimeConfigurationPtrOutput values.
// You can construct a concrete instance of `RealtimeConfigurationPtrInput` via:
//
//          RealtimeConfigurationArgs{...}
//
//  or:
//
//          nil
type RealtimeConfigurationPtrInput interface {
	pulumi.Input

	ToRealtimeConfigurationPtrOutput() RealtimeConfigurationPtrOutput
	ToRealtimeConfigurationPtrOutputWithContext(context.Context) RealtimeConfigurationPtrOutput
}

type realtimeConfigurationPtrType RealtimeConfigurationArgs

func RealtimeConfigurationPtr(v *RealtimeConfigurationArgs) RealtimeConfigurationPtrInput {
	return (*realtimeConfigurationPtrType)(v)
}

func (*realtimeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RealtimeConfiguration)(nil)).Elem()
}

func (i *realtimeConfigurationPtrType) ToRealtimeConfigurationPtrOutput() RealtimeConfigurationPtrOutput {
	return i.ToRealtimeConfigurationPtrOutputWithContext(context.Background())
}

func (i *realtimeConfigurationPtrType) ToRealtimeConfigurationPtrOutputWithContext(ctx context.Context) RealtimeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeConfigurationPtrOutput)
}

// Holds the available configuration options for an Azure ML web service endpoint.
type RealtimeConfigurationResponse struct {
	// Specifies the maximum concurrent calls that can be made to the web service. Minimum value: 4, Maximum value: 200.
	MaxConcurrentCalls *int `pulumi:"maxConcurrentCalls"`
}

// Holds the available configuration options for an Azure ML web service endpoint.
type RealtimeConfigurationResponseOutput struct{ *pulumi.OutputState }

func (RealtimeConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeConfigurationResponse)(nil)).Elem()
}

func (o RealtimeConfigurationResponseOutput) ToRealtimeConfigurationResponseOutput() RealtimeConfigurationResponseOutput {
	return o
}

func (o RealtimeConfigurationResponseOutput) ToRealtimeConfigurationResponseOutputWithContext(ctx context.Context) RealtimeConfigurationResponseOutput {
	return o
}

func (o RealtimeConfigurationResponseOutput) ToRealtimeConfigurationResponsePtrOutput() RealtimeConfigurationResponsePtrOutput {
	return o.ToRealtimeConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o RealtimeConfigurationResponseOutput) ToRealtimeConfigurationResponsePtrOutputWithContext(ctx context.Context) RealtimeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v RealtimeConfigurationResponse) *RealtimeConfigurationResponse {
		return &v
	}).(RealtimeConfigurationResponsePtrOutput)
}

// Specifies the maximum concurrent calls that can be made to the web service. Minimum value: 4, Maximum value: 200.
func (o RealtimeConfigurationResponseOutput) MaxConcurrentCalls() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RealtimeConfigurationResponse) *int { return v.MaxConcurrentCalls }).(pulumi.IntPtrOutput)
}

type RealtimeConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (RealtimeConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RealtimeConfigurationResponse)(nil)).Elem()
}

func (o RealtimeConfigurationResponsePtrOutput) ToRealtimeConfigurationResponsePtrOutput() RealtimeConfigurationResponsePtrOutput {
	return o
}

func (o RealtimeConfigurationResponsePtrOutput) ToRealtimeConfigurationResponsePtrOutputWithContext(ctx context.Context) RealtimeConfigurationResponsePtrOutput {
	return o
}

func (o RealtimeConfigurationResponsePtrOutput) Elem() RealtimeConfigurationResponseOutput {
	return o.ApplyT(func(v *RealtimeConfigurationResponse) RealtimeConfigurationResponse { return *v }).(RealtimeConfigurationResponseOutput)
}

// Specifies the maximum concurrent calls that can be made to the web service. Minimum value: 4, Maximum value: 200.
func (o RealtimeConfigurationResponsePtrOutput) MaxConcurrentCalls() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RealtimeConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentCalls
	}).(pulumi.IntPtrOutput)
}

// The swagger 2.0 schema describing the service's inputs or outputs. See Swagger specification: http://swagger.io/specification/
type ServiceInputOutputSpecification struct {
	// The description of the Swagger schema.
	Description *string `pulumi:"description"`
	// Specifies a collection that contains the column schema for each input or output of the web service. For more information, see the Swagger specification.
	Properties map[string]TableSpecification `pulumi:"properties"`
	// The title of your Swagger schema.
	Title *string `pulumi:"title"`
	// The type of the entity described in swagger. Always 'object'.
	Type string `pulumi:"type"`
}

// ServiceInputOutputSpecificationInput is an input type that accepts ServiceInputOutputSpecificationArgs and ServiceInputOutputSpecificationOutput values.
// You can construct a concrete instance of `ServiceInputOutputSpecificationInput` via:
//
//          ServiceInputOutputSpecificationArgs{...}
type ServiceInputOutputSpecificationInput interface {
	pulumi.Input

	ToServiceInputOutputSpecificationOutput() ServiceInputOutputSpecificationOutput
	ToServiceInputOutputSpecificationOutputWithContext(context.Context) ServiceInputOutputSpecificationOutput
}

// The swagger 2.0 schema describing the service's inputs or outputs. See Swagger specification: http://swagger.io/specification/
type ServiceInputOutputSpecificationArgs struct {
	// The description of the Swagger schema.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies a collection that contains the column schema for each input or output of the web service. For more information, see the Swagger specification.
	Properties TableSpecificationMapInput `pulumi:"properties"`
	// The title of your Swagger schema.
	Title pulumi.StringPtrInput `pulumi:"title"`
	// The type of the entity described in swagger. Always 'object'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ServiceInputOutputSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceInputOutputSpecification)(nil)).Elem()
}

func (i ServiceInputOutputSpecificationArgs) ToServiceInputOutputSpecificationOutput() ServiceInputOutputSpecificationOutput {
	return i.ToServiceInputOutputSpecificationOutputWithContext(context.Background())
}

func (i ServiceInputOutputSpecificationArgs) ToServiceInputOutputSpecificationOutputWithContext(ctx context.Context) ServiceInputOutputSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInputOutputSpecificationOutput)
}

func (i ServiceInputOutputSpecificationArgs) ToServiceInputOutputSpecificationPtrOutput() ServiceInputOutputSpecificationPtrOutput {
	return i.ToServiceInputOutputSpecificationPtrOutputWithContext(context.Background())
}

func (i ServiceInputOutputSpecificationArgs) ToServiceInputOutputSpecificationPtrOutputWithContext(ctx context.Context) ServiceInputOutputSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInputOutputSpecificationOutput).ToServiceInputOutputSpecificationPtrOutputWithContext(ctx)
}

// ServiceInputOutputSpecificationPtrInput is an input type that accepts ServiceInputOutputSpecificationArgs, ServiceInputOutputSpecificationPtr and ServiceInputOutputSpecificationPtrOutput values.
// You can construct a concrete instance of `ServiceInputOutputSpecificationPtrInput` via:
//
//          ServiceInputOutputSpecificationArgs{...}
//
//  or:
//
//          nil
type ServiceInputOutputSpecificationPtrInput interface {
	pulumi.Input

	ToServiceInputOutputSpecificationPtrOutput() ServiceInputOutputSpecificationPtrOutput
	ToServiceInputOutputSpecificationPtrOutputWithContext(context.Context) ServiceInputOutputSpecificationPtrOutput
}

type serviceInputOutputSpecificationPtrType ServiceInputOutputSpecificationArgs

func ServiceInputOutputSpecificationPtr(v *ServiceInputOutputSpecificationArgs) ServiceInputOutputSpecificationPtrInput {
	return (*serviceInputOutputSpecificationPtrType)(v)
}

func (*serviceInputOutputSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceInputOutputSpecification)(nil)).Elem()
}

func (i *serviceInputOutputSpecificationPtrType) ToServiceInputOutputSpecificationPtrOutput() ServiceInputOutputSpecificationPtrOutput {
	return i.ToServiceInputOutputSpecificationPtrOutputWithContext(context.Background())
}

func (i *serviceInputOutputSpecificationPtrType) ToServiceInputOutputSpecificationPtrOutputWithContext(ctx context.Context) ServiceInputOutputSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInputOutputSpecificationPtrOutput)
}

// The swagger 2.0 schema describing the service's inputs or outputs. See Swagger specification: http://swagger.io/specification/
type ServiceInputOutputSpecificationResponse struct {
	// The description of the Swagger schema.
	Description *string `pulumi:"description"`
	// Specifies a collection that contains the column schema for each input or output of the web service. For more information, see the Swagger specification.
	Properties map[string]TableSpecificationResponse `pulumi:"properties"`
	// The title of your Swagger schema.
	Title *string `pulumi:"title"`
	// The type of the entity described in swagger. Always 'object'.
	Type string `pulumi:"type"`
}

// The swagger 2.0 schema describing the service's inputs or outputs. See Swagger specification: http://swagger.io/specification/
type ServiceInputOutputSpecificationResponseOutput struct{ *pulumi.OutputState }

func (ServiceInputOutputSpecificationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceInputOutputSpecificationResponse)(nil)).Elem()
}

func (o ServiceInputOutputSpecificationResponseOutput) ToServiceInputOutputSpecificationResponseOutput() ServiceInputOutputSpecificationResponseOutput {
	return o
}

func (o ServiceInputOutputSpecificationResponseOutput) ToServiceInputOutputSpecificationResponseOutputWithContext(ctx context.Context) ServiceInputOutputSpecificationResponseOutput {
	return o
}

func (o ServiceInputOutputSpecificationResponseOutput) ToServiceInputOutputSpecificationResponsePtrOutput() ServiceInputOutputSpecificationResponsePtrOutput {
	return o.ToServiceInputOutputSpecificationResponsePtrOutputWithContext(context.Background())
}

func (o ServiceInputOutputSpecificationResponseOutput) ToServiceInputOutputSpecificationResponsePtrOutputWithContext(ctx context.Context) ServiceInputOutputSpecificationResponsePtrOutput {
	return o.ApplyT(func(v ServiceInputOutputSpecificationResponse) *ServiceInputOutputSpecificationResponse {
		return &v
	}).(ServiceInputOutputSpecificationResponsePtrOutput)
}

// The description of the Swagger schema.
func (o ServiceInputOutputSpecificationResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInputOutputSpecificationResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies a collection that contains the column schema for each input or output of the web service. For more information, see the Swagger specification.
func (o ServiceInputOutputSpecificationResponseOutput) Properties() TableSpecificationResponseMapOutput {
	return o.ApplyT(func(v ServiceInputOutputSpecificationResponse) map[string]TableSpecificationResponse {
		return v.Properties
	}).(TableSpecificationResponseMapOutput)
}

// The title of your Swagger schema.
func (o ServiceInputOutputSpecificationResponseOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInputOutputSpecificationResponse) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// The type of the entity described in swagger. Always 'object'.
func (o ServiceInputOutputSpecificationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceInputOutputSpecificationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ServiceInputOutputSpecificationResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceInputOutputSpecificationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceInputOutputSpecificationResponse)(nil)).Elem()
}

func (o ServiceInputOutputSpecificationResponsePtrOutput) ToServiceInputOutputSpecificationResponsePtrOutput() ServiceInputOutputSpecificationResponsePtrOutput {
	return o
}

func (o ServiceInputOutputSpecificationResponsePtrOutput) ToServiceInputOutputSpecificationResponsePtrOutputWithContext(ctx context.Context) ServiceInputOutputSpecificationResponsePtrOutput {
	return o
}

func (o ServiceInputOutputSpecificationResponsePtrOutput) Elem() ServiceInputOutputSpecificationResponseOutput {
	return o.ApplyT(func(v *ServiceInputOutputSpecificationResponse) ServiceInputOutputSpecificationResponse { return *v }).(ServiceInputOutputSpecificationResponseOutput)
}

// The description of the Swagger schema.
func (o ServiceInputOutputSpecificationResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInputOutputSpecificationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Specifies a collection that contains the column schema for each input or output of the web service. For more information, see the Swagger specification.
func (o ServiceInputOutputSpecificationResponsePtrOutput) Properties() TableSpecificationResponseMapOutput {
	return o.ApplyT(func(v *ServiceInputOutputSpecificationResponse) map[string]TableSpecificationResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(TableSpecificationResponseMapOutput)
}

// The title of your Swagger schema.
func (o ServiceInputOutputSpecificationResponsePtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInputOutputSpecificationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// The type of the entity described in swagger. Always 'object'.
func (o ServiceInputOutputSpecificationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInputOutputSpecificationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Access information for a storage account.
type StorageAccount struct {
	// Specifies the key used to access the storage account.
	Key *string `pulumi:"key"`
	// Specifies the name of the storage account.
	Name *string `pulumi:"name"`
}

// StorageAccountInput is an input type that accepts StorageAccountArgs and StorageAccountOutput values.
// You can construct a concrete instance of `StorageAccountInput` via:
//
//          StorageAccountArgs{...}
type StorageAccountInput interface {
	pulumi.Input

	ToStorageAccountOutput() StorageAccountOutput
	ToStorageAccountOutputWithContext(context.Context) StorageAccountOutput
}

// Access information for a storage account.
type StorageAccountArgs struct {
	// Specifies the key used to access the storage account.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Specifies the name of the storage account.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StorageAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccount)(nil)).Elem()
}

func (i StorageAccountArgs) ToStorageAccountOutput() StorageAccountOutput {
	return i.ToStorageAccountOutputWithContext(context.Background())
}

func (i StorageAccountArgs) ToStorageAccountOutputWithContext(ctx context.Context) StorageAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountOutput)
}

func (i StorageAccountArgs) ToStorageAccountPtrOutput() StorageAccountPtrOutput {
	return i.ToStorageAccountPtrOutputWithContext(context.Background())
}

func (i StorageAccountArgs) ToStorageAccountPtrOutputWithContext(ctx context.Context) StorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountOutput).ToStorageAccountPtrOutputWithContext(ctx)
}

// StorageAccountPtrInput is an input type that accepts StorageAccountArgs, StorageAccountPtr and StorageAccountPtrOutput values.
// You can construct a concrete instance of `StorageAccountPtrInput` via:
//
//          StorageAccountArgs{...}
//
//  or:
//
//          nil
type StorageAccountPtrInput interface {
	pulumi.Input

	ToStorageAccountPtrOutput() StorageAccountPtrOutput
	ToStorageAccountPtrOutputWithContext(context.Context) StorageAccountPtrOutput
}

type storageAccountPtrType StorageAccountArgs

func StorageAccountPtr(v *StorageAccountArgs) StorageAccountPtrInput {
	return (*storageAccountPtrType)(v)
}

func (*storageAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccount)(nil)).Elem()
}

func (i *storageAccountPtrType) ToStorageAccountPtrOutput() StorageAccountPtrOutput {
	return i.ToStorageAccountPtrOutputWithContext(context.Background())
}

func (i *storageAccountPtrType) ToStorageAccountPtrOutputWithContext(ctx context.Context) StorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPtrOutput)
}

// Access information for a storage account.
type StorageAccountResponse struct {
	// Specifies the key used to access the storage account.
	Key *string `pulumi:"key"`
	// Specifies the name of the storage account.
	Name *string `pulumi:"name"`
}

// Access information for a storage account.
type StorageAccountResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountResponse)(nil)).Elem()
}

func (o StorageAccountResponseOutput) ToStorageAccountResponseOutput() StorageAccountResponseOutput {
	return o
}

func (o StorageAccountResponseOutput) ToStorageAccountResponseOutputWithContext(ctx context.Context) StorageAccountResponseOutput {
	return o
}

func (o StorageAccountResponseOutput) ToStorageAccountResponsePtrOutput() StorageAccountResponsePtrOutput {
	return o.ToStorageAccountResponsePtrOutputWithContext(context.Background())
}

func (o StorageAccountResponseOutput) ToStorageAccountResponsePtrOutputWithContext(ctx context.Context) StorageAccountResponsePtrOutput {
	return o.ApplyT(func(v StorageAccountResponse) *StorageAccountResponse {
		return &v
	}).(StorageAccountResponsePtrOutput)
}

// Specifies the key used to access the storage account.
func (o StorageAccountResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccountResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Specifies the name of the storage account.
func (o StorageAccountResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccountResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StorageAccountResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageAccountResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountResponse)(nil)).Elem()
}

func (o StorageAccountResponsePtrOutput) ToStorageAccountResponsePtrOutput() StorageAccountResponsePtrOutput {
	return o
}

func (o StorageAccountResponsePtrOutput) ToStorageAccountResponsePtrOutputWithContext(ctx context.Context) StorageAccountResponsePtrOutput {
	return o
}

func (o StorageAccountResponsePtrOutput) Elem() StorageAccountResponseOutput {
	return o.ApplyT(func(v *StorageAccountResponse) StorageAccountResponse { return *v }).(StorageAccountResponseOutput)
}

// Specifies the key used to access the storage account.
func (o StorageAccountResponsePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountResponse) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the storage account.
func (o StorageAccountResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The swagger 2.0 schema describing a single service input or output. See Swagger specification: http://swagger.io/specification/
type TableSpecification struct {
	// Swagger schema description.
	Description *string `pulumi:"description"`
	// The format, if 'type' is not 'object'
	Format *string `pulumi:"format"`
	// The set of columns within the data table.
	Properties map[string]ColumnSpecification `pulumi:"properties"`
	// Swagger schema title.
	Title *string `pulumi:"title"`
	// The type of the entity described in swagger.
	Type string `pulumi:"type"`
}

// TableSpecificationInput is an input type that accepts TableSpecificationArgs and TableSpecificationOutput values.
// You can construct a concrete instance of `TableSpecificationInput` via:
//
//          TableSpecificationArgs{...}
type TableSpecificationInput interface {
	pulumi.Input

	ToTableSpecificationOutput() TableSpecificationOutput
	ToTableSpecificationOutputWithContext(context.Context) TableSpecificationOutput
}

// The swagger 2.0 schema describing a single service input or output. See Swagger specification: http://swagger.io/specification/
type TableSpecificationArgs struct {
	// Swagger schema description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The format, if 'type' is not 'object'
	Format pulumi.StringPtrInput `pulumi:"format"`
	// The set of columns within the data table.
	Properties ColumnSpecificationMapInput `pulumi:"properties"`
	// Swagger schema title.
	Title pulumi.StringPtrInput `pulumi:"title"`
	// The type of the entity described in swagger.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TableSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableSpecification)(nil)).Elem()
}

func (i TableSpecificationArgs) ToTableSpecificationOutput() TableSpecificationOutput {
	return i.ToTableSpecificationOutputWithContext(context.Background())
}

func (i TableSpecificationArgs) ToTableSpecificationOutputWithContext(ctx context.Context) TableSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableSpecificationOutput)
}

// TableSpecificationMapInput is an input type that accepts TableSpecificationMap and TableSpecificationMapOutput values.
// You can construct a concrete instance of `TableSpecificationMapInput` via:
//
//          TableSpecificationMap{ "key": TableSpecificationArgs{...} }
type TableSpecificationMapInput interface {
	pulumi.Input

	ToTableSpecificationMapOutput() TableSpecificationMapOutput
	ToTableSpecificationMapOutputWithContext(context.Context) TableSpecificationMapOutput
}

type TableSpecificationMap map[string]TableSpecificationInput

func (TableSpecificationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]TableSpecification)(nil)).Elem()
}

func (i TableSpecificationMap) ToTableSpecificationMapOutput() TableSpecificationMapOutput {
	return i.ToTableSpecificationMapOutputWithContext(context.Background())
}

func (i TableSpecificationMap) ToTableSpecificationMapOutputWithContext(ctx context.Context) TableSpecificationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableSpecificationMapOutput)
}

// The swagger 2.0 schema describing a single service input or output. See Swagger specification: http://swagger.io/specification/
type TableSpecificationResponse struct {
	// Swagger schema description.
	Description *string `pulumi:"description"`
	// The format, if 'type' is not 'object'
	Format *string `pulumi:"format"`
	// The set of columns within the data table.
	Properties map[string]ColumnSpecificationResponse `pulumi:"properties"`
	// Swagger schema title.
	Title *string `pulumi:"title"`
	// The type of the entity described in swagger.
	Type string `pulumi:"type"`
}

// The swagger 2.0 schema describing a single service input or output. See Swagger specification: http://swagger.io/specification/
type TableSpecificationResponseOutput struct{ *pulumi.OutputState }

func (TableSpecificationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableSpecificationResponse)(nil)).Elem()
}

func (o TableSpecificationResponseOutput) ToTableSpecificationResponseOutput() TableSpecificationResponseOutput {
	return o
}

func (o TableSpecificationResponseOutput) ToTableSpecificationResponseOutputWithContext(ctx context.Context) TableSpecificationResponseOutput {
	return o
}

// Swagger schema description.
func (o TableSpecificationResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TableSpecificationResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The format, if 'type' is not 'object'
func (o TableSpecificationResponseOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TableSpecificationResponse) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// The set of columns within the data table.
func (o TableSpecificationResponseOutput) Properties() ColumnSpecificationResponseMapOutput {
	return o.ApplyT(func(v TableSpecificationResponse) map[string]ColumnSpecificationResponse { return v.Properties }).(ColumnSpecificationResponseMapOutput)
}

// Swagger schema title.
func (o TableSpecificationResponseOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TableSpecificationResponse) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// The type of the entity described in swagger.
func (o TableSpecificationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TableSpecificationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type TableSpecificationResponseMapOutput struct{ *pulumi.OutputState }

func (TableSpecificationResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]TableSpecificationResponse)(nil)).Elem()
}

func (o TableSpecificationResponseMapOutput) ToTableSpecificationResponseMapOutput() TableSpecificationResponseMapOutput {
	return o
}

func (o TableSpecificationResponseMapOutput) ToTableSpecificationResponseMapOutputWithContext(ctx context.Context) TableSpecificationResponseMapOutput {
	return o
}

func (o TableSpecificationResponseMapOutput) MapIndex(k pulumi.StringInput) TableSpecificationResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) TableSpecificationResponse {
		return vs[0].(map[string]TableSpecificationResponse)[vs[1].(string)]
	}).(TableSpecificationResponseOutput)
}

// Access keys for the web service calls.
type WebServiceKeys struct {
	// The primary access key.
	Primary *string `pulumi:"primary"`
	// The secondary access key.
	Secondary *string `pulumi:"secondary"`
}

// WebServiceKeysInput is an input type that accepts WebServiceKeysArgs and WebServiceKeysOutput values.
// You can construct a concrete instance of `WebServiceKeysInput` via:
//
//          WebServiceKeysArgs{...}
type WebServiceKeysInput interface {
	pulumi.Input

	ToWebServiceKeysOutput() WebServiceKeysOutput
	ToWebServiceKeysOutputWithContext(context.Context) WebServiceKeysOutput
}

// Access keys for the web service calls.
type WebServiceKeysArgs struct {
	// The primary access key.
	Primary pulumi.StringPtrInput `pulumi:"primary"`
	// The secondary access key.
	Secondary pulumi.StringPtrInput `pulumi:"secondary"`
}

func (WebServiceKeysArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebServiceKeys)(nil)).Elem()
}

func (i WebServiceKeysArgs) ToWebServiceKeysOutput() WebServiceKeysOutput {
	return i.ToWebServiceKeysOutputWithContext(context.Background())
}

func (i WebServiceKeysArgs) ToWebServiceKeysOutputWithContext(ctx context.Context) WebServiceKeysOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebServiceKeysOutput)
}

func (i WebServiceKeysArgs) ToWebServiceKeysPtrOutput() WebServiceKeysPtrOutput {
	return i.ToWebServiceKeysPtrOutputWithContext(context.Background())
}

func (i WebServiceKeysArgs) ToWebServiceKeysPtrOutputWithContext(ctx context.Context) WebServiceKeysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebServiceKeysOutput).ToWebServiceKeysPtrOutputWithContext(ctx)
}

// WebServiceKeysPtrInput is an input type that accepts WebServiceKeysArgs, WebServiceKeysPtr and WebServiceKeysPtrOutput values.
// You can construct a concrete instance of `WebServiceKeysPtrInput` via:
//
//          WebServiceKeysArgs{...}
//
//  or:
//
//          nil
type WebServiceKeysPtrInput interface {
	pulumi.Input

	ToWebServiceKeysPtrOutput() WebServiceKeysPtrOutput
	ToWebServiceKeysPtrOutputWithContext(context.Context) WebServiceKeysPtrOutput
}

type webServiceKeysPtrType WebServiceKeysArgs

func WebServiceKeysPtr(v *WebServiceKeysArgs) WebServiceKeysPtrInput {
	return (*webServiceKeysPtrType)(v)
}

func (*webServiceKeysPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebServiceKeys)(nil)).Elem()
}

func (i *webServiceKeysPtrType) ToWebServiceKeysPtrOutput() WebServiceKeysPtrOutput {
	return i.ToWebServiceKeysPtrOutputWithContext(context.Background())
}

func (i *webServiceKeysPtrType) ToWebServiceKeysPtrOutputWithContext(ctx context.Context) WebServiceKeysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebServiceKeysPtrOutput)
}

// Access keys for the web service calls.
type WebServiceKeysResponse struct {
	// The primary access key.
	Primary *string `pulumi:"primary"`
	// The secondary access key.
	Secondary *string `pulumi:"secondary"`
}

// Access keys for the web service calls.
type WebServiceKeysResponseOutput struct{ *pulumi.OutputState }

func (WebServiceKeysResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebServiceKeysResponse)(nil)).Elem()
}

func (o WebServiceKeysResponseOutput) ToWebServiceKeysResponseOutput() WebServiceKeysResponseOutput {
	return o
}

func (o WebServiceKeysResponseOutput) ToWebServiceKeysResponseOutputWithContext(ctx context.Context) WebServiceKeysResponseOutput {
	return o
}

func (o WebServiceKeysResponseOutput) ToWebServiceKeysResponsePtrOutput() WebServiceKeysResponsePtrOutput {
	return o.ToWebServiceKeysResponsePtrOutputWithContext(context.Background())
}

func (o WebServiceKeysResponseOutput) ToWebServiceKeysResponsePtrOutputWithContext(ctx context.Context) WebServiceKeysResponsePtrOutput {
	return o.ApplyT(func(v WebServiceKeysResponse) *WebServiceKeysResponse {
		return &v
	}).(WebServiceKeysResponsePtrOutput)
}

// The primary access key.
func (o WebServiceKeysResponseOutput) Primary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebServiceKeysResponse) *string { return v.Primary }).(pulumi.StringPtrOutput)
}

// The secondary access key.
func (o WebServiceKeysResponseOutput) Secondary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebServiceKeysResponse) *string { return v.Secondary }).(pulumi.StringPtrOutput)
}

type WebServiceKeysResponsePtrOutput struct{ *pulumi.OutputState }

func (WebServiceKeysResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebServiceKeysResponse)(nil)).Elem()
}

func (o WebServiceKeysResponsePtrOutput) ToWebServiceKeysResponsePtrOutput() WebServiceKeysResponsePtrOutput {
	return o
}

func (o WebServiceKeysResponsePtrOutput) ToWebServiceKeysResponsePtrOutputWithContext(ctx context.Context) WebServiceKeysResponsePtrOutput {
	return o
}

func (o WebServiceKeysResponsePtrOutput) Elem() WebServiceKeysResponseOutput {
	return o.ApplyT(func(v *WebServiceKeysResponse) WebServiceKeysResponse { return *v }).(WebServiceKeysResponseOutput)
}

// The primary access key.
func (o WebServiceKeysResponsePtrOutput) Primary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebServiceKeysResponse) *string {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.StringPtrOutput)
}

// The secondary access key.
func (o WebServiceKeysResponsePtrOutput) Secondary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebServiceKeysResponse) *string {
		if v == nil {
			return nil
		}
		return v.Secondary
	}).(pulumi.StringPtrOutput)
}

// Web Service Parameter object for node and global parameter
type WebServiceParameter struct {
	// If the parameter value in 'value' field is encrypted, the thumbprint of the certificate should be put here.
	CertificateThumbprint *string `pulumi:"certificateThumbprint"`
	// The parameter value
	Value map[string]interface{} `pulumi:"value"`
}

// WebServiceParameterInput is an input type that accepts WebServiceParameterArgs and WebServiceParameterOutput values.
// You can construct a concrete instance of `WebServiceParameterInput` via:
//
//          WebServiceParameterArgs{...}
type WebServiceParameterInput interface {
	pulumi.Input

	ToWebServiceParameterOutput() WebServiceParameterOutput
	ToWebServiceParameterOutputWithContext(context.Context) WebServiceParameterOutput
}

// Web Service Parameter object for node and global parameter
type WebServiceParameterArgs struct {
	// If the parameter value in 'value' field is encrypted, the thumbprint of the certificate should be put here.
	CertificateThumbprint pulumi.StringPtrInput `pulumi:"certificateThumbprint"`
	// The parameter value
	Value pulumi.MapInput `pulumi:"value"`
}

func (WebServiceParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebServiceParameter)(nil)).Elem()
}

func (i WebServiceParameterArgs) ToWebServiceParameterOutput() WebServiceParameterOutput {
	return i.ToWebServiceParameterOutputWithContext(context.Background())
}

func (i WebServiceParameterArgs) ToWebServiceParameterOutputWithContext(ctx context.Context) WebServiceParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebServiceParameterOutput)
}

// WebServiceParameterMapInput is an input type that accepts WebServiceParameterMap and WebServiceParameterMapOutput values.
// You can construct a concrete instance of `WebServiceParameterMapInput` via:
//
//          WebServiceParameterMap{ "key": WebServiceParameterArgs{...} }
type WebServiceParameterMapInput interface {
	pulumi.Input

	ToWebServiceParameterMapOutput() WebServiceParameterMapOutput
	ToWebServiceParameterMapOutputWithContext(context.Context) WebServiceParameterMapOutput
}

type WebServiceParameterMap map[string]WebServiceParameterInput

func (WebServiceParameterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]WebServiceParameter)(nil)).Elem()
}

func (i WebServiceParameterMap) ToWebServiceParameterMapOutput() WebServiceParameterMapOutput {
	return i.ToWebServiceParameterMapOutputWithContext(context.Background())
}

func (i WebServiceParameterMap) ToWebServiceParameterMapOutputWithContext(ctx context.Context) WebServiceParameterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebServiceParameterMapOutput)
}

// Web Service Parameter object for node and global parameter
type WebServiceParameterResponse struct {
	// If the parameter value in 'value' field is encrypted, the thumbprint of the certificate should be put here.
	CertificateThumbprint *string `pulumi:"certificateThumbprint"`
	// The parameter value
	Value map[string]interface{} `pulumi:"value"`
}

// Web Service Parameter object for node and global parameter
type WebServiceParameterResponseOutput struct{ *pulumi.OutputState }

func (WebServiceParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebServiceParameterResponse)(nil)).Elem()
}

func (o WebServiceParameterResponseOutput) ToWebServiceParameterResponseOutput() WebServiceParameterResponseOutput {
	return o
}

func (o WebServiceParameterResponseOutput) ToWebServiceParameterResponseOutputWithContext(ctx context.Context) WebServiceParameterResponseOutput {
	return o
}

// If the parameter value in 'value' field is encrypted, the thumbprint of the certificate should be put here.
func (o WebServiceParameterResponseOutput) CertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebServiceParameterResponse) *string { return v.CertificateThumbprint }).(pulumi.StringPtrOutput)
}

// The parameter value
func (o WebServiceParameterResponseOutput) Value() pulumi.MapOutput {
	return o.ApplyT(func(v WebServiceParameterResponse) map[string]interface{} { return v.Value }).(pulumi.MapOutput)
}

type WebServiceParameterResponseMapOutput struct{ *pulumi.OutputState }

func (WebServiceParameterResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]WebServiceParameterResponse)(nil)).Elem()
}

func (o WebServiceParameterResponseMapOutput) ToWebServiceParameterResponseMapOutput() WebServiceParameterResponseMapOutput {
	return o
}

func (o WebServiceParameterResponseMapOutput) ToWebServiceParameterResponseMapOutputWithContext(ctx context.Context) WebServiceParameterResponseMapOutput {
	return o
}

func (o WebServiceParameterResponseMapOutput) MapIndex(k pulumi.StringInput) WebServiceParameterResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) WebServiceParameterResponse {
		return vs[0].(map[string]WebServiceParameterResponse)[vs[1].(string)]
	}).(WebServiceParameterResponseOutput)
}

// Properties specific to a Graph based web service.
type WebServicePropertiesForGraph struct {
	// Contains user defined properties describing web service assets. Properties are expressed as Key/Value pairs.
	Assets map[string]AssetItem `pulumi:"assets"`
	// Contains the commitment plan associated with this web service. Set at creation time. Once set, this value cannot be changed. Note: The commitment plan is not returned from calls to GET operations.
	CommitmentPlan *CommitmentPlan `pulumi:"commitmentPlan"`
	// The description of the web service.
	Description *string `pulumi:"description"`
	// Settings controlling the diagnostics traces collection for the web service.
	Diagnostics *DiagnosticsConfiguration `pulumi:"diagnostics"`
	// Defines sample input data for one or more of the service's inputs.
	ExampleRequest *ExampleRequest `pulumi:"exampleRequest"`
	// When set to true, sample data is included in the web service's swagger definition. The default value is true.
	ExposeSampleData *bool `pulumi:"exposeSampleData"`
	// Contains the Swagger 2.0 schema describing one or more of the web service's inputs. For more information, see the Swagger specification.
	Input *ServiceInputOutputSpecification `pulumi:"input"`
	// Contains the web service provisioning keys. If you do not specify provisioning keys, the Azure Machine Learning system generates them for you. Note: The keys are not returned from calls to GET operations.
	Keys *WebServiceKeys `pulumi:"keys"`
	// Specifies the Machine Learning workspace containing the experiment that is source for the web service.
	MachineLearningWorkspace *MachineLearningWorkspace `pulumi:"machineLearningWorkspace"`
	// Contains the Swagger 2.0 schema describing one or more of the web service's outputs. For more information, see the Swagger specification.
	Output *ServiceInputOutputSpecification `pulumi:"output"`
	// The definition of the graph package making up this web service.
	Package *GraphPackage `pulumi:"package"`
	// Specifies the package type. Valid values are Graph (Specifies a web service published through the Machine Learning Studio) and Code (Specifies a web service published using code such as Python). Note: Code is not supported at this time.
	PackageType string `pulumi:"packageType"`
	// The set of global parameters values defined for the web service, given as a global parameter name to default value map. If no default value is specified, the parameter is considered to be required.
	Parameters map[string]WebServiceParameter `pulumi:"parameters"`
	// When set to true, indicates that the payload size is larger than 3 MB. Otherwise false. If the payload size exceed 3 MB, the payload is stored in a blob and the PayloadsLocation parameter contains the URI of the blob. Otherwise, this will be set to false and Assets, Input, Output, Package, Parameters, ExampleRequest are inline. The Payload sizes is determined by adding the size of the Assets, Input, Output, Package, Parameters, and the ExampleRequest.
	PayloadsInBlobStorage *bool `pulumi:"payloadsInBlobStorage"`
	// The URI of the payload blob. This parameter contains a value only if the payloadsInBlobStorage parameter is set to true. Otherwise is set to null.
	PayloadsLocation *BlobLocation `pulumi:"payloadsLocation"`
	// When set to true, indicates that the web service is read-only and can no longer be updated or patched, only removed. Default, is false. Note: Once set to true, you cannot change its value.
	ReadOnly *bool `pulumi:"readOnly"`
	// Contains the configuration settings for the web service endpoint.
	RealtimeConfiguration *RealtimeConfiguration `pulumi:"realtimeConfiguration"`
	// Specifies the storage account that Azure Machine Learning uses to store information about the web service. Only the name of the storage account is returned from calls to GET operations. When updating the storage account information, you must ensure that all necessary assets are available in the new storage account or calls to your web service will fail.
	StorageAccount *StorageAccount `pulumi:"storageAccount"`
	// The title of the web service.
	Title *string `pulumi:"title"`
}

// WebServicePropertiesForGraphInput is an input type that accepts WebServicePropertiesForGraphArgs and WebServicePropertiesForGraphOutput values.
// You can construct a concrete instance of `WebServicePropertiesForGraphInput` via:
//
//          WebServicePropertiesForGraphArgs{...}
type WebServicePropertiesForGraphInput interface {
	pulumi.Input

	ToWebServicePropertiesForGraphOutput() WebServicePropertiesForGraphOutput
	ToWebServicePropertiesForGraphOutputWithContext(context.Context) WebServicePropertiesForGraphOutput
}

// Properties specific to a Graph based web service.
type WebServicePropertiesForGraphArgs struct {
	// Contains user defined properties describing web service assets. Properties are expressed as Key/Value pairs.
	Assets AssetItemMapInput `pulumi:"assets"`
	// Contains the commitment plan associated with this web service. Set at creation time. Once set, this value cannot be changed. Note: The commitment plan is not returned from calls to GET operations.
	CommitmentPlan CommitmentPlanPtrInput `pulumi:"commitmentPlan"`
	// The description of the web service.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Settings controlling the diagnostics traces collection for the web service.
	Diagnostics DiagnosticsConfigurationPtrInput `pulumi:"diagnostics"`
	// Defines sample input data for one or more of the service's inputs.
	ExampleRequest ExampleRequestPtrInput `pulumi:"exampleRequest"`
	// When set to true, sample data is included in the web service's swagger definition. The default value is true.
	ExposeSampleData pulumi.BoolPtrInput `pulumi:"exposeSampleData"`
	// Contains the Swagger 2.0 schema describing one or more of the web service's inputs. For more information, see the Swagger specification.
	Input ServiceInputOutputSpecificationPtrInput `pulumi:"input"`
	// Contains the web service provisioning keys. If you do not specify provisioning keys, the Azure Machine Learning system generates them for you. Note: The keys are not returned from calls to GET operations.
	Keys WebServiceKeysPtrInput `pulumi:"keys"`
	// Specifies the Machine Learning workspace containing the experiment that is source for the web service.
	MachineLearningWorkspace MachineLearningWorkspacePtrInput `pulumi:"machineLearningWorkspace"`
	// Contains the Swagger 2.0 schema describing one or more of the web service's outputs. For more information, see the Swagger specification.
	Output ServiceInputOutputSpecificationPtrInput `pulumi:"output"`
	// The definition of the graph package making up this web service.
	Package GraphPackagePtrInput `pulumi:"package"`
	// Specifies the package type. Valid values are Graph (Specifies a web service published through the Machine Learning Studio) and Code (Specifies a web service published using code such as Python). Note: Code is not supported at this time.
	PackageType pulumi.StringInput `pulumi:"packageType"`
	// The set of global parameters values defined for the web service, given as a global parameter name to default value map. If no default value is specified, the parameter is considered to be required.
	Parameters WebServiceParameterMapInput `pulumi:"parameters"`
	// When set to true, indicates that the payload size is larger than 3 MB. Otherwise false. If the payload size exceed 3 MB, the payload is stored in a blob and the PayloadsLocation parameter contains the URI of the blob. Otherwise, this will be set to false and Assets, Input, Output, Package, Parameters, ExampleRequest are inline. The Payload sizes is determined by adding the size of the Assets, Input, Output, Package, Parameters, and the ExampleRequest.
	PayloadsInBlobStorage pulumi.BoolPtrInput `pulumi:"payloadsInBlobStorage"`
	// The URI of the payload blob. This parameter contains a value only if the payloadsInBlobStorage parameter is set to true. Otherwise is set to null.
	PayloadsLocation BlobLocationPtrInput `pulumi:"payloadsLocation"`
	// When set to true, indicates that the web service is read-only and can no longer be updated or patched, only removed. Default, is false. Note: Once set to true, you cannot change its value.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Contains the configuration settings for the web service endpoint.
	RealtimeConfiguration RealtimeConfigurationPtrInput `pulumi:"realtimeConfiguration"`
	// Specifies the storage account that Azure Machine Learning uses to store information about the web service. Only the name of the storage account is returned from calls to GET operations. When updating the storage account information, you must ensure that all necessary assets are available in the new storage account or calls to your web service will fail.
	StorageAccount StorageAccountPtrInput `pulumi:"storageAccount"`
	// The title of the web service.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (WebServicePropertiesForGraphArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebServicePropertiesForGraph)(nil)).Elem()
}

func (i WebServicePropertiesForGraphArgs) ToWebServicePropertiesForGraphOutput() WebServicePropertiesForGraphOutput {
	return i.ToWebServicePropertiesForGraphOutputWithContext(context.Background())
}

func (i WebServicePropertiesForGraphArgs) ToWebServicePropertiesForGraphOutputWithContext(ctx context.Context) WebServicePropertiesForGraphOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebServicePropertiesForGraphOutput)
}

func (i WebServicePropertiesForGraphArgs) ToWebServicePropertiesForGraphPtrOutput() WebServicePropertiesForGraphPtrOutput {
	return i.ToWebServicePropertiesForGraphPtrOutputWithContext(context.Background())
}

func (i WebServicePropertiesForGraphArgs) ToWebServicePropertiesForGraphPtrOutputWithContext(ctx context.Context) WebServicePropertiesForGraphPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebServicePropertiesForGraphOutput).ToWebServicePropertiesForGraphPtrOutputWithContext(ctx)
}

// WebServicePropertiesForGraphPtrInput is an input type that accepts WebServicePropertiesForGraphArgs, WebServicePropertiesForGraphPtr and WebServicePropertiesForGraphPtrOutput values.
// You can construct a concrete instance of `WebServicePropertiesForGraphPtrInput` via:
//
//          WebServicePropertiesForGraphArgs{...}
//
//  or:
//
//          nil
type WebServicePropertiesForGraphPtrInput interface {
	pulumi.Input

	ToWebServicePropertiesForGraphPtrOutput() WebServicePropertiesForGraphPtrOutput
	ToWebServicePropertiesForGraphPtrOutputWithContext(context.Context) WebServicePropertiesForGraphPtrOutput
}

type webServicePropertiesForGraphPtrType WebServicePropertiesForGraphArgs

func WebServicePropertiesForGraphPtr(v *WebServicePropertiesForGraphArgs) WebServicePropertiesForGraphPtrInput {
	return (*webServicePropertiesForGraphPtrType)(v)
}

func (*webServicePropertiesForGraphPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebServicePropertiesForGraph)(nil)).Elem()
}

func (i *webServicePropertiesForGraphPtrType) ToWebServicePropertiesForGraphPtrOutput() WebServicePropertiesForGraphPtrOutput {
	return i.ToWebServicePropertiesForGraphPtrOutputWithContext(context.Background())
}

func (i *webServicePropertiesForGraphPtrType) ToWebServicePropertiesForGraphPtrOutputWithContext(ctx context.Context) WebServicePropertiesForGraphPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebServicePropertiesForGraphPtrOutput)
}

// Properties specific to a Graph based web service.
type WebServicePropertiesForGraphResponse struct {
	// Contains user defined properties describing web service assets. Properties are expressed as Key/Value pairs.
	Assets map[string]AssetItemResponse `pulumi:"assets"`
	// Contains the commitment plan associated with this web service. Set at creation time. Once set, this value cannot be changed. Note: The commitment plan is not returned from calls to GET operations.
	CommitmentPlan *CommitmentPlanResponse `pulumi:"commitmentPlan"`
	// Read Only: The date and time when the web service was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the web service.
	Description *string `pulumi:"description"`
	// Settings controlling the diagnostics traces collection for the web service.
	Diagnostics *DiagnosticsConfigurationResponse `pulumi:"diagnostics"`
	// Defines sample input data for one or more of the service's inputs.
	ExampleRequest *ExampleRequestResponse `pulumi:"exampleRequest"`
	// When set to true, sample data is included in the web service's swagger definition. The default value is true.
	ExposeSampleData *bool `pulumi:"exposeSampleData"`
	// Contains the Swagger 2.0 schema describing one or more of the web service's inputs. For more information, see the Swagger specification.
	Input *ServiceInputOutputSpecificationResponse `pulumi:"input"`
	// Contains the web service provisioning keys. If you do not specify provisioning keys, the Azure Machine Learning system generates them for you. Note: The keys are not returned from calls to GET operations.
	Keys *WebServiceKeysResponse `pulumi:"keys"`
	// Specifies the Machine Learning workspace containing the experiment that is source for the web service.
	MachineLearningWorkspace *MachineLearningWorkspaceResponse `pulumi:"machineLearningWorkspace"`
	// Read Only: The date and time when the web service was last modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// Contains the Swagger 2.0 schema describing one or more of the web service's outputs. For more information, see the Swagger specification.
	Output *ServiceInputOutputSpecificationResponse `pulumi:"output"`
	// The definition of the graph package making up this web service.
	Package *GraphPackageResponse `pulumi:"package"`
	// Specifies the package type. Valid values are Graph (Specifies a web service published through the Machine Learning Studio) and Code (Specifies a web service published using code such as Python). Note: Code is not supported at this time.
	PackageType string `pulumi:"packageType"`
	// The set of global parameters values defined for the web service, given as a global parameter name to default value map. If no default value is specified, the parameter is considered to be required.
	Parameters map[string]WebServiceParameterResponse `pulumi:"parameters"`
	// When set to true, indicates that the payload size is larger than 3 MB. Otherwise false. If the payload size exceed 3 MB, the payload is stored in a blob and the PayloadsLocation parameter contains the URI of the blob. Otherwise, this will be set to false and Assets, Input, Output, Package, Parameters, ExampleRequest are inline. The Payload sizes is determined by adding the size of the Assets, Input, Output, Package, Parameters, and the ExampleRequest.
	PayloadsInBlobStorage *bool `pulumi:"payloadsInBlobStorage"`
	// The URI of the payload blob. This parameter contains a value only if the payloadsInBlobStorage parameter is set to true. Otherwise is set to null.
	PayloadsLocation *BlobLocationResponse `pulumi:"payloadsLocation"`
	// Read Only: The provision state of the web service. Valid values are Unknown, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// When set to true, indicates that the web service is read-only and can no longer be updated or patched, only removed. Default, is false. Note: Once set to true, you cannot change its value.
	ReadOnly *bool `pulumi:"readOnly"`
	// Contains the configuration settings for the web service endpoint.
	RealtimeConfiguration *RealtimeConfigurationResponse `pulumi:"realtimeConfiguration"`
	// Specifies the storage account that Azure Machine Learning uses to store information about the web service. Only the name of the storage account is returned from calls to GET operations. When updating the storage account information, you must ensure that all necessary assets are available in the new storage account or calls to your web service will fail.
	StorageAccount *StorageAccountResponse `pulumi:"storageAccount"`
	// Read Only: Contains the URI of the swagger spec associated with this web service.
	SwaggerLocation string `pulumi:"swaggerLocation"`
	// The title of the web service.
	Title *string `pulumi:"title"`
}

// Properties specific to a Graph based web service.
type WebServicePropertiesForGraphResponseOutput struct{ *pulumi.OutputState }

func (WebServicePropertiesForGraphResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebServicePropertiesForGraphResponse)(nil)).Elem()
}

func (o WebServicePropertiesForGraphResponseOutput) ToWebServicePropertiesForGraphResponseOutput() WebServicePropertiesForGraphResponseOutput {
	return o
}

func (o WebServicePropertiesForGraphResponseOutput) ToWebServicePropertiesForGraphResponseOutputWithContext(ctx context.Context) WebServicePropertiesForGraphResponseOutput {
	return o
}

func (o WebServicePropertiesForGraphResponseOutput) ToWebServicePropertiesForGraphResponsePtrOutput() WebServicePropertiesForGraphResponsePtrOutput {
	return o.ToWebServicePropertiesForGraphResponsePtrOutputWithContext(context.Background())
}

func (o WebServicePropertiesForGraphResponseOutput) ToWebServicePropertiesForGraphResponsePtrOutputWithContext(ctx context.Context) WebServicePropertiesForGraphResponsePtrOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) *WebServicePropertiesForGraphResponse {
		return &v
	}).(WebServicePropertiesForGraphResponsePtrOutput)
}

// Contains user defined properties describing web service assets. Properties are expressed as Key/Value pairs.
func (o WebServicePropertiesForGraphResponseOutput) Assets() AssetItemResponseMapOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) map[string]AssetItemResponse { return v.Assets }).(AssetItemResponseMapOutput)
}

// Contains the commitment plan associated with this web service. Set at creation time. Once set, this value cannot be changed. Note: The commitment plan is not returned from calls to GET operations.
func (o WebServicePropertiesForGraphResponseOutput) CommitmentPlan() CommitmentPlanResponsePtrOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) *CommitmentPlanResponse { return v.CommitmentPlan }).(CommitmentPlanResponsePtrOutput)
}

// Read Only: The date and time when the web service was created.
func (o WebServicePropertiesForGraphResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the web service.
func (o WebServicePropertiesForGraphResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Settings controlling the diagnostics traces collection for the web service.
func (o WebServicePropertiesForGraphResponseOutput) Diagnostics() DiagnosticsConfigurationResponsePtrOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) *DiagnosticsConfigurationResponse { return v.Diagnostics }).(DiagnosticsConfigurationResponsePtrOutput)
}

// Defines sample input data for one or more of the service's inputs.
func (o WebServicePropertiesForGraphResponseOutput) ExampleRequest() ExampleRequestResponsePtrOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) *ExampleRequestResponse { return v.ExampleRequest }).(ExampleRequestResponsePtrOutput)
}

// When set to true, sample data is included in the web service's swagger definition. The default value is true.
func (o WebServicePropertiesForGraphResponseOutput) ExposeSampleData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) *bool { return v.ExposeSampleData }).(pulumi.BoolPtrOutput)
}

// Contains the Swagger 2.0 schema describing one or more of the web service's inputs. For more information, see the Swagger specification.
func (o WebServicePropertiesForGraphResponseOutput) Input() ServiceInputOutputSpecificationResponsePtrOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) *ServiceInputOutputSpecificationResponse { return v.Input }).(ServiceInputOutputSpecificationResponsePtrOutput)
}

// Contains the web service provisioning keys. If you do not specify provisioning keys, the Azure Machine Learning system generates them for you. Note: The keys are not returned from calls to GET operations.
func (o WebServicePropertiesForGraphResponseOutput) Keys() WebServiceKeysResponsePtrOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) *WebServiceKeysResponse { return v.Keys }).(WebServiceKeysResponsePtrOutput)
}

// Specifies the Machine Learning workspace containing the experiment that is source for the web service.
func (o WebServicePropertiesForGraphResponseOutput) MachineLearningWorkspace() MachineLearningWorkspaceResponsePtrOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) *MachineLearningWorkspaceResponse {
		return v.MachineLearningWorkspace
	}).(MachineLearningWorkspaceResponsePtrOutput)
}

// Read Only: The date and time when the web service was last modified.
func (o WebServicePropertiesForGraphResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// Contains the Swagger 2.0 schema describing one or more of the web service's outputs. For more information, see the Swagger specification.
func (o WebServicePropertiesForGraphResponseOutput) Output() ServiceInputOutputSpecificationResponsePtrOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) *ServiceInputOutputSpecificationResponse { return v.Output }).(ServiceInputOutputSpecificationResponsePtrOutput)
}

// The definition of the graph package making up this web service.
func (o WebServicePropertiesForGraphResponseOutput) Package() GraphPackageResponsePtrOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) *GraphPackageResponse { return v.Package }).(GraphPackageResponsePtrOutput)
}

// Specifies the package type. Valid values are Graph (Specifies a web service published through the Machine Learning Studio) and Code (Specifies a web service published using code such as Python). Note: Code is not supported at this time.
func (o WebServicePropertiesForGraphResponseOutput) PackageType() pulumi.StringOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) string { return v.PackageType }).(pulumi.StringOutput)
}

// The set of global parameters values defined for the web service, given as a global parameter name to default value map. If no default value is specified, the parameter is considered to be required.
func (o WebServicePropertiesForGraphResponseOutput) Parameters() WebServiceParameterResponseMapOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) map[string]WebServiceParameterResponse {
		return v.Parameters
	}).(WebServiceParameterResponseMapOutput)
}

// When set to true, indicates that the payload size is larger than 3 MB. Otherwise false. If the payload size exceed 3 MB, the payload is stored in a blob and the PayloadsLocation parameter contains the URI of the blob. Otherwise, this will be set to false and Assets, Input, Output, Package, Parameters, ExampleRequest are inline. The Payload sizes is determined by adding the size of the Assets, Input, Output, Package, Parameters, and the ExampleRequest.
func (o WebServicePropertiesForGraphResponseOutput) PayloadsInBlobStorage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) *bool { return v.PayloadsInBlobStorage }).(pulumi.BoolPtrOutput)
}

// The URI of the payload blob. This parameter contains a value only if the payloadsInBlobStorage parameter is set to true. Otherwise is set to null.
func (o WebServicePropertiesForGraphResponseOutput) PayloadsLocation() BlobLocationResponsePtrOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) *BlobLocationResponse { return v.PayloadsLocation }).(BlobLocationResponsePtrOutput)
}

// Read Only: The provision state of the web service. Valid values are Unknown, Provisioning, Succeeded, and Failed.
func (o WebServicePropertiesForGraphResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// When set to true, indicates that the web service is read-only and can no longer be updated or patched, only removed. Default, is false. Note: Once set to true, you cannot change its value.
func (o WebServicePropertiesForGraphResponseOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Contains the configuration settings for the web service endpoint.
func (o WebServicePropertiesForGraphResponseOutput) RealtimeConfiguration() RealtimeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) *RealtimeConfigurationResponse {
		return v.RealtimeConfiguration
	}).(RealtimeConfigurationResponsePtrOutput)
}

// Specifies the storage account that Azure Machine Learning uses to store information about the web service. Only the name of the storage account is returned from calls to GET operations. When updating the storage account information, you must ensure that all necessary assets are available in the new storage account or calls to your web service will fail.
func (o WebServicePropertiesForGraphResponseOutput) StorageAccount() StorageAccountResponsePtrOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) *StorageAccountResponse { return v.StorageAccount }).(StorageAccountResponsePtrOutput)
}

// Read Only: Contains the URI of the swagger spec associated with this web service.
func (o WebServicePropertiesForGraphResponseOutput) SwaggerLocation() pulumi.StringOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) string { return v.SwaggerLocation }).(pulumi.StringOutput)
}

// The title of the web service.
func (o WebServicePropertiesForGraphResponseOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebServicePropertiesForGraphResponse) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type WebServicePropertiesForGraphResponsePtrOutput struct{ *pulumi.OutputState }

func (WebServicePropertiesForGraphResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebServicePropertiesForGraphResponse)(nil)).Elem()
}

func (o WebServicePropertiesForGraphResponsePtrOutput) ToWebServicePropertiesForGraphResponsePtrOutput() WebServicePropertiesForGraphResponsePtrOutput {
	return o
}

func (o WebServicePropertiesForGraphResponsePtrOutput) ToWebServicePropertiesForGraphResponsePtrOutputWithContext(ctx context.Context) WebServicePropertiesForGraphResponsePtrOutput {
	return o
}

func (o WebServicePropertiesForGraphResponsePtrOutput) Elem() WebServicePropertiesForGraphResponseOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) WebServicePropertiesForGraphResponse { return *v }).(WebServicePropertiesForGraphResponseOutput)
}

// Contains user defined properties describing web service assets. Properties are expressed as Key/Value pairs.
func (o WebServicePropertiesForGraphResponsePtrOutput) Assets() AssetItemResponseMapOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) map[string]AssetItemResponse {
		if v == nil {
			return nil
		}
		return v.Assets
	}).(AssetItemResponseMapOutput)
}

// Contains the commitment plan associated with this web service. Set at creation time. Once set, this value cannot be changed. Note: The commitment plan is not returned from calls to GET operations.
func (o WebServicePropertiesForGraphResponsePtrOutput) CommitmentPlan() CommitmentPlanResponsePtrOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) *CommitmentPlanResponse {
		if v == nil {
			return nil
		}
		return v.CommitmentPlan
	}).(CommitmentPlanResponsePtrOutput)
}

// Read Only: The date and time when the web service was created.
func (o WebServicePropertiesForGraphResponsePtrOutput) CreatedOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedOn
	}).(pulumi.StringPtrOutput)
}

// The description of the web service.
func (o WebServicePropertiesForGraphResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Settings controlling the diagnostics traces collection for the web service.
func (o WebServicePropertiesForGraphResponsePtrOutput) Diagnostics() DiagnosticsConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) *DiagnosticsConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.Diagnostics
	}).(DiagnosticsConfigurationResponsePtrOutput)
}

// Defines sample input data for one or more of the service's inputs.
func (o WebServicePropertiesForGraphResponsePtrOutput) ExampleRequest() ExampleRequestResponsePtrOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) *ExampleRequestResponse {
		if v == nil {
			return nil
		}
		return v.ExampleRequest
	}).(ExampleRequestResponsePtrOutput)
}

// When set to true, sample data is included in the web service's swagger definition. The default value is true.
func (o WebServicePropertiesForGraphResponsePtrOutput) ExposeSampleData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ExposeSampleData
	}).(pulumi.BoolPtrOutput)
}

// Contains the Swagger 2.0 schema describing one or more of the web service's inputs. For more information, see the Swagger specification.
func (o WebServicePropertiesForGraphResponsePtrOutput) Input() ServiceInputOutputSpecificationResponsePtrOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) *ServiceInputOutputSpecificationResponse {
		if v == nil {
			return nil
		}
		return v.Input
	}).(ServiceInputOutputSpecificationResponsePtrOutput)
}

// Contains the web service provisioning keys. If you do not specify provisioning keys, the Azure Machine Learning system generates them for you. Note: The keys are not returned from calls to GET operations.
func (o WebServicePropertiesForGraphResponsePtrOutput) Keys() WebServiceKeysResponsePtrOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) *WebServiceKeysResponse {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(WebServiceKeysResponsePtrOutput)
}

// Specifies the Machine Learning workspace containing the experiment that is source for the web service.
func (o WebServicePropertiesForGraphResponsePtrOutput) MachineLearningWorkspace() MachineLearningWorkspaceResponsePtrOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) *MachineLearningWorkspaceResponse {
		if v == nil {
			return nil
		}
		return v.MachineLearningWorkspace
	}).(MachineLearningWorkspaceResponsePtrOutput)
}

// Read Only: The date and time when the web service was last modified.
func (o WebServicePropertiesForGraphResponsePtrOutput) ModifiedOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ModifiedOn
	}).(pulumi.StringPtrOutput)
}

// Contains the Swagger 2.0 schema describing one or more of the web service's outputs. For more information, see the Swagger specification.
func (o WebServicePropertiesForGraphResponsePtrOutput) Output() ServiceInputOutputSpecificationResponsePtrOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) *ServiceInputOutputSpecificationResponse {
		if v == nil {
			return nil
		}
		return v.Output
	}).(ServiceInputOutputSpecificationResponsePtrOutput)
}

// The definition of the graph package making up this web service.
func (o WebServicePropertiesForGraphResponsePtrOutput) Package() GraphPackageResponsePtrOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) *GraphPackageResponse {
		if v == nil {
			return nil
		}
		return v.Package
	}).(GraphPackageResponsePtrOutput)
}

// Specifies the package type. Valid values are Graph (Specifies a web service published through the Machine Learning Studio) and Code (Specifies a web service published using code such as Python). Note: Code is not supported at this time.
func (o WebServicePropertiesForGraphResponsePtrOutput) PackageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PackageType
	}).(pulumi.StringPtrOutput)
}

// The set of global parameters values defined for the web service, given as a global parameter name to default value map. If no default value is specified, the parameter is considered to be required.
func (o WebServicePropertiesForGraphResponsePtrOutput) Parameters() WebServiceParameterResponseMapOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) map[string]WebServiceParameterResponse {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(WebServiceParameterResponseMapOutput)
}

// When set to true, indicates that the payload size is larger than 3 MB. Otherwise false. If the payload size exceed 3 MB, the payload is stored in a blob and the PayloadsLocation parameter contains the URI of the blob. Otherwise, this will be set to false and Assets, Input, Output, Package, Parameters, ExampleRequest are inline. The Payload sizes is determined by adding the size of the Assets, Input, Output, Package, Parameters, and the ExampleRequest.
func (o WebServicePropertiesForGraphResponsePtrOutput) PayloadsInBlobStorage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) *bool {
		if v == nil {
			return nil
		}
		return v.PayloadsInBlobStorage
	}).(pulumi.BoolPtrOutput)
}

// The URI of the payload blob. This parameter contains a value only if the payloadsInBlobStorage parameter is set to true. Otherwise is set to null.
func (o WebServicePropertiesForGraphResponsePtrOutput) PayloadsLocation() BlobLocationResponsePtrOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) *BlobLocationResponse {
		if v == nil {
			return nil
		}
		return v.PayloadsLocation
	}).(BlobLocationResponsePtrOutput)
}

// Read Only: The provision state of the web service. Valid values are Unknown, Provisioning, Succeeded, and Failed.
func (o WebServicePropertiesForGraphResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// When set to true, indicates that the web service is read-only and can no longer be updated or patched, only removed. Default, is false. Note: Once set to true, you cannot change its value.
func (o WebServicePropertiesForGraphResponsePtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// Contains the configuration settings for the web service endpoint.
func (o WebServicePropertiesForGraphResponsePtrOutput) RealtimeConfiguration() RealtimeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) *RealtimeConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.RealtimeConfiguration
	}).(RealtimeConfigurationResponsePtrOutput)
}

// Specifies the storage account that Azure Machine Learning uses to store information about the web service. Only the name of the storage account is returned from calls to GET operations. When updating the storage account information, you must ensure that all necessary assets are available in the new storage account or calls to your web service will fail.
func (o WebServicePropertiesForGraphResponsePtrOutput) StorageAccount() StorageAccountResponsePtrOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) *StorageAccountResponse {
		if v == nil {
			return nil
		}
		return v.StorageAccount
	}).(StorageAccountResponsePtrOutput)
}

// Read Only: Contains the URI of the swagger spec associated with this web service.
func (o WebServicePropertiesForGraphResponsePtrOutput) SwaggerLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SwaggerLocation
	}).(pulumi.StringPtrOutput)
}

// The title of the web service.
func (o WebServicePropertiesForGraphResponsePtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebServicePropertiesForGraphResponse) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AssetItemOutput{})
	pulumi.RegisterOutputType(AssetItemMapOutput{})
	pulumi.RegisterOutputType(AssetItemResponseOutput{})
	pulumi.RegisterOutputType(AssetItemResponseMapOutput{})
	pulumi.RegisterOutputType(BlobLocationOutput{})
	pulumi.RegisterOutputType(BlobLocationPtrOutput{})
	pulumi.RegisterOutputType(BlobLocationResponseOutput{})
	pulumi.RegisterOutputType(BlobLocationResponsePtrOutput{})
	pulumi.RegisterOutputType(ColumnSpecificationOutput{})
	pulumi.RegisterOutputType(ColumnSpecificationMapOutput{})
	pulumi.RegisterOutputType(ColumnSpecificationResponseOutput{})
	pulumi.RegisterOutputType(ColumnSpecificationResponseMapOutput{})
	pulumi.RegisterOutputType(CommitmentPlanOutput{})
	pulumi.RegisterOutputType(CommitmentPlanPtrOutput{})
	pulumi.RegisterOutputType(CommitmentPlanResponseOutput{})
	pulumi.RegisterOutputType(CommitmentPlanResponsePtrOutput{})
	pulumi.RegisterOutputType(DiagnosticsConfigurationOutput{})
	pulumi.RegisterOutputType(DiagnosticsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DiagnosticsConfigurationResponseOutput{})
	pulumi.RegisterOutputType(DiagnosticsConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ExampleRequestOutput{})
	pulumi.RegisterOutputType(ExampleRequestPtrOutput{})
	pulumi.RegisterOutputType(ExampleRequestResponseOutput{})
	pulumi.RegisterOutputType(ExampleRequestResponsePtrOutput{})
	pulumi.RegisterOutputType(GraphEdgeOutput{})
	pulumi.RegisterOutputType(GraphEdgeArrayOutput{})
	pulumi.RegisterOutputType(GraphEdgeResponseOutput{})
	pulumi.RegisterOutputType(GraphEdgeResponseArrayOutput{})
	pulumi.RegisterOutputType(GraphNodeOutput{})
	pulumi.RegisterOutputType(GraphNodeMapOutput{})
	pulumi.RegisterOutputType(GraphNodeResponseOutput{})
	pulumi.RegisterOutputType(GraphNodeResponseMapOutput{})
	pulumi.RegisterOutputType(GraphPackageOutput{})
	pulumi.RegisterOutputType(GraphPackagePtrOutput{})
	pulumi.RegisterOutputType(GraphPackageResponseOutput{})
	pulumi.RegisterOutputType(GraphPackageResponsePtrOutput{})
	pulumi.RegisterOutputType(GraphParameterOutput{})
	pulumi.RegisterOutputType(GraphParameterMapOutput{})
	pulumi.RegisterOutputType(GraphParameterLinkOutput{})
	pulumi.RegisterOutputType(GraphParameterLinkArrayOutput{})
	pulumi.RegisterOutputType(GraphParameterLinkResponseOutput{})
	pulumi.RegisterOutputType(GraphParameterLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(GraphParameterResponseOutput{})
	pulumi.RegisterOutputType(GraphParameterResponseMapOutput{})
	pulumi.RegisterOutputType(InputPortOutput{})
	pulumi.RegisterOutputType(InputPortMapOutput{})
	pulumi.RegisterOutputType(InputPortResponseOutput{})
	pulumi.RegisterOutputType(InputPortResponseMapOutput{})
	pulumi.RegisterOutputType(MachineLearningWorkspaceOutput{})
	pulumi.RegisterOutputType(MachineLearningWorkspacePtrOutput{})
	pulumi.RegisterOutputType(MachineLearningWorkspaceResponseOutput{})
	pulumi.RegisterOutputType(MachineLearningWorkspaceResponsePtrOutput{})
	pulumi.RegisterOutputType(ModeValueInfoOutput{})
	pulumi.RegisterOutputType(ModeValueInfoMapOutput{})
	pulumi.RegisterOutputType(ModeValueInfoResponseOutput{})
	pulumi.RegisterOutputType(ModeValueInfoResponseMapOutput{})
	pulumi.RegisterOutputType(ModuleAssetParameterOutput{})
	pulumi.RegisterOutputType(ModuleAssetParameterArrayOutput{})
	pulumi.RegisterOutputType(ModuleAssetParameterResponseOutput{})
	pulumi.RegisterOutputType(ModuleAssetParameterResponseArrayOutput{})
	pulumi.RegisterOutputType(OutputPortOutput{})
	pulumi.RegisterOutputType(OutputPortMapOutput{})
	pulumi.RegisterOutputType(OutputPortResponseOutput{})
	pulumi.RegisterOutputType(OutputPortResponseMapOutput{})
	pulumi.RegisterOutputType(RealtimeConfigurationOutput{})
	pulumi.RegisterOutputType(RealtimeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(RealtimeConfigurationResponseOutput{})
	pulumi.RegisterOutputType(RealtimeConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceInputOutputSpecificationOutput{})
	pulumi.RegisterOutputType(ServiceInputOutputSpecificationPtrOutput{})
	pulumi.RegisterOutputType(ServiceInputOutputSpecificationResponseOutput{})
	pulumi.RegisterOutputType(ServiceInputOutputSpecificationResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageAccountOutput{})
	pulumi.RegisterOutputType(StorageAccountPtrOutput{})
	pulumi.RegisterOutputType(StorageAccountResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountResponsePtrOutput{})
	pulumi.RegisterOutputType(TableSpecificationOutput{})
	pulumi.RegisterOutputType(TableSpecificationMapOutput{})
	pulumi.RegisterOutputType(TableSpecificationResponseOutput{})
	pulumi.RegisterOutputType(TableSpecificationResponseMapOutput{})
	pulumi.RegisterOutputType(WebServiceKeysOutput{})
	pulumi.RegisterOutputType(WebServiceKeysPtrOutput{})
	pulumi.RegisterOutputType(WebServiceKeysResponseOutput{})
	pulumi.RegisterOutputType(WebServiceKeysResponsePtrOutput{})
	pulumi.RegisterOutputType(WebServiceParameterOutput{})
	pulumi.RegisterOutputType(WebServiceParameterMapOutput{})
	pulumi.RegisterOutputType(WebServiceParameterResponseOutput{})
	pulumi.RegisterOutputType(WebServiceParameterResponseMapOutput{})
	pulumi.RegisterOutputType(WebServicePropertiesForGraphOutput{})
	pulumi.RegisterOutputType(WebServicePropertiesForGraphPtrOutput{})
	pulumi.RegisterOutputType(WebServicePropertiesForGraphResponseOutput{})
	pulumi.RegisterOutputType(WebServicePropertiesForGraphResponsePtrOutput{})
}
