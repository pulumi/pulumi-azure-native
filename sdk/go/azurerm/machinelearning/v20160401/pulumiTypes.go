// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20160401

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An object that represents a machine learning workspace.
type WorkspaceType struct {
	// The location of the resource. This cannot be changed after the resource is created.
	Location string `pulumi:"location"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The properties of the machine learning workspace.
	Properties WorkspacePropertiesResponse `pulumi:"properties"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type string `pulumi:"type"`
}

// WorkspaceTypeInput is an input type that accepts WorkspaceTypeArgs and WorkspaceTypeOutput values.
// You can construct a concrete instance of `WorkspaceTypeInput` via:
//
//          WorkspaceTypeArgs{...}
type WorkspaceTypeInput interface {
	pulumi.Input

	ToWorkspaceTypeOutput() WorkspaceTypeOutput
	ToWorkspaceTypeOutputWithContext(context.Context) WorkspaceTypeOutput
}

// An object that represents a machine learning workspace.
type WorkspaceTypeArgs struct {
	// The location of the resource. This cannot be changed after the resource is created.
	Location pulumi.StringInput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of the machine learning workspace.
	Properties WorkspacePropertiesResponseInput `pulumi:"properties"`
	// The tags of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WorkspaceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceType)(nil)).Elem()
}

func (i WorkspaceTypeArgs) ToWorkspaceTypeOutput() WorkspaceTypeOutput {
	return i.ToWorkspaceTypeOutputWithContext(context.Background())
}

func (i WorkspaceTypeArgs) ToWorkspaceTypeOutputWithContext(ctx context.Context) WorkspaceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceTypeOutput)
}

// An object that represents a machine learning workspace.
type WorkspaceTypeOutput struct{ *pulumi.OutputState }

func (WorkspaceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceType)(nil)).Elem()
}

func (o WorkspaceTypeOutput) ToWorkspaceTypeOutput() WorkspaceTypeOutput {
	return o
}

func (o WorkspaceTypeOutput) ToWorkspaceTypeOutputWithContext(ctx context.Context) WorkspaceTypeOutput {
	return o
}

// The location of the resource. This cannot be changed after the resource is created.
func (o WorkspaceTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceType) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource.
func (o WorkspaceTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of the machine learning workspace.
func (o WorkspaceTypeOutput) Properties() WorkspacePropertiesResponseOutput {
	return o.ApplyT(func(v WorkspaceType) WorkspacePropertiesResponse { return v.Properties }).(WorkspacePropertiesResponseOutput)
}

// The tags of the resource.
func (o WorkspaceTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkspaceType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o WorkspaceTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceType) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of a machine learning workspace.
type WorkspaceProperties struct {
	// The key vault identifier used for encrypted workspaces.
	KeyVaultIdentifierId *string `pulumi:"keyVaultIdentifierId"`
	// The email id of the owner for this workspace.
	OwnerEmail string `pulumi:"ownerEmail"`
	// The fully qualified arm id of the storage account associated with this workspace.
	UserStorageAccountId string `pulumi:"userStorageAccountId"`
}

// WorkspacePropertiesInput is an input type that accepts WorkspacePropertiesArgs and WorkspacePropertiesOutput values.
// You can construct a concrete instance of `WorkspacePropertiesInput` via:
//
//          WorkspacePropertiesArgs{...}
type WorkspacePropertiesInput interface {
	pulumi.Input

	ToWorkspacePropertiesOutput() WorkspacePropertiesOutput
	ToWorkspacePropertiesOutputWithContext(context.Context) WorkspacePropertiesOutput
}

// The properties of a machine learning workspace.
type WorkspacePropertiesArgs struct {
	// The key vault identifier used for encrypted workspaces.
	KeyVaultIdentifierId pulumi.StringPtrInput `pulumi:"keyVaultIdentifierId"`
	// The email id of the owner for this workspace.
	OwnerEmail pulumi.StringInput `pulumi:"ownerEmail"`
	// The fully qualified arm id of the storage account associated with this workspace.
	UserStorageAccountId pulumi.StringInput `pulumi:"userStorageAccountId"`
}

func (WorkspacePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceProperties)(nil)).Elem()
}

func (i WorkspacePropertiesArgs) ToWorkspacePropertiesOutput() WorkspacePropertiesOutput {
	return i.ToWorkspacePropertiesOutputWithContext(context.Background())
}

func (i WorkspacePropertiesArgs) ToWorkspacePropertiesOutputWithContext(ctx context.Context) WorkspacePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacePropertiesOutput)
}

func (i WorkspacePropertiesArgs) ToWorkspacePropertiesPtrOutput() WorkspacePropertiesPtrOutput {
	return i.ToWorkspacePropertiesPtrOutputWithContext(context.Background())
}

func (i WorkspacePropertiesArgs) ToWorkspacePropertiesPtrOutputWithContext(ctx context.Context) WorkspacePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacePropertiesOutput).ToWorkspacePropertiesPtrOutputWithContext(ctx)
}

// WorkspacePropertiesPtrInput is an input type that accepts WorkspacePropertiesArgs, WorkspacePropertiesPtr and WorkspacePropertiesPtrOutput values.
// You can construct a concrete instance of `WorkspacePropertiesPtrInput` via:
//
//          WorkspacePropertiesArgs{...}
//
//  or:
//
//          nil
type WorkspacePropertiesPtrInput interface {
	pulumi.Input

	ToWorkspacePropertiesPtrOutput() WorkspacePropertiesPtrOutput
	ToWorkspacePropertiesPtrOutputWithContext(context.Context) WorkspacePropertiesPtrOutput
}

type workspacePropertiesPtrType WorkspacePropertiesArgs

func WorkspacePropertiesPtr(v *WorkspacePropertiesArgs) WorkspacePropertiesPtrInput {
	return (*workspacePropertiesPtrType)(v)
}

func (*workspacePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceProperties)(nil)).Elem()
}

func (i *workspacePropertiesPtrType) ToWorkspacePropertiesPtrOutput() WorkspacePropertiesPtrOutput {
	return i.ToWorkspacePropertiesPtrOutputWithContext(context.Background())
}

func (i *workspacePropertiesPtrType) ToWorkspacePropertiesPtrOutputWithContext(ctx context.Context) WorkspacePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacePropertiesPtrOutput)
}

// The properties of a machine learning workspace.
type WorkspacePropertiesOutput struct{ *pulumi.OutputState }

func (WorkspacePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceProperties)(nil)).Elem()
}

func (o WorkspacePropertiesOutput) ToWorkspacePropertiesOutput() WorkspacePropertiesOutput {
	return o
}

func (o WorkspacePropertiesOutput) ToWorkspacePropertiesOutputWithContext(ctx context.Context) WorkspacePropertiesOutput {
	return o
}

func (o WorkspacePropertiesOutput) ToWorkspacePropertiesPtrOutput() WorkspacePropertiesPtrOutput {
	return o.ToWorkspacePropertiesPtrOutputWithContext(context.Background())
}

func (o WorkspacePropertiesOutput) ToWorkspacePropertiesPtrOutputWithContext(ctx context.Context) WorkspacePropertiesPtrOutput {
	return o.ApplyT(func(v WorkspaceProperties) *WorkspaceProperties {
		return &v
	}).(WorkspacePropertiesPtrOutput)
}

// The key vault identifier used for encrypted workspaces.
func (o WorkspacePropertiesOutput) KeyVaultIdentifierId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceProperties) *string { return v.KeyVaultIdentifierId }).(pulumi.StringPtrOutput)
}

// The email id of the owner for this workspace.
func (o WorkspacePropertiesOutput) OwnerEmail() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceProperties) string { return v.OwnerEmail }).(pulumi.StringOutput)
}

// The fully qualified arm id of the storage account associated with this workspace.
func (o WorkspacePropertiesOutput) UserStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceProperties) string { return v.UserStorageAccountId }).(pulumi.StringOutput)
}

type WorkspacePropertiesPtrOutput struct{ *pulumi.OutputState }

func (WorkspacePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceProperties)(nil)).Elem()
}

func (o WorkspacePropertiesPtrOutput) ToWorkspacePropertiesPtrOutput() WorkspacePropertiesPtrOutput {
	return o
}

func (o WorkspacePropertiesPtrOutput) ToWorkspacePropertiesPtrOutputWithContext(ctx context.Context) WorkspacePropertiesPtrOutput {
	return o
}

func (o WorkspacePropertiesPtrOutput) Elem() WorkspacePropertiesOutput {
	return o.ApplyT(func(v *WorkspaceProperties) WorkspaceProperties { return *v }).(WorkspacePropertiesOutput)
}

// The key vault identifier used for encrypted workspaces.
func (o WorkspacePropertiesPtrOutput) KeyVaultIdentifierId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultIdentifierId
	}).(pulumi.StringPtrOutput)
}

// The email id of the owner for this workspace.
func (o WorkspacePropertiesPtrOutput) OwnerEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.OwnerEmail
	}).(pulumi.StringPtrOutput)
}

// The fully qualified arm id of the storage account associated with this workspace.
func (o WorkspacePropertiesPtrOutput) UserStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceProperties) *string {
		if v == nil {
			return nil
		}
		return &v.UserStorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The properties of a machine learning workspace.
type WorkspacePropertiesResponse struct {
	// The creation time for this workspace resource.
	CreationTime string `pulumi:"creationTime"`
	// The key vault identifier used for encrypted workspaces.
	KeyVaultIdentifierId *string `pulumi:"keyVaultIdentifierId"`
	// The email id of the owner for this workspace.
	OwnerEmail string `pulumi:"ownerEmail"`
	// The regional endpoint for the machine learning studio service which hosts this workspace.
	StudioEndpoint string `pulumi:"studioEndpoint"`
	// The fully qualified arm id of the storage account associated with this workspace.
	UserStorageAccountId string `pulumi:"userStorageAccountId"`
	// The immutable id associated with this workspace.
	WorkspaceId string `pulumi:"workspaceId"`
	// The current state of workspace resource.
	WorkspaceState string `pulumi:"workspaceState"`
	// The type of this workspace.
	WorkspaceType string `pulumi:"workspaceType"`
}

// WorkspacePropertiesResponseInput is an input type that accepts WorkspacePropertiesResponseArgs and WorkspacePropertiesResponseOutput values.
// You can construct a concrete instance of `WorkspacePropertiesResponseInput` via:
//
//          WorkspacePropertiesResponseArgs{...}
type WorkspacePropertiesResponseInput interface {
	pulumi.Input

	ToWorkspacePropertiesResponseOutput() WorkspacePropertiesResponseOutput
	ToWorkspacePropertiesResponseOutputWithContext(context.Context) WorkspacePropertiesResponseOutput
}

// The properties of a machine learning workspace.
type WorkspacePropertiesResponseArgs struct {
	// The creation time for this workspace resource.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The key vault identifier used for encrypted workspaces.
	KeyVaultIdentifierId pulumi.StringPtrInput `pulumi:"keyVaultIdentifierId"`
	// The email id of the owner for this workspace.
	OwnerEmail pulumi.StringInput `pulumi:"ownerEmail"`
	// The regional endpoint for the machine learning studio service which hosts this workspace.
	StudioEndpoint pulumi.StringInput `pulumi:"studioEndpoint"`
	// The fully qualified arm id of the storage account associated with this workspace.
	UserStorageAccountId pulumi.StringInput `pulumi:"userStorageAccountId"`
	// The immutable id associated with this workspace.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
	// The current state of workspace resource.
	WorkspaceState pulumi.StringInput `pulumi:"workspaceState"`
	// The type of this workspace.
	WorkspaceType pulumi.StringInput `pulumi:"workspaceType"`
}

func (WorkspacePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacePropertiesResponse)(nil)).Elem()
}

func (i WorkspacePropertiesResponseArgs) ToWorkspacePropertiesResponseOutput() WorkspacePropertiesResponseOutput {
	return i.ToWorkspacePropertiesResponseOutputWithContext(context.Background())
}

func (i WorkspacePropertiesResponseArgs) ToWorkspacePropertiesResponseOutputWithContext(ctx context.Context) WorkspacePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacePropertiesResponseOutput)
}

func (i WorkspacePropertiesResponseArgs) ToWorkspacePropertiesResponsePtrOutput() WorkspacePropertiesResponsePtrOutput {
	return i.ToWorkspacePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i WorkspacePropertiesResponseArgs) ToWorkspacePropertiesResponsePtrOutputWithContext(ctx context.Context) WorkspacePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacePropertiesResponseOutput).ToWorkspacePropertiesResponsePtrOutputWithContext(ctx)
}

// WorkspacePropertiesResponsePtrInput is an input type that accepts WorkspacePropertiesResponseArgs, WorkspacePropertiesResponsePtr and WorkspacePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `WorkspacePropertiesResponsePtrInput` via:
//
//          WorkspacePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type WorkspacePropertiesResponsePtrInput interface {
	pulumi.Input

	ToWorkspacePropertiesResponsePtrOutput() WorkspacePropertiesResponsePtrOutput
	ToWorkspacePropertiesResponsePtrOutputWithContext(context.Context) WorkspacePropertiesResponsePtrOutput
}

type workspacePropertiesResponsePtrType WorkspacePropertiesResponseArgs

func WorkspacePropertiesResponsePtr(v *WorkspacePropertiesResponseArgs) WorkspacePropertiesResponsePtrInput {
	return (*workspacePropertiesResponsePtrType)(v)
}

func (*workspacePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspacePropertiesResponse)(nil)).Elem()
}

func (i *workspacePropertiesResponsePtrType) ToWorkspacePropertiesResponsePtrOutput() WorkspacePropertiesResponsePtrOutput {
	return i.ToWorkspacePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *workspacePropertiesResponsePtrType) ToWorkspacePropertiesResponsePtrOutputWithContext(ctx context.Context) WorkspacePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacePropertiesResponsePtrOutput)
}

// The properties of a machine learning workspace.
type WorkspacePropertiesResponseOutput struct{ *pulumi.OutputState }

func (WorkspacePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacePropertiesResponse)(nil)).Elem()
}

func (o WorkspacePropertiesResponseOutput) ToWorkspacePropertiesResponseOutput() WorkspacePropertiesResponseOutput {
	return o
}

func (o WorkspacePropertiesResponseOutput) ToWorkspacePropertiesResponseOutputWithContext(ctx context.Context) WorkspacePropertiesResponseOutput {
	return o
}

func (o WorkspacePropertiesResponseOutput) ToWorkspacePropertiesResponsePtrOutput() WorkspacePropertiesResponsePtrOutput {
	return o.ToWorkspacePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o WorkspacePropertiesResponseOutput) ToWorkspacePropertiesResponsePtrOutputWithContext(ctx context.Context) WorkspacePropertiesResponsePtrOutput {
	return o.ApplyT(func(v WorkspacePropertiesResponse) *WorkspacePropertiesResponse {
		return &v
	}).(WorkspacePropertiesResponsePtrOutput)
}

// The creation time for this workspace resource.
func (o WorkspacePropertiesResponseOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacePropertiesResponse) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The key vault identifier used for encrypted workspaces.
func (o WorkspacePropertiesResponseOutput) KeyVaultIdentifierId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspacePropertiesResponse) *string { return v.KeyVaultIdentifierId }).(pulumi.StringPtrOutput)
}

// The email id of the owner for this workspace.
func (o WorkspacePropertiesResponseOutput) OwnerEmail() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacePropertiesResponse) string { return v.OwnerEmail }).(pulumi.StringOutput)
}

// The regional endpoint for the machine learning studio service which hosts this workspace.
func (o WorkspacePropertiesResponseOutput) StudioEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacePropertiesResponse) string { return v.StudioEndpoint }).(pulumi.StringOutput)
}

// The fully qualified arm id of the storage account associated with this workspace.
func (o WorkspacePropertiesResponseOutput) UserStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacePropertiesResponse) string { return v.UserStorageAccountId }).(pulumi.StringOutput)
}

// The immutable id associated with this workspace.
func (o WorkspacePropertiesResponseOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacePropertiesResponse) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

// The current state of workspace resource.
func (o WorkspacePropertiesResponseOutput) WorkspaceState() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacePropertiesResponse) string { return v.WorkspaceState }).(pulumi.StringOutput)
}

// The type of this workspace.
func (o WorkspacePropertiesResponseOutput) WorkspaceType() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacePropertiesResponse) string { return v.WorkspaceType }).(pulumi.StringOutput)
}

type WorkspacePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkspacePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspacePropertiesResponse)(nil)).Elem()
}

func (o WorkspacePropertiesResponsePtrOutput) ToWorkspacePropertiesResponsePtrOutput() WorkspacePropertiesResponsePtrOutput {
	return o
}

func (o WorkspacePropertiesResponsePtrOutput) ToWorkspacePropertiesResponsePtrOutputWithContext(ctx context.Context) WorkspacePropertiesResponsePtrOutput {
	return o
}

func (o WorkspacePropertiesResponsePtrOutput) Elem() WorkspacePropertiesResponseOutput {
	return o.ApplyT(func(v *WorkspacePropertiesResponse) WorkspacePropertiesResponse { return *v }).(WorkspacePropertiesResponseOutput)
}

// The creation time for this workspace resource.
func (o WorkspacePropertiesResponsePtrOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreationTime
	}).(pulumi.StringPtrOutput)
}

// The key vault identifier used for encrypted workspaces.
func (o WorkspacePropertiesResponsePtrOutput) KeyVaultIdentifierId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultIdentifierId
	}).(pulumi.StringPtrOutput)
}

// The email id of the owner for this workspace.
func (o WorkspacePropertiesResponsePtrOutput) OwnerEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OwnerEmail
	}).(pulumi.StringPtrOutput)
}

// The regional endpoint for the machine learning studio service which hosts this workspace.
func (o WorkspacePropertiesResponsePtrOutput) StudioEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StudioEndpoint
	}).(pulumi.StringPtrOutput)
}

// The fully qualified arm id of the storage account associated with this workspace.
func (o WorkspacePropertiesResponsePtrOutput) UserStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserStorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The immutable id associated with this workspace.
func (o WorkspacePropertiesResponsePtrOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.WorkspaceId
	}).(pulumi.StringPtrOutput)
}

// The current state of workspace resource.
func (o WorkspacePropertiesResponsePtrOutput) WorkspaceState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.WorkspaceState
	}).(pulumi.StringPtrOutput)
}

// The type of this workspace.
func (o WorkspacePropertiesResponsePtrOutput) WorkspaceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.WorkspaceType
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(WorkspaceTypeOutput{})
	pulumi.RegisterOutputType(WorkspacePropertiesOutput{})
	pulumi.RegisterOutputType(WorkspacePropertiesPtrOutput{})
	pulumi.RegisterOutputType(WorkspacePropertiesResponseOutput{})
	pulumi.RegisterOutputType(WorkspacePropertiesResponsePtrOutput{})
}
