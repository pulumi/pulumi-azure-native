// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200301preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A streaming job.
type ClusterJobResponse struct {
	// Resource ID of the streaming job.
	Id string `pulumi:"id"`
	// The current execution state of the streaming job.
	JobState *string `pulumi:"jobState"`
	// The number of streaming units that are used by the streaming job.
	StreamingUnits int `pulumi:"streamingUnits"`
}

// The properties associated with a Stream Analytics cluster.
type ClusterProperties struct {
	// The status of the cluster provisioning. The three terminal states are: Succeeded, Failed and Canceled
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ClusterPropertiesInput is an input type that accepts ClusterPropertiesArgs and ClusterPropertiesOutput values.
// You can construct a concrete instance of `ClusterPropertiesInput` via:
//
//          ClusterPropertiesArgs{...}
type ClusterPropertiesInput interface {
	pulumi.Input

	ToClusterPropertiesOutput() ClusterPropertiesOutput
	ToClusterPropertiesOutputWithContext(context.Context) ClusterPropertiesOutput
}

// The properties associated with a Stream Analytics cluster.
type ClusterPropertiesArgs struct {
	// The status of the cluster provisioning. The three terminal states are: Succeeded, Failed and Canceled
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ClusterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterProperties)(nil)).Elem()
}

func (i ClusterPropertiesArgs) ToClusterPropertiesOutput() ClusterPropertiesOutput {
	return i.ToClusterPropertiesOutputWithContext(context.Background())
}

func (i ClusterPropertiesArgs) ToClusterPropertiesOutputWithContext(ctx context.Context) ClusterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesOutput)
}

func (i ClusterPropertiesArgs) ToClusterPropertiesPtrOutput() ClusterPropertiesPtrOutput {
	return i.ToClusterPropertiesPtrOutputWithContext(context.Background())
}

func (i ClusterPropertiesArgs) ToClusterPropertiesPtrOutputWithContext(ctx context.Context) ClusterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesOutput).ToClusterPropertiesPtrOutputWithContext(ctx)
}

// ClusterPropertiesPtrInput is an input type that accepts ClusterPropertiesArgs, ClusterPropertiesPtr and ClusterPropertiesPtrOutput values.
// You can construct a concrete instance of `ClusterPropertiesPtrInput` via:
//
//          ClusterPropertiesArgs{...}
//
//  or:
//
//          nil
type ClusterPropertiesPtrInput interface {
	pulumi.Input

	ToClusterPropertiesPtrOutput() ClusterPropertiesPtrOutput
	ToClusterPropertiesPtrOutputWithContext(context.Context) ClusterPropertiesPtrOutput
}

type clusterPropertiesPtrType ClusterPropertiesArgs

func ClusterPropertiesPtr(v *ClusterPropertiesArgs) ClusterPropertiesPtrInput {
	return (*clusterPropertiesPtrType)(v)
}

func (*clusterPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterProperties)(nil)).Elem()
}

func (i *clusterPropertiesPtrType) ToClusterPropertiesPtrOutput() ClusterPropertiesPtrOutput {
	return i.ToClusterPropertiesPtrOutputWithContext(context.Background())
}

func (i *clusterPropertiesPtrType) ToClusterPropertiesPtrOutputWithContext(ctx context.Context) ClusterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesPtrOutput)
}

// The properties associated with a Stream Analytics cluster.
type ClusterPropertiesResponse struct {
	// Represents the number of streaming units currently being used on the cluster.
	CapacityAllocated int `pulumi:"capacityAllocated"`
	// Represents the sum of the SUs of all streaming jobs associated with the cluster. If all of the jobs were running, this would be the capacity allocated.
	CapacityAssigned int `pulumi:"capacityAssigned"`
	// Unique identifier for the cluster.
	ClusterId string `pulumi:"clusterId"`
	// The date this cluster was created.
	CreatedDate string `pulumi:"createdDate"`
	// The status of the cluster provisioning. The three terminal states are: Succeeded, Failed and Canceled
	ProvisioningState *string `pulumi:"provisioningState"`
}

// The properties associated with a Stream Analytics cluster.
type ClusterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ClusterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPropertiesResponse)(nil)).Elem()
}

func (o ClusterPropertiesResponseOutput) ToClusterPropertiesResponseOutput() ClusterPropertiesResponseOutput {
	return o
}

func (o ClusterPropertiesResponseOutput) ToClusterPropertiesResponseOutputWithContext(ctx context.Context) ClusterPropertiesResponseOutput {
	return o
}

func (o ClusterPropertiesResponseOutput) ToClusterPropertiesResponsePtrOutput() ClusterPropertiesResponsePtrOutput {
	return o.ToClusterPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ClusterPropertiesResponseOutput) ToClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) ClusterPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) *ClusterPropertiesResponse {
		return &v
	}).(ClusterPropertiesResponsePtrOutput)
}

// Represents the number of streaming units currently being used on the cluster.
func (o ClusterPropertiesResponseOutput) CapacityAllocated() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) int { return v.CapacityAllocated }).(pulumi.IntOutput)
}

// Represents the sum of the SUs of all streaming jobs associated with the cluster. If all of the jobs were running, this would be the capacity allocated.
func (o ClusterPropertiesResponseOutput) CapacityAssigned() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) int { return v.CapacityAssigned }).(pulumi.IntOutput)
}

// Unique identifier for the cluster.
func (o ClusterPropertiesResponseOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The date this cluster was created.
func (o ClusterPropertiesResponseOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// The status of the cluster provisioning. The three terminal states are: Succeeded, Failed and Canceled
func (o ClusterPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ClusterPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ClusterPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPropertiesResponse)(nil)).Elem()
}

func (o ClusterPropertiesResponsePtrOutput) ToClusterPropertiesResponsePtrOutput() ClusterPropertiesResponsePtrOutput {
	return o
}

func (o ClusterPropertiesResponsePtrOutput) ToClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) ClusterPropertiesResponsePtrOutput {
	return o
}

func (o ClusterPropertiesResponsePtrOutput) Elem() ClusterPropertiesResponseOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) ClusterPropertiesResponse { return *v }).(ClusterPropertiesResponseOutput)
}

// Represents the number of streaming units currently being used on the cluster.
func (o ClusterPropertiesResponsePtrOutput) CapacityAllocated() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.CapacityAllocated
	}).(pulumi.IntPtrOutput)
}

// Represents the sum of the SUs of all streaming jobs associated with the cluster. If all of the jobs were running, this would be the capacity allocated.
func (o ClusterPropertiesResponsePtrOutput) CapacityAssigned() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.CapacityAssigned
	}).(pulumi.IntPtrOutput)
}

// Unique identifier for the cluster.
func (o ClusterPropertiesResponsePtrOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterId
	}).(pulumi.StringPtrOutput)
}

// The date this cluster was created.
func (o ClusterPropertiesResponsePtrOutput) CreatedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedDate
	}).(pulumi.StringPtrOutput)
}

// The status of the cluster provisioning. The three terminal states are: Succeeded, Failed and Canceled
func (o ClusterPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The SKU of the cluster. This determines the size/capacity of the cluster. Required on PUT (CreateOrUpdate) requests.
type ClusterSku struct {
	// Denotes the number of streaming units the cluster can support. Valid values for this property are multiples of 36 with a minimum value of 36 and maximum value of 216. Required on PUT (CreateOrUpdate) requests.
	Capacity *int `pulumi:"capacity"`
	// Specifies the SKU name of the cluster. Required on PUT (CreateOrUpdate) requests.
	Name *string `pulumi:"name"`
}

// ClusterSkuInput is an input type that accepts ClusterSkuArgs and ClusterSkuOutput values.
// You can construct a concrete instance of `ClusterSkuInput` via:
//
//          ClusterSkuArgs{...}
type ClusterSkuInput interface {
	pulumi.Input

	ToClusterSkuOutput() ClusterSkuOutput
	ToClusterSkuOutputWithContext(context.Context) ClusterSkuOutput
}

// The SKU of the cluster. This determines the size/capacity of the cluster. Required on PUT (CreateOrUpdate) requests.
type ClusterSkuArgs struct {
	// Denotes the number of streaming units the cluster can support. Valid values for this property are multiples of 36 with a minimum value of 36 and maximum value of 216. Required on PUT (CreateOrUpdate) requests.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Specifies the SKU name of the cluster. Required on PUT (CreateOrUpdate) requests.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ClusterSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSku)(nil)).Elem()
}

func (i ClusterSkuArgs) ToClusterSkuOutput() ClusterSkuOutput {
	return i.ToClusterSkuOutputWithContext(context.Background())
}

func (i ClusterSkuArgs) ToClusterSkuOutputWithContext(ctx context.Context) ClusterSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSkuOutput)
}

func (i ClusterSkuArgs) ToClusterSkuPtrOutput() ClusterSkuPtrOutput {
	return i.ToClusterSkuPtrOutputWithContext(context.Background())
}

func (i ClusterSkuArgs) ToClusterSkuPtrOutputWithContext(ctx context.Context) ClusterSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSkuOutput).ToClusterSkuPtrOutputWithContext(ctx)
}

// ClusterSkuPtrInput is an input type that accepts ClusterSkuArgs, ClusterSkuPtr and ClusterSkuPtrOutput values.
// You can construct a concrete instance of `ClusterSkuPtrInput` via:
//
//          ClusterSkuArgs{...}
//
//  or:
//
//          nil
type ClusterSkuPtrInput interface {
	pulumi.Input

	ToClusterSkuPtrOutput() ClusterSkuPtrOutput
	ToClusterSkuPtrOutputWithContext(context.Context) ClusterSkuPtrOutput
}

type clusterSkuPtrType ClusterSkuArgs

func ClusterSkuPtr(v *ClusterSkuArgs) ClusterSkuPtrInput {
	return (*clusterSkuPtrType)(v)
}

func (*clusterSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSku)(nil)).Elem()
}

func (i *clusterSkuPtrType) ToClusterSkuPtrOutput() ClusterSkuPtrOutput {
	return i.ToClusterSkuPtrOutputWithContext(context.Background())
}

func (i *clusterSkuPtrType) ToClusterSkuPtrOutputWithContext(ctx context.Context) ClusterSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSkuPtrOutput)
}

// The SKU of the cluster. This determines the size/capacity of the cluster. Required on PUT (CreateOrUpdate) requests.
type ClusterSkuResponse struct {
	// Denotes the number of streaming units the cluster can support. Valid values for this property are multiples of 36 with a minimum value of 36 and maximum value of 216. Required on PUT (CreateOrUpdate) requests.
	Capacity *int `pulumi:"capacity"`
	// Specifies the SKU name of the cluster. Required on PUT (CreateOrUpdate) requests.
	Name *string `pulumi:"name"`
}

// The SKU of the cluster. This determines the size/capacity of the cluster. Required on PUT (CreateOrUpdate) requests.
type ClusterSkuResponseOutput struct{ *pulumi.OutputState }

func (ClusterSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSkuResponse)(nil)).Elem()
}

func (o ClusterSkuResponseOutput) ToClusterSkuResponseOutput() ClusterSkuResponseOutput {
	return o
}

func (o ClusterSkuResponseOutput) ToClusterSkuResponseOutputWithContext(ctx context.Context) ClusterSkuResponseOutput {
	return o
}

func (o ClusterSkuResponseOutput) ToClusterSkuResponsePtrOutput() ClusterSkuResponsePtrOutput {
	return o.ToClusterSkuResponsePtrOutputWithContext(context.Background())
}

func (o ClusterSkuResponseOutput) ToClusterSkuResponsePtrOutputWithContext(ctx context.Context) ClusterSkuResponsePtrOutput {
	return o.ApplyT(func(v ClusterSkuResponse) *ClusterSkuResponse {
		return &v
	}).(ClusterSkuResponsePtrOutput)
}

// Denotes the number of streaming units the cluster can support. Valid values for this property are multiples of 36 with a minimum value of 36 and maximum value of 216. Required on PUT (CreateOrUpdate) requests.
func (o ClusterSkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Specifies the SKU name of the cluster. Required on PUT (CreateOrUpdate) requests.
func (o ClusterSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ClusterSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (ClusterSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSkuResponse)(nil)).Elem()
}

func (o ClusterSkuResponsePtrOutput) ToClusterSkuResponsePtrOutput() ClusterSkuResponsePtrOutput {
	return o
}

func (o ClusterSkuResponsePtrOutput) ToClusterSkuResponsePtrOutputWithContext(ctx context.Context) ClusterSkuResponsePtrOutput {
	return o
}

func (o ClusterSkuResponsePtrOutput) Elem() ClusterSkuResponseOutput {
	return o.ApplyT(func(v *ClusterSkuResponse) ClusterSkuResponse { return *v }).(ClusterSkuResponseOutput)
}

// Denotes the number of streaming units the cluster can support. Valid values for this property are multiples of 36 with a minimum value of 36 and maximum value of 216. Required on PUT (CreateOrUpdate) requests.
func (o ClusterSkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterSkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Specifies the SKU name of the cluster. Required on PUT (CreateOrUpdate) requests.
func (o ClusterSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The properties associated with a private endpoint.
type PrivateEndpointProperties struct {
	// A list of connections to the remote resource. Immutable after it is set.
	ManualPrivateLinkServiceConnections []PrivateLinkServiceConnection `pulumi:"manualPrivateLinkServiceConnections"`
}

// PrivateEndpointPropertiesInput is an input type that accepts PrivateEndpointPropertiesArgs and PrivateEndpointPropertiesOutput values.
// You can construct a concrete instance of `PrivateEndpointPropertiesInput` via:
//
//          PrivateEndpointPropertiesArgs{...}
type PrivateEndpointPropertiesInput interface {
	pulumi.Input

	ToPrivateEndpointPropertiesOutput() PrivateEndpointPropertiesOutput
	ToPrivateEndpointPropertiesOutputWithContext(context.Context) PrivateEndpointPropertiesOutput
}

// The properties associated with a private endpoint.
type PrivateEndpointPropertiesArgs struct {
	// A list of connections to the remote resource. Immutable after it is set.
	ManualPrivateLinkServiceConnections PrivateLinkServiceConnectionArrayInput `pulumi:"manualPrivateLinkServiceConnections"`
}

func (PrivateEndpointPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointProperties)(nil)).Elem()
}

func (i PrivateEndpointPropertiesArgs) ToPrivateEndpointPropertiesOutput() PrivateEndpointPropertiesOutput {
	return i.ToPrivateEndpointPropertiesOutputWithContext(context.Background())
}

func (i PrivateEndpointPropertiesArgs) ToPrivateEndpointPropertiesOutputWithContext(ctx context.Context) PrivateEndpointPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointPropertiesOutput)
}

func (i PrivateEndpointPropertiesArgs) ToPrivateEndpointPropertiesPtrOutput() PrivateEndpointPropertiesPtrOutput {
	return i.ToPrivateEndpointPropertiesPtrOutputWithContext(context.Background())
}

func (i PrivateEndpointPropertiesArgs) ToPrivateEndpointPropertiesPtrOutputWithContext(ctx context.Context) PrivateEndpointPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointPropertiesOutput).ToPrivateEndpointPropertiesPtrOutputWithContext(ctx)
}

// PrivateEndpointPropertiesPtrInput is an input type that accepts PrivateEndpointPropertiesArgs, PrivateEndpointPropertiesPtr and PrivateEndpointPropertiesPtrOutput values.
// You can construct a concrete instance of `PrivateEndpointPropertiesPtrInput` via:
//
//          PrivateEndpointPropertiesArgs{...}
//
//  or:
//
//          nil
type PrivateEndpointPropertiesPtrInput interface {
	pulumi.Input

	ToPrivateEndpointPropertiesPtrOutput() PrivateEndpointPropertiesPtrOutput
	ToPrivateEndpointPropertiesPtrOutputWithContext(context.Context) PrivateEndpointPropertiesPtrOutput
}

type privateEndpointPropertiesPtrType PrivateEndpointPropertiesArgs

func PrivateEndpointPropertiesPtr(v *PrivateEndpointPropertiesArgs) PrivateEndpointPropertiesPtrInput {
	return (*privateEndpointPropertiesPtrType)(v)
}

func (*privateEndpointPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointProperties)(nil)).Elem()
}

func (i *privateEndpointPropertiesPtrType) ToPrivateEndpointPropertiesPtrOutput() PrivateEndpointPropertiesPtrOutput {
	return i.ToPrivateEndpointPropertiesPtrOutputWithContext(context.Background())
}

func (i *privateEndpointPropertiesPtrType) ToPrivateEndpointPropertiesPtrOutputWithContext(ctx context.Context) PrivateEndpointPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointPropertiesPtrOutput)
}

// The properties associated with a private endpoint.
type PrivateEndpointPropertiesResponse struct {
	// The date when this private endpoint was created.
	CreatedDate string `pulumi:"createdDate"`
	// A list of connections to the remote resource. Immutable after it is set.
	ManualPrivateLinkServiceConnections []PrivateLinkServiceConnectionResponse `pulumi:"manualPrivateLinkServiceConnections"`
}

// The properties associated with a private endpoint.
type PrivateEndpointPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointPropertiesResponse)(nil)).Elem()
}

func (o PrivateEndpointPropertiesResponseOutput) ToPrivateEndpointPropertiesResponseOutput() PrivateEndpointPropertiesResponseOutput {
	return o
}

func (o PrivateEndpointPropertiesResponseOutput) ToPrivateEndpointPropertiesResponseOutputWithContext(ctx context.Context) PrivateEndpointPropertiesResponseOutput {
	return o
}

func (o PrivateEndpointPropertiesResponseOutput) ToPrivateEndpointPropertiesResponsePtrOutput() PrivateEndpointPropertiesResponsePtrOutput {
	return o.ToPrivateEndpointPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o PrivateEndpointPropertiesResponseOutput) ToPrivateEndpointPropertiesResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointPropertiesResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointPropertiesResponse) *PrivateEndpointPropertiesResponse {
		return &v
	}).(PrivateEndpointPropertiesResponsePtrOutput)
}

// The date when this private endpoint was created.
func (o PrivateEndpointPropertiesResponseOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointPropertiesResponse) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// A list of connections to the remote resource. Immutable after it is set.
func (o PrivateEndpointPropertiesResponseOutput) ManualPrivateLinkServiceConnections() PrivateLinkServiceConnectionResponseArrayOutput {
	return o.ApplyT(func(v PrivateEndpointPropertiesResponse) []PrivateLinkServiceConnectionResponse {
		return v.ManualPrivateLinkServiceConnections
	}).(PrivateLinkServiceConnectionResponseArrayOutput)
}

type PrivateEndpointPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointPropertiesResponse)(nil)).Elem()
}

func (o PrivateEndpointPropertiesResponsePtrOutput) ToPrivateEndpointPropertiesResponsePtrOutput() PrivateEndpointPropertiesResponsePtrOutput {
	return o
}

func (o PrivateEndpointPropertiesResponsePtrOutput) ToPrivateEndpointPropertiesResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointPropertiesResponsePtrOutput {
	return o
}

func (o PrivateEndpointPropertiesResponsePtrOutput) Elem() PrivateEndpointPropertiesResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointPropertiesResponse) PrivateEndpointPropertiesResponse { return *v }).(PrivateEndpointPropertiesResponseOutput)
}

// The date when this private endpoint was created.
func (o PrivateEndpointPropertiesResponsePtrOutput) CreatedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedDate
	}).(pulumi.StringPtrOutput)
}

// A list of connections to the remote resource. Immutable after it is set.
func (o PrivateEndpointPropertiesResponsePtrOutput) ManualPrivateLinkServiceConnections() PrivateLinkServiceConnectionResponseArrayOutput {
	return o.ApplyT(func(v *PrivateEndpointPropertiesResponse) []PrivateLinkServiceConnectionResponse {
		if v == nil {
			return nil
		}
		return v.ManualPrivateLinkServiceConnections
	}).(PrivateLinkServiceConnectionResponseArrayOutput)
}

// A collection of read-only information about the state of the connection to the private remote resource.
type PrivateLinkConnectionStateResponse struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the remote resource/service.
	Status string `pulumi:"status"`
}

// A collection of read-only information about the state of the connection to the private remote resource.
type PrivateLinkConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkConnectionStateResponseOutput) ToPrivateLinkConnectionStateResponseOutput() PrivateLinkConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkConnectionStateResponseOutput) ToPrivateLinkConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkConnectionStateResponseOutput) ToPrivateLinkConnectionStateResponsePtrOutput() PrivateLinkConnectionStateResponsePtrOutput {
	return o.ToPrivateLinkConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (o PrivateLinkConnectionStateResponseOutput) ToPrivateLinkConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionStateResponse) *PrivateLinkConnectionStateResponse {
		return &v
	}).(PrivateLinkConnectionStateResponsePtrOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkConnectionStateResponseOutput) ActionsRequired() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkConnectionStateResponse) string { return v.ActionsRequired }).(pulumi.StringOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkConnectionStateResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkConnectionStateResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the remote resource/service.
func (o PrivateLinkConnectionStateResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkConnectionStateResponse) string { return v.Status }).(pulumi.StringOutput)
}

type PrivateLinkConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkConnectionStateResponsePtrOutput) ToPrivateLinkConnectionStateResponsePtrOutput() PrivateLinkConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkConnectionStateResponsePtrOutput) ToPrivateLinkConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkConnectionStateResponsePtrOutput) Elem() PrivateLinkConnectionStateResponseOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionStateResponse) PrivateLinkConnectionStateResponse { return *v }).(PrivateLinkConnectionStateResponseOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkConnectionStateResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the remote resource/service.
func (o PrivateLinkConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// A grouping of information about the connection to the remote resource.
type PrivateLinkServiceConnection struct {
	// The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to. Required on PUT (CreateOrUpdate) requests.
	GroupIds []string `pulumi:"groupIds"`
	// The resource id of the private link service. Required on PUT (CreateOrUpdate) requests.
	PrivateLinkServiceId *string `pulumi:"privateLinkServiceId"`
	// A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
	RequestMessage *string `pulumi:"requestMessage"`
}

// PrivateLinkServiceConnectionInput is an input type that accepts PrivateLinkServiceConnectionArgs and PrivateLinkServiceConnectionOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionInput` via:
//
//          PrivateLinkServiceConnectionArgs{...}
type PrivateLinkServiceConnectionInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionOutput() PrivateLinkServiceConnectionOutput
	ToPrivateLinkServiceConnectionOutputWithContext(context.Context) PrivateLinkServiceConnectionOutput
}

// A grouping of information about the connection to the remote resource.
type PrivateLinkServiceConnectionArgs struct {
	// The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to. Required on PUT (CreateOrUpdate) requests.
	GroupIds pulumi.StringArrayInput `pulumi:"groupIds"`
	// The resource id of the private link service. Required on PUT (CreateOrUpdate) requests.
	PrivateLinkServiceId pulumi.StringPtrInput `pulumi:"privateLinkServiceId"`
	// A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
	RequestMessage pulumi.StringPtrInput `pulumi:"requestMessage"`
}

func (PrivateLinkServiceConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnection)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionArgs) ToPrivateLinkServiceConnectionOutput() PrivateLinkServiceConnectionOutput {
	return i.ToPrivateLinkServiceConnectionOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionArgs) ToPrivateLinkServiceConnectionOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionOutput)
}

// PrivateLinkServiceConnectionArrayInput is an input type that accepts PrivateLinkServiceConnectionArray and PrivateLinkServiceConnectionArrayOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionArrayInput` via:
//
//          PrivateLinkServiceConnectionArray{ PrivateLinkServiceConnectionArgs{...} }
type PrivateLinkServiceConnectionArrayInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionArrayOutput() PrivateLinkServiceConnectionArrayOutput
	ToPrivateLinkServiceConnectionArrayOutputWithContext(context.Context) PrivateLinkServiceConnectionArrayOutput
}

type PrivateLinkServiceConnectionArray []PrivateLinkServiceConnectionInput

func (PrivateLinkServiceConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceConnection)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionArray) ToPrivateLinkServiceConnectionArrayOutput() PrivateLinkServiceConnectionArrayOutput {
	return i.ToPrivateLinkServiceConnectionArrayOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionArray) ToPrivateLinkServiceConnectionArrayOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionArrayOutput)
}

// A grouping of information about the connection to the remote resource.
type PrivateLinkServiceConnectionResponse struct {
	// The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to. Required on PUT (CreateOrUpdate) requests.
	GroupIds []string `pulumi:"groupIds"`
	// A collection of read-only information about the state of the connection to the private remote resource.
	PrivateLinkServiceConnectionState *PrivateLinkConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The resource id of the private link service. Required on PUT (CreateOrUpdate) requests.
	PrivateLinkServiceId *string `pulumi:"privateLinkServiceId"`
	// A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
	RequestMessage *string `pulumi:"requestMessage"`
}

// A grouping of information about the connection to the remote resource.
type PrivateLinkServiceConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionResponseOutput) ToPrivateLinkServiceConnectionResponseOutput() PrivateLinkServiceConnectionResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionResponseOutput) ToPrivateLinkServiceConnectionResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionResponseOutput {
	return o
}

// The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to. Required on PUT (CreateOrUpdate) requests.
func (o PrivateLinkServiceConnectionResponseOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// A collection of read-only information about the state of the connection to the private remote resource.
func (o PrivateLinkServiceConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *PrivateLinkConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkConnectionStateResponsePtrOutput)
}

// The resource id of the private link service. Required on PUT (CreateOrUpdate) requests.
func (o PrivateLinkServiceConnectionResponseOutput) PrivateLinkServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *string { return v.PrivateLinkServiceId }).(pulumi.StringPtrOutput)
}

// A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
func (o PrivateLinkServiceConnectionResponseOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceConnectionResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionResponseArrayOutput) ToPrivateLinkServiceConnectionResponseArrayOutput() PrivateLinkServiceConnectionResponseArrayOutput {
	return o
}

func (o PrivateLinkServiceConnectionResponseArrayOutput) ToPrivateLinkServiceConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionResponseArrayOutput {
	return o
}

func (o PrivateLinkServiceConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateLinkServiceConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkServiceConnectionResponse {
		return vs[0].([]PrivateLinkServiceConnectionResponse)[vs[1].(int)]
	}).(PrivateLinkServiceConnectionResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ClusterJobResponseOutput{})
	pulumi.RegisterOutputType(ClusterJobResponseArrayOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ClusterSkuOutput{})
	pulumi.RegisterOutputType(ClusterSkuPtrOutput{})
	pulumi.RegisterOutputType(ClusterSkuResponseOutput{})
	pulumi.RegisterOutputType(ClusterSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointPropertiesOutput{})
	pulumi.RegisterOutputType(PrivateEndpointPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionResponseArrayOutput{})
}
