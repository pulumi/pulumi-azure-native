// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package streamanalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Condition applicable to the resource, or to the job overall, that warrant customer attention.
type DiagnosticCondition struct {
}

// DiagnosticConditionInput is an input type that accepts DiagnosticConditionArgs and DiagnosticConditionOutput values.
// You can construct a concrete instance of `DiagnosticConditionInput` via:
//
//          DiagnosticConditionArgs{...}
type DiagnosticConditionInput interface {
	pulumi.Input

	ToDiagnosticConditionOutput() DiagnosticConditionOutput
	ToDiagnosticConditionOutputWithContext(context.Context) DiagnosticConditionOutput
}

// Condition applicable to the resource, or to the job overall, that warrant customer attention.
type DiagnosticConditionArgs struct {
}

func (DiagnosticConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticCondition)(nil)).Elem()
}

func (i DiagnosticConditionArgs) ToDiagnosticConditionOutput() DiagnosticConditionOutput {
	return i.ToDiagnosticConditionOutputWithContext(context.Background())
}

func (i DiagnosticConditionArgs) ToDiagnosticConditionOutputWithContext(ctx context.Context) DiagnosticConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticConditionOutput)
}

// Condition applicable to the resource, or to the job overall, that warrant customer attention.
type DiagnosticConditionOutput struct{ *pulumi.OutputState }

func (DiagnosticConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticCondition)(nil)).Elem()
}

func (o DiagnosticConditionOutput) ToDiagnosticConditionOutput() DiagnosticConditionOutput {
	return o
}

func (o DiagnosticConditionOutput) ToDiagnosticConditionOutputWithContext(ctx context.Context) DiagnosticConditionOutput {
	return o
}

// Condition applicable to the resource, or to the job overall, that warrant customer attention.
type DiagnosticConditionResponse struct {
	// The opaque diagnostic code.
	Code string `pulumi:"code"`
	// The human-readable message describing the condition in detail. Localized in the Accept-Language of the client request.
	Message string `pulumi:"message"`
	// The UTC timestamp of when the condition started. Customers should be able to find a corresponding event in the ops log around this time.
	Since string `pulumi:"since"`
}

// DiagnosticConditionResponseInput is an input type that accepts DiagnosticConditionResponseArgs and DiagnosticConditionResponseOutput values.
// You can construct a concrete instance of `DiagnosticConditionResponseInput` via:
//
//          DiagnosticConditionResponseArgs{...}
type DiagnosticConditionResponseInput interface {
	pulumi.Input

	ToDiagnosticConditionResponseOutput() DiagnosticConditionResponseOutput
	ToDiagnosticConditionResponseOutputWithContext(context.Context) DiagnosticConditionResponseOutput
}

// Condition applicable to the resource, or to the job overall, that warrant customer attention.
type DiagnosticConditionResponseArgs struct {
	// The opaque diagnostic code.
	Code pulumi.StringInput `pulumi:"code"`
	// The human-readable message describing the condition in detail. Localized in the Accept-Language of the client request.
	Message pulumi.StringInput `pulumi:"message"`
	// The UTC timestamp of when the condition started. Customers should be able to find a corresponding event in the ops log around this time.
	Since pulumi.StringInput `pulumi:"since"`
}

func (DiagnosticConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticConditionResponse)(nil)).Elem()
}

func (i DiagnosticConditionResponseArgs) ToDiagnosticConditionResponseOutput() DiagnosticConditionResponseOutput {
	return i.ToDiagnosticConditionResponseOutputWithContext(context.Background())
}

func (i DiagnosticConditionResponseArgs) ToDiagnosticConditionResponseOutputWithContext(ctx context.Context) DiagnosticConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticConditionResponseOutput)
}

// DiagnosticConditionResponseArrayInput is an input type that accepts DiagnosticConditionResponseArray and DiagnosticConditionResponseArrayOutput values.
// You can construct a concrete instance of `DiagnosticConditionResponseArrayInput` via:
//
//          DiagnosticConditionResponseArray{ DiagnosticConditionResponseArgs{...} }
type DiagnosticConditionResponseArrayInput interface {
	pulumi.Input

	ToDiagnosticConditionResponseArrayOutput() DiagnosticConditionResponseArrayOutput
	ToDiagnosticConditionResponseArrayOutputWithContext(context.Context) DiagnosticConditionResponseArrayOutput
}

type DiagnosticConditionResponseArray []DiagnosticConditionResponseInput

func (DiagnosticConditionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiagnosticConditionResponse)(nil)).Elem()
}

func (i DiagnosticConditionResponseArray) ToDiagnosticConditionResponseArrayOutput() DiagnosticConditionResponseArrayOutput {
	return i.ToDiagnosticConditionResponseArrayOutputWithContext(context.Background())
}

func (i DiagnosticConditionResponseArray) ToDiagnosticConditionResponseArrayOutputWithContext(ctx context.Context) DiagnosticConditionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticConditionResponseArrayOutput)
}

// Condition applicable to the resource, or to the job overall, that warrant customer attention.
type DiagnosticConditionResponseOutput struct{ *pulumi.OutputState }

func (DiagnosticConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticConditionResponse)(nil)).Elem()
}

func (o DiagnosticConditionResponseOutput) ToDiagnosticConditionResponseOutput() DiagnosticConditionResponseOutput {
	return o
}

func (o DiagnosticConditionResponseOutput) ToDiagnosticConditionResponseOutputWithContext(ctx context.Context) DiagnosticConditionResponseOutput {
	return o
}

// The opaque diagnostic code.
func (o DiagnosticConditionResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticConditionResponse) string { return v.Code }).(pulumi.StringOutput)
}

// The human-readable message describing the condition in detail. Localized in the Accept-Language of the client request.
func (o DiagnosticConditionResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticConditionResponse) string { return v.Message }).(pulumi.StringOutput)
}

// The UTC timestamp of when the condition started. Customers should be able to find a corresponding event in the ops log around this time.
func (o DiagnosticConditionResponseOutput) Since() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticConditionResponse) string { return v.Since }).(pulumi.StringOutput)
}

type DiagnosticConditionResponseArrayOutput struct{ *pulumi.OutputState }

func (DiagnosticConditionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiagnosticConditionResponse)(nil)).Elem()
}

func (o DiagnosticConditionResponseArrayOutput) ToDiagnosticConditionResponseArrayOutput() DiagnosticConditionResponseArrayOutput {
	return o
}

func (o DiagnosticConditionResponseArrayOutput) ToDiagnosticConditionResponseArrayOutputWithContext(ctx context.Context) DiagnosticConditionResponseArrayOutput {
	return o
}

func (o DiagnosticConditionResponseArrayOutput) Index(i pulumi.IntInput) DiagnosticConditionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DiagnosticConditionResponse {
		return vs[0].([]DiagnosticConditionResponse)[vs[1].(int)]
	}).(DiagnosticConditionResponseOutput)
}

// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
type Diagnostics struct {
}

// DiagnosticsInput is an input type that accepts DiagnosticsArgs and DiagnosticsOutput values.
// You can construct a concrete instance of `DiagnosticsInput` via:
//
//          DiagnosticsArgs{...}
type DiagnosticsInput interface {
	pulumi.Input

	ToDiagnosticsOutput() DiagnosticsOutput
	ToDiagnosticsOutputWithContext(context.Context) DiagnosticsOutput
}

// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
type DiagnosticsArgs struct {
}

func (DiagnosticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Diagnostics)(nil)).Elem()
}

func (i DiagnosticsArgs) ToDiagnosticsOutput() DiagnosticsOutput {
	return i.ToDiagnosticsOutputWithContext(context.Background())
}

func (i DiagnosticsArgs) ToDiagnosticsOutputWithContext(ctx context.Context) DiagnosticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsOutput)
}

// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
type DiagnosticsOutput struct{ *pulumi.OutputState }

func (DiagnosticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Diagnostics)(nil)).Elem()
}

func (o DiagnosticsOutput) ToDiagnosticsOutput() DiagnosticsOutput {
	return o
}

func (o DiagnosticsOutput) ToDiagnosticsOutputWithContext(ctx context.Context) DiagnosticsOutput {
	return o
}

// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
type DiagnosticsResponse struct {
	// A collection of zero or more conditions applicable to the resource, or to the job overall, that warrant customer attention.
	Conditions []DiagnosticConditionResponse `pulumi:"conditions"`
}

// DiagnosticsResponseInput is an input type that accepts DiagnosticsResponseArgs and DiagnosticsResponseOutput values.
// You can construct a concrete instance of `DiagnosticsResponseInput` via:
//
//          DiagnosticsResponseArgs{...}
type DiagnosticsResponseInput interface {
	pulumi.Input

	ToDiagnosticsResponseOutput() DiagnosticsResponseOutput
	ToDiagnosticsResponseOutputWithContext(context.Context) DiagnosticsResponseOutput
}

// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
type DiagnosticsResponseArgs struct {
	// A collection of zero or more conditions applicable to the resource, or to the job overall, that warrant customer attention.
	Conditions DiagnosticConditionResponseArrayInput `pulumi:"conditions"`
}

func (DiagnosticsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticsResponse)(nil)).Elem()
}

func (i DiagnosticsResponseArgs) ToDiagnosticsResponseOutput() DiagnosticsResponseOutput {
	return i.ToDiagnosticsResponseOutputWithContext(context.Background())
}

func (i DiagnosticsResponseArgs) ToDiagnosticsResponseOutputWithContext(ctx context.Context) DiagnosticsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsResponseOutput)
}

func (i DiagnosticsResponseArgs) ToDiagnosticsResponsePtrOutput() DiagnosticsResponsePtrOutput {
	return i.ToDiagnosticsResponsePtrOutputWithContext(context.Background())
}

func (i DiagnosticsResponseArgs) ToDiagnosticsResponsePtrOutputWithContext(ctx context.Context) DiagnosticsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsResponseOutput).ToDiagnosticsResponsePtrOutputWithContext(ctx)
}

// DiagnosticsResponsePtrInput is an input type that accepts DiagnosticsResponseArgs, DiagnosticsResponsePtr and DiagnosticsResponsePtrOutput values.
// You can construct a concrete instance of `DiagnosticsResponsePtrInput` via:
//
//          DiagnosticsResponseArgs{...}
//
//  or:
//
//          nil
type DiagnosticsResponsePtrInput interface {
	pulumi.Input

	ToDiagnosticsResponsePtrOutput() DiagnosticsResponsePtrOutput
	ToDiagnosticsResponsePtrOutputWithContext(context.Context) DiagnosticsResponsePtrOutput
}

type diagnosticsResponsePtrType DiagnosticsResponseArgs

func DiagnosticsResponsePtr(v *DiagnosticsResponseArgs) DiagnosticsResponsePtrInput {
	return (*diagnosticsResponsePtrType)(v)
}

func (*diagnosticsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticsResponse)(nil)).Elem()
}

func (i *diagnosticsResponsePtrType) ToDiagnosticsResponsePtrOutput() DiagnosticsResponsePtrOutput {
	return i.ToDiagnosticsResponsePtrOutputWithContext(context.Background())
}

func (i *diagnosticsResponsePtrType) ToDiagnosticsResponsePtrOutputWithContext(ctx context.Context) DiagnosticsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsResponsePtrOutput)
}

// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
type DiagnosticsResponseOutput struct{ *pulumi.OutputState }

func (DiagnosticsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticsResponse)(nil)).Elem()
}

func (o DiagnosticsResponseOutput) ToDiagnosticsResponseOutput() DiagnosticsResponseOutput {
	return o
}

func (o DiagnosticsResponseOutput) ToDiagnosticsResponseOutputWithContext(ctx context.Context) DiagnosticsResponseOutput {
	return o
}

func (o DiagnosticsResponseOutput) ToDiagnosticsResponsePtrOutput() DiagnosticsResponsePtrOutput {
	return o.ToDiagnosticsResponsePtrOutputWithContext(context.Background())
}

func (o DiagnosticsResponseOutput) ToDiagnosticsResponsePtrOutputWithContext(ctx context.Context) DiagnosticsResponsePtrOutput {
	return o.ApplyT(func(v DiagnosticsResponse) *DiagnosticsResponse {
		return &v
	}).(DiagnosticsResponsePtrOutput)
}

// A collection of zero or more conditions applicable to the resource, or to the job overall, that warrant customer attention.
func (o DiagnosticsResponseOutput) Conditions() DiagnosticConditionResponseArrayOutput {
	return o.ApplyT(func(v DiagnosticsResponse) []DiagnosticConditionResponse { return v.Conditions }).(DiagnosticConditionResponseArrayOutput)
}

type DiagnosticsResponsePtrOutput struct{ *pulumi.OutputState }

func (DiagnosticsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticsResponse)(nil)).Elem()
}

func (o DiagnosticsResponsePtrOutput) ToDiagnosticsResponsePtrOutput() DiagnosticsResponsePtrOutput {
	return o
}

func (o DiagnosticsResponsePtrOutput) ToDiagnosticsResponsePtrOutputWithContext(ctx context.Context) DiagnosticsResponsePtrOutput {
	return o
}

func (o DiagnosticsResponsePtrOutput) Elem() DiagnosticsResponseOutput {
	return o.ApplyT(func(v *DiagnosticsResponse) DiagnosticsResponse { return *v }).(DiagnosticsResponseOutput)
}

// A collection of zero or more conditions applicable to the resource, or to the job overall, that warrant customer attention.
func (o DiagnosticsResponsePtrOutput) Conditions() DiagnosticConditionResponseArrayOutput {
	return o.ApplyT(func(v *DiagnosticsResponse) []DiagnosticConditionResponse {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(DiagnosticConditionResponseArrayOutput)
}

// A function object, containing all information associated with the named function. All functions are contained under a streaming job.
type Function struct {
	// Resource name
	Name *string `pulumi:"name"`
	// The properties that are associated with a function.
	Properties *FunctionProperties `pulumi:"properties"`
}

// FunctionInput is an input type that accepts FunctionArgs and FunctionOutput values.
// You can construct a concrete instance of `FunctionInput` via:
//
//          FunctionArgs{...}
type FunctionInput interface {
	pulumi.Input

	ToFunctionOutput() FunctionOutput
	ToFunctionOutputWithContext(context.Context) FunctionOutput
}

// A function object, containing all information associated with the named function. All functions are contained under a streaming job.
type FunctionArgs struct {
	// Resource name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The properties that are associated with a function.
	Properties FunctionPropertiesPtrInput `pulumi:"properties"`
}

func (FunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Function)(nil)).Elem()
}

func (i FunctionArgs) ToFunctionOutput() FunctionOutput {
	return i.ToFunctionOutputWithContext(context.Background())
}

func (i FunctionArgs) ToFunctionOutputWithContext(ctx context.Context) FunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionOutput)
}

// FunctionArrayInput is an input type that accepts FunctionArray and FunctionArrayOutput values.
// You can construct a concrete instance of `FunctionArrayInput` via:
//
//          FunctionArray{ FunctionArgs{...} }
type FunctionArrayInput interface {
	pulumi.Input

	ToFunctionArrayOutput() FunctionArrayOutput
	ToFunctionArrayOutputWithContext(context.Context) FunctionArrayOutput
}

type FunctionArray []FunctionInput

func (FunctionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Function)(nil)).Elem()
}

func (i FunctionArray) ToFunctionArrayOutput() FunctionArrayOutput {
	return i.ToFunctionArrayOutputWithContext(context.Background())
}

func (i FunctionArray) ToFunctionArrayOutputWithContext(ctx context.Context) FunctionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionArrayOutput)
}

// A function object, containing all information associated with the named function. All functions are contained under a streaming job.
type FunctionOutput struct{ *pulumi.OutputState }

func (FunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Function)(nil)).Elem()
}

func (o FunctionOutput) ToFunctionOutput() FunctionOutput {
	return o
}

func (o FunctionOutput) ToFunctionOutputWithContext(ctx context.Context) FunctionOutput {
	return o
}

// Resource name
func (o FunctionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Function) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The properties that are associated with a function.
func (o FunctionOutput) Properties() FunctionPropertiesPtrOutput {
	return o.ApplyT(func(v Function) *FunctionProperties { return v.Properties }).(FunctionPropertiesPtrOutput)
}

type FunctionArrayOutput struct{ *pulumi.OutputState }

func (FunctionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Function)(nil)).Elem()
}

func (o FunctionArrayOutput) ToFunctionArrayOutput() FunctionArrayOutput {
	return o
}

func (o FunctionArrayOutput) ToFunctionArrayOutputWithContext(ctx context.Context) FunctionArrayOutput {
	return o
}

func (o FunctionArrayOutput) Index(i pulumi.IntInput) FunctionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Function {
		return vs[0].([]Function)[vs[1].(int)]
	}).(FunctionOutput)
}

// The properties that are associated with a function.
type FunctionProperties struct {
	// Indicates the type of function.
	Type *string `pulumi:"type"`
}

// FunctionPropertiesInput is an input type that accepts FunctionPropertiesArgs and FunctionPropertiesOutput values.
// You can construct a concrete instance of `FunctionPropertiesInput` via:
//
//          FunctionPropertiesArgs{...}
type FunctionPropertiesInput interface {
	pulumi.Input

	ToFunctionPropertiesOutput() FunctionPropertiesOutput
	ToFunctionPropertiesOutputWithContext(context.Context) FunctionPropertiesOutput
}

// The properties that are associated with a function.
type FunctionPropertiesArgs struct {
	// Indicates the type of function.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (FunctionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionProperties)(nil)).Elem()
}

func (i FunctionPropertiesArgs) ToFunctionPropertiesOutput() FunctionPropertiesOutput {
	return i.ToFunctionPropertiesOutputWithContext(context.Background())
}

func (i FunctionPropertiesArgs) ToFunctionPropertiesOutputWithContext(ctx context.Context) FunctionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionPropertiesOutput)
}

func (i FunctionPropertiesArgs) ToFunctionPropertiesPtrOutput() FunctionPropertiesPtrOutput {
	return i.ToFunctionPropertiesPtrOutputWithContext(context.Background())
}

func (i FunctionPropertiesArgs) ToFunctionPropertiesPtrOutputWithContext(ctx context.Context) FunctionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionPropertiesOutput).ToFunctionPropertiesPtrOutputWithContext(ctx)
}

// FunctionPropertiesPtrInput is an input type that accepts FunctionPropertiesArgs, FunctionPropertiesPtr and FunctionPropertiesPtrOutput values.
// You can construct a concrete instance of `FunctionPropertiesPtrInput` via:
//
//          FunctionPropertiesArgs{...}
//
//  or:
//
//          nil
type FunctionPropertiesPtrInput interface {
	pulumi.Input

	ToFunctionPropertiesPtrOutput() FunctionPropertiesPtrOutput
	ToFunctionPropertiesPtrOutputWithContext(context.Context) FunctionPropertiesPtrOutput
}

type functionPropertiesPtrType FunctionPropertiesArgs

func FunctionPropertiesPtr(v *FunctionPropertiesArgs) FunctionPropertiesPtrInput {
	return (*functionPropertiesPtrType)(v)
}

func (*functionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionProperties)(nil)).Elem()
}

func (i *functionPropertiesPtrType) ToFunctionPropertiesPtrOutput() FunctionPropertiesPtrOutput {
	return i.ToFunctionPropertiesPtrOutputWithContext(context.Background())
}

func (i *functionPropertiesPtrType) ToFunctionPropertiesPtrOutputWithContext(ctx context.Context) FunctionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionPropertiesPtrOutput)
}

// The properties that are associated with a function.
type FunctionPropertiesOutput struct{ *pulumi.OutputState }

func (FunctionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionProperties)(nil)).Elem()
}

func (o FunctionPropertiesOutput) ToFunctionPropertiesOutput() FunctionPropertiesOutput {
	return o
}

func (o FunctionPropertiesOutput) ToFunctionPropertiesOutputWithContext(ctx context.Context) FunctionPropertiesOutput {
	return o
}

func (o FunctionPropertiesOutput) ToFunctionPropertiesPtrOutput() FunctionPropertiesPtrOutput {
	return o.ToFunctionPropertiesPtrOutputWithContext(context.Background())
}

func (o FunctionPropertiesOutput) ToFunctionPropertiesPtrOutputWithContext(ctx context.Context) FunctionPropertiesPtrOutput {
	return o.ApplyT(func(v FunctionProperties) *FunctionProperties {
		return &v
	}).(FunctionPropertiesPtrOutput)
}

// Indicates the type of function.
func (o FunctionPropertiesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionProperties) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FunctionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FunctionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionProperties)(nil)).Elem()
}

func (o FunctionPropertiesPtrOutput) ToFunctionPropertiesPtrOutput() FunctionPropertiesPtrOutput {
	return o
}

func (o FunctionPropertiesPtrOutput) ToFunctionPropertiesPtrOutputWithContext(ctx context.Context) FunctionPropertiesPtrOutput {
	return o
}

func (o FunctionPropertiesPtrOutput) Elem() FunctionPropertiesOutput {
	return o.ApplyT(func(v *FunctionProperties) FunctionProperties { return *v }).(FunctionPropertiesOutput)
}

// Indicates the type of function.
func (o FunctionPropertiesPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionProperties) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The properties that are associated with a function.
type FunctionPropertiesResponse struct {
	// The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
	Etag string `pulumi:"etag"`
	// Indicates the type of function.
	Type *string `pulumi:"type"`
}

// FunctionPropertiesResponseInput is an input type that accepts FunctionPropertiesResponseArgs and FunctionPropertiesResponseOutput values.
// You can construct a concrete instance of `FunctionPropertiesResponseInput` via:
//
//          FunctionPropertiesResponseArgs{...}
type FunctionPropertiesResponseInput interface {
	pulumi.Input

	ToFunctionPropertiesResponseOutput() FunctionPropertiesResponseOutput
	ToFunctionPropertiesResponseOutputWithContext(context.Context) FunctionPropertiesResponseOutput
}

// The properties that are associated with a function.
type FunctionPropertiesResponseArgs struct {
	// The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Indicates the type of function.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (FunctionPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionPropertiesResponse)(nil)).Elem()
}

func (i FunctionPropertiesResponseArgs) ToFunctionPropertiesResponseOutput() FunctionPropertiesResponseOutput {
	return i.ToFunctionPropertiesResponseOutputWithContext(context.Background())
}

func (i FunctionPropertiesResponseArgs) ToFunctionPropertiesResponseOutputWithContext(ctx context.Context) FunctionPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionPropertiesResponseOutput)
}

func (i FunctionPropertiesResponseArgs) ToFunctionPropertiesResponsePtrOutput() FunctionPropertiesResponsePtrOutput {
	return i.ToFunctionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i FunctionPropertiesResponseArgs) ToFunctionPropertiesResponsePtrOutputWithContext(ctx context.Context) FunctionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionPropertiesResponseOutput).ToFunctionPropertiesResponsePtrOutputWithContext(ctx)
}

// FunctionPropertiesResponsePtrInput is an input type that accepts FunctionPropertiesResponseArgs, FunctionPropertiesResponsePtr and FunctionPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `FunctionPropertiesResponsePtrInput` via:
//
//          FunctionPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type FunctionPropertiesResponsePtrInput interface {
	pulumi.Input

	ToFunctionPropertiesResponsePtrOutput() FunctionPropertiesResponsePtrOutput
	ToFunctionPropertiesResponsePtrOutputWithContext(context.Context) FunctionPropertiesResponsePtrOutput
}

type functionPropertiesResponsePtrType FunctionPropertiesResponseArgs

func FunctionPropertiesResponsePtr(v *FunctionPropertiesResponseArgs) FunctionPropertiesResponsePtrInput {
	return (*functionPropertiesResponsePtrType)(v)
}

func (*functionPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionPropertiesResponse)(nil)).Elem()
}

func (i *functionPropertiesResponsePtrType) ToFunctionPropertiesResponsePtrOutput() FunctionPropertiesResponsePtrOutput {
	return i.ToFunctionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *functionPropertiesResponsePtrType) ToFunctionPropertiesResponsePtrOutputWithContext(ctx context.Context) FunctionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionPropertiesResponsePtrOutput)
}

// The properties that are associated with a function.
type FunctionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (FunctionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionPropertiesResponse)(nil)).Elem()
}

func (o FunctionPropertiesResponseOutput) ToFunctionPropertiesResponseOutput() FunctionPropertiesResponseOutput {
	return o
}

func (o FunctionPropertiesResponseOutput) ToFunctionPropertiesResponseOutputWithContext(ctx context.Context) FunctionPropertiesResponseOutput {
	return o
}

func (o FunctionPropertiesResponseOutput) ToFunctionPropertiesResponsePtrOutput() FunctionPropertiesResponsePtrOutput {
	return o.ToFunctionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o FunctionPropertiesResponseOutput) ToFunctionPropertiesResponsePtrOutputWithContext(ctx context.Context) FunctionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v FunctionPropertiesResponse) *FunctionPropertiesResponse {
		return &v
	}).(FunctionPropertiesResponsePtrOutput)
}

// The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
func (o FunctionPropertiesResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionPropertiesResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Indicates the type of function.
func (o FunctionPropertiesResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionPropertiesResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FunctionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (FunctionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionPropertiesResponse)(nil)).Elem()
}

func (o FunctionPropertiesResponsePtrOutput) ToFunctionPropertiesResponsePtrOutput() FunctionPropertiesResponsePtrOutput {
	return o
}

func (o FunctionPropertiesResponsePtrOutput) ToFunctionPropertiesResponsePtrOutputWithContext(ctx context.Context) FunctionPropertiesResponsePtrOutput {
	return o
}

func (o FunctionPropertiesResponsePtrOutput) Elem() FunctionPropertiesResponseOutput {
	return o.ApplyT(func(v *FunctionPropertiesResponse) FunctionPropertiesResponse { return *v }).(FunctionPropertiesResponseOutput)
}

// The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
func (o FunctionPropertiesResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Indicates the type of function.
func (o FunctionPropertiesResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// A function object, containing all information associated with the named function. All functions are contained under a streaming job.
type FunctionResponse struct {
	// Resource Id
	Id string `pulumi:"id"`
	// Resource name
	Name *string `pulumi:"name"`
	// The properties that are associated with a function.
	Properties *FunctionPropertiesResponse `pulumi:"properties"`
	// Resource type
	Type string `pulumi:"type"`
}

// FunctionResponseInput is an input type that accepts FunctionResponseArgs and FunctionResponseOutput values.
// You can construct a concrete instance of `FunctionResponseInput` via:
//
//          FunctionResponseArgs{...}
type FunctionResponseInput interface {
	pulumi.Input

	ToFunctionResponseOutput() FunctionResponseOutput
	ToFunctionResponseOutputWithContext(context.Context) FunctionResponseOutput
}

// A function object, containing all information associated with the named function. All functions are contained under a streaming job.
type FunctionResponseArgs struct {
	// Resource Id
	Id pulumi.StringInput `pulumi:"id"`
	// Resource name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The properties that are associated with a function.
	Properties FunctionPropertiesResponsePtrInput `pulumi:"properties"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (FunctionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionResponse)(nil)).Elem()
}

func (i FunctionResponseArgs) ToFunctionResponseOutput() FunctionResponseOutput {
	return i.ToFunctionResponseOutputWithContext(context.Background())
}

func (i FunctionResponseArgs) ToFunctionResponseOutputWithContext(ctx context.Context) FunctionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionResponseOutput)
}

// FunctionResponseArrayInput is an input type that accepts FunctionResponseArray and FunctionResponseArrayOutput values.
// You can construct a concrete instance of `FunctionResponseArrayInput` via:
//
//          FunctionResponseArray{ FunctionResponseArgs{...} }
type FunctionResponseArrayInput interface {
	pulumi.Input

	ToFunctionResponseArrayOutput() FunctionResponseArrayOutput
	ToFunctionResponseArrayOutputWithContext(context.Context) FunctionResponseArrayOutput
}

type FunctionResponseArray []FunctionResponseInput

func (FunctionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionResponse)(nil)).Elem()
}

func (i FunctionResponseArray) ToFunctionResponseArrayOutput() FunctionResponseArrayOutput {
	return i.ToFunctionResponseArrayOutputWithContext(context.Background())
}

func (i FunctionResponseArray) ToFunctionResponseArrayOutputWithContext(ctx context.Context) FunctionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionResponseArrayOutput)
}

// A function object, containing all information associated with the named function. All functions are contained under a streaming job.
type FunctionResponseOutput struct{ *pulumi.OutputState }

func (FunctionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionResponse)(nil)).Elem()
}

func (o FunctionResponseOutput) ToFunctionResponseOutput() FunctionResponseOutput {
	return o
}

func (o FunctionResponseOutput) ToFunctionResponseOutputWithContext(ctx context.Context) FunctionResponseOutput {
	return o
}

// Resource Id
func (o FunctionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name
func (o FunctionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The properties that are associated with a function.
func (o FunctionResponseOutput) Properties() FunctionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v FunctionResponse) *FunctionPropertiesResponse { return v.Properties }).(FunctionPropertiesResponsePtrOutput)
}

// Resource type
func (o FunctionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type FunctionResponseArrayOutput struct{ *pulumi.OutputState }

func (FunctionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionResponse)(nil)).Elem()
}

func (o FunctionResponseArrayOutput) ToFunctionResponseArrayOutput() FunctionResponseArrayOutput {
	return o
}

func (o FunctionResponseArrayOutput) ToFunctionResponseArrayOutputWithContext(ctx context.Context) FunctionResponseArrayOutput {
	return o
}

func (o FunctionResponseArrayOutput) Index(i pulumi.IntInput) FunctionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionResponse {
		return vs[0].([]FunctionResponse)[vs[1].(int)]
	}).(FunctionResponseOutput)
}

// An input object, containing all information associated with the named input. All inputs are contained under a streaming job.
type Input struct {
	// Resource name
	Name *string `pulumi:"name"`
	// The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
	Properties *InputProperties `pulumi:"properties"`
}

// InputInput is an input type that accepts InputArgs and InputOutput values.
// You can construct a concrete instance of `InputInput` via:
//
//          InputArgs{...}
type InputInput interface {
	pulumi.Input

	ToInputOutput() InputOutput
	ToInputOutputWithContext(context.Context) InputOutput
}

// An input object, containing all information associated with the named input. All inputs are contained under a streaming job.
type InputArgs struct {
	// Resource name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
	Properties InputPropertiesPtrInput `pulumi:"properties"`
}

func (InputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Input)(nil)).Elem()
}

func (i InputArgs) ToInputOutput() InputOutput {
	return i.ToInputOutputWithContext(context.Background())
}

func (i InputArgs) ToInputOutputWithContext(ctx context.Context) InputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputOutput)
}

// InputArrayInput is an input type that accepts InputArray and InputArrayOutput values.
// You can construct a concrete instance of `InputArrayInput` via:
//
//          InputArray{ InputArgs{...} }
type InputArrayInput interface {
	pulumi.Input

	ToInputArrayOutput() InputArrayOutput
	ToInputArrayOutputWithContext(context.Context) InputArrayOutput
}

type InputArray []InputInput

func (InputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Input)(nil)).Elem()
}

func (i InputArray) ToInputArrayOutput() InputArrayOutput {
	return i.ToInputArrayOutputWithContext(context.Background())
}

func (i InputArray) ToInputArrayOutputWithContext(ctx context.Context) InputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputArrayOutput)
}

// An input object, containing all information associated with the named input. All inputs are contained under a streaming job.
type InputOutput struct{ *pulumi.OutputState }

func (InputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Input)(nil)).Elem()
}

func (o InputOutput) ToInputOutput() InputOutput {
	return o
}

func (o InputOutput) ToInputOutputWithContext(ctx context.Context) InputOutput {
	return o
}

// Resource name
func (o InputOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Input) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
func (o InputOutput) Properties() InputPropertiesPtrOutput {
	return o.ApplyT(func(v Input) *InputProperties { return v.Properties }).(InputPropertiesPtrOutput)
}

type InputArrayOutput struct{ *pulumi.OutputState }

func (InputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Input)(nil)).Elem()
}

func (o InputArrayOutput) ToInputArrayOutput() InputArrayOutput {
	return o
}

func (o InputArrayOutput) ToInputArrayOutputWithContext(ctx context.Context) InputArrayOutput {
	return o
}

func (o InputArrayOutput) Index(i pulumi.IntInput) InputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Input {
		return vs[0].([]Input)[vs[1].(int)]
	}).(InputOutput)
}

// The properties that are associated with an input.
type InputProperties struct {
	// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
	Serialization *Serialization `pulumi:"serialization"`
	// Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
	Type *string `pulumi:"type"`
}

// InputPropertiesInput is an input type that accepts InputPropertiesArgs and InputPropertiesOutput values.
// You can construct a concrete instance of `InputPropertiesInput` via:
//
//          InputPropertiesArgs{...}
type InputPropertiesInput interface {
	pulumi.Input

	ToInputPropertiesOutput() InputPropertiesOutput
	ToInputPropertiesOutputWithContext(context.Context) InputPropertiesOutput
}

// The properties that are associated with an input.
type InputPropertiesArgs struct {
	// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
	Serialization SerializationPtrInput `pulumi:"serialization"`
	// Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (InputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputProperties)(nil)).Elem()
}

func (i InputPropertiesArgs) ToInputPropertiesOutput() InputPropertiesOutput {
	return i.ToInputPropertiesOutputWithContext(context.Background())
}

func (i InputPropertiesArgs) ToInputPropertiesOutputWithContext(ctx context.Context) InputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputPropertiesOutput)
}

func (i InputPropertiesArgs) ToInputPropertiesPtrOutput() InputPropertiesPtrOutput {
	return i.ToInputPropertiesPtrOutputWithContext(context.Background())
}

func (i InputPropertiesArgs) ToInputPropertiesPtrOutputWithContext(ctx context.Context) InputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputPropertiesOutput).ToInputPropertiesPtrOutputWithContext(ctx)
}

// InputPropertiesPtrInput is an input type that accepts InputPropertiesArgs, InputPropertiesPtr and InputPropertiesPtrOutput values.
// You can construct a concrete instance of `InputPropertiesPtrInput` via:
//
//          InputPropertiesArgs{...}
//
//  or:
//
//          nil
type InputPropertiesPtrInput interface {
	pulumi.Input

	ToInputPropertiesPtrOutput() InputPropertiesPtrOutput
	ToInputPropertiesPtrOutputWithContext(context.Context) InputPropertiesPtrOutput
}

type inputPropertiesPtrType InputPropertiesArgs

func InputPropertiesPtr(v *InputPropertiesArgs) InputPropertiesPtrInput {
	return (*inputPropertiesPtrType)(v)
}

func (*inputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InputProperties)(nil)).Elem()
}

func (i *inputPropertiesPtrType) ToInputPropertiesPtrOutput() InputPropertiesPtrOutput {
	return i.ToInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *inputPropertiesPtrType) ToInputPropertiesPtrOutputWithContext(ctx context.Context) InputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputPropertiesPtrOutput)
}

// The properties that are associated with an input.
type InputPropertiesOutput struct{ *pulumi.OutputState }

func (InputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputProperties)(nil)).Elem()
}

func (o InputPropertiesOutput) ToInputPropertiesOutput() InputPropertiesOutput {
	return o
}

func (o InputPropertiesOutput) ToInputPropertiesOutputWithContext(ctx context.Context) InputPropertiesOutput {
	return o
}

func (o InputPropertiesOutput) ToInputPropertiesPtrOutput() InputPropertiesPtrOutput {
	return o.ToInputPropertiesPtrOutputWithContext(context.Background())
}

func (o InputPropertiesOutput) ToInputPropertiesPtrOutputWithContext(ctx context.Context) InputPropertiesPtrOutput {
	return o.ApplyT(func(v InputProperties) *InputProperties {
		return &v
	}).(InputPropertiesPtrOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
func (o InputPropertiesOutput) Serialization() SerializationPtrOutput {
	return o.ApplyT(func(v InputProperties) *Serialization { return v.Serialization }).(SerializationPtrOutput)
}

// Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
func (o InputPropertiesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputProperties) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type InputPropertiesPtrOutput struct{ *pulumi.OutputState }

func (InputPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InputProperties)(nil)).Elem()
}

func (o InputPropertiesPtrOutput) ToInputPropertiesPtrOutput() InputPropertiesPtrOutput {
	return o
}

func (o InputPropertiesPtrOutput) ToInputPropertiesPtrOutputWithContext(ctx context.Context) InputPropertiesPtrOutput {
	return o
}

func (o InputPropertiesPtrOutput) Elem() InputPropertiesOutput {
	return o.ApplyT(func(v *InputProperties) InputProperties { return *v }).(InputPropertiesOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
func (o InputPropertiesPtrOutput) Serialization() SerializationPtrOutput {
	return o.ApplyT(func(v *InputProperties) *Serialization {
		if v == nil {
			return nil
		}
		return v.Serialization
	}).(SerializationPtrOutput)
}

// Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
func (o InputPropertiesPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputProperties) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The properties that are associated with an input.
type InputPropertiesResponse struct {
	// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
	Diagnostics DiagnosticsResponse `pulumi:"diagnostics"`
	// The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
	Etag string `pulumi:"etag"`
	// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
	Serialization *SerializationResponse `pulumi:"serialization"`
	// Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
	Type *string `pulumi:"type"`
}

// InputPropertiesResponseInput is an input type that accepts InputPropertiesResponseArgs and InputPropertiesResponseOutput values.
// You can construct a concrete instance of `InputPropertiesResponseInput` via:
//
//          InputPropertiesResponseArgs{...}
type InputPropertiesResponseInput interface {
	pulumi.Input

	ToInputPropertiesResponseOutput() InputPropertiesResponseOutput
	ToInputPropertiesResponseOutputWithContext(context.Context) InputPropertiesResponseOutput
}

// The properties that are associated with an input.
type InputPropertiesResponseArgs struct {
	// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
	Diagnostics DiagnosticsResponseInput `pulumi:"diagnostics"`
	// The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
	Serialization SerializationResponsePtrInput `pulumi:"serialization"`
	// Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (InputPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputPropertiesResponse)(nil)).Elem()
}

func (i InputPropertiesResponseArgs) ToInputPropertiesResponseOutput() InputPropertiesResponseOutput {
	return i.ToInputPropertiesResponseOutputWithContext(context.Background())
}

func (i InputPropertiesResponseArgs) ToInputPropertiesResponseOutputWithContext(ctx context.Context) InputPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputPropertiesResponseOutput)
}

func (i InputPropertiesResponseArgs) ToInputPropertiesResponsePtrOutput() InputPropertiesResponsePtrOutput {
	return i.ToInputPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i InputPropertiesResponseArgs) ToInputPropertiesResponsePtrOutputWithContext(ctx context.Context) InputPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputPropertiesResponseOutput).ToInputPropertiesResponsePtrOutputWithContext(ctx)
}

// InputPropertiesResponsePtrInput is an input type that accepts InputPropertiesResponseArgs, InputPropertiesResponsePtr and InputPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `InputPropertiesResponsePtrInput` via:
//
//          InputPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type InputPropertiesResponsePtrInput interface {
	pulumi.Input

	ToInputPropertiesResponsePtrOutput() InputPropertiesResponsePtrOutput
	ToInputPropertiesResponsePtrOutputWithContext(context.Context) InputPropertiesResponsePtrOutput
}

type inputPropertiesResponsePtrType InputPropertiesResponseArgs

func InputPropertiesResponsePtr(v *InputPropertiesResponseArgs) InputPropertiesResponsePtrInput {
	return (*inputPropertiesResponsePtrType)(v)
}

func (*inputPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InputPropertiesResponse)(nil)).Elem()
}

func (i *inputPropertiesResponsePtrType) ToInputPropertiesResponsePtrOutput() InputPropertiesResponsePtrOutput {
	return i.ToInputPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *inputPropertiesResponsePtrType) ToInputPropertiesResponsePtrOutputWithContext(ctx context.Context) InputPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputPropertiesResponsePtrOutput)
}

// The properties that are associated with an input.
type InputPropertiesResponseOutput struct{ *pulumi.OutputState }

func (InputPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputPropertiesResponse)(nil)).Elem()
}

func (o InputPropertiesResponseOutput) ToInputPropertiesResponseOutput() InputPropertiesResponseOutput {
	return o
}

func (o InputPropertiesResponseOutput) ToInputPropertiesResponseOutputWithContext(ctx context.Context) InputPropertiesResponseOutput {
	return o
}

func (o InputPropertiesResponseOutput) ToInputPropertiesResponsePtrOutput() InputPropertiesResponsePtrOutput {
	return o.ToInputPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o InputPropertiesResponseOutput) ToInputPropertiesResponsePtrOutputWithContext(ctx context.Context) InputPropertiesResponsePtrOutput {
	return o.ApplyT(func(v InputPropertiesResponse) *InputPropertiesResponse {
		return &v
	}).(InputPropertiesResponsePtrOutput)
}

// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
func (o InputPropertiesResponseOutput) Diagnostics() DiagnosticsResponseOutput {
	return o.ApplyT(func(v InputPropertiesResponse) DiagnosticsResponse { return v.Diagnostics }).(DiagnosticsResponseOutput)
}

// The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
func (o InputPropertiesResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v InputPropertiesResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
func (o InputPropertiesResponseOutput) Serialization() SerializationResponsePtrOutput {
	return o.ApplyT(func(v InputPropertiesResponse) *SerializationResponse { return v.Serialization }).(SerializationResponsePtrOutput)
}

// Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
func (o InputPropertiesResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputPropertiesResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type InputPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (InputPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InputPropertiesResponse)(nil)).Elem()
}

func (o InputPropertiesResponsePtrOutput) ToInputPropertiesResponsePtrOutput() InputPropertiesResponsePtrOutput {
	return o
}

func (o InputPropertiesResponsePtrOutput) ToInputPropertiesResponsePtrOutputWithContext(ctx context.Context) InputPropertiesResponsePtrOutput {
	return o
}

func (o InputPropertiesResponsePtrOutput) Elem() InputPropertiesResponseOutput {
	return o.ApplyT(func(v *InputPropertiesResponse) InputPropertiesResponse { return *v }).(InputPropertiesResponseOutput)
}

// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
func (o InputPropertiesResponsePtrOutput) Diagnostics() DiagnosticsResponsePtrOutput {
	return o.ApplyT(func(v *InputPropertiesResponse) *DiagnosticsResponse {
		if v == nil {
			return nil
		}
		return &v.Diagnostics
	}).(DiagnosticsResponsePtrOutput)
}

// The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
func (o InputPropertiesResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
func (o InputPropertiesResponsePtrOutput) Serialization() SerializationResponsePtrOutput {
	return o.ApplyT(func(v *InputPropertiesResponse) *SerializationResponse {
		if v == nil {
			return nil
		}
		return v.Serialization
	}).(SerializationResponsePtrOutput)
}

// Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
func (o InputPropertiesResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// An input object, containing all information associated with the named input. All inputs are contained under a streaming job.
type InputResponse struct {
	// Resource Id
	Id string `pulumi:"id"`
	// Resource name
	Name *string `pulumi:"name"`
	// The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
	Properties *InputPropertiesResponse `pulumi:"properties"`
	// Resource type
	Type string `pulumi:"type"`
}

// InputResponseInput is an input type that accepts InputResponseArgs and InputResponseOutput values.
// You can construct a concrete instance of `InputResponseInput` via:
//
//          InputResponseArgs{...}
type InputResponseInput interface {
	pulumi.Input

	ToInputResponseOutput() InputResponseOutput
	ToInputResponseOutputWithContext(context.Context) InputResponseOutput
}

// An input object, containing all information associated with the named input. All inputs are contained under a streaming job.
type InputResponseArgs struct {
	// Resource Id
	Id pulumi.StringInput `pulumi:"id"`
	// Resource name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
	Properties InputPropertiesResponsePtrInput `pulumi:"properties"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (InputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputResponse)(nil)).Elem()
}

func (i InputResponseArgs) ToInputResponseOutput() InputResponseOutput {
	return i.ToInputResponseOutputWithContext(context.Background())
}

func (i InputResponseArgs) ToInputResponseOutputWithContext(ctx context.Context) InputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputResponseOutput)
}

// InputResponseArrayInput is an input type that accepts InputResponseArray and InputResponseArrayOutput values.
// You can construct a concrete instance of `InputResponseArrayInput` via:
//
//          InputResponseArray{ InputResponseArgs{...} }
type InputResponseArrayInput interface {
	pulumi.Input

	ToInputResponseArrayOutput() InputResponseArrayOutput
	ToInputResponseArrayOutputWithContext(context.Context) InputResponseArrayOutput
}

type InputResponseArray []InputResponseInput

func (InputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputResponse)(nil)).Elem()
}

func (i InputResponseArray) ToInputResponseArrayOutput() InputResponseArrayOutput {
	return i.ToInputResponseArrayOutputWithContext(context.Background())
}

func (i InputResponseArray) ToInputResponseArrayOutputWithContext(ctx context.Context) InputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputResponseArrayOutput)
}

// An input object, containing all information associated with the named input. All inputs are contained under a streaming job.
type InputResponseOutput struct{ *pulumi.OutputState }

func (InputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputResponse)(nil)).Elem()
}

func (o InputResponseOutput) ToInputResponseOutput() InputResponseOutput {
	return o
}

func (o InputResponseOutput) ToInputResponseOutputWithContext(ctx context.Context) InputResponseOutput {
	return o
}

// Resource Id
func (o InputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v InputResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name
func (o InputResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
func (o InputResponseOutput) Properties() InputPropertiesResponsePtrOutput {
	return o.ApplyT(func(v InputResponse) *InputPropertiesResponse { return v.Properties }).(InputPropertiesResponsePtrOutput)
}

// Resource type
func (o InputResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InputResponse) string { return v.Type }).(pulumi.StringOutput)
}

type InputResponseArrayOutput struct{ *pulumi.OutputState }

func (InputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputResponse)(nil)).Elem()
}

func (o InputResponseArrayOutput) ToInputResponseArrayOutput() InputResponseArrayOutput {
	return o
}

func (o InputResponseArrayOutput) ToInputResponseArrayOutputWithContext(ctx context.Context) InputResponseArrayOutput {
	return o
}

func (o InputResponseArrayOutput) Index(i pulumi.IntInput) InputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InputResponse {
		return vs[0].([]InputResponse)[vs[1].(int)]
	}).(InputResponseOutput)
}

// An output object, containing all information associated with the named output. All outputs are contained under a streaming job.
type Output struct {
	// Resource name
	Name *string `pulumi:"name"`
	// The properties that are associated with an output. Required on PUT (CreateOrReplace) requests.
	Properties *OutputProperties `pulumi:"properties"`
}

// OutputInput is an input type that accepts OutputArgs and OutputOutput values.
// You can construct a concrete instance of `OutputInput` via:
//
//          OutputArgs{...}
type OutputInput interface {
	pulumi.Input

	ToOutputOutput() OutputOutput
	ToOutputOutputWithContext(context.Context) OutputOutput
}

// An output object, containing all information associated with the named output. All outputs are contained under a streaming job.
type OutputArgs struct {
	// Resource name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The properties that are associated with an output. Required on PUT (CreateOrReplace) requests.
	Properties OutputPropertiesPtrInput `pulumi:"properties"`
}

func (OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Output)(nil)).Elem()
}

func (i OutputArgs) ToOutputOutput() OutputOutput {
	return i.ToOutputOutputWithContext(context.Background())
}

func (i OutputArgs) ToOutputOutputWithContext(ctx context.Context) OutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputOutput)
}

// OutputArrayInput is an input type that accepts OutputArray and OutputArrayOutput values.
// You can construct a concrete instance of `OutputArrayInput` via:
//
//          OutputArray{ OutputArgs{...} }
type OutputArrayInput interface {
	pulumi.Input

	ToOutputArrayOutput() OutputArrayOutput
	ToOutputArrayOutputWithContext(context.Context) OutputArrayOutput
}

type OutputArray []OutputInput

func (OutputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Output)(nil)).Elem()
}

func (i OutputArray) ToOutputArrayOutput() OutputArrayOutput {
	return i.ToOutputArrayOutputWithContext(context.Background())
}

func (i OutputArray) ToOutputArrayOutputWithContext(ctx context.Context) OutputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputArrayOutput)
}

// An output object, containing all information associated with the named output. All outputs are contained under a streaming job.
type OutputOutput struct{ *pulumi.OutputState }

func (OutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Output)(nil)).Elem()
}

func (o OutputOutput) ToOutputOutput() OutputOutput {
	return o
}

func (o OutputOutput) ToOutputOutputWithContext(ctx context.Context) OutputOutput {
	return o
}

// Resource name
func (o OutputOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Output) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The properties that are associated with an output. Required on PUT (CreateOrReplace) requests.
func (o OutputOutput) Properties() OutputPropertiesPtrOutput {
	return o.ApplyT(func(v Output) *OutputProperties { return v.Properties }).(OutputPropertiesPtrOutput)
}

type OutputArrayOutput struct{ *pulumi.OutputState }

func (OutputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Output)(nil)).Elem()
}

func (o OutputArrayOutput) ToOutputArrayOutput() OutputArrayOutput {
	return o
}

func (o OutputArrayOutput) ToOutputArrayOutputWithContext(ctx context.Context) OutputArrayOutput {
	return o
}

func (o OutputArrayOutput) Index(i pulumi.IntInput) OutputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Output {
		return vs[0].([]Output)[vs[1].(int)]
	}).(OutputOutput)
}

// Describes the data source that output will be written to.
type OutputDataSource struct {
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type *string `pulumi:"type"`
}

// OutputDataSourceInput is an input type that accepts OutputDataSourceArgs and OutputDataSourceOutput values.
// You can construct a concrete instance of `OutputDataSourceInput` via:
//
//          OutputDataSourceArgs{...}
type OutputDataSourceInput interface {
	pulumi.Input

	ToOutputDataSourceOutput() OutputDataSourceOutput
	ToOutputDataSourceOutputWithContext(context.Context) OutputDataSourceOutput
}

// Describes the data source that output will be written to.
type OutputDataSourceArgs struct {
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (OutputDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputDataSource)(nil)).Elem()
}

func (i OutputDataSourceArgs) ToOutputDataSourceOutput() OutputDataSourceOutput {
	return i.ToOutputDataSourceOutputWithContext(context.Background())
}

func (i OutputDataSourceArgs) ToOutputDataSourceOutputWithContext(ctx context.Context) OutputDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputDataSourceOutput)
}

func (i OutputDataSourceArgs) ToOutputDataSourcePtrOutput() OutputDataSourcePtrOutput {
	return i.ToOutputDataSourcePtrOutputWithContext(context.Background())
}

func (i OutputDataSourceArgs) ToOutputDataSourcePtrOutputWithContext(ctx context.Context) OutputDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputDataSourceOutput).ToOutputDataSourcePtrOutputWithContext(ctx)
}

// OutputDataSourcePtrInput is an input type that accepts OutputDataSourceArgs, OutputDataSourcePtr and OutputDataSourcePtrOutput values.
// You can construct a concrete instance of `OutputDataSourcePtrInput` via:
//
//          OutputDataSourceArgs{...}
//
//  or:
//
//          nil
type OutputDataSourcePtrInput interface {
	pulumi.Input

	ToOutputDataSourcePtrOutput() OutputDataSourcePtrOutput
	ToOutputDataSourcePtrOutputWithContext(context.Context) OutputDataSourcePtrOutput
}

type outputDataSourcePtrType OutputDataSourceArgs

func OutputDataSourcePtr(v *OutputDataSourceArgs) OutputDataSourcePtrInput {
	return (*outputDataSourcePtrType)(v)
}

func (*outputDataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OutputDataSource)(nil)).Elem()
}

func (i *outputDataSourcePtrType) ToOutputDataSourcePtrOutput() OutputDataSourcePtrOutput {
	return i.ToOutputDataSourcePtrOutputWithContext(context.Background())
}

func (i *outputDataSourcePtrType) ToOutputDataSourcePtrOutputWithContext(ctx context.Context) OutputDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputDataSourcePtrOutput)
}

// Describes the data source that output will be written to.
type OutputDataSourceOutput struct{ *pulumi.OutputState }

func (OutputDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputDataSource)(nil)).Elem()
}

func (o OutputDataSourceOutput) ToOutputDataSourceOutput() OutputDataSourceOutput {
	return o
}

func (o OutputDataSourceOutput) ToOutputDataSourceOutputWithContext(ctx context.Context) OutputDataSourceOutput {
	return o
}

func (o OutputDataSourceOutput) ToOutputDataSourcePtrOutput() OutputDataSourcePtrOutput {
	return o.ToOutputDataSourcePtrOutputWithContext(context.Background())
}

func (o OutputDataSourceOutput) ToOutputDataSourcePtrOutputWithContext(ctx context.Context) OutputDataSourcePtrOutput {
	return o.ApplyT(func(v OutputDataSource) *OutputDataSource {
		return &v
	}).(OutputDataSourcePtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o OutputDataSourceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputDataSource) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type OutputDataSourcePtrOutput struct{ *pulumi.OutputState }

func (OutputDataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OutputDataSource)(nil)).Elem()
}

func (o OutputDataSourcePtrOutput) ToOutputDataSourcePtrOutput() OutputDataSourcePtrOutput {
	return o
}

func (o OutputDataSourcePtrOutput) ToOutputDataSourcePtrOutputWithContext(ctx context.Context) OutputDataSourcePtrOutput {
	return o
}

func (o OutputDataSourcePtrOutput) Elem() OutputDataSourceOutput {
	return o.ApplyT(func(v *OutputDataSource) OutputDataSource { return *v }).(OutputDataSourceOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o OutputDataSourcePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutputDataSource) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Describes the data source that output will be written to.
type OutputDataSourceResponse struct {
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type *string `pulumi:"type"`
}

// OutputDataSourceResponseInput is an input type that accepts OutputDataSourceResponseArgs and OutputDataSourceResponseOutput values.
// You can construct a concrete instance of `OutputDataSourceResponseInput` via:
//
//          OutputDataSourceResponseArgs{...}
type OutputDataSourceResponseInput interface {
	pulumi.Input

	ToOutputDataSourceResponseOutput() OutputDataSourceResponseOutput
	ToOutputDataSourceResponseOutputWithContext(context.Context) OutputDataSourceResponseOutput
}

// Describes the data source that output will be written to.
type OutputDataSourceResponseArgs struct {
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (OutputDataSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputDataSourceResponse)(nil)).Elem()
}

func (i OutputDataSourceResponseArgs) ToOutputDataSourceResponseOutput() OutputDataSourceResponseOutput {
	return i.ToOutputDataSourceResponseOutputWithContext(context.Background())
}

func (i OutputDataSourceResponseArgs) ToOutputDataSourceResponseOutputWithContext(ctx context.Context) OutputDataSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputDataSourceResponseOutput)
}

func (i OutputDataSourceResponseArgs) ToOutputDataSourceResponsePtrOutput() OutputDataSourceResponsePtrOutput {
	return i.ToOutputDataSourceResponsePtrOutputWithContext(context.Background())
}

func (i OutputDataSourceResponseArgs) ToOutputDataSourceResponsePtrOutputWithContext(ctx context.Context) OutputDataSourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputDataSourceResponseOutput).ToOutputDataSourceResponsePtrOutputWithContext(ctx)
}

// OutputDataSourceResponsePtrInput is an input type that accepts OutputDataSourceResponseArgs, OutputDataSourceResponsePtr and OutputDataSourceResponsePtrOutput values.
// You can construct a concrete instance of `OutputDataSourceResponsePtrInput` via:
//
//          OutputDataSourceResponseArgs{...}
//
//  or:
//
//          nil
type OutputDataSourceResponsePtrInput interface {
	pulumi.Input

	ToOutputDataSourceResponsePtrOutput() OutputDataSourceResponsePtrOutput
	ToOutputDataSourceResponsePtrOutputWithContext(context.Context) OutputDataSourceResponsePtrOutput
}

type outputDataSourceResponsePtrType OutputDataSourceResponseArgs

func OutputDataSourceResponsePtr(v *OutputDataSourceResponseArgs) OutputDataSourceResponsePtrInput {
	return (*outputDataSourceResponsePtrType)(v)
}

func (*outputDataSourceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OutputDataSourceResponse)(nil)).Elem()
}

func (i *outputDataSourceResponsePtrType) ToOutputDataSourceResponsePtrOutput() OutputDataSourceResponsePtrOutput {
	return i.ToOutputDataSourceResponsePtrOutputWithContext(context.Background())
}

func (i *outputDataSourceResponsePtrType) ToOutputDataSourceResponsePtrOutputWithContext(ctx context.Context) OutputDataSourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputDataSourceResponsePtrOutput)
}

// Describes the data source that output will be written to.
type OutputDataSourceResponseOutput struct{ *pulumi.OutputState }

func (OutputDataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputDataSourceResponse)(nil)).Elem()
}

func (o OutputDataSourceResponseOutput) ToOutputDataSourceResponseOutput() OutputDataSourceResponseOutput {
	return o
}

func (o OutputDataSourceResponseOutput) ToOutputDataSourceResponseOutputWithContext(ctx context.Context) OutputDataSourceResponseOutput {
	return o
}

func (o OutputDataSourceResponseOutput) ToOutputDataSourceResponsePtrOutput() OutputDataSourceResponsePtrOutput {
	return o.ToOutputDataSourceResponsePtrOutputWithContext(context.Background())
}

func (o OutputDataSourceResponseOutput) ToOutputDataSourceResponsePtrOutputWithContext(ctx context.Context) OutputDataSourceResponsePtrOutput {
	return o.ApplyT(func(v OutputDataSourceResponse) *OutputDataSourceResponse {
		return &v
	}).(OutputDataSourceResponsePtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o OutputDataSourceResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputDataSourceResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type OutputDataSourceResponsePtrOutput struct{ *pulumi.OutputState }

func (OutputDataSourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OutputDataSourceResponse)(nil)).Elem()
}

func (o OutputDataSourceResponsePtrOutput) ToOutputDataSourceResponsePtrOutput() OutputDataSourceResponsePtrOutput {
	return o
}

func (o OutputDataSourceResponsePtrOutput) ToOutputDataSourceResponsePtrOutputWithContext(ctx context.Context) OutputDataSourceResponsePtrOutput {
	return o
}

func (o OutputDataSourceResponsePtrOutput) Elem() OutputDataSourceResponseOutput {
	return o.ApplyT(func(v *OutputDataSourceResponse) OutputDataSourceResponse { return *v }).(OutputDataSourceResponseOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o OutputDataSourceResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutputDataSourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The properties that are associated with an output.
type OutputProperties struct {
	// Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.
	Datasource *OutputDataSource `pulumi:"datasource"`
	// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
	Serialization *Serialization `pulumi:"serialization"`
}

// OutputPropertiesInput is an input type that accepts OutputPropertiesArgs and OutputPropertiesOutput values.
// You can construct a concrete instance of `OutputPropertiesInput` via:
//
//          OutputPropertiesArgs{...}
type OutputPropertiesInput interface {
	pulumi.Input

	ToOutputPropertiesOutput() OutputPropertiesOutput
	ToOutputPropertiesOutputWithContext(context.Context) OutputPropertiesOutput
}

// The properties that are associated with an output.
type OutputPropertiesArgs struct {
	// Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.
	Datasource OutputDataSourcePtrInput `pulumi:"datasource"`
	// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
	Serialization SerializationPtrInput `pulumi:"serialization"`
}

func (OutputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputProperties)(nil)).Elem()
}

func (i OutputPropertiesArgs) ToOutputPropertiesOutput() OutputPropertiesOutput {
	return i.ToOutputPropertiesOutputWithContext(context.Background())
}

func (i OutputPropertiesArgs) ToOutputPropertiesOutputWithContext(ctx context.Context) OutputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputPropertiesOutput)
}

func (i OutputPropertiesArgs) ToOutputPropertiesPtrOutput() OutputPropertiesPtrOutput {
	return i.ToOutputPropertiesPtrOutputWithContext(context.Background())
}

func (i OutputPropertiesArgs) ToOutputPropertiesPtrOutputWithContext(ctx context.Context) OutputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputPropertiesOutput).ToOutputPropertiesPtrOutputWithContext(ctx)
}

// OutputPropertiesPtrInput is an input type that accepts OutputPropertiesArgs, OutputPropertiesPtr and OutputPropertiesPtrOutput values.
// You can construct a concrete instance of `OutputPropertiesPtrInput` via:
//
//          OutputPropertiesArgs{...}
//
//  or:
//
//          nil
type OutputPropertiesPtrInput interface {
	pulumi.Input

	ToOutputPropertiesPtrOutput() OutputPropertiesPtrOutput
	ToOutputPropertiesPtrOutputWithContext(context.Context) OutputPropertiesPtrOutput
}

type outputPropertiesPtrType OutputPropertiesArgs

func OutputPropertiesPtr(v *OutputPropertiesArgs) OutputPropertiesPtrInput {
	return (*outputPropertiesPtrType)(v)
}

func (*outputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OutputProperties)(nil)).Elem()
}

func (i *outputPropertiesPtrType) ToOutputPropertiesPtrOutput() OutputPropertiesPtrOutput {
	return i.ToOutputPropertiesPtrOutputWithContext(context.Background())
}

func (i *outputPropertiesPtrType) ToOutputPropertiesPtrOutputWithContext(ctx context.Context) OutputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputPropertiesPtrOutput)
}

// The properties that are associated with an output.
type OutputPropertiesOutput struct{ *pulumi.OutputState }

func (OutputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputProperties)(nil)).Elem()
}

func (o OutputPropertiesOutput) ToOutputPropertiesOutput() OutputPropertiesOutput {
	return o
}

func (o OutputPropertiesOutput) ToOutputPropertiesOutputWithContext(ctx context.Context) OutputPropertiesOutput {
	return o
}

func (o OutputPropertiesOutput) ToOutputPropertiesPtrOutput() OutputPropertiesPtrOutput {
	return o.ToOutputPropertiesPtrOutputWithContext(context.Background())
}

func (o OutputPropertiesOutput) ToOutputPropertiesPtrOutputWithContext(ctx context.Context) OutputPropertiesPtrOutput {
	return o.ApplyT(func(v OutputProperties) *OutputProperties {
		return &v
	}).(OutputPropertiesPtrOutput)
}

// Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.
func (o OutputPropertiesOutput) Datasource() OutputDataSourcePtrOutput {
	return o.ApplyT(func(v OutputProperties) *OutputDataSource { return v.Datasource }).(OutputDataSourcePtrOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
func (o OutputPropertiesOutput) Serialization() SerializationPtrOutput {
	return o.ApplyT(func(v OutputProperties) *Serialization { return v.Serialization }).(SerializationPtrOutput)
}

type OutputPropertiesPtrOutput struct{ *pulumi.OutputState }

func (OutputPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OutputProperties)(nil)).Elem()
}

func (o OutputPropertiesPtrOutput) ToOutputPropertiesPtrOutput() OutputPropertiesPtrOutput {
	return o
}

func (o OutputPropertiesPtrOutput) ToOutputPropertiesPtrOutputWithContext(ctx context.Context) OutputPropertiesPtrOutput {
	return o
}

func (o OutputPropertiesPtrOutput) Elem() OutputPropertiesOutput {
	return o.ApplyT(func(v *OutputProperties) OutputProperties { return *v }).(OutputPropertiesOutput)
}

// Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.
func (o OutputPropertiesPtrOutput) Datasource() OutputDataSourcePtrOutput {
	return o.ApplyT(func(v *OutputProperties) *OutputDataSource {
		if v == nil {
			return nil
		}
		return v.Datasource
	}).(OutputDataSourcePtrOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
func (o OutputPropertiesPtrOutput) Serialization() SerializationPtrOutput {
	return o.ApplyT(func(v *OutputProperties) *Serialization {
		if v == nil {
			return nil
		}
		return v.Serialization
	}).(SerializationPtrOutput)
}

// The properties that are associated with an output.
type OutputPropertiesResponse struct {
	// Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.
	Datasource *OutputDataSourceResponse `pulumi:"datasource"`
	// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
	Diagnostics DiagnosticsResponse `pulumi:"diagnostics"`
	// The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
	Etag string `pulumi:"etag"`
	// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
	Serialization *SerializationResponse `pulumi:"serialization"`
}

// OutputPropertiesResponseInput is an input type that accepts OutputPropertiesResponseArgs and OutputPropertiesResponseOutput values.
// You can construct a concrete instance of `OutputPropertiesResponseInput` via:
//
//          OutputPropertiesResponseArgs{...}
type OutputPropertiesResponseInput interface {
	pulumi.Input

	ToOutputPropertiesResponseOutput() OutputPropertiesResponseOutput
	ToOutputPropertiesResponseOutputWithContext(context.Context) OutputPropertiesResponseOutput
}

// The properties that are associated with an output.
type OutputPropertiesResponseArgs struct {
	// Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.
	Datasource OutputDataSourceResponsePtrInput `pulumi:"datasource"`
	// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
	Diagnostics DiagnosticsResponseInput `pulumi:"diagnostics"`
	// The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
	Serialization SerializationResponsePtrInput `pulumi:"serialization"`
}

func (OutputPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputPropertiesResponse)(nil)).Elem()
}

func (i OutputPropertiesResponseArgs) ToOutputPropertiesResponseOutput() OutputPropertiesResponseOutput {
	return i.ToOutputPropertiesResponseOutputWithContext(context.Background())
}

func (i OutputPropertiesResponseArgs) ToOutputPropertiesResponseOutputWithContext(ctx context.Context) OutputPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputPropertiesResponseOutput)
}

func (i OutputPropertiesResponseArgs) ToOutputPropertiesResponsePtrOutput() OutputPropertiesResponsePtrOutput {
	return i.ToOutputPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i OutputPropertiesResponseArgs) ToOutputPropertiesResponsePtrOutputWithContext(ctx context.Context) OutputPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputPropertiesResponseOutput).ToOutputPropertiesResponsePtrOutputWithContext(ctx)
}

// OutputPropertiesResponsePtrInput is an input type that accepts OutputPropertiesResponseArgs, OutputPropertiesResponsePtr and OutputPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `OutputPropertiesResponsePtrInput` via:
//
//          OutputPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type OutputPropertiesResponsePtrInput interface {
	pulumi.Input

	ToOutputPropertiesResponsePtrOutput() OutputPropertiesResponsePtrOutput
	ToOutputPropertiesResponsePtrOutputWithContext(context.Context) OutputPropertiesResponsePtrOutput
}

type outputPropertiesResponsePtrType OutputPropertiesResponseArgs

func OutputPropertiesResponsePtr(v *OutputPropertiesResponseArgs) OutputPropertiesResponsePtrInput {
	return (*outputPropertiesResponsePtrType)(v)
}

func (*outputPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OutputPropertiesResponse)(nil)).Elem()
}

func (i *outputPropertiesResponsePtrType) ToOutputPropertiesResponsePtrOutput() OutputPropertiesResponsePtrOutput {
	return i.ToOutputPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *outputPropertiesResponsePtrType) ToOutputPropertiesResponsePtrOutputWithContext(ctx context.Context) OutputPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputPropertiesResponsePtrOutput)
}

// The properties that are associated with an output.
type OutputPropertiesResponseOutput struct{ *pulumi.OutputState }

func (OutputPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputPropertiesResponse)(nil)).Elem()
}

func (o OutputPropertiesResponseOutput) ToOutputPropertiesResponseOutput() OutputPropertiesResponseOutput {
	return o
}

func (o OutputPropertiesResponseOutput) ToOutputPropertiesResponseOutputWithContext(ctx context.Context) OutputPropertiesResponseOutput {
	return o
}

func (o OutputPropertiesResponseOutput) ToOutputPropertiesResponsePtrOutput() OutputPropertiesResponsePtrOutput {
	return o.ToOutputPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o OutputPropertiesResponseOutput) ToOutputPropertiesResponsePtrOutputWithContext(ctx context.Context) OutputPropertiesResponsePtrOutput {
	return o.ApplyT(func(v OutputPropertiesResponse) *OutputPropertiesResponse {
		return &v
	}).(OutputPropertiesResponsePtrOutput)
}

// Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.
func (o OutputPropertiesResponseOutput) Datasource() OutputDataSourceResponsePtrOutput {
	return o.ApplyT(func(v OutputPropertiesResponse) *OutputDataSourceResponse { return v.Datasource }).(OutputDataSourceResponsePtrOutput)
}

// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
func (o OutputPropertiesResponseOutput) Diagnostics() DiagnosticsResponseOutput {
	return o.ApplyT(func(v OutputPropertiesResponse) DiagnosticsResponse { return v.Diagnostics }).(DiagnosticsResponseOutput)
}

// The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
func (o OutputPropertiesResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v OutputPropertiesResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
func (o OutputPropertiesResponseOutput) Serialization() SerializationResponsePtrOutput {
	return o.ApplyT(func(v OutputPropertiesResponse) *SerializationResponse { return v.Serialization }).(SerializationResponsePtrOutput)
}

type OutputPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (OutputPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OutputPropertiesResponse)(nil)).Elem()
}

func (o OutputPropertiesResponsePtrOutput) ToOutputPropertiesResponsePtrOutput() OutputPropertiesResponsePtrOutput {
	return o
}

func (o OutputPropertiesResponsePtrOutput) ToOutputPropertiesResponsePtrOutputWithContext(ctx context.Context) OutputPropertiesResponsePtrOutput {
	return o
}

func (o OutputPropertiesResponsePtrOutput) Elem() OutputPropertiesResponseOutput {
	return o.ApplyT(func(v *OutputPropertiesResponse) OutputPropertiesResponse { return *v }).(OutputPropertiesResponseOutput)
}

// Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.
func (o OutputPropertiesResponsePtrOutput) Datasource() OutputDataSourceResponsePtrOutput {
	return o.ApplyT(func(v *OutputPropertiesResponse) *OutputDataSourceResponse {
		if v == nil {
			return nil
		}
		return v.Datasource
	}).(OutputDataSourceResponsePtrOutput)
}

// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
func (o OutputPropertiesResponsePtrOutput) Diagnostics() DiagnosticsResponsePtrOutput {
	return o.ApplyT(func(v *OutputPropertiesResponse) *DiagnosticsResponse {
		if v == nil {
			return nil
		}
		return &v.Diagnostics
	}).(DiagnosticsResponsePtrOutput)
}

// The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
func (o OutputPropertiesResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutputPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
func (o OutputPropertiesResponsePtrOutput) Serialization() SerializationResponsePtrOutput {
	return o.ApplyT(func(v *OutputPropertiesResponse) *SerializationResponse {
		if v == nil {
			return nil
		}
		return v.Serialization
	}).(SerializationResponsePtrOutput)
}

// An output object, containing all information associated with the named output. All outputs are contained under a streaming job.
type OutputResponse struct {
	// Resource Id
	Id string `pulumi:"id"`
	// Resource name
	Name *string `pulumi:"name"`
	// The properties that are associated with an output. Required on PUT (CreateOrReplace) requests.
	Properties *OutputPropertiesResponse `pulumi:"properties"`
	// Resource type
	Type string `pulumi:"type"`
}

// OutputResponseInput is an input type that accepts OutputResponseArgs and OutputResponseOutput values.
// You can construct a concrete instance of `OutputResponseInput` via:
//
//          OutputResponseArgs{...}
type OutputResponseInput interface {
	pulumi.Input

	ToOutputResponseOutput() OutputResponseOutput
	ToOutputResponseOutputWithContext(context.Context) OutputResponseOutput
}

// An output object, containing all information associated with the named output. All outputs are contained under a streaming job.
type OutputResponseArgs struct {
	// Resource Id
	Id pulumi.StringInput `pulumi:"id"`
	// Resource name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The properties that are associated with an output. Required on PUT (CreateOrReplace) requests.
	Properties OutputPropertiesResponsePtrInput `pulumi:"properties"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (OutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputResponse)(nil)).Elem()
}

func (i OutputResponseArgs) ToOutputResponseOutput() OutputResponseOutput {
	return i.ToOutputResponseOutputWithContext(context.Background())
}

func (i OutputResponseArgs) ToOutputResponseOutputWithContext(ctx context.Context) OutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputResponseOutput)
}

// OutputResponseArrayInput is an input type that accepts OutputResponseArray and OutputResponseArrayOutput values.
// You can construct a concrete instance of `OutputResponseArrayInput` via:
//
//          OutputResponseArray{ OutputResponseArgs{...} }
type OutputResponseArrayInput interface {
	pulumi.Input

	ToOutputResponseArrayOutput() OutputResponseArrayOutput
	ToOutputResponseArrayOutputWithContext(context.Context) OutputResponseArrayOutput
}

type OutputResponseArray []OutputResponseInput

func (OutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutputResponse)(nil)).Elem()
}

func (i OutputResponseArray) ToOutputResponseArrayOutput() OutputResponseArrayOutput {
	return i.ToOutputResponseArrayOutputWithContext(context.Background())
}

func (i OutputResponseArray) ToOutputResponseArrayOutputWithContext(ctx context.Context) OutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputResponseArrayOutput)
}

// An output object, containing all information associated with the named output. All outputs are contained under a streaming job.
type OutputResponseOutput struct{ *pulumi.OutputState }

func (OutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputResponse)(nil)).Elem()
}

func (o OutputResponseOutput) ToOutputResponseOutput() OutputResponseOutput {
	return o
}

func (o OutputResponseOutput) ToOutputResponseOutputWithContext(ctx context.Context) OutputResponseOutput {
	return o
}

// Resource Id
func (o OutputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v OutputResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name
func (o OutputResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The properties that are associated with an output. Required on PUT (CreateOrReplace) requests.
func (o OutputResponseOutput) Properties() OutputPropertiesResponsePtrOutput {
	return o.ApplyT(func(v OutputResponse) *OutputPropertiesResponse { return v.Properties }).(OutputPropertiesResponsePtrOutput)
}

// Resource type
func (o OutputResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OutputResponse) string { return v.Type }).(pulumi.StringOutput)
}

type OutputResponseArrayOutput struct{ *pulumi.OutputState }

func (OutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutputResponse)(nil)).Elem()
}

func (o OutputResponseArrayOutput) ToOutputResponseArrayOutput() OutputResponseArrayOutput {
	return o
}

func (o OutputResponseArrayOutput) ToOutputResponseArrayOutputWithContext(ctx context.Context) OutputResponseArrayOutput {
	return o
}

func (o OutputResponseArrayOutput) Index(i pulumi.IntInput) OutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OutputResponse {
		return vs[0].([]OutputResponse)[vs[1].(int)]
	}).(OutputResponseOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output.
type Serialization struct {
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type *string `pulumi:"type"`
}

// SerializationInput is an input type that accepts SerializationArgs and SerializationOutput values.
// You can construct a concrete instance of `SerializationInput` via:
//
//          SerializationArgs{...}
type SerializationInput interface {
	pulumi.Input

	ToSerializationOutput() SerializationOutput
	ToSerializationOutputWithContext(context.Context) SerializationOutput
}

// Describes how data from an input is serialized or how data is serialized when written to an output.
type SerializationArgs struct {
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SerializationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Serialization)(nil)).Elem()
}

func (i SerializationArgs) ToSerializationOutput() SerializationOutput {
	return i.ToSerializationOutputWithContext(context.Background())
}

func (i SerializationArgs) ToSerializationOutputWithContext(ctx context.Context) SerializationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SerializationOutput)
}

func (i SerializationArgs) ToSerializationPtrOutput() SerializationPtrOutput {
	return i.ToSerializationPtrOutputWithContext(context.Background())
}

func (i SerializationArgs) ToSerializationPtrOutputWithContext(ctx context.Context) SerializationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SerializationOutput).ToSerializationPtrOutputWithContext(ctx)
}

// SerializationPtrInput is an input type that accepts SerializationArgs, SerializationPtr and SerializationPtrOutput values.
// You can construct a concrete instance of `SerializationPtrInput` via:
//
//          SerializationArgs{...}
//
//  or:
//
//          nil
type SerializationPtrInput interface {
	pulumi.Input

	ToSerializationPtrOutput() SerializationPtrOutput
	ToSerializationPtrOutputWithContext(context.Context) SerializationPtrOutput
}

type serializationPtrType SerializationArgs

func SerializationPtr(v *SerializationArgs) SerializationPtrInput {
	return (*serializationPtrType)(v)
}

func (*serializationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Serialization)(nil)).Elem()
}

func (i *serializationPtrType) ToSerializationPtrOutput() SerializationPtrOutput {
	return i.ToSerializationPtrOutputWithContext(context.Background())
}

func (i *serializationPtrType) ToSerializationPtrOutputWithContext(ctx context.Context) SerializationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SerializationPtrOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output.
type SerializationOutput struct{ *pulumi.OutputState }

func (SerializationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Serialization)(nil)).Elem()
}

func (o SerializationOutput) ToSerializationOutput() SerializationOutput {
	return o
}

func (o SerializationOutput) ToSerializationOutputWithContext(ctx context.Context) SerializationOutput {
	return o
}

func (o SerializationOutput) ToSerializationPtrOutput() SerializationPtrOutput {
	return o.ToSerializationPtrOutputWithContext(context.Background())
}

func (o SerializationOutput) ToSerializationPtrOutputWithContext(ctx context.Context) SerializationPtrOutput {
	return o.ApplyT(func(v Serialization) *Serialization {
		return &v
	}).(SerializationPtrOutput)
}

// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
func (o SerializationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Serialization) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SerializationPtrOutput struct{ *pulumi.OutputState }

func (SerializationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Serialization)(nil)).Elem()
}

func (o SerializationPtrOutput) ToSerializationPtrOutput() SerializationPtrOutput {
	return o
}

func (o SerializationPtrOutput) ToSerializationPtrOutputWithContext(ctx context.Context) SerializationPtrOutput {
	return o
}

func (o SerializationPtrOutput) Elem() SerializationOutput {
	return o.ApplyT(func(v *Serialization) Serialization { return *v }).(SerializationOutput)
}

// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
func (o SerializationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Serialization) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output.
type SerializationResponse struct {
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type *string `pulumi:"type"`
}

// SerializationResponseInput is an input type that accepts SerializationResponseArgs and SerializationResponseOutput values.
// You can construct a concrete instance of `SerializationResponseInput` via:
//
//          SerializationResponseArgs{...}
type SerializationResponseInput interface {
	pulumi.Input

	ToSerializationResponseOutput() SerializationResponseOutput
	ToSerializationResponseOutputWithContext(context.Context) SerializationResponseOutput
}

// Describes how data from an input is serialized or how data is serialized when written to an output.
type SerializationResponseArgs struct {
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SerializationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SerializationResponse)(nil)).Elem()
}

func (i SerializationResponseArgs) ToSerializationResponseOutput() SerializationResponseOutput {
	return i.ToSerializationResponseOutputWithContext(context.Background())
}

func (i SerializationResponseArgs) ToSerializationResponseOutputWithContext(ctx context.Context) SerializationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SerializationResponseOutput)
}

func (i SerializationResponseArgs) ToSerializationResponsePtrOutput() SerializationResponsePtrOutput {
	return i.ToSerializationResponsePtrOutputWithContext(context.Background())
}

func (i SerializationResponseArgs) ToSerializationResponsePtrOutputWithContext(ctx context.Context) SerializationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SerializationResponseOutput).ToSerializationResponsePtrOutputWithContext(ctx)
}

// SerializationResponsePtrInput is an input type that accepts SerializationResponseArgs, SerializationResponsePtr and SerializationResponsePtrOutput values.
// You can construct a concrete instance of `SerializationResponsePtrInput` via:
//
//          SerializationResponseArgs{...}
//
//  or:
//
//          nil
type SerializationResponsePtrInput interface {
	pulumi.Input

	ToSerializationResponsePtrOutput() SerializationResponsePtrOutput
	ToSerializationResponsePtrOutputWithContext(context.Context) SerializationResponsePtrOutput
}

type serializationResponsePtrType SerializationResponseArgs

func SerializationResponsePtr(v *SerializationResponseArgs) SerializationResponsePtrInput {
	return (*serializationResponsePtrType)(v)
}

func (*serializationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SerializationResponse)(nil)).Elem()
}

func (i *serializationResponsePtrType) ToSerializationResponsePtrOutput() SerializationResponsePtrOutput {
	return i.ToSerializationResponsePtrOutputWithContext(context.Background())
}

func (i *serializationResponsePtrType) ToSerializationResponsePtrOutputWithContext(ctx context.Context) SerializationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SerializationResponsePtrOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output.
type SerializationResponseOutput struct{ *pulumi.OutputState }

func (SerializationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SerializationResponse)(nil)).Elem()
}

func (o SerializationResponseOutput) ToSerializationResponseOutput() SerializationResponseOutput {
	return o
}

func (o SerializationResponseOutput) ToSerializationResponseOutputWithContext(ctx context.Context) SerializationResponseOutput {
	return o
}

func (o SerializationResponseOutput) ToSerializationResponsePtrOutput() SerializationResponsePtrOutput {
	return o.ToSerializationResponsePtrOutputWithContext(context.Background())
}

func (o SerializationResponseOutput) ToSerializationResponsePtrOutputWithContext(ctx context.Context) SerializationResponsePtrOutput {
	return o.ApplyT(func(v SerializationResponse) *SerializationResponse {
		return &v
	}).(SerializationResponsePtrOutput)
}

// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
func (o SerializationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SerializationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SerializationResponsePtrOutput struct{ *pulumi.OutputState }

func (SerializationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SerializationResponse)(nil)).Elem()
}

func (o SerializationResponsePtrOutput) ToSerializationResponsePtrOutput() SerializationResponsePtrOutput {
	return o
}

func (o SerializationResponsePtrOutput) ToSerializationResponsePtrOutputWithContext(ctx context.Context) SerializationResponsePtrOutput {
	return o
}

func (o SerializationResponsePtrOutput) Elem() SerializationResponseOutput {
	return o.ApplyT(func(v *SerializationResponse) SerializationResponse { return *v }).(SerializationResponseOutput)
}

// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
func (o SerializationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SerializationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The properties that are associated with a SKU.
type Sku struct {
	// The name of the SKU. Required on PUT (CreateOrReplace) requests.
	Name *string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The properties that are associated with a SKU.
type SkuArgs struct {
	// The name of the SKU. Required on PUT (CreateOrReplace) requests.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The properties that are associated with a SKU.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The name of the SKU. Required on PUT (CreateOrReplace) requests.
func (o SkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// The name of the SKU. Required on PUT (CreateOrReplace) requests.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The properties that are associated with a SKU.
type SkuResponse struct {
	// The name of the SKU. Required on PUT (CreateOrReplace) requests.
	Name *string `pulumi:"name"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// The properties that are associated with a SKU.
type SkuResponseArgs struct {
	// The name of the SKU. Required on PUT (CreateOrReplace) requests.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// The properties that are associated with a SKU.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// The name of the SKU. Required on PUT (CreateOrReplace) requests.
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// The name of the SKU. Required on PUT (CreateOrReplace) requests.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The properties that are associated with a streaming job.
type StreamingJobProperties struct {
	// Controls certain runtime behaviors of the streaming job.
	CompatibilityLevel *string `pulumi:"compatibilityLevel"`
	// The data locale of the stream analytics job. Value should be the name of a supported .NET Culture from the set https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx. Defaults to 'en-US' if none specified.
	DataLocale *string `pulumi:"dataLocale"`
	// The maximum tolerable delay in seconds where events arriving late could be included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is used to specify wait indefinitely. If the property is absent, it is interpreted to have a value of -1.
	EventsLateArrivalMaxDelayInSeconds *int `pulumi:"eventsLateArrivalMaxDelayInSeconds"`
	// The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order.
	EventsOutOfOrderMaxDelayInSeconds *int `pulumi:"eventsOutOfOrderMaxDelayInSeconds"`
	// Indicates the policy to apply to events that arrive out of order in the input event stream.
	EventsOutOfOrderPolicy *string `pulumi:"eventsOutOfOrderPolicy"`
	// A list of one or more functions for the streaming job. The name property for each function is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
	Functions []Function `pulumi:"functions"`
	// A list of one or more inputs to the streaming job. The name property for each input is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual input.
	Inputs []Input `pulumi:"inputs"`
	// Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size).
	OutputErrorPolicy *string `pulumi:"outputErrorPolicy"`
	// This property should only be utilized when it is desired that the job be started immediately upon creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time.
	OutputStartMode *string `pulumi:"outputStartMode"`
	// Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime.
	OutputStartTime *string `pulumi:"outputStartTime"`
	// A list of one or more outputs for the streaming job. The name property for each output is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual output.
	Outputs []Output `pulumi:"outputs"`
	// Describes the SKU of the streaming job. Required on PUT (CreateOrReplace) requests.
	Sku *Sku `pulumi:"sku"`
	// Indicates the query and the number of streaming units to use for the streaming job. The name property of the transformation is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
	Transformation *Transformation `pulumi:"transformation"`
}

// StreamingJobPropertiesInput is an input type that accepts StreamingJobPropertiesArgs and StreamingJobPropertiesOutput values.
// You can construct a concrete instance of `StreamingJobPropertiesInput` via:
//
//          StreamingJobPropertiesArgs{...}
type StreamingJobPropertiesInput interface {
	pulumi.Input

	ToStreamingJobPropertiesOutput() StreamingJobPropertiesOutput
	ToStreamingJobPropertiesOutputWithContext(context.Context) StreamingJobPropertiesOutput
}

// The properties that are associated with a streaming job.
type StreamingJobPropertiesArgs struct {
	// Controls certain runtime behaviors of the streaming job.
	CompatibilityLevel pulumi.StringPtrInput `pulumi:"compatibilityLevel"`
	// The data locale of the stream analytics job. Value should be the name of a supported .NET Culture from the set https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx. Defaults to 'en-US' if none specified.
	DataLocale pulumi.StringPtrInput `pulumi:"dataLocale"`
	// The maximum tolerable delay in seconds where events arriving late could be included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is used to specify wait indefinitely. If the property is absent, it is interpreted to have a value of -1.
	EventsLateArrivalMaxDelayInSeconds pulumi.IntPtrInput `pulumi:"eventsLateArrivalMaxDelayInSeconds"`
	// The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order.
	EventsOutOfOrderMaxDelayInSeconds pulumi.IntPtrInput `pulumi:"eventsOutOfOrderMaxDelayInSeconds"`
	// Indicates the policy to apply to events that arrive out of order in the input event stream.
	EventsOutOfOrderPolicy pulumi.StringPtrInput `pulumi:"eventsOutOfOrderPolicy"`
	// A list of one or more functions for the streaming job. The name property for each function is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
	Functions FunctionArrayInput `pulumi:"functions"`
	// A list of one or more inputs to the streaming job. The name property for each input is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual input.
	Inputs InputArrayInput `pulumi:"inputs"`
	// Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size).
	OutputErrorPolicy pulumi.StringPtrInput `pulumi:"outputErrorPolicy"`
	// This property should only be utilized when it is desired that the job be started immediately upon creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time.
	OutputStartMode pulumi.StringPtrInput `pulumi:"outputStartMode"`
	// Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime.
	OutputStartTime pulumi.StringPtrInput `pulumi:"outputStartTime"`
	// A list of one or more outputs for the streaming job. The name property for each output is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual output.
	Outputs OutputArrayInput `pulumi:"outputs"`
	// Describes the SKU of the streaming job. Required on PUT (CreateOrReplace) requests.
	Sku SkuPtrInput `pulumi:"sku"`
	// Indicates the query and the number of streaming units to use for the streaming job. The name property of the transformation is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
	Transformation TransformationPtrInput `pulumi:"transformation"`
}

func (StreamingJobPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingJobProperties)(nil)).Elem()
}

func (i StreamingJobPropertiesArgs) ToStreamingJobPropertiesOutput() StreamingJobPropertiesOutput {
	return i.ToStreamingJobPropertiesOutputWithContext(context.Background())
}

func (i StreamingJobPropertiesArgs) ToStreamingJobPropertiesOutputWithContext(ctx context.Context) StreamingJobPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingJobPropertiesOutput)
}

func (i StreamingJobPropertiesArgs) ToStreamingJobPropertiesPtrOutput() StreamingJobPropertiesPtrOutput {
	return i.ToStreamingJobPropertiesPtrOutputWithContext(context.Background())
}

func (i StreamingJobPropertiesArgs) ToStreamingJobPropertiesPtrOutputWithContext(ctx context.Context) StreamingJobPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingJobPropertiesOutput).ToStreamingJobPropertiesPtrOutputWithContext(ctx)
}

// StreamingJobPropertiesPtrInput is an input type that accepts StreamingJobPropertiesArgs, StreamingJobPropertiesPtr and StreamingJobPropertiesPtrOutput values.
// You can construct a concrete instance of `StreamingJobPropertiesPtrInput` via:
//
//          StreamingJobPropertiesArgs{...}
//
//  or:
//
//          nil
type StreamingJobPropertiesPtrInput interface {
	pulumi.Input

	ToStreamingJobPropertiesPtrOutput() StreamingJobPropertiesPtrOutput
	ToStreamingJobPropertiesPtrOutputWithContext(context.Context) StreamingJobPropertiesPtrOutput
}

type streamingJobPropertiesPtrType StreamingJobPropertiesArgs

func StreamingJobPropertiesPtr(v *StreamingJobPropertiesArgs) StreamingJobPropertiesPtrInput {
	return (*streamingJobPropertiesPtrType)(v)
}

func (*streamingJobPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamingJobProperties)(nil)).Elem()
}

func (i *streamingJobPropertiesPtrType) ToStreamingJobPropertiesPtrOutput() StreamingJobPropertiesPtrOutput {
	return i.ToStreamingJobPropertiesPtrOutputWithContext(context.Background())
}

func (i *streamingJobPropertiesPtrType) ToStreamingJobPropertiesPtrOutputWithContext(ctx context.Context) StreamingJobPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingJobPropertiesPtrOutput)
}

// The properties that are associated with a streaming job.
type StreamingJobPropertiesOutput struct{ *pulumi.OutputState }

func (StreamingJobPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingJobProperties)(nil)).Elem()
}

func (o StreamingJobPropertiesOutput) ToStreamingJobPropertiesOutput() StreamingJobPropertiesOutput {
	return o
}

func (o StreamingJobPropertiesOutput) ToStreamingJobPropertiesOutputWithContext(ctx context.Context) StreamingJobPropertiesOutput {
	return o
}

func (o StreamingJobPropertiesOutput) ToStreamingJobPropertiesPtrOutput() StreamingJobPropertiesPtrOutput {
	return o.ToStreamingJobPropertiesPtrOutputWithContext(context.Background())
}

func (o StreamingJobPropertiesOutput) ToStreamingJobPropertiesPtrOutputWithContext(ctx context.Context) StreamingJobPropertiesPtrOutput {
	return o.ApplyT(func(v StreamingJobProperties) *StreamingJobProperties {
		return &v
	}).(StreamingJobPropertiesPtrOutput)
}

// Controls certain runtime behaviors of the streaming job.
func (o StreamingJobPropertiesOutput) CompatibilityLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamingJobProperties) *string { return v.CompatibilityLevel }).(pulumi.StringPtrOutput)
}

// The data locale of the stream analytics job. Value should be the name of a supported .NET Culture from the set https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx. Defaults to 'en-US' if none specified.
func (o StreamingJobPropertiesOutput) DataLocale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamingJobProperties) *string { return v.DataLocale }).(pulumi.StringPtrOutput)
}

// The maximum tolerable delay in seconds where events arriving late could be included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is used to specify wait indefinitely. If the property is absent, it is interpreted to have a value of -1.
func (o StreamingJobPropertiesOutput) EventsLateArrivalMaxDelayInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StreamingJobProperties) *int { return v.EventsLateArrivalMaxDelayInSeconds }).(pulumi.IntPtrOutput)
}

// The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order.
func (o StreamingJobPropertiesOutput) EventsOutOfOrderMaxDelayInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StreamingJobProperties) *int { return v.EventsOutOfOrderMaxDelayInSeconds }).(pulumi.IntPtrOutput)
}

// Indicates the policy to apply to events that arrive out of order in the input event stream.
func (o StreamingJobPropertiesOutput) EventsOutOfOrderPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamingJobProperties) *string { return v.EventsOutOfOrderPolicy }).(pulumi.StringPtrOutput)
}

// A list of one or more functions for the streaming job. The name property for each function is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
func (o StreamingJobPropertiesOutput) Functions() FunctionArrayOutput {
	return o.ApplyT(func(v StreamingJobProperties) []Function { return v.Functions }).(FunctionArrayOutput)
}

// A list of one or more inputs to the streaming job. The name property for each input is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual input.
func (o StreamingJobPropertiesOutput) Inputs() InputArrayOutput {
	return o.ApplyT(func(v StreamingJobProperties) []Input { return v.Inputs }).(InputArrayOutput)
}

// Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size).
func (o StreamingJobPropertiesOutput) OutputErrorPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamingJobProperties) *string { return v.OutputErrorPolicy }).(pulumi.StringPtrOutput)
}

// This property should only be utilized when it is desired that the job be started immediately upon creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time.
func (o StreamingJobPropertiesOutput) OutputStartMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamingJobProperties) *string { return v.OutputStartMode }).(pulumi.StringPtrOutput)
}

// Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime.
func (o StreamingJobPropertiesOutput) OutputStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamingJobProperties) *string { return v.OutputStartTime }).(pulumi.StringPtrOutput)
}

// A list of one or more outputs for the streaming job. The name property for each output is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual output.
func (o StreamingJobPropertiesOutput) Outputs() OutputArrayOutput {
	return o.ApplyT(func(v StreamingJobProperties) []Output { return v.Outputs }).(OutputArrayOutput)
}

// Describes the SKU of the streaming job. Required on PUT (CreateOrReplace) requests.
func (o StreamingJobPropertiesOutput) Sku() SkuPtrOutput {
	return o.ApplyT(func(v StreamingJobProperties) *Sku { return v.Sku }).(SkuPtrOutput)
}

// Indicates the query and the number of streaming units to use for the streaming job. The name property of the transformation is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
func (o StreamingJobPropertiesOutput) Transformation() TransformationPtrOutput {
	return o.ApplyT(func(v StreamingJobProperties) *Transformation { return v.Transformation }).(TransformationPtrOutput)
}

type StreamingJobPropertiesPtrOutput struct{ *pulumi.OutputState }

func (StreamingJobPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamingJobProperties)(nil)).Elem()
}

func (o StreamingJobPropertiesPtrOutput) ToStreamingJobPropertiesPtrOutput() StreamingJobPropertiesPtrOutput {
	return o
}

func (o StreamingJobPropertiesPtrOutput) ToStreamingJobPropertiesPtrOutputWithContext(ctx context.Context) StreamingJobPropertiesPtrOutput {
	return o
}

func (o StreamingJobPropertiesPtrOutput) Elem() StreamingJobPropertiesOutput {
	return o.ApplyT(func(v *StreamingJobProperties) StreamingJobProperties { return *v }).(StreamingJobPropertiesOutput)
}

// Controls certain runtime behaviors of the streaming job.
func (o StreamingJobPropertiesPtrOutput) CompatibilityLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingJobProperties) *string {
		if v == nil {
			return nil
		}
		return v.CompatibilityLevel
	}).(pulumi.StringPtrOutput)
}

// The data locale of the stream analytics job. Value should be the name of a supported .NET Culture from the set https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx. Defaults to 'en-US' if none specified.
func (o StreamingJobPropertiesPtrOutput) DataLocale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingJobProperties) *string {
		if v == nil {
			return nil
		}
		return v.DataLocale
	}).(pulumi.StringPtrOutput)
}

// The maximum tolerable delay in seconds where events arriving late could be included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is used to specify wait indefinitely. If the property is absent, it is interpreted to have a value of -1.
func (o StreamingJobPropertiesPtrOutput) EventsLateArrivalMaxDelayInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StreamingJobProperties) *int {
		if v == nil {
			return nil
		}
		return v.EventsLateArrivalMaxDelayInSeconds
	}).(pulumi.IntPtrOutput)
}

// The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order.
func (o StreamingJobPropertiesPtrOutput) EventsOutOfOrderMaxDelayInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StreamingJobProperties) *int {
		if v == nil {
			return nil
		}
		return v.EventsOutOfOrderMaxDelayInSeconds
	}).(pulumi.IntPtrOutput)
}

// Indicates the policy to apply to events that arrive out of order in the input event stream.
func (o StreamingJobPropertiesPtrOutput) EventsOutOfOrderPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingJobProperties) *string {
		if v == nil {
			return nil
		}
		return v.EventsOutOfOrderPolicy
	}).(pulumi.StringPtrOutput)
}

// A list of one or more functions for the streaming job. The name property for each function is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
func (o StreamingJobPropertiesPtrOutput) Functions() FunctionArrayOutput {
	return o.ApplyT(func(v *StreamingJobProperties) []Function {
		if v == nil {
			return nil
		}
		return v.Functions
	}).(FunctionArrayOutput)
}

// A list of one or more inputs to the streaming job. The name property for each input is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual input.
func (o StreamingJobPropertiesPtrOutput) Inputs() InputArrayOutput {
	return o.ApplyT(func(v *StreamingJobProperties) []Input {
		if v == nil {
			return nil
		}
		return v.Inputs
	}).(InputArrayOutput)
}

// Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size).
func (o StreamingJobPropertiesPtrOutput) OutputErrorPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingJobProperties) *string {
		if v == nil {
			return nil
		}
		return v.OutputErrorPolicy
	}).(pulumi.StringPtrOutput)
}

// This property should only be utilized when it is desired that the job be started immediately upon creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time.
func (o StreamingJobPropertiesPtrOutput) OutputStartMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingJobProperties) *string {
		if v == nil {
			return nil
		}
		return v.OutputStartMode
	}).(pulumi.StringPtrOutput)
}

// Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime.
func (o StreamingJobPropertiesPtrOutput) OutputStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingJobProperties) *string {
		if v == nil {
			return nil
		}
		return v.OutputStartTime
	}).(pulumi.StringPtrOutput)
}

// A list of one or more outputs for the streaming job. The name property for each output is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual output.
func (o StreamingJobPropertiesPtrOutput) Outputs() OutputArrayOutput {
	return o.ApplyT(func(v *StreamingJobProperties) []Output {
		if v == nil {
			return nil
		}
		return v.Outputs
	}).(OutputArrayOutput)
}

// Describes the SKU of the streaming job. Required on PUT (CreateOrReplace) requests.
func (o StreamingJobPropertiesPtrOutput) Sku() SkuPtrOutput {
	return o.ApplyT(func(v *StreamingJobProperties) *Sku {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(SkuPtrOutput)
}

// Indicates the query and the number of streaming units to use for the streaming job. The name property of the transformation is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
func (o StreamingJobPropertiesPtrOutput) Transformation() TransformationPtrOutput {
	return o.ApplyT(func(v *StreamingJobProperties) *Transformation {
		if v == nil {
			return nil
		}
		return v.Transformation
	}).(TransformationPtrOutput)
}

// The properties that are associated with a streaming job.
type StreamingJobPropertiesResponse struct {
	// Controls certain runtime behaviors of the streaming job.
	CompatibilityLevel *string `pulumi:"compatibilityLevel"`
	// Value is an ISO-8601 formatted UTC timestamp indicating when the streaming job was created.
	CreatedDate string `pulumi:"createdDate"`
	// The data locale of the stream analytics job. Value should be the name of a supported .NET Culture from the set https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx. Defaults to 'en-US' if none specified.
	DataLocale *string `pulumi:"dataLocale"`
	// The current entity tag for the streaming job. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
	Etag string `pulumi:"etag"`
	// The maximum tolerable delay in seconds where events arriving late could be included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is used to specify wait indefinitely. If the property is absent, it is interpreted to have a value of -1.
	EventsLateArrivalMaxDelayInSeconds *int `pulumi:"eventsLateArrivalMaxDelayInSeconds"`
	// The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order.
	EventsOutOfOrderMaxDelayInSeconds *int `pulumi:"eventsOutOfOrderMaxDelayInSeconds"`
	// Indicates the policy to apply to events that arrive out of order in the input event stream.
	EventsOutOfOrderPolicy *string `pulumi:"eventsOutOfOrderPolicy"`
	// A list of one or more functions for the streaming job. The name property for each function is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
	Functions []FunctionResponse `pulumi:"functions"`
	// A list of one or more inputs to the streaming job. The name property for each input is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual input.
	Inputs []InputResponse `pulumi:"inputs"`
	// A GUID uniquely identifying the streaming job. This GUID is generated upon creation of the streaming job.
	JobId string `pulumi:"jobId"`
	// Describes the state of the streaming job.
	JobState string `pulumi:"jobState"`
	// Value is either an ISO-8601 formatted timestamp indicating the last output event time of the streaming job or null indicating that output has not yet been produced. In case of multiple outputs or multiple streams, this shows the latest value in that set.
	LastOutputEventTime string `pulumi:"lastOutputEventTime"`
	// Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size).
	OutputErrorPolicy *string `pulumi:"outputErrorPolicy"`
	// This property should only be utilized when it is desired that the job be started immediately upon creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time.
	OutputStartMode *string `pulumi:"outputStartMode"`
	// Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime.
	OutputStartTime *string `pulumi:"outputStartTime"`
	// A list of one or more outputs for the streaming job. The name property for each output is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual output.
	Outputs []OutputResponse `pulumi:"outputs"`
	// Describes the provisioning status of the streaming job.
	ProvisioningState string `pulumi:"provisioningState"`
	// Describes the SKU of the streaming job. Required on PUT (CreateOrReplace) requests.
	Sku *SkuResponse `pulumi:"sku"`
	// Indicates the query and the number of streaming units to use for the streaming job. The name property of the transformation is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
	Transformation *TransformationResponse `pulumi:"transformation"`
}

// StreamingJobPropertiesResponseInput is an input type that accepts StreamingJobPropertiesResponseArgs and StreamingJobPropertiesResponseOutput values.
// You can construct a concrete instance of `StreamingJobPropertiesResponseInput` via:
//
//          StreamingJobPropertiesResponseArgs{...}
type StreamingJobPropertiesResponseInput interface {
	pulumi.Input

	ToStreamingJobPropertiesResponseOutput() StreamingJobPropertiesResponseOutput
	ToStreamingJobPropertiesResponseOutputWithContext(context.Context) StreamingJobPropertiesResponseOutput
}

// The properties that are associated with a streaming job.
type StreamingJobPropertiesResponseArgs struct {
	// Controls certain runtime behaviors of the streaming job.
	CompatibilityLevel pulumi.StringPtrInput `pulumi:"compatibilityLevel"`
	// Value is an ISO-8601 formatted UTC timestamp indicating when the streaming job was created.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// The data locale of the stream analytics job. Value should be the name of a supported .NET Culture from the set https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx. Defaults to 'en-US' if none specified.
	DataLocale pulumi.StringPtrInput `pulumi:"dataLocale"`
	// The current entity tag for the streaming job. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
	Etag pulumi.StringInput `pulumi:"etag"`
	// The maximum tolerable delay in seconds where events arriving late could be included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is used to specify wait indefinitely. If the property is absent, it is interpreted to have a value of -1.
	EventsLateArrivalMaxDelayInSeconds pulumi.IntPtrInput `pulumi:"eventsLateArrivalMaxDelayInSeconds"`
	// The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order.
	EventsOutOfOrderMaxDelayInSeconds pulumi.IntPtrInput `pulumi:"eventsOutOfOrderMaxDelayInSeconds"`
	// Indicates the policy to apply to events that arrive out of order in the input event stream.
	EventsOutOfOrderPolicy pulumi.StringPtrInput `pulumi:"eventsOutOfOrderPolicy"`
	// A list of one or more functions for the streaming job. The name property for each function is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
	Functions FunctionResponseArrayInput `pulumi:"functions"`
	// A list of one or more inputs to the streaming job. The name property for each input is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual input.
	Inputs InputResponseArrayInput `pulumi:"inputs"`
	// A GUID uniquely identifying the streaming job. This GUID is generated upon creation of the streaming job.
	JobId pulumi.StringInput `pulumi:"jobId"`
	// Describes the state of the streaming job.
	JobState pulumi.StringInput `pulumi:"jobState"`
	// Value is either an ISO-8601 formatted timestamp indicating the last output event time of the streaming job or null indicating that output has not yet been produced. In case of multiple outputs or multiple streams, this shows the latest value in that set.
	LastOutputEventTime pulumi.StringInput `pulumi:"lastOutputEventTime"`
	// Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size).
	OutputErrorPolicy pulumi.StringPtrInput `pulumi:"outputErrorPolicy"`
	// This property should only be utilized when it is desired that the job be started immediately upon creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time.
	OutputStartMode pulumi.StringPtrInput `pulumi:"outputStartMode"`
	// Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime.
	OutputStartTime pulumi.StringPtrInput `pulumi:"outputStartTime"`
	// A list of one or more outputs for the streaming job. The name property for each output is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual output.
	Outputs OutputResponseArrayInput `pulumi:"outputs"`
	// Describes the provisioning status of the streaming job.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Describes the SKU of the streaming job. Required on PUT (CreateOrReplace) requests.
	Sku SkuResponsePtrInput `pulumi:"sku"`
	// Indicates the query and the number of streaming units to use for the streaming job. The name property of the transformation is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
	Transformation TransformationResponsePtrInput `pulumi:"transformation"`
}

func (StreamingJobPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingJobPropertiesResponse)(nil)).Elem()
}

func (i StreamingJobPropertiesResponseArgs) ToStreamingJobPropertiesResponseOutput() StreamingJobPropertiesResponseOutput {
	return i.ToStreamingJobPropertiesResponseOutputWithContext(context.Background())
}

func (i StreamingJobPropertiesResponseArgs) ToStreamingJobPropertiesResponseOutputWithContext(ctx context.Context) StreamingJobPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingJobPropertiesResponseOutput)
}

func (i StreamingJobPropertiesResponseArgs) ToStreamingJobPropertiesResponsePtrOutput() StreamingJobPropertiesResponsePtrOutput {
	return i.ToStreamingJobPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i StreamingJobPropertiesResponseArgs) ToStreamingJobPropertiesResponsePtrOutputWithContext(ctx context.Context) StreamingJobPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingJobPropertiesResponseOutput).ToStreamingJobPropertiesResponsePtrOutputWithContext(ctx)
}

// StreamingJobPropertiesResponsePtrInput is an input type that accepts StreamingJobPropertiesResponseArgs, StreamingJobPropertiesResponsePtr and StreamingJobPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `StreamingJobPropertiesResponsePtrInput` via:
//
//          StreamingJobPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type StreamingJobPropertiesResponsePtrInput interface {
	pulumi.Input

	ToStreamingJobPropertiesResponsePtrOutput() StreamingJobPropertiesResponsePtrOutput
	ToStreamingJobPropertiesResponsePtrOutputWithContext(context.Context) StreamingJobPropertiesResponsePtrOutput
}

type streamingJobPropertiesResponsePtrType StreamingJobPropertiesResponseArgs

func StreamingJobPropertiesResponsePtr(v *StreamingJobPropertiesResponseArgs) StreamingJobPropertiesResponsePtrInput {
	return (*streamingJobPropertiesResponsePtrType)(v)
}

func (*streamingJobPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamingJobPropertiesResponse)(nil)).Elem()
}

func (i *streamingJobPropertiesResponsePtrType) ToStreamingJobPropertiesResponsePtrOutput() StreamingJobPropertiesResponsePtrOutput {
	return i.ToStreamingJobPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *streamingJobPropertiesResponsePtrType) ToStreamingJobPropertiesResponsePtrOutputWithContext(ctx context.Context) StreamingJobPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingJobPropertiesResponsePtrOutput)
}

// The properties that are associated with a streaming job.
type StreamingJobPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StreamingJobPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingJobPropertiesResponse)(nil)).Elem()
}

func (o StreamingJobPropertiesResponseOutput) ToStreamingJobPropertiesResponseOutput() StreamingJobPropertiesResponseOutput {
	return o
}

func (o StreamingJobPropertiesResponseOutput) ToStreamingJobPropertiesResponseOutputWithContext(ctx context.Context) StreamingJobPropertiesResponseOutput {
	return o
}

func (o StreamingJobPropertiesResponseOutput) ToStreamingJobPropertiesResponsePtrOutput() StreamingJobPropertiesResponsePtrOutput {
	return o.ToStreamingJobPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o StreamingJobPropertiesResponseOutput) ToStreamingJobPropertiesResponsePtrOutputWithContext(ctx context.Context) StreamingJobPropertiesResponsePtrOutput {
	return o.ApplyT(func(v StreamingJobPropertiesResponse) *StreamingJobPropertiesResponse {
		return &v
	}).(StreamingJobPropertiesResponsePtrOutput)
}

// Controls certain runtime behaviors of the streaming job.
func (o StreamingJobPropertiesResponseOutput) CompatibilityLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamingJobPropertiesResponse) *string { return v.CompatibilityLevel }).(pulumi.StringPtrOutput)
}

// Value is an ISO-8601 formatted UTC timestamp indicating when the streaming job was created.
func (o StreamingJobPropertiesResponseOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v StreamingJobPropertiesResponse) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// The data locale of the stream analytics job. Value should be the name of a supported .NET Culture from the set https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx. Defaults to 'en-US' if none specified.
func (o StreamingJobPropertiesResponseOutput) DataLocale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamingJobPropertiesResponse) *string { return v.DataLocale }).(pulumi.StringPtrOutput)
}

// The current entity tag for the streaming job. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
func (o StreamingJobPropertiesResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v StreamingJobPropertiesResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The maximum tolerable delay in seconds where events arriving late could be included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is used to specify wait indefinitely. If the property is absent, it is interpreted to have a value of -1.
func (o StreamingJobPropertiesResponseOutput) EventsLateArrivalMaxDelayInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StreamingJobPropertiesResponse) *int { return v.EventsLateArrivalMaxDelayInSeconds }).(pulumi.IntPtrOutput)
}

// The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order.
func (o StreamingJobPropertiesResponseOutput) EventsOutOfOrderMaxDelayInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StreamingJobPropertiesResponse) *int { return v.EventsOutOfOrderMaxDelayInSeconds }).(pulumi.IntPtrOutput)
}

// Indicates the policy to apply to events that arrive out of order in the input event stream.
func (o StreamingJobPropertiesResponseOutput) EventsOutOfOrderPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamingJobPropertiesResponse) *string { return v.EventsOutOfOrderPolicy }).(pulumi.StringPtrOutput)
}

// A list of one or more functions for the streaming job. The name property for each function is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
func (o StreamingJobPropertiesResponseOutput) Functions() FunctionResponseArrayOutput {
	return o.ApplyT(func(v StreamingJobPropertiesResponse) []FunctionResponse { return v.Functions }).(FunctionResponseArrayOutput)
}

// A list of one or more inputs to the streaming job. The name property for each input is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual input.
func (o StreamingJobPropertiesResponseOutput) Inputs() InputResponseArrayOutput {
	return o.ApplyT(func(v StreamingJobPropertiesResponse) []InputResponse { return v.Inputs }).(InputResponseArrayOutput)
}

// A GUID uniquely identifying the streaming job. This GUID is generated upon creation of the streaming job.
func (o StreamingJobPropertiesResponseOutput) JobId() pulumi.StringOutput {
	return o.ApplyT(func(v StreamingJobPropertiesResponse) string { return v.JobId }).(pulumi.StringOutput)
}

// Describes the state of the streaming job.
func (o StreamingJobPropertiesResponseOutput) JobState() pulumi.StringOutput {
	return o.ApplyT(func(v StreamingJobPropertiesResponse) string { return v.JobState }).(pulumi.StringOutput)
}

// Value is either an ISO-8601 formatted timestamp indicating the last output event time of the streaming job or null indicating that output has not yet been produced. In case of multiple outputs or multiple streams, this shows the latest value in that set.
func (o StreamingJobPropertiesResponseOutput) LastOutputEventTime() pulumi.StringOutput {
	return o.ApplyT(func(v StreamingJobPropertiesResponse) string { return v.LastOutputEventTime }).(pulumi.StringOutput)
}

// Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size).
func (o StreamingJobPropertiesResponseOutput) OutputErrorPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamingJobPropertiesResponse) *string { return v.OutputErrorPolicy }).(pulumi.StringPtrOutput)
}

// This property should only be utilized when it is desired that the job be started immediately upon creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time.
func (o StreamingJobPropertiesResponseOutput) OutputStartMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamingJobPropertiesResponse) *string { return v.OutputStartMode }).(pulumi.StringPtrOutput)
}

// Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime.
func (o StreamingJobPropertiesResponseOutput) OutputStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamingJobPropertiesResponse) *string { return v.OutputStartTime }).(pulumi.StringPtrOutput)
}

// A list of one or more outputs for the streaming job. The name property for each output is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual output.
func (o StreamingJobPropertiesResponseOutput) Outputs() OutputResponseArrayOutput {
	return o.ApplyT(func(v StreamingJobPropertiesResponse) []OutputResponse { return v.Outputs }).(OutputResponseArrayOutput)
}

// Describes the provisioning status of the streaming job.
func (o StreamingJobPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v StreamingJobPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Describes the SKU of the streaming job. Required on PUT (CreateOrReplace) requests.
func (o StreamingJobPropertiesResponseOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v StreamingJobPropertiesResponse) *SkuResponse { return v.Sku }).(SkuResponsePtrOutput)
}

// Indicates the query and the number of streaming units to use for the streaming job. The name property of the transformation is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
func (o StreamingJobPropertiesResponseOutput) Transformation() TransformationResponsePtrOutput {
	return o.ApplyT(func(v StreamingJobPropertiesResponse) *TransformationResponse { return v.Transformation }).(TransformationResponsePtrOutput)
}

type StreamingJobPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (StreamingJobPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamingJobPropertiesResponse)(nil)).Elem()
}

func (o StreamingJobPropertiesResponsePtrOutput) ToStreamingJobPropertiesResponsePtrOutput() StreamingJobPropertiesResponsePtrOutput {
	return o
}

func (o StreamingJobPropertiesResponsePtrOutput) ToStreamingJobPropertiesResponsePtrOutputWithContext(ctx context.Context) StreamingJobPropertiesResponsePtrOutput {
	return o
}

func (o StreamingJobPropertiesResponsePtrOutput) Elem() StreamingJobPropertiesResponseOutput {
	return o.ApplyT(func(v *StreamingJobPropertiesResponse) StreamingJobPropertiesResponse { return *v }).(StreamingJobPropertiesResponseOutput)
}

// Controls certain runtime behaviors of the streaming job.
func (o StreamingJobPropertiesResponsePtrOutput) CompatibilityLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingJobPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CompatibilityLevel
	}).(pulumi.StringPtrOutput)
}

// Value is an ISO-8601 formatted UTC timestamp indicating when the streaming job was created.
func (o StreamingJobPropertiesResponsePtrOutput) CreatedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingJobPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedDate
	}).(pulumi.StringPtrOutput)
}

// The data locale of the stream analytics job. Value should be the name of a supported .NET Culture from the set https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx. Defaults to 'en-US' if none specified.
func (o StreamingJobPropertiesResponsePtrOutput) DataLocale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingJobPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DataLocale
	}).(pulumi.StringPtrOutput)
}

// The current entity tag for the streaming job. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
func (o StreamingJobPropertiesResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingJobPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// The maximum tolerable delay in seconds where events arriving late could be included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is used to specify wait indefinitely. If the property is absent, it is interpreted to have a value of -1.
func (o StreamingJobPropertiesResponsePtrOutput) EventsLateArrivalMaxDelayInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StreamingJobPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.EventsLateArrivalMaxDelayInSeconds
	}).(pulumi.IntPtrOutput)
}

// The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order.
func (o StreamingJobPropertiesResponsePtrOutput) EventsOutOfOrderMaxDelayInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StreamingJobPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.EventsOutOfOrderMaxDelayInSeconds
	}).(pulumi.IntPtrOutput)
}

// Indicates the policy to apply to events that arrive out of order in the input event stream.
func (o StreamingJobPropertiesResponsePtrOutput) EventsOutOfOrderPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingJobPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.EventsOutOfOrderPolicy
	}).(pulumi.StringPtrOutput)
}

// A list of one or more functions for the streaming job. The name property for each function is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
func (o StreamingJobPropertiesResponsePtrOutput) Functions() FunctionResponseArrayOutput {
	return o.ApplyT(func(v *StreamingJobPropertiesResponse) []FunctionResponse {
		if v == nil {
			return nil
		}
		return v.Functions
	}).(FunctionResponseArrayOutput)
}

// A list of one or more inputs to the streaming job. The name property for each input is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual input.
func (o StreamingJobPropertiesResponsePtrOutput) Inputs() InputResponseArrayOutput {
	return o.ApplyT(func(v *StreamingJobPropertiesResponse) []InputResponse {
		if v == nil {
			return nil
		}
		return v.Inputs
	}).(InputResponseArrayOutput)
}

// A GUID uniquely identifying the streaming job. This GUID is generated upon creation of the streaming job.
func (o StreamingJobPropertiesResponsePtrOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingJobPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.JobId
	}).(pulumi.StringPtrOutput)
}

// Describes the state of the streaming job.
func (o StreamingJobPropertiesResponsePtrOutput) JobState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingJobPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.JobState
	}).(pulumi.StringPtrOutput)
}

// Value is either an ISO-8601 formatted timestamp indicating the last output event time of the streaming job or null indicating that output has not yet been produced. In case of multiple outputs or multiple streams, this shows the latest value in that set.
func (o StreamingJobPropertiesResponsePtrOutput) LastOutputEventTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingJobPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastOutputEventTime
	}).(pulumi.StringPtrOutput)
}

// Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size).
func (o StreamingJobPropertiesResponsePtrOutput) OutputErrorPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingJobPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.OutputErrorPolicy
	}).(pulumi.StringPtrOutput)
}

// This property should only be utilized when it is desired that the job be started immediately upon creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time.
func (o StreamingJobPropertiesResponsePtrOutput) OutputStartMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingJobPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.OutputStartMode
	}).(pulumi.StringPtrOutput)
}

// Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime.
func (o StreamingJobPropertiesResponsePtrOutput) OutputStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingJobPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.OutputStartTime
	}).(pulumi.StringPtrOutput)
}

// A list of one or more outputs for the streaming job. The name property for each output is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual output.
func (o StreamingJobPropertiesResponsePtrOutput) Outputs() OutputResponseArrayOutput {
	return o.ApplyT(func(v *StreamingJobPropertiesResponse) []OutputResponse {
		if v == nil {
			return nil
		}
		return v.Outputs
	}).(OutputResponseArrayOutput)
}

// Describes the provisioning status of the streaming job.
func (o StreamingJobPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingJobPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Describes the SKU of the streaming job. Required on PUT (CreateOrReplace) requests.
func (o StreamingJobPropertiesResponsePtrOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v *StreamingJobPropertiesResponse) *SkuResponse {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(SkuResponsePtrOutput)
}

// Indicates the query and the number of streaming units to use for the streaming job. The name property of the transformation is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
func (o StreamingJobPropertiesResponsePtrOutput) Transformation() TransformationResponsePtrOutput {
	return o.ApplyT(func(v *StreamingJobPropertiesResponse) *TransformationResponse {
		if v == nil {
			return nil
		}
		return v.Transformation
	}).(TransformationResponsePtrOutput)
}

// A streaming job object, containing all information associated with the named streaming job.
type StreamingjobType struct {
	// Resource location. Required on PUT (CreateOrReplace) requests.
	Location *string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// The properties that are associated with a streaming job.  Required on PUT (CreateOrReplace) requests.
	Properties StreamingJobPropertiesResponse `pulumi:"properties"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

// StreamingjobTypeInput is an input type that accepts StreamingjobTypeArgs and StreamingjobTypeOutput values.
// You can construct a concrete instance of `StreamingjobTypeInput` via:
//
//          StreamingjobTypeArgs{...}
type StreamingjobTypeInput interface {
	pulumi.Input

	ToStreamingjobTypeOutput() StreamingjobTypeOutput
	ToStreamingjobTypeOutputWithContext(context.Context) StreamingjobTypeOutput
}

// A streaming job object, containing all information associated with the named streaming job.
type StreamingjobTypeArgs struct {
	// Resource location. Required on PUT (CreateOrReplace) requests.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// The properties that are associated with a streaming job.  Required on PUT (CreateOrReplace) requests.
	Properties StreamingJobPropertiesResponseInput `pulumi:"properties"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (StreamingjobTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingjobType)(nil)).Elem()
}

func (i StreamingjobTypeArgs) ToStreamingjobTypeOutput() StreamingjobTypeOutput {
	return i.ToStreamingjobTypeOutputWithContext(context.Background())
}

func (i StreamingjobTypeArgs) ToStreamingjobTypeOutputWithContext(ctx context.Context) StreamingjobTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingjobTypeOutput)
}

// A streaming job object, containing all information associated with the named streaming job.
type StreamingjobTypeOutput struct{ *pulumi.OutputState }

func (StreamingjobTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingjobType)(nil)).Elem()
}

func (o StreamingjobTypeOutput) ToStreamingjobTypeOutput() StreamingjobTypeOutput {
	return o
}

func (o StreamingjobTypeOutput) ToStreamingjobTypeOutputWithContext(ctx context.Context) StreamingjobTypeOutput {
	return o
}

// Resource location. Required on PUT (CreateOrReplace) requests.
func (o StreamingjobTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamingjobType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name
func (o StreamingjobTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StreamingjobType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties that are associated with a streaming job.  Required on PUT (CreateOrReplace) requests.
func (o StreamingjobTypeOutput) Properties() StreamingJobPropertiesResponseOutput {
	return o.ApplyT(func(v StreamingjobType) StreamingJobPropertiesResponse { return v.Properties }).(StreamingJobPropertiesResponseOutput)
}

// Resource tags
func (o StreamingjobTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v StreamingjobType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o StreamingjobTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StreamingjobType) string { return v.Type }).(pulumi.StringOutput)
}

// A function object, containing all information associated with the named function. All functions are contained under a streaming job.
type StreamingjobFunctionType struct {
	// Resource name
	Name *string `pulumi:"name"`
	// The properties that are associated with a function.
	Properties FunctionPropertiesResponse `pulumi:"properties"`
	// Resource type
	Type string `pulumi:"type"`
}

// StreamingjobFunctionTypeInput is an input type that accepts StreamingjobFunctionTypeArgs and StreamingjobFunctionTypeOutput values.
// You can construct a concrete instance of `StreamingjobFunctionTypeInput` via:
//
//          StreamingjobFunctionTypeArgs{...}
type StreamingjobFunctionTypeInput interface {
	pulumi.Input

	ToStreamingjobFunctionTypeOutput() StreamingjobFunctionTypeOutput
	ToStreamingjobFunctionTypeOutputWithContext(context.Context) StreamingjobFunctionTypeOutput
}

// A function object, containing all information associated with the named function. All functions are contained under a streaming job.
type StreamingjobFunctionTypeArgs struct {
	// Resource name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The properties that are associated with a function.
	Properties FunctionPropertiesResponseInput `pulumi:"properties"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (StreamingjobFunctionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingjobFunctionType)(nil)).Elem()
}

func (i StreamingjobFunctionTypeArgs) ToStreamingjobFunctionTypeOutput() StreamingjobFunctionTypeOutput {
	return i.ToStreamingjobFunctionTypeOutputWithContext(context.Background())
}

func (i StreamingjobFunctionTypeArgs) ToStreamingjobFunctionTypeOutputWithContext(ctx context.Context) StreamingjobFunctionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingjobFunctionTypeOutput)
}

// A function object, containing all information associated with the named function. All functions are contained under a streaming job.
type StreamingjobFunctionTypeOutput struct{ *pulumi.OutputState }

func (StreamingjobFunctionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingjobFunctionType)(nil)).Elem()
}

func (o StreamingjobFunctionTypeOutput) ToStreamingjobFunctionTypeOutput() StreamingjobFunctionTypeOutput {
	return o
}

func (o StreamingjobFunctionTypeOutput) ToStreamingjobFunctionTypeOutputWithContext(ctx context.Context) StreamingjobFunctionTypeOutput {
	return o
}

// Resource name
func (o StreamingjobFunctionTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamingjobFunctionType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The properties that are associated with a function.
func (o StreamingjobFunctionTypeOutput) Properties() FunctionPropertiesResponseOutput {
	return o.ApplyT(func(v StreamingjobFunctionType) FunctionPropertiesResponse { return v.Properties }).(FunctionPropertiesResponseOutput)
}

// Resource type
func (o StreamingjobFunctionTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StreamingjobFunctionType) string { return v.Type }).(pulumi.StringOutput)
}

// An input object, containing all information associated with the named input. All inputs are contained under a streaming job.
type StreamingjobInputType struct {
	// Resource name
	Name *string `pulumi:"name"`
	// The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
	Properties InputPropertiesResponse `pulumi:"properties"`
	// Resource type
	Type string `pulumi:"type"`
}

// StreamingjobInputTypeInput is an input type that accepts StreamingjobInputTypeArgs and StreamingjobInputTypeOutput values.
// You can construct a concrete instance of `StreamingjobInputTypeInput` via:
//
//          StreamingjobInputTypeArgs{...}
type StreamingjobInputTypeInput interface {
	pulumi.Input

	ToStreamingjobInputTypeOutput() StreamingjobInputTypeOutput
	ToStreamingjobInputTypeOutputWithContext(context.Context) StreamingjobInputTypeOutput
}

// An input object, containing all information associated with the named input. All inputs are contained under a streaming job.
type StreamingjobInputTypeArgs struct {
	// Resource name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
	Properties InputPropertiesResponseInput `pulumi:"properties"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (StreamingjobInputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingjobInputType)(nil)).Elem()
}

func (i StreamingjobInputTypeArgs) ToStreamingjobInputTypeOutput() StreamingjobInputTypeOutput {
	return i.ToStreamingjobInputTypeOutputWithContext(context.Background())
}

func (i StreamingjobInputTypeArgs) ToStreamingjobInputTypeOutputWithContext(ctx context.Context) StreamingjobInputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingjobInputTypeOutput)
}

// An input object, containing all information associated with the named input. All inputs are contained under a streaming job.
type StreamingjobInputTypeOutput struct{ *pulumi.OutputState }

func (StreamingjobInputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingjobInputType)(nil)).Elem()
}

func (o StreamingjobInputTypeOutput) ToStreamingjobInputTypeOutput() StreamingjobInputTypeOutput {
	return o
}

func (o StreamingjobInputTypeOutput) ToStreamingjobInputTypeOutputWithContext(ctx context.Context) StreamingjobInputTypeOutput {
	return o
}

// Resource name
func (o StreamingjobInputTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamingjobInputType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
func (o StreamingjobInputTypeOutput) Properties() InputPropertiesResponseOutput {
	return o.ApplyT(func(v StreamingjobInputType) InputPropertiesResponse { return v.Properties }).(InputPropertiesResponseOutput)
}

// Resource type
func (o StreamingjobInputTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StreamingjobInputType) string { return v.Type }).(pulumi.StringOutput)
}

// An output object, containing all information associated with the named output. All outputs are contained under a streaming job.
type StreamingjobOutputType struct {
	// Resource name
	Name *string `pulumi:"name"`
	// The properties that are associated with an output. Required on PUT (CreateOrReplace) requests.
	Properties OutputPropertiesResponse `pulumi:"properties"`
	// Resource type
	Type string `pulumi:"type"`
}

// StreamingjobOutputTypeInput is an input type that accepts StreamingjobOutputTypeArgs and StreamingjobOutputTypeOutput values.
// You can construct a concrete instance of `StreamingjobOutputTypeInput` via:
//
//          StreamingjobOutputTypeArgs{...}
type StreamingjobOutputTypeInput interface {
	pulumi.Input

	ToStreamingjobOutputTypeOutput() StreamingjobOutputTypeOutput
	ToStreamingjobOutputTypeOutputWithContext(context.Context) StreamingjobOutputTypeOutput
}

// An output object, containing all information associated with the named output. All outputs are contained under a streaming job.
type StreamingjobOutputTypeArgs struct {
	// Resource name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The properties that are associated with an output. Required on PUT (CreateOrReplace) requests.
	Properties OutputPropertiesResponseInput `pulumi:"properties"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (StreamingjobOutputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingjobOutputType)(nil)).Elem()
}

func (i StreamingjobOutputTypeArgs) ToStreamingjobOutputTypeOutput() StreamingjobOutputTypeOutput {
	return i.ToStreamingjobOutputTypeOutputWithContext(context.Background())
}

func (i StreamingjobOutputTypeArgs) ToStreamingjobOutputTypeOutputWithContext(ctx context.Context) StreamingjobOutputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingjobOutputTypeOutput)
}

// An output object, containing all information associated with the named output. All outputs are contained under a streaming job.
type StreamingjobOutputTypeOutput struct{ *pulumi.OutputState }

func (StreamingjobOutputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingjobOutputType)(nil)).Elem()
}

func (o StreamingjobOutputTypeOutput) ToStreamingjobOutputTypeOutput() StreamingjobOutputTypeOutput {
	return o
}

func (o StreamingjobOutputTypeOutput) ToStreamingjobOutputTypeOutputWithContext(ctx context.Context) StreamingjobOutputTypeOutput {
	return o
}

// Resource name
func (o StreamingjobOutputTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamingjobOutputType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The properties that are associated with an output. Required on PUT (CreateOrReplace) requests.
func (o StreamingjobOutputTypeOutput) Properties() OutputPropertiesResponseOutput {
	return o.ApplyT(func(v StreamingjobOutputType) OutputPropertiesResponse { return v.Properties }).(OutputPropertiesResponseOutput)
}

// Resource type
func (o StreamingjobOutputTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StreamingjobOutputType) string { return v.Type }).(pulumi.StringOutput)
}

// A transformation object, containing all information associated with the named transformation. All transformations are contained under a streaming job.
type Transformation struct {
	// Resource name
	Name *string `pulumi:"name"`
	// The properties that are associated with a transformation. Required on PUT (CreateOrReplace) requests.
	Properties *TransformationProperties `pulumi:"properties"`
}

// TransformationInput is an input type that accepts TransformationArgs and TransformationOutput values.
// You can construct a concrete instance of `TransformationInput` via:
//
//          TransformationArgs{...}
type TransformationInput interface {
	pulumi.Input

	ToTransformationOutput() TransformationOutput
	ToTransformationOutputWithContext(context.Context) TransformationOutput
}

// A transformation object, containing all information associated with the named transformation. All transformations are contained under a streaming job.
type TransformationArgs struct {
	// Resource name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The properties that are associated with a transformation. Required on PUT (CreateOrReplace) requests.
	Properties TransformationPropertiesPtrInput `pulumi:"properties"`
}

func (TransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Transformation)(nil)).Elem()
}

func (i TransformationArgs) ToTransformationOutput() TransformationOutput {
	return i.ToTransformationOutputWithContext(context.Background())
}

func (i TransformationArgs) ToTransformationOutputWithContext(ctx context.Context) TransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransformationOutput)
}

func (i TransformationArgs) ToTransformationPtrOutput() TransformationPtrOutput {
	return i.ToTransformationPtrOutputWithContext(context.Background())
}

func (i TransformationArgs) ToTransformationPtrOutputWithContext(ctx context.Context) TransformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransformationOutput).ToTransformationPtrOutputWithContext(ctx)
}

// TransformationPtrInput is an input type that accepts TransformationArgs, TransformationPtr and TransformationPtrOutput values.
// You can construct a concrete instance of `TransformationPtrInput` via:
//
//          TransformationArgs{...}
//
//  or:
//
//          nil
type TransformationPtrInput interface {
	pulumi.Input

	ToTransformationPtrOutput() TransformationPtrOutput
	ToTransformationPtrOutputWithContext(context.Context) TransformationPtrOutput
}

type transformationPtrType TransformationArgs

func TransformationPtr(v *TransformationArgs) TransformationPtrInput {
	return (*transformationPtrType)(v)
}

func (*transformationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Transformation)(nil)).Elem()
}

func (i *transformationPtrType) ToTransformationPtrOutput() TransformationPtrOutput {
	return i.ToTransformationPtrOutputWithContext(context.Background())
}

func (i *transformationPtrType) ToTransformationPtrOutputWithContext(ctx context.Context) TransformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransformationPtrOutput)
}

// A transformation object, containing all information associated with the named transformation. All transformations are contained under a streaming job.
type TransformationOutput struct{ *pulumi.OutputState }

func (TransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Transformation)(nil)).Elem()
}

func (o TransformationOutput) ToTransformationOutput() TransformationOutput {
	return o
}

func (o TransformationOutput) ToTransformationOutputWithContext(ctx context.Context) TransformationOutput {
	return o
}

func (o TransformationOutput) ToTransformationPtrOutput() TransformationPtrOutput {
	return o.ToTransformationPtrOutputWithContext(context.Background())
}

func (o TransformationOutput) ToTransformationPtrOutputWithContext(ctx context.Context) TransformationPtrOutput {
	return o.ApplyT(func(v Transformation) *Transformation {
		return &v
	}).(TransformationPtrOutput)
}

// Resource name
func (o TransformationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Transformation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The properties that are associated with a transformation. Required on PUT (CreateOrReplace) requests.
func (o TransformationOutput) Properties() TransformationPropertiesPtrOutput {
	return o.ApplyT(func(v Transformation) *TransformationProperties { return v.Properties }).(TransformationPropertiesPtrOutput)
}

type TransformationPtrOutput struct{ *pulumi.OutputState }

func (TransformationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Transformation)(nil)).Elem()
}

func (o TransformationPtrOutput) ToTransformationPtrOutput() TransformationPtrOutput {
	return o
}

func (o TransformationPtrOutput) ToTransformationPtrOutputWithContext(ctx context.Context) TransformationPtrOutput {
	return o
}

func (o TransformationPtrOutput) Elem() TransformationOutput {
	return o.ApplyT(func(v *Transformation) Transformation { return *v }).(TransformationOutput)
}

// Resource name
func (o TransformationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Transformation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The properties that are associated with a transformation. Required on PUT (CreateOrReplace) requests.
func (o TransformationPtrOutput) Properties() TransformationPropertiesPtrOutput {
	return o.ApplyT(func(v *Transformation) *TransformationProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(TransformationPropertiesPtrOutput)
}

// The properties that are associated with a transformation.
type TransformationProperties struct {
	// Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.
	Query *string `pulumi:"query"`
	// Specifies the number of streaming units that the streaming job uses.
	StreamingUnits *int `pulumi:"streamingUnits"`
}

// TransformationPropertiesInput is an input type that accepts TransformationPropertiesArgs and TransformationPropertiesOutput values.
// You can construct a concrete instance of `TransformationPropertiesInput` via:
//
//          TransformationPropertiesArgs{...}
type TransformationPropertiesInput interface {
	pulumi.Input

	ToTransformationPropertiesOutput() TransformationPropertiesOutput
	ToTransformationPropertiesOutputWithContext(context.Context) TransformationPropertiesOutput
}

// The properties that are associated with a transformation.
type TransformationPropertiesArgs struct {
	// Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.
	Query pulumi.StringPtrInput `pulumi:"query"`
	// Specifies the number of streaming units that the streaming job uses.
	StreamingUnits pulumi.IntPtrInput `pulumi:"streamingUnits"`
}

func (TransformationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformationProperties)(nil)).Elem()
}

func (i TransformationPropertiesArgs) ToTransformationPropertiesOutput() TransformationPropertiesOutput {
	return i.ToTransformationPropertiesOutputWithContext(context.Background())
}

func (i TransformationPropertiesArgs) ToTransformationPropertiesOutputWithContext(ctx context.Context) TransformationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransformationPropertiesOutput)
}

func (i TransformationPropertiesArgs) ToTransformationPropertiesPtrOutput() TransformationPropertiesPtrOutput {
	return i.ToTransformationPropertiesPtrOutputWithContext(context.Background())
}

func (i TransformationPropertiesArgs) ToTransformationPropertiesPtrOutputWithContext(ctx context.Context) TransformationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransformationPropertiesOutput).ToTransformationPropertiesPtrOutputWithContext(ctx)
}

// TransformationPropertiesPtrInput is an input type that accepts TransformationPropertiesArgs, TransformationPropertiesPtr and TransformationPropertiesPtrOutput values.
// You can construct a concrete instance of `TransformationPropertiesPtrInput` via:
//
//          TransformationPropertiesArgs{...}
//
//  or:
//
//          nil
type TransformationPropertiesPtrInput interface {
	pulumi.Input

	ToTransformationPropertiesPtrOutput() TransformationPropertiesPtrOutput
	ToTransformationPropertiesPtrOutputWithContext(context.Context) TransformationPropertiesPtrOutput
}

type transformationPropertiesPtrType TransformationPropertiesArgs

func TransformationPropertiesPtr(v *TransformationPropertiesArgs) TransformationPropertiesPtrInput {
	return (*transformationPropertiesPtrType)(v)
}

func (*transformationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransformationProperties)(nil)).Elem()
}

func (i *transformationPropertiesPtrType) ToTransformationPropertiesPtrOutput() TransformationPropertiesPtrOutput {
	return i.ToTransformationPropertiesPtrOutputWithContext(context.Background())
}

func (i *transformationPropertiesPtrType) ToTransformationPropertiesPtrOutputWithContext(ctx context.Context) TransformationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransformationPropertiesPtrOutput)
}

// The properties that are associated with a transformation.
type TransformationPropertiesOutput struct{ *pulumi.OutputState }

func (TransformationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformationProperties)(nil)).Elem()
}

func (o TransformationPropertiesOutput) ToTransformationPropertiesOutput() TransformationPropertiesOutput {
	return o
}

func (o TransformationPropertiesOutput) ToTransformationPropertiesOutputWithContext(ctx context.Context) TransformationPropertiesOutput {
	return o
}

func (o TransformationPropertiesOutput) ToTransformationPropertiesPtrOutput() TransformationPropertiesPtrOutput {
	return o.ToTransformationPropertiesPtrOutputWithContext(context.Background())
}

func (o TransformationPropertiesOutput) ToTransformationPropertiesPtrOutputWithContext(ctx context.Context) TransformationPropertiesPtrOutput {
	return o.ApplyT(func(v TransformationProperties) *TransformationProperties {
		return &v
	}).(TransformationPropertiesPtrOutput)
}

// Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.
func (o TransformationPropertiesOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransformationProperties) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// Specifies the number of streaming units that the streaming job uses.
func (o TransformationPropertiesOutput) StreamingUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TransformationProperties) *int { return v.StreamingUnits }).(pulumi.IntPtrOutput)
}

type TransformationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TransformationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransformationProperties)(nil)).Elem()
}

func (o TransformationPropertiesPtrOutput) ToTransformationPropertiesPtrOutput() TransformationPropertiesPtrOutput {
	return o
}

func (o TransformationPropertiesPtrOutput) ToTransformationPropertiesPtrOutputWithContext(ctx context.Context) TransformationPropertiesPtrOutput {
	return o
}

func (o TransformationPropertiesPtrOutput) Elem() TransformationPropertiesOutput {
	return o.ApplyT(func(v *TransformationProperties) TransformationProperties { return *v }).(TransformationPropertiesOutput)
}

// Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.
func (o TransformationPropertiesPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransformationProperties) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

// Specifies the number of streaming units that the streaming job uses.
func (o TransformationPropertiesPtrOutput) StreamingUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransformationProperties) *int {
		if v == nil {
			return nil
		}
		return v.StreamingUnits
	}).(pulumi.IntPtrOutput)
}

// The properties that are associated with a transformation.
type TransformationPropertiesResponse struct {
	// The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
	Etag string `pulumi:"etag"`
	// Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.
	Query *string `pulumi:"query"`
	// Specifies the number of streaming units that the streaming job uses.
	StreamingUnits *int `pulumi:"streamingUnits"`
}

// TransformationPropertiesResponseInput is an input type that accepts TransformationPropertiesResponseArgs and TransformationPropertiesResponseOutput values.
// You can construct a concrete instance of `TransformationPropertiesResponseInput` via:
//
//          TransformationPropertiesResponseArgs{...}
type TransformationPropertiesResponseInput interface {
	pulumi.Input

	ToTransformationPropertiesResponseOutput() TransformationPropertiesResponseOutput
	ToTransformationPropertiesResponseOutputWithContext(context.Context) TransformationPropertiesResponseOutput
}

// The properties that are associated with a transformation.
type TransformationPropertiesResponseArgs struct {
	// The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.
	Query pulumi.StringPtrInput `pulumi:"query"`
	// Specifies the number of streaming units that the streaming job uses.
	StreamingUnits pulumi.IntPtrInput `pulumi:"streamingUnits"`
}

func (TransformationPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformationPropertiesResponse)(nil)).Elem()
}

func (i TransformationPropertiesResponseArgs) ToTransformationPropertiesResponseOutput() TransformationPropertiesResponseOutput {
	return i.ToTransformationPropertiesResponseOutputWithContext(context.Background())
}

func (i TransformationPropertiesResponseArgs) ToTransformationPropertiesResponseOutputWithContext(ctx context.Context) TransformationPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransformationPropertiesResponseOutput)
}

func (i TransformationPropertiesResponseArgs) ToTransformationPropertiesResponsePtrOutput() TransformationPropertiesResponsePtrOutput {
	return i.ToTransformationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i TransformationPropertiesResponseArgs) ToTransformationPropertiesResponsePtrOutputWithContext(ctx context.Context) TransformationPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransformationPropertiesResponseOutput).ToTransformationPropertiesResponsePtrOutputWithContext(ctx)
}

// TransformationPropertiesResponsePtrInput is an input type that accepts TransformationPropertiesResponseArgs, TransformationPropertiesResponsePtr and TransformationPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `TransformationPropertiesResponsePtrInput` via:
//
//          TransformationPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type TransformationPropertiesResponsePtrInput interface {
	pulumi.Input

	ToTransformationPropertiesResponsePtrOutput() TransformationPropertiesResponsePtrOutput
	ToTransformationPropertiesResponsePtrOutputWithContext(context.Context) TransformationPropertiesResponsePtrOutput
}

type transformationPropertiesResponsePtrType TransformationPropertiesResponseArgs

func TransformationPropertiesResponsePtr(v *TransformationPropertiesResponseArgs) TransformationPropertiesResponsePtrInput {
	return (*transformationPropertiesResponsePtrType)(v)
}

func (*transformationPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransformationPropertiesResponse)(nil)).Elem()
}

func (i *transformationPropertiesResponsePtrType) ToTransformationPropertiesResponsePtrOutput() TransformationPropertiesResponsePtrOutput {
	return i.ToTransformationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *transformationPropertiesResponsePtrType) ToTransformationPropertiesResponsePtrOutputWithContext(ctx context.Context) TransformationPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransformationPropertiesResponsePtrOutput)
}

// The properties that are associated with a transformation.
type TransformationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TransformationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformationPropertiesResponse)(nil)).Elem()
}

func (o TransformationPropertiesResponseOutput) ToTransformationPropertiesResponseOutput() TransformationPropertiesResponseOutput {
	return o
}

func (o TransformationPropertiesResponseOutput) ToTransformationPropertiesResponseOutputWithContext(ctx context.Context) TransformationPropertiesResponseOutput {
	return o
}

func (o TransformationPropertiesResponseOutput) ToTransformationPropertiesResponsePtrOutput() TransformationPropertiesResponsePtrOutput {
	return o.ToTransformationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o TransformationPropertiesResponseOutput) ToTransformationPropertiesResponsePtrOutputWithContext(ctx context.Context) TransformationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TransformationPropertiesResponse) *TransformationPropertiesResponse {
		return &v
	}).(TransformationPropertiesResponsePtrOutput)
}

// The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
func (o TransformationPropertiesResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v TransformationPropertiesResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.
func (o TransformationPropertiesResponseOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransformationPropertiesResponse) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// Specifies the number of streaming units that the streaming job uses.
func (o TransformationPropertiesResponseOutput) StreamingUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TransformationPropertiesResponse) *int { return v.StreamingUnits }).(pulumi.IntPtrOutput)
}

type TransformationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TransformationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransformationPropertiesResponse)(nil)).Elem()
}

func (o TransformationPropertiesResponsePtrOutput) ToTransformationPropertiesResponsePtrOutput() TransformationPropertiesResponsePtrOutput {
	return o
}

func (o TransformationPropertiesResponsePtrOutput) ToTransformationPropertiesResponsePtrOutputWithContext(ctx context.Context) TransformationPropertiesResponsePtrOutput {
	return o
}

func (o TransformationPropertiesResponsePtrOutput) Elem() TransformationPropertiesResponseOutput {
	return o.ApplyT(func(v *TransformationPropertiesResponse) TransformationPropertiesResponse { return *v }).(TransformationPropertiesResponseOutput)
}

// The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
func (o TransformationPropertiesResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransformationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.
func (o TransformationPropertiesResponsePtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransformationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

// Specifies the number of streaming units that the streaming job uses.
func (o TransformationPropertiesResponsePtrOutput) StreamingUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransformationPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.StreamingUnits
	}).(pulumi.IntPtrOutput)
}

// A transformation object, containing all information associated with the named transformation. All transformations are contained under a streaming job.
type TransformationResponse struct {
	// Resource Id
	Id string `pulumi:"id"`
	// Resource name
	Name *string `pulumi:"name"`
	// The properties that are associated with a transformation. Required on PUT (CreateOrReplace) requests.
	Properties *TransformationPropertiesResponse `pulumi:"properties"`
	// Resource type
	Type string `pulumi:"type"`
}

// TransformationResponseInput is an input type that accepts TransformationResponseArgs and TransformationResponseOutput values.
// You can construct a concrete instance of `TransformationResponseInput` via:
//
//          TransformationResponseArgs{...}
type TransformationResponseInput interface {
	pulumi.Input

	ToTransformationResponseOutput() TransformationResponseOutput
	ToTransformationResponseOutputWithContext(context.Context) TransformationResponseOutput
}

// A transformation object, containing all information associated with the named transformation. All transformations are contained under a streaming job.
type TransformationResponseArgs struct {
	// Resource Id
	Id pulumi.StringInput `pulumi:"id"`
	// Resource name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The properties that are associated with a transformation. Required on PUT (CreateOrReplace) requests.
	Properties TransformationPropertiesResponsePtrInput `pulumi:"properties"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (TransformationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformationResponse)(nil)).Elem()
}

func (i TransformationResponseArgs) ToTransformationResponseOutput() TransformationResponseOutput {
	return i.ToTransformationResponseOutputWithContext(context.Background())
}

func (i TransformationResponseArgs) ToTransformationResponseOutputWithContext(ctx context.Context) TransformationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransformationResponseOutput)
}

func (i TransformationResponseArgs) ToTransformationResponsePtrOutput() TransformationResponsePtrOutput {
	return i.ToTransformationResponsePtrOutputWithContext(context.Background())
}

func (i TransformationResponseArgs) ToTransformationResponsePtrOutputWithContext(ctx context.Context) TransformationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransformationResponseOutput).ToTransformationResponsePtrOutputWithContext(ctx)
}

// TransformationResponsePtrInput is an input type that accepts TransformationResponseArgs, TransformationResponsePtr and TransformationResponsePtrOutput values.
// You can construct a concrete instance of `TransformationResponsePtrInput` via:
//
//          TransformationResponseArgs{...}
//
//  or:
//
//          nil
type TransformationResponsePtrInput interface {
	pulumi.Input

	ToTransformationResponsePtrOutput() TransformationResponsePtrOutput
	ToTransformationResponsePtrOutputWithContext(context.Context) TransformationResponsePtrOutput
}

type transformationResponsePtrType TransformationResponseArgs

func TransformationResponsePtr(v *TransformationResponseArgs) TransformationResponsePtrInput {
	return (*transformationResponsePtrType)(v)
}

func (*transformationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransformationResponse)(nil)).Elem()
}

func (i *transformationResponsePtrType) ToTransformationResponsePtrOutput() TransformationResponsePtrOutput {
	return i.ToTransformationResponsePtrOutputWithContext(context.Background())
}

func (i *transformationResponsePtrType) ToTransformationResponsePtrOutputWithContext(ctx context.Context) TransformationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransformationResponsePtrOutput)
}

// A transformation object, containing all information associated with the named transformation. All transformations are contained under a streaming job.
type TransformationResponseOutput struct{ *pulumi.OutputState }

func (TransformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformationResponse)(nil)).Elem()
}

func (o TransformationResponseOutput) ToTransformationResponseOutput() TransformationResponseOutput {
	return o
}

func (o TransformationResponseOutput) ToTransformationResponseOutputWithContext(ctx context.Context) TransformationResponseOutput {
	return o
}

func (o TransformationResponseOutput) ToTransformationResponsePtrOutput() TransformationResponsePtrOutput {
	return o.ToTransformationResponsePtrOutputWithContext(context.Background())
}

func (o TransformationResponseOutput) ToTransformationResponsePtrOutputWithContext(ctx context.Context) TransformationResponsePtrOutput {
	return o.ApplyT(func(v TransformationResponse) *TransformationResponse {
		return &v
	}).(TransformationResponsePtrOutput)
}

// Resource Id
func (o TransformationResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TransformationResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name
func (o TransformationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransformationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The properties that are associated with a transformation. Required on PUT (CreateOrReplace) requests.
func (o TransformationResponseOutput) Properties() TransformationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TransformationResponse) *TransformationPropertiesResponse { return v.Properties }).(TransformationPropertiesResponsePtrOutput)
}

// Resource type
func (o TransformationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TransformationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type TransformationResponsePtrOutput struct{ *pulumi.OutputState }

func (TransformationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransformationResponse)(nil)).Elem()
}

func (o TransformationResponsePtrOutput) ToTransformationResponsePtrOutput() TransformationResponsePtrOutput {
	return o
}

func (o TransformationResponsePtrOutput) ToTransformationResponsePtrOutputWithContext(ctx context.Context) TransformationResponsePtrOutput {
	return o
}

func (o TransformationResponsePtrOutput) Elem() TransformationResponseOutput {
	return o.ApplyT(func(v *TransformationResponse) TransformationResponse { return *v }).(TransformationResponseOutput)
}

// Resource Id
func (o TransformationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource name
func (o TransformationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransformationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The properties that are associated with a transformation. Required on PUT (CreateOrReplace) requests.
func (o TransformationResponsePtrOutput) Properties() TransformationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *TransformationResponse) *TransformationPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(TransformationPropertiesResponsePtrOutput)
}

// Resource type
func (o TransformationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(DiagnosticConditionOutput{})
	pulumi.RegisterOutputType(DiagnosticConditionResponseOutput{})
	pulumi.RegisterOutputType(DiagnosticConditionResponseArrayOutput{})
	pulumi.RegisterOutputType(DiagnosticsOutput{})
	pulumi.RegisterOutputType(DiagnosticsResponseOutput{})
	pulumi.RegisterOutputType(DiagnosticsResponsePtrOutput{})
	pulumi.RegisterOutputType(FunctionOutput{})
	pulumi.RegisterOutputType(FunctionArrayOutput{})
	pulumi.RegisterOutputType(FunctionPropertiesOutput{})
	pulumi.RegisterOutputType(FunctionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FunctionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(FunctionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(FunctionResponseOutput{})
	pulumi.RegisterOutputType(FunctionResponseArrayOutput{})
	pulumi.RegisterOutputType(InputOutput{})
	pulumi.RegisterOutputType(InputArrayOutput{})
	pulumi.RegisterOutputType(InputPropertiesOutput{})
	pulumi.RegisterOutputType(InputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(InputPropertiesResponseOutput{})
	pulumi.RegisterOutputType(InputPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(InputResponseOutput{})
	pulumi.RegisterOutputType(InputResponseArrayOutput{})
	pulumi.RegisterOutputType(OutputOutput{})
	pulumi.RegisterOutputType(OutputArrayOutput{})
	pulumi.RegisterOutputType(OutputDataSourceOutput{})
	pulumi.RegisterOutputType(OutputDataSourcePtrOutput{})
	pulumi.RegisterOutputType(OutputDataSourceResponseOutput{})
	pulumi.RegisterOutputType(OutputDataSourceResponsePtrOutput{})
	pulumi.RegisterOutputType(OutputPropertiesOutput{})
	pulumi.RegisterOutputType(OutputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(OutputPropertiesResponseOutput{})
	pulumi.RegisterOutputType(OutputPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(OutputResponseOutput{})
	pulumi.RegisterOutputType(OutputResponseArrayOutput{})
	pulumi.RegisterOutputType(SerializationOutput{})
	pulumi.RegisterOutputType(SerializationPtrOutput{})
	pulumi.RegisterOutputType(SerializationResponseOutput{})
	pulumi.RegisterOutputType(SerializationResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(StreamingJobPropertiesOutput{})
	pulumi.RegisterOutputType(StreamingJobPropertiesPtrOutput{})
	pulumi.RegisterOutputType(StreamingJobPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StreamingJobPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(StreamingjobTypeOutput{})
	pulumi.RegisterOutputType(StreamingjobFunctionTypeOutput{})
	pulumi.RegisterOutputType(StreamingjobInputTypeOutput{})
	pulumi.RegisterOutputType(StreamingjobOutputTypeOutput{})
	pulumi.RegisterOutputType(TransformationOutput{})
	pulumi.RegisterOutputType(TransformationPtrOutput{})
	pulumi.RegisterOutputType(TransformationPropertiesOutput{})
	pulumi.RegisterOutputType(TransformationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TransformationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TransformationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TransformationResponseOutput{})
	pulumi.RegisterOutputType(TransformationResponsePtrOutput{})
}
