// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package streamanalytics

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An output object, containing all information associated with the named output. All outputs are contained under a streaming job.
type Output struct {
	pulumi.CustomResourceState

	// Resource name
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// The properties that are associated with an output. Required on PUT (CreateOrReplace) requests.
	Properties OutputPropertiesResponseOutput `pulumi:"properties"`
	// Resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewOutput registers a new resource with the given unique name, arguments, and options.
func NewOutput(ctx *pulumi.Context,
	name string, args *OutputArgs, opts ...pulumi.ResourceOption) (*Output, error) {
	if args == nil || args.JobName == nil {
		return nil, errors.New("missing required argument 'JobName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &OutputArgs{}
	}
	var resource Output
	err := ctx.RegisterResource("azurerm:streamanalytics:Output", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOutput gets an existing Output resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOutput(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OutputState, opts ...pulumi.ResourceOption) (*Output, error) {
	var resource Output
	err := ctx.ReadResource("azurerm:streamanalytics:Output", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Output resources.
type outputState struct {
	// Resource name
	Name *string `pulumi:"name"`
	// The properties that are associated with an output. Required on PUT (CreateOrReplace) requests.
	Properties *OutputPropertiesResponse `pulumi:"properties"`
	// Resource type
	Type *string `pulumi:"type"`
}

type OutputState struct {
	// Resource name
	Name pulumi.StringPtrInput
	// The properties that are associated with an output. Required on PUT (CreateOrReplace) requests.
	Properties OutputPropertiesResponsePtrInput
	// Resource type
	Type pulumi.StringPtrInput
}

func (OutputState) ElementType() reflect.Type {
	return reflect.TypeOf((*outputState)(nil)).Elem()
}

type outputArgs struct {
	// The name of the streaming job.
	JobName string `pulumi:"jobName"`
	// The name of the output.
	Name string `pulumi:"name"`
	// The properties that are associated with an output. Required on PUT (CreateOrReplace) requests.
	Properties *OutputProperties `pulumi:"properties"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a Output resource.
type OutputArgs struct {
	// The name of the streaming job.
	JobName pulumi.StringInput
	// The name of the output.
	Name pulumi.StringInput
	// The properties that are associated with an output. Required on PUT (CreateOrReplace) requests.
	Properties OutputPropertiesPtrInput
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput
}

func (OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*outputArgs)(nil)).Elem()
}
