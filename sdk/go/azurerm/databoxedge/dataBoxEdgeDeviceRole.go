// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package databoxedge

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Compute role.
type DataBoxEdgeDeviceRole struct {
	pulumi.CustomResourceState

	// Role type.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// The object name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The hierarchical type of the object.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDataBoxEdgeDeviceRole registers a new resource with the given unique name, arguments, and options.
func NewDataBoxEdgeDeviceRole(ctx *pulumi.Context,
	name string, args *DataBoxEdgeDeviceRoleArgs, opts ...pulumi.ResourceOption) (*DataBoxEdgeDeviceRole, error) {
	if args == nil || args.DeviceName == nil {
		return nil, errors.New("missing required argument 'DeviceName'")
	}
	if args == nil || args.Kind == nil {
		return nil, errors.New("missing required argument 'Kind'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &DataBoxEdgeDeviceRoleArgs{}
	}
	var resource DataBoxEdgeDeviceRole
	err := ctx.RegisterResource("azurerm:databoxedge:DataBoxEdgeDeviceRole", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataBoxEdgeDeviceRole gets an existing DataBoxEdgeDeviceRole resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataBoxEdgeDeviceRole(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataBoxEdgeDeviceRoleState, opts ...pulumi.ResourceOption) (*DataBoxEdgeDeviceRole, error) {
	var resource DataBoxEdgeDeviceRole
	err := ctx.ReadResource("azurerm:databoxedge:DataBoxEdgeDeviceRole", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataBoxEdgeDeviceRole resources.
type dataBoxEdgeDeviceRoleState struct {
	// Role type.
	Kind *string `pulumi:"kind"`
	// The object name.
	Name *string `pulumi:"name"`
	// The hierarchical type of the object.
	Type *string `pulumi:"type"`
}

type DataBoxEdgeDeviceRoleState struct {
	// Role type.
	Kind pulumi.StringPtrInput
	// The object name.
	Name pulumi.StringPtrInput
	// The hierarchical type of the object.
	Type pulumi.StringPtrInput
}

func (DataBoxEdgeDeviceRoleState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataBoxEdgeDeviceRoleState)(nil)).Elem()
}

type dataBoxEdgeDeviceRoleArgs struct {
	// The device name.
	DeviceName string `pulumi:"deviceName"`
	// Role type.
	Kind string `pulumi:"kind"`
	// The role name.
	Name string `pulumi:"name"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a DataBoxEdgeDeviceRole resource.
type DataBoxEdgeDeviceRoleArgs struct {
	// The device name.
	DeviceName pulumi.StringInput
	// Role type.
	Kind pulumi.StringInput
	// The role name.
	Name pulumi.StringInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
}

func (DataBoxEdgeDeviceRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataBoxEdgeDeviceRoleArgs)(nil)).Elem()
}
