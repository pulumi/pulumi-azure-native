// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190801

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The shipping address of the customer.
type Address struct {
	// The address line1.
	AddressLine1 string `pulumi:"addressLine1"`
	// The address line2.
	AddressLine2 *string `pulumi:"addressLine2"`
	// The address line3.
	AddressLine3 *string `pulumi:"addressLine3"`
	// The city name.
	City string `pulumi:"city"`
	// The country name.
	Country string `pulumi:"country"`
	// The postal code.
	PostalCode string `pulumi:"postalCode"`
	// The state name.
	State string `pulumi:"state"`
}

// AddressInput is an input type that accepts AddressArgs and AddressOutput values.
// You can construct a concrete instance of `AddressInput` via:
//
//          AddressArgs{...}
type AddressInput interface {
	pulumi.Input

	ToAddressOutput() AddressOutput
	ToAddressOutputWithContext(context.Context) AddressOutput
}

// The shipping address of the customer.
type AddressArgs struct {
	// The address line1.
	AddressLine1 pulumi.StringInput `pulumi:"addressLine1"`
	// The address line2.
	AddressLine2 pulumi.StringPtrInput `pulumi:"addressLine2"`
	// The address line3.
	AddressLine3 pulumi.StringPtrInput `pulumi:"addressLine3"`
	// The city name.
	City pulumi.StringInput `pulumi:"city"`
	// The country name.
	Country pulumi.StringInput `pulumi:"country"`
	// The postal code.
	PostalCode pulumi.StringInput `pulumi:"postalCode"`
	// The state name.
	State pulumi.StringInput `pulumi:"state"`
}

func (AddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Address)(nil)).Elem()
}

func (i AddressArgs) ToAddressOutput() AddressOutput {
	return i.ToAddressOutputWithContext(context.Background())
}

func (i AddressArgs) ToAddressOutputWithContext(ctx context.Context) AddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressOutput)
}

func (i AddressArgs) ToAddressPtrOutput() AddressPtrOutput {
	return i.ToAddressPtrOutputWithContext(context.Background())
}

func (i AddressArgs) ToAddressPtrOutputWithContext(ctx context.Context) AddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressOutput).ToAddressPtrOutputWithContext(ctx)
}

// AddressPtrInput is an input type that accepts AddressArgs, AddressPtr and AddressPtrOutput values.
// You can construct a concrete instance of `AddressPtrInput` via:
//
//          AddressArgs{...}
//
//  or:
//
//          nil
type AddressPtrInput interface {
	pulumi.Input

	ToAddressPtrOutput() AddressPtrOutput
	ToAddressPtrOutputWithContext(context.Context) AddressPtrOutput
}

type addressPtrType AddressArgs

func AddressPtr(v *AddressArgs) AddressPtrInput {
	return (*addressPtrType)(v)
}

func (*addressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Address)(nil)).Elem()
}

func (i *addressPtrType) ToAddressPtrOutput() AddressPtrOutput {
	return i.ToAddressPtrOutputWithContext(context.Background())
}

func (i *addressPtrType) ToAddressPtrOutputWithContext(ctx context.Context) AddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressPtrOutput)
}

// The shipping address of the customer.
type AddressOutput struct{ *pulumi.OutputState }

func (AddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Address)(nil)).Elem()
}

func (o AddressOutput) ToAddressOutput() AddressOutput {
	return o
}

func (o AddressOutput) ToAddressOutputWithContext(ctx context.Context) AddressOutput {
	return o
}

func (o AddressOutput) ToAddressPtrOutput() AddressPtrOutput {
	return o.ToAddressPtrOutputWithContext(context.Background())
}

func (o AddressOutput) ToAddressPtrOutputWithContext(ctx context.Context) AddressPtrOutput {
	return o.ApplyT(func(v Address) *Address {
		return &v
	}).(AddressPtrOutput)
}

// The address line1.
func (o AddressOutput) AddressLine1() pulumi.StringOutput {
	return o.ApplyT(func(v Address) string { return v.AddressLine1 }).(pulumi.StringOutput)
}

// The address line2.
func (o AddressOutput) AddressLine2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Address) *string { return v.AddressLine2 }).(pulumi.StringPtrOutput)
}

// The address line3.
func (o AddressOutput) AddressLine3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Address) *string { return v.AddressLine3 }).(pulumi.StringPtrOutput)
}

// The city name.
func (o AddressOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v Address) string { return v.City }).(pulumi.StringOutput)
}

// The country name.
func (o AddressOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v Address) string { return v.Country }).(pulumi.StringOutput)
}

// The postal code.
func (o AddressOutput) PostalCode() pulumi.StringOutput {
	return o.ApplyT(func(v Address) string { return v.PostalCode }).(pulumi.StringOutput)
}

// The state name.
func (o AddressOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v Address) string { return v.State }).(pulumi.StringOutput)
}

type AddressPtrOutput struct{ *pulumi.OutputState }

func (AddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Address)(nil)).Elem()
}

func (o AddressPtrOutput) ToAddressPtrOutput() AddressPtrOutput {
	return o
}

func (o AddressPtrOutput) ToAddressPtrOutputWithContext(ctx context.Context) AddressPtrOutput {
	return o
}

func (o AddressPtrOutput) Elem() AddressOutput {
	return o.ApplyT(func(v *Address) Address { return *v }).(AddressOutput)
}

// The address line1.
func (o AddressPtrOutput) AddressLine1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Address) *string {
		if v == nil {
			return nil
		}
		return &v.AddressLine1
	}).(pulumi.StringPtrOutput)
}

// The address line2.
func (o AddressPtrOutput) AddressLine2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Address) *string {
		if v == nil {
			return nil
		}
		return v.AddressLine2
	}).(pulumi.StringPtrOutput)
}

// The address line3.
func (o AddressPtrOutput) AddressLine3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Address) *string {
		if v == nil {
			return nil
		}
		return v.AddressLine3
	}).(pulumi.StringPtrOutput)
}

// The city name.
func (o AddressPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Address) *string {
		if v == nil {
			return nil
		}
		return &v.City
	}).(pulumi.StringPtrOutput)
}

// The country name.
func (o AddressPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Address) *string {
		if v == nil {
			return nil
		}
		return &v.Country
	}).(pulumi.StringPtrOutput)
}

// The postal code.
func (o AddressPtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Address) *string {
		if v == nil {
			return nil
		}
		return &v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// The state name.
func (o AddressPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Address) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// The shipping address of the customer.
type AddressResponse struct {
	// The address line1.
	AddressLine1 string `pulumi:"addressLine1"`
	// The address line2.
	AddressLine2 *string `pulumi:"addressLine2"`
	// The address line3.
	AddressLine3 *string `pulumi:"addressLine3"`
	// The city name.
	City string `pulumi:"city"`
	// The country name.
	Country string `pulumi:"country"`
	// The postal code.
	PostalCode string `pulumi:"postalCode"`
	// The state name.
	State string `pulumi:"state"`
}

// AddressResponseInput is an input type that accepts AddressResponseArgs and AddressResponseOutput values.
// You can construct a concrete instance of `AddressResponseInput` via:
//
//          AddressResponseArgs{...}
type AddressResponseInput interface {
	pulumi.Input

	ToAddressResponseOutput() AddressResponseOutput
	ToAddressResponseOutputWithContext(context.Context) AddressResponseOutput
}

// The shipping address of the customer.
type AddressResponseArgs struct {
	// The address line1.
	AddressLine1 pulumi.StringInput `pulumi:"addressLine1"`
	// The address line2.
	AddressLine2 pulumi.StringPtrInput `pulumi:"addressLine2"`
	// The address line3.
	AddressLine3 pulumi.StringPtrInput `pulumi:"addressLine3"`
	// The city name.
	City pulumi.StringInput `pulumi:"city"`
	// The country name.
	Country pulumi.StringInput `pulumi:"country"`
	// The postal code.
	PostalCode pulumi.StringInput `pulumi:"postalCode"`
	// The state name.
	State pulumi.StringInput `pulumi:"state"`
}

func (AddressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressResponse)(nil)).Elem()
}

func (i AddressResponseArgs) ToAddressResponseOutput() AddressResponseOutput {
	return i.ToAddressResponseOutputWithContext(context.Background())
}

func (i AddressResponseArgs) ToAddressResponseOutputWithContext(ctx context.Context) AddressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressResponseOutput)
}

func (i AddressResponseArgs) ToAddressResponsePtrOutput() AddressResponsePtrOutput {
	return i.ToAddressResponsePtrOutputWithContext(context.Background())
}

func (i AddressResponseArgs) ToAddressResponsePtrOutputWithContext(ctx context.Context) AddressResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressResponseOutput).ToAddressResponsePtrOutputWithContext(ctx)
}

// AddressResponsePtrInput is an input type that accepts AddressResponseArgs, AddressResponsePtr and AddressResponsePtrOutput values.
// You can construct a concrete instance of `AddressResponsePtrInput` via:
//
//          AddressResponseArgs{...}
//
//  or:
//
//          nil
type AddressResponsePtrInput interface {
	pulumi.Input

	ToAddressResponsePtrOutput() AddressResponsePtrOutput
	ToAddressResponsePtrOutputWithContext(context.Context) AddressResponsePtrOutput
}

type addressResponsePtrType AddressResponseArgs

func AddressResponsePtr(v *AddressResponseArgs) AddressResponsePtrInput {
	return (*addressResponsePtrType)(v)
}

func (*addressResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressResponse)(nil)).Elem()
}

func (i *addressResponsePtrType) ToAddressResponsePtrOutput() AddressResponsePtrOutput {
	return i.ToAddressResponsePtrOutputWithContext(context.Background())
}

func (i *addressResponsePtrType) ToAddressResponsePtrOutputWithContext(ctx context.Context) AddressResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressResponsePtrOutput)
}

// The shipping address of the customer.
type AddressResponseOutput struct{ *pulumi.OutputState }

func (AddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressResponse)(nil)).Elem()
}

func (o AddressResponseOutput) ToAddressResponseOutput() AddressResponseOutput {
	return o
}

func (o AddressResponseOutput) ToAddressResponseOutputWithContext(ctx context.Context) AddressResponseOutput {
	return o
}

func (o AddressResponseOutput) ToAddressResponsePtrOutput() AddressResponsePtrOutput {
	return o.ToAddressResponsePtrOutputWithContext(context.Background())
}

func (o AddressResponseOutput) ToAddressResponsePtrOutputWithContext(ctx context.Context) AddressResponsePtrOutput {
	return o.ApplyT(func(v AddressResponse) *AddressResponse {
		return &v
	}).(AddressResponsePtrOutput)
}

// The address line1.
func (o AddressResponseOutput) AddressLine1() pulumi.StringOutput {
	return o.ApplyT(func(v AddressResponse) string { return v.AddressLine1 }).(pulumi.StringOutput)
}

// The address line2.
func (o AddressResponseOutput) AddressLine2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressResponse) *string { return v.AddressLine2 }).(pulumi.StringPtrOutput)
}

// The address line3.
func (o AddressResponseOutput) AddressLine3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressResponse) *string { return v.AddressLine3 }).(pulumi.StringPtrOutput)
}

// The city name.
func (o AddressResponseOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v AddressResponse) string { return v.City }).(pulumi.StringOutput)
}

// The country name.
func (o AddressResponseOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v AddressResponse) string { return v.Country }).(pulumi.StringOutput)
}

// The postal code.
func (o AddressResponseOutput) PostalCode() pulumi.StringOutput {
	return o.ApplyT(func(v AddressResponse) string { return v.PostalCode }).(pulumi.StringOutput)
}

// The state name.
func (o AddressResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v AddressResponse) string { return v.State }).(pulumi.StringOutput)
}

type AddressResponsePtrOutput struct{ *pulumi.OutputState }

func (AddressResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressResponse)(nil)).Elem()
}

func (o AddressResponsePtrOutput) ToAddressResponsePtrOutput() AddressResponsePtrOutput {
	return o
}

func (o AddressResponsePtrOutput) ToAddressResponsePtrOutputWithContext(ctx context.Context) AddressResponsePtrOutput {
	return o
}

func (o AddressResponsePtrOutput) Elem() AddressResponseOutput {
	return o.ApplyT(func(v *AddressResponse) AddressResponse { return *v }).(AddressResponseOutput)
}

// The address line1.
func (o AddressResponsePtrOutput) AddressLine1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AddressLine1
	}).(pulumi.StringPtrOutput)
}

// The address line2.
func (o AddressResponsePtrOutput) AddressLine2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressLine2
	}).(pulumi.StringPtrOutput)
}

// The address line3.
func (o AddressResponsePtrOutput) AddressLine3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressLine3
	}).(pulumi.StringPtrOutput)
}

// The city name.
func (o AddressResponsePtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.City
	}).(pulumi.StringPtrOutput)
}

// The country name.
func (o AddressResponsePtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Country
	}).(pulumi.StringPtrOutput)
}

// The postal code.
func (o AddressResponsePtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// The state name.
func (o AddressResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecret struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
	EncryptionCertThumbprint *string `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value string `pulumi:"value"`
}

// AsymmetricEncryptedSecretInput is an input type that accepts AsymmetricEncryptedSecretArgs and AsymmetricEncryptedSecretOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretInput` via:
//
//          AsymmetricEncryptedSecretArgs{...}
type AsymmetricEncryptedSecretInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretOutput() AsymmetricEncryptedSecretOutput
	ToAsymmetricEncryptedSecretOutputWithContext(context.Context) AsymmetricEncryptedSecretOutput
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretArgs struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm pulumi.StringInput `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
	EncryptionCertThumbprint pulumi.StringPtrInput `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AsymmetricEncryptedSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecret)(nil)).Elem()
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretOutput() AsymmetricEncryptedSecretOutput {
	return i.ToAsymmetricEncryptedSecretOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretOutput)
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return i.ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretOutput).ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx)
}

// AsymmetricEncryptedSecretPtrInput is an input type that accepts AsymmetricEncryptedSecretArgs, AsymmetricEncryptedSecretPtr and AsymmetricEncryptedSecretPtrOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretPtrInput` via:
//
//          AsymmetricEncryptedSecretArgs{...}
//
//  or:
//
//          nil
type AsymmetricEncryptedSecretPtrInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput
	ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Context) AsymmetricEncryptedSecretPtrOutput
}

type asymmetricEncryptedSecretPtrType AsymmetricEncryptedSecretArgs

func AsymmetricEncryptedSecretPtr(v *AsymmetricEncryptedSecretArgs) AsymmetricEncryptedSecretPtrInput {
	return (*asymmetricEncryptedSecretPtrType)(v)
}

func (*asymmetricEncryptedSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecret)(nil)).Elem()
}

func (i *asymmetricEncryptedSecretPtrType) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return i.ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Background())
}

func (i *asymmetricEncryptedSecretPtrType) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretPtrOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecret)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretOutput() AsymmetricEncryptedSecretOutput {
	return o
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretOutput {
	return o
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return o.ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Background())
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) *AsymmetricEncryptedSecret {
		return &v
	}).(AsymmetricEncryptedSecretPtrOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
func (o AsymmetricEncryptedSecretOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) *string { return v.EncryptionCertThumbprint }).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) string { return v.Value }).(pulumi.StringOutput)
}

type AsymmetricEncryptedSecretPtrOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecret)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretPtrOutput) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretPtrOutput) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretPtrOutput) Elem() AsymmetricEncryptedSecretOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) AsymmetricEncryptedSecret { return *v }).(AsymmetricEncryptedSecretOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretPtrOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
func (o AsymmetricEncryptedSecretPtrOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionCertThumbprint
	}).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretResponse struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
	EncryptionCertThumbprint *string `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value string `pulumi:"value"`
}

// AsymmetricEncryptedSecretResponseInput is an input type that accepts AsymmetricEncryptedSecretResponseArgs and AsymmetricEncryptedSecretResponseOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretResponseInput` via:
//
//          AsymmetricEncryptedSecretResponseArgs{...}
type AsymmetricEncryptedSecretResponseInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretResponseOutput() AsymmetricEncryptedSecretResponseOutput
	ToAsymmetricEncryptedSecretResponseOutputWithContext(context.Context) AsymmetricEncryptedSecretResponseOutput
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretResponseArgs struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm pulumi.StringInput `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
	EncryptionCertThumbprint pulumi.StringPtrInput `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AsymmetricEncryptedSecretResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecretResponse)(nil)).Elem()
}

func (i AsymmetricEncryptedSecretResponseArgs) ToAsymmetricEncryptedSecretResponseOutput() AsymmetricEncryptedSecretResponseOutput {
	return i.ToAsymmetricEncryptedSecretResponseOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretResponseArgs) ToAsymmetricEncryptedSecretResponseOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretResponseOutput)
}

func (i AsymmetricEncryptedSecretResponseArgs) ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput {
	return i.ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretResponseArgs) ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretResponseOutput).ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx)
}

// AsymmetricEncryptedSecretResponsePtrInput is an input type that accepts AsymmetricEncryptedSecretResponseArgs, AsymmetricEncryptedSecretResponsePtr and AsymmetricEncryptedSecretResponsePtrOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretResponsePtrInput` via:
//
//          AsymmetricEncryptedSecretResponseArgs{...}
//
//  or:
//
//          nil
type AsymmetricEncryptedSecretResponsePtrInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput
	ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(context.Context) AsymmetricEncryptedSecretResponsePtrOutput
}

type asymmetricEncryptedSecretResponsePtrType AsymmetricEncryptedSecretResponseArgs

func AsymmetricEncryptedSecretResponsePtr(v *AsymmetricEncryptedSecretResponseArgs) AsymmetricEncryptedSecretResponsePtrInput {
	return (*asymmetricEncryptedSecretResponsePtrType)(v)
}

func (*asymmetricEncryptedSecretResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecretResponse)(nil)).Elem()
}

func (i *asymmetricEncryptedSecretResponsePtrType) ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput {
	return i.ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(context.Background())
}

func (i *asymmetricEncryptedSecretResponsePtrType) ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretResponseOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecretResponse)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretResponseOutput) ToAsymmetricEncryptedSecretResponseOutput() AsymmetricEncryptedSecretResponseOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponseOutput) ToAsymmetricEncryptedSecretResponseOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponseOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponseOutput) ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(context.Background())
}

func (o AsymmetricEncryptedSecretResponseOutput) ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) *AsymmetricEncryptedSecretResponse {
		return &v
	}).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretResponseOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
func (o AsymmetricEncryptedSecretResponseOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) *string { return v.EncryptionCertThumbprint }).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) string { return v.Value }).(pulumi.StringOutput)
}

type AsymmetricEncryptedSecretResponsePtrOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecretResponse)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretResponsePtrOutput) ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponsePtrOutput) ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponsePtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponsePtrOutput) Elem() AsymmetricEncryptedSecretResponseOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) AsymmetricEncryptedSecretResponse { return *v }).(AsymmetricEncryptedSecretResponseOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretResponsePtrOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
func (o AsymmetricEncryptedSecretResponsePtrOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionCertThumbprint
	}).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

// Azure container mapping of the endpoint.
type AzureContainerInfo struct {
	// Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
	ContainerName string `pulumi:"containerName"`
	// Storage format used for the file represented by the share.
	DataFormat string `pulumi:"dataFormat"`
	// ID of the storage account credential used to access storage.
	StorageAccountCredentialId string `pulumi:"storageAccountCredentialId"`
}

// AzureContainerInfoInput is an input type that accepts AzureContainerInfoArgs and AzureContainerInfoOutput values.
// You can construct a concrete instance of `AzureContainerInfoInput` via:
//
//          AzureContainerInfoArgs{...}
type AzureContainerInfoInput interface {
	pulumi.Input

	ToAzureContainerInfoOutput() AzureContainerInfoOutput
	ToAzureContainerInfoOutputWithContext(context.Context) AzureContainerInfoOutput
}

// Azure container mapping of the endpoint.
type AzureContainerInfoArgs struct {
	// Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// Storage format used for the file represented by the share.
	DataFormat pulumi.StringInput `pulumi:"dataFormat"`
	// ID of the storage account credential used to access storage.
	StorageAccountCredentialId pulumi.StringInput `pulumi:"storageAccountCredentialId"`
}

func (AzureContainerInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureContainerInfo)(nil)).Elem()
}

func (i AzureContainerInfoArgs) ToAzureContainerInfoOutput() AzureContainerInfoOutput {
	return i.ToAzureContainerInfoOutputWithContext(context.Background())
}

func (i AzureContainerInfoArgs) ToAzureContainerInfoOutputWithContext(ctx context.Context) AzureContainerInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureContainerInfoOutput)
}

func (i AzureContainerInfoArgs) ToAzureContainerInfoPtrOutput() AzureContainerInfoPtrOutput {
	return i.ToAzureContainerInfoPtrOutputWithContext(context.Background())
}

func (i AzureContainerInfoArgs) ToAzureContainerInfoPtrOutputWithContext(ctx context.Context) AzureContainerInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureContainerInfoOutput).ToAzureContainerInfoPtrOutputWithContext(ctx)
}

// AzureContainerInfoPtrInput is an input type that accepts AzureContainerInfoArgs, AzureContainerInfoPtr and AzureContainerInfoPtrOutput values.
// You can construct a concrete instance of `AzureContainerInfoPtrInput` via:
//
//          AzureContainerInfoArgs{...}
//
//  or:
//
//          nil
type AzureContainerInfoPtrInput interface {
	pulumi.Input

	ToAzureContainerInfoPtrOutput() AzureContainerInfoPtrOutput
	ToAzureContainerInfoPtrOutputWithContext(context.Context) AzureContainerInfoPtrOutput
}

type azureContainerInfoPtrType AzureContainerInfoArgs

func AzureContainerInfoPtr(v *AzureContainerInfoArgs) AzureContainerInfoPtrInput {
	return (*azureContainerInfoPtrType)(v)
}

func (*azureContainerInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureContainerInfo)(nil)).Elem()
}

func (i *azureContainerInfoPtrType) ToAzureContainerInfoPtrOutput() AzureContainerInfoPtrOutput {
	return i.ToAzureContainerInfoPtrOutputWithContext(context.Background())
}

func (i *azureContainerInfoPtrType) ToAzureContainerInfoPtrOutputWithContext(ctx context.Context) AzureContainerInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureContainerInfoPtrOutput)
}

// Azure container mapping of the endpoint.
type AzureContainerInfoOutput struct{ *pulumi.OutputState }

func (AzureContainerInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureContainerInfo)(nil)).Elem()
}

func (o AzureContainerInfoOutput) ToAzureContainerInfoOutput() AzureContainerInfoOutput {
	return o
}

func (o AzureContainerInfoOutput) ToAzureContainerInfoOutputWithContext(ctx context.Context) AzureContainerInfoOutput {
	return o
}

func (o AzureContainerInfoOutput) ToAzureContainerInfoPtrOutput() AzureContainerInfoPtrOutput {
	return o.ToAzureContainerInfoPtrOutputWithContext(context.Background())
}

func (o AzureContainerInfoOutput) ToAzureContainerInfoPtrOutputWithContext(ctx context.Context) AzureContainerInfoPtrOutput {
	return o.ApplyT(func(v AzureContainerInfo) *AzureContainerInfo {
		return &v
	}).(AzureContainerInfoPtrOutput)
}

// Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
func (o AzureContainerInfoOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureContainerInfo) string { return v.ContainerName }).(pulumi.StringOutput)
}

// Storage format used for the file represented by the share.
func (o AzureContainerInfoOutput) DataFormat() pulumi.StringOutput {
	return o.ApplyT(func(v AzureContainerInfo) string { return v.DataFormat }).(pulumi.StringOutput)
}

// ID of the storage account credential used to access storage.
func (o AzureContainerInfoOutput) StorageAccountCredentialId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureContainerInfo) string { return v.StorageAccountCredentialId }).(pulumi.StringOutput)
}

type AzureContainerInfoPtrOutput struct{ *pulumi.OutputState }

func (AzureContainerInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureContainerInfo)(nil)).Elem()
}

func (o AzureContainerInfoPtrOutput) ToAzureContainerInfoPtrOutput() AzureContainerInfoPtrOutput {
	return o
}

func (o AzureContainerInfoPtrOutput) ToAzureContainerInfoPtrOutputWithContext(ctx context.Context) AzureContainerInfoPtrOutput {
	return o
}

func (o AzureContainerInfoPtrOutput) Elem() AzureContainerInfoOutput {
	return o.ApplyT(func(v *AzureContainerInfo) AzureContainerInfo { return *v }).(AzureContainerInfoOutput)
}

// Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
func (o AzureContainerInfoPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureContainerInfo) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Storage format used for the file represented by the share.
func (o AzureContainerInfoPtrOutput) DataFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureContainerInfo) *string {
		if v == nil {
			return nil
		}
		return &v.DataFormat
	}).(pulumi.StringPtrOutput)
}

// ID of the storage account credential used to access storage.
func (o AzureContainerInfoPtrOutput) StorageAccountCredentialId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureContainerInfo) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountCredentialId
	}).(pulumi.StringPtrOutput)
}

// Azure container mapping of the endpoint.
type AzureContainerInfoResponse struct {
	// Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
	ContainerName string `pulumi:"containerName"`
	// Storage format used for the file represented by the share.
	DataFormat string `pulumi:"dataFormat"`
	// ID of the storage account credential used to access storage.
	StorageAccountCredentialId string `pulumi:"storageAccountCredentialId"`
}

// AzureContainerInfoResponseInput is an input type that accepts AzureContainerInfoResponseArgs and AzureContainerInfoResponseOutput values.
// You can construct a concrete instance of `AzureContainerInfoResponseInput` via:
//
//          AzureContainerInfoResponseArgs{...}
type AzureContainerInfoResponseInput interface {
	pulumi.Input

	ToAzureContainerInfoResponseOutput() AzureContainerInfoResponseOutput
	ToAzureContainerInfoResponseOutputWithContext(context.Context) AzureContainerInfoResponseOutput
}

// Azure container mapping of the endpoint.
type AzureContainerInfoResponseArgs struct {
	// Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// Storage format used for the file represented by the share.
	DataFormat pulumi.StringInput `pulumi:"dataFormat"`
	// ID of the storage account credential used to access storage.
	StorageAccountCredentialId pulumi.StringInput `pulumi:"storageAccountCredentialId"`
}

func (AzureContainerInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureContainerInfoResponse)(nil)).Elem()
}

func (i AzureContainerInfoResponseArgs) ToAzureContainerInfoResponseOutput() AzureContainerInfoResponseOutput {
	return i.ToAzureContainerInfoResponseOutputWithContext(context.Background())
}

func (i AzureContainerInfoResponseArgs) ToAzureContainerInfoResponseOutputWithContext(ctx context.Context) AzureContainerInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureContainerInfoResponseOutput)
}

func (i AzureContainerInfoResponseArgs) ToAzureContainerInfoResponsePtrOutput() AzureContainerInfoResponsePtrOutput {
	return i.ToAzureContainerInfoResponsePtrOutputWithContext(context.Background())
}

func (i AzureContainerInfoResponseArgs) ToAzureContainerInfoResponsePtrOutputWithContext(ctx context.Context) AzureContainerInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureContainerInfoResponseOutput).ToAzureContainerInfoResponsePtrOutputWithContext(ctx)
}

// AzureContainerInfoResponsePtrInput is an input type that accepts AzureContainerInfoResponseArgs, AzureContainerInfoResponsePtr and AzureContainerInfoResponsePtrOutput values.
// You can construct a concrete instance of `AzureContainerInfoResponsePtrInput` via:
//
//          AzureContainerInfoResponseArgs{...}
//
//  or:
//
//          nil
type AzureContainerInfoResponsePtrInput interface {
	pulumi.Input

	ToAzureContainerInfoResponsePtrOutput() AzureContainerInfoResponsePtrOutput
	ToAzureContainerInfoResponsePtrOutputWithContext(context.Context) AzureContainerInfoResponsePtrOutput
}

type azureContainerInfoResponsePtrType AzureContainerInfoResponseArgs

func AzureContainerInfoResponsePtr(v *AzureContainerInfoResponseArgs) AzureContainerInfoResponsePtrInput {
	return (*azureContainerInfoResponsePtrType)(v)
}

func (*azureContainerInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureContainerInfoResponse)(nil)).Elem()
}

func (i *azureContainerInfoResponsePtrType) ToAzureContainerInfoResponsePtrOutput() AzureContainerInfoResponsePtrOutput {
	return i.ToAzureContainerInfoResponsePtrOutputWithContext(context.Background())
}

func (i *azureContainerInfoResponsePtrType) ToAzureContainerInfoResponsePtrOutputWithContext(ctx context.Context) AzureContainerInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureContainerInfoResponsePtrOutput)
}

// Azure container mapping of the endpoint.
type AzureContainerInfoResponseOutput struct{ *pulumi.OutputState }

func (AzureContainerInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureContainerInfoResponse)(nil)).Elem()
}

func (o AzureContainerInfoResponseOutput) ToAzureContainerInfoResponseOutput() AzureContainerInfoResponseOutput {
	return o
}

func (o AzureContainerInfoResponseOutput) ToAzureContainerInfoResponseOutputWithContext(ctx context.Context) AzureContainerInfoResponseOutput {
	return o
}

func (o AzureContainerInfoResponseOutput) ToAzureContainerInfoResponsePtrOutput() AzureContainerInfoResponsePtrOutput {
	return o.ToAzureContainerInfoResponsePtrOutputWithContext(context.Background())
}

func (o AzureContainerInfoResponseOutput) ToAzureContainerInfoResponsePtrOutputWithContext(ctx context.Context) AzureContainerInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureContainerInfoResponse) *AzureContainerInfoResponse {
		return &v
	}).(AzureContainerInfoResponsePtrOutput)
}

// Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
func (o AzureContainerInfoResponseOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureContainerInfoResponse) string { return v.ContainerName }).(pulumi.StringOutput)
}

// Storage format used for the file represented by the share.
func (o AzureContainerInfoResponseOutput) DataFormat() pulumi.StringOutput {
	return o.ApplyT(func(v AzureContainerInfoResponse) string { return v.DataFormat }).(pulumi.StringOutput)
}

// ID of the storage account credential used to access storage.
func (o AzureContainerInfoResponseOutput) StorageAccountCredentialId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureContainerInfoResponse) string { return v.StorageAccountCredentialId }).(pulumi.StringOutput)
}

type AzureContainerInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureContainerInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureContainerInfoResponse)(nil)).Elem()
}

func (o AzureContainerInfoResponsePtrOutput) ToAzureContainerInfoResponsePtrOutput() AzureContainerInfoResponsePtrOutput {
	return o
}

func (o AzureContainerInfoResponsePtrOutput) ToAzureContainerInfoResponsePtrOutputWithContext(ctx context.Context) AzureContainerInfoResponsePtrOutput {
	return o
}

func (o AzureContainerInfoResponsePtrOutput) Elem() AzureContainerInfoResponseOutput {
	return o.ApplyT(func(v *AzureContainerInfoResponse) AzureContainerInfoResponse { return *v }).(AzureContainerInfoResponseOutput)
}

// Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
func (o AzureContainerInfoResponsePtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureContainerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Storage format used for the file represented by the share.
func (o AzureContainerInfoResponsePtrOutput) DataFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureContainerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataFormat
	}).(pulumi.StringPtrOutput)
}

// ID of the storage account credential used to access storage.
func (o AzureContainerInfoResponsePtrOutput) StorageAccountCredentialId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureContainerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountCredentialId
	}).(pulumi.StringPtrOutput)
}

// The bandwidth schedule details.
type BandwidthScheduleType struct {
	// The object name.
	Name string `pulumi:"name"`
	// The properties of the bandwidth schedule.
	Properties BandwidthSchedulePropertiesResponse `pulumi:"properties"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
}

// BandwidthScheduleTypeInput is an input type that accepts BandwidthScheduleTypeArgs and BandwidthScheduleTypeOutput values.
// You can construct a concrete instance of `BandwidthScheduleTypeInput` via:
//
//          BandwidthScheduleTypeArgs{...}
type BandwidthScheduleTypeInput interface {
	pulumi.Input

	ToBandwidthScheduleTypeOutput() BandwidthScheduleTypeOutput
	ToBandwidthScheduleTypeOutputWithContext(context.Context) BandwidthScheduleTypeOutput
}

// The bandwidth schedule details.
type BandwidthScheduleTypeArgs struct {
	// The object name.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of the bandwidth schedule.
	Properties BandwidthSchedulePropertiesResponseInput `pulumi:"properties"`
	// The hierarchical type of the object.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BandwidthScheduleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthScheduleType)(nil)).Elem()
}

func (i BandwidthScheduleTypeArgs) ToBandwidthScheduleTypeOutput() BandwidthScheduleTypeOutput {
	return i.ToBandwidthScheduleTypeOutputWithContext(context.Background())
}

func (i BandwidthScheduleTypeArgs) ToBandwidthScheduleTypeOutputWithContext(ctx context.Context) BandwidthScheduleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthScheduleTypeOutput)
}

// The bandwidth schedule details.
type BandwidthScheduleTypeOutput struct{ *pulumi.OutputState }

func (BandwidthScheduleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthScheduleType)(nil)).Elem()
}

func (o BandwidthScheduleTypeOutput) ToBandwidthScheduleTypeOutput() BandwidthScheduleTypeOutput {
	return o
}

func (o BandwidthScheduleTypeOutput) ToBandwidthScheduleTypeOutputWithContext(ctx context.Context) BandwidthScheduleTypeOutput {
	return o
}

// The object name.
func (o BandwidthScheduleTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthScheduleType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of the bandwidth schedule.
func (o BandwidthScheduleTypeOutput) Properties() BandwidthSchedulePropertiesResponseOutput {
	return o.ApplyT(func(v BandwidthScheduleType) BandwidthSchedulePropertiesResponse { return v.Properties }).(BandwidthSchedulePropertiesResponseOutput)
}

// The hierarchical type of the object.
func (o BandwidthScheduleTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthScheduleType) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of the bandwidth schedule.
type BandwidthSchedulePropertiesResponse struct {
	// The days of the week when this schedule is applicable.
	Days []string `pulumi:"days"`
	// The bandwidth rate in Mbps.
	RateInMbps int `pulumi:"rateInMbps"`
	// The start time of the schedule in UTC.
	Start string `pulumi:"start"`
	// The stop time of the schedule in UTC.
	Stop string `pulumi:"stop"`
}

// BandwidthSchedulePropertiesResponseInput is an input type that accepts BandwidthSchedulePropertiesResponseArgs and BandwidthSchedulePropertiesResponseOutput values.
// You can construct a concrete instance of `BandwidthSchedulePropertiesResponseInput` via:
//
//          BandwidthSchedulePropertiesResponseArgs{...}
type BandwidthSchedulePropertiesResponseInput interface {
	pulumi.Input

	ToBandwidthSchedulePropertiesResponseOutput() BandwidthSchedulePropertiesResponseOutput
	ToBandwidthSchedulePropertiesResponseOutputWithContext(context.Context) BandwidthSchedulePropertiesResponseOutput
}

// The properties of the bandwidth schedule.
type BandwidthSchedulePropertiesResponseArgs struct {
	// The days of the week when this schedule is applicable.
	Days pulumi.StringArrayInput `pulumi:"days"`
	// The bandwidth rate in Mbps.
	RateInMbps pulumi.IntInput `pulumi:"rateInMbps"`
	// The start time of the schedule in UTC.
	Start pulumi.StringInput `pulumi:"start"`
	// The stop time of the schedule in UTC.
	Stop pulumi.StringInput `pulumi:"stop"`
}

func (BandwidthSchedulePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthSchedulePropertiesResponse)(nil)).Elem()
}

func (i BandwidthSchedulePropertiesResponseArgs) ToBandwidthSchedulePropertiesResponseOutput() BandwidthSchedulePropertiesResponseOutput {
	return i.ToBandwidthSchedulePropertiesResponseOutputWithContext(context.Background())
}

func (i BandwidthSchedulePropertiesResponseArgs) ToBandwidthSchedulePropertiesResponseOutputWithContext(ctx context.Context) BandwidthSchedulePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthSchedulePropertiesResponseOutput)
}

func (i BandwidthSchedulePropertiesResponseArgs) ToBandwidthSchedulePropertiesResponsePtrOutput() BandwidthSchedulePropertiesResponsePtrOutput {
	return i.ToBandwidthSchedulePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i BandwidthSchedulePropertiesResponseArgs) ToBandwidthSchedulePropertiesResponsePtrOutputWithContext(ctx context.Context) BandwidthSchedulePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthSchedulePropertiesResponseOutput).ToBandwidthSchedulePropertiesResponsePtrOutputWithContext(ctx)
}

// BandwidthSchedulePropertiesResponsePtrInput is an input type that accepts BandwidthSchedulePropertiesResponseArgs, BandwidthSchedulePropertiesResponsePtr and BandwidthSchedulePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `BandwidthSchedulePropertiesResponsePtrInput` via:
//
//          BandwidthSchedulePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type BandwidthSchedulePropertiesResponsePtrInput interface {
	pulumi.Input

	ToBandwidthSchedulePropertiesResponsePtrOutput() BandwidthSchedulePropertiesResponsePtrOutput
	ToBandwidthSchedulePropertiesResponsePtrOutputWithContext(context.Context) BandwidthSchedulePropertiesResponsePtrOutput
}

type bandwidthSchedulePropertiesResponsePtrType BandwidthSchedulePropertiesResponseArgs

func BandwidthSchedulePropertiesResponsePtr(v *BandwidthSchedulePropertiesResponseArgs) BandwidthSchedulePropertiesResponsePtrInput {
	return (*bandwidthSchedulePropertiesResponsePtrType)(v)
}

func (*bandwidthSchedulePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BandwidthSchedulePropertiesResponse)(nil)).Elem()
}

func (i *bandwidthSchedulePropertiesResponsePtrType) ToBandwidthSchedulePropertiesResponsePtrOutput() BandwidthSchedulePropertiesResponsePtrOutput {
	return i.ToBandwidthSchedulePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *bandwidthSchedulePropertiesResponsePtrType) ToBandwidthSchedulePropertiesResponsePtrOutputWithContext(ctx context.Context) BandwidthSchedulePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthSchedulePropertiesResponsePtrOutput)
}

// The properties of the bandwidth schedule.
type BandwidthSchedulePropertiesResponseOutput struct{ *pulumi.OutputState }

func (BandwidthSchedulePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthSchedulePropertiesResponse)(nil)).Elem()
}

func (o BandwidthSchedulePropertiesResponseOutput) ToBandwidthSchedulePropertiesResponseOutput() BandwidthSchedulePropertiesResponseOutput {
	return o
}

func (o BandwidthSchedulePropertiesResponseOutput) ToBandwidthSchedulePropertiesResponseOutputWithContext(ctx context.Context) BandwidthSchedulePropertiesResponseOutput {
	return o
}

func (o BandwidthSchedulePropertiesResponseOutput) ToBandwidthSchedulePropertiesResponsePtrOutput() BandwidthSchedulePropertiesResponsePtrOutput {
	return o.ToBandwidthSchedulePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o BandwidthSchedulePropertiesResponseOutput) ToBandwidthSchedulePropertiesResponsePtrOutputWithContext(ctx context.Context) BandwidthSchedulePropertiesResponsePtrOutput {
	return o.ApplyT(func(v BandwidthSchedulePropertiesResponse) *BandwidthSchedulePropertiesResponse {
		return &v
	}).(BandwidthSchedulePropertiesResponsePtrOutput)
}

// The days of the week when this schedule is applicable.
func (o BandwidthSchedulePropertiesResponseOutput) Days() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BandwidthSchedulePropertiesResponse) []string { return v.Days }).(pulumi.StringArrayOutput)
}

// The bandwidth rate in Mbps.
func (o BandwidthSchedulePropertiesResponseOutput) RateInMbps() pulumi.IntOutput {
	return o.ApplyT(func(v BandwidthSchedulePropertiesResponse) int { return v.RateInMbps }).(pulumi.IntOutput)
}

// The start time of the schedule in UTC.
func (o BandwidthSchedulePropertiesResponseOutput) Start() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthSchedulePropertiesResponse) string { return v.Start }).(pulumi.StringOutput)
}

// The stop time of the schedule in UTC.
func (o BandwidthSchedulePropertiesResponseOutput) Stop() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthSchedulePropertiesResponse) string { return v.Stop }).(pulumi.StringOutput)
}

type BandwidthSchedulePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (BandwidthSchedulePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BandwidthSchedulePropertiesResponse)(nil)).Elem()
}

func (o BandwidthSchedulePropertiesResponsePtrOutput) ToBandwidthSchedulePropertiesResponsePtrOutput() BandwidthSchedulePropertiesResponsePtrOutput {
	return o
}

func (o BandwidthSchedulePropertiesResponsePtrOutput) ToBandwidthSchedulePropertiesResponsePtrOutputWithContext(ctx context.Context) BandwidthSchedulePropertiesResponsePtrOutput {
	return o
}

func (o BandwidthSchedulePropertiesResponsePtrOutput) Elem() BandwidthSchedulePropertiesResponseOutput {
	return o.ApplyT(func(v *BandwidthSchedulePropertiesResponse) BandwidthSchedulePropertiesResponse { return *v }).(BandwidthSchedulePropertiesResponseOutput)
}

// The days of the week when this schedule is applicable.
func (o BandwidthSchedulePropertiesResponsePtrOutput) Days() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BandwidthSchedulePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.StringArrayOutput)
}

// The bandwidth rate in Mbps.
func (o BandwidthSchedulePropertiesResponsePtrOutput) RateInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BandwidthSchedulePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.RateInMbps
	}).(pulumi.IntPtrOutput)
}

// The start time of the schedule in UTC.
func (o BandwidthSchedulePropertiesResponsePtrOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BandwidthSchedulePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Start
	}).(pulumi.StringPtrOutput)
}

// The stop time of the schedule in UTC.
func (o BandwidthSchedulePropertiesResponsePtrOutput) Stop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BandwidthSchedulePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Stop
	}).(pulumi.StringPtrOutput)
}

// The mapping between a particular client IP and the type of access client has on the NFS share.
type ClientAccessRight struct {
	// Type of access to be allowed for the client.
	AccessPermission string `pulumi:"accessPermission"`
	// IP of the client.
	Client string `pulumi:"client"`
}

// ClientAccessRightInput is an input type that accepts ClientAccessRightArgs and ClientAccessRightOutput values.
// You can construct a concrete instance of `ClientAccessRightInput` via:
//
//          ClientAccessRightArgs{...}
type ClientAccessRightInput interface {
	pulumi.Input

	ToClientAccessRightOutput() ClientAccessRightOutput
	ToClientAccessRightOutputWithContext(context.Context) ClientAccessRightOutput
}

// The mapping between a particular client IP and the type of access client has on the NFS share.
type ClientAccessRightArgs struct {
	// Type of access to be allowed for the client.
	AccessPermission pulumi.StringInput `pulumi:"accessPermission"`
	// IP of the client.
	Client pulumi.StringInput `pulumi:"client"`
}

func (ClientAccessRightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAccessRight)(nil)).Elem()
}

func (i ClientAccessRightArgs) ToClientAccessRightOutput() ClientAccessRightOutput {
	return i.ToClientAccessRightOutputWithContext(context.Background())
}

func (i ClientAccessRightArgs) ToClientAccessRightOutputWithContext(ctx context.Context) ClientAccessRightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAccessRightOutput)
}

// ClientAccessRightArrayInput is an input type that accepts ClientAccessRightArray and ClientAccessRightArrayOutput values.
// You can construct a concrete instance of `ClientAccessRightArrayInput` via:
//
//          ClientAccessRightArray{ ClientAccessRightArgs{...} }
type ClientAccessRightArrayInput interface {
	pulumi.Input

	ToClientAccessRightArrayOutput() ClientAccessRightArrayOutput
	ToClientAccessRightArrayOutputWithContext(context.Context) ClientAccessRightArrayOutput
}

type ClientAccessRightArray []ClientAccessRightInput

func (ClientAccessRightArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClientAccessRight)(nil)).Elem()
}

func (i ClientAccessRightArray) ToClientAccessRightArrayOutput() ClientAccessRightArrayOutput {
	return i.ToClientAccessRightArrayOutputWithContext(context.Background())
}

func (i ClientAccessRightArray) ToClientAccessRightArrayOutputWithContext(ctx context.Context) ClientAccessRightArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAccessRightArrayOutput)
}

// The mapping between a particular client IP and the type of access client has on the NFS share.
type ClientAccessRightOutput struct{ *pulumi.OutputState }

func (ClientAccessRightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAccessRight)(nil)).Elem()
}

func (o ClientAccessRightOutput) ToClientAccessRightOutput() ClientAccessRightOutput {
	return o
}

func (o ClientAccessRightOutput) ToClientAccessRightOutputWithContext(ctx context.Context) ClientAccessRightOutput {
	return o
}

// Type of access to be allowed for the client.
func (o ClientAccessRightOutput) AccessPermission() pulumi.StringOutput {
	return o.ApplyT(func(v ClientAccessRight) string { return v.AccessPermission }).(pulumi.StringOutput)
}

// IP of the client.
func (o ClientAccessRightOutput) Client() pulumi.StringOutput {
	return o.ApplyT(func(v ClientAccessRight) string { return v.Client }).(pulumi.StringOutput)
}

type ClientAccessRightArrayOutput struct{ *pulumi.OutputState }

func (ClientAccessRightArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClientAccessRight)(nil)).Elem()
}

func (o ClientAccessRightArrayOutput) ToClientAccessRightArrayOutput() ClientAccessRightArrayOutput {
	return o
}

func (o ClientAccessRightArrayOutput) ToClientAccessRightArrayOutputWithContext(ctx context.Context) ClientAccessRightArrayOutput {
	return o
}

func (o ClientAccessRightArrayOutput) Index(i pulumi.IntInput) ClientAccessRightOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClientAccessRight {
		return vs[0].([]ClientAccessRight)[vs[1].(int)]
	}).(ClientAccessRightOutput)
}

// The mapping between a particular client IP and the type of access client has on the NFS share.
type ClientAccessRightResponse struct {
	// Type of access to be allowed for the client.
	AccessPermission string `pulumi:"accessPermission"`
	// IP of the client.
	Client string `pulumi:"client"`
}

// ClientAccessRightResponseInput is an input type that accepts ClientAccessRightResponseArgs and ClientAccessRightResponseOutput values.
// You can construct a concrete instance of `ClientAccessRightResponseInput` via:
//
//          ClientAccessRightResponseArgs{...}
type ClientAccessRightResponseInput interface {
	pulumi.Input

	ToClientAccessRightResponseOutput() ClientAccessRightResponseOutput
	ToClientAccessRightResponseOutputWithContext(context.Context) ClientAccessRightResponseOutput
}

// The mapping between a particular client IP and the type of access client has on the NFS share.
type ClientAccessRightResponseArgs struct {
	// Type of access to be allowed for the client.
	AccessPermission pulumi.StringInput `pulumi:"accessPermission"`
	// IP of the client.
	Client pulumi.StringInput `pulumi:"client"`
}

func (ClientAccessRightResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAccessRightResponse)(nil)).Elem()
}

func (i ClientAccessRightResponseArgs) ToClientAccessRightResponseOutput() ClientAccessRightResponseOutput {
	return i.ToClientAccessRightResponseOutputWithContext(context.Background())
}

func (i ClientAccessRightResponseArgs) ToClientAccessRightResponseOutputWithContext(ctx context.Context) ClientAccessRightResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAccessRightResponseOutput)
}

// ClientAccessRightResponseArrayInput is an input type that accepts ClientAccessRightResponseArray and ClientAccessRightResponseArrayOutput values.
// You can construct a concrete instance of `ClientAccessRightResponseArrayInput` via:
//
//          ClientAccessRightResponseArray{ ClientAccessRightResponseArgs{...} }
type ClientAccessRightResponseArrayInput interface {
	pulumi.Input

	ToClientAccessRightResponseArrayOutput() ClientAccessRightResponseArrayOutput
	ToClientAccessRightResponseArrayOutputWithContext(context.Context) ClientAccessRightResponseArrayOutput
}

type ClientAccessRightResponseArray []ClientAccessRightResponseInput

func (ClientAccessRightResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClientAccessRightResponse)(nil)).Elem()
}

func (i ClientAccessRightResponseArray) ToClientAccessRightResponseArrayOutput() ClientAccessRightResponseArrayOutput {
	return i.ToClientAccessRightResponseArrayOutputWithContext(context.Background())
}

func (i ClientAccessRightResponseArray) ToClientAccessRightResponseArrayOutputWithContext(ctx context.Context) ClientAccessRightResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAccessRightResponseArrayOutput)
}

// The mapping between a particular client IP and the type of access client has on the NFS share.
type ClientAccessRightResponseOutput struct{ *pulumi.OutputState }

func (ClientAccessRightResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAccessRightResponse)(nil)).Elem()
}

func (o ClientAccessRightResponseOutput) ToClientAccessRightResponseOutput() ClientAccessRightResponseOutput {
	return o
}

func (o ClientAccessRightResponseOutput) ToClientAccessRightResponseOutputWithContext(ctx context.Context) ClientAccessRightResponseOutput {
	return o
}

// Type of access to be allowed for the client.
func (o ClientAccessRightResponseOutput) AccessPermission() pulumi.StringOutput {
	return o.ApplyT(func(v ClientAccessRightResponse) string { return v.AccessPermission }).(pulumi.StringOutput)
}

// IP of the client.
func (o ClientAccessRightResponseOutput) Client() pulumi.StringOutput {
	return o.ApplyT(func(v ClientAccessRightResponse) string { return v.Client }).(pulumi.StringOutput)
}

type ClientAccessRightResponseArrayOutput struct{ *pulumi.OutputState }

func (ClientAccessRightResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClientAccessRightResponse)(nil)).Elem()
}

func (o ClientAccessRightResponseArrayOutput) ToClientAccessRightResponseArrayOutput() ClientAccessRightResponseArrayOutput {
	return o
}

func (o ClientAccessRightResponseArrayOutput) ToClientAccessRightResponseArrayOutputWithContext(ctx context.Context) ClientAccessRightResponseArrayOutput {
	return o
}

func (o ClientAccessRightResponseArrayOutput) Index(i pulumi.IntInput) ClientAccessRightResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClientAccessRightResponse {
		return vs[0].([]ClientAccessRightResponse)[vs[1].(int)]
	}).(ClientAccessRightResponseOutput)
}

// Contains all the contact details of the customer.
type ContactDetails struct {
	// The name of the company.
	CompanyName string `pulumi:"companyName"`
	// The contact person name.
	ContactPerson string `pulumi:"contactPerson"`
	// The email list.
	EmailList []string `pulumi:"emailList"`
	// The phone number.
	Phone string `pulumi:"phone"`
}

// ContactDetailsInput is an input type that accepts ContactDetailsArgs and ContactDetailsOutput values.
// You can construct a concrete instance of `ContactDetailsInput` via:
//
//          ContactDetailsArgs{...}
type ContactDetailsInput interface {
	pulumi.Input

	ToContactDetailsOutput() ContactDetailsOutput
	ToContactDetailsOutputWithContext(context.Context) ContactDetailsOutput
}

// Contains all the contact details of the customer.
type ContactDetailsArgs struct {
	// The name of the company.
	CompanyName pulumi.StringInput `pulumi:"companyName"`
	// The contact person name.
	ContactPerson pulumi.StringInput `pulumi:"contactPerson"`
	// The email list.
	EmailList pulumi.StringArrayInput `pulumi:"emailList"`
	// The phone number.
	Phone pulumi.StringInput `pulumi:"phone"`
}

func (ContactDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetails)(nil)).Elem()
}

func (i ContactDetailsArgs) ToContactDetailsOutput() ContactDetailsOutput {
	return i.ToContactDetailsOutputWithContext(context.Background())
}

func (i ContactDetailsArgs) ToContactDetailsOutputWithContext(ctx context.Context) ContactDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsOutput)
}

func (i ContactDetailsArgs) ToContactDetailsPtrOutput() ContactDetailsPtrOutput {
	return i.ToContactDetailsPtrOutputWithContext(context.Background())
}

func (i ContactDetailsArgs) ToContactDetailsPtrOutputWithContext(ctx context.Context) ContactDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsOutput).ToContactDetailsPtrOutputWithContext(ctx)
}

// ContactDetailsPtrInput is an input type that accepts ContactDetailsArgs, ContactDetailsPtr and ContactDetailsPtrOutput values.
// You can construct a concrete instance of `ContactDetailsPtrInput` via:
//
//          ContactDetailsArgs{...}
//
//  or:
//
//          nil
type ContactDetailsPtrInput interface {
	pulumi.Input

	ToContactDetailsPtrOutput() ContactDetailsPtrOutput
	ToContactDetailsPtrOutputWithContext(context.Context) ContactDetailsPtrOutput
}

type contactDetailsPtrType ContactDetailsArgs

func ContactDetailsPtr(v *ContactDetailsArgs) ContactDetailsPtrInput {
	return (*contactDetailsPtrType)(v)
}

func (*contactDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactDetails)(nil)).Elem()
}

func (i *contactDetailsPtrType) ToContactDetailsPtrOutput() ContactDetailsPtrOutput {
	return i.ToContactDetailsPtrOutputWithContext(context.Background())
}

func (i *contactDetailsPtrType) ToContactDetailsPtrOutputWithContext(ctx context.Context) ContactDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsPtrOutput)
}

// Contains all the contact details of the customer.
type ContactDetailsOutput struct{ *pulumi.OutputState }

func (ContactDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetails)(nil)).Elem()
}

func (o ContactDetailsOutput) ToContactDetailsOutput() ContactDetailsOutput {
	return o
}

func (o ContactDetailsOutput) ToContactDetailsOutputWithContext(ctx context.Context) ContactDetailsOutput {
	return o
}

func (o ContactDetailsOutput) ToContactDetailsPtrOutput() ContactDetailsPtrOutput {
	return o.ToContactDetailsPtrOutputWithContext(context.Background())
}

func (o ContactDetailsOutput) ToContactDetailsPtrOutputWithContext(ctx context.Context) ContactDetailsPtrOutput {
	return o.ApplyT(func(v ContactDetails) *ContactDetails {
		return &v
	}).(ContactDetailsPtrOutput)
}

// The name of the company.
func (o ContactDetailsOutput) CompanyName() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetails) string { return v.CompanyName }).(pulumi.StringOutput)
}

// The contact person name.
func (o ContactDetailsOutput) ContactPerson() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetails) string { return v.ContactPerson }).(pulumi.StringOutput)
}

// The email list.
func (o ContactDetailsOutput) EmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContactDetails) []string { return v.EmailList }).(pulumi.StringArrayOutput)
}

// The phone number.
func (o ContactDetailsOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetails) string { return v.Phone }).(pulumi.StringOutput)
}

type ContactDetailsPtrOutput struct{ *pulumi.OutputState }

func (ContactDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactDetails)(nil)).Elem()
}

func (o ContactDetailsPtrOutput) ToContactDetailsPtrOutput() ContactDetailsPtrOutput {
	return o
}

func (o ContactDetailsPtrOutput) ToContactDetailsPtrOutputWithContext(ctx context.Context) ContactDetailsPtrOutput {
	return o
}

func (o ContactDetailsPtrOutput) Elem() ContactDetailsOutput {
	return o.ApplyT(func(v *ContactDetails) ContactDetails { return *v }).(ContactDetailsOutput)
}

// The name of the company.
func (o ContactDetailsPtrOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetails) *string {
		if v == nil {
			return nil
		}
		return &v.CompanyName
	}).(pulumi.StringPtrOutput)
}

// The contact person name.
func (o ContactDetailsPtrOutput) ContactPerson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetails) *string {
		if v == nil {
			return nil
		}
		return &v.ContactPerson
	}).(pulumi.StringPtrOutput)
}

// The email list.
func (o ContactDetailsPtrOutput) EmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContactDetails) []string {
		if v == nil {
			return nil
		}
		return v.EmailList
	}).(pulumi.StringArrayOutput)
}

// The phone number.
func (o ContactDetailsPtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Phone
	}).(pulumi.StringPtrOutput)
}

// Contains all the contact details of the customer.
type ContactDetailsResponse struct {
	// The name of the company.
	CompanyName string `pulumi:"companyName"`
	// The contact person name.
	ContactPerson string `pulumi:"contactPerson"`
	// The email list.
	EmailList []string `pulumi:"emailList"`
	// The phone number.
	Phone string `pulumi:"phone"`
}

// ContactDetailsResponseInput is an input type that accepts ContactDetailsResponseArgs and ContactDetailsResponseOutput values.
// You can construct a concrete instance of `ContactDetailsResponseInput` via:
//
//          ContactDetailsResponseArgs{...}
type ContactDetailsResponseInput interface {
	pulumi.Input

	ToContactDetailsResponseOutput() ContactDetailsResponseOutput
	ToContactDetailsResponseOutputWithContext(context.Context) ContactDetailsResponseOutput
}

// Contains all the contact details of the customer.
type ContactDetailsResponseArgs struct {
	// The name of the company.
	CompanyName pulumi.StringInput `pulumi:"companyName"`
	// The contact person name.
	ContactPerson pulumi.StringInput `pulumi:"contactPerson"`
	// The email list.
	EmailList pulumi.StringArrayInput `pulumi:"emailList"`
	// The phone number.
	Phone pulumi.StringInput `pulumi:"phone"`
}

func (ContactDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetailsResponse)(nil)).Elem()
}

func (i ContactDetailsResponseArgs) ToContactDetailsResponseOutput() ContactDetailsResponseOutput {
	return i.ToContactDetailsResponseOutputWithContext(context.Background())
}

func (i ContactDetailsResponseArgs) ToContactDetailsResponseOutputWithContext(ctx context.Context) ContactDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsResponseOutput)
}

func (i ContactDetailsResponseArgs) ToContactDetailsResponsePtrOutput() ContactDetailsResponsePtrOutput {
	return i.ToContactDetailsResponsePtrOutputWithContext(context.Background())
}

func (i ContactDetailsResponseArgs) ToContactDetailsResponsePtrOutputWithContext(ctx context.Context) ContactDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsResponseOutput).ToContactDetailsResponsePtrOutputWithContext(ctx)
}

// ContactDetailsResponsePtrInput is an input type that accepts ContactDetailsResponseArgs, ContactDetailsResponsePtr and ContactDetailsResponsePtrOutput values.
// You can construct a concrete instance of `ContactDetailsResponsePtrInput` via:
//
//          ContactDetailsResponseArgs{...}
//
//  or:
//
//          nil
type ContactDetailsResponsePtrInput interface {
	pulumi.Input

	ToContactDetailsResponsePtrOutput() ContactDetailsResponsePtrOutput
	ToContactDetailsResponsePtrOutputWithContext(context.Context) ContactDetailsResponsePtrOutput
}

type contactDetailsResponsePtrType ContactDetailsResponseArgs

func ContactDetailsResponsePtr(v *ContactDetailsResponseArgs) ContactDetailsResponsePtrInput {
	return (*contactDetailsResponsePtrType)(v)
}

func (*contactDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactDetailsResponse)(nil)).Elem()
}

func (i *contactDetailsResponsePtrType) ToContactDetailsResponsePtrOutput() ContactDetailsResponsePtrOutput {
	return i.ToContactDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *contactDetailsResponsePtrType) ToContactDetailsResponsePtrOutputWithContext(ctx context.Context) ContactDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsResponsePtrOutput)
}

// Contains all the contact details of the customer.
type ContactDetailsResponseOutput struct{ *pulumi.OutputState }

func (ContactDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetailsResponse)(nil)).Elem()
}

func (o ContactDetailsResponseOutput) ToContactDetailsResponseOutput() ContactDetailsResponseOutput {
	return o
}

func (o ContactDetailsResponseOutput) ToContactDetailsResponseOutputWithContext(ctx context.Context) ContactDetailsResponseOutput {
	return o
}

func (o ContactDetailsResponseOutput) ToContactDetailsResponsePtrOutput() ContactDetailsResponsePtrOutput {
	return o.ToContactDetailsResponsePtrOutputWithContext(context.Background())
}

func (o ContactDetailsResponseOutput) ToContactDetailsResponsePtrOutputWithContext(ctx context.Context) ContactDetailsResponsePtrOutput {
	return o.ApplyT(func(v ContactDetailsResponse) *ContactDetailsResponse {
		return &v
	}).(ContactDetailsResponsePtrOutput)
}

// The name of the company.
func (o ContactDetailsResponseOutput) CompanyName() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetailsResponse) string { return v.CompanyName }).(pulumi.StringOutput)
}

// The contact person name.
func (o ContactDetailsResponseOutput) ContactPerson() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetailsResponse) string { return v.ContactPerson }).(pulumi.StringOutput)
}

// The email list.
func (o ContactDetailsResponseOutput) EmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContactDetailsResponse) []string { return v.EmailList }).(pulumi.StringArrayOutput)
}

// The phone number.
func (o ContactDetailsResponseOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetailsResponse) string { return v.Phone }).(pulumi.StringOutput)
}

type ContactDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (ContactDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactDetailsResponse)(nil)).Elem()
}

func (o ContactDetailsResponsePtrOutput) ToContactDetailsResponsePtrOutput() ContactDetailsResponsePtrOutput {
	return o
}

func (o ContactDetailsResponsePtrOutput) ToContactDetailsResponsePtrOutputWithContext(ctx context.Context) ContactDetailsResponsePtrOutput {
	return o
}

func (o ContactDetailsResponsePtrOutput) Elem() ContactDetailsResponseOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) ContactDetailsResponse { return *v }).(ContactDetailsResponseOutput)
}

// The name of the company.
func (o ContactDetailsResponsePtrOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CompanyName
	}).(pulumi.StringPtrOutput)
}

// The contact person name.
func (o ContactDetailsResponsePtrOutput) ContactPerson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ContactPerson
	}).(pulumi.StringPtrOutput)
}

// The email list.
func (o ContactDetailsResponsePtrOutput) EmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.EmailList
	}).(pulumi.StringArrayOutput)
}

// The phone number.
func (o ContactDetailsResponsePtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Phone
	}).(pulumi.StringPtrOutput)
}

// Represents a container on the  Data Box Edge/Gateway device.
type ContainerType struct {
	// The object name.
	Name string `pulumi:"name"`
	// The container properties.
	Properties ContainerPropertiesResponse `pulumi:"properties"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
}

// ContainerTypeInput is an input type that accepts ContainerTypeArgs and ContainerTypeOutput values.
// You can construct a concrete instance of `ContainerTypeInput` via:
//
//          ContainerTypeArgs{...}
type ContainerTypeInput interface {
	pulumi.Input

	ToContainerTypeOutput() ContainerTypeOutput
	ToContainerTypeOutputWithContext(context.Context) ContainerTypeOutput
}

// Represents a container on the  Data Box Edge/Gateway device.
type ContainerTypeArgs struct {
	// The object name.
	Name pulumi.StringInput `pulumi:"name"`
	// The container properties.
	Properties ContainerPropertiesResponseInput `pulumi:"properties"`
	// The hierarchical type of the object.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ContainerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerType)(nil)).Elem()
}

func (i ContainerTypeArgs) ToContainerTypeOutput() ContainerTypeOutput {
	return i.ToContainerTypeOutputWithContext(context.Background())
}

func (i ContainerTypeArgs) ToContainerTypeOutputWithContext(ctx context.Context) ContainerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerTypeOutput)
}

// Represents a container on the  Data Box Edge/Gateway device.
type ContainerTypeOutput struct{ *pulumi.OutputState }

func (ContainerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerType)(nil)).Elem()
}

func (o ContainerTypeOutput) ToContainerTypeOutput() ContainerTypeOutput {
	return o
}

func (o ContainerTypeOutput) ToContainerTypeOutputWithContext(ctx context.Context) ContainerTypeOutput {
	return o
}

// The object name.
func (o ContainerTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerType) string { return v.Name }).(pulumi.StringOutput)
}

// The container properties.
func (o ContainerTypeOutput) Properties() ContainerPropertiesResponseOutput {
	return o.ApplyT(func(v ContainerType) ContainerPropertiesResponse { return v.Properties }).(ContainerPropertiesResponseOutput)
}

// The hierarchical type of the object.
func (o ContainerTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerType) string { return v.Type }).(pulumi.StringOutput)
}

// The container properties.
type ContainerPropertiesResponse struct {
	// Current status of the container.
	ContainerStatus string `pulumi:"containerStatus"`
	// The UTC time when container got created.
	CreatedDateTime string `pulumi:"createdDateTime"`
	// DataFormat for Container
	DataFormat string `pulumi:"dataFormat"`
	// Details of the refresh job on this container.
	RefreshDetails RefreshDetailsResponse `pulumi:"refreshDetails"`
}

// ContainerPropertiesResponseInput is an input type that accepts ContainerPropertiesResponseArgs and ContainerPropertiesResponseOutput values.
// You can construct a concrete instance of `ContainerPropertiesResponseInput` via:
//
//          ContainerPropertiesResponseArgs{...}
type ContainerPropertiesResponseInput interface {
	pulumi.Input

	ToContainerPropertiesResponseOutput() ContainerPropertiesResponseOutput
	ToContainerPropertiesResponseOutputWithContext(context.Context) ContainerPropertiesResponseOutput
}

// The container properties.
type ContainerPropertiesResponseArgs struct {
	// Current status of the container.
	ContainerStatus pulumi.StringInput `pulumi:"containerStatus"`
	// The UTC time when container got created.
	CreatedDateTime pulumi.StringInput `pulumi:"createdDateTime"`
	// DataFormat for Container
	DataFormat pulumi.StringInput `pulumi:"dataFormat"`
	// Details of the refresh job on this container.
	RefreshDetails RefreshDetailsResponseInput `pulumi:"refreshDetails"`
}

func (ContainerPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPropertiesResponse)(nil)).Elem()
}

func (i ContainerPropertiesResponseArgs) ToContainerPropertiesResponseOutput() ContainerPropertiesResponseOutput {
	return i.ToContainerPropertiesResponseOutputWithContext(context.Background())
}

func (i ContainerPropertiesResponseArgs) ToContainerPropertiesResponseOutputWithContext(ctx context.Context) ContainerPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPropertiesResponseOutput)
}

func (i ContainerPropertiesResponseArgs) ToContainerPropertiesResponsePtrOutput() ContainerPropertiesResponsePtrOutput {
	return i.ToContainerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ContainerPropertiesResponseArgs) ToContainerPropertiesResponsePtrOutputWithContext(ctx context.Context) ContainerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPropertiesResponseOutput).ToContainerPropertiesResponsePtrOutputWithContext(ctx)
}

// ContainerPropertiesResponsePtrInput is an input type that accepts ContainerPropertiesResponseArgs, ContainerPropertiesResponsePtr and ContainerPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ContainerPropertiesResponsePtrInput` via:
//
//          ContainerPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ContainerPropertiesResponsePtrInput interface {
	pulumi.Input

	ToContainerPropertiesResponsePtrOutput() ContainerPropertiesResponsePtrOutput
	ToContainerPropertiesResponsePtrOutputWithContext(context.Context) ContainerPropertiesResponsePtrOutput
}

type containerPropertiesResponsePtrType ContainerPropertiesResponseArgs

func ContainerPropertiesResponsePtr(v *ContainerPropertiesResponseArgs) ContainerPropertiesResponsePtrInput {
	return (*containerPropertiesResponsePtrType)(v)
}

func (*containerPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerPropertiesResponse)(nil)).Elem()
}

func (i *containerPropertiesResponsePtrType) ToContainerPropertiesResponsePtrOutput() ContainerPropertiesResponsePtrOutput {
	return i.ToContainerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *containerPropertiesResponsePtrType) ToContainerPropertiesResponsePtrOutputWithContext(ctx context.Context) ContainerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPropertiesResponsePtrOutput)
}

// The container properties.
type ContainerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ContainerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPropertiesResponse)(nil)).Elem()
}

func (o ContainerPropertiesResponseOutput) ToContainerPropertiesResponseOutput() ContainerPropertiesResponseOutput {
	return o
}

func (o ContainerPropertiesResponseOutput) ToContainerPropertiesResponseOutputWithContext(ctx context.Context) ContainerPropertiesResponseOutput {
	return o
}

func (o ContainerPropertiesResponseOutput) ToContainerPropertiesResponsePtrOutput() ContainerPropertiesResponsePtrOutput {
	return o.ToContainerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ContainerPropertiesResponseOutput) ToContainerPropertiesResponsePtrOutputWithContext(ctx context.Context) ContainerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ContainerPropertiesResponse) *ContainerPropertiesResponse {
		return &v
	}).(ContainerPropertiesResponsePtrOutput)
}

// Current status of the container.
func (o ContainerPropertiesResponseOutput) ContainerStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerPropertiesResponse) string { return v.ContainerStatus }).(pulumi.StringOutput)
}

// The UTC time when container got created.
func (o ContainerPropertiesResponseOutput) CreatedDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerPropertiesResponse) string { return v.CreatedDateTime }).(pulumi.StringOutput)
}

// DataFormat for Container
func (o ContainerPropertiesResponseOutput) DataFormat() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerPropertiesResponse) string { return v.DataFormat }).(pulumi.StringOutput)
}

// Details of the refresh job on this container.
func (o ContainerPropertiesResponseOutput) RefreshDetails() RefreshDetailsResponseOutput {
	return o.ApplyT(func(v ContainerPropertiesResponse) RefreshDetailsResponse { return v.RefreshDetails }).(RefreshDetailsResponseOutput)
}

type ContainerPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerPropertiesResponse)(nil)).Elem()
}

func (o ContainerPropertiesResponsePtrOutput) ToContainerPropertiesResponsePtrOutput() ContainerPropertiesResponsePtrOutput {
	return o
}

func (o ContainerPropertiesResponsePtrOutput) ToContainerPropertiesResponsePtrOutputWithContext(ctx context.Context) ContainerPropertiesResponsePtrOutput {
	return o
}

func (o ContainerPropertiesResponsePtrOutput) Elem() ContainerPropertiesResponseOutput {
	return o.ApplyT(func(v *ContainerPropertiesResponse) ContainerPropertiesResponse { return *v }).(ContainerPropertiesResponseOutput)
}

// Current status of the container.
func (o ContainerPropertiesResponsePtrOutput) ContainerStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerStatus
	}).(pulumi.StringPtrOutput)
}

// The UTC time when container got created.
func (o ContainerPropertiesResponsePtrOutput) CreatedDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedDateTime
	}).(pulumi.StringPtrOutput)
}

// DataFormat for Container
func (o ContainerPropertiesResponsePtrOutput) DataFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataFormat
	}).(pulumi.StringPtrOutput)
}

// Details of the refresh job on this container.
func (o ContainerPropertiesResponsePtrOutput) RefreshDetails() RefreshDetailsResponsePtrOutput {
	return o.ApplyT(func(v *ContainerPropertiesResponse) *RefreshDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.RefreshDetails
	}).(RefreshDetailsResponsePtrOutput)
}

// The properties of the Data Box Edge/Gateway device.
type DataBoxEdgeDevicePropertiesResponse struct {
	// Type of compute roles configured.
	ConfiguredRoleTypes []string `pulumi:"configuredRoleTypes"`
	// The Data Box Edge/Gateway device culture.
	Culture string `pulumi:"culture"`
	// The status of the Data Box Edge/Gateway device.
	DataBoxEdgeDeviceStatus *string `pulumi:"dataBoxEdgeDeviceStatus"`
	// The Description of the Data Box Edge/Gateway device.
	Description *string `pulumi:"description"`
	// The device software version number of the device (eg: 1.2.18105.6).
	DeviceHcsVersion string `pulumi:"deviceHcsVersion"`
	// The Data Box Edge/Gateway device local capacity in MB.
	DeviceLocalCapacity int `pulumi:"deviceLocalCapacity"`
	// The Data Box Edge/Gateway device model.
	DeviceModel string `pulumi:"deviceModel"`
	// The Data Box Edge/Gateway device software version.
	DeviceSoftwareVersion string `pulumi:"deviceSoftwareVersion"`
	// The type of the Data Box Edge/Gateway device.
	DeviceType string `pulumi:"deviceType"`
	// The Data Box Edge/Gateway device name.
	FriendlyName *string `pulumi:"friendlyName"`
	// The description of the Data Box Edge/Gateway device model.
	ModelDescription *string `pulumi:"modelDescription"`
	// The number of nodes in the cluster.
	NodeCount int `pulumi:"nodeCount"`
	// The Serial Number of Data Box Edge/Gateway device.
	SerialNumber string `pulumi:"serialNumber"`
	// The Data Box Edge/Gateway device timezone.
	TimeZone string `pulumi:"timeZone"`
}

// DataBoxEdgeDevicePropertiesResponseInput is an input type that accepts DataBoxEdgeDevicePropertiesResponseArgs and DataBoxEdgeDevicePropertiesResponseOutput values.
// You can construct a concrete instance of `DataBoxEdgeDevicePropertiesResponseInput` via:
//
//          DataBoxEdgeDevicePropertiesResponseArgs{...}
type DataBoxEdgeDevicePropertiesResponseInput interface {
	pulumi.Input

	ToDataBoxEdgeDevicePropertiesResponseOutput() DataBoxEdgeDevicePropertiesResponseOutput
	ToDataBoxEdgeDevicePropertiesResponseOutputWithContext(context.Context) DataBoxEdgeDevicePropertiesResponseOutput
}

// The properties of the Data Box Edge/Gateway device.
type DataBoxEdgeDevicePropertiesResponseArgs struct {
	// Type of compute roles configured.
	ConfiguredRoleTypes pulumi.StringArrayInput `pulumi:"configuredRoleTypes"`
	// The Data Box Edge/Gateway device culture.
	Culture pulumi.StringInput `pulumi:"culture"`
	// The status of the Data Box Edge/Gateway device.
	DataBoxEdgeDeviceStatus pulumi.StringPtrInput `pulumi:"dataBoxEdgeDeviceStatus"`
	// The Description of the Data Box Edge/Gateway device.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The device software version number of the device (eg: 1.2.18105.6).
	DeviceHcsVersion pulumi.StringInput `pulumi:"deviceHcsVersion"`
	// The Data Box Edge/Gateway device local capacity in MB.
	DeviceLocalCapacity pulumi.IntInput `pulumi:"deviceLocalCapacity"`
	// The Data Box Edge/Gateway device model.
	DeviceModel pulumi.StringInput `pulumi:"deviceModel"`
	// The Data Box Edge/Gateway device software version.
	DeviceSoftwareVersion pulumi.StringInput `pulumi:"deviceSoftwareVersion"`
	// The type of the Data Box Edge/Gateway device.
	DeviceType pulumi.StringInput `pulumi:"deviceType"`
	// The Data Box Edge/Gateway device name.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// The description of the Data Box Edge/Gateway device model.
	ModelDescription pulumi.StringPtrInput `pulumi:"modelDescription"`
	// The number of nodes in the cluster.
	NodeCount pulumi.IntInput `pulumi:"nodeCount"`
	// The Serial Number of Data Box Edge/Gateway device.
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// The Data Box Edge/Gateway device timezone.
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
}

func (DataBoxEdgeDevicePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxEdgeDevicePropertiesResponse)(nil)).Elem()
}

func (i DataBoxEdgeDevicePropertiesResponseArgs) ToDataBoxEdgeDevicePropertiesResponseOutput() DataBoxEdgeDevicePropertiesResponseOutput {
	return i.ToDataBoxEdgeDevicePropertiesResponseOutputWithContext(context.Background())
}

func (i DataBoxEdgeDevicePropertiesResponseArgs) ToDataBoxEdgeDevicePropertiesResponseOutputWithContext(ctx context.Context) DataBoxEdgeDevicePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxEdgeDevicePropertiesResponseOutput)
}

func (i DataBoxEdgeDevicePropertiesResponseArgs) ToDataBoxEdgeDevicePropertiesResponsePtrOutput() DataBoxEdgeDevicePropertiesResponsePtrOutput {
	return i.ToDataBoxEdgeDevicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i DataBoxEdgeDevicePropertiesResponseArgs) ToDataBoxEdgeDevicePropertiesResponsePtrOutputWithContext(ctx context.Context) DataBoxEdgeDevicePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxEdgeDevicePropertiesResponseOutput).ToDataBoxEdgeDevicePropertiesResponsePtrOutputWithContext(ctx)
}

// DataBoxEdgeDevicePropertiesResponsePtrInput is an input type that accepts DataBoxEdgeDevicePropertiesResponseArgs, DataBoxEdgeDevicePropertiesResponsePtr and DataBoxEdgeDevicePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `DataBoxEdgeDevicePropertiesResponsePtrInput` via:
//
//          DataBoxEdgeDevicePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type DataBoxEdgeDevicePropertiesResponsePtrInput interface {
	pulumi.Input

	ToDataBoxEdgeDevicePropertiesResponsePtrOutput() DataBoxEdgeDevicePropertiesResponsePtrOutput
	ToDataBoxEdgeDevicePropertiesResponsePtrOutputWithContext(context.Context) DataBoxEdgeDevicePropertiesResponsePtrOutput
}

type dataBoxEdgeDevicePropertiesResponsePtrType DataBoxEdgeDevicePropertiesResponseArgs

func DataBoxEdgeDevicePropertiesResponsePtr(v *DataBoxEdgeDevicePropertiesResponseArgs) DataBoxEdgeDevicePropertiesResponsePtrInput {
	return (*dataBoxEdgeDevicePropertiesResponsePtrType)(v)
}

func (*dataBoxEdgeDevicePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataBoxEdgeDevicePropertiesResponse)(nil)).Elem()
}

func (i *dataBoxEdgeDevicePropertiesResponsePtrType) ToDataBoxEdgeDevicePropertiesResponsePtrOutput() DataBoxEdgeDevicePropertiesResponsePtrOutput {
	return i.ToDataBoxEdgeDevicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *dataBoxEdgeDevicePropertiesResponsePtrType) ToDataBoxEdgeDevicePropertiesResponsePtrOutputWithContext(ctx context.Context) DataBoxEdgeDevicePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxEdgeDevicePropertiesResponsePtrOutput)
}

// The properties of the Data Box Edge/Gateway device.
type DataBoxEdgeDevicePropertiesResponseOutput struct{ *pulumi.OutputState }

func (DataBoxEdgeDevicePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxEdgeDevicePropertiesResponse)(nil)).Elem()
}

func (o DataBoxEdgeDevicePropertiesResponseOutput) ToDataBoxEdgeDevicePropertiesResponseOutput() DataBoxEdgeDevicePropertiesResponseOutput {
	return o
}

func (o DataBoxEdgeDevicePropertiesResponseOutput) ToDataBoxEdgeDevicePropertiesResponseOutputWithContext(ctx context.Context) DataBoxEdgeDevicePropertiesResponseOutput {
	return o
}

func (o DataBoxEdgeDevicePropertiesResponseOutput) ToDataBoxEdgeDevicePropertiesResponsePtrOutput() DataBoxEdgeDevicePropertiesResponsePtrOutput {
	return o.ToDataBoxEdgeDevicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o DataBoxEdgeDevicePropertiesResponseOutput) ToDataBoxEdgeDevicePropertiesResponsePtrOutputWithContext(ctx context.Context) DataBoxEdgeDevicePropertiesResponsePtrOutput {
	return o.ApplyT(func(v DataBoxEdgeDevicePropertiesResponse) *DataBoxEdgeDevicePropertiesResponse {
		return &v
	}).(DataBoxEdgeDevicePropertiesResponsePtrOutput)
}

// Type of compute roles configured.
func (o DataBoxEdgeDevicePropertiesResponseOutput) ConfiguredRoleTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataBoxEdgeDevicePropertiesResponse) []string { return v.ConfiguredRoleTypes }).(pulumi.StringArrayOutput)
}

// The Data Box Edge/Gateway device culture.
func (o DataBoxEdgeDevicePropertiesResponseOutput) Culture() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxEdgeDevicePropertiesResponse) string { return v.Culture }).(pulumi.StringOutput)
}

// The status of the Data Box Edge/Gateway device.
func (o DataBoxEdgeDevicePropertiesResponseOutput) DataBoxEdgeDeviceStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBoxEdgeDevicePropertiesResponse) *string { return v.DataBoxEdgeDeviceStatus }).(pulumi.StringPtrOutput)
}

// The Description of the Data Box Edge/Gateway device.
func (o DataBoxEdgeDevicePropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBoxEdgeDevicePropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The device software version number of the device (eg: 1.2.18105.6).
func (o DataBoxEdgeDevicePropertiesResponseOutput) DeviceHcsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxEdgeDevicePropertiesResponse) string { return v.DeviceHcsVersion }).(pulumi.StringOutput)
}

// The Data Box Edge/Gateway device local capacity in MB.
func (o DataBoxEdgeDevicePropertiesResponseOutput) DeviceLocalCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v DataBoxEdgeDevicePropertiesResponse) int { return v.DeviceLocalCapacity }).(pulumi.IntOutput)
}

// The Data Box Edge/Gateway device model.
func (o DataBoxEdgeDevicePropertiesResponseOutput) DeviceModel() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxEdgeDevicePropertiesResponse) string { return v.DeviceModel }).(pulumi.StringOutput)
}

// The Data Box Edge/Gateway device software version.
func (o DataBoxEdgeDevicePropertiesResponseOutput) DeviceSoftwareVersion() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxEdgeDevicePropertiesResponse) string { return v.DeviceSoftwareVersion }).(pulumi.StringOutput)
}

// The type of the Data Box Edge/Gateway device.
func (o DataBoxEdgeDevicePropertiesResponseOutput) DeviceType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxEdgeDevicePropertiesResponse) string { return v.DeviceType }).(pulumi.StringOutput)
}

// The Data Box Edge/Gateway device name.
func (o DataBoxEdgeDevicePropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBoxEdgeDevicePropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The description of the Data Box Edge/Gateway device model.
func (o DataBoxEdgeDevicePropertiesResponseOutput) ModelDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBoxEdgeDevicePropertiesResponse) *string { return v.ModelDescription }).(pulumi.StringPtrOutput)
}

// The number of nodes in the cluster.
func (o DataBoxEdgeDevicePropertiesResponseOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v DataBoxEdgeDevicePropertiesResponse) int { return v.NodeCount }).(pulumi.IntOutput)
}

// The Serial Number of Data Box Edge/Gateway device.
func (o DataBoxEdgeDevicePropertiesResponseOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxEdgeDevicePropertiesResponse) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// The Data Box Edge/Gateway device timezone.
func (o DataBoxEdgeDevicePropertiesResponseOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxEdgeDevicePropertiesResponse) string { return v.TimeZone }).(pulumi.StringOutput)
}

type DataBoxEdgeDevicePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DataBoxEdgeDevicePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataBoxEdgeDevicePropertiesResponse)(nil)).Elem()
}

func (o DataBoxEdgeDevicePropertiesResponsePtrOutput) ToDataBoxEdgeDevicePropertiesResponsePtrOutput() DataBoxEdgeDevicePropertiesResponsePtrOutput {
	return o
}

func (o DataBoxEdgeDevicePropertiesResponsePtrOutput) ToDataBoxEdgeDevicePropertiesResponsePtrOutputWithContext(ctx context.Context) DataBoxEdgeDevicePropertiesResponsePtrOutput {
	return o
}

func (o DataBoxEdgeDevicePropertiesResponsePtrOutput) Elem() DataBoxEdgeDevicePropertiesResponseOutput {
	return o.ApplyT(func(v *DataBoxEdgeDevicePropertiesResponse) DataBoxEdgeDevicePropertiesResponse { return *v }).(DataBoxEdgeDevicePropertiesResponseOutput)
}

// Type of compute roles configured.
func (o DataBoxEdgeDevicePropertiesResponsePtrOutput) ConfiguredRoleTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataBoxEdgeDevicePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.ConfiguredRoleTypes
	}).(pulumi.StringArrayOutput)
}

// The Data Box Edge/Gateway device culture.
func (o DataBoxEdgeDevicePropertiesResponsePtrOutput) Culture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxEdgeDevicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Culture
	}).(pulumi.StringPtrOutput)
}

// The status of the Data Box Edge/Gateway device.
func (o DataBoxEdgeDevicePropertiesResponsePtrOutput) DataBoxEdgeDeviceStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxEdgeDevicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DataBoxEdgeDeviceStatus
	}).(pulumi.StringPtrOutput)
}

// The Description of the Data Box Edge/Gateway device.
func (o DataBoxEdgeDevicePropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxEdgeDevicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The device software version number of the device (eg: 1.2.18105.6).
func (o DataBoxEdgeDevicePropertiesResponsePtrOutput) DeviceHcsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxEdgeDevicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DeviceHcsVersion
	}).(pulumi.StringPtrOutput)
}

// The Data Box Edge/Gateway device local capacity in MB.
func (o DataBoxEdgeDevicePropertiesResponsePtrOutput) DeviceLocalCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataBoxEdgeDevicePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.DeviceLocalCapacity
	}).(pulumi.IntPtrOutput)
}

// The Data Box Edge/Gateway device model.
func (o DataBoxEdgeDevicePropertiesResponsePtrOutput) DeviceModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxEdgeDevicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DeviceModel
	}).(pulumi.StringPtrOutput)
}

// The Data Box Edge/Gateway device software version.
func (o DataBoxEdgeDevicePropertiesResponsePtrOutput) DeviceSoftwareVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxEdgeDevicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DeviceSoftwareVersion
	}).(pulumi.StringPtrOutput)
}

// The type of the Data Box Edge/Gateway device.
func (o DataBoxEdgeDevicePropertiesResponsePtrOutput) DeviceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxEdgeDevicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DeviceType
	}).(pulumi.StringPtrOutput)
}

// The Data Box Edge/Gateway device name.
func (o DataBoxEdgeDevicePropertiesResponsePtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxEdgeDevicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// The description of the Data Box Edge/Gateway device model.
func (o DataBoxEdgeDevicePropertiesResponsePtrOutput) ModelDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxEdgeDevicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ModelDescription
	}).(pulumi.StringPtrOutput)
}

// The number of nodes in the cluster.
func (o DataBoxEdgeDevicePropertiesResponsePtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataBoxEdgeDevicePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.NodeCount
	}).(pulumi.IntPtrOutput)
}

// The Serial Number of Data Box Edge/Gateway device.
func (o DataBoxEdgeDevicePropertiesResponsePtrOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxEdgeDevicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SerialNumber
	}).(pulumi.StringPtrOutput)
}

// The Data Box Edge/Gateway device timezone.
func (o DataBoxEdgeDevicePropertiesResponsePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataBoxEdgeDevicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// The Data Box Edge/Gateway device.
type DeviceType struct {
	// The etag for the devices.
	Etag *string `pulumi:"etag"`
	// The location of the device. This is a supported and registered Azure geographical region (for example, West US, East US, or Southeast Asia). The geographical region of a device cannot be changed once it is created, but if an identical geographical region is specified on update, the request will succeed.
	Location string `pulumi:"location"`
	// The object name.
	Name string `pulumi:"name"`
	// The properties of the Data Box Edge/Gateway device.
	Properties DataBoxEdgeDevicePropertiesResponse `pulumi:"properties"`
	// The SKU type.
	Sku *SkuResponse `pulumi:"sku"`
	// The list of tags that describe the device. These tags can be used to view and group this device (across resource groups).
	Tags map[string]string `pulumi:"tags"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
}

// DeviceTypeInput is an input type that accepts DeviceTypeArgs and DeviceTypeOutput values.
// You can construct a concrete instance of `DeviceTypeInput` via:
//
//          DeviceTypeArgs{...}
type DeviceTypeInput interface {
	pulumi.Input

	ToDeviceTypeOutput() DeviceTypeOutput
	ToDeviceTypeOutputWithContext(context.Context) DeviceTypeOutput
}

// The Data Box Edge/Gateway device.
type DeviceTypeArgs struct {
	// The etag for the devices.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// The location of the device. This is a supported and registered Azure geographical region (for example, West US, East US, or Southeast Asia). The geographical region of a device cannot be changed once it is created, but if an identical geographical region is specified on update, the request will succeed.
	Location pulumi.StringInput `pulumi:"location"`
	// The object name.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of the Data Box Edge/Gateway device.
	Properties DataBoxEdgeDevicePropertiesResponseInput `pulumi:"properties"`
	// The SKU type.
	Sku SkuResponsePtrInput `pulumi:"sku"`
	// The list of tags that describe the device. These tags can be used to view and group this device (across resource groups).
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The hierarchical type of the object.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DeviceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceType)(nil)).Elem()
}

func (i DeviceTypeArgs) ToDeviceTypeOutput() DeviceTypeOutput {
	return i.ToDeviceTypeOutputWithContext(context.Background())
}

func (i DeviceTypeArgs) ToDeviceTypeOutputWithContext(ctx context.Context) DeviceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceTypeOutput)
}

// The Data Box Edge/Gateway device.
type DeviceTypeOutput struct{ *pulumi.OutputState }

func (DeviceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceType)(nil)).Elem()
}

func (o DeviceTypeOutput) ToDeviceTypeOutput() DeviceTypeOutput {
	return o
}

func (o DeviceTypeOutput) ToDeviceTypeOutputWithContext(ctx context.Context) DeviceTypeOutput {
	return o
}

// The etag for the devices.
func (o DeviceTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The location of the device. This is a supported and registered Azure geographical region (for example, West US, East US, or Southeast Asia). The geographical region of a device cannot be changed once it is created, but if an identical geographical region is specified on update, the request will succeed.
func (o DeviceTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceType) string { return v.Location }).(pulumi.StringOutput)
}

// The object name.
func (o DeviceTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of the Data Box Edge/Gateway device.
func (o DeviceTypeOutput) Properties() DataBoxEdgeDevicePropertiesResponseOutput {
	return o.ApplyT(func(v DeviceType) DataBoxEdgeDevicePropertiesResponse { return v.Properties }).(DataBoxEdgeDevicePropertiesResponseOutput)
}

// The SKU type.
func (o DeviceTypeOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v DeviceType) *SkuResponse { return v.Sku }).(SkuResponsePtrOutput)
}

// The list of tags that describe the device. These tags can be used to view and group this device (across resource groups).
func (o DeviceTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v DeviceType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The hierarchical type of the object.
func (o DeviceTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceType) string { return v.Type }).(pulumi.StringOutput)
}

// The share mount point.
type MountPointMap struct {
	// ID of the share mounted to the role VM.
	ShareId string `pulumi:"shareId"`
}

// MountPointMapInput is an input type that accepts MountPointMap and MountPointMapOutput values.
// You can construct a concrete instance of `MountPointMapInput` via:
//
//          MountPointMap{ "key": MountPointArgs{...} }
type MountPointMapInput interface {
	pulumi.Input

	ToMountPointMapOutput() MountPointMapOutput
	ToMountPointMapOutputWithContext(context.Context) MountPointMapOutput
}

// The share mount point.
type MountPointMapArgs struct {
	// ID of the share mounted to the role VM.
	ShareId pulumi.StringInput `pulumi:"shareId"`
}

func (MountPointMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MountPointMap)(nil)).Elem()
}

func (i MountPointMapArgs) ToMountPointMapOutput() MountPointMapOutput {
	return i.ToMountPointMapOutputWithContext(context.Background())
}

func (i MountPointMapArgs) ToMountPointMapOutputWithContext(ctx context.Context) MountPointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountPointMapOutput)
}

// The share mount point.
type MountPointMapOutput struct{ *pulumi.OutputState }

func (MountPointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountPointMap)(nil)).Elem()
}

func (o MountPointMapOutput) ToMountPointMapOutput() MountPointMapOutput {
	return o
}

func (o MountPointMapOutput) ToMountPointMapOutputWithContext(ctx context.Context) MountPointMapOutput {
	return o
}

// ID of the share mounted to the role VM.
func (o MountPointMapOutput) ShareId() pulumi.StringOutput {
	return o.ApplyT(func(v MountPointMap) string { return v.ShareId }).(pulumi.StringOutput)
}

// The share mount point.
type MountPointMapResponse struct {
	// Mount point for the share.
	MountPoint string `pulumi:"mountPoint"`
	// ID of the role to which share is mounted.
	RoleId string `pulumi:"roleId"`
	// Role type.
	RoleType string `pulumi:"roleType"`
	// ID of the share mounted to the role VM.
	ShareId string `pulumi:"shareId"`
}

// MountPointMapResponseInput is an input type that accepts MountPointMapResponseArgs and MountPointMapResponseOutput values.
// You can construct a concrete instance of `MountPointMapResponseInput` via:
//
//          MountPointMapResponseArgs{...}
type MountPointMapResponseInput interface {
	pulumi.Input

	ToMountPointMapResponseOutput() MountPointMapResponseOutput
	ToMountPointMapResponseOutputWithContext(context.Context) MountPointMapResponseOutput
}

// The share mount point.
type MountPointMapResponseArgs struct {
	// Mount point for the share.
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	// ID of the role to which share is mounted.
	RoleId pulumi.StringInput `pulumi:"roleId"`
	// Role type.
	RoleType pulumi.StringInput `pulumi:"roleType"`
	// ID of the share mounted to the role VM.
	ShareId pulumi.StringInput `pulumi:"shareId"`
}

func (MountPointMapResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MountPointMapResponse)(nil)).Elem()
}

func (i MountPointMapResponseArgs) ToMountPointMapResponseOutput() MountPointMapResponseOutput {
	return i.ToMountPointMapResponseOutputWithContext(context.Background())
}

func (i MountPointMapResponseArgs) ToMountPointMapResponseOutputWithContext(ctx context.Context) MountPointMapResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountPointMapResponseOutput)
}

// MountPointMapResponseArrayInput is an input type that accepts MountPointMapResponseArray and MountPointMapResponseArrayOutput values.
// You can construct a concrete instance of `MountPointMapResponseArrayInput` via:
//
//          MountPointMapResponseArray{ MountPointMapResponseArgs{...} }
type MountPointMapResponseArrayInput interface {
	pulumi.Input

	ToMountPointMapResponseArrayOutput() MountPointMapResponseArrayOutput
	ToMountPointMapResponseArrayOutputWithContext(context.Context) MountPointMapResponseArrayOutput
}

type MountPointMapResponseArray []MountPointMapResponseInput

func (MountPointMapResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountPointMapResponse)(nil)).Elem()
}

func (i MountPointMapResponseArray) ToMountPointMapResponseArrayOutput() MountPointMapResponseArrayOutput {
	return i.ToMountPointMapResponseArrayOutputWithContext(context.Background())
}

func (i MountPointMapResponseArray) ToMountPointMapResponseArrayOutputWithContext(ctx context.Context) MountPointMapResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountPointMapResponseArrayOutput)
}

// The share mount point.
type MountPointMapResponseOutput struct{ *pulumi.OutputState }

func (MountPointMapResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountPointMapResponse)(nil)).Elem()
}

func (o MountPointMapResponseOutput) ToMountPointMapResponseOutput() MountPointMapResponseOutput {
	return o
}

func (o MountPointMapResponseOutput) ToMountPointMapResponseOutputWithContext(ctx context.Context) MountPointMapResponseOutput {
	return o
}

// Mount point for the share.
func (o MountPointMapResponseOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v MountPointMapResponse) string { return v.MountPoint }).(pulumi.StringOutput)
}

// ID of the role to which share is mounted.
func (o MountPointMapResponseOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v MountPointMapResponse) string { return v.RoleId }).(pulumi.StringOutput)
}

// Role type.
func (o MountPointMapResponseOutput) RoleType() pulumi.StringOutput {
	return o.ApplyT(func(v MountPointMapResponse) string { return v.RoleType }).(pulumi.StringOutput)
}

// ID of the share mounted to the role VM.
func (o MountPointMapResponseOutput) ShareId() pulumi.StringOutput {
	return o.ApplyT(func(v MountPointMapResponse) string { return v.ShareId }).(pulumi.StringOutput)
}

type MountPointMapResponseArrayOutput struct{ *pulumi.OutputState }

func (MountPointMapResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountPointMapResponse)(nil)).Elem()
}

func (o MountPointMapResponseArrayOutput) ToMountPointMapResponseArrayOutput() MountPointMapResponseArrayOutput {
	return o
}

func (o MountPointMapResponseArrayOutput) ToMountPointMapResponseArrayOutputWithContext(ctx context.Context) MountPointMapResponseArrayOutput {
	return o
}

func (o MountPointMapResponseArrayOutput) Index(i pulumi.IntInput) MountPointMapResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MountPointMapResponse {
		return vs[0].([]MountPointMapResponse)[vs[1].(int)]
	}).(MountPointMapResponseOutput)
}

// The order details.
type OrderType struct {
	// The object name.
	Name string `pulumi:"name"`
	// The order properties.
	Properties OrderPropertiesResponse `pulumi:"properties"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
}

// OrderTypeInput is an input type that accepts OrderTypeArgs and OrderTypeOutput values.
// You can construct a concrete instance of `OrderTypeInput` via:
//
//          OrderTypeArgs{...}
type OrderTypeInput interface {
	pulumi.Input

	ToOrderTypeOutput() OrderTypeOutput
	ToOrderTypeOutputWithContext(context.Context) OrderTypeOutput
}

// The order details.
type OrderTypeArgs struct {
	// The object name.
	Name pulumi.StringInput `pulumi:"name"`
	// The order properties.
	Properties OrderPropertiesResponseInput `pulumi:"properties"`
	// The hierarchical type of the object.
	Type pulumi.StringInput `pulumi:"type"`
}

func (OrderTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderType)(nil)).Elem()
}

func (i OrderTypeArgs) ToOrderTypeOutput() OrderTypeOutput {
	return i.ToOrderTypeOutputWithContext(context.Background())
}

func (i OrderTypeArgs) ToOrderTypeOutputWithContext(ctx context.Context) OrderTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderTypeOutput)
}

// The order details.
type OrderTypeOutput struct{ *pulumi.OutputState }

func (OrderTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderType)(nil)).Elem()
}

func (o OrderTypeOutput) ToOrderTypeOutput() OrderTypeOutput {
	return o
}

func (o OrderTypeOutput) ToOrderTypeOutputWithContext(ctx context.Context) OrderTypeOutput {
	return o
}

// The object name.
func (o OrderTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OrderType) string { return v.Name }).(pulumi.StringOutput)
}

// The order properties.
func (o OrderTypeOutput) Properties() OrderPropertiesResponseOutput {
	return o.ApplyT(func(v OrderType) OrderPropertiesResponse { return v.Properties }).(OrderPropertiesResponseOutput)
}

// The hierarchical type of the object.
func (o OrderTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OrderType) string { return v.Type }).(pulumi.StringOutput)
}

// Order properties.
type OrderPropertiesResponse struct {
	// The contact details.
	ContactInformation ContactDetailsResponse `pulumi:"contactInformation"`
	// Current status of the order.
	CurrentStatus *OrderStatusResponse `pulumi:"currentStatus"`
	// Tracking information for the package delivered to the customer whether it has an original or a replacement device.
	DeliveryTrackingInfo []TrackingInfoResponse `pulumi:"deliveryTrackingInfo"`
	// List of status changes in the order.
	OrderHistory []OrderStatusResponse `pulumi:"orderHistory"`
	// Tracking information for the package returned from the customer whether it has an original or a replacement device.
	ReturnTrackingInfo []TrackingInfoResponse `pulumi:"returnTrackingInfo"`
	// Serial number of the device.
	SerialNumber string `pulumi:"serialNumber"`
	// The shipping address.
	ShippingAddress AddressResponse `pulumi:"shippingAddress"`
}

// OrderPropertiesResponseInput is an input type that accepts OrderPropertiesResponseArgs and OrderPropertiesResponseOutput values.
// You can construct a concrete instance of `OrderPropertiesResponseInput` via:
//
//          OrderPropertiesResponseArgs{...}
type OrderPropertiesResponseInput interface {
	pulumi.Input

	ToOrderPropertiesResponseOutput() OrderPropertiesResponseOutput
	ToOrderPropertiesResponseOutputWithContext(context.Context) OrderPropertiesResponseOutput
}

// Order properties.
type OrderPropertiesResponseArgs struct {
	// The contact details.
	ContactInformation ContactDetailsResponseInput `pulumi:"contactInformation"`
	// Current status of the order.
	CurrentStatus OrderStatusResponsePtrInput `pulumi:"currentStatus"`
	// Tracking information for the package delivered to the customer whether it has an original or a replacement device.
	DeliveryTrackingInfo TrackingInfoResponseArrayInput `pulumi:"deliveryTrackingInfo"`
	// List of status changes in the order.
	OrderHistory OrderStatusResponseArrayInput `pulumi:"orderHistory"`
	// Tracking information for the package returned from the customer whether it has an original or a replacement device.
	ReturnTrackingInfo TrackingInfoResponseArrayInput `pulumi:"returnTrackingInfo"`
	// Serial number of the device.
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// The shipping address.
	ShippingAddress AddressResponseInput `pulumi:"shippingAddress"`
}

func (OrderPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderPropertiesResponse)(nil)).Elem()
}

func (i OrderPropertiesResponseArgs) ToOrderPropertiesResponseOutput() OrderPropertiesResponseOutput {
	return i.ToOrderPropertiesResponseOutputWithContext(context.Background())
}

func (i OrderPropertiesResponseArgs) ToOrderPropertiesResponseOutputWithContext(ctx context.Context) OrderPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderPropertiesResponseOutput)
}

func (i OrderPropertiesResponseArgs) ToOrderPropertiesResponsePtrOutput() OrderPropertiesResponsePtrOutput {
	return i.ToOrderPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i OrderPropertiesResponseArgs) ToOrderPropertiesResponsePtrOutputWithContext(ctx context.Context) OrderPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderPropertiesResponseOutput).ToOrderPropertiesResponsePtrOutputWithContext(ctx)
}

// OrderPropertiesResponsePtrInput is an input type that accepts OrderPropertiesResponseArgs, OrderPropertiesResponsePtr and OrderPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `OrderPropertiesResponsePtrInput` via:
//
//          OrderPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type OrderPropertiesResponsePtrInput interface {
	pulumi.Input

	ToOrderPropertiesResponsePtrOutput() OrderPropertiesResponsePtrOutput
	ToOrderPropertiesResponsePtrOutputWithContext(context.Context) OrderPropertiesResponsePtrOutput
}

type orderPropertiesResponsePtrType OrderPropertiesResponseArgs

func OrderPropertiesResponsePtr(v *OrderPropertiesResponseArgs) OrderPropertiesResponsePtrInput {
	return (*orderPropertiesResponsePtrType)(v)
}

func (*orderPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderPropertiesResponse)(nil)).Elem()
}

func (i *orderPropertiesResponsePtrType) ToOrderPropertiesResponsePtrOutput() OrderPropertiesResponsePtrOutput {
	return i.ToOrderPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *orderPropertiesResponsePtrType) ToOrderPropertiesResponsePtrOutputWithContext(ctx context.Context) OrderPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderPropertiesResponsePtrOutput)
}

// Order properties.
type OrderPropertiesResponseOutput struct{ *pulumi.OutputState }

func (OrderPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderPropertiesResponse)(nil)).Elem()
}

func (o OrderPropertiesResponseOutput) ToOrderPropertiesResponseOutput() OrderPropertiesResponseOutput {
	return o
}

func (o OrderPropertiesResponseOutput) ToOrderPropertiesResponseOutputWithContext(ctx context.Context) OrderPropertiesResponseOutput {
	return o
}

func (o OrderPropertiesResponseOutput) ToOrderPropertiesResponsePtrOutput() OrderPropertiesResponsePtrOutput {
	return o.ToOrderPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o OrderPropertiesResponseOutput) ToOrderPropertiesResponsePtrOutputWithContext(ctx context.Context) OrderPropertiesResponsePtrOutput {
	return o.ApplyT(func(v OrderPropertiesResponse) *OrderPropertiesResponse {
		return &v
	}).(OrderPropertiesResponsePtrOutput)
}

// The contact details.
func (o OrderPropertiesResponseOutput) ContactInformation() ContactDetailsResponseOutput {
	return o.ApplyT(func(v OrderPropertiesResponse) ContactDetailsResponse { return v.ContactInformation }).(ContactDetailsResponseOutput)
}

// Current status of the order.
func (o OrderPropertiesResponseOutput) CurrentStatus() OrderStatusResponsePtrOutput {
	return o.ApplyT(func(v OrderPropertiesResponse) *OrderStatusResponse { return v.CurrentStatus }).(OrderStatusResponsePtrOutput)
}

// Tracking information for the package delivered to the customer whether it has an original or a replacement device.
func (o OrderPropertiesResponseOutput) DeliveryTrackingInfo() TrackingInfoResponseArrayOutput {
	return o.ApplyT(func(v OrderPropertiesResponse) []TrackingInfoResponse { return v.DeliveryTrackingInfo }).(TrackingInfoResponseArrayOutput)
}

// List of status changes in the order.
func (o OrderPropertiesResponseOutput) OrderHistory() OrderStatusResponseArrayOutput {
	return o.ApplyT(func(v OrderPropertiesResponse) []OrderStatusResponse { return v.OrderHistory }).(OrderStatusResponseArrayOutput)
}

// Tracking information for the package returned from the customer whether it has an original or a replacement device.
func (o OrderPropertiesResponseOutput) ReturnTrackingInfo() TrackingInfoResponseArrayOutput {
	return o.ApplyT(func(v OrderPropertiesResponse) []TrackingInfoResponse { return v.ReturnTrackingInfo }).(TrackingInfoResponseArrayOutput)
}

// Serial number of the device.
func (o OrderPropertiesResponseOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v OrderPropertiesResponse) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// The shipping address.
func (o OrderPropertiesResponseOutput) ShippingAddress() AddressResponseOutput {
	return o.ApplyT(func(v OrderPropertiesResponse) AddressResponse { return v.ShippingAddress }).(AddressResponseOutput)
}

type OrderPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (OrderPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderPropertiesResponse)(nil)).Elem()
}

func (o OrderPropertiesResponsePtrOutput) ToOrderPropertiesResponsePtrOutput() OrderPropertiesResponsePtrOutput {
	return o
}

func (o OrderPropertiesResponsePtrOutput) ToOrderPropertiesResponsePtrOutputWithContext(ctx context.Context) OrderPropertiesResponsePtrOutput {
	return o
}

func (o OrderPropertiesResponsePtrOutput) Elem() OrderPropertiesResponseOutput {
	return o.ApplyT(func(v *OrderPropertiesResponse) OrderPropertiesResponse { return *v }).(OrderPropertiesResponseOutput)
}

// The contact details.
func (o OrderPropertiesResponsePtrOutput) ContactInformation() ContactDetailsResponsePtrOutput {
	return o.ApplyT(func(v *OrderPropertiesResponse) *ContactDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.ContactInformation
	}).(ContactDetailsResponsePtrOutput)
}

// Current status of the order.
func (o OrderPropertiesResponsePtrOutput) CurrentStatus() OrderStatusResponsePtrOutput {
	return o.ApplyT(func(v *OrderPropertiesResponse) *OrderStatusResponse {
		if v == nil {
			return nil
		}
		return v.CurrentStatus
	}).(OrderStatusResponsePtrOutput)
}

// Tracking information for the package delivered to the customer whether it has an original or a replacement device.
func (o OrderPropertiesResponsePtrOutput) DeliveryTrackingInfo() TrackingInfoResponseArrayOutput {
	return o.ApplyT(func(v *OrderPropertiesResponse) []TrackingInfoResponse {
		if v == nil {
			return nil
		}
		return v.DeliveryTrackingInfo
	}).(TrackingInfoResponseArrayOutput)
}

// List of status changes in the order.
func (o OrderPropertiesResponsePtrOutput) OrderHistory() OrderStatusResponseArrayOutput {
	return o.ApplyT(func(v *OrderPropertiesResponse) []OrderStatusResponse {
		if v == nil {
			return nil
		}
		return v.OrderHistory
	}).(OrderStatusResponseArrayOutput)
}

// Tracking information for the package returned from the customer whether it has an original or a replacement device.
func (o OrderPropertiesResponsePtrOutput) ReturnTrackingInfo() TrackingInfoResponseArrayOutput {
	return o.ApplyT(func(v *OrderPropertiesResponse) []TrackingInfoResponse {
		if v == nil {
			return nil
		}
		return v.ReturnTrackingInfo
	}).(TrackingInfoResponseArrayOutput)
}

// Serial number of the device.
func (o OrderPropertiesResponsePtrOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SerialNumber
	}).(pulumi.StringPtrOutput)
}

// The shipping address.
func (o OrderPropertiesResponsePtrOutput) ShippingAddress() AddressResponsePtrOutput {
	return o.ApplyT(func(v *OrderPropertiesResponse) *AddressResponse {
		if v == nil {
			return nil
		}
		return &v.ShippingAddress
	}).(AddressResponsePtrOutput)
}

// Represents a single status change.
type OrderStatus struct {
	// Comments related to this status change.
	Comments *string `pulumi:"comments"`
	// Status of the order as per the allowed status types.
	Status string `pulumi:"status"`
}

// OrderStatusInput is an input type that accepts OrderStatusArgs and OrderStatusOutput values.
// You can construct a concrete instance of `OrderStatusInput` via:
//
//          OrderStatusArgs{...}
type OrderStatusInput interface {
	pulumi.Input

	ToOrderStatusOutput() OrderStatusOutput
	ToOrderStatusOutputWithContext(context.Context) OrderStatusOutput
}

// Represents a single status change.
type OrderStatusArgs struct {
	// Comments related to this status change.
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	// Status of the order as per the allowed status types.
	Status pulumi.StringInput `pulumi:"status"`
}

func (OrderStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderStatus)(nil)).Elem()
}

func (i OrderStatusArgs) ToOrderStatusOutput() OrderStatusOutput {
	return i.ToOrderStatusOutputWithContext(context.Background())
}

func (i OrderStatusArgs) ToOrderStatusOutputWithContext(ctx context.Context) OrderStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderStatusOutput)
}

func (i OrderStatusArgs) ToOrderStatusPtrOutput() OrderStatusPtrOutput {
	return i.ToOrderStatusPtrOutputWithContext(context.Background())
}

func (i OrderStatusArgs) ToOrderStatusPtrOutputWithContext(ctx context.Context) OrderStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderStatusOutput).ToOrderStatusPtrOutputWithContext(ctx)
}

// OrderStatusPtrInput is an input type that accepts OrderStatusArgs, OrderStatusPtr and OrderStatusPtrOutput values.
// You can construct a concrete instance of `OrderStatusPtrInput` via:
//
//          OrderStatusArgs{...}
//
//  or:
//
//          nil
type OrderStatusPtrInput interface {
	pulumi.Input

	ToOrderStatusPtrOutput() OrderStatusPtrOutput
	ToOrderStatusPtrOutputWithContext(context.Context) OrderStatusPtrOutput
}

type orderStatusPtrType OrderStatusArgs

func OrderStatusPtr(v *OrderStatusArgs) OrderStatusPtrInput {
	return (*orderStatusPtrType)(v)
}

func (*orderStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderStatus)(nil)).Elem()
}

func (i *orderStatusPtrType) ToOrderStatusPtrOutput() OrderStatusPtrOutput {
	return i.ToOrderStatusPtrOutputWithContext(context.Background())
}

func (i *orderStatusPtrType) ToOrderStatusPtrOutputWithContext(ctx context.Context) OrderStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderStatusPtrOutput)
}

// Represents a single status change.
type OrderStatusOutput struct{ *pulumi.OutputState }

func (OrderStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderStatus)(nil)).Elem()
}

func (o OrderStatusOutput) ToOrderStatusOutput() OrderStatusOutput {
	return o
}

func (o OrderStatusOutput) ToOrderStatusOutputWithContext(ctx context.Context) OrderStatusOutput {
	return o
}

func (o OrderStatusOutput) ToOrderStatusPtrOutput() OrderStatusPtrOutput {
	return o.ToOrderStatusPtrOutputWithContext(context.Background())
}

func (o OrderStatusOutput) ToOrderStatusPtrOutputWithContext(ctx context.Context) OrderStatusPtrOutput {
	return o.ApplyT(func(v OrderStatus) *OrderStatus {
		return &v
	}).(OrderStatusPtrOutput)
}

// Comments related to this status change.
func (o OrderStatusOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderStatus) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

// Status of the order as per the allowed status types.
func (o OrderStatusOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v OrderStatus) string { return v.Status }).(pulumi.StringOutput)
}

type OrderStatusPtrOutput struct{ *pulumi.OutputState }

func (OrderStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderStatus)(nil)).Elem()
}

func (o OrderStatusPtrOutput) ToOrderStatusPtrOutput() OrderStatusPtrOutput {
	return o
}

func (o OrderStatusPtrOutput) ToOrderStatusPtrOutputWithContext(ctx context.Context) OrderStatusPtrOutput {
	return o
}

func (o OrderStatusPtrOutput) Elem() OrderStatusOutput {
	return o.ApplyT(func(v *OrderStatus) OrderStatus { return *v }).(OrderStatusOutput)
}

// Comments related to this status change.
func (o OrderStatusPtrOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderStatus) *string {
		if v == nil {
			return nil
		}
		return v.Comments
	}).(pulumi.StringPtrOutput)
}

// Status of the order as per the allowed status types.
func (o OrderStatusPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderStatus) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// Represents a single status change.
type OrderStatusResponse struct {
	// Dictionary to hold generic information which is not stored
	// by the already existing properties
	AdditionalOrderDetails map[string]string `pulumi:"additionalOrderDetails"`
	// Comments related to this status change.
	Comments *string `pulumi:"comments"`
	// Status of the order as per the allowed status types.
	Status string `pulumi:"status"`
	// Time of status update.
	UpdateDateTime string `pulumi:"updateDateTime"`
}

// OrderStatusResponseInput is an input type that accepts OrderStatusResponseArgs and OrderStatusResponseOutput values.
// You can construct a concrete instance of `OrderStatusResponseInput` via:
//
//          OrderStatusResponseArgs{...}
type OrderStatusResponseInput interface {
	pulumi.Input

	ToOrderStatusResponseOutput() OrderStatusResponseOutput
	ToOrderStatusResponseOutputWithContext(context.Context) OrderStatusResponseOutput
}

// Represents a single status change.
type OrderStatusResponseArgs struct {
	// Dictionary to hold generic information which is not stored
	// by the already existing properties
	AdditionalOrderDetails pulumi.StringMapInput `pulumi:"additionalOrderDetails"`
	// Comments related to this status change.
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	// Status of the order as per the allowed status types.
	Status pulumi.StringInput `pulumi:"status"`
	// Time of status update.
	UpdateDateTime pulumi.StringInput `pulumi:"updateDateTime"`
}

func (OrderStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderStatusResponse)(nil)).Elem()
}

func (i OrderStatusResponseArgs) ToOrderStatusResponseOutput() OrderStatusResponseOutput {
	return i.ToOrderStatusResponseOutputWithContext(context.Background())
}

func (i OrderStatusResponseArgs) ToOrderStatusResponseOutputWithContext(ctx context.Context) OrderStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderStatusResponseOutput)
}

func (i OrderStatusResponseArgs) ToOrderStatusResponsePtrOutput() OrderStatusResponsePtrOutput {
	return i.ToOrderStatusResponsePtrOutputWithContext(context.Background())
}

func (i OrderStatusResponseArgs) ToOrderStatusResponsePtrOutputWithContext(ctx context.Context) OrderStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderStatusResponseOutput).ToOrderStatusResponsePtrOutputWithContext(ctx)
}

// OrderStatusResponsePtrInput is an input type that accepts OrderStatusResponseArgs, OrderStatusResponsePtr and OrderStatusResponsePtrOutput values.
// You can construct a concrete instance of `OrderStatusResponsePtrInput` via:
//
//          OrderStatusResponseArgs{...}
//
//  or:
//
//          nil
type OrderStatusResponsePtrInput interface {
	pulumi.Input

	ToOrderStatusResponsePtrOutput() OrderStatusResponsePtrOutput
	ToOrderStatusResponsePtrOutputWithContext(context.Context) OrderStatusResponsePtrOutput
}

type orderStatusResponsePtrType OrderStatusResponseArgs

func OrderStatusResponsePtr(v *OrderStatusResponseArgs) OrderStatusResponsePtrInput {
	return (*orderStatusResponsePtrType)(v)
}

func (*orderStatusResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderStatusResponse)(nil)).Elem()
}

func (i *orderStatusResponsePtrType) ToOrderStatusResponsePtrOutput() OrderStatusResponsePtrOutput {
	return i.ToOrderStatusResponsePtrOutputWithContext(context.Background())
}

func (i *orderStatusResponsePtrType) ToOrderStatusResponsePtrOutputWithContext(ctx context.Context) OrderStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderStatusResponsePtrOutput)
}

// OrderStatusResponseArrayInput is an input type that accepts OrderStatusResponseArray and OrderStatusResponseArrayOutput values.
// You can construct a concrete instance of `OrderStatusResponseArrayInput` via:
//
//          OrderStatusResponseArray{ OrderStatusResponseArgs{...} }
type OrderStatusResponseArrayInput interface {
	pulumi.Input

	ToOrderStatusResponseArrayOutput() OrderStatusResponseArrayOutput
	ToOrderStatusResponseArrayOutputWithContext(context.Context) OrderStatusResponseArrayOutput
}

type OrderStatusResponseArray []OrderStatusResponseInput

func (OrderStatusResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrderStatusResponse)(nil)).Elem()
}

func (i OrderStatusResponseArray) ToOrderStatusResponseArrayOutput() OrderStatusResponseArrayOutput {
	return i.ToOrderStatusResponseArrayOutputWithContext(context.Background())
}

func (i OrderStatusResponseArray) ToOrderStatusResponseArrayOutputWithContext(ctx context.Context) OrderStatusResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderStatusResponseArrayOutput)
}

// Represents a single status change.
type OrderStatusResponseOutput struct{ *pulumi.OutputState }

func (OrderStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderStatusResponse)(nil)).Elem()
}

func (o OrderStatusResponseOutput) ToOrderStatusResponseOutput() OrderStatusResponseOutput {
	return o
}

func (o OrderStatusResponseOutput) ToOrderStatusResponseOutputWithContext(ctx context.Context) OrderStatusResponseOutput {
	return o
}

func (o OrderStatusResponseOutput) ToOrderStatusResponsePtrOutput() OrderStatusResponsePtrOutput {
	return o.ToOrderStatusResponsePtrOutputWithContext(context.Background())
}

func (o OrderStatusResponseOutput) ToOrderStatusResponsePtrOutputWithContext(ctx context.Context) OrderStatusResponsePtrOutput {
	return o.ApplyT(func(v OrderStatusResponse) *OrderStatusResponse {
		return &v
	}).(OrderStatusResponsePtrOutput)
}

// Dictionary to hold generic information which is not stored
// by the already existing properties
func (o OrderStatusResponseOutput) AdditionalOrderDetails() pulumi.StringMapOutput {
	return o.ApplyT(func(v OrderStatusResponse) map[string]string { return v.AdditionalOrderDetails }).(pulumi.StringMapOutput)
}

// Comments related to this status change.
func (o OrderStatusResponseOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderStatusResponse) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

// Status of the order as per the allowed status types.
func (o OrderStatusResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v OrderStatusResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Time of status update.
func (o OrderStatusResponseOutput) UpdateDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v OrderStatusResponse) string { return v.UpdateDateTime }).(pulumi.StringOutput)
}

type OrderStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (OrderStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderStatusResponse)(nil)).Elem()
}

func (o OrderStatusResponsePtrOutput) ToOrderStatusResponsePtrOutput() OrderStatusResponsePtrOutput {
	return o
}

func (o OrderStatusResponsePtrOutput) ToOrderStatusResponsePtrOutputWithContext(ctx context.Context) OrderStatusResponsePtrOutput {
	return o
}

func (o OrderStatusResponsePtrOutput) Elem() OrderStatusResponseOutput {
	return o.ApplyT(func(v *OrderStatusResponse) OrderStatusResponse { return *v }).(OrderStatusResponseOutput)
}

// Dictionary to hold generic information which is not stored
// by the already existing properties
func (o OrderStatusResponsePtrOutput) AdditionalOrderDetails() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OrderStatusResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.AdditionalOrderDetails
	}).(pulumi.StringMapOutput)
}

// Comments related to this status change.
func (o OrderStatusResponsePtrOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.Comments
	}).(pulumi.StringPtrOutput)
}

// Status of the order as per the allowed status types.
func (o OrderStatusResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// Time of status update.
func (o OrderStatusResponsePtrOutput) UpdateDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UpdateDateTime
	}).(pulumi.StringPtrOutput)
}

type OrderStatusResponseArrayOutput struct{ *pulumi.OutputState }

func (OrderStatusResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrderStatusResponse)(nil)).Elem()
}

func (o OrderStatusResponseArrayOutput) ToOrderStatusResponseArrayOutput() OrderStatusResponseArrayOutput {
	return o
}

func (o OrderStatusResponseArrayOutput) ToOrderStatusResponseArrayOutputWithContext(ctx context.Context) OrderStatusResponseArrayOutput {
	return o
}

func (o OrderStatusResponseArrayOutput) Index(i pulumi.IntInput) OrderStatusResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrderStatusResponse {
		return vs[0].([]OrderStatusResponse)[vs[1].(int)]
	}).(OrderStatusResponseOutput)
}

// Fields for tracking refresh job on the share or container.
type RefreshDetails struct {
	// Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job.
	ErrorManifestFile *string `pulumi:"errorManifestFile"`
	// If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.
	InProgressRefreshJobId *string `pulumi:"inProgressRefreshJobId"`
	// Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job.
	LastCompletedRefreshJobTimeInUTC *string `pulumi:"lastCompletedRefreshJobTimeInUTC"`
	// Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job.
	LastJob *string `pulumi:"lastJob"`
}

// RefreshDetailsInput is an input type that accepts RefreshDetailsArgs and RefreshDetailsOutput values.
// You can construct a concrete instance of `RefreshDetailsInput` via:
//
//          RefreshDetailsArgs{...}
type RefreshDetailsInput interface {
	pulumi.Input

	ToRefreshDetailsOutput() RefreshDetailsOutput
	ToRefreshDetailsOutputWithContext(context.Context) RefreshDetailsOutput
}

// Fields for tracking refresh job on the share or container.
type RefreshDetailsArgs struct {
	// Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job.
	ErrorManifestFile pulumi.StringPtrInput `pulumi:"errorManifestFile"`
	// If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.
	InProgressRefreshJobId pulumi.StringPtrInput `pulumi:"inProgressRefreshJobId"`
	// Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job.
	LastCompletedRefreshJobTimeInUTC pulumi.StringPtrInput `pulumi:"lastCompletedRefreshJobTimeInUTC"`
	// Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job.
	LastJob pulumi.StringPtrInput `pulumi:"lastJob"`
}

func (RefreshDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RefreshDetails)(nil)).Elem()
}

func (i RefreshDetailsArgs) ToRefreshDetailsOutput() RefreshDetailsOutput {
	return i.ToRefreshDetailsOutputWithContext(context.Background())
}

func (i RefreshDetailsArgs) ToRefreshDetailsOutputWithContext(ctx context.Context) RefreshDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RefreshDetailsOutput)
}

func (i RefreshDetailsArgs) ToRefreshDetailsPtrOutput() RefreshDetailsPtrOutput {
	return i.ToRefreshDetailsPtrOutputWithContext(context.Background())
}

func (i RefreshDetailsArgs) ToRefreshDetailsPtrOutputWithContext(ctx context.Context) RefreshDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RefreshDetailsOutput).ToRefreshDetailsPtrOutputWithContext(ctx)
}

// RefreshDetailsPtrInput is an input type that accepts RefreshDetailsArgs, RefreshDetailsPtr and RefreshDetailsPtrOutput values.
// You can construct a concrete instance of `RefreshDetailsPtrInput` via:
//
//          RefreshDetailsArgs{...}
//
//  or:
//
//          nil
type RefreshDetailsPtrInput interface {
	pulumi.Input

	ToRefreshDetailsPtrOutput() RefreshDetailsPtrOutput
	ToRefreshDetailsPtrOutputWithContext(context.Context) RefreshDetailsPtrOutput
}

type refreshDetailsPtrType RefreshDetailsArgs

func RefreshDetailsPtr(v *RefreshDetailsArgs) RefreshDetailsPtrInput {
	return (*refreshDetailsPtrType)(v)
}

func (*refreshDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RefreshDetails)(nil)).Elem()
}

func (i *refreshDetailsPtrType) ToRefreshDetailsPtrOutput() RefreshDetailsPtrOutput {
	return i.ToRefreshDetailsPtrOutputWithContext(context.Background())
}

func (i *refreshDetailsPtrType) ToRefreshDetailsPtrOutputWithContext(ctx context.Context) RefreshDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RefreshDetailsPtrOutput)
}

// Fields for tracking refresh job on the share or container.
type RefreshDetailsOutput struct{ *pulumi.OutputState }

func (RefreshDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RefreshDetails)(nil)).Elem()
}

func (o RefreshDetailsOutput) ToRefreshDetailsOutput() RefreshDetailsOutput {
	return o
}

func (o RefreshDetailsOutput) ToRefreshDetailsOutputWithContext(ctx context.Context) RefreshDetailsOutput {
	return o
}

func (o RefreshDetailsOutput) ToRefreshDetailsPtrOutput() RefreshDetailsPtrOutput {
	return o.ToRefreshDetailsPtrOutputWithContext(context.Background())
}

func (o RefreshDetailsOutput) ToRefreshDetailsPtrOutputWithContext(ctx context.Context) RefreshDetailsPtrOutput {
	return o.ApplyT(func(v RefreshDetails) *RefreshDetails {
		return &v
	}).(RefreshDetailsPtrOutput)
}

// Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job.
func (o RefreshDetailsOutput) ErrorManifestFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RefreshDetails) *string { return v.ErrorManifestFile }).(pulumi.StringPtrOutput)
}

// If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.
func (o RefreshDetailsOutput) InProgressRefreshJobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RefreshDetails) *string { return v.InProgressRefreshJobId }).(pulumi.StringPtrOutput)
}

// Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job.
func (o RefreshDetailsOutput) LastCompletedRefreshJobTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RefreshDetails) *string { return v.LastCompletedRefreshJobTimeInUTC }).(pulumi.StringPtrOutput)
}

// Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job.
func (o RefreshDetailsOutput) LastJob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RefreshDetails) *string { return v.LastJob }).(pulumi.StringPtrOutput)
}

type RefreshDetailsPtrOutput struct{ *pulumi.OutputState }

func (RefreshDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RefreshDetails)(nil)).Elem()
}

func (o RefreshDetailsPtrOutput) ToRefreshDetailsPtrOutput() RefreshDetailsPtrOutput {
	return o
}

func (o RefreshDetailsPtrOutput) ToRefreshDetailsPtrOutputWithContext(ctx context.Context) RefreshDetailsPtrOutput {
	return o
}

func (o RefreshDetailsPtrOutput) Elem() RefreshDetailsOutput {
	return o.ApplyT(func(v *RefreshDetails) RefreshDetails { return *v }).(RefreshDetailsOutput)
}

// Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job.
func (o RefreshDetailsPtrOutput) ErrorManifestFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshDetails) *string {
		if v == nil {
			return nil
		}
		return v.ErrorManifestFile
	}).(pulumi.StringPtrOutput)
}

// If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.
func (o RefreshDetailsPtrOutput) InProgressRefreshJobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshDetails) *string {
		if v == nil {
			return nil
		}
		return v.InProgressRefreshJobId
	}).(pulumi.StringPtrOutput)
}

// Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job.
func (o RefreshDetailsPtrOutput) LastCompletedRefreshJobTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastCompletedRefreshJobTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job.
func (o RefreshDetailsPtrOutput) LastJob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastJob
	}).(pulumi.StringPtrOutput)
}

// Fields for tracking refresh job on the share or container.
type RefreshDetailsResponse struct {
	// Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job.
	ErrorManifestFile *string `pulumi:"errorManifestFile"`
	// If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.
	InProgressRefreshJobId *string `pulumi:"inProgressRefreshJobId"`
	// Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job.
	LastCompletedRefreshJobTimeInUTC *string `pulumi:"lastCompletedRefreshJobTimeInUTC"`
	// Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job.
	LastJob *string `pulumi:"lastJob"`
}

// RefreshDetailsResponseInput is an input type that accepts RefreshDetailsResponseArgs and RefreshDetailsResponseOutput values.
// You can construct a concrete instance of `RefreshDetailsResponseInput` via:
//
//          RefreshDetailsResponseArgs{...}
type RefreshDetailsResponseInput interface {
	pulumi.Input

	ToRefreshDetailsResponseOutput() RefreshDetailsResponseOutput
	ToRefreshDetailsResponseOutputWithContext(context.Context) RefreshDetailsResponseOutput
}

// Fields for tracking refresh job on the share or container.
type RefreshDetailsResponseArgs struct {
	// Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job.
	ErrorManifestFile pulumi.StringPtrInput `pulumi:"errorManifestFile"`
	// If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.
	InProgressRefreshJobId pulumi.StringPtrInput `pulumi:"inProgressRefreshJobId"`
	// Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job.
	LastCompletedRefreshJobTimeInUTC pulumi.StringPtrInput `pulumi:"lastCompletedRefreshJobTimeInUTC"`
	// Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job.
	LastJob pulumi.StringPtrInput `pulumi:"lastJob"`
}

func (RefreshDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RefreshDetailsResponse)(nil)).Elem()
}

func (i RefreshDetailsResponseArgs) ToRefreshDetailsResponseOutput() RefreshDetailsResponseOutput {
	return i.ToRefreshDetailsResponseOutputWithContext(context.Background())
}

func (i RefreshDetailsResponseArgs) ToRefreshDetailsResponseOutputWithContext(ctx context.Context) RefreshDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RefreshDetailsResponseOutput)
}

func (i RefreshDetailsResponseArgs) ToRefreshDetailsResponsePtrOutput() RefreshDetailsResponsePtrOutput {
	return i.ToRefreshDetailsResponsePtrOutputWithContext(context.Background())
}

func (i RefreshDetailsResponseArgs) ToRefreshDetailsResponsePtrOutputWithContext(ctx context.Context) RefreshDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RefreshDetailsResponseOutput).ToRefreshDetailsResponsePtrOutputWithContext(ctx)
}

// RefreshDetailsResponsePtrInput is an input type that accepts RefreshDetailsResponseArgs, RefreshDetailsResponsePtr and RefreshDetailsResponsePtrOutput values.
// You can construct a concrete instance of `RefreshDetailsResponsePtrInput` via:
//
//          RefreshDetailsResponseArgs{...}
//
//  or:
//
//          nil
type RefreshDetailsResponsePtrInput interface {
	pulumi.Input

	ToRefreshDetailsResponsePtrOutput() RefreshDetailsResponsePtrOutput
	ToRefreshDetailsResponsePtrOutputWithContext(context.Context) RefreshDetailsResponsePtrOutput
}

type refreshDetailsResponsePtrType RefreshDetailsResponseArgs

func RefreshDetailsResponsePtr(v *RefreshDetailsResponseArgs) RefreshDetailsResponsePtrInput {
	return (*refreshDetailsResponsePtrType)(v)
}

func (*refreshDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RefreshDetailsResponse)(nil)).Elem()
}

func (i *refreshDetailsResponsePtrType) ToRefreshDetailsResponsePtrOutput() RefreshDetailsResponsePtrOutput {
	return i.ToRefreshDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *refreshDetailsResponsePtrType) ToRefreshDetailsResponsePtrOutputWithContext(ctx context.Context) RefreshDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RefreshDetailsResponsePtrOutput)
}

// Fields for tracking refresh job on the share or container.
type RefreshDetailsResponseOutput struct{ *pulumi.OutputState }

func (RefreshDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RefreshDetailsResponse)(nil)).Elem()
}

func (o RefreshDetailsResponseOutput) ToRefreshDetailsResponseOutput() RefreshDetailsResponseOutput {
	return o
}

func (o RefreshDetailsResponseOutput) ToRefreshDetailsResponseOutputWithContext(ctx context.Context) RefreshDetailsResponseOutput {
	return o
}

func (o RefreshDetailsResponseOutput) ToRefreshDetailsResponsePtrOutput() RefreshDetailsResponsePtrOutput {
	return o.ToRefreshDetailsResponsePtrOutputWithContext(context.Background())
}

func (o RefreshDetailsResponseOutput) ToRefreshDetailsResponsePtrOutputWithContext(ctx context.Context) RefreshDetailsResponsePtrOutput {
	return o.ApplyT(func(v RefreshDetailsResponse) *RefreshDetailsResponse {
		return &v
	}).(RefreshDetailsResponsePtrOutput)
}

// Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job.
func (o RefreshDetailsResponseOutput) ErrorManifestFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RefreshDetailsResponse) *string { return v.ErrorManifestFile }).(pulumi.StringPtrOutput)
}

// If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.
func (o RefreshDetailsResponseOutput) InProgressRefreshJobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RefreshDetailsResponse) *string { return v.InProgressRefreshJobId }).(pulumi.StringPtrOutput)
}

// Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job.
func (o RefreshDetailsResponseOutput) LastCompletedRefreshJobTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RefreshDetailsResponse) *string { return v.LastCompletedRefreshJobTimeInUTC }).(pulumi.StringPtrOutput)
}

// Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job.
func (o RefreshDetailsResponseOutput) LastJob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RefreshDetailsResponse) *string { return v.LastJob }).(pulumi.StringPtrOutput)
}

type RefreshDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (RefreshDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RefreshDetailsResponse)(nil)).Elem()
}

func (o RefreshDetailsResponsePtrOutput) ToRefreshDetailsResponsePtrOutput() RefreshDetailsResponsePtrOutput {
	return o
}

func (o RefreshDetailsResponsePtrOutput) ToRefreshDetailsResponsePtrOutputWithContext(ctx context.Context) RefreshDetailsResponsePtrOutput {
	return o
}

func (o RefreshDetailsResponsePtrOutput) Elem() RefreshDetailsResponseOutput {
	return o.ApplyT(func(v *RefreshDetailsResponse) RefreshDetailsResponse { return *v }).(RefreshDetailsResponseOutput)
}

// Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job.
func (o RefreshDetailsResponsePtrOutput) ErrorManifestFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ErrorManifestFile
	}).(pulumi.StringPtrOutput)
}

// If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.
func (o RefreshDetailsResponsePtrOutput) InProgressRefreshJobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InProgressRefreshJobId
	}).(pulumi.StringPtrOutput)
}

// Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job.
func (o RefreshDetailsResponsePtrOutput) LastCompletedRefreshJobTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastCompletedRefreshJobTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job.
func (o RefreshDetailsResponsePtrOutput) LastJob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastJob
	}).(pulumi.StringPtrOutput)
}

// Compute role.
type RoleType struct {
	// Role type.
	Kind string `pulumi:"kind"`
	// The object name.
	Name string `pulumi:"name"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
}

// RoleTypeInput is an input type that accepts RoleTypeArgs and RoleTypeOutput values.
// You can construct a concrete instance of `RoleTypeInput` via:
//
//          RoleTypeArgs{...}
type RoleTypeInput interface {
	pulumi.Input

	ToRoleTypeOutput() RoleTypeOutput
	ToRoleTypeOutputWithContext(context.Context) RoleTypeOutput
}

// Compute role.
type RoleTypeArgs struct {
	// Role type.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The object name.
	Name pulumi.StringInput `pulumi:"name"`
	// The hierarchical type of the object.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RoleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleType)(nil)).Elem()
}

func (i RoleTypeArgs) ToRoleTypeOutput() RoleTypeOutput {
	return i.ToRoleTypeOutputWithContext(context.Background())
}

func (i RoleTypeArgs) ToRoleTypeOutputWithContext(ctx context.Context) RoleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleTypeOutput)
}

// Compute role.
type RoleTypeOutput struct{ *pulumi.OutputState }

func (RoleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleType)(nil)).Elem()
}

func (o RoleTypeOutput) ToRoleTypeOutput() RoleTypeOutput {
	return o
}

func (o RoleTypeOutput) ToRoleTypeOutputWithContext(ctx context.Context) RoleTypeOutput {
	return o
}

// Role type.
func (o RoleTypeOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v RoleType) string { return v.Kind }).(pulumi.StringOutput)
}

// The object name.
func (o RoleTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoleType) string { return v.Name }).(pulumi.StringOutput)
}

// The hierarchical type of the object.
func (o RoleTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RoleType) string { return v.Type }).(pulumi.StringOutput)
}

// Represents a share on the  Data Box Edge/Gateway device.
type ShareType struct {
	// The object name.
	Name string `pulumi:"name"`
	// The share properties.
	Properties SharePropertiesResponse `pulumi:"properties"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
}

// ShareTypeInput is an input type that accepts ShareTypeArgs and ShareTypeOutput values.
// You can construct a concrete instance of `ShareTypeInput` via:
//
//          ShareTypeArgs{...}
type ShareTypeInput interface {
	pulumi.Input

	ToShareTypeOutput() ShareTypeOutput
	ToShareTypeOutputWithContext(context.Context) ShareTypeOutput
}

// Represents a share on the  Data Box Edge/Gateway device.
type ShareTypeArgs struct {
	// The object name.
	Name pulumi.StringInput `pulumi:"name"`
	// The share properties.
	Properties SharePropertiesResponseInput `pulumi:"properties"`
	// The hierarchical type of the object.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ShareTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareType)(nil)).Elem()
}

func (i ShareTypeArgs) ToShareTypeOutput() ShareTypeOutput {
	return i.ToShareTypeOutputWithContext(context.Background())
}

func (i ShareTypeArgs) ToShareTypeOutputWithContext(ctx context.Context) ShareTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareTypeOutput)
}

// Represents a share on the  Data Box Edge/Gateway device.
type ShareTypeOutput struct{ *pulumi.OutputState }

func (ShareTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareType)(nil)).Elem()
}

func (o ShareTypeOutput) ToShareTypeOutput() ShareTypeOutput {
	return o
}

func (o ShareTypeOutput) ToShareTypeOutputWithContext(ctx context.Context) ShareTypeOutput {
	return o
}

// The object name.
func (o ShareTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ShareType) string { return v.Name }).(pulumi.StringOutput)
}

// The share properties.
func (o ShareTypeOutput) Properties() SharePropertiesResponseOutput {
	return o.ApplyT(func(v ShareType) SharePropertiesResponse { return v.Properties }).(SharePropertiesResponseOutput)
}

// The hierarchical type of the object.
func (o ShareTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ShareType) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies the mapping between this particular user and the type of access he has on shares on this device.
type ShareAccessRight struct {
	// Type of access to be allowed on the share for this user.
	AccessType string `pulumi:"accessType"`
	// The share ID.
	ShareId string `pulumi:"shareId"`
}

// ShareAccessRightInput is an input type that accepts ShareAccessRightArgs and ShareAccessRightOutput values.
// You can construct a concrete instance of `ShareAccessRightInput` via:
//
//          ShareAccessRightArgs{...}
type ShareAccessRightInput interface {
	pulumi.Input

	ToShareAccessRightOutput() ShareAccessRightOutput
	ToShareAccessRightOutputWithContext(context.Context) ShareAccessRightOutput
}

// Specifies the mapping between this particular user and the type of access he has on shares on this device.
type ShareAccessRightArgs struct {
	// Type of access to be allowed on the share for this user.
	AccessType pulumi.StringInput `pulumi:"accessType"`
	// The share ID.
	ShareId pulumi.StringInput `pulumi:"shareId"`
}

func (ShareAccessRightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareAccessRight)(nil)).Elem()
}

func (i ShareAccessRightArgs) ToShareAccessRightOutput() ShareAccessRightOutput {
	return i.ToShareAccessRightOutputWithContext(context.Background())
}

func (i ShareAccessRightArgs) ToShareAccessRightOutputWithContext(ctx context.Context) ShareAccessRightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareAccessRightOutput)
}

// ShareAccessRightArrayInput is an input type that accepts ShareAccessRightArray and ShareAccessRightArrayOutput values.
// You can construct a concrete instance of `ShareAccessRightArrayInput` via:
//
//          ShareAccessRightArray{ ShareAccessRightArgs{...} }
type ShareAccessRightArrayInput interface {
	pulumi.Input

	ToShareAccessRightArrayOutput() ShareAccessRightArrayOutput
	ToShareAccessRightArrayOutputWithContext(context.Context) ShareAccessRightArrayOutput
}

type ShareAccessRightArray []ShareAccessRightInput

func (ShareAccessRightArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShareAccessRight)(nil)).Elem()
}

func (i ShareAccessRightArray) ToShareAccessRightArrayOutput() ShareAccessRightArrayOutput {
	return i.ToShareAccessRightArrayOutputWithContext(context.Background())
}

func (i ShareAccessRightArray) ToShareAccessRightArrayOutputWithContext(ctx context.Context) ShareAccessRightArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareAccessRightArrayOutput)
}

// Specifies the mapping between this particular user and the type of access he has on shares on this device.
type ShareAccessRightOutput struct{ *pulumi.OutputState }

func (ShareAccessRightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareAccessRight)(nil)).Elem()
}

func (o ShareAccessRightOutput) ToShareAccessRightOutput() ShareAccessRightOutput {
	return o
}

func (o ShareAccessRightOutput) ToShareAccessRightOutputWithContext(ctx context.Context) ShareAccessRightOutput {
	return o
}

// Type of access to be allowed on the share for this user.
func (o ShareAccessRightOutput) AccessType() pulumi.StringOutput {
	return o.ApplyT(func(v ShareAccessRight) string { return v.AccessType }).(pulumi.StringOutput)
}

// The share ID.
func (o ShareAccessRightOutput) ShareId() pulumi.StringOutput {
	return o.ApplyT(func(v ShareAccessRight) string { return v.ShareId }).(pulumi.StringOutput)
}

type ShareAccessRightArrayOutput struct{ *pulumi.OutputState }

func (ShareAccessRightArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShareAccessRight)(nil)).Elem()
}

func (o ShareAccessRightArrayOutput) ToShareAccessRightArrayOutput() ShareAccessRightArrayOutput {
	return o
}

func (o ShareAccessRightArrayOutput) ToShareAccessRightArrayOutputWithContext(ctx context.Context) ShareAccessRightArrayOutput {
	return o
}

func (o ShareAccessRightArrayOutput) Index(i pulumi.IntInput) ShareAccessRightOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShareAccessRight {
		return vs[0].([]ShareAccessRight)[vs[1].(int)]
	}).(ShareAccessRightOutput)
}

// Specifies the mapping between this particular user and the type of access he has on shares on this device.
type ShareAccessRightResponse struct {
	// Type of access to be allowed on the share for this user.
	AccessType string `pulumi:"accessType"`
	// The share ID.
	ShareId string `pulumi:"shareId"`
}

// ShareAccessRightResponseInput is an input type that accepts ShareAccessRightResponseArgs and ShareAccessRightResponseOutput values.
// You can construct a concrete instance of `ShareAccessRightResponseInput` via:
//
//          ShareAccessRightResponseArgs{...}
type ShareAccessRightResponseInput interface {
	pulumi.Input

	ToShareAccessRightResponseOutput() ShareAccessRightResponseOutput
	ToShareAccessRightResponseOutputWithContext(context.Context) ShareAccessRightResponseOutput
}

// Specifies the mapping between this particular user and the type of access he has on shares on this device.
type ShareAccessRightResponseArgs struct {
	// Type of access to be allowed on the share for this user.
	AccessType pulumi.StringInput `pulumi:"accessType"`
	// The share ID.
	ShareId pulumi.StringInput `pulumi:"shareId"`
}

func (ShareAccessRightResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareAccessRightResponse)(nil)).Elem()
}

func (i ShareAccessRightResponseArgs) ToShareAccessRightResponseOutput() ShareAccessRightResponseOutput {
	return i.ToShareAccessRightResponseOutputWithContext(context.Background())
}

func (i ShareAccessRightResponseArgs) ToShareAccessRightResponseOutputWithContext(ctx context.Context) ShareAccessRightResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareAccessRightResponseOutput)
}

// ShareAccessRightResponseArrayInput is an input type that accepts ShareAccessRightResponseArray and ShareAccessRightResponseArrayOutput values.
// You can construct a concrete instance of `ShareAccessRightResponseArrayInput` via:
//
//          ShareAccessRightResponseArray{ ShareAccessRightResponseArgs{...} }
type ShareAccessRightResponseArrayInput interface {
	pulumi.Input

	ToShareAccessRightResponseArrayOutput() ShareAccessRightResponseArrayOutput
	ToShareAccessRightResponseArrayOutputWithContext(context.Context) ShareAccessRightResponseArrayOutput
}

type ShareAccessRightResponseArray []ShareAccessRightResponseInput

func (ShareAccessRightResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShareAccessRightResponse)(nil)).Elem()
}

func (i ShareAccessRightResponseArray) ToShareAccessRightResponseArrayOutput() ShareAccessRightResponseArrayOutput {
	return i.ToShareAccessRightResponseArrayOutputWithContext(context.Background())
}

func (i ShareAccessRightResponseArray) ToShareAccessRightResponseArrayOutputWithContext(ctx context.Context) ShareAccessRightResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareAccessRightResponseArrayOutput)
}

// Specifies the mapping between this particular user and the type of access he has on shares on this device.
type ShareAccessRightResponseOutput struct{ *pulumi.OutputState }

func (ShareAccessRightResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareAccessRightResponse)(nil)).Elem()
}

func (o ShareAccessRightResponseOutput) ToShareAccessRightResponseOutput() ShareAccessRightResponseOutput {
	return o
}

func (o ShareAccessRightResponseOutput) ToShareAccessRightResponseOutputWithContext(ctx context.Context) ShareAccessRightResponseOutput {
	return o
}

// Type of access to be allowed on the share for this user.
func (o ShareAccessRightResponseOutput) AccessType() pulumi.StringOutput {
	return o.ApplyT(func(v ShareAccessRightResponse) string { return v.AccessType }).(pulumi.StringOutput)
}

// The share ID.
func (o ShareAccessRightResponseOutput) ShareId() pulumi.StringOutput {
	return o.ApplyT(func(v ShareAccessRightResponse) string { return v.ShareId }).(pulumi.StringOutput)
}

type ShareAccessRightResponseArrayOutput struct{ *pulumi.OutputState }

func (ShareAccessRightResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShareAccessRightResponse)(nil)).Elem()
}

func (o ShareAccessRightResponseArrayOutput) ToShareAccessRightResponseArrayOutput() ShareAccessRightResponseArrayOutput {
	return o
}

func (o ShareAccessRightResponseArrayOutput) ToShareAccessRightResponseArrayOutputWithContext(ctx context.Context) ShareAccessRightResponseArrayOutput {
	return o
}

func (o ShareAccessRightResponseArrayOutput) Index(i pulumi.IntInput) ShareAccessRightResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShareAccessRightResponse {
		return vs[0].([]ShareAccessRightResponse)[vs[1].(int)]
	}).(ShareAccessRightResponseOutput)
}

// The share properties.
type SharePropertiesResponse struct {
	// Access protocol to be used by the share.
	AccessProtocol string `pulumi:"accessProtocol"`
	// Azure container mapping for the share.
	AzureContainerInfo *AzureContainerInfoResponse `pulumi:"azureContainerInfo"`
	// List of IP addresses and corresponding access rights on the share(required for NFS protocol).
	ClientAccessRights []ClientAccessRightResponse `pulumi:"clientAccessRights"`
	// Data policy of the share.
	DataPolicy *string `pulumi:"dataPolicy"`
	// Description for the share.
	Description *string `pulumi:"description"`
	// Current monitoring status of the share.
	MonitoringStatus string `pulumi:"monitoringStatus"`
	// Details of the refresh job on this share.
	RefreshDetails *RefreshDetailsResponse `pulumi:"refreshDetails"`
	// Share mount point to the role.
	ShareMappings []MountPointMapResponse `pulumi:"shareMappings"`
	// Current status of the share.
	ShareStatus string `pulumi:"shareStatus"`
	// Mapping of users and corresponding access rights on the share (required for SMB protocol).
	UserAccessRights []UserAccessRightResponse `pulumi:"userAccessRights"`
}

// SharePropertiesResponseInput is an input type that accepts SharePropertiesResponseArgs and SharePropertiesResponseOutput values.
// You can construct a concrete instance of `SharePropertiesResponseInput` via:
//
//          SharePropertiesResponseArgs{...}
type SharePropertiesResponseInput interface {
	pulumi.Input

	ToSharePropertiesResponseOutput() SharePropertiesResponseOutput
	ToSharePropertiesResponseOutputWithContext(context.Context) SharePropertiesResponseOutput
}

// The share properties.
type SharePropertiesResponseArgs struct {
	// Access protocol to be used by the share.
	AccessProtocol pulumi.StringInput `pulumi:"accessProtocol"`
	// Azure container mapping for the share.
	AzureContainerInfo AzureContainerInfoResponsePtrInput `pulumi:"azureContainerInfo"`
	// List of IP addresses and corresponding access rights on the share(required for NFS protocol).
	ClientAccessRights ClientAccessRightResponseArrayInput `pulumi:"clientAccessRights"`
	// Data policy of the share.
	DataPolicy pulumi.StringPtrInput `pulumi:"dataPolicy"`
	// Description for the share.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Current monitoring status of the share.
	MonitoringStatus pulumi.StringInput `pulumi:"monitoringStatus"`
	// Details of the refresh job on this share.
	RefreshDetails RefreshDetailsResponsePtrInput `pulumi:"refreshDetails"`
	// Share mount point to the role.
	ShareMappings MountPointMapResponseArrayInput `pulumi:"shareMappings"`
	// Current status of the share.
	ShareStatus pulumi.StringInput `pulumi:"shareStatus"`
	// Mapping of users and corresponding access rights on the share (required for SMB protocol).
	UserAccessRights UserAccessRightResponseArrayInput `pulumi:"userAccessRights"`
}

func (SharePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharePropertiesResponse)(nil)).Elem()
}

func (i SharePropertiesResponseArgs) ToSharePropertiesResponseOutput() SharePropertiesResponseOutput {
	return i.ToSharePropertiesResponseOutputWithContext(context.Background())
}

func (i SharePropertiesResponseArgs) ToSharePropertiesResponseOutputWithContext(ctx context.Context) SharePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharePropertiesResponseOutput)
}

func (i SharePropertiesResponseArgs) ToSharePropertiesResponsePtrOutput() SharePropertiesResponsePtrOutput {
	return i.ToSharePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i SharePropertiesResponseArgs) ToSharePropertiesResponsePtrOutputWithContext(ctx context.Context) SharePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharePropertiesResponseOutput).ToSharePropertiesResponsePtrOutputWithContext(ctx)
}

// SharePropertiesResponsePtrInput is an input type that accepts SharePropertiesResponseArgs, SharePropertiesResponsePtr and SharePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `SharePropertiesResponsePtrInput` via:
//
//          SharePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type SharePropertiesResponsePtrInput interface {
	pulumi.Input

	ToSharePropertiesResponsePtrOutput() SharePropertiesResponsePtrOutput
	ToSharePropertiesResponsePtrOutputWithContext(context.Context) SharePropertiesResponsePtrOutput
}

type sharePropertiesResponsePtrType SharePropertiesResponseArgs

func SharePropertiesResponsePtr(v *SharePropertiesResponseArgs) SharePropertiesResponsePtrInput {
	return (*sharePropertiesResponsePtrType)(v)
}

func (*sharePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SharePropertiesResponse)(nil)).Elem()
}

func (i *sharePropertiesResponsePtrType) ToSharePropertiesResponsePtrOutput() SharePropertiesResponsePtrOutput {
	return i.ToSharePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *sharePropertiesResponsePtrType) ToSharePropertiesResponsePtrOutputWithContext(ctx context.Context) SharePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharePropertiesResponsePtrOutput)
}

// The share properties.
type SharePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SharePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharePropertiesResponse)(nil)).Elem()
}

func (o SharePropertiesResponseOutput) ToSharePropertiesResponseOutput() SharePropertiesResponseOutput {
	return o
}

func (o SharePropertiesResponseOutput) ToSharePropertiesResponseOutputWithContext(ctx context.Context) SharePropertiesResponseOutput {
	return o
}

func (o SharePropertiesResponseOutput) ToSharePropertiesResponsePtrOutput() SharePropertiesResponsePtrOutput {
	return o.ToSharePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o SharePropertiesResponseOutput) ToSharePropertiesResponsePtrOutputWithContext(ctx context.Context) SharePropertiesResponsePtrOutput {
	return o.ApplyT(func(v SharePropertiesResponse) *SharePropertiesResponse {
		return &v
	}).(SharePropertiesResponsePtrOutput)
}

// Access protocol to be used by the share.
func (o SharePropertiesResponseOutput) AccessProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v SharePropertiesResponse) string { return v.AccessProtocol }).(pulumi.StringOutput)
}

// Azure container mapping for the share.
func (o SharePropertiesResponseOutput) AzureContainerInfo() AzureContainerInfoResponsePtrOutput {
	return o.ApplyT(func(v SharePropertiesResponse) *AzureContainerInfoResponse { return v.AzureContainerInfo }).(AzureContainerInfoResponsePtrOutput)
}

// List of IP addresses and corresponding access rights on the share(required for NFS protocol).
func (o SharePropertiesResponseOutput) ClientAccessRights() ClientAccessRightResponseArrayOutput {
	return o.ApplyT(func(v SharePropertiesResponse) []ClientAccessRightResponse { return v.ClientAccessRights }).(ClientAccessRightResponseArrayOutput)
}

// Data policy of the share.
func (o SharePropertiesResponseOutput) DataPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharePropertiesResponse) *string { return v.DataPolicy }).(pulumi.StringPtrOutput)
}

// Description for the share.
func (o SharePropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharePropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Current monitoring status of the share.
func (o SharePropertiesResponseOutput) MonitoringStatus() pulumi.StringOutput {
	return o.ApplyT(func(v SharePropertiesResponse) string { return v.MonitoringStatus }).(pulumi.StringOutput)
}

// Details of the refresh job on this share.
func (o SharePropertiesResponseOutput) RefreshDetails() RefreshDetailsResponsePtrOutput {
	return o.ApplyT(func(v SharePropertiesResponse) *RefreshDetailsResponse { return v.RefreshDetails }).(RefreshDetailsResponsePtrOutput)
}

// Share mount point to the role.
func (o SharePropertiesResponseOutput) ShareMappings() MountPointMapResponseArrayOutput {
	return o.ApplyT(func(v SharePropertiesResponse) []MountPointMapResponse { return v.ShareMappings }).(MountPointMapResponseArrayOutput)
}

// Current status of the share.
func (o SharePropertiesResponseOutput) ShareStatus() pulumi.StringOutput {
	return o.ApplyT(func(v SharePropertiesResponse) string { return v.ShareStatus }).(pulumi.StringOutput)
}

// Mapping of users and corresponding access rights on the share (required for SMB protocol).
func (o SharePropertiesResponseOutput) UserAccessRights() UserAccessRightResponseArrayOutput {
	return o.ApplyT(func(v SharePropertiesResponse) []UserAccessRightResponse { return v.UserAccessRights }).(UserAccessRightResponseArrayOutput)
}

type SharePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SharePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SharePropertiesResponse)(nil)).Elem()
}

func (o SharePropertiesResponsePtrOutput) ToSharePropertiesResponsePtrOutput() SharePropertiesResponsePtrOutput {
	return o
}

func (o SharePropertiesResponsePtrOutput) ToSharePropertiesResponsePtrOutputWithContext(ctx context.Context) SharePropertiesResponsePtrOutput {
	return o
}

func (o SharePropertiesResponsePtrOutput) Elem() SharePropertiesResponseOutput {
	return o.ApplyT(func(v *SharePropertiesResponse) SharePropertiesResponse { return *v }).(SharePropertiesResponseOutput)
}

// Access protocol to be used by the share.
func (o SharePropertiesResponsePtrOutput) AccessProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AccessProtocol
	}).(pulumi.StringPtrOutput)
}

// Azure container mapping for the share.
func (o SharePropertiesResponsePtrOutput) AzureContainerInfo() AzureContainerInfoResponsePtrOutput {
	return o.ApplyT(func(v *SharePropertiesResponse) *AzureContainerInfoResponse {
		if v == nil {
			return nil
		}
		return v.AzureContainerInfo
	}).(AzureContainerInfoResponsePtrOutput)
}

// List of IP addresses and corresponding access rights on the share(required for NFS protocol).
func (o SharePropertiesResponsePtrOutput) ClientAccessRights() ClientAccessRightResponseArrayOutput {
	return o.ApplyT(func(v *SharePropertiesResponse) []ClientAccessRightResponse {
		if v == nil {
			return nil
		}
		return v.ClientAccessRights
	}).(ClientAccessRightResponseArrayOutput)
}

// Data policy of the share.
func (o SharePropertiesResponsePtrOutput) DataPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DataPolicy
	}).(pulumi.StringPtrOutput)
}

// Description for the share.
func (o SharePropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Current monitoring status of the share.
func (o SharePropertiesResponsePtrOutput) MonitoringStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MonitoringStatus
	}).(pulumi.StringPtrOutput)
}

// Details of the refresh job on this share.
func (o SharePropertiesResponsePtrOutput) RefreshDetails() RefreshDetailsResponsePtrOutput {
	return o.ApplyT(func(v *SharePropertiesResponse) *RefreshDetailsResponse {
		if v == nil {
			return nil
		}
		return v.RefreshDetails
	}).(RefreshDetailsResponsePtrOutput)
}

// Share mount point to the role.
func (o SharePropertiesResponsePtrOutput) ShareMappings() MountPointMapResponseArrayOutput {
	return o.ApplyT(func(v *SharePropertiesResponse) []MountPointMapResponse {
		if v == nil {
			return nil
		}
		return v.ShareMappings
	}).(MountPointMapResponseArrayOutput)
}

// Current status of the share.
func (o SharePropertiesResponsePtrOutput) ShareStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ShareStatus
	}).(pulumi.StringPtrOutput)
}

// Mapping of users and corresponding access rights on the share (required for SMB protocol).
func (o SharePropertiesResponsePtrOutput) UserAccessRights() UserAccessRightResponseArrayOutput {
	return o.ApplyT(func(v *SharePropertiesResponse) []UserAccessRightResponse {
		if v == nil {
			return nil
		}
		return v.UserAccessRights
	}).(UserAccessRightResponseArrayOutput)
}

// The SKU type.
type Sku struct {
	// SKU name.
	Name *string `pulumi:"name"`
	// The SKU tier. This is based on the SKU name.
	Tier *string `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The SKU type.
type SkuArgs struct {
	// SKU name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The SKU tier. This is based on the SKU name.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The SKU type.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// SKU name.
func (o SkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The SKU tier. This is based on the SKU name.
func (o SkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// SKU name.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU tier. This is based on the SKU name.
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// The SKU type.
type SkuResponse struct {
	// SKU name.
	Name *string `pulumi:"name"`
	// The SKU tier. This is based on the SKU name.
	Tier *string `pulumi:"tier"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// The SKU type.
type SkuResponseArgs struct {
	// SKU name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The SKU tier. This is based on the SKU name.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// The SKU type.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// SKU name.
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The SKU tier. This is based on the SKU name.
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// SKU name.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU tier. This is based on the SKU name.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Represents a Storage Account on the  Data Box Edge/Gateway device.
type StorageAccountType struct {
	// The object name.
	Name string `pulumi:"name"`
	// The Storage Account properties.
	Properties StorageAccountPropertiesResponse `pulumi:"properties"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
}

// StorageAccountTypeInput is an input type that accepts StorageAccountTypeArgs and StorageAccountTypeOutput values.
// You can construct a concrete instance of `StorageAccountTypeInput` via:
//
//          StorageAccountTypeArgs{...}
type StorageAccountTypeInput interface {
	pulumi.Input

	ToStorageAccountTypeOutput() StorageAccountTypeOutput
	ToStorageAccountTypeOutputWithContext(context.Context) StorageAccountTypeOutput
}

// Represents a Storage Account on the  Data Box Edge/Gateway device.
type StorageAccountTypeArgs struct {
	// The object name.
	Name pulumi.StringInput `pulumi:"name"`
	// The Storage Account properties.
	Properties StorageAccountPropertiesResponseInput `pulumi:"properties"`
	// The hierarchical type of the object.
	Type pulumi.StringInput `pulumi:"type"`
}

func (StorageAccountTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountType)(nil)).Elem()
}

func (i StorageAccountTypeArgs) ToStorageAccountTypeOutput() StorageAccountTypeOutput {
	return i.ToStorageAccountTypeOutputWithContext(context.Background())
}

func (i StorageAccountTypeArgs) ToStorageAccountTypeOutputWithContext(ctx context.Context) StorageAccountTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountTypeOutput)
}

// Represents a Storage Account on the  Data Box Edge/Gateway device.
type StorageAccountTypeOutput struct{ *pulumi.OutputState }

func (StorageAccountTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountType)(nil)).Elem()
}

func (o StorageAccountTypeOutput) ToStorageAccountTypeOutput() StorageAccountTypeOutput {
	return o
}

func (o StorageAccountTypeOutput) ToStorageAccountTypeOutputWithContext(ctx context.Context) StorageAccountTypeOutput {
	return o
}

// The object name.
func (o StorageAccountTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountType) string { return v.Name }).(pulumi.StringOutput)
}

// The Storage Account properties.
func (o StorageAccountTypeOutput) Properties() StorageAccountPropertiesResponseOutput {
	return o.ApplyT(func(v StorageAccountType) StorageAccountPropertiesResponse { return v.Properties }).(StorageAccountPropertiesResponseOutput)
}

// The hierarchical type of the object.
func (o StorageAccountTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountType) string { return v.Type }).(pulumi.StringOutput)
}

// The storage account credential.
type StorageAccountCredentialType struct {
	// The object name.
	Name string `pulumi:"name"`
	// The storage account credential properties.
	Properties StorageAccountCredentialPropertiesResponse `pulumi:"properties"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
}

// StorageAccountCredentialTypeInput is an input type that accepts StorageAccountCredentialTypeArgs and StorageAccountCredentialTypeOutput values.
// You can construct a concrete instance of `StorageAccountCredentialTypeInput` via:
//
//          StorageAccountCredentialTypeArgs{...}
type StorageAccountCredentialTypeInput interface {
	pulumi.Input

	ToStorageAccountCredentialTypeOutput() StorageAccountCredentialTypeOutput
	ToStorageAccountCredentialTypeOutputWithContext(context.Context) StorageAccountCredentialTypeOutput
}

// The storage account credential.
type StorageAccountCredentialTypeArgs struct {
	// The object name.
	Name pulumi.StringInput `pulumi:"name"`
	// The storage account credential properties.
	Properties StorageAccountCredentialPropertiesResponseInput `pulumi:"properties"`
	// The hierarchical type of the object.
	Type pulumi.StringInput `pulumi:"type"`
}

func (StorageAccountCredentialTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountCredentialType)(nil)).Elem()
}

func (i StorageAccountCredentialTypeArgs) ToStorageAccountCredentialTypeOutput() StorageAccountCredentialTypeOutput {
	return i.ToStorageAccountCredentialTypeOutputWithContext(context.Background())
}

func (i StorageAccountCredentialTypeArgs) ToStorageAccountCredentialTypeOutputWithContext(ctx context.Context) StorageAccountCredentialTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountCredentialTypeOutput)
}

// The storage account credential.
type StorageAccountCredentialTypeOutput struct{ *pulumi.OutputState }

func (StorageAccountCredentialTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountCredentialType)(nil)).Elem()
}

func (o StorageAccountCredentialTypeOutput) ToStorageAccountCredentialTypeOutput() StorageAccountCredentialTypeOutput {
	return o
}

func (o StorageAccountCredentialTypeOutput) ToStorageAccountCredentialTypeOutputWithContext(ctx context.Context) StorageAccountCredentialTypeOutput {
	return o
}

// The object name.
func (o StorageAccountCredentialTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountCredentialType) string { return v.Name }).(pulumi.StringOutput)
}

// The storage account credential properties.
func (o StorageAccountCredentialTypeOutput) Properties() StorageAccountCredentialPropertiesResponseOutput {
	return o.ApplyT(func(v StorageAccountCredentialType) StorageAccountCredentialPropertiesResponse { return v.Properties }).(StorageAccountCredentialPropertiesResponseOutput)
}

// The hierarchical type of the object.
func (o StorageAccountCredentialTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountCredentialType) string { return v.Type }).(pulumi.StringOutput)
}

// The storage account credential properties.
type StorageAccountCredentialPropertiesResponse struct {
	// Encrypted storage key.
	AccountKey *AsymmetricEncryptedSecretResponse `pulumi:"accountKey"`
	// Type of storage accessed on the storage account.
	AccountType string `pulumi:"accountType"`
	// Alias for the storage account.
	Alias string `pulumi:"alias"`
	// Blob end point for private clouds.
	BlobDomainName *string `pulumi:"blobDomainName"`
	// Connection string for the storage account. Use this string if username and account key are not specified.
	ConnectionString *string `pulumi:"connectionString"`
	// Signifies whether SSL needs to be enabled or not.
	SslStatus string `pulumi:"sslStatus"`
	// Id of the storage account.
	StorageAccountId *string `pulumi:"storageAccountId"`
	// Username for the storage account.
	UserName *string `pulumi:"userName"`
}

// StorageAccountCredentialPropertiesResponseInput is an input type that accepts StorageAccountCredentialPropertiesResponseArgs and StorageAccountCredentialPropertiesResponseOutput values.
// You can construct a concrete instance of `StorageAccountCredentialPropertiesResponseInput` via:
//
//          StorageAccountCredentialPropertiesResponseArgs{...}
type StorageAccountCredentialPropertiesResponseInput interface {
	pulumi.Input

	ToStorageAccountCredentialPropertiesResponseOutput() StorageAccountCredentialPropertiesResponseOutput
	ToStorageAccountCredentialPropertiesResponseOutputWithContext(context.Context) StorageAccountCredentialPropertiesResponseOutput
}

// The storage account credential properties.
type StorageAccountCredentialPropertiesResponseArgs struct {
	// Encrypted storage key.
	AccountKey AsymmetricEncryptedSecretResponsePtrInput `pulumi:"accountKey"`
	// Type of storage accessed on the storage account.
	AccountType pulumi.StringInput `pulumi:"accountType"`
	// Alias for the storage account.
	Alias pulumi.StringInput `pulumi:"alias"`
	// Blob end point for private clouds.
	BlobDomainName pulumi.StringPtrInput `pulumi:"blobDomainName"`
	// Connection string for the storage account. Use this string if username and account key are not specified.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// Signifies whether SSL needs to be enabled or not.
	SslStatus pulumi.StringInput `pulumi:"sslStatus"`
	// Id of the storage account.
	StorageAccountId pulumi.StringPtrInput `pulumi:"storageAccountId"`
	// Username for the storage account.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (StorageAccountCredentialPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountCredentialPropertiesResponse)(nil)).Elem()
}

func (i StorageAccountCredentialPropertiesResponseArgs) ToStorageAccountCredentialPropertiesResponseOutput() StorageAccountCredentialPropertiesResponseOutput {
	return i.ToStorageAccountCredentialPropertiesResponseOutputWithContext(context.Background())
}

func (i StorageAccountCredentialPropertiesResponseArgs) ToStorageAccountCredentialPropertiesResponseOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountCredentialPropertiesResponseOutput)
}

func (i StorageAccountCredentialPropertiesResponseArgs) ToStorageAccountCredentialPropertiesResponsePtrOutput() StorageAccountCredentialPropertiesResponsePtrOutput {
	return i.ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i StorageAccountCredentialPropertiesResponseArgs) ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountCredentialPropertiesResponseOutput).ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(ctx)
}

// StorageAccountCredentialPropertiesResponsePtrInput is an input type that accepts StorageAccountCredentialPropertiesResponseArgs, StorageAccountCredentialPropertiesResponsePtr and StorageAccountCredentialPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `StorageAccountCredentialPropertiesResponsePtrInput` via:
//
//          StorageAccountCredentialPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type StorageAccountCredentialPropertiesResponsePtrInput interface {
	pulumi.Input

	ToStorageAccountCredentialPropertiesResponsePtrOutput() StorageAccountCredentialPropertiesResponsePtrOutput
	ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(context.Context) StorageAccountCredentialPropertiesResponsePtrOutput
}

type storageAccountCredentialPropertiesResponsePtrType StorageAccountCredentialPropertiesResponseArgs

func StorageAccountCredentialPropertiesResponsePtr(v *StorageAccountCredentialPropertiesResponseArgs) StorageAccountCredentialPropertiesResponsePtrInput {
	return (*storageAccountCredentialPropertiesResponsePtrType)(v)
}

func (*storageAccountCredentialPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountCredentialPropertiesResponse)(nil)).Elem()
}

func (i *storageAccountCredentialPropertiesResponsePtrType) ToStorageAccountCredentialPropertiesResponsePtrOutput() StorageAccountCredentialPropertiesResponsePtrOutput {
	return i.ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *storageAccountCredentialPropertiesResponsePtrType) ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountCredentialPropertiesResponsePtrOutput)
}

// The storage account credential properties.
type StorageAccountCredentialPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountCredentialPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountCredentialPropertiesResponse)(nil)).Elem()
}

func (o StorageAccountCredentialPropertiesResponseOutput) ToStorageAccountCredentialPropertiesResponseOutput() StorageAccountCredentialPropertiesResponseOutput {
	return o
}

func (o StorageAccountCredentialPropertiesResponseOutput) ToStorageAccountCredentialPropertiesResponseOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesResponseOutput {
	return o
}

func (o StorageAccountCredentialPropertiesResponseOutput) ToStorageAccountCredentialPropertiesResponsePtrOutput() StorageAccountCredentialPropertiesResponsePtrOutput {
	return o.ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o StorageAccountCredentialPropertiesResponseOutput) ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesResponsePtrOutput {
	return o.ApplyT(func(v StorageAccountCredentialPropertiesResponse) *StorageAccountCredentialPropertiesResponse {
		return &v
	}).(StorageAccountCredentialPropertiesResponsePtrOutput)
}

// Encrypted storage key.
func (o StorageAccountCredentialPropertiesResponseOutput) AccountKey() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v StorageAccountCredentialPropertiesResponse) *AsymmetricEncryptedSecretResponse {
		return v.AccountKey
	}).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// Type of storage accessed on the storage account.
func (o StorageAccountCredentialPropertiesResponseOutput) AccountType() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountCredentialPropertiesResponse) string { return v.AccountType }).(pulumi.StringOutput)
}

// Alias for the storage account.
func (o StorageAccountCredentialPropertiesResponseOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountCredentialPropertiesResponse) string { return v.Alias }).(pulumi.StringOutput)
}

// Blob end point for private clouds.
func (o StorageAccountCredentialPropertiesResponseOutput) BlobDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccountCredentialPropertiesResponse) *string { return v.BlobDomainName }).(pulumi.StringPtrOutput)
}

// Connection string for the storage account. Use this string if username and account key are not specified.
func (o StorageAccountCredentialPropertiesResponseOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccountCredentialPropertiesResponse) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Signifies whether SSL needs to be enabled or not.
func (o StorageAccountCredentialPropertiesResponseOutput) SslStatus() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountCredentialPropertiesResponse) string { return v.SslStatus }).(pulumi.StringOutput)
}

// Id of the storage account.
func (o StorageAccountCredentialPropertiesResponseOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccountCredentialPropertiesResponse) *string { return v.StorageAccountId }).(pulumi.StringPtrOutput)
}

// Username for the storage account.
func (o StorageAccountCredentialPropertiesResponseOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccountCredentialPropertiesResponse) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type StorageAccountCredentialPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageAccountCredentialPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountCredentialPropertiesResponse)(nil)).Elem()
}

func (o StorageAccountCredentialPropertiesResponsePtrOutput) ToStorageAccountCredentialPropertiesResponsePtrOutput() StorageAccountCredentialPropertiesResponsePtrOutput {
	return o
}

func (o StorageAccountCredentialPropertiesResponsePtrOutput) ToStorageAccountCredentialPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountCredentialPropertiesResponsePtrOutput {
	return o
}

func (o StorageAccountCredentialPropertiesResponsePtrOutput) Elem() StorageAccountCredentialPropertiesResponseOutput {
	return o.ApplyT(func(v *StorageAccountCredentialPropertiesResponse) StorageAccountCredentialPropertiesResponse {
		return *v
	}).(StorageAccountCredentialPropertiesResponseOutput)
}

// Encrypted storage key.
func (o StorageAccountCredentialPropertiesResponsePtrOutput) AccountKey() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v *StorageAccountCredentialPropertiesResponse) *AsymmetricEncryptedSecretResponse {
		if v == nil {
			return nil
		}
		return v.AccountKey
	}).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// Type of storage accessed on the storage account.
func (o StorageAccountCredentialPropertiesResponsePtrOutput) AccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountCredentialPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AccountType
	}).(pulumi.StringPtrOutput)
}

// Alias for the storage account.
func (o StorageAccountCredentialPropertiesResponsePtrOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountCredentialPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Alias
	}).(pulumi.StringPtrOutput)
}

// Blob end point for private clouds.
func (o StorageAccountCredentialPropertiesResponsePtrOutput) BlobDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountCredentialPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.BlobDomainName
	}).(pulumi.StringPtrOutput)
}

// Connection string for the storage account. Use this string if username and account key are not specified.
func (o StorageAccountCredentialPropertiesResponsePtrOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountCredentialPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionString
	}).(pulumi.StringPtrOutput)
}

// Signifies whether SSL needs to be enabled or not.
func (o StorageAccountCredentialPropertiesResponsePtrOutput) SslStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountCredentialPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SslStatus
	}).(pulumi.StringPtrOutput)
}

// Id of the storage account.
func (o StorageAccountCredentialPropertiesResponsePtrOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountCredentialPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountId
	}).(pulumi.StringPtrOutput)
}

// Username for the storage account.
func (o StorageAccountCredentialPropertiesResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountCredentialPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// The storage account properties.
type StorageAccountPropertiesResponse struct {
	// BlobEndpoint of Storage Account
	BlobEndpoint string `pulumi:"blobEndpoint"`
	// The Container Count. Present only for Storage Accounts with DataPolicy set to Cloud.
	ContainerCount int `pulumi:"containerCount"`
	// Data policy of the storage Account.
	DataPolicy *string `pulumi:"dataPolicy"`
	// Description for the storage Account.
	Description *string `pulumi:"description"`
	// Storage Account Credential Id
	StorageAccountCredentialId *string `pulumi:"storageAccountCredentialId"`
	// Current status of the storage account
	StorageAccountStatus *string `pulumi:"storageAccountStatus"`
}

// StorageAccountPropertiesResponseInput is an input type that accepts StorageAccountPropertiesResponseArgs and StorageAccountPropertiesResponseOutput values.
// You can construct a concrete instance of `StorageAccountPropertiesResponseInput` via:
//
//          StorageAccountPropertiesResponseArgs{...}
type StorageAccountPropertiesResponseInput interface {
	pulumi.Input

	ToStorageAccountPropertiesResponseOutput() StorageAccountPropertiesResponseOutput
	ToStorageAccountPropertiesResponseOutputWithContext(context.Context) StorageAccountPropertiesResponseOutput
}

// The storage account properties.
type StorageAccountPropertiesResponseArgs struct {
	// BlobEndpoint of Storage Account
	BlobEndpoint pulumi.StringInput `pulumi:"blobEndpoint"`
	// The Container Count. Present only for Storage Accounts with DataPolicy set to Cloud.
	ContainerCount pulumi.IntInput `pulumi:"containerCount"`
	// Data policy of the storage Account.
	DataPolicy pulumi.StringPtrInput `pulumi:"dataPolicy"`
	// Description for the storage Account.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Storage Account Credential Id
	StorageAccountCredentialId pulumi.StringPtrInput `pulumi:"storageAccountCredentialId"`
	// Current status of the storage account
	StorageAccountStatus pulumi.StringPtrInput `pulumi:"storageAccountStatus"`
}

func (StorageAccountPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountPropertiesResponse)(nil)).Elem()
}

func (i StorageAccountPropertiesResponseArgs) ToStorageAccountPropertiesResponseOutput() StorageAccountPropertiesResponseOutput {
	return i.ToStorageAccountPropertiesResponseOutputWithContext(context.Background())
}

func (i StorageAccountPropertiesResponseArgs) ToStorageAccountPropertiesResponseOutputWithContext(ctx context.Context) StorageAccountPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesResponseOutput)
}

func (i StorageAccountPropertiesResponseArgs) ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput {
	return i.ToStorageAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i StorageAccountPropertiesResponseArgs) ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesResponseOutput).ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx)
}

// StorageAccountPropertiesResponsePtrInput is an input type that accepts StorageAccountPropertiesResponseArgs, StorageAccountPropertiesResponsePtr and StorageAccountPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `StorageAccountPropertiesResponsePtrInput` via:
//
//          StorageAccountPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type StorageAccountPropertiesResponsePtrInput interface {
	pulumi.Input

	ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput
	ToStorageAccountPropertiesResponsePtrOutputWithContext(context.Context) StorageAccountPropertiesResponsePtrOutput
}

type storageAccountPropertiesResponsePtrType StorageAccountPropertiesResponseArgs

func StorageAccountPropertiesResponsePtr(v *StorageAccountPropertiesResponseArgs) StorageAccountPropertiesResponsePtrInput {
	return (*storageAccountPropertiesResponsePtrType)(v)
}

func (*storageAccountPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountPropertiesResponse)(nil)).Elem()
}

func (i *storageAccountPropertiesResponsePtrType) ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput {
	return i.ToStorageAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *storageAccountPropertiesResponsePtrType) ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesResponsePtrOutput)
}

// The storage account properties.
type StorageAccountPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountPropertiesResponse)(nil)).Elem()
}

func (o StorageAccountPropertiesResponseOutput) ToStorageAccountPropertiesResponseOutput() StorageAccountPropertiesResponseOutput {
	return o
}

func (o StorageAccountPropertiesResponseOutput) ToStorageAccountPropertiesResponseOutputWithContext(ctx context.Context) StorageAccountPropertiesResponseOutput {
	return o
}

func (o StorageAccountPropertiesResponseOutput) ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput {
	return o.ToStorageAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o StorageAccountPropertiesResponseOutput) ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountPropertiesResponsePtrOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) *StorageAccountPropertiesResponse {
		return &v
	}).(StorageAccountPropertiesResponsePtrOutput)
}

// BlobEndpoint of Storage Account
func (o StorageAccountPropertiesResponseOutput) BlobEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) string { return v.BlobEndpoint }).(pulumi.StringOutput)
}

// The Container Count. Present only for Storage Accounts with DataPolicy set to Cloud.
func (o StorageAccountPropertiesResponseOutput) ContainerCount() pulumi.IntOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) int { return v.ContainerCount }).(pulumi.IntOutput)
}

// Data policy of the storage Account.
func (o StorageAccountPropertiesResponseOutput) DataPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) *string { return v.DataPolicy }).(pulumi.StringPtrOutput)
}

// Description for the storage Account.
func (o StorageAccountPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Storage Account Credential Id
func (o StorageAccountPropertiesResponseOutput) StorageAccountCredentialId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) *string { return v.StorageAccountCredentialId }).(pulumi.StringPtrOutput)
}

// Current status of the storage account
func (o StorageAccountPropertiesResponseOutput) StorageAccountStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) *string { return v.StorageAccountStatus }).(pulumi.StringPtrOutput)
}

type StorageAccountPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageAccountPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountPropertiesResponse)(nil)).Elem()
}

func (o StorageAccountPropertiesResponsePtrOutput) ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput {
	return o
}

func (o StorageAccountPropertiesResponsePtrOutput) ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountPropertiesResponsePtrOutput {
	return o
}

func (o StorageAccountPropertiesResponsePtrOutput) Elem() StorageAccountPropertiesResponseOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) StorageAccountPropertiesResponse { return *v }).(StorageAccountPropertiesResponseOutput)
}

// BlobEndpoint of Storage Account
func (o StorageAccountPropertiesResponsePtrOutput) BlobEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BlobEndpoint
	}).(pulumi.StringPtrOutput)
}

// The Container Count. Present only for Storage Accounts with DataPolicy set to Cloud.
func (o StorageAccountPropertiesResponsePtrOutput) ContainerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ContainerCount
	}).(pulumi.IntPtrOutput)
}

// Data policy of the storage Account.
func (o StorageAccountPropertiesResponsePtrOutput) DataPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DataPolicy
	}).(pulumi.StringPtrOutput)
}

// Description for the storage Account.
func (o StorageAccountPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Storage Account Credential Id
func (o StorageAccountPropertiesResponsePtrOutput) StorageAccountCredentialId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountCredentialId
	}).(pulumi.StringPtrOutput)
}

// Current status of the storage account
func (o StorageAccountPropertiesResponsePtrOutput) StorageAccountStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountStatus
	}).(pulumi.StringPtrOutput)
}

// Tracking courier information.
type TrackingInfo struct {
	// Name of the carrier used in the delivery.
	CarrierName *string `pulumi:"carrierName"`
	// Serial number of the device being tracked.
	SerialNumber *string `pulumi:"serialNumber"`
	// Tracking ID of the shipment.
	TrackingId *string `pulumi:"trackingId"`
	// Tracking URL of the shipment.
	TrackingUrl *string `pulumi:"trackingUrl"`
}

// TrackingInfoInput is an input type that accepts TrackingInfoArgs and TrackingInfoOutput values.
// You can construct a concrete instance of `TrackingInfoInput` via:
//
//          TrackingInfoArgs{...}
type TrackingInfoInput interface {
	pulumi.Input

	ToTrackingInfoOutput() TrackingInfoOutput
	ToTrackingInfoOutputWithContext(context.Context) TrackingInfoOutput
}

// Tracking courier information.
type TrackingInfoArgs struct {
	// Name of the carrier used in the delivery.
	CarrierName pulumi.StringPtrInput `pulumi:"carrierName"`
	// Serial number of the device being tracked.
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// Tracking ID of the shipment.
	TrackingId pulumi.StringPtrInput `pulumi:"trackingId"`
	// Tracking URL of the shipment.
	TrackingUrl pulumi.StringPtrInput `pulumi:"trackingUrl"`
}

func (TrackingInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrackingInfo)(nil)).Elem()
}

func (i TrackingInfoArgs) ToTrackingInfoOutput() TrackingInfoOutput {
	return i.ToTrackingInfoOutputWithContext(context.Background())
}

func (i TrackingInfoArgs) ToTrackingInfoOutputWithContext(ctx context.Context) TrackingInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrackingInfoOutput)
}

// Tracking courier information.
type TrackingInfoOutput struct{ *pulumi.OutputState }

func (TrackingInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrackingInfo)(nil)).Elem()
}

func (o TrackingInfoOutput) ToTrackingInfoOutput() TrackingInfoOutput {
	return o
}

func (o TrackingInfoOutput) ToTrackingInfoOutputWithContext(ctx context.Context) TrackingInfoOutput {
	return o
}

// Name of the carrier used in the delivery.
func (o TrackingInfoOutput) CarrierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrackingInfo) *string { return v.CarrierName }).(pulumi.StringPtrOutput)
}

// Serial number of the device being tracked.
func (o TrackingInfoOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrackingInfo) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// Tracking ID of the shipment.
func (o TrackingInfoOutput) TrackingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrackingInfo) *string { return v.TrackingId }).(pulumi.StringPtrOutput)
}

// Tracking URL of the shipment.
func (o TrackingInfoOutput) TrackingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrackingInfo) *string { return v.TrackingUrl }).(pulumi.StringPtrOutput)
}

// Tracking courier information.
type TrackingInfoResponse struct {
	// Name of the carrier used in the delivery.
	CarrierName *string `pulumi:"carrierName"`
	// Serial number of the device being tracked.
	SerialNumber *string `pulumi:"serialNumber"`
	// Tracking ID of the shipment.
	TrackingId *string `pulumi:"trackingId"`
	// Tracking URL of the shipment.
	TrackingUrl *string `pulumi:"trackingUrl"`
}

// TrackingInfoResponseInput is an input type that accepts TrackingInfoResponseArgs and TrackingInfoResponseOutput values.
// You can construct a concrete instance of `TrackingInfoResponseInput` via:
//
//          TrackingInfoResponseArgs{...}
type TrackingInfoResponseInput interface {
	pulumi.Input

	ToTrackingInfoResponseOutput() TrackingInfoResponseOutput
	ToTrackingInfoResponseOutputWithContext(context.Context) TrackingInfoResponseOutput
}

// Tracking courier information.
type TrackingInfoResponseArgs struct {
	// Name of the carrier used in the delivery.
	CarrierName pulumi.StringPtrInput `pulumi:"carrierName"`
	// Serial number of the device being tracked.
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// Tracking ID of the shipment.
	TrackingId pulumi.StringPtrInput `pulumi:"trackingId"`
	// Tracking URL of the shipment.
	TrackingUrl pulumi.StringPtrInput `pulumi:"trackingUrl"`
}

func (TrackingInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrackingInfoResponse)(nil)).Elem()
}

func (i TrackingInfoResponseArgs) ToTrackingInfoResponseOutput() TrackingInfoResponseOutput {
	return i.ToTrackingInfoResponseOutputWithContext(context.Background())
}

func (i TrackingInfoResponseArgs) ToTrackingInfoResponseOutputWithContext(ctx context.Context) TrackingInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrackingInfoResponseOutput)
}

// TrackingInfoResponseArrayInput is an input type that accepts TrackingInfoResponseArray and TrackingInfoResponseArrayOutput values.
// You can construct a concrete instance of `TrackingInfoResponseArrayInput` via:
//
//          TrackingInfoResponseArray{ TrackingInfoResponseArgs{...} }
type TrackingInfoResponseArrayInput interface {
	pulumi.Input

	ToTrackingInfoResponseArrayOutput() TrackingInfoResponseArrayOutput
	ToTrackingInfoResponseArrayOutputWithContext(context.Context) TrackingInfoResponseArrayOutput
}

type TrackingInfoResponseArray []TrackingInfoResponseInput

func (TrackingInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrackingInfoResponse)(nil)).Elem()
}

func (i TrackingInfoResponseArray) ToTrackingInfoResponseArrayOutput() TrackingInfoResponseArrayOutput {
	return i.ToTrackingInfoResponseArrayOutputWithContext(context.Background())
}

func (i TrackingInfoResponseArray) ToTrackingInfoResponseArrayOutputWithContext(ctx context.Context) TrackingInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrackingInfoResponseArrayOutput)
}

// Tracking courier information.
type TrackingInfoResponseOutput struct{ *pulumi.OutputState }

func (TrackingInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrackingInfoResponse)(nil)).Elem()
}

func (o TrackingInfoResponseOutput) ToTrackingInfoResponseOutput() TrackingInfoResponseOutput {
	return o
}

func (o TrackingInfoResponseOutput) ToTrackingInfoResponseOutputWithContext(ctx context.Context) TrackingInfoResponseOutput {
	return o
}

// Name of the carrier used in the delivery.
func (o TrackingInfoResponseOutput) CarrierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrackingInfoResponse) *string { return v.CarrierName }).(pulumi.StringPtrOutput)
}

// Serial number of the device being tracked.
func (o TrackingInfoResponseOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrackingInfoResponse) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// Tracking ID of the shipment.
func (o TrackingInfoResponseOutput) TrackingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrackingInfoResponse) *string { return v.TrackingId }).(pulumi.StringPtrOutput)
}

// Tracking URL of the shipment.
func (o TrackingInfoResponseOutput) TrackingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrackingInfoResponse) *string { return v.TrackingUrl }).(pulumi.StringPtrOutput)
}

type TrackingInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (TrackingInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrackingInfoResponse)(nil)).Elem()
}

func (o TrackingInfoResponseArrayOutput) ToTrackingInfoResponseArrayOutput() TrackingInfoResponseArrayOutput {
	return o
}

func (o TrackingInfoResponseArrayOutput) ToTrackingInfoResponseArrayOutputWithContext(ctx context.Context) TrackingInfoResponseArrayOutput {
	return o
}

func (o TrackingInfoResponseArrayOutput) Index(i pulumi.IntInput) TrackingInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrackingInfoResponse {
		return vs[0].([]TrackingInfoResponse)[vs[1].(int)]
	}).(TrackingInfoResponseOutput)
}

// Trigger details.
type TriggerType struct {
	// Trigger Kind.
	Kind string `pulumi:"kind"`
	// The object name.
	Name string `pulumi:"name"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
}

// TriggerTypeInput is an input type that accepts TriggerTypeArgs and TriggerTypeOutput values.
// You can construct a concrete instance of `TriggerTypeInput` via:
//
//          TriggerTypeArgs{...}
type TriggerTypeInput interface {
	pulumi.Input

	ToTriggerTypeOutput() TriggerTypeOutput
	ToTriggerTypeOutputWithContext(context.Context) TriggerTypeOutput
}

// Trigger details.
type TriggerTypeArgs struct {
	// Trigger Kind.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The object name.
	Name pulumi.StringInput `pulumi:"name"`
	// The hierarchical type of the object.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TriggerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerType)(nil)).Elem()
}

func (i TriggerTypeArgs) ToTriggerTypeOutput() TriggerTypeOutput {
	return i.ToTriggerTypeOutputWithContext(context.Background())
}

func (i TriggerTypeArgs) ToTriggerTypeOutputWithContext(ctx context.Context) TriggerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTypeOutput)
}

// Trigger details.
type TriggerTypeOutput struct{ *pulumi.OutputState }

func (TriggerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerType)(nil)).Elem()
}

func (o TriggerTypeOutput) ToTriggerTypeOutput() TriggerTypeOutput {
	return o
}

func (o TriggerTypeOutput) ToTriggerTypeOutputWithContext(ctx context.Context) TriggerTypeOutput {
	return o
}

// Trigger Kind.
func (o TriggerTypeOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerType) string { return v.Kind }).(pulumi.StringOutput)
}

// The object name.
func (o TriggerTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerType) string { return v.Name }).(pulumi.StringOutput)
}

// The hierarchical type of the object.
func (o TriggerTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerType) string { return v.Type }).(pulumi.StringOutput)
}

// Represents a user who has access to one or more shares on the Data Box Edge/Gateway device.
type UserType struct {
	// The object name.
	Name string `pulumi:"name"`
	// The storage account credential properties.
	Properties UserPropertiesResponse `pulumi:"properties"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
}

// UserTypeInput is an input type that accepts UserTypeArgs and UserTypeOutput values.
// You can construct a concrete instance of `UserTypeInput` via:
//
//          UserTypeArgs{...}
type UserTypeInput interface {
	pulumi.Input

	ToUserTypeOutput() UserTypeOutput
	ToUserTypeOutputWithContext(context.Context) UserTypeOutput
}

// Represents a user who has access to one or more shares on the Data Box Edge/Gateway device.
type UserTypeArgs struct {
	// The object name.
	Name pulumi.StringInput `pulumi:"name"`
	// The storage account credential properties.
	Properties UserPropertiesResponseInput `pulumi:"properties"`
	// The hierarchical type of the object.
	Type pulumi.StringInput `pulumi:"type"`
}

func (UserTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserType)(nil)).Elem()
}

func (i UserTypeArgs) ToUserTypeOutput() UserTypeOutput {
	return i.ToUserTypeOutputWithContext(context.Background())
}

func (i UserTypeArgs) ToUserTypeOutputWithContext(ctx context.Context) UserTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserTypeOutput)
}

// Represents a user who has access to one or more shares on the Data Box Edge/Gateway device.
type UserTypeOutput struct{ *pulumi.OutputState }

func (UserTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserType)(nil)).Elem()
}

func (o UserTypeOutput) ToUserTypeOutput() UserTypeOutput {
	return o
}

func (o UserTypeOutput) ToUserTypeOutputWithContext(ctx context.Context) UserTypeOutput {
	return o
}

// The object name.
func (o UserTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserType) string { return v.Name }).(pulumi.StringOutput)
}

// The storage account credential properties.
func (o UserTypeOutput) Properties() UserPropertiesResponseOutput {
	return o.ApplyT(func(v UserType) UserPropertiesResponse { return v.Properties }).(UserPropertiesResponseOutput)
}

// The hierarchical type of the object.
func (o UserTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v UserType) string { return v.Type }).(pulumi.StringOutput)
}

// The mapping between a particular user and the access type on the SMB share.
type UserAccessRight struct {
	// Type of access to be allowed for the user.
	AccessType string `pulumi:"accessType"`
	// User ID (already existing in the device).
	UserId string `pulumi:"userId"`
}

// UserAccessRightInput is an input type that accepts UserAccessRightArgs and UserAccessRightOutput values.
// You can construct a concrete instance of `UserAccessRightInput` via:
//
//          UserAccessRightArgs{...}
type UserAccessRightInput interface {
	pulumi.Input

	ToUserAccessRightOutput() UserAccessRightOutput
	ToUserAccessRightOutputWithContext(context.Context) UserAccessRightOutput
}

// The mapping between a particular user and the access type on the SMB share.
type UserAccessRightArgs struct {
	// Type of access to be allowed for the user.
	AccessType pulumi.StringInput `pulumi:"accessType"`
	// User ID (already existing in the device).
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (UserAccessRightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccessRight)(nil)).Elem()
}

func (i UserAccessRightArgs) ToUserAccessRightOutput() UserAccessRightOutput {
	return i.ToUserAccessRightOutputWithContext(context.Background())
}

func (i UserAccessRightArgs) ToUserAccessRightOutputWithContext(ctx context.Context) UserAccessRightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccessRightOutput)
}

// UserAccessRightArrayInput is an input type that accepts UserAccessRightArray and UserAccessRightArrayOutput values.
// You can construct a concrete instance of `UserAccessRightArrayInput` via:
//
//          UserAccessRightArray{ UserAccessRightArgs{...} }
type UserAccessRightArrayInput interface {
	pulumi.Input

	ToUserAccessRightArrayOutput() UserAccessRightArrayOutput
	ToUserAccessRightArrayOutputWithContext(context.Context) UserAccessRightArrayOutput
}

type UserAccessRightArray []UserAccessRightInput

func (UserAccessRightArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserAccessRight)(nil)).Elem()
}

func (i UserAccessRightArray) ToUserAccessRightArrayOutput() UserAccessRightArrayOutput {
	return i.ToUserAccessRightArrayOutputWithContext(context.Background())
}

func (i UserAccessRightArray) ToUserAccessRightArrayOutputWithContext(ctx context.Context) UserAccessRightArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccessRightArrayOutput)
}

// The mapping between a particular user and the access type on the SMB share.
type UserAccessRightOutput struct{ *pulumi.OutputState }

func (UserAccessRightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccessRight)(nil)).Elem()
}

func (o UserAccessRightOutput) ToUserAccessRightOutput() UserAccessRightOutput {
	return o
}

func (o UserAccessRightOutput) ToUserAccessRightOutputWithContext(ctx context.Context) UserAccessRightOutput {
	return o
}

// Type of access to be allowed for the user.
func (o UserAccessRightOutput) AccessType() pulumi.StringOutput {
	return o.ApplyT(func(v UserAccessRight) string { return v.AccessType }).(pulumi.StringOutput)
}

// User ID (already existing in the device).
func (o UserAccessRightOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAccessRight) string { return v.UserId }).(pulumi.StringOutput)
}

type UserAccessRightArrayOutput struct{ *pulumi.OutputState }

func (UserAccessRightArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserAccessRight)(nil)).Elem()
}

func (o UserAccessRightArrayOutput) ToUserAccessRightArrayOutput() UserAccessRightArrayOutput {
	return o
}

func (o UserAccessRightArrayOutput) ToUserAccessRightArrayOutputWithContext(ctx context.Context) UserAccessRightArrayOutput {
	return o
}

func (o UserAccessRightArrayOutput) Index(i pulumi.IntInput) UserAccessRightOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserAccessRight {
		return vs[0].([]UserAccessRight)[vs[1].(int)]
	}).(UserAccessRightOutput)
}

// The mapping between a particular user and the access type on the SMB share.
type UserAccessRightResponse struct {
	// Type of access to be allowed for the user.
	AccessType string `pulumi:"accessType"`
	// User ID (already existing in the device).
	UserId string `pulumi:"userId"`
}

// UserAccessRightResponseInput is an input type that accepts UserAccessRightResponseArgs and UserAccessRightResponseOutput values.
// You can construct a concrete instance of `UserAccessRightResponseInput` via:
//
//          UserAccessRightResponseArgs{...}
type UserAccessRightResponseInput interface {
	pulumi.Input

	ToUserAccessRightResponseOutput() UserAccessRightResponseOutput
	ToUserAccessRightResponseOutputWithContext(context.Context) UserAccessRightResponseOutput
}

// The mapping between a particular user and the access type on the SMB share.
type UserAccessRightResponseArgs struct {
	// Type of access to be allowed for the user.
	AccessType pulumi.StringInput `pulumi:"accessType"`
	// User ID (already existing in the device).
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (UserAccessRightResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccessRightResponse)(nil)).Elem()
}

func (i UserAccessRightResponseArgs) ToUserAccessRightResponseOutput() UserAccessRightResponseOutput {
	return i.ToUserAccessRightResponseOutputWithContext(context.Background())
}

func (i UserAccessRightResponseArgs) ToUserAccessRightResponseOutputWithContext(ctx context.Context) UserAccessRightResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccessRightResponseOutput)
}

// UserAccessRightResponseArrayInput is an input type that accepts UserAccessRightResponseArray and UserAccessRightResponseArrayOutput values.
// You can construct a concrete instance of `UserAccessRightResponseArrayInput` via:
//
//          UserAccessRightResponseArray{ UserAccessRightResponseArgs{...} }
type UserAccessRightResponseArrayInput interface {
	pulumi.Input

	ToUserAccessRightResponseArrayOutput() UserAccessRightResponseArrayOutput
	ToUserAccessRightResponseArrayOutputWithContext(context.Context) UserAccessRightResponseArrayOutput
}

type UserAccessRightResponseArray []UserAccessRightResponseInput

func (UserAccessRightResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserAccessRightResponse)(nil)).Elem()
}

func (i UserAccessRightResponseArray) ToUserAccessRightResponseArrayOutput() UserAccessRightResponseArrayOutput {
	return i.ToUserAccessRightResponseArrayOutputWithContext(context.Background())
}

func (i UserAccessRightResponseArray) ToUserAccessRightResponseArrayOutputWithContext(ctx context.Context) UserAccessRightResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccessRightResponseArrayOutput)
}

// The mapping between a particular user and the access type on the SMB share.
type UserAccessRightResponseOutput struct{ *pulumi.OutputState }

func (UserAccessRightResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccessRightResponse)(nil)).Elem()
}

func (o UserAccessRightResponseOutput) ToUserAccessRightResponseOutput() UserAccessRightResponseOutput {
	return o
}

func (o UserAccessRightResponseOutput) ToUserAccessRightResponseOutputWithContext(ctx context.Context) UserAccessRightResponseOutput {
	return o
}

// Type of access to be allowed for the user.
func (o UserAccessRightResponseOutput) AccessType() pulumi.StringOutput {
	return o.ApplyT(func(v UserAccessRightResponse) string { return v.AccessType }).(pulumi.StringOutput)
}

// User ID (already existing in the device).
func (o UserAccessRightResponseOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAccessRightResponse) string { return v.UserId }).(pulumi.StringOutput)
}

type UserAccessRightResponseArrayOutput struct{ *pulumi.OutputState }

func (UserAccessRightResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserAccessRightResponse)(nil)).Elem()
}

func (o UserAccessRightResponseArrayOutput) ToUserAccessRightResponseArrayOutput() UserAccessRightResponseArrayOutput {
	return o
}

func (o UserAccessRightResponseArrayOutput) ToUserAccessRightResponseArrayOutputWithContext(ctx context.Context) UserAccessRightResponseArrayOutput {
	return o
}

func (o UserAccessRightResponseArrayOutput) Index(i pulumi.IntInput) UserAccessRightResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserAccessRightResponse {
		return vs[0].([]UserAccessRightResponse)[vs[1].(int)]
	}).(UserAccessRightResponseOutput)
}

// The user properties.
type UserPropertiesResponse struct {
	// The password details.
	EncryptedPassword *AsymmetricEncryptedSecretResponse `pulumi:"encryptedPassword"`
	// List of shares that the user has rights on. This field should not be specified during user creation.
	ShareAccessRights []ShareAccessRightResponse `pulumi:"shareAccessRights"`
	// Type of the user.
	UserType string `pulumi:"userType"`
}

// UserPropertiesResponseInput is an input type that accepts UserPropertiesResponseArgs and UserPropertiesResponseOutput values.
// You can construct a concrete instance of `UserPropertiesResponseInput` via:
//
//          UserPropertiesResponseArgs{...}
type UserPropertiesResponseInput interface {
	pulumi.Input

	ToUserPropertiesResponseOutput() UserPropertiesResponseOutput
	ToUserPropertiesResponseOutputWithContext(context.Context) UserPropertiesResponseOutput
}

// The user properties.
type UserPropertiesResponseArgs struct {
	// The password details.
	EncryptedPassword AsymmetricEncryptedSecretResponsePtrInput `pulumi:"encryptedPassword"`
	// List of shares that the user has rights on. This field should not be specified during user creation.
	ShareAccessRights ShareAccessRightResponseArrayInput `pulumi:"shareAccessRights"`
	// Type of the user.
	UserType pulumi.StringInput `pulumi:"userType"`
}

func (UserPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPropertiesResponse)(nil)).Elem()
}

func (i UserPropertiesResponseArgs) ToUserPropertiesResponseOutput() UserPropertiesResponseOutput {
	return i.ToUserPropertiesResponseOutputWithContext(context.Background())
}

func (i UserPropertiesResponseArgs) ToUserPropertiesResponseOutputWithContext(ctx context.Context) UserPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPropertiesResponseOutput)
}

func (i UserPropertiesResponseArgs) ToUserPropertiesResponsePtrOutput() UserPropertiesResponsePtrOutput {
	return i.ToUserPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i UserPropertiesResponseArgs) ToUserPropertiesResponsePtrOutputWithContext(ctx context.Context) UserPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPropertiesResponseOutput).ToUserPropertiesResponsePtrOutputWithContext(ctx)
}

// UserPropertiesResponsePtrInput is an input type that accepts UserPropertiesResponseArgs, UserPropertiesResponsePtr and UserPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `UserPropertiesResponsePtrInput` via:
//
//          UserPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type UserPropertiesResponsePtrInput interface {
	pulumi.Input

	ToUserPropertiesResponsePtrOutput() UserPropertiesResponsePtrOutput
	ToUserPropertiesResponsePtrOutputWithContext(context.Context) UserPropertiesResponsePtrOutput
}

type userPropertiesResponsePtrType UserPropertiesResponseArgs

func UserPropertiesResponsePtr(v *UserPropertiesResponseArgs) UserPropertiesResponsePtrInput {
	return (*userPropertiesResponsePtrType)(v)
}

func (*userPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPropertiesResponse)(nil)).Elem()
}

func (i *userPropertiesResponsePtrType) ToUserPropertiesResponsePtrOutput() UserPropertiesResponsePtrOutput {
	return i.ToUserPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *userPropertiesResponsePtrType) ToUserPropertiesResponsePtrOutputWithContext(ctx context.Context) UserPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPropertiesResponsePtrOutput)
}

// The user properties.
type UserPropertiesResponseOutput struct{ *pulumi.OutputState }

func (UserPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPropertiesResponse)(nil)).Elem()
}

func (o UserPropertiesResponseOutput) ToUserPropertiesResponseOutput() UserPropertiesResponseOutput {
	return o
}

func (o UserPropertiesResponseOutput) ToUserPropertiesResponseOutputWithContext(ctx context.Context) UserPropertiesResponseOutput {
	return o
}

func (o UserPropertiesResponseOutput) ToUserPropertiesResponsePtrOutput() UserPropertiesResponsePtrOutput {
	return o.ToUserPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o UserPropertiesResponseOutput) ToUserPropertiesResponsePtrOutputWithContext(ctx context.Context) UserPropertiesResponsePtrOutput {
	return o.ApplyT(func(v UserPropertiesResponse) *UserPropertiesResponse {
		return &v
	}).(UserPropertiesResponsePtrOutput)
}

// The password details.
func (o UserPropertiesResponseOutput) EncryptedPassword() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v UserPropertiesResponse) *AsymmetricEncryptedSecretResponse { return v.EncryptedPassword }).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// List of shares that the user has rights on. This field should not be specified during user creation.
func (o UserPropertiesResponseOutput) ShareAccessRights() ShareAccessRightResponseArrayOutput {
	return o.ApplyT(func(v UserPropertiesResponse) []ShareAccessRightResponse { return v.ShareAccessRights }).(ShareAccessRightResponseArrayOutput)
}

// Type of the user.
func (o UserPropertiesResponseOutput) UserType() pulumi.StringOutput {
	return o.ApplyT(func(v UserPropertiesResponse) string { return v.UserType }).(pulumi.StringOutput)
}

type UserPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (UserPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPropertiesResponse)(nil)).Elem()
}

func (o UserPropertiesResponsePtrOutput) ToUserPropertiesResponsePtrOutput() UserPropertiesResponsePtrOutput {
	return o
}

func (o UserPropertiesResponsePtrOutput) ToUserPropertiesResponsePtrOutputWithContext(ctx context.Context) UserPropertiesResponsePtrOutput {
	return o
}

func (o UserPropertiesResponsePtrOutput) Elem() UserPropertiesResponseOutput {
	return o.ApplyT(func(v *UserPropertiesResponse) UserPropertiesResponse { return *v }).(UserPropertiesResponseOutput)
}

// The password details.
func (o UserPropertiesResponsePtrOutput) EncryptedPassword() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v *UserPropertiesResponse) *AsymmetricEncryptedSecretResponse {
		if v == nil {
			return nil
		}
		return v.EncryptedPassword
	}).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// List of shares that the user has rights on. This field should not be specified during user creation.
func (o UserPropertiesResponsePtrOutput) ShareAccessRights() ShareAccessRightResponseArrayOutput {
	return o.ApplyT(func(v *UserPropertiesResponse) []ShareAccessRightResponse {
		if v == nil {
			return nil
		}
		return v.ShareAccessRights
	}).(ShareAccessRightResponseArrayOutput)
}

// Type of the user.
func (o UserPropertiesResponsePtrOutput) UserType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserType
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AddressOutput{})
	pulumi.RegisterOutputType(AddressPtrOutput{})
	pulumi.RegisterOutputType(AddressResponseOutput{})
	pulumi.RegisterOutputType(AddressResponsePtrOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretPtrOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretResponseOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureContainerInfoOutput{})
	pulumi.RegisterOutputType(AzureContainerInfoPtrOutput{})
	pulumi.RegisterOutputType(AzureContainerInfoResponseOutput{})
	pulumi.RegisterOutputType(AzureContainerInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(BandwidthScheduleTypeOutput{})
	pulumi.RegisterOutputType(BandwidthSchedulePropertiesResponseOutput{})
	pulumi.RegisterOutputType(BandwidthSchedulePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ClientAccessRightOutput{})
	pulumi.RegisterOutputType(ClientAccessRightArrayOutput{})
	pulumi.RegisterOutputType(ClientAccessRightResponseOutput{})
	pulumi.RegisterOutputType(ClientAccessRightResponseArrayOutput{})
	pulumi.RegisterOutputType(ContactDetailsOutput{})
	pulumi.RegisterOutputType(ContactDetailsPtrOutput{})
	pulumi.RegisterOutputType(ContactDetailsResponseOutput{})
	pulumi.RegisterOutputType(ContactDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerTypeOutput{})
	pulumi.RegisterOutputType(ContainerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ContainerPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DataBoxEdgeDevicePropertiesResponseOutput{})
	pulumi.RegisterOutputType(DataBoxEdgeDevicePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DeviceTypeOutput{})
	pulumi.RegisterOutputType(MountPointMapOutput{})
	pulumi.RegisterOutputType(MountPointMapResponseOutput{})
	pulumi.RegisterOutputType(MountPointMapResponseArrayOutput{})
	pulumi.RegisterOutputType(OrderTypeOutput{})
	pulumi.RegisterOutputType(OrderPropertiesResponseOutput{})
	pulumi.RegisterOutputType(OrderPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(OrderStatusOutput{})
	pulumi.RegisterOutputType(OrderStatusPtrOutput{})
	pulumi.RegisterOutputType(OrderStatusResponseOutput{})
	pulumi.RegisterOutputType(OrderStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(OrderStatusResponseArrayOutput{})
	pulumi.RegisterOutputType(RefreshDetailsOutput{})
	pulumi.RegisterOutputType(RefreshDetailsPtrOutput{})
	pulumi.RegisterOutputType(RefreshDetailsResponseOutput{})
	pulumi.RegisterOutputType(RefreshDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(RoleTypeOutput{})
	pulumi.RegisterOutputType(ShareTypeOutput{})
	pulumi.RegisterOutputType(ShareAccessRightOutput{})
	pulumi.RegisterOutputType(ShareAccessRightArrayOutput{})
	pulumi.RegisterOutputType(ShareAccessRightResponseOutput{})
	pulumi.RegisterOutputType(ShareAccessRightResponseArrayOutput{})
	pulumi.RegisterOutputType(SharePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SharePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageAccountTypeOutput{})
	pulumi.RegisterOutputType(StorageAccountCredentialTypeOutput{})
	pulumi.RegisterOutputType(StorageAccountCredentialPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountCredentialPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageAccountPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TrackingInfoOutput{})
	pulumi.RegisterOutputType(TrackingInfoResponseOutput{})
	pulumi.RegisterOutputType(TrackingInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(TriggerTypeOutput{})
	pulumi.RegisterOutputType(UserTypeOutput{})
	pulumi.RegisterOutputType(UserAccessRightOutput{})
	pulumi.RegisterOutputType(UserAccessRightArrayOutput{})
	pulumi.RegisterOutputType(UserAccessRightResponseOutput{})
	pulumi.RegisterOutputType(UserAccessRightResponseArrayOutput{})
	pulumi.RegisterOutputType(UserPropertiesResponseOutput{})
	pulumi.RegisterOutputType(UserPropertiesResponsePtrOutput{})
}
