// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package databoxedge

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Trigger details.
type DataBoxEdgeDeviceTrigger struct {
	pulumi.CustomResourceState

	// Trigger Kind.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// The object name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The hierarchical type of the object.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDataBoxEdgeDeviceTrigger registers a new resource with the given unique name, arguments, and options.
func NewDataBoxEdgeDeviceTrigger(ctx *pulumi.Context,
	name string, args *DataBoxEdgeDeviceTriggerArgs, opts ...pulumi.ResourceOption) (*DataBoxEdgeDeviceTrigger, error) {
	if args == nil || args.DeviceName == nil {
		return nil, errors.New("missing required argument 'DeviceName'")
	}
	if args == nil || args.Kind == nil {
		return nil, errors.New("missing required argument 'Kind'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &DataBoxEdgeDeviceTriggerArgs{}
	}
	var resource DataBoxEdgeDeviceTrigger
	err := ctx.RegisterResource("azurerm:databoxedge:DataBoxEdgeDeviceTrigger", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataBoxEdgeDeviceTrigger gets an existing DataBoxEdgeDeviceTrigger resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataBoxEdgeDeviceTrigger(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataBoxEdgeDeviceTriggerState, opts ...pulumi.ResourceOption) (*DataBoxEdgeDeviceTrigger, error) {
	var resource DataBoxEdgeDeviceTrigger
	err := ctx.ReadResource("azurerm:databoxedge:DataBoxEdgeDeviceTrigger", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataBoxEdgeDeviceTrigger resources.
type dataBoxEdgeDeviceTriggerState struct {
	// Trigger Kind.
	Kind *string `pulumi:"kind"`
	// The object name.
	Name *string `pulumi:"name"`
	// The hierarchical type of the object.
	Type *string `pulumi:"type"`
}

type DataBoxEdgeDeviceTriggerState struct {
	// Trigger Kind.
	Kind pulumi.StringPtrInput
	// The object name.
	Name pulumi.StringPtrInput
	// The hierarchical type of the object.
	Type pulumi.StringPtrInput
}

func (DataBoxEdgeDeviceTriggerState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataBoxEdgeDeviceTriggerState)(nil)).Elem()
}

type dataBoxEdgeDeviceTriggerArgs struct {
	// Creates or updates a trigger
	DeviceName string `pulumi:"deviceName"`
	// Trigger Kind.
	Kind string `pulumi:"kind"`
	// The trigger name.
	Name string `pulumi:"name"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a DataBoxEdgeDeviceTrigger resource.
type DataBoxEdgeDeviceTriggerArgs struct {
	// Creates or updates a trigger
	DeviceName pulumi.StringInput
	// Trigger Kind.
	Kind pulumi.StringInput
	// The trigger name.
	Name pulumi.StringInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
}

func (DataBoxEdgeDeviceTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataBoxEdgeDeviceTriggerArgs)(nil)).Elem()
}
