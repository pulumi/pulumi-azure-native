// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20160401

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The policy assignment.
type PolicyAssignmentType struct {
	// The name of the policy assignment.
	Name *string `pulumi:"name"`
	// Properties for the policy assignment.
	Properties PolicyAssignmentPropertiesResponse `pulumi:"properties"`
	// The type of the policy assignment.
	Type *string `pulumi:"type"`
}

// PolicyAssignmentTypeInput is an input type that accepts PolicyAssignmentTypeArgs and PolicyAssignmentTypeOutput values.
// You can construct a concrete instance of `PolicyAssignmentTypeInput` via:
//
//          PolicyAssignmentTypeArgs{...}
type PolicyAssignmentTypeInput interface {
	pulumi.Input

	ToPolicyAssignmentTypeOutput() PolicyAssignmentTypeOutput
	ToPolicyAssignmentTypeOutputWithContext(context.Context) PolicyAssignmentTypeOutput
}

// The policy assignment.
type PolicyAssignmentTypeArgs struct {
	// The name of the policy assignment.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties for the policy assignment.
	Properties PolicyAssignmentPropertiesResponseInput `pulumi:"properties"`
	// The type of the policy assignment.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (PolicyAssignmentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAssignmentType)(nil)).Elem()
}

func (i PolicyAssignmentTypeArgs) ToPolicyAssignmentTypeOutput() PolicyAssignmentTypeOutput {
	return i.ToPolicyAssignmentTypeOutputWithContext(context.Background())
}

func (i PolicyAssignmentTypeArgs) ToPolicyAssignmentTypeOutputWithContext(ctx context.Context) PolicyAssignmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAssignmentTypeOutput)
}

// The policy assignment.
type PolicyAssignmentTypeOutput struct{ *pulumi.OutputState }

func (PolicyAssignmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAssignmentType)(nil)).Elem()
}

func (o PolicyAssignmentTypeOutput) ToPolicyAssignmentTypeOutput() PolicyAssignmentTypeOutput {
	return o
}

func (o PolicyAssignmentTypeOutput) ToPolicyAssignmentTypeOutputWithContext(ctx context.Context) PolicyAssignmentTypeOutput {
	return o
}

// The name of the policy assignment.
func (o PolicyAssignmentTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties for the policy assignment.
func (o PolicyAssignmentTypeOutput) Properties() PolicyAssignmentPropertiesResponseOutput {
	return o.ApplyT(func(v PolicyAssignmentType) PolicyAssignmentPropertiesResponse { return v.Properties }).(PolicyAssignmentPropertiesResponseOutput)
}

// The type of the policy assignment.
func (o PolicyAssignmentTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The policy assignment properties.
type PolicyAssignmentProperties struct {
	// The display name of the policy assignment.
	DisplayName *string `pulumi:"displayName"`
	// The ID of the policy definition.
	PolicyDefinitionId *string `pulumi:"policyDefinitionId"`
	// The scope for the policy assignment.
	Scope *string `pulumi:"scope"`
}

// PolicyAssignmentPropertiesInput is an input type that accepts PolicyAssignmentPropertiesArgs and PolicyAssignmentPropertiesOutput values.
// You can construct a concrete instance of `PolicyAssignmentPropertiesInput` via:
//
//          PolicyAssignmentPropertiesArgs{...}
type PolicyAssignmentPropertiesInput interface {
	pulumi.Input

	ToPolicyAssignmentPropertiesOutput() PolicyAssignmentPropertiesOutput
	ToPolicyAssignmentPropertiesOutputWithContext(context.Context) PolicyAssignmentPropertiesOutput
}

// The policy assignment properties.
type PolicyAssignmentPropertiesArgs struct {
	// The display name of the policy assignment.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The ID of the policy definition.
	PolicyDefinitionId pulumi.StringPtrInput `pulumi:"policyDefinitionId"`
	// The scope for the policy assignment.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
}

func (PolicyAssignmentPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAssignmentProperties)(nil)).Elem()
}

func (i PolicyAssignmentPropertiesArgs) ToPolicyAssignmentPropertiesOutput() PolicyAssignmentPropertiesOutput {
	return i.ToPolicyAssignmentPropertiesOutputWithContext(context.Background())
}

func (i PolicyAssignmentPropertiesArgs) ToPolicyAssignmentPropertiesOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAssignmentPropertiesOutput)
}

func (i PolicyAssignmentPropertiesArgs) ToPolicyAssignmentPropertiesPtrOutput() PolicyAssignmentPropertiesPtrOutput {
	return i.ToPolicyAssignmentPropertiesPtrOutputWithContext(context.Background())
}

func (i PolicyAssignmentPropertiesArgs) ToPolicyAssignmentPropertiesPtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAssignmentPropertiesOutput).ToPolicyAssignmentPropertiesPtrOutputWithContext(ctx)
}

// PolicyAssignmentPropertiesPtrInput is an input type that accepts PolicyAssignmentPropertiesArgs, PolicyAssignmentPropertiesPtr and PolicyAssignmentPropertiesPtrOutput values.
// You can construct a concrete instance of `PolicyAssignmentPropertiesPtrInput` via:
//
//          PolicyAssignmentPropertiesArgs{...}
//
//  or:
//
//          nil
type PolicyAssignmentPropertiesPtrInput interface {
	pulumi.Input

	ToPolicyAssignmentPropertiesPtrOutput() PolicyAssignmentPropertiesPtrOutput
	ToPolicyAssignmentPropertiesPtrOutputWithContext(context.Context) PolicyAssignmentPropertiesPtrOutput
}

type policyAssignmentPropertiesPtrType PolicyAssignmentPropertiesArgs

func PolicyAssignmentPropertiesPtr(v *PolicyAssignmentPropertiesArgs) PolicyAssignmentPropertiesPtrInput {
	return (*policyAssignmentPropertiesPtrType)(v)
}

func (*policyAssignmentPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAssignmentProperties)(nil)).Elem()
}

func (i *policyAssignmentPropertiesPtrType) ToPolicyAssignmentPropertiesPtrOutput() PolicyAssignmentPropertiesPtrOutput {
	return i.ToPolicyAssignmentPropertiesPtrOutputWithContext(context.Background())
}

func (i *policyAssignmentPropertiesPtrType) ToPolicyAssignmentPropertiesPtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAssignmentPropertiesPtrOutput)
}

// The policy assignment properties.
type PolicyAssignmentPropertiesOutput struct{ *pulumi.OutputState }

func (PolicyAssignmentPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAssignmentProperties)(nil)).Elem()
}

func (o PolicyAssignmentPropertiesOutput) ToPolicyAssignmentPropertiesOutput() PolicyAssignmentPropertiesOutput {
	return o
}

func (o PolicyAssignmentPropertiesOutput) ToPolicyAssignmentPropertiesOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesOutput {
	return o
}

func (o PolicyAssignmentPropertiesOutput) ToPolicyAssignmentPropertiesPtrOutput() PolicyAssignmentPropertiesPtrOutput {
	return o.ToPolicyAssignmentPropertiesPtrOutputWithContext(context.Background())
}

func (o PolicyAssignmentPropertiesOutput) ToPolicyAssignmentPropertiesPtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentProperties) *PolicyAssignmentProperties {
		return &v
	}).(PolicyAssignmentPropertiesPtrOutput)
}

// The display name of the policy assignment.
func (o PolicyAssignmentPropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The ID of the policy definition.
func (o PolicyAssignmentPropertiesOutput) PolicyDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentProperties) *string { return v.PolicyDefinitionId }).(pulumi.StringPtrOutput)
}

// The scope for the policy assignment.
func (o PolicyAssignmentPropertiesOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentProperties) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type PolicyAssignmentPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PolicyAssignmentPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAssignmentProperties)(nil)).Elem()
}

func (o PolicyAssignmentPropertiesPtrOutput) ToPolicyAssignmentPropertiesPtrOutput() PolicyAssignmentPropertiesPtrOutput {
	return o
}

func (o PolicyAssignmentPropertiesPtrOutput) ToPolicyAssignmentPropertiesPtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesPtrOutput {
	return o
}

func (o PolicyAssignmentPropertiesPtrOutput) Elem() PolicyAssignmentPropertiesOutput {
	return o.ApplyT(func(v *PolicyAssignmentProperties) PolicyAssignmentProperties { return *v }).(PolicyAssignmentPropertiesOutput)
}

// The display name of the policy assignment.
func (o PolicyAssignmentPropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The ID of the policy definition.
func (o PolicyAssignmentPropertiesPtrOutput) PolicyDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.PolicyDefinitionId
	}).(pulumi.StringPtrOutput)
}

// The scope for the policy assignment.
func (o PolicyAssignmentPropertiesPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentProperties) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// The policy assignment properties.
type PolicyAssignmentPropertiesResponse struct {
	// The display name of the policy assignment.
	DisplayName *string `pulumi:"displayName"`
	// The ID of the policy definition.
	PolicyDefinitionId *string `pulumi:"policyDefinitionId"`
	// The scope for the policy assignment.
	Scope *string `pulumi:"scope"`
}

// PolicyAssignmentPropertiesResponseInput is an input type that accepts PolicyAssignmentPropertiesResponseArgs and PolicyAssignmentPropertiesResponseOutput values.
// You can construct a concrete instance of `PolicyAssignmentPropertiesResponseInput` via:
//
//          PolicyAssignmentPropertiesResponseArgs{...}
type PolicyAssignmentPropertiesResponseInput interface {
	pulumi.Input

	ToPolicyAssignmentPropertiesResponseOutput() PolicyAssignmentPropertiesResponseOutput
	ToPolicyAssignmentPropertiesResponseOutputWithContext(context.Context) PolicyAssignmentPropertiesResponseOutput
}

// The policy assignment properties.
type PolicyAssignmentPropertiesResponseArgs struct {
	// The display name of the policy assignment.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The ID of the policy definition.
	PolicyDefinitionId pulumi.StringPtrInput `pulumi:"policyDefinitionId"`
	// The scope for the policy assignment.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
}

func (PolicyAssignmentPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAssignmentPropertiesResponse)(nil)).Elem()
}

func (i PolicyAssignmentPropertiesResponseArgs) ToPolicyAssignmentPropertiesResponseOutput() PolicyAssignmentPropertiesResponseOutput {
	return i.ToPolicyAssignmentPropertiesResponseOutputWithContext(context.Background())
}

func (i PolicyAssignmentPropertiesResponseArgs) ToPolicyAssignmentPropertiesResponseOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAssignmentPropertiesResponseOutput)
}

func (i PolicyAssignmentPropertiesResponseArgs) ToPolicyAssignmentPropertiesResponsePtrOutput() PolicyAssignmentPropertiesResponsePtrOutput {
	return i.ToPolicyAssignmentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i PolicyAssignmentPropertiesResponseArgs) ToPolicyAssignmentPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAssignmentPropertiesResponseOutput).ToPolicyAssignmentPropertiesResponsePtrOutputWithContext(ctx)
}

// PolicyAssignmentPropertiesResponsePtrInput is an input type that accepts PolicyAssignmentPropertiesResponseArgs, PolicyAssignmentPropertiesResponsePtr and PolicyAssignmentPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `PolicyAssignmentPropertiesResponsePtrInput` via:
//
//          PolicyAssignmentPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type PolicyAssignmentPropertiesResponsePtrInput interface {
	pulumi.Input

	ToPolicyAssignmentPropertiesResponsePtrOutput() PolicyAssignmentPropertiesResponsePtrOutput
	ToPolicyAssignmentPropertiesResponsePtrOutputWithContext(context.Context) PolicyAssignmentPropertiesResponsePtrOutput
}

type policyAssignmentPropertiesResponsePtrType PolicyAssignmentPropertiesResponseArgs

func PolicyAssignmentPropertiesResponsePtr(v *PolicyAssignmentPropertiesResponseArgs) PolicyAssignmentPropertiesResponsePtrInput {
	return (*policyAssignmentPropertiesResponsePtrType)(v)
}

func (*policyAssignmentPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAssignmentPropertiesResponse)(nil)).Elem()
}

func (i *policyAssignmentPropertiesResponsePtrType) ToPolicyAssignmentPropertiesResponsePtrOutput() PolicyAssignmentPropertiesResponsePtrOutput {
	return i.ToPolicyAssignmentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *policyAssignmentPropertiesResponsePtrType) ToPolicyAssignmentPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAssignmentPropertiesResponsePtrOutput)
}

// The policy assignment properties.
type PolicyAssignmentPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PolicyAssignmentPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAssignmentPropertiesResponse)(nil)).Elem()
}

func (o PolicyAssignmentPropertiesResponseOutput) ToPolicyAssignmentPropertiesResponseOutput() PolicyAssignmentPropertiesResponseOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponseOutput) ToPolicyAssignmentPropertiesResponseOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponseOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponseOutput) ToPolicyAssignmentPropertiesResponsePtrOutput() PolicyAssignmentPropertiesResponsePtrOutput {
	return o.ToPolicyAssignmentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o PolicyAssignmentPropertiesResponseOutput) ToPolicyAssignmentPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponsePtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponse) *PolicyAssignmentPropertiesResponse {
		return &v
	}).(PolicyAssignmentPropertiesResponsePtrOutput)
}

// The display name of the policy assignment.
func (o PolicyAssignmentPropertiesResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The ID of the policy definition.
func (o PolicyAssignmentPropertiesResponseOutput) PolicyDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponse) *string { return v.PolicyDefinitionId }).(pulumi.StringPtrOutput)
}

// The scope for the policy assignment.
func (o PolicyAssignmentPropertiesResponseOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponse) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type PolicyAssignmentPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PolicyAssignmentPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAssignmentPropertiesResponse)(nil)).Elem()
}

func (o PolicyAssignmentPropertiesResponsePtrOutput) ToPolicyAssignmentPropertiesResponsePtrOutput() PolicyAssignmentPropertiesResponsePtrOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponsePtrOutput) ToPolicyAssignmentPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponsePtrOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponsePtrOutput) Elem() PolicyAssignmentPropertiesResponseOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponse) PolicyAssignmentPropertiesResponse { return *v }).(PolicyAssignmentPropertiesResponseOutput)
}

// The display name of the policy assignment.
func (o PolicyAssignmentPropertiesResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The ID of the policy definition.
func (o PolicyAssignmentPropertiesResponsePtrOutput) PolicyDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyDefinitionId
	}).(pulumi.StringPtrOutput)
}

// The scope for the policy assignment.
func (o PolicyAssignmentPropertiesResponsePtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// The policy definition.
type PolicyDefinitionType struct {
	// The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI.
	Name *string `pulumi:"name"`
	// The policy definition properties.
	Properties PolicyDefinitionPropertiesResponse `pulumi:"properties"`
}

// PolicyDefinitionTypeInput is an input type that accepts PolicyDefinitionTypeArgs and PolicyDefinitionTypeOutput values.
// You can construct a concrete instance of `PolicyDefinitionTypeInput` via:
//
//          PolicyDefinitionTypeArgs{...}
type PolicyDefinitionTypeInput interface {
	pulumi.Input

	ToPolicyDefinitionTypeOutput() PolicyDefinitionTypeOutput
	ToPolicyDefinitionTypeOutputWithContext(context.Context) PolicyDefinitionTypeOutput
}

// The policy definition.
type PolicyDefinitionTypeArgs struct {
	// The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The policy definition properties.
	Properties PolicyDefinitionPropertiesResponseInput `pulumi:"properties"`
}

func (PolicyDefinitionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionType)(nil)).Elem()
}

func (i PolicyDefinitionTypeArgs) ToPolicyDefinitionTypeOutput() PolicyDefinitionTypeOutput {
	return i.ToPolicyDefinitionTypeOutputWithContext(context.Background())
}

func (i PolicyDefinitionTypeArgs) ToPolicyDefinitionTypeOutputWithContext(ctx context.Context) PolicyDefinitionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionTypeOutput)
}

// The policy definition.
type PolicyDefinitionTypeOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionType)(nil)).Elem()
}

func (o PolicyDefinitionTypeOutput) ToPolicyDefinitionTypeOutput() PolicyDefinitionTypeOutput {
	return o
}

func (o PolicyDefinitionTypeOutput) ToPolicyDefinitionTypeOutputWithContext(ctx context.Context) PolicyDefinitionTypeOutput {
	return o
}

// The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI.
func (o PolicyDefinitionTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The policy definition properties.
func (o PolicyDefinitionTypeOutput) Properties() PolicyDefinitionPropertiesResponseOutput {
	return o.ApplyT(func(v PolicyDefinitionType) PolicyDefinitionPropertiesResponse { return v.Properties }).(PolicyDefinitionPropertiesResponseOutput)
}

// The policy definition properties.
type PolicyDefinitionProperties struct {
	// The policy definition description.
	Description *string `pulumi:"description"`
	// The display name of the policy definition.
	DisplayName *string `pulumi:"displayName"`
	// The policy rule.
	PolicyRule map[string]string `pulumi:"policyRule"`
	// The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom.
	PolicyType *string `pulumi:"policyType"`
}

// PolicyDefinitionPropertiesInput is an input type that accepts PolicyDefinitionPropertiesArgs and PolicyDefinitionPropertiesOutput values.
// You can construct a concrete instance of `PolicyDefinitionPropertiesInput` via:
//
//          PolicyDefinitionPropertiesArgs{...}
type PolicyDefinitionPropertiesInput interface {
	pulumi.Input

	ToPolicyDefinitionPropertiesOutput() PolicyDefinitionPropertiesOutput
	ToPolicyDefinitionPropertiesOutputWithContext(context.Context) PolicyDefinitionPropertiesOutput
}

// The policy definition properties.
type PolicyDefinitionPropertiesArgs struct {
	// The policy definition description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The display name of the policy definition.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The policy rule.
	PolicyRule pulumi.StringMapInput `pulumi:"policyRule"`
	// The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom.
	PolicyType pulumi.StringPtrInput `pulumi:"policyType"`
}

func (PolicyDefinitionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionProperties)(nil)).Elem()
}

func (i PolicyDefinitionPropertiesArgs) ToPolicyDefinitionPropertiesOutput() PolicyDefinitionPropertiesOutput {
	return i.ToPolicyDefinitionPropertiesOutputWithContext(context.Background())
}

func (i PolicyDefinitionPropertiesArgs) ToPolicyDefinitionPropertiesOutputWithContext(ctx context.Context) PolicyDefinitionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionPropertiesOutput)
}

func (i PolicyDefinitionPropertiesArgs) ToPolicyDefinitionPropertiesPtrOutput() PolicyDefinitionPropertiesPtrOutput {
	return i.ToPolicyDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (i PolicyDefinitionPropertiesArgs) ToPolicyDefinitionPropertiesPtrOutputWithContext(ctx context.Context) PolicyDefinitionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionPropertiesOutput).ToPolicyDefinitionPropertiesPtrOutputWithContext(ctx)
}

// PolicyDefinitionPropertiesPtrInput is an input type that accepts PolicyDefinitionPropertiesArgs, PolicyDefinitionPropertiesPtr and PolicyDefinitionPropertiesPtrOutput values.
// You can construct a concrete instance of `PolicyDefinitionPropertiesPtrInput` via:
//
//          PolicyDefinitionPropertiesArgs{...}
//
//  or:
//
//          nil
type PolicyDefinitionPropertiesPtrInput interface {
	pulumi.Input

	ToPolicyDefinitionPropertiesPtrOutput() PolicyDefinitionPropertiesPtrOutput
	ToPolicyDefinitionPropertiesPtrOutputWithContext(context.Context) PolicyDefinitionPropertiesPtrOutput
}

type policyDefinitionPropertiesPtrType PolicyDefinitionPropertiesArgs

func PolicyDefinitionPropertiesPtr(v *PolicyDefinitionPropertiesArgs) PolicyDefinitionPropertiesPtrInput {
	return (*policyDefinitionPropertiesPtrType)(v)
}

func (*policyDefinitionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyDefinitionProperties)(nil)).Elem()
}

func (i *policyDefinitionPropertiesPtrType) ToPolicyDefinitionPropertiesPtrOutput() PolicyDefinitionPropertiesPtrOutput {
	return i.ToPolicyDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (i *policyDefinitionPropertiesPtrType) ToPolicyDefinitionPropertiesPtrOutputWithContext(ctx context.Context) PolicyDefinitionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionPropertiesPtrOutput)
}

// The policy definition properties.
type PolicyDefinitionPropertiesOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionProperties)(nil)).Elem()
}

func (o PolicyDefinitionPropertiesOutput) ToPolicyDefinitionPropertiesOutput() PolicyDefinitionPropertiesOutput {
	return o
}

func (o PolicyDefinitionPropertiesOutput) ToPolicyDefinitionPropertiesOutputWithContext(ctx context.Context) PolicyDefinitionPropertiesOutput {
	return o
}

func (o PolicyDefinitionPropertiesOutput) ToPolicyDefinitionPropertiesPtrOutput() PolicyDefinitionPropertiesPtrOutput {
	return o.ToPolicyDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (o PolicyDefinitionPropertiesOutput) ToPolicyDefinitionPropertiesPtrOutputWithContext(ctx context.Context) PolicyDefinitionPropertiesPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionProperties) *PolicyDefinitionProperties {
		return &v
	}).(PolicyDefinitionPropertiesPtrOutput)
}

// The policy definition description.
func (o PolicyDefinitionPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of the policy definition.
func (o PolicyDefinitionPropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The policy rule.
func (o PolicyDefinitionPropertiesOutput) PolicyRule() pulumi.StringMapOutput {
	return o.ApplyT(func(v PolicyDefinitionProperties) map[string]string { return v.PolicyRule }).(pulumi.StringMapOutput)
}

// The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom.
func (o PolicyDefinitionPropertiesOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionProperties) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

type PolicyDefinitionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyDefinitionProperties)(nil)).Elem()
}

func (o PolicyDefinitionPropertiesPtrOutput) ToPolicyDefinitionPropertiesPtrOutput() PolicyDefinitionPropertiesPtrOutput {
	return o
}

func (o PolicyDefinitionPropertiesPtrOutput) ToPolicyDefinitionPropertiesPtrOutputWithContext(ctx context.Context) PolicyDefinitionPropertiesPtrOutput {
	return o
}

func (o PolicyDefinitionPropertiesPtrOutput) Elem() PolicyDefinitionPropertiesOutput {
	return o.ApplyT(func(v *PolicyDefinitionProperties) PolicyDefinitionProperties { return *v }).(PolicyDefinitionPropertiesOutput)
}

// The policy definition description.
func (o PolicyDefinitionPropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The display name of the policy definition.
func (o PolicyDefinitionPropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The policy rule.
func (o PolicyDefinitionPropertiesPtrOutput) PolicyRule() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PolicyDefinitionProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.PolicyRule
	}).(pulumi.StringMapOutput)
}

// The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom.
func (o PolicyDefinitionPropertiesPtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.PolicyType
	}).(pulumi.StringPtrOutput)
}

// The policy definition properties.
type PolicyDefinitionPropertiesResponse struct {
	// The policy definition description.
	Description *string `pulumi:"description"`
	// The display name of the policy definition.
	DisplayName *string `pulumi:"displayName"`
	// The policy rule.
	PolicyRule map[string]string `pulumi:"policyRule"`
	// The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom.
	PolicyType *string `pulumi:"policyType"`
}

// PolicyDefinitionPropertiesResponseInput is an input type that accepts PolicyDefinitionPropertiesResponseArgs and PolicyDefinitionPropertiesResponseOutput values.
// You can construct a concrete instance of `PolicyDefinitionPropertiesResponseInput` via:
//
//          PolicyDefinitionPropertiesResponseArgs{...}
type PolicyDefinitionPropertiesResponseInput interface {
	pulumi.Input

	ToPolicyDefinitionPropertiesResponseOutput() PolicyDefinitionPropertiesResponseOutput
	ToPolicyDefinitionPropertiesResponseOutputWithContext(context.Context) PolicyDefinitionPropertiesResponseOutput
}

// The policy definition properties.
type PolicyDefinitionPropertiesResponseArgs struct {
	// The policy definition description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The display name of the policy definition.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The policy rule.
	PolicyRule pulumi.StringMapInput `pulumi:"policyRule"`
	// The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom.
	PolicyType pulumi.StringPtrInput `pulumi:"policyType"`
}

func (PolicyDefinitionPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionPropertiesResponse)(nil)).Elem()
}

func (i PolicyDefinitionPropertiesResponseArgs) ToPolicyDefinitionPropertiesResponseOutput() PolicyDefinitionPropertiesResponseOutput {
	return i.ToPolicyDefinitionPropertiesResponseOutputWithContext(context.Background())
}

func (i PolicyDefinitionPropertiesResponseArgs) ToPolicyDefinitionPropertiesResponseOutputWithContext(ctx context.Context) PolicyDefinitionPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionPropertiesResponseOutput)
}

func (i PolicyDefinitionPropertiesResponseArgs) ToPolicyDefinitionPropertiesResponsePtrOutput() PolicyDefinitionPropertiesResponsePtrOutput {
	return i.ToPolicyDefinitionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i PolicyDefinitionPropertiesResponseArgs) ToPolicyDefinitionPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyDefinitionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionPropertiesResponseOutput).ToPolicyDefinitionPropertiesResponsePtrOutputWithContext(ctx)
}

// PolicyDefinitionPropertiesResponsePtrInput is an input type that accepts PolicyDefinitionPropertiesResponseArgs, PolicyDefinitionPropertiesResponsePtr and PolicyDefinitionPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `PolicyDefinitionPropertiesResponsePtrInput` via:
//
//          PolicyDefinitionPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type PolicyDefinitionPropertiesResponsePtrInput interface {
	pulumi.Input

	ToPolicyDefinitionPropertiesResponsePtrOutput() PolicyDefinitionPropertiesResponsePtrOutput
	ToPolicyDefinitionPropertiesResponsePtrOutputWithContext(context.Context) PolicyDefinitionPropertiesResponsePtrOutput
}

type policyDefinitionPropertiesResponsePtrType PolicyDefinitionPropertiesResponseArgs

func PolicyDefinitionPropertiesResponsePtr(v *PolicyDefinitionPropertiesResponseArgs) PolicyDefinitionPropertiesResponsePtrInput {
	return (*policyDefinitionPropertiesResponsePtrType)(v)
}

func (*policyDefinitionPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyDefinitionPropertiesResponse)(nil)).Elem()
}

func (i *policyDefinitionPropertiesResponsePtrType) ToPolicyDefinitionPropertiesResponsePtrOutput() PolicyDefinitionPropertiesResponsePtrOutput {
	return i.ToPolicyDefinitionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *policyDefinitionPropertiesResponsePtrType) ToPolicyDefinitionPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyDefinitionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDefinitionPropertiesResponsePtrOutput)
}

// The policy definition properties.
type PolicyDefinitionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDefinitionPropertiesResponse)(nil)).Elem()
}

func (o PolicyDefinitionPropertiesResponseOutput) ToPolicyDefinitionPropertiesResponseOutput() PolicyDefinitionPropertiesResponseOutput {
	return o
}

func (o PolicyDefinitionPropertiesResponseOutput) ToPolicyDefinitionPropertiesResponseOutputWithContext(ctx context.Context) PolicyDefinitionPropertiesResponseOutput {
	return o
}

func (o PolicyDefinitionPropertiesResponseOutput) ToPolicyDefinitionPropertiesResponsePtrOutput() PolicyDefinitionPropertiesResponsePtrOutput {
	return o.ToPolicyDefinitionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o PolicyDefinitionPropertiesResponseOutput) ToPolicyDefinitionPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyDefinitionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v PolicyDefinitionPropertiesResponse) *PolicyDefinitionPropertiesResponse {
		return &v
	}).(PolicyDefinitionPropertiesResponsePtrOutput)
}

// The policy definition description.
func (o PolicyDefinitionPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of the policy definition.
func (o PolicyDefinitionPropertiesResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionPropertiesResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The policy rule.
func (o PolicyDefinitionPropertiesResponseOutput) PolicyRule() pulumi.StringMapOutput {
	return o.ApplyT(func(v PolicyDefinitionPropertiesResponse) map[string]string { return v.PolicyRule }).(pulumi.StringMapOutput)
}

// The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom.
func (o PolicyDefinitionPropertiesResponseOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDefinitionPropertiesResponse) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

type PolicyDefinitionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PolicyDefinitionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyDefinitionPropertiesResponse)(nil)).Elem()
}

func (o PolicyDefinitionPropertiesResponsePtrOutput) ToPolicyDefinitionPropertiesResponsePtrOutput() PolicyDefinitionPropertiesResponsePtrOutput {
	return o
}

func (o PolicyDefinitionPropertiesResponsePtrOutput) ToPolicyDefinitionPropertiesResponsePtrOutputWithContext(ctx context.Context) PolicyDefinitionPropertiesResponsePtrOutput {
	return o
}

func (o PolicyDefinitionPropertiesResponsePtrOutput) Elem() PolicyDefinitionPropertiesResponseOutput {
	return o.ApplyT(func(v *PolicyDefinitionPropertiesResponse) PolicyDefinitionPropertiesResponse { return *v }).(PolicyDefinitionPropertiesResponseOutput)
}

// The policy definition description.
func (o PolicyDefinitionPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyDefinitionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The display name of the policy definition.
func (o PolicyDefinitionPropertiesResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyDefinitionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The policy rule.
func (o PolicyDefinitionPropertiesResponsePtrOutput) PolicyRule() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PolicyDefinitionPropertiesResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.PolicyRule
	}).(pulumi.StringMapOutput)
}

// The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom.
func (o PolicyDefinitionPropertiesResponsePtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyDefinitionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyType
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(PolicyAssignmentTypeOutput{})
	pulumi.RegisterOutputType(PolicyAssignmentPropertiesOutput{})
	pulumi.RegisterOutputType(PolicyAssignmentPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PolicyAssignmentPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PolicyAssignmentPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionTypeOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionPropertiesOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PolicyDefinitionPropertiesResponsePtrOutput{})
}
