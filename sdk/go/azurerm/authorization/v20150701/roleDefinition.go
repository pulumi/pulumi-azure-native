// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20150701

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Role definition.
type RoleDefinition struct {
	pulumi.CustomResourceState

	// The role definition name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Role definition properties.
	Properties RoleDefinitionPropertiesResponseOutput `pulumi:"properties"`
	// The role definition type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewRoleDefinition registers a new resource with the given unique name, arguments, and options.
func NewRoleDefinition(ctx *pulumi.Context,
	name string, args *RoleDefinitionArgs, opts ...pulumi.ResourceOption) (*RoleDefinition, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.Scope == nil {
		return nil, errors.New("missing required argument 'Scope'")
	}
	if args == nil {
		args = &RoleDefinitionArgs{}
	}
	var resource RoleDefinition
	err := ctx.RegisterResource("azurerm:authorization/v20150701:RoleDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRoleDefinition gets an existing RoleDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRoleDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RoleDefinitionState, opts ...pulumi.ResourceOption) (*RoleDefinition, error) {
	var resource RoleDefinition
	err := ctx.ReadResource("azurerm:authorization/v20150701:RoleDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RoleDefinition resources.
type roleDefinitionState struct {
	// The role definition name.
	Name *string `pulumi:"name"`
	// Role definition properties.
	Properties *RoleDefinitionPropertiesResponse `pulumi:"properties"`
	// The role definition type.
	Type *string `pulumi:"type"`
}

type RoleDefinitionState struct {
	// The role definition name.
	Name pulumi.StringPtrInput
	// Role definition properties.
	Properties RoleDefinitionPropertiesResponsePtrInput
	// The role definition type.
	Type pulumi.StringPtrInput
}

func (RoleDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*roleDefinitionState)(nil)).Elem()
}

type roleDefinitionArgs struct {
	// The ID of the role definition.
	Name string `pulumi:"name"`
	// Role definition properties.
	Properties *RoleDefinitionProperties `pulumi:"properties"`
	// The scope of the role definition.
	Scope string `pulumi:"scope"`
}

// The set of arguments for constructing a RoleDefinition resource.
type RoleDefinitionArgs struct {
	// The ID of the role definition.
	Name pulumi.StringInput
	// Role definition properties.
	Properties RoleDefinitionPropertiesPtrInput
	// The scope of the role definition.
	Scope pulumi.StringInput
}

func (RoleDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*roleDefinitionArgs)(nil)).Elem()
}
