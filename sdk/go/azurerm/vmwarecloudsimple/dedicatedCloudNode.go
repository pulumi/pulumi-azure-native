// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vmwarecloudsimple

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Dedicated cloud node model
type DedicatedCloudNode struct {
	pulumi.CustomResourceState

	// Azure region
	Location pulumi.StringOutput `pulumi:"location"`
	// {dedicatedCloudNodeName}
	Name pulumi.StringOutput `pulumi:"name"`
	// Dedicated Cloud Nodes properties
	Properties DedicatedCloudNodePropertiesResponseOutput `pulumi:"properties"`
	// Dedicated Cloud Nodes SKU
	Sku SkuResponsePtrOutput `pulumi:"sku"`
	// Dedicated Cloud Nodes tags
	Tags TagsResponsePtrOutput `pulumi:"tags"`
	// {resourceProviderNamespace}/{resourceType}
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDedicatedCloudNode registers a new resource with the given unique name, arguments, and options.
func NewDedicatedCloudNode(ctx *pulumi.Context,
	name string, args *DedicatedCloudNodeArgs, opts ...pulumi.ResourceOption) (*DedicatedCloudNode, error) {
	if args == nil || args.Referer == nil {
		return nil, errors.New("missing required argument 'Referer'")
	}
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &DedicatedCloudNodeArgs{}
	}
	var resource DedicatedCloudNode
	err := ctx.RegisterResource("azurerm:vmwarecloudsimple:DedicatedCloudNode", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDedicatedCloudNode gets an existing DedicatedCloudNode resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDedicatedCloudNode(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DedicatedCloudNodeState, opts ...pulumi.ResourceOption) (*DedicatedCloudNode, error) {
	var resource DedicatedCloudNode
	err := ctx.ReadResource("azurerm:vmwarecloudsimple:DedicatedCloudNode", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DedicatedCloudNode resources.
type dedicatedCloudNodeState struct {
	// Azure region
	Location *string `pulumi:"location"`
	// {dedicatedCloudNodeName}
	Name *string `pulumi:"name"`
	// Dedicated Cloud Nodes properties
	Properties *DedicatedCloudNodePropertiesResponse `pulumi:"properties"`
	// Dedicated Cloud Nodes SKU
	Sku *SkuResponse `pulumi:"sku"`
	// Dedicated Cloud Nodes tags
	Tags *TagsResponse `pulumi:"tags"`
	// {resourceProviderNamespace}/{resourceType}
	Type *string `pulumi:"type"`
}

type DedicatedCloudNodeState struct {
	// Azure region
	Location pulumi.StringPtrInput
	// {dedicatedCloudNodeName}
	Name pulumi.StringPtrInput
	// Dedicated Cloud Nodes properties
	Properties DedicatedCloudNodePropertiesResponsePtrInput
	// Dedicated Cloud Nodes SKU
	Sku SkuResponsePtrInput
	// Dedicated Cloud Nodes tags
	Tags TagsResponsePtrInput
	// {resourceProviderNamespace}/{resourceType}
	Type pulumi.StringPtrInput
}

func (DedicatedCloudNodeState) ElementType() reflect.Type {
	return reflect.TypeOf((*dedicatedCloudNodeState)(nil)).Elem()
}

type dedicatedCloudNodeArgs struct {
	// referer url
	Referer string `pulumi:"Referer"`
	// Azure region
	Location string `pulumi:"location"`
	// dedicated cloud node name
	Name string `pulumi:"name"`
	// Dedicated Cloud Nodes properties
	Properties *DedicatedCloudNodeProperties `pulumi:"properties"`
	// The name of the resource group
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Dedicated Cloud Nodes SKU
	Sku *Sku `pulumi:"sku"`
	// Dedicated Cloud Nodes tags
	Tags *Tags `pulumi:"tags"`
}

// The set of arguments for constructing a DedicatedCloudNode resource.
type DedicatedCloudNodeArgs struct {
	// referer url
	Referer pulumi.StringInput
	// Azure region
	Location pulumi.StringInput
	// dedicated cloud node name
	Name pulumi.StringInput
	// Dedicated Cloud Nodes properties
	Properties DedicatedCloudNodePropertiesPtrInput
	// The name of the resource group
	ResourceGroupName pulumi.StringInput
	// Dedicated Cloud Nodes SKU
	Sku SkuPtrInput
	// Dedicated Cloud Nodes tags
	Tags TagsPtrInput
}

func (DedicatedCloudNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dedicatedCloudNodeArgs)(nil)).Elem()
}
