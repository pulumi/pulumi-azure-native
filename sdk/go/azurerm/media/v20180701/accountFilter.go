// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180701

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An Account Filter.
type AccountFilter struct {
	pulumi.CustomResourceState

	// The name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Media Filter properties.
	Properties MediaFilterPropertiesResponseOutput `pulumi:"properties"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAccountFilter registers a new resource with the given unique name, arguments, and options.
func NewAccountFilter(ctx *pulumi.Context,
	name string, args *AccountFilterArgs, opts ...pulumi.ResourceOption) (*AccountFilter, error) {
	if args == nil || args.AccountName == nil {
		return nil, errors.New("missing required argument 'AccountName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &AccountFilterArgs{}
	}
	var resource AccountFilter
	err := ctx.RegisterResource("azurerm:media/v20180701:AccountFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountFilter gets an existing AccountFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountFilterState, opts ...pulumi.ResourceOption) (*AccountFilter, error) {
	var resource AccountFilter
	err := ctx.ReadResource("azurerm:media/v20180701:AccountFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountFilter resources.
type accountFilterState struct {
	// The name of the resource.
	Name *string `pulumi:"name"`
	// The Media Filter properties.
	Properties *MediaFilterPropertiesResponse `pulumi:"properties"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

type AccountFilterState struct {
	// The name of the resource.
	Name pulumi.StringPtrInput
	// The Media Filter properties.
	Properties MediaFilterPropertiesResponsePtrInput
	// The type of the resource.
	Type pulumi.StringPtrInput
}

func (AccountFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountFilterState)(nil)).Elem()
}

type accountFilterArgs struct {
	// The Media Services account name.
	AccountName string `pulumi:"accountName"`
	// The first quality.
	FirstQuality *FirstQuality `pulumi:"firstQuality"`
	// The Account Filter name
	Name string `pulumi:"name"`
	// The presentation time range.
	PresentationTimeRange *PresentationTimeRange `pulumi:"presentationTimeRange"`
	// The name of the resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The tracks selection conditions.
	Tracks []FilterTrackSelection `pulumi:"tracks"`
}

// The set of arguments for constructing a AccountFilter resource.
type AccountFilterArgs struct {
	// The Media Services account name.
	AccountName pulumi.StringInput
	// The first quality.
	FirstQuality FirstQualityPtrInput
	// The Account Filter name
	Name pulumi.StringInput
	// The presentation time range.
	PresentationTimeRange PresentationTimeRangePtrInput
	// The name of the resource group within the Azure subscription.
	ResourceGroupName pulumi.StringInput
	// The tracks selection conditions.
	Tracks FilterTrackSelectionArrayInput
}

func (AccountFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountFilterArgs)(nil)).Elem()
}
