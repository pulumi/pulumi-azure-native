// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package media

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The StreamingEndpoint.
type MediaserviceStreamingEndpoint struct {
	pulumi.CustomResourceState

	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The StreamingEndpoint properties.
	Properties StreamingEndpointPropertiesResponseOutput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewMediaserviceStreamingEndpoint registers a new resource with the given unique name, arguments, and options.
func NewMediaserviceStreamingEndpoint(ctx *pulumi.Context,
	name string, args *MediaserviceStreamingEndpointArgs, opts ...pulumi.ResourceOption) (*MediaserviceStreamingEndpoint, error) {
	if args == nil || args.AccountName == nil {
		return nil, errors.New("missing required argument 'AccountName'")
	}
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &MediaserviceStreamingEndpointArgs{}
	}
	var resource MediaserviceStreamingEndpoint
	err := ctx.RegisterResource("azurerm:media:MediaserviceStreamingEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMediaserviceStreamingEndpoint gets an existing MediaserviceStreamingEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMediaserviceStreamingEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MediaserviceStreamingEndpointState, opts ...pulumi.ResourceOption) (*MediaserviceStreamingEndpoint, error) {
	var resource MediaserviceStreamingEndpoint
	err := ctx.ReadResource("azurerm:media:MediaserviceStreamingEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MediaserviceStreamingEndpoint resources.
type mediaserviceStreamingEndpointState struct {
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource
	Name *string `pulumi:"name"`
	// The StreamingEndpoint properties.
	Properties *StreamingEndpointPropertiesResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type *string `pulumi:"type"`
}

type MediaserviceStreamingEndpointState struct {
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource
	Name pulumi.StringPtrInput
	// The StreamingEndpoint properties.
	Properties StreamingEndpointPropertiesResponsePtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringPtrInput
}

func (MediaserviceStreamingEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*mediaserviceStreamingEndpointState)(nil)).Elem()
}

type mediaserviceStreamingEndpointArgs struct {
	// The Media Services account name.
	AccountName string `pulumi:"accountName"`
	// The flag indicates if the resource should be automatically started on creation.
	AutoStart *bool `pulumi:"autoStart"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the StreamingEndpoint.
	Name string `pulumi:"name"`
	// The StreamingEndpoint properties.
	Properties *StreamingEndpointProperties `pulumi:"properties"`
	// The name of the resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a MediaserviceStreamingEndpoint resource.
type MediaserviceStreamingEndpointArgs struct {
	// The Media Services account name.
	AccountName pulumi.StringInput
	// The flag indicates if the resource should be automatically started on creation.
	AutoStart pulumi.BoolPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringInput
	// The name of the StreamingEndpoint.
	Name pulumi.StringInput
	// The StreamingEndpoint properties.
	Properties StreamingEndpointPropertiesPtrInput
	// The name of the resource group within the Azure subscription.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (MediaserviceStreamingEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mediaserviceStreamingEndpointArgs)(nil)).Elem()
}
