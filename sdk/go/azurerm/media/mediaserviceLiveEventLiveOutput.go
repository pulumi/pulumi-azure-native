// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package media

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The Live Output.
type MediaserviceLiveEventLiveOutput struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The Live Output properties.
	Properties LiveOutputPropertiesResponseOutput `pulumi:"properties"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewMediaserviceLiveEventLiveOutput registers a new resource with the given unique name, arguments, and options.
func NewMediaserviceLiveEventLiveOutput(ctx *pulumi.Context,
	name string, args *MediaserviceLiveEventLiveOutputArgs, opts ...pulumi.ResourceOption) (*MediaserviceLiveEventLiveOutput, error) {
	if args == nil || args.AccountName == nil {
		return nil, errors.New("missing required argument 'AccountName'")
	}
	if args == nil || args.LiveEventName == nil {
		return nil, errors.New("missing required argument 'LiveEventName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &MediaserviceLiveEventLiveOutputArgs{}
	}
	var resource MediaserviceLiveEventLiveOutput
	err := ctx.RegisterResource("azurerm:media:MediaserviceLiveEventLiveOutput", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMediaserviceLiveEventLiveOutput gets an existing MediaserviceLiveEventLiveOutput resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMediaserviceLiveEventLiveOutput(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MediaserviceLiveEventLiveOutputState, opts ...pulumi.ResourceOption) (*MediaserviceLiveEventLiveOutput, error) {
	var resource MediaserviceLiveEventLiveOutput
	err := ctx.ReadResource("azurerm:media:MediaserviceLiveEventLiveOutput", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MediaserviceLiveEventLiveOutput resources.
type mediaserviceLiveEventLiveOutputState struct {
	// The name of the resource
	Name *string `pulumi:"name"`
	// The Live Output properties.
	Properties *LiveOutputPropertiesResponse `pulumi:"properties"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type *string `pulumi:"type"`
}

type MediaserviceLiveEventLiveOutputState struct {
	// The name of the resource
	Name pulumi.StringPtrInput
	// The Live Output properties.
	Properties LiveOutputPropertiesResponsePtrInput
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringPtrInput
}

func (MediaserviceLiveEventLiveOutputState) ElementType() reflect.Type {
	return reflect.TypeOf((*mediaserviceLiveEventLiveOutputState)(nil)).Elem()
}

type mediaserviceLiveEventLiveOutputArgs struct {
	// The Media Services account name.
	AccountName string `pulumi:"accountName"`
	// The name of the Live Event.
	LiveEventName string `pulumi:"liveEventName"`
	// The name of the Live Output.
	Name string `pulumi:"name"`
	// The Live Output properties.
	Properties *LiveOutputProperties `pulumi:"properties"`
	// The name of the resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a MediaserviceLiveEventLiveOutput resource.
type MediaserviceLiveEventLiveOutputArgs struct {
	// The Media Services account name.
	AccountName pulumi.StringInput
	// The name of the Live Event.
	LiveEventName pulumi.StringInput
	// The name of the Live Output.
	Name pulumi.StringInput
	// The Live Output properties.
	Properties LiveOutputPropertiesPtrInput
	// The name of the resource group within the Azure subscription.
	ResourceGroupName pulumi.StringInput
}

func (MediaserviceLiveEventLiveOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mediaserviceLiveEventLiveOutputArgs)(nil)).Elem()
}
