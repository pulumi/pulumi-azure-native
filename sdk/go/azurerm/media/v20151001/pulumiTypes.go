// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20151001

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The properties for a Media Services REST API endpoint.
type ApiEndpoint struct {
	// The Media Services REST endpoint.
	Endpoint *string `pulumi:"endpoint"`
	// The version of Media Services REST API.
	MajorVersion *string `pulumi:"majorVersion"`
}

// ApiEndpointInput is an input type that accepts ApiEndpointArgs and ApiEndpointOutput values.
// You can construct a concrete instance of `ApiEndpointInput` via:
//
//          ApiEndpointArgs{...}
type ApiEndpointInput interface {
	pulumi.Input

	ToApiEndpointOutput() ApiEndpointOutput
	ToApiEndpointOutputWithContext(context.Context) ApiEndpointOutput
}

// The properties for a Media Services REST API endpoint.
type ApiEndpointArgs struct {
	// The Media Services REST endpoint.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// The version of Media Services REST API.
	MajorVersion pulumi.StringPtrInput `pulumi:"majorVersion"`
}

func (ApiEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEndpoint)(nil)).Elem()
}

func (i ApiEndpointArgs) ToApiEndpointOutput() ApiEndpointOutput {
	return i.ToApiEndpointOutputWithContext(context.Background())
}

func (i ApiEndpointArgs) ToApiEndpointOutputWithContext(ctx context.Context) ApiEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEndpointOutput)
}

// The properties for a Media Services REST API endpoint.
type ApiEndpointOutput struct{ *pulumi.OutputState }

func (ApiEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEndpoint)(nil)).Elem()
}

func (o ApiEndpointOutput) ToApiEndpointOutput() ApiEndpointOutput {
	return o
}

func (o ApiEndpointOutput) ToApiEndpointOutputWithContext(ctx context.Context) ApiEndpointOutput {
	return o
}

// The Media Services REST endpoint.
func (o ApiEndpointOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiEndpoint) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The version of Media Services REST API.
func (o ApiEndpointOutput) MajorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiEndpoint) *string { return v.MajorVersion }).(pulumi.StringPtrOutput)
}

// The properties for a Media Services REST API endpoint.
type ApiEndpointResponse struct {
	// The Media Services REST endpoint.
	Endpoint *string `pulumi:"endpoint"`
	// The version of Media Services REST API.
	MajorVersion *string `pulumi:"majorVersion"`
}

// ApiEndpointResponseInput is an input type that accepts ApiEndpointResponseArgs and ApiEndpointResponseOutput values.
// You can construct a concrete instance of `ApiEndpointResponseInput` via:
//
//          ApiEndpointResponseArgs{...}
type ApiEndpointResponseInput interface {
	pulumi.Input

	ToApiEndpointResponseOutput() ApiEndpointResponseOutput
	ToApiEndpointResponseOutputWithContext(context.Context) ApiEndpointResponseOutput
}

// The properties for a Media Services REST API endpoint.
type ApiEndpointResponseArgs struct {
	// The Media Services REST endpoint.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// The version of Media Services REST API.
	MajorVersion pulumi.StringPtrInput `pulumi:"majorVersion"`
}

func (ApiEndpointResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEndpointResponse)(nil)).Elem()
}

func (i ApiEndpointResponseArgs) ToApiEndpointResponseOutput() ApiEndpointResponseOutput {
	return i.ToApiEndpointResponseOutputWithContext(context.Background())
}

func (i ApiEndpointResponseArgs) ToApiEndpointResponseOutputWithContext(ctx context.Context) ApiEndpointResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEndpointResponseOutput)
}

// ApiEndpointResponseArrayInput is an input type that accepts ApiEndpointResponseArray and ApiEndpointResponseArrayOutput values.
// You can construct a concrete instance of `ApiEndpointResponseArrayInput` via:
//
//          ApiEndpointResponseArray{ ApiEndpointResponseArgs{...} }
type ApiEndpointResponseArrayInput interface {
	pulumi.Input

	ToApiEndpointResponseArrayOutput() ApiEndpointResponseArrayOutput
	ToApiEndpointResponseArrayOutputWithContext(context.Context) ApiEndpointResponseArrayOutput
}

type ApiEndpointResponseArray []ApiEndpointResponseInput

func (ApiEndpointResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiEndpointResponse)(nil)).Elem()
}

func (i ApiEndpointResponseArray) ToApiEndpointResponseArrayOutput() ApiEndpointResponseArrayOutput {
	return i.ToApiEndpointResponseArrayOutputWithContext(context.Background())
}

func (i ApiEndpointResponseArray) ToApiEndpointResponseArrayOutputWithContext(ctx context.Context) ApiEndpointResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEndpointResponseArrayOutput)
}

// The properties for a Media Services REST API endpoint.
type ApiEndpointResponseOutput struct{ *pulumi.OutputState }

func (ApiEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEndpointResponse)(nil)).Elem()
}

func (o ApiEndpointResponseOutput) ToApiEndpointResponseOutput() ApiEndpointResponseOutput {
	return o
}

func (o ApiEndpointResponseOutput) ToApiEndpointResponseOutputWithContext(ctx context.Context) ApiEndpointResponseOutput {
	return o
}

// The Media Services REST endpoint.
func (o ApiEndpointResponseOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiEndpointResponse) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The version of Media Services REST API.
func (o ApiEndpointResponseOutput) MajorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiEndpointResponse) *string { return v.MajorVersion }).(pulumi.StringPtrOutput)
}

type ApiEndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (ApiEndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiEndpointResponse)(nil)).Elem()
}

func (o ApiEndpointResponseArrayOutput) ToApiEndpointResponseArrayOutput() ApiEndpointResponseArrayOutput {
	return o
}

func (o ApiEndpointResponseArrayOutput) ToApiEndpointResponseArrayOutputWithContext(ctx context.Context) ApiEndpointResponseArrayOutput {
	return o
}

func (o ApiEndpointResponseArrayOutput) Index(i pulumi.IntInput) ApiEndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiEndpointResponse {
		return vs[0].([]ApiEndpointResponse)[vs[1].(int)]
	}).(ApiEndpointResponseOutput)
}

// The properties of a Media Service resource.
type MediaServiceType struct {
	// The geographic location of the resource. This must be one of the supported and registered Azure Geo Regions (for example, West US, East US, Southeast Asia, and so forth).
	Location *string `pulumi:"location"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The additional properties of a Media Service resource.
	Properties MediaServicePropertiesResponse `pulumi:"properties"`
	// Tags to help categorize the resource in the Azure portal.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource
	Type string `pulumi:"type"`
}

// MediaServiceTypeInput is an input type that accepts MediaServiceTypeArgs and MediaServiceTypeOutput values.
// You can construct a concrete instance of `MediaServiceTypeInput` via:
//
//          MediaServiceTypeArgs{...}
type MediaServiceTypeInput interface {
	pulumi.Input

	ToMediaServiceTypeOutput() MediaServiceTypeOutput
	ToMediaServiceTypeOutputWithContext(context.Context) MediaServiceTypeOutput
}

// The properties of a Media Service resource.
type MediaServiceTypeArgs struct {
	// The geographic location of the resource. This must be one of the supported and registered Azure Geo Regions (for example, West US, East US, Southeast Asia, and so forth).
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The additional properties of a Media Service resource.
	Properties MediaServicePropertiesResponseInput `pulumi:"properties"`
	// Tags to help categorize the resource in the Azure portal.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the resource
	Type pulumi.StringInput `pulumi:"type"`
}

func (MediaServiceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaServiceType)(nil)).Elem()
}

func (i MediaServiceTypeArgs) ToMediaServiceTypeOutput() MediaServiceTypeOutput {
	return i.ToMediaServiceTypeOutputWithContext(context.Background())
}

func (i MediaServiceTypeArgs) ToMediaServiceTypeOutputWithContext(ctx context.Context) MediaServiceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaServiceTypeOutput)
}

// The properties of a Media Service resource.
type MediaServiceTypeOutput struct{ *pulumi.OutputState }

func (MediaServiceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaServiceType)(nil)).Elem()
}

func (o MediaServiceTypeOutput) ToMediaServiceTypeOutput() MediaServiceTypeOutput {
	return o
}

func (o MediaServiceTypeOutput) ToMediaServiceTypeOutputWithContext(ctx context.Context) MediaServiceTypeOutput {
	return o
}

// The geographic location of the resource. This must be one of the supported and registered Azure Geo Regions (for example, West US, East US, Southeast Asia, and so forth).
func (o MediaServiceTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MediaServiceType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o MediaServiceTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MediaServiceType) string { return v.Name }).(pulumi.StringOutput)
}

// The additional properties of a Media Service resource.
func (o MediaServiceTypeOutput) Properties() MediaServicePropertiesResponseOutput {
	return o.ApplyT(func(v MediaServiceType) MediaServicePropertiesResponse { return v.Properties }).(MediaServicePropertiesResponseOutput)
}

// Tags to help categorize the resource in the Azure portal.
func (o MediaServiceTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v MediaServiceType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource
func (o MediaServiceTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MediaServiceType) string { return v.Type }).(pulumi.StringOutput)
}

// The additional properties of a Media Service resource.
type MediaServiceProperties struct {
	// The storage accounts for this resource.
	StorageAccounts []StorageAccount `pulumi:"storageAccounts"`
}

// MediaServicePropertiesInput is an input type that accepts MediaServicePropertiesArgs and MediaServicePropertiesOutput values.
// You can construct a concrete instance of `MediaServicePropertiesInput` via:
//
//          MediaServicePropertiesArgs{...}
type MediaServicePropertiesInput interface {
	pulumi.Input

	ToMediaServicePropertiesOutput() MediaServicePropertiesOutput
	ToMediaServicePropertiesOutputWithContext(context.Context) MediaServicePropertiesOutput
}

// The additional properties of a Media Service resource.
type MediaServicePropertiesArgs struct {
	// The storage accounts for this resource.
	StorageAccounts StorageAccountArrayInput `pulumi:"storageAccounts"`
}

func (MediaServicePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaServiceProperties)(nil)).Elem()
}

func (i MediaServicePropertiesArgs) ToMediaServicePropertiesOutput() MediaServicePropertiesOutput {
	return i.ToMediaServicePropertiesOutputWithContext(context.Background())
}

func (i MediaServicePropertiesArgs) ToMediaServicePropertiesOutputWithContext(ctx context.Context) MediaServicePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaServicePropertiesOutput)
}

func (i MediaServicePropertiesArgs) ToMediaServicePropertiesPtrOutput() MediaServicePropertiesPtrOutput {
	return i.ToMediaServicePropertiesPtrOutputWithContext(context.Background())
}

func (i MediaServicePropertiesArgs) ToMediaServicePropertiesPtrOutputWithContext(ctx context.Context) MediaServicePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaServicePropertiesOutput).ToMediaServicePropertiesPtrOutputWithContext(ctx)
}

// MediaServicePropertiesPtrInput is an input type that accepts MediaServicePropertiesArgs, MediaServicePropertiesPtr and MediaServicePropertiesPtrOutput values.
// You can construct a concrete instance of `MediaServicePropertiesPtrInput` via:
//
//          MediaServicePropertiesArgs{...}
//
//  or:
//
//          nil
type MediaServicePropertiesPtrInput interface {
	pulumi.Input

	ToMediaServicePropertiesPtrOutput() MediaServicePropertiesPtrOutput
	ToMediaServicePropertiesPtrOutputWithContext(context.Context) MediaServicePropertiesPtrOutput
}

type mediaServicePropertiesPtrType MediaServicePropertiesArgs

func MediaServicePropertiesPtr(v *MediaServicePropertiesArgs) MediaServicePropertiesPtrInput {
	return (*mediaServicePropertiesPtrType)(v)
}

func (*mediaServicePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MediaServiceProperties)(nil)).Elem()
}

func (i *mediaServicePropertiesPtrType) ToMediaServicePropertiesPtrOutput() MediaServicePropertiesPtrOutput {
	return i.ToMediaServicePropertiesPtrOutputWithContext(context.Background())
}

func (i *mediaServicePropertiesPtrType) ToMediaServicePropertiesPtrOutputWithContext(ctx context.Context) MediaServicePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaServicePropertiesPtrOutput)
}

// The additional properties of a Media Service resource.
type MediaServicePropertiesOutput struct{ *pulumi.OutputState }

func (MediaServicePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaServiceProperties)(nil)).Elem()
}

func (o MediaServicePropertiesOutput) ToMediaServicePropertiesOutput() MediaServicePropertiesOutput {
	return o
}

func (o MediaServicePropertiesOutput) ToMediaServicePropertiesOutputWithContext(ctx context.Context) MediaServicePropertiesOutput {
	return o
}

func (o MediaServicePropertiesOutput) ToMediaServicePropertiesPtrOutput() MediaServicePropertiesPtrOutput {
	return o.ToMediaServicePropertiesPtrOutputWithContext(context.Background())
}

func (o MediaServicePropertiesOutput) ToMediaServicePropertiesPtrOutputWithContext(ctx context.Context) MediaServicePropertiesPtrOutput {
	return o.ApplyT(func(v MediaServiceProperties) *MediaServiceProperties {
		return &v
	}).(MediaServicePropertiesPtrOutput)
}

// The storage accounts for this resource.
func (o MediaServicePropertiesOutput) StorageAccounts() StorageAccountArrayOutput {
	return o.ApplyT(func(v MediaServiceProperties) []StorageAccount { return v.StorageAccounts }).(StorageAccountArrayOutput)
}

type MediaServicePropertiesPtrOutput struct{ *pulumi.OutputState }

func (MediaServicePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MediaServiceProperties)(nil)).Elem()
}

func (o MediaServicePropertiesPtrOutput) ToMediaServicePropertiesPtrOutput() MediaServicePropertiesPtrOutput {
	return o
}

func (o MediaServicePropertiesPtrOutput) ToMediaServicePropertiesPtrOutputWithContext(ctx context.Context) MediaServicePropertiesPtrOutput {
	return o
}

func (o MediaServicePropertiesPtrOutput) Elem() MediaServicePropertiesOutput {
	return o.ApplyT(func(v *MediaServiceProperties) MediaServiceProperties { return *v }).(MediaServicePropertiesOutput)
}

// The storage accounts for this resource.
func (o MediaServicePropertiesPtrOutput) StorageAccounts() StorageAccountArrayOutput {
	return o.ApplyT(func(v *MediaServiceProperties) []StorageAccount {
		if v == nil {
			return nil
		}
		return v.StorageAccounts
	}).(StorageAccountArrayOutput)
}

// The additional properties of a Media Service resource.
type MediaServicePropertiesResponse struct {
	// Read-only property that lists the Media Services REST API endpoints for this resource. If supplied on a PUT or PATCH, the value will be ignored.
	ApiEndpoints []ApiEndpointResponse `pulumi:"apiEndpoints"`
	// The storage accounts for this resource.
	StorageAccounts []StorageAccountResponse `pulumi:"storageAccounts"`
}

// MediaServicePropertiesResponseInput is an input type that accepts MediaServicePropertiesResponseArgs and MediaServicePropertiesResponseOutput values.
// You can construct a concrete instance of `MediaServicePropertiesResponseInput` via:
//
//          MediaServicePropertiesResponseArgs{...}
type MediaServicePropertiesResponseInput interface {
	pulumi.Input

	ToMediaServicePropertiesResponseOutput() MediaServicePropertiesResponseOutput
	ToMediaServicePropertiesResponseOutputWithContext(context.Context) MediaServicePropertiesResponseOutput
}

// The additional properties of a Media Service resource.
type MediaServicePropertiesResponseArgs struct {
	// Read-only property that lists the Media Services REST API endpoints for this resource. If supplied on a PUT or PATCH, the value will be ignored.
	ApiEndpoints ApiEndpointResponseArrayInput `pulumi:"apiEndpoints"`
	// The storage accounts for this resource.
	StorageAccounts StorageAccountResponseArrayInput `pulumi:"storageAccounts"`
}

func (MediaServicePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaServicePropertiesResponse)(nil)).Elem()
}

func (i MediaServicePropertiesResponseArgs) ToMediaServicePropertiesResponseOutput() MediaServicePropertiesResponseOutput {
	return i.ToMediaServicePropertiesResponseOutputWithContext(context.Background())
}

func (i MediaServicePropertiesResponseArgs) ToMediaServicePropertiesResponseOutputWithContext(ctx context.Context) MediaServicePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaServicePropertiesResponseOutput)
}

func (i MediaServicePropertiesResponseArgs) ToMediaServicePropertiesResponsePtrOutput() MediaServicePropertiesResponsePtrOutput {
	return i.ToMediaServicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i MediaServicePropertiesResponseArgs) ToMediaServicePropertiesResponsePtrOutputWithContext(ctx context.Context) MediaServicePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaServicePropertiesResponseOutput).ToMediaServicePropertiesResponsePtrOutputWithContext(ctx)
}

// MediaServicePropertiesResponsePtrInput is an input type that accepts MediaServicePropertiesResponseArgs, MediaServicePropertiesResponsePtr and MediaServicePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `MediaServicePropertiesResponsePtrInput` via:
//
//          MediaServicePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type MediaServicePropertiesResponsePtrInput interface {
	pulumi.Input

	ToMediaServicePropertiesResponsePtrOutput() MediaServicePropertiesResponsePtrOutput
	ToMediaServicePropertiesResponsePtrOutputWithContext(context.Context) MediaServicePropertiesResponsePtrOutput
}

type mediaServicePropertiesResponsePtrType MediaServicePropertiesResponseArgs

func MediaServicePropertiesResponsePtr(v *MediaServicePropertiesResponseArgs) MediaServicePropertiesResponsePtrInput {
	return (*mediaServicePropertiesResponsePtrType)(v)
}

func (*mediaServicePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MediaServicePropertiesResponse)(nil)).Elem()
}

func (i *mediaServicePropertiesResponsePtrType) ToMediaServicePropertiesResponsePtrOutput() MediaServicePropertiesResponsePtrOutput {
	return i.ToMediaServicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *mediaServicePropertiesResponsePtrType) ToMediaServicePropertiesResponsePtrOutputWithContext(ctx context.Context) MediaServicePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaServicePropertiesResponsePtrOutput)
}

// The additional properties of a Media Service resource.
type MediaServicePropertiesResponseOutput struct{ *pulumi.OutputState }

func (MediaServicePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaServicePropertiesResponse)(nil)).Elem()
}

func (o MediaServicePropertiesResponseOutput) ToMediaServicePropertiesResponseOutput() MediaServicePropertiesResponseOutput {
	return o
}

func (o MediaServicePropertiesResponseOutput) ToMediaServicePropertiesResponseOutputWithContext(ctx context.Context) MediaServicePropertiesResponseOutput {
	return o
}

func (o MediaServicePropertiesResponseOutput) ToMediaServicePropertiesResponsePtrOutput() MediaServicePropertiesResponsePtrOutput {
	return o.ToMediaServicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o MediaServicePropertiesResponseOutput) ToMediaServicePropertiesResponsePtrOutputWithContext(ctx context.Context) MediaServicePropertiesResponsePtrOutput {
	return o.ApplyT(func(v MediaServicePropertiesResponse) *MediaServicePropertiesResponse {
		return &v
	}).(MediaServicePropertiesResponsePtrOutput)
}

// Read-only property that lists the Media Services REST API endpoints for this resource. If supplied on a PUT or PATCH, the value will be ignored.
func (o MediaServicePropertiesResponseOutput) ApiEndpoints() ApiEndpointResponseArrayOutput {
	return o.ApplyT(func(v MediaServicePropertiesResponse) []ApiEndpointResponse { return v.ApiEndpoints }).(ApiEndpointResponseArrayOutput)
}

// The storage accounts for this resource.
func (o MediaServicePropertiesResponseOutput) StorageAccounts() StorageAccountResponseArrayOutput {
	return o.ApplyT(func(v MediaServicePropertiesResponse) []StorageAccountResponse { return v.StorageAccounts }).(StorageAccountResponseArrayOutput)
}

type MediaServicePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (MediaServicePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MediaServicePropertiesResponse)(nil)).Elem()
}

func (o MediaServicePropertiesResponsePtrOutput) ToMediaServicePropertiesResponsePtrOutput() MediaServicePropertiesResponsePtrOutput {
	return o
}

func (o MediaServicePropertiesResponsePtrOutput) ToMediaServicePropertiesResponsePtrOutputWithContext(ctx context.Context) MediaServicePropertiesResponsePtrOutput {
	return o
}

func (o MediaServicePropertiesResponsePtrOutput) Elem() MediaServicePropertiesResponseOutput {
	return o.ApplyT(func(v *MediaServicePropertiesResponse) MediaServicePropertiesResponse { return *v }).(MediaServicePropertiesResponseOutput)
}

// Read-only property that lists the Media Services REST API endpoints for this resource. If supplied on a PUT or PATCH, the value will be ignored.
func (o MediaServicePropertiesResponsePtrOutput) ApiEndpoints() ApiEndpointResponseArrayOutput {
	return o.ApplyT(func(v *MediaServicePropertiesResponse) []ApiEndpointResponse {
		if v == nil {
			return nil
		}
		return v.ApiEndpoints
	}).(ApiEndpointResponseArrayOutput)
}

// The storage accounts for this resource.
func (o MediaServicePropertiesResponsePtrOutput) StorageAccounts() StorageAccountResponseArrayOutput {
	return o.ApplyT(func(v *MediaServicePropertiesResponse) []StorageAccountResponse {
		if v == nil {
			return nil
		}
		return v.StorageAccounts
	}).(StorageAccountResponseArrayOutput)
}

// The properties of a storage account associated with this resource.
type StorageAccount struct {
	// The id of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts (isPrimary false).
	Id string `pulumi:"id"`
	// Is this storage account resource the primary storage account for the Media Service resource. Blob only storage must set this to false.
	IsPrimary bool `pulumi:"isPrimary"`
}

// StorageAccountInput is an input type that accepts StorageAccountArgs and StorageAccountOutput values.
// You can construct a concrete instance of `StorageAccountInput` via:
//
//          StorageAccountArgs{...}
type StorageAccountInput interface {
	pulumi.Input

	ToStorageAccountOutput() StorageAccountOutput
	ToStorageAccountOutputWithContext(context.Context) StorageAccountOutput
}

// The properties of a storage account associated with this resource.
type StorageAccountArgs struct {
	// The id of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts (isPrimary false).
	Id pulumi.StringInput `pulumi:"id"`
	// Is this storage account resource the primary storage account for the Media Service resource. Blob only storage must set this to false.
	IsPrimary pulumi.BoolInput `pulumi:"isPrimary"`
}

func (StorageAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccount)(nil)).Elem()
}

func (i StorageAccountArgs) ToStorageAccountOutput() StorageAccountOutput {
	return i.ToStorageAccountOutputWithContext(context.Background())
}

func (i StorageAccountArgs) ToStorageAccountOutputWithContext(ctx context.Context) StorageAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountOutput)
}

// StorageAccountArrayInput is an input type that accepts StorageAccountArray and StorageAccountArrayOutput values.
// You can construct a concrete instance of `StorageAccountArrayInput` via:
//
//          StorageAccountArray{ StorageAccountArgs{...} }
type StorageAccountArrayInput interface {
	pulumi.Input

	ToStorageAccountArrayOutput() StorageAccountArrayOutput
	ToStorageAccountArrayOutputWithContext(context.Context) StorageAccountArrayOutput
}

type StorageAccountArray []StorageAccountInput

func (StorageAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccount)(nil)).Elem()
}

func (i StorageAccountArray) ToStorageAccountArrayOutput() StorageAccountArrayOutput {
	return i.ToStorageAccountArrayOutputWithContext(context.Background())
}

func (i StorageAccountArray) ToStorageAccountArrayOutputWithContext(ctx context.Context) StorageAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountArrayOutput)
}

// The properties of a storage account associated with this resource.
type StorageAccountOutput struct{ *pulumi.OutputState }

func (StorageAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccount)(nil)).Elem()
}

func (o StorageAccountOutput) ToStorageAccountOutput() StorageAccountOutput {
	return o
}

func (o StorageAccountOutput) ToStorageAccountOutputWithContext(ctx context.Context) StorageAccountOutput {
	return o
}

// The id of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts (isPrimary false).
func (o StorageAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccount) string { return v.Id }).(pulumi.StringOutput)
}

// Is this storage account resource the primary storage account for the Media Service resource. Blob only storage must set this to false.
func (o StorageAccountOutput) IsPrimary() pulumi.BoolOutput {
	return o.ApplyT(func(v StorageAccount) bool { return v.IsPrimary }).(pulumi.BoolOutput)
}

type StorageAccountArrayOutput struct{ *pulumi.OutputState }

func (StorageAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccount)(nil)).Elem()
}

func (o StorageAccountArrayOutput) ToStorageAccountArrayOutput() StorageAccountArrayOutput {
	return o
}

func (o StorageAccountArrayOutput) ToStorageAccountArrayOutputWithContext(ctx context.Context) StorageAccountArrayOutput {
	return o
}

func (o StorageAccountArrayOutput) Index(i pulumi.IntInput) StorageAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageAccount {
		return vs[0].([]StorageAccount)[vs[1].(int)]
	}).(StorageAccountOutput)
}

// The properties of a storage account associated with this resource.
type StorageAccountResponse struct {
	// The id of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts (isPrimary false).
	Id string `pulumi:"id"`
	// Is this storage account resource the primary storage account for the Media Service resource. Blob only storage must set this to false.
	IsPrimary bool `pulumi:"isPrimary"`
}

// StorageAccountResponseInput is an input type that accepts StorageAccountResponseArgs and StorageAccountResponseOutput values.
// You can construct a concrete instance of `StorageAccountResponseInput` via:
//
//          StorageAccountResponseArgs{...}
type StorageAccountResponseInput interface {
	pulumi.Input

	ToStorageAccountResponseOutput() StorageAccountResponseOutput
	ToStorageAccountResponseOutputWithContext(context.Context) StorageAccountResponseOutput
}

// The properties of a storage account associated with this resource.
type StorageAccountResponseArgs struct {
	// The id of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts (isPrimary false).
	Id pulumi.StringInput `pulumi:"id"`
	// Is this storage account resource the primary storage account for the Media Service resource. Blob only storage must set this to false.
	IsPrimary pulumi.BoolInput `pulumi:"isPrimary"`
}

func (StorageAccountResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountResponse)(nil)).Elem()
}

func (i StorageAccountResponseArgs) ToStorageAccountResponseOutput() StorageAccountResponseOutput {
	return i.ToStorageAccountResponseOutputWithContext(context.Background())
}

func (i StorageAccountResponseArgs) ToStorageAccountResponseOutputWithContext(ctx context.Context) StorageAccountResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountResponseOutput)
}

// StorageAccountResponseArrayInput is an input type that accepts StorageAccountResponseArray and StorageAccountResponseArrayOutput values.
// You can construct a concrete instance of `StorageAccountResponseArrayInput` via:
//
//          StorageAccountResponseArray{ StorageAccountResponseArgs{...} }
type StorageAccountResponseArrayInput interface {
	pulumi.Input

	ToStorageAccountResponseArrayOutput() StorageAccountResponseArrayOutput
	ToStorageAccountResponseArrayOutputWithContext(context.Context) StorageAccountResponseArrayOutput
}

type StorageAccountResponseArray []StorageAccountResponseInput

func (StorageAccountResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccountResponse)(nil)).Elem()
}

func (i StorageAccountResponseArray) ToStorageAccountResponseArrayOutput() StorageAccountResponseArrayOutput {
	return i.ToStorageAccountResponseArrayOutputWithContext(context.Background())
}

func (i StorageAccountResponseArray) ToStorageAccountResponseArrayOutputWithContext(ctx context.Context) StorageAccountResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountResponseArrayOutput)
}

// The properties of a storage account associated with this resource.
type StorageAccountResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountResponse)(nil)).Elem()
}

func (o StorageAccountResponseOutput) ToStorageAccountResponseOutput() StorageAccountResponseOutput {
	return o
}

func (o StorageAccountResponseOutput) ToStorageAccountResponseOutputWithContext(ctx context.Context) StorageAccountResponseOutput {
	return o
}

// The id of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts (isPrimary false).
func (o StorageAccountResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Is this storage account resource the primary storage account for the Media Service resource. Blob only storage must set this to false.
func (o StorageAccountResponseOutput) IsPrimary() pulumi.BoolOutput {
	return o.ApplyT(func(v StorageAccountResponse) bool { return v.IsPrimary }).(pulumi.BoolOutput)
}

type StorageAccountResponseArrayOutput struct{ *pulumi.OutputState }

func (StorageAccountResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccountResponse)(nil)).Elem()
}

func (o StorageAccountResponseArrayOutput) ToStorageAccountResponseArrayOutput() StorageAccountResponseArrayOutput {
	return o
}

func (o StorageAccountResponseArrayOutput) ToStorageAccountResponseArrayOutputWithContext(ctx context.Context) StorageAccountResponseArrayOutput {
	return o
}

func (o StorageAccountResponseArrayOutput) Index(i pulumi.IntInput) StorageAccountResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageAccountResponse {
		return vs[0].([]StorageAccountResponse)[vs[1].(int)]
	}).(StorageAccountResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ApiEndpointOutput{})
	pulumi.RegisterOutputType(ApiEndpointResponseOutput{})
	pulumi.RegisterOutputType(ApiEndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(MediaServiceTypeOutput{})
	pulumi.RegisterOutputType(MediaServicePropertiesOutput{})
	pulumi.RegisterOutputType(MediaServicePropertiesPtrOutput{})
	pulumi.RegisterOutputType(MediaServicePropertiesResponseOutput{})
	pulumi.RegisterOutputType(MediaServicePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageAccountOutput{})
	pulumi.RegisterOutputType(StorageAccountArrayOutput{})
	pulumi.RegisterOutputType(StorageAccountResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountResponseArrayOutput{})
}
