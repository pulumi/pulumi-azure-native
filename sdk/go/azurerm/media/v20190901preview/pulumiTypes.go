// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Asset sink
type MediaGraphAssetSink struct {
	// Asset name
	AssetName string `pulumi:"assetName"`
	// Sink inputs
	Inputs []string `pulumi:"inputs"`
	// Sink name
	Name string `pulumi:"name"`
	// The discriminator for derived types.
	OdataType string `pulumi:"odataType"`
}

// MediaGraphAssetSinkInput is an input type that accepts MediaGraphAssetSinkArgs and MediaGraphAssetSinkOutput values.
// You can construct a concrete instance of `MediaGraphAssetSinkInput` via:
//
//          MediaGraphAssetSinkArgs{...}
type MediaGraphAssetSinkInput interface {
	pulumi.Input

	ToMediaGraphAssetSinkOutput() MediaGraphAssetSinkOutput
	ToMediaGraphAssetSinkOutputWithContext(context.Context) MediaGraphAssetSinkOutput
}

// Asset sink
type MediaGraphAssetSinkArgs struct {
	// Asset name
	AssetName pulumi.StringInput `pulumi:"assetName"`
	// Sink inputs
	Inputs pulumi.StringArrayInput `pulumi:"inputs"`
	// Sink name
	Name pulumi.StringInput `pulumi:"name"`
	// The discriminator for derived types.
	OdataType pulumi.StringInput `pulumi:"odataType"`
}

func (MediaGraphAssetSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaGraphAssetSink)(nil)).Elem()
}

func (i MediaGraphAssetSinkArgs) ToMediaGraphAssetSinkOutput() MediaGraphAssetSinkOutput {
	return i.ToMediaGraphAssetSinkOutputWithContext(context.Background())
}

func (i MediaGraphAssetSinkArgs) ToMediaGraphAssetSinkOutputWithContext(ctx context.Context) MediaGraphAssetSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaGraphAssetSinkOutput)
}

// MediaGraphAssetSinkArrayInput is an input type that accepts MediaGraphAssetSinkArray and MediaGraphAssetSinkArrayOutput values.
// You can construct a concrete instance of `MediaGraphAssetSinkArrayInput` via:
//
//          MediaGraphAssetSinkArray{ MediaGraphAssetSinkArgs{...} }
type MediaGraphAssetSinkArrayInput interface {
	pulumi.Input

	ToMediaGraphAssetSinkArrayOutput() MediaGraphAssetSinkArrayOutput
	ToMediaGraphAssetSinkArrayOutputWithContext(context.Context) MediaGraphAssetSinkArrayOutput
}

type MediaGraphAssetSinkArray []MediaGraphAssetSinkInput

func (MediaGraphAssetSinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MediaGraphAssetSink)(nil)).Elem()
}

func (i MediaGraphAssetSinkArray) ToMediaGraphAssetSinkArrayOutput() MediaGraphAssetSinkArrayOutput {
	return i.ToMediaGraphAssetSinkArrayOutputWithContext(context.Background())
}

func (i MediaGraphAssetSinkArray) ToMediaGraphAssetSinkArrayOutputWithContext(ctx context.Context) MediaGraphAssetSinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaGraphAssetSinkArrayOutput)
}

// Asset sink
type MediaGraphAssetSinkResponse struct {
	// Asset name
	AssetName string `pulumi:"assetName"`
	// Sink inputs
	Inputs []string `pulumi:"inputs"`
	// Sink name
	Name string `pulumi:"name"`
	// The discriminator for derived types.
	OdataType string `pulumi:"odataType"`
}

// Asset sink
type MediaGraphAssetSinkResponseOutput struct{ *pulumi.OutputState }

func (MediaGraphAssetSinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaGraphAssetSinkResponse)(nil)).Elem()
}

func (o MediaGraphAssetSinkResponseOutput) ToMediaGraphAssetSinkResponseOutput() MediaGraphAssetSinkResponseOutput {
	return o
}

func (o MediaGraphAssetSinkResponseOutput) ToMediaGraphAssetSinkResponseOutputWithContext(ctx context.Context) MediaGraphAssetSinkResponseOutput {
	return o
}

// Asset name
func (o MediaGraphAssetSinkResponseOutput) AssetName() pulumi.StringOutput {
	return o.ApplyT(func(v MediaGraphAssetSinkResponse) string { return v.AssetName }).(pulumi.StringOutput)
}

// Sink inputs
func (o MediaGraphAssetSinkResponseOutput) Inputs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MediaGraphAssetSinkResponse) []string { return v.Inputs }).(pulumi.StringArrayOutput)
}

// Sink name
func (o MediaGraphAssetSinkResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MediaGraphAssetSinkResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The discriminator for derived types.
func (o MediaGraphAssetSinkResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v MediaGraphAssetSinkResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

type MediaGraphAssetSinkResponseArrayOutput struct{ *pulumi.OutputState }

func (MediaGraphAssetSinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MediaGraphAssetSinkResponse)(nil)).Elem()
}

func (o MediaGraphAssetSinkResponseArrayOutput) ToMediaGraphAssetSinkResponseArrayOutput() MediaGraphAssetSinkResponseArrayOutput {
	return o
}

func (o MediaGraphAssetSinkResponseArrayOutput) ToMediaGraphAssetSinkResponseArrayOutputWithContext(ctx context.Context) MediaGraphAssetSinkResponseArrayOutput {
	return o
}

func (o MediaGraphAssetSinkResponseArrayOutput) Index(i pulumi.IntInput) MediaGraphAssetSinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MediaGraphAssetSinkResponse {
		return vs[0].([]MediaGraphAssetSinkResponse)[vs[1].(int)]
	}).(MediaGraphAssetSinkResponseOutput)
}

// RTSP source
type MediaGraphRtspSource struct {
	// RTSP Credentials
	Credentials *MediaGraphUserCredentials `pulumi:"credentials"`
	// Source name
	Name string `pulumi:"name"`
	// The discriminator for derived types.
	OdataType string `pulumi:"odataType"`
	// RTSP URL
	RtspUrl string `pulumi:"rtspUrl"`
}

// MediaGraphRtspSourceInput is an input type that accepts MediaGraphRtspSourceArgs and MediaGraphRtspSourceOutput values.
// You can construct a concrete instance of `MediaGraphRtspSourceInput` via:
//
//          MediaGraphRtspSourceArgs{...}
type MediaGraphRtspSourceInput interface {
	pulumi.Input

	ToMediaGraphRtspSourceOutput() MediaGraphRtspSourceOutput
	ToMediaGraphRtspSourceOutputWithContext(context.Context) MediaGraphRtspSourceOutput
}

// RTSP source
type MediaGraphRtspSourceArgs struct {
	// RTSP Credentials
	Credentials MediaGraphUserCredentialsPtrInput `pulumi:"credentials"`
	// Source name
	Name pulumi.StringInput `pulumi:"name"`
	// The discriminator for derived types.
	OdataType pulumi.StringInput `pulumi:"odataType"`
	// RTSP URL
	RtspUrl pulumi.StringInput `pulumi:"rtspUrl"`
}

func (MediaGraphRtspSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaGraphRtspSource)(nil)).Elem()
}

func (i MediaGraphRtspSourceArgs) ToMediaGraphRtspSourceOutput() MediaGraphRtspSourceOutput {
	return i.ToMediaGraphRtspSourceOutputWithContext(context.Background())
}

func (i MediaGraphRtspSourceArgs) ToMediaGraphRtspSourceOutputWithContext(ctx context.Context) MediaGraphRtspSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaGraphRtspSourceOutput)
}

// MediaGraphRtspSourceArrayInput is an input type that accepts MediaGraphRtspSourceArray and MediaGraphRtspSourceArrayOutput values.
// You can construct a concrete instance of `MediaGraphRtspSourceArrayInput` via:
//
//          MediaGraphRtspSourceArray{ MediaGraphRtspSourceArgs{...} }
type MediaGraphRtspSourceArrayInput interface {
	pulumi.Input

	ToMediaGraphRtspSourceArrayOutput() MediaGraphRtspSourceArrayOutput
	ToMediaGraphRtspSourceArrayOutputWithContext(context.Context) MediaGraphRtspSourceArrayOutput
}

type MediaGraphRtspSourceArray []MediaGraphRtspSourceInput

func (MediaGraphRtspSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MediaGraphRtspSource)(nil)).Elem()
}

func (i MediaGraphRtspSourceArray) ToMediaGraphRtspSourceArrayOutput() MediaGraphRtspSourceArrayOutput {
	return i.ToMediaGraphRtspSourceArrayOutputWithContext(context.Background())
}

func (i MediaGraphRtspSourceArray) ToMediaGraphRtspSourceArrayOutputWithContext(ctx context.Context) MediaGraphRtspSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaGraphRtspSourceArrayOutput)
}

// RTSP source
type MediaGraphRtspSourceResponse struct {
	// RTSP Credentials
	Credentials *MediaGraphUserCredentialsResponse `pulumi:"credentials"`
	// Source name
	Name string `pulumi:"name"`
	// The discriminator for derived types.
	OdataType string `pulumi:"odataType"`
	// RTSP URL
	RtspUrl string `pulumi:"rtspUrl"`
}

// RTSP source
type MediaGraphRtspSourceResponseOutput struct{ *pulumi.OutputState }

func (MediaGraphRtspSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaGraphRtspSourceResponse)(nil)).Elem()
}

func (o MediaGraphRtspSourceResponseOutput) ToMediaGraphRtspSourceResponseOutput() MediaGraphRtspSourceResponseOutput {
	return o
}

func (o MediaGraphRtspSourceResponseOutput) ToMediaGraphRtspSourceResponseOutputWithContext(ctx context.Context) MediaGraphRtspSourceResponseOutput {
	return o
}

// RTSP Credentials
func (o MediaGraphRtspSourceResponseOutput) Credentials() MediaGraphUserCredentialsResponsePtrOutput {
	return o.ApplyT(func(v MediaGraphRtspSourceResponse) *MediaGraphUserCredentialsResponse { return v.Credentials }).(MediaGraphUserCredentialsResponsePtrOutput)
}

// Source name
func (o MediaGraphRtspSourceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MediaGraphRtspSourceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The discriminator for derived types.
func (o MediaGraphRtspSourceResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v MediaGraphRtspSourceResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// RTSP URL
func (o MediaGraphRtspSourceResponseOutput) RtspUrl() pulumi.StringOutput {
	return o.ApplyT(func(v MediaGraphRtspSourceResponse) string { return v.RtspUrl }).(pulumi.StringOutput)
}

type MediaGraphRtspSourceResponseArrayOutput struct{ *pulumi.OutputState }

func (MediaGraphRtspSourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MediaGraphRtspSourceResponse)(nil)).Elem()
}

func (o MediaGraphRtspSourceResponseArrayOutput) ToMediaGraphRtspSourceResponseArrayOutput() MediaGraphRtspSourceResponseArrayOutput {
	return o
}

func (o MediaGraphRtspSourceResponseArrayOutput) ToMediaGraphRtspSourceResponseArrayOutputWithContext(ctx context.Context) MediaGraphRtspSourceResponseArrayOutput {
	return o
}

func (o MediaGraphRtspSourceResponseArrayOutput) Index(i pulumi.IntInput) MediaGraphRtspSourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MediaGraphRtspSourceResponse {
		return vs[0].([]MediaGraphRtspSourceResponse)[vs[1].(int)]
	}).(MediaGraphRtspSourceResponseOutput)
}

// Credentials to authenticate to Media Graph sources
type MediaGraphUserCredentials struct {
	// Password credential
	Password string `pulumi:"password"`
	// User name
	Username string `pulumi:"username"`
}

// MediaGraphUserCredentialsInput is an input type that accepts MediaGraphUserCredentialsArgs and MediaGraphUserCredentialsOutput values.
// You can construct a concrete instance of `MediaGraphUserCredentialsInput` via:
//
//          MediaGraphUserCredentialsArgs{...}
type MediaGraphUserCredentialsInput interface {
	pulumi.Input

	ToMediaGraphUserCredentialsOutput() MediaGraphUserCredentialsOutput
	ToMediaGraphUserCredentialsOutputWithContext(context.Context) MediaGraphUserCredentialsOutput
}

// Credentials to authenticate to Media Graph sources
type MediaGraphUserCredentialsArgs struct {
	// Password credential
	Password pulumi.StringInput `pulumi:"password"`
	// User name
	Username pulumi.StringInput `pulumi:"username"`
}

func (MediaGraphUserCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaGraphUserCredentials)(nil)).Elem()
}

func (i MediaGraphUserCredentialsArgs) ToMediaGraphUserCredentialsOutput() MediaGraphUserCredentialsOutput {
	return i.ToMediaGraphUserCredentialsOutputWithContext(context.Background())
}

func (i MediaGraphUserCredentialsArgs) ToMediaGraphUserCredentialsOutputWithContext(ctx context.Context) MediaGraphUserCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaGraphUserCredentialsOutput)
}

func (i MediaGraphUserCredentialsArgs) ToMediaGraphUserCredentialsPtrOutput() MediaGraphUserCredentialsPtrOutput {
	return i.ToMediaGraphUserCredentialsPtrOutputWithContext(context.Background())
}

func (i MediaGraphUserCredentialsArgs) ToMediaGraphUserCredentialsPtrOutputWithContext(ctx context.Context) MediaGraphUserCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaGraphUserCredentialsOutput).ToMediaGraphUserCredentialsPtrOutputWithContext(ctx)
}

// MediaGraphUserCredentialsPtrInput is an input type that accepts MediaGraphUserCredentialsArgs, MediaGraphUserCredentialsPtr and MediaGraphUserCredentialsPtrOutput values.
// You can construct a concrete instance of `MediaGraphUserCredentialsPtrInput` via:
//
//          MediaGraphUserCredentialsArgs{...}
//
//  or:
//
//          nil
type MediaGraphUserCredentialsPtrInput interface {
	pulumi.Input

	ToMediaGraphUserCredentialsPtrOutput() MediaGraphUserCredentialsPtrOutput
	ToMediaGraphUserCredentialsPtrOutputWithContext(context.Context) MediaGraphUserCredentialsPtrOutput
}

type mediaGraphUserCredentialsPtrType MediaGraphUserCredentialsArgs

func MediaGraphUserCredentialsPtr(v *MediaGraphUserCredentialsArgs) MediaGraphUserCredentialsPtrInput {
	return (*mediaGraphUserCredentialsPtrType)(v)
}

func (*mediaGraphUserCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MediaGraphUserCredentials)(nil)).Elem()
}

func (i *mediaGraphUserCredentialsPtrType) ToMediaGraphUserCredentialsPtrOutput() MediaGraphUserCredentialsPtrOutput {
	return i.ToMediaGraphUserCredentialsPtrOutputWithContext(context.Background())
}

func (i *mediaGraphUserCredentialsPtrType) ToMediaGraphUserCredentialsPtrOutputWithContext(ctx context.Context) MediaGraphUserCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaGraphUserCredentialsPtrOutput)
}

// Credentials to authenticate to Media Graph sources
type MediaGraphUserCredentialsResponse struct {
	// Password credential
	Password string `pulumi:"password"`
	// User name
	Username string `pulumi:"username"`
}

// Credentials to authenticate to Media Graph sources
type MediaGraphUserCredentialsResponseOutput struct{ *pulumi.OutputState }

func (MediaGraphUserCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaGraphUserCredentialsResponse)(nil)).Elem()
}

func (o MediaGraphUserCredentialsResponseOutput) ToMediaGraphUserCredentialsResponseOutput() MediaGraphUserCredentialsResponseOutput {
	return o
}

func (o MediaGraphUserCredentialsResponseOutput) ToMediaGraphUserCredentialsResponseOutputWithContext(ctx context.Context) MediaGraphUserCredentialsResponseOutput {
	return o
}

func (o MediaGraphUserCredentialsResponseOutput) ToMediaGraphUserCredentialsResponsePtrOutput() MediaGraphUserCredentialsResponsePtrOutput {
	return o.ToMediaGraphUserCredentialsResponsePtrOutputWithContext(context.Background())
}

func (o MediaGraphUserCredentialsResponseOutput) ToMediaGraphUserCredentialsResponsePtrOutputWithContext(ctx context.Context) MediaGraphUserCredentialsResponsePtrOutput {
	return o.ApplyT(func(v MediaGraphUserCredentialsResponse) *MediaGraphUserCredentialsResponse {
		return &v
	}).(MediaGraphUserCredentialsResponsePtrOutput)
}

// Password credential
func (o MediaGraphUserCredentialsResponseOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v MediaGraphUserCredentialsResponse) string { return v.Password }).(pulumi.StringOutput)
}

// User name
func (o MediaGraphUserCredentialsResponseOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v MediaGraphUserCredentialsResponse) string { return v.Username }).(pulumi.StringOutput)
}

type MediaGraphUserCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (MediaGraphUserCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MediaGraphUserCredentialsResponse)(nil)).Elem()
}

func (o MediaGraphUserCredentialsResponsePtrOutput) ToMediaGraphUserCredentialsResponsePtrOutput() MediaGraphUserCredentialsResponsePtrOutput {
	return o
}

func (o MediaGraphUserCredentialsResponsePtrOutput) ToMediaGraphUserCredentialsResponsePtrOutputWithContext(ctx context.Context) MediaGraphUserCredentialsResponsePtrOutput {
	return o
}

func (o MediaGraphUserCredentialsResponsePtrOutput) Elem() MediaGraphUserCredentialsResponseOutput {
	return o.ApplyT(func(v *MediaGraphUserCredentialsResponse) MediaGraphUserCredentialsResponse { return *v }).(MediaGraphUserCredentialsResponseOutput)
}

// Password credential
func (o MediaGraphUserCredentialsResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MediaGraphUserCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// User name
func (o MediaGraphUserCredentialsResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MediaGraphUserCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(MediaGraphAssetSinkOutput{})
	pulumi.RegisterOutputType(MediaGraphAssetSinkArrayOutput{})
	pulumi.RegisterOutputType(MediaGraphAssetSinkResponseOutput{})
	pulumi.RegisterOutputType(MediaGraphAssetSinkResponseArrayOutput{})
	pulumi.RegisterOutputType(MediaGraphRtspSourceOutput{})
	pulumi.RegisterOutputType(MediaGraphRtspSourceArrayOutput{})
	pulumi.RegisterOutputType(MediaGraphRtspSourceResponseOutput{})
	pulumi.RegisterOutputType(MediaGraphRtspSourceResponseArrayOutput{})
	pulumi.RegisterOutputType(MediaGraphUserCredentialsOutput{})
	pulumi.RegisterOutputType(MediaGraphUserCredentialsPtrOutput{})
	pulumi.RegisterOutputType(MediaGraphUserCredentialsResponseOutput{})
	pulumi.RegisterOutputType(MediaGraphUserCredentialsResponsePtrOutput{})
}
