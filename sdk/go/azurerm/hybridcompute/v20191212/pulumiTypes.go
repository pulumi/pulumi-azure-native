// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20191212

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Describes a hybrid machine.
type MachineType struct {
	Identity map[string]string `pulumi:"identity"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Hybrid Compute Machine properties
	Properties map[string]string `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type string `pulumi:"type"`
}

// MachineTypeInput is an input type that accepts MachineTypeArgs and MachineTypeOutput values.
// You can construct a concrete instance of `MachineTypeInput` via:
//
//          MachineTypeArgs{...}
type MachineTypeInput interface {
	pulumi.Input

	ToMachineTypeOutput() MachineTypeOutput
	ToMachineTypeOutputWithContext(context.Context) MachineTypeOutput
}

// Describes a hybrid machine.
type MachineTypeArgs struct {
	Identity pulumi.StringMapInput `pulumi:"identity"`
	// The geo-location where the resource lives
	Location pulumi.StringInput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringInput `pulumi:"name"`
	// Hybrid Compute Machine properties
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MachineTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineType)(nil)).Elem()
}

func (i MachineTypeArgs) ToMachineTypeOutput() MachineTypeOutput {
	return i.ToMachineTypeOutputWithContext(context.Background())
}

func (i MachineTypeArgs) ToMachineTypeOutputWithContext(ctx context.Context) MachineTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineTypeOutput)
}

// Describes a hybrid machine.
type MachineTypeOutput struct{ *pulumi.OutputState }

func (MachineTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineType)(nil)).Elem()
}

func (o MachineTypeOutput) ToMachineTypeOutput() MachineTypeOutput {
	return o
}

func (o MachineTypeOutput) ToMachineTypeOutputWithContext(ctx context.Context) MachineTypeOutput {
	return o
}

func (o MachineTypeOutput) Identity() pulumi.StringMapOutput {
	return o.ApplyT(func(v MachineType) map[string]string { return v.Identity }).(pulumi.StringMapOutput)
}

// The geo-location where the resource lives
func (o MachineTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v MachineType) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o MachineTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MachineType) string { return v.Name }).(pulumi.StringOutput)
}

// Hybrid Compute Machine properties
func (o MachineTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v MachineType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Resource tags.
func (o MachineTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v MachineType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
func (o MachineTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MachineType) string { return v.Type }).(pulumi.StringOutput)
}

// Describes a Machine Extension.
type MachineExtensionType struct {
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Describes Machine Extension Properties.
	Properties map[string]string `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type string `pulumi:"type"`
}

// MachineExtensionTypeInput is an input type that accepts MachineExtensionTypeArgs and MachineExtensionTypeOutput values.
// You can construct a concrete instance of `MachineExtensionTypeInput` via:
//
//          MachineExtensionTypeArgs{...}
type MachineExtensionTypeInput interface {
	pulumi.Input

	ToMachineExtensionTypeOutput() MachineExtensionTypeOutput
	ToMachineExtensionTypeOutputWithContext(context.Context) MachineExtensionTypeOutput
}

// Describes a Machine Extension.
type MachineExtensionTypeArgs struct {
	// The geo-location where the resource lives
	Location pulumi.StringInput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringInput `pulumi:"name"`
	// Describes Machine Extension Properties.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MachineExtensionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineExtensionType)(nil)).Elem()
}

func (i MachineExtensionTypeArgs) ToMachineExtensionTypeOutput() MachineExtensionTypeOutput {
	return i.ToMachineExtensionTypeOutputWithContext(context.Background())
}

func (i MachineExtensionTypeArgs) ToMachineExtensionTypeOutputWithContext(ctx context.Context) MachineExtensionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineExtensionTypeOutput)
}

// Describes a Machine Extension.
type MachineExtensionTypeOutput struct{ *pulumi.OutputState }

func (MachineExtensionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineExtensionType)(nil)).Elem()
}

func (o MachineExtensionTypeOutput) ToMachineExtensionTypeOutput() MachineExtensionTypeOutput {
	return o
}

func (o MachineExtensionTypeOutput) ToMachineExtensionTypeOutputWithContext(ctx context.Context) MachineExtensionTypeOutput {
	return o
}

// The geo-location where the resource lives
func (o MachineExtensionTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v MachineExtensionType) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o MachineExtensionTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MachineExtensionType) string { return v.Name }).(pulumi.StringOutput)
}

// Describes Machine Extension Properties.
func (o MachineExtensionTypeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v MachineExtensionType) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Resource tags.
func (o MachineExtensionTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v MachineExtensionType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
func (o MachineExtensionTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MachineExtensionType) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(MachineTypeOutput{})
	pulumi.RegisterOutputType(MachineExtensionTypeOutput{})
}
