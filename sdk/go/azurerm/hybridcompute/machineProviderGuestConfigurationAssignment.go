// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package hybridcompute

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Guest configuration assignment is an association between a machine and guest configuration.
type MachineProviderGuestConfigurationAssignment struct {
	pulumi.CustomResourceState

	// Region where the VM is located.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Name of the guest configuration assignment.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// Properties of the Guest configuration assignment.
	Properties GuestConfigurationAssignmentPropertiesResponseOutput `pulumi:"properties"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewMachineProviderGuestConfigurationAssignment registers a new resource with the given unique name, arguments, and options.
func NewMachineProviderGuestConfigurationAssignment(ctx *pulumi.Context,
	name string, args *MachineProviderGuestConfigurationAssignmentArgs, opts ...pulumi.ResourceOption) (*MachineProviderGuestConfigurationAssignment, error) {
	if args == nil || args.GuestConfigurationAssignmentName == nil {
		return nil, errors.New("missing required argument 'GuestConfigurationAssignmentName'")
	}
	if args == nil || args.MachineName == nil {
		return nil, errors.New("missing required argument 'MachineName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &MachineProviderGuestConfigurationAssignmentArgs{}
	}
	var resource MachineProviderGuestConfigurationAssignment
	err := ctx.RegisterResource("azurerm:hybridcompute:MachineProviderGuestConfigurationAssignment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMachineProviderGuestConfigurationAssignment gets an existing MachineProviderGuestConfigurationAssignment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMachineProviderGuestConfigurationAssignment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MachineProviderGuestConfigurationAssignmentState, opts ...pulumi.ResourceOption) (*MachineProviderGuestConfigurationAssignment, error) {
	var resource MachineProviderGuestConfigurationAssignment
	err := ctx.ReadResource("azurerm:hybridcompute:MachineProviderGuestConfigurationAssignment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MachineProviderGuestConfigurationAssignment resources.
type machineProviderGuestConfigurationAssignmentState struct {
	// Region where the VM is located.
	Location *string `pulumi:"location"`
	// Name of the guest configuration assignment.
	Name *string `pulumi:"name"`
	// Properties of the Guest configuration assignment.
	Properties *GuestConfigurationAssignmentPropertiesResponse `pulumi:"properties"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

type MachineProviderGuestConfigurationAssignmentState struct {
	// Region where the VM is located.
	Location pulumi.StringPtrInput
	// Name of the guest configuration assignment.
	Name pulumi.StringPtrInput
	// Properties of the Guest configuration assignment.
	Properties GuestConfigurationAssignmentPropertiesResponsePtrInput
	// The type of the resource.
	Type pulumi.StringPtrInput
}

func (MachineProviderGuestConfigurationAssignmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*machineProviderGuestConfigurationAssignmentState)(nil)).Elem()
}

type machineProviderGuestConfigurationAssignmentArgs struct {
	// Name of the guest configuration assignment.
	GuestConfigurationAssignmentName string `pulumi:"guestConfigurationAssignmentName"`
	// Region where the VM is located.
	Location *string `pulumi:"location"`
	// The name of the ARC machine.
	MachineName string `pulumi:"machineName"`
	// Name of the guest configuration assignment.
	Name *string `pulumi:"name"`
	// Properties of the Guest configuration assignment.
	Properties *GuestConfigurationAssignmentProperties `pulumi:"properties"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a MachineProviderGuestConfigurationAssignment resource.
type MachineProviderGuestConfigurationAssignmentArgs struct {
	// Name of the guest configuration assignment.
	GuestConfigurationAssignmentName pulumi.StringInput
	// Region where the VM is located.
	Location pulumi.StringPtrInput
	// The name of the ARC machine.
	MachineName pulumi.StringInput
	// Name of the guest configuration assignment.
	Name pulumi.StringPtrInput
	// Properties of the Guest configuration assignment.
	Properties GuestConfigurationAssignmentPropertiesPtrInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
}

func (MachineProviderGuestConfigurationAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*machineProviderGuestConfigurationAssignmentArgs)(nil)).Elem()
}
