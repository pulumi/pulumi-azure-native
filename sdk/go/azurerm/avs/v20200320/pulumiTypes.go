// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200320

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ExpressRoute Circuit Authorization
type AuthorizationType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// The properties of an ExpressRoute Circuit Authorization resource
	Properties ExpressRouteAuthorizationPropertiesResponse `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// AuthorizationTypeInput is an input type that accepts AuthorizationTypeArgs and AuthorizationTypeOutput values.
// You can construct a concrete instance of `AuthorizationTypeInput` via:
//
//          AuthorizationTypeArgs{...}
type AuthorizationTypeInput interface {
	pulumi.Input

	ToAuthorizationTypeOutput() AuthorizationTypeOutput
	ToAuthorizationTypeOutputWithContext(context.Context) AuthorizationTypeOutput
}

// ExpressRoute Circuit Authorization
type AuthorizationTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of an ExpressRoute Circuit Authorization resource
	Properties ExpressRouteAuthorizationPropertiesResponseInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AuthorizationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationType)(nil)).Elem()
}

func (i AuthorizationTypeArgs) ToAuthorizationTypeOutput() AuthorizationTypeOutput {
	return i.ToAuthorizationTypeOutputWithContext(context.Background())
}

func (i AuthorizationTypeArgs) ToAuthorizationTypeOutputWithContext(ctx context.Context) AuthorizationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationTypeOutput)
}

// ExpressRoute Circuit Authorization
type AuthorizationTypeOutput struct{ *pulumi.OutputState }

func (AuthorizationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationType)(nil)).Elem()
}

func (o AuthorizationTypeOutput) ToAuthorizationTypeOutput() AuthorizationTypeOutput {
	return o
}

func (o AuthorizationTypeOutput) ToAuthorizationTypeOutputWithContext(ctx context.Context) AuthorizationTypeOutput {
	return o
}

// Resource name.
func (o AuthorizationTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of an ExpressRoute Circuit Authorization resource
func (o AuthorizationTypeOutput) Properties() ExpressRouteAuthorizationPropertiesResponseOutput {
	return o.ApplyT(func(v AuthorizationType) ExpressRouteAuthorizationPropertiesResponse { return v.Properties }).(ExpressRouteAuthorizationPropertiesResponseOutput)
}

// Resource type.
func (o AuthorizationTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationType) string { return v.Type }).(pulumi.StringOutput)
}

// An ExpressRoute Circuit
type Circuit struct {
}

// CircuitInput is an input type that accepts CircuitArgs and CircuitOutput values.
// You can construct a concrete instance of `CircuitInput` via:
//
//          CircuitArgs{...}
type CircuitInput interface {
	pulumi.Input

	ToCircuitOutput() CircuitOutput
	ToCircuitOutputWithContext(context.Context) CircuitOutput
}

// An ExpressRoute Circuit
type CircuitArgs struct {
}

func (CircuitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Circuit)(nil)).Elem()
}

func (i CircuitArgs) ToCircuitOutput() CircuitOutput {
	return i.ToCircuitOutputWithContext(context.Background())
}

func (i CircuitArgs) ToCircuitOutputWithContext(ctx context.Context) CircuitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CircuitOutput)
}

func (i CircuitArgs) ToCircuitPtrOutput() CircuitPtrOutput {
	return i.ToCircuitPtrOutputWithContext(context.Background())
}

func (i CircuitArgs) ToCircuitPtrOutputWithContext(ctx context.Context) CircuitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CircuitOutput).ToCircuitPtrOutputWithContext(ctx)
}

// CircuitPtrInput is an input type that accepts CircuitArgs, CircuitPtr and CircuitPtrOutput values.
// You can construct a concrete instance of `CircuitPtrInput` via:
//
//          CircuitArgs{...}
//
//  or:
//
//          nil
type CircuitPtrInput interface {
	pulumi.Input

	ToCircuitPtrOutput() CircuitPtrOutput
	ToCircuitPtrOutputWithContext(context.Context) CircuitPtrOutput
}

type circuitPtrType CircuitArgs

func CircuitPtr(v *CircuitArgs) CircuitPtrInput {
	return (*circuitPtrType)(v)
}

func (*circuitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Circuit)(nil)).Elem()
}

func (i *circuitPtrType) ToCircuitPtrOutput() CircuitPtrOutput {
	return i.ToCircuitPtrOutputWithContext(context.Background())
}

func (i *circuitPtrType) ToCircuitPtrOutputWithContext(ctx context.Context) CircuitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CircuitPtrOutput)
}

// An ExpressRoute Circuit
type CircuitOutput struct{ *pulumi.OutputState }

func (CircuitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Circuit)(nil)).Elem()
}

func (o CircuitOutput) ToCircuitOutput() CircuitOutput {
	return o
}

func (o CircuitOutput) ToCircuitOutputWithContext(ctx context.Context) CircuitOutput {
	return o
}

func (o CircuitOutput) ToCircuitPtrOutput() CircuitPtrOutput {
	return o.ToCircuitPtrOutputWithContext(context.Background())
}

func (o CircuitOutput) ToCircuitPtrOutputWithContext(ctx context.Context) CircuitPtrOutput {
	return o.ApplyT(func(v Circuit) *Circuit {
		return &v
	}).(CircuitPtrOutput)
}

type CircuitPtrOutput struct{ *pulumi.OutputState }

func (CircuitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Circuit)(nil)).Elem()
}

func (o CircuitPtrOutput) ToCircuitPtrOutput() CircuitPtrOutput {
	return o
}

func (o CircuitPtrOutput) ToCircuitPtrOutputWithContext(ctx context.Context) CircuitPtrOutput {
	return o
}

func (o CircuitPtrOutput) Elem() CircuitOutput {
	return o.ApplyT(func(v *Circuit) Circuit { return *v }).(CircuitOutput)
}

// An ExpressRoute Circuit
type CircuitResponse struct {
	// Identifier of the ExpressRoute Circuit (Microsoft Colo only)
	ExpressRouteID string `pulumi:"expressRouteID"`
	// ExpressRoute Circuit private peering identifier
	ExpressRoutePrivatePeeringID string `pulumi:"expressRoutePrivatePeeringID"`
	// CIDR of primary subnet
	PrimarySubnet string `pulumi:"primarySubnet"`
	// CIDR of secondary subnet
	SecondarySubnet string `pulumi:"secondarySubnet"`
}

// CircuitResponseInput is an input type that accepts CircuitResponseArgs and CircuitResponseOutput values.
// You can construct a concrete instance of `CircuitResponseInput` via:
//
//          CircuitResponseArgs{...}
type CircuitResponseInput interface {
	pulumi.Input

	ToCircuitResponseOutput() CircuitResponseOutput
	ToCircuitResponseOutputWithContext(context.Context) CircuitResponseOutput
}

// An ExpressRoute Circuit
type CircuitResponseArgs struct {
	// Identifier of the ExpressRoute Circuit (Microsoft Colo only)
	ExpressRouteID pulumi.StringInput `pulumi:"expressRouteID"`
	// ExpressRoute Circuit private peering identifier
	ExpressRoutePrivatePeeringID pulumi.StringInput `pulumi:"expressRoutePrivatePeeringID"`
	// CIDR of primary subnet
	PrimarySubnet pulumi.StringInput `pulumi:"primarySubnet"`
	// CIDR of secondary subnet
	SecondarySubnet pulumi.StringInput `pulumi:"secondarySubnet"`
}

func (CircuitResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CircuitResponse)(nil)).Elem()
}

func (i CircuitResponseArgs) ToCircuitResponseOutput() CircuitResponseOutput {
	return i.ToCircuitResponseOutputWithContext(context.Background())
}

func (i CircuitResponseArgs) ToCircuitResponseOutputWithContext(ctx context.Context) CircuitResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CircuitResponseOutput)
}

func (i CircuitResponseArgs) ToCircuitResponsePtrOutput() CircuitResponsePtrOutput {
	return i.ToCircuitResponsePtrOutputWithContext(context.Background())
}

func (i CircuitResponseArgs) ToCircuitResponsePtrOutputWithContext(ctx context.Context) CircuitResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CircuitResponseOutput).ToCircuitResponsePtrOutputWithContext(ctx)
}

// CircuitResponsePtrInput is an input type that accepts CircuitResponseArgs, CircuitResponsePtr and CircuitResponsePtrOutput values.
// You can construct a concrete instance of `CircuitResponsePtrInput` via:
//
//          CircuitResponseArgs{...}
//
//  or:
//
//          nil
type CircuitResponsePtrInput interface {
	pulumi.Input

	ToCircuitResponsePtrOutput() CircuitResponsePtrOutput
	ToCircuitResponsePtrOutputWithContext(context.Context) CircuitResponsePtrOutput
}

type circuitResponsePtrType CircuitResponseArgs

func CircuitResponsePtr(v *CircuitResponseArgs) CircuitResponsePtrInput {
	return (*circuitResponsePtrType)(v)
}

func (*circuitResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CircuitResponse)(nil)).Elem()
}

func (i *circuitResponsePtrType) ToCircuitResponsePtrOutput() CircuitResponsePtrOutput {
	return i.ToCircuitResponsePtrOutputWithContext(context.Background())
}

func (i *circuitResponsePtrType) ToCircuitResponsePtrOutputWithContext(ctx context.Context) CircuitResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CircuitResponsePtrOutput)
}

// An ExpressRoute Circuit
type CircuitResponseOutput struct{ *pulumi.OutputState }

func (CircuitResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CircuitResponse)(nil)).Elem()
}

func (o CircuitResponseOutput) ToCircuitResponseOutput() CircuitResponseOutput {
	return o
}

func (o CircuitResponseOutput) ToCircuitResponseOutputWithContext(ctx context.Context) CircuitResponseOutput {
	return o
}

func (o CircuitResponseOutput) ToCircuitResponsePtrOutput() CircuitResponsePtrOutput {
	return o.ToCircuitResponsePtrOutputWithContext(context.Background())
}

func (o CircuitResponseOutput) ToCircuitResponsePtrOutputWithContext(ctx context.Context) CircuitResponsePtrOutput {
	return o.ApplyT(func(v CircuitResponse) *CircuitResponse {
		return &v
	}).(CircuitResponsePtrOutput)
}

// Identifier of the ExpressRoute Circuit (Microsoft Colo only)
func (o CircuitResponseOutput) ExpressRouteID() pulumi.StringOutput {
	return o.ApplyT(func(v CircuitResponse) string { return v.ExpressRouteID }).(pulumi.StringOutput)
}

// ExpressRoute Circuit private peering identifier
func (o CircuitResponseOutput) ExpressRoutePrivatePeeringID() pulumi.StringOutput {
	return o.ApplyT(func(v CircuitResponse) string { return v.ExpressRoutePrivatePeeringID }).(pulumi.StringOutput)
}

// CIDR of primary subnet
func (o CircuitResponseOutput) PrimarySubnet() pulumi.StringOutput {
	return o.ApplyT(func(v CircuitResponse) string { return v.PrimarySubnet }).(pulumi.StringOutput)
}

// CIDR of secondary subnet
func (o CircuitResponseOutput) SecondarySubnet() pulumi.StringOutput {
	return o.ApplyT(func(v CircuitResponse) string { return v.SecondarySubnet }).(pulumi.StringOutput)
}

type CircuitResponsePtrOutput struct{ *pulumi.OutputState }

func (CircuitResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CircuitResponse)(nil)).Elem()
}

func (o CircuitResponsePtrOutput) ToCircuitResponsePtrOutput() CircuitResponsePtrOutput {
	return o
}

func (o CircuitResponsePtrOutput) ToCircuitResponsePtrOutputWithContext(ctx context.Context) CircuitResponsePtrOutput {
	return o
}

func (o CircuitResponsePtrOutput) Elem() CircuitResponseOutput {
	return o.ApplyT(func(v *CircuitResponse) CircuitResponse { return *v }).(CircuitResponseOutput)
}

// Identifier of the ExpressRoute Circuit (Microsoft Colo only)
func (o CircuitResponsePtrOutput) ExpressRouteID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CircuitResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ExpressRouteID
	}).(pulumi.StringPtrOutput)
}

// ExpressRoute Circuit private peering identifier
func (o CircuitResponsePtrOutput) ExpressRoutePrivatePeeringID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CircuitResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ExpressRoutePrivatePeeringID
	}).(pulumi.StringPtrOutput)
}

// CIDR of primary subnet
func (o CircuitResponsePtrOutput) PrimarySubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CircuitResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrimarySubnet
	}).(pulumi.StringPtrOutput)
}

// CIDR of secondary subnet
func (o CircuitResponsePtrOutput) SecondarySubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CircuitResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecondarySubnet
	}).(pulumi.StringPtrOutput)
}

// A cluster resource
type ClusterType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// The properties of a cluster resource
	Properties ClusterPropertiesResponse `pulumi:"properties"`
	// The cluster SKU
	Sku SkuResponse `pulumi:"sku"`
	// Resource type.
	Type string `pulumi:"type"`
}

// ClusterTypeInput is an input type that accepts ClusterTypeArgs and ClusterTypeOutput values.
// You can construct a concrete instance of `ClusterTypeInput` via:
//
//          ClusterTypeArgs{...}
type ClusterTypeInput interface {
	pulumi.Input

	ToClusterTypeOutput() ClusterTypeOutput
	ToClusterTypeOutputWithContext(context.Context) ClusterTypeOutput
}

// A cluster resource
type ClusterTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of a cluster resource
	Properties ClusterPropertiesResponseInput `pulumi:"properties"`
	// The cluster SKU
	Sku SkuResponseInput `pulumi:"sku"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterType)(nil)).Elem()
}

func (i ClusterTypeArgs) ToClusterTypeOutput() ClusterTypeOutput {
	return i.ToClusterTypeOutputWithContext(context.Background())
}

func (i ClusterTypeArgs) ToClusterTypeOutputWithContext(ctx context.Context) ClusterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterTypeOutput)
}

// A cluster resource
type ClusterTypeOutput struct{ *pulumi.OutputState }

func (ClusterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterType)(nil)).Elem()
}

func (o ClusterTypeOutput) ToClusterTypeOutput() ClusterTypeOutput {
	return o
}

func (o ClusterTypeOutput) ToClusterTypeOutputWithContext(ctx context.Context) ClusterTypeOutput {
	return o
}

// Resource name.
func (o ClusterTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of a cluster resource
func (o ClusterTypeOutput) Properties() ClusterPropertiesResponseOutput {
	return o.ApplyT(func(v ClusterType) ClusterPropertiesResponse { return v.Properties }).(ClusterPropertiesResponseOutput)
}

// The cluster SKU
func (o ClusterTypeOutput) Sku() SkuResponseOutput {
	return o.ApplyT(func(v ClusterType) SkuResponse { return v.Sku }).(SkuResponseOutput)
}

// Resource type.
func (o ClusterTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterType) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of a cluster
type ClusterProperties struct {
	// The cluster size
	ClusterSize int `pulumi:"clusterSize"`
}

// ClusterPropertiesInput is an input type that accepts ClusterPropertiesArgs and ClusterPropertiesOutput values.
// You can construct a concrete instance of `ClusterPropertiesInput` via:
//
//          ClusterPropertiesArgs{...}
type ClusterPropertiesInput interface {
	pulumi.Input

	ToClusterPropertiesOutput() ClusterPropertiesOutput
	ToClusterPropertiesOutputWithContext(context.Context) ClusterPropertiesOutput
}

// The properties of a cluster
type ClusterPropertiesArgs struct {
	// The cluster size
	ClusterSize pulumi.IntInput `pulumi:"clusterSize"`
}

func (ClusterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterProperties)(nil)).Elem()
}

func (i ClusterPropertiesArgs) ToClusterPropertiesOutput() ClusterPropertiesOutput {
	return i.ToClusterPropertiesOutputWithContext(context.Background())
}

func (i ClusterPropertiesArgs) ToClusterPropertiesOutputWithContext(ctx context.Context) ClusterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesOutput)
}

func (i ClusterPropertiesArgs) ToClusterPropertiesPtrOutput() ClusterPropertiesPtrOutput {
	return i.ToClusterPropertiesPtrOutputWithContext(context.Background())
}

func (i ClusterPropertiesArgs) ToClusterPropertiesPtrOutputWithContext(ctx context.Context) ClusterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesOutput).ToClusterPropertiesPtrOutputWithContext(ctx)
}

// ClusterPropertiesPtrInput is an input type that accepts ClusterPropertiesArgs, ClusterPropertiesPtr and ClusterPropertiesPtrOutput values.
// You can construct a concrete instance of `ClusterPropertiesPtrInput` via:
//
//          ClusterPropertiesArgs{...}
//
//  or:
//
//          nil
type ClusterPropertiesPtrInput interface {
	pulumi.Input

	ToClusterPropertiesPtrOutput() ClusterPropertiesPtrOutput
	ToClusterPropertiesPtrOutputWithContext(context.Context) ClusterPropertiesPtrOutput
}

type clusterPropertiesPtrType ClusterPropertiesArgs

func ClusterPropertiesPtr(v *ClusterPropertiesArgs) ClusterPropertiesPtrInput {
	return (*clusterPropertiesPtrType)(v)
}

func (*clusterPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterProperties)(nil)).Elem()
}

func (i *clusterPropertiesPtrType) ToClusterPropertiesPtrOutput() ClusterPropertiesPtrOutput {
	return i.ToClusterPropertiesPtrOutputWithContext(context.Background())
}

func (i *clusterPropertiesPtrType) ToClusterPropertiesPtrOutputWithContext(ctx context.Context) ClusterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesPtrOutput)
}

// The properties of a cluster
type ClusterPropertiesOutput struct{ *pulumi.OutputState }

func (ClusterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterProperties)(nil)).Elem()
}

func (o ClusterPropertiesOutput) ToClusterPropertiesOutput() ClusterPropertiesOutput {
	return o
}

func (o ClusterPropertiesOutput) ToClusterPropertiesOutputWithContext(ctx context.Context) ClusterPropertiesOutput {
	return o
}

func (o ClusterPropertiesOutput) ToClusterPropertiesPtrOutput() ClusterPropertiesPtrOutput {
	return o.ToClusterPropertiesPtrOutputWithContext(context.Background())
}

func (o ClusterPropertiesOutput) ToClusterPropertiesPtrOutputWithContext(ctx context.Context) ClusterPropertiesPtrOutput {
	return o.ApplyT(func(v ClusterProperties) *ClusterProperties {
		return &v
	}).(ClusterPropertiesPtrOutput)
}

// The cluster size
func (o ClusterPropertiesOutput) ClusterSize() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterProperties) int { return v.ClusterSize }).(pulumi.IntOutput)
}

type ClusterPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ClusterPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterProperties)(nil)).Elem()
}

func (o ClusterPropertiesPtrOutput) ToClusterPropertiesPtrOutput() ClusterPropertiesPtrOutput {
	return o
}

func (o ClusterPropertiesPtrOutput) ToClusterPropertiesPtrOutputWithContext(ctx context.Context) ClusterPropertiesPtrOutput {
	return o
}

func (o ClusterPropertiesPtrOutput) Elem() ClusterPropertiesOutput {
	return o.ApplyT(func(v *ClusterProperties) ClusterProperties { return *v }).(ClusterPropertiesOutput)
}

// The cluster size
func (o ClusterPropertiesPtrOutput) ClusterSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterProperties) *int {
		if v == nil {
			return nil
		}
		return &v.ClusterSize
	}).(pulumi.IntPtrOutput)
}

// The properties of a cluster
type ClusterPropertiesResponse struct {
	// The identity
	ClusterId int `pulumi:"clusterId"`
	// The cluster size
	ClusterSize int `pulumi:"clusterSize"`
	// The hosts
	Hosts []string `pulumi:"hosts"`
	// The state of the cluster provisioning
	ProvisioningState string `pulumi:"provisioningState"`
}

// ClusterPropertiesResponseInput is an input type that accepts ClusterPropertiesResponseArgs and ClusterPropertiesResponseOutput values.
// You can construct a concrete instance of `ClusterPropertiesResponseInput` via:
//
//          ClusterPropertiesResponseArgs{...}
type ClusterPropertiesResponseInput interface {
	pulumi.Input

	ToClusterPropertiesResponseOutput() ClusterPropertiesResponseOutput
	ToClusterPropertiesResponseOutputWithContext(context.Context) ClusterPropertiesResponseOutput
}

// The properties of a cluster
type ClusterPropertiesResponseArgs struct {
	// The identity
	ClusterId pulumi.IntInput `pulumi:"clusterId"`
	// The cluster size
	ClusterSize pulumi.IntInput `pulumi:"clusterSize"`
	// The hosts
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
	// The state of the cluster provisioning
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (ClusterPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPropertiesResponse)(nil)).Elem()
}

func (i ClusterPropertiesResponseArgs) ToClusterPropertiesResponseOutput() ClusterPropertiesResponseOutput {
	return i.ToClusterPropertiesResponseOutputWithContext(context.Background())
}

func (i ClusterPropertiesResponseArgs) ToClusterPropertiesResponseOutputWithContext(ctx context.Context) ClusterPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesResponseOutput)
}

func (i ClusterPropertiesResponseArgs) ToClusterPropertiesResponsePtrOutput() ClusterPropertiesResponsePtrOutput {
	return i.ToClusterPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ClusterPropertiesResponseArgs) ToClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) ClusterPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesResponseOutput).ToClusterPropertiesResponsePtrOutputWithContext(ctx)
}

// ClusterPropertiesResponsePtrInput is an input type that accepts ClusterPropertiesResponseArgs, ClusterPropertiesResponsePtr and ClusterPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ClusterPropertiesResponsePtrInput` via:
//
//          ClusterPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ClusterPropertiesResponsePtrInput interface {
	pulumi.Input

	ToClusterPropertiesResponsePtrOutput() ClusterPropertiesResponsePtrOutput
	ToClusterPropertiesResponsePtrOutputWithContext(context.Context) ClusterPropertiesResponsePtrOutput
}

type clusterPropertiesResponsePtrType ClusterPropertiesResponseArgs

func ClusterPropertiesResponsePtr(v *ClusterPropertiesResponseArgs) ClusterPropertiesResponsePtrInput {
	return (*clusterPropertiesResponsePtrType)(v)
}

func (*clusterPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPropertiesResponse)(nil)).Elem()
}

func (i *clusterPropertiesResponsePtrType) ToClusterPropertiesResponsePtrOutput() ClusterPropertiesResponsePtrOutput {
	return i.ToClusterPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *clusterPropertiesResponsePtrType) ToClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) ClusterPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPropertiesResponsePtrOutput)
}

// The properties of a cluster
type ClusterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ClusterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPropertiesResponse)(nil)).Elem()
}

func (o ClusterPropertiesResponseOutput) ToClusterPropertiesResponseOutput() ClusterPropertiesResponseOutput {
	return o
}

func (o ClusterPropertiesResponseOutput) ToClusterPropertiesResponseOutputWithContext(ctx context.Context) ClusterPropertiesResponseOutput {
	return o
}

func (o ClusterPropertiesResponseOutput) ToClusterPropertiesResponsePtrOutput() ClusterPropertiesResponsePtrOutput {
	return o.ToClusterPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ClusterPropertiesResponseOutput) ToClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) ClusterPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) *ClusterPropertiesResponse {
		return &v
	}).(ClusterPropertiesResponsePtrOutput)
}

// The identity
func (o ClusterPropertiesResponseOutput) ClusterId() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) int { return v.ClusterId }).(pulumi.IntOutput)
}

// The cluster size
func (o ClusterPropertiesResponseOutput) ClusterSize() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) int { return v.ClusterSize }).(pulumi.IntOutput)
}

// The hosts
func (o ClusterPropertiesResponseOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// The state of the cluster provisioning
func (o ClusterPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type ClusterPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ClusterPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPropertiesResponse)(nil)).Elem()
}

func (o ClusterPropertiesResponsePtrOutput) ToClusterPropertiesResponsePtrOutput() ClusterPropertiesResponsePtrOutput {
	return o
}

func (o ClusterPropertiesResponsePtrOutput) ToClusterPropertiesResponsePtrOutputWithContext(ctx context.Context) ClusterPropertiesResponsePtrOutput {
	return o
}

func (o ClusterPropertiesResponsePtrOutput) Elem() ClusterPropertiesResponseOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) ClusterPropertiesResponse { return *v }).(ClusterPropertiesResponseOutput)
}

// The identity
func (o ClusterPropertiesResponsePtrOutput) ClusterId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ClusterId
	}).(pulumi.IntPtrOutput)
}

// The cluster size
func (o ClusterPropertiesResponsePtrOutput) ClusterSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ClusterSize
	}).(pulumi.IntPtrOutput)
}

// The hosts
func (o ClusterPropertiesResponsePtrOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Hosts
	}).(pulumi.StringArrayOutput)
}

// The state of the cluster provisioning
func (o ClusterPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Endpoint addresses
type Endpoints struct {
}

// EndpointsInput is an input type that accepts EndpointsArgs and EndpointsOutput values.
// You can construct a concrete instance of `EndpointsInput` via:
//
//          EndpointsArgs{...}
type EndpointsInput interface {
	pulumi.Input

	ToEndpointsOutput() EndpointsOutput
	ToEndpointsOutputWithContext(context.Context) EndpointsOutput
}

// Endpoint addresses
type EndpointsArgs struct {
}

func (EndpointsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Endpoints)(nil)).Elem()
}

func (i EndpointsArgs) ToEndpointsOutput() EndpointsOutput {
	return i.ToEndpointsOutputWithContext(context.Background())
}

func (i EndpointsArgs) ToEndpointsOutputWithContext(ctx context.Context) EndpointsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointsOutput)
}

// Endpoint addresses
type EndpointsOutput struct{ *pulumi.OutputState }

func (EndpointsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Endpoints)(nil)).Elem()
}

func (o EndpointsOutput) ToEndpointsOutput() EndpointsOutput {
	return o
}

func (o EndpointsOutput) ToEndpointsOutputWithContext(ctx context.Context) EndpointsOutput {
	return o
}

// Endpoint addresses
type EndpointsResponse struct {
	// Endpoint for the HCX Cloud Manager
	HcxCloudManager string `pulumi:"hcxCloudManager"`
	// Endpoint for the NSX-T Data Center manager
	NsxtManager string `pulumi:"nsxtManager"`
	// Endpoint for Virtual Center Server Appliance
	Vcsa string `pulumi:"vcsa"`
}

// EndpointsResponseInput is an input type that accepts EndpointsResponseArgs and EndpointsResponseOutput values.
// You can construct a concrete instance of `EndpointsResponseInput` via:
//
//          EndpointsResponseArgs{...}
type EndpointsResponseInput interface {
	pulumi.Input

	ToEndpointsResponseOutput() EndpointsResponseOutput
	ToEndpointsResponseOutputWithContext(context.Context) EndpointsResponseOutput
}

// Endpoint addresses
type EndpointsResponseArgs struct {
	// Endpoint for the HCX Cloud Manager
	HcxCloudManager pulumi.StringInput `pulumi:"hcxCloudManager"`
	// Endpoint for the NSX-T Data Center manager
	NsxtManager pulumi.StringInput `pulumi:"nsxtManager"`
	// Endpoint for Virtual Center Server Appliance
	Vcsa pulumi.StringInput `pulumi:"vcsa"`
}

func (EndpointsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointsResponse)(nil)).Elem()
}

func (i EndpointsResponseArgs) ToEndpointsResponseOutput() EndpointsResponseOutput {
	return i.ToEndpointsResponseOutputWithContext(context.Background())
}

func (i EndpointsResponseArgs) ToEndpointsResponseOutputWithContext(ctx context.Context) EndpointsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointsResponseOutput)
}

func (i EndpointsResponseArgs) ToEndpointsResponsePtrOutput() EndpointsResponsePtrOutput {
	return i.ToEndpointsResponsePtrOutputWithContext(context.Background())
}

func (i EndpointsResponseArgs) ToEndpointsResponsePtrOutputWithContext(ctx context.Context) EndpointsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointsResponseOutput).ToEndpointsResponsePtrOutputWithContext(ctx)
}

// EndpointsResponsePtrInput is an input type that accepts EndpointsResponseArgs, EndpointsResponsePtr and EndpointsResponsePtrOutput values.
// You can construct a concrete instance of `EndpointsResponsePtrInput` via:
//
//          EndpointsResponseArgs{...}
//
//  or:
//
//          nil
type EndpointsResponsePtrInput interface {
	pulumi.Input

	ToEndpointsResponsePtrOutput() EndpointsResponsePtrOutput
	ToEndpointsResponsePtrOutputWithContext(context.Context) EndpointsResponsePtrOutput
}

type endpointsResponsePtrType EndpointsResponseArgs

func EndpointsResponsePtr(v *EndpointsResponseArgs) EndpointsResponsePtrInput {
	return (*endpointsResponsePtrType)(v)
}

func (*endpointsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointsResponse)(nil)).Elem()
}

func (i *endpointsResponsePtrType) ToEndpointsResponsePtrOutput() EndpointsResponsePtrOutput {
	return i.ToEndpointsResponsePtrOutputWithContext(context.Background())
}

func (i *endpointsResponsePtrType) ToEndpointsResponsePtrOutputWithContext(ctx context.Context) EndpointsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointsResponsePtrOutput)
}

// Endpoint addresses
type EndpointsResponseOutput struct{ *pulumi.OutputState }

func (EndpointsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointsResponse)(nil)).Elem()
}

func (o EndpointsResponseOutput) ToEndpointsResponseOutput() EndpointsResponseOutput {
	return o
}

func (o EndpointsResponseOutput) ToEndpointsResponseOutputWithContext(ctx context.Context) EndpointsResponseOutput {
	return o
}

func (o EndpointsResponseOutput) ToEndpointsResponsePtrOutput() EndpointsResponsePtrOutput {
	return o.ToEndpointsResponsePtrOutputWithContext(context.Background())
}

func (o EndpointsResponseOutput) ToEndpointsResponsePtrOutputWithContext(ctx context.Context) EndpointsResponsePtrOutput {
	return o.ApplyT(func(v EndpointsResponse) *EndpointsResponse {
		return &v
	}).(EndpointsResponsePtrOutput)
}

// Endpoint for the HCX Cloud Manager
func (o EndpointsResponseOutput) HcxCloudManager() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.HcxCloudManager }).(pulumi.StringOutput)
}

// Endpoint for the NSX-T Data Center manager
func (o EndpointsResponseOutput) NsxtManager() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.NsxtManager }).(pulumi.StringOutput)
}

// Endpoint for Virtual Center Server Appliance
func (o EndpointsResponseOutput) Vcsa() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsResponse) string { return v.Vcsa }).(pulumi.StringOutput)
}

type EndpointsResponsePtrOutput struct{ *pulumi.OutputState }

func (EndpointsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointsResponse)(nil)).Elem()
}

func (o EndpointsResponsePtrOutput) ToEndpointsResponsePtrOutput() EndpointsResponsePtrOutput {
	return o
}

func (o EndpointsResponsePtrOutput) ToEndpointsResponsePtrOutputWithContext(ctx context.Context) EndpointsResponsePtrOutput {
	return o
}

func (o EndpointsResponsePtrOutput) Elem() EndpointsResponseOutput {
	return o.ApplyT(func(v *EndpointsResponse) EndpointsResponse { return *v }).(EndpointsResponseOutput)
}

// Endpoint for the HCX Cloud Manager
func (o EndpointsResponsePtrOutput) HcxCloudManager() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.HcxCloudManager
	}).(pulumi.StringPtrOutput)
}

// Endpoint for the NSX-T Data Center manager
func (o EndpointsResponsePtrOutput) NsxtManager() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.NsxtManager
	}).(pulumi.StringPtrOutput)
}

// Endpoint for Virtual Center Server Appliance
func (o EndpointsResponsePtrOutput) Vcsa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Vcsa
	}).(pulumi.StringPtrOutput)
}

// The properties of an ExpressRoute Circuit Authorization resource
type ExpressRouteAuthorizationPropertiesResponse struct {
	// The ID of the ExpressRoute Circuit Authorization
	ExpressRouteAuthorizationId string `pulumi:"expressRouteAuthorizationId"`
	// The key of the ExpressRoute Circuit Authorization
	ExpressRouteAuthorizationKey string `pulumi:"expressRouteAuthorizationKey"`
	// The state of the  ExpressRoute Circuit Authorization provisioning
	ProvisioningState string `pulumi:"provisioningState"`
}

// ExpressRouteAuthorizationPropertiesResponseInput is an input type that accepts ExpressRouteAuthorizationPropertiesResponseArgs and ExpressRouteAuthorizationPropertiesResponseOutput values.
// You can construct a concrete instance of `ExpressRouteAuthorizationPropertiesResponseInput` via:
//
//          ExpressRouteAuthorizationPropertiesResponseArgs{...}
type ExpressRouteAuthorizationPropertiesResponseInput interface {
	pulumi.Input

	ToExpressRouteAuthorizationPropertiesResponseOutput() ExpressRouteAuthorizationPropertiesResponseOutput
	ToExpressRouteAuthorizationPropertiesResponseOutputWithContext(context.Context) ExpressRouteAuthorizationPropertiesResponseOutput
}

// The properties of an ExpressRoute Circuit Authorization resource
type ExpressRouteAuthorizationPropertiesResponseArgs struct {
	// The ID of the ExpressRoute Circuit Authorization
	ExpressRouteAuthorizationId pulumi.StringInput `pulumi:"expressRouteAuthorizationId"`
	// The key of the ExpressRoute Circuit Authorization
	ExpressRouteAuthorizationKey pulumi.StringInput `pulumi:"expressRouteAuthorizationKey"`
	// The state of the  ExpressRoute Circuit Authorization provisioning
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (ExpressRouteAuthorizationPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteAuthorizationPropertiesResponse)(nil)).Elem()
}

func (i ExpressRouteAuthorizationPropertiesResponseArgs) ToExpressRouteAuthorizationPropertiesResponseOutput() ExpressRouteAuthorizationPropertiesResponseOutput {
	return i.ToExpressRouteAuthorizationPropertiesResponseOutputWithContext(context.Background())
}

func (i ExpressRouteAuthorizationPropertiesResponseArgs) ToExpressRouteAuthorizationPropertiesResponseOutputWithContext(ctx context.Context) ExpressRouteAuthorizationPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteAuthorizationPropertiesResponseOutput)
}

func (i ExpressRouteAuthorizationPropertiesResponseArgs) ToExpressRouteAuthorizationPropertiesResponsePtrOutput() ExpressRouteAuthorizationPropertiesResponsePtrOutput {
	return i.ToExpressRouteAuthorizationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteAuthorizationPropertiesResponseArgs) ToExpressRouteAuthorizationPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteAuthorizationPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteAuthorizationPropertiesResponseOutput).ToExpressRouteAuthorizationPropertiesResponsePtrOutputWithContext(ctx)
}

// ExpressRouteAuthorizationPropertiesResponsePtrInput is an input type that accepts ExpressRouteAuthorizationPropertiesResponseArgs, ExpressRouteAuthorizationPropertiesResponsePtr and ExpressRouteAuthorizationPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteAuthorizationPropertiesResponsePtrInput` via:
//
//          ExpressRouteAuthorizationPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteAuthorizationPropertiesResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteAuthorizationPropertiesResponsePtrOutput() ExpressRouteAuthorizationPropertiesResponsePtrOutput
	ToExpressRouteAuthorizationPropertiesResponsePtrOutputWithContext(context.Context) ExpressRouteAuthorizationPropertiesResponsePtrOutput
}

type expressRouteAuthorizationPropertiesResponsePtrType ExpressRouteAuthorizationPropertiesResponseArgs

func ExpressRouteAuthorizationPropertiesResponsePtr(v *ExpressRouteAuthorizationPropertiesResponseArgs) ExpressRouteAuthorizationPropertiesResponsePtrInput {
	return (*expressRouteAuthorizationPropertiesResponsePtrType)(v)
}

func (*expressRouteAuthorizationPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteAuthorizationPropertiesResponse)(nil)).Elem()
}

func (i *expressRouteAuthorizationPropertiesResponsePtrType) ToExpressRouteAuthorizationPropertiesResponsePtrOutput() ExpressRouteAuthorizationPropertiesResponsePtrOutput {
	return i.ToExpressRouteAuthorizationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteAuthorizationPropertiesResponsePtrType) ToExpressRouteAuthorizationPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteAuthorizationPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteAuthorizationPropertiesResponsePtrOutput)
}

// The properties of an ExpressRoute Circuit Authorization resource
type ExpressRouteAuthorizationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteAuthorizationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteAuthorizationPropertiesResponse)(nil)).Elem()
}

func (o ExpressRouteAuthorizationPropertiesResponseOutput) ToExpressRouteAuthorizationPropertiesResponseOutput() ExpressRouteAuthorizationPropertiesResponseOutput {
	return o
}

func (o ExpressRouteAuthorizationPropertiesResponseOutput) ToExpressRouteAuthorizationPropertiesResponseOutputWithContext(ctx context.Context) ExpressRouteAuthorizationPropertiesResponseOutput {
	return o
}

func (o ExpressRouteAuthorizationPropertiesResponseOutput) ToExpressRouteAuthorizationPropertiesResponsePtrOutput() ExpressRouteAuthorizationPropertiesResponsePtrOutput {
	return o.ToExpressRouteAuthorizationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteAuthorizationPropertiesResponseOutput) ToExpressRouteAuthorizationPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteAuthorizationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteAuthorizationPropertiesResponse) *ExpressRouteAuthorizationPropertiesResponse {
		return &v
	}).(ExpressRouteAuthorizationPropertiesResponsePtrOutput)
}

// The ID of the ExpressRoute Circuit Authorization
func (o ExpressRouteAuthorizationPropertiesResponseOutput) ExpressRouteAuthorizationId() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteAuthorizationPropertiesResponse) string { return v.ExpressRouteAuthorizationId }).(pulumi.StringOutput)
}

// The key of the ExpressRoute Circuit Authorization
func (o ExpressRouteAuthorizationPropertiesResponseOutput) ExpressRouteAuthorizationKey() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteAuthorizationPropertiesResponse) string { return v.ExpressRouteAuthorizationKey }).(pulumi.StringOutput)
}

// The state of the  ExpressRoute Circuit Authorization provisioning
func (o ExpressRouteAuthorizationPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteAuthorizationPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type ExpressRouteAuthorizationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteAuthorizationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteAuthorizationPropertiesResponse)(nil)).Elem()
}

func (o ExpressRouteAuthorizationPropertiesResponsePtrOutput) ToExpressRouteAuthorizationPropertiesResponsePtrOutput() ExpressRouteAuthorizationPropertiesResponsePtrOutput {
	return o
}

func (o ExpressRouteAuthorizationPropertiesResponsePtrOutput) ToExpressRouteAuthorizationPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteAuthorizationPropertiesResponsePtrOutput {
	return o
}

func (o ExpressRouteAuthorizationPropertiesResponsePtrOutput) Elem() ExpressRouteAuthorizationPropertiesResponseOutput {
	return o.ApplyT(func(v *ExpressRouteAuthorizationPropertiesResponse) ExpressRouteAuthorizationPropertiesResponse {
		return *v
	}).(ExpressRouteAuthorizationPropertiesResponseOutput)
}

// The ID of the ExpressRoute Circuit Authorization
func (o ExpressRouteAuthorizationPropertiesResponsePtrOutput) ExpressRouteAuthorizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteAuthorizationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ExpressRouteAuthorizationId
	}).(pulumi.StringPtrOutput)
}

// The key of the ExpressRoute Circuit Authorization
func (o ExpressRouteAuthorizationPropertiesResponsePtrOutput) ExpressRouteAuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteAuthorizationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ExpressRouteAuthorizationKey
	}).(pulumi.StringPtrOutput)
}

// The state of the  ExpressRoute Circuit Authorization provisioning
func (o ExpressRouteAuthorizationPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteAuthorizationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// An HCX Enterprise Site resource
type HcxEnterpriseSiteType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// The properties of an HCX Enterprise Site resource
	Properties HcxEnterpriseSitePropertiesResponse `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// HcxEnterpriseSiteTypeInput is an input type that accepts HcxEnterpriseSiteTypeArgs and HcxEnterpriseSiteTypeOutput values.
// You can construct a concrete instance of `HcxEnterpriseSiteTypeInput` via:
//
//          HcxEnterpriseSiteTypeArgs{...}
type HcxEnterpriseSiteTypeInput interface {
	pulumi.Input

	ToHcxEnterpriseSiteTypeOutput() HcxEnterpriseSiteTypeOutput
	ToHcxEnterpriseSiteTypeOutputWithContext(context.Context) HcxEnterpriseSiteTypeOutput
}

// An HCX Enterprise Site resource
type HcxEnterpriseSiteTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of an HCX Enterprise Site resource
	Properties HcxEnterpriseSitePropertiesResponseInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HcxEnterpriseSiteTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HcxEnterpriseSiteType)(nil)).Elem()
}

func (i HcxEnterpriseSiteTypeArgs) ToHcxEnterpriseSiteTypeOutput() HcxEnterpriseSiteTypeOutput {
	return i.ToHcxEnterpriseSiteTypeOutputWithContext(context.Background())
}

func (i HcxEnterpriseSiteTypeArgs) ToHcxEnterpriseSiteTypeOutputWithContext(ctx context.Context) HcxEnterpriseSiteTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HcxEnterpriseSiteTypeOutput)
}

// An HCX Enterprise Site resource
type HcxEnterpriseSiteTypeOutput struct{ *pulumi.OutputState }

func (HcxEnterpriseSiteTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HcxEnterpriseSiteType)(nil)).Elem()
}

func (o HcxEnterpriseSiteTypeOutput) ToHcxEnterpriseSiteTypeOutput() HcxEnterpriseSiteTypeOutput {
	return o
}

func (o HcxEnterpriseSiteTypeOutput) ToHcxEnterpriseSiteTypeOutputWithContext(ctx context.Context) HcxEnterpriseSiteTypeOutput {
	return o
}

// Resource name.
func (o HcxEnterpriseSiteTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HcxEnterpriseSiteType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of an HCX Enterprise Site resource
func (o HcxEnterpriseSiteTypeOutput) Properties() HcxEnterpriseSitePropertiesResponseOutput {
	return o.ApplyT(func(v HcxEnterpriseSiteType) HcxEnterpriseSitePropertiesResponse { return v.Properties }).(HcxEnterpriseSitePropertiesResponseOutput)
}

// Resource type.
func (o HcxEnterpriseSiteTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HcxEnterpriseSiteType) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of an HCX Enterprise Site
type HcxEnterpriseSitePropertiesResponse struct {
	// The activation key
	ActivationKey string `pulumi:"activationKey"`
	// The status of the HCX Enterprise Site
	Status string `pulumi:"status"`
}

// HcxEnterpriseSitePropertiesResponseInput is an input type that accepts HcxEnterpriseSitePropertiesResponseArgs and HcxEnterpriseSitePropertiesResponseOutput values.
// You can construct a concrete instance of `HcxEnterpriseSitePropertiesResponseInput` via:
//
//          HcxEnterpriseSitePropertiesResponseArgs{...}
type HcxEnterpriseSitePropertiesResponseInput interface {
	pulumi.Input

	ToHcxEnterpriseSitePropertiesResponseOutput() HcxEnterpriseSitePropertiesResponseOutput
	ToHcxEnterpriseSitePropertiesResponseOutputWithContext(context.Context) HcxEnterpriseSitePropertiesResponseOutput
}

// The properties of an HCX Enterprise Site
type HcxEnterpriseSitePropertiesResponseArgs struct {
	// The activation key
	ActivationKey pulumi.StringInput `pulumi:"activationKey"`
	// The status of the HCX Enterprise Site
	Status pulumi.StringInput `pulumi:"status"`
}

func (HcxEnterpriseSitePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HcxEnterpriseSitePropertiesResponse)(nil)).Elem()
}

func (i HcxEnterpriseSitePropertiesResponseArgs) ToHcxEnterpriseSitePropertiesResponseOutput() HcxEnterpriseSitePropertiesResponseOutput {
	return i.ToHcxEnterpriseSitePropertiesResponseOutputWithContext(context.Background())
}

func (i HcxEnterpriseSitePropertiesResponseArgs) ToHcxEnterpriseSitePropertiesResponseOutputWithContext(ctx context.Context) HcxEnterpriseSitePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HcxEnterpriseSitePropertiesResponseOutput)
}

func (i HcxEnterpriseSitePropertiesResponseArgs) ToHcxEnterpriseSitePropertiesResponsePtrOutput() HcxEnterpriseSitePropertiesResponsePtrOutput {
	return i.ToHcxEnterpriseSitePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i HcxEnterpriseSitePropertiesResponseArgs) ToHcxEnterpriseSitePropertiesResponsePtrOutputWithContext(ctx context.Context) HcxEnterpriseSitePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HcxEnterpriseSitePropertiesResponseOutput).ToHcxEnterpriseSitePropertiesResponsePtrOutputWithContext(ctx)
}

// HcxEnterpriseSitePropertiesResponsePtrInput is an input type that accepts HcxEnterpriseSitePropertiesResponseArgs, HcxEnterpriseSitePropertiesResponsePtr and HcxEnterpriseSitePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `HcxEnterpriseSitePropertiesResponsePtrInput` via:
//
//          HcxEnterpriseSitePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type HcxEnterpriseSitePropertiesResponsePtrInput interface {
	pulumi.Input

	ToHcxEnterpriseSitePropertiesResponsePtrOutput() HcxEnterpriseSitePropertiesResponsePtrOutput
	ToHcxEnterpriseSitePropertiesResponsePtrOutputWithContext(context.Context) HcxEnterpriseSitePropertiesResponsePtrOutput
}

type hcxEnterpriseSitePropertiesResponsePtrType HcxEnterpriseSitePropertiesResponseArgs

func HcxEnterpriseSitePropertiesResponsePtr(v *HcxEnterpriseSitePropertiesResponseArgs) HcxEnterpriseSitePropertiesResponsePtrInput {
	return (*hcxEnterpriseSitePropertiesResponsePtrType)(v)
}

func (*hcxEnterpriseSitePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HcxEnterpriseSitePropertiesResponse)(nil)).Elem()
}

func (i *hcxEnterpriseSitePropertiesResponsePtrType) ToHcxEnterpriseSitePropertiesResponsePtrOutput() HcxEnterpriseSitePropertiesResponsePtrOutput {
	return i.ToHcxEnterpriseSitePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *hcxEnterpriseSitePropertiesResponsePtrType) ToHcxEnterpriseSitePropertiesResponsePtrOutputWithContext(ctx context.Context) HcxEnterpriseSitePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HcxEnterpriseSitePropertiesResponsePtrOutput)
}

// The properties of an HCX Enterprise Site
type HcxEnterpriseSitePropertiesResponseOutput struct{ *pulumi.OutputState }

func (HcxEnterpriseSitePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HcxEnterpriseSitePropertiesResponse)(nil)).Elem()
}

func (o HcxEnterpriseSitePropertiesResponseOutput) ToHcxEnterpriseSitePropertiesResponseOutput() HcxEnterpriseSitePropertiesResponseOutput {
	return o
}

func (o HcxEnterpriseSitePropertiesResponseOutput) ToHcxEnterpriseSitePropertiesResponseOutputWithContext(ctx context.Context) HcxEnterpriseSitePropertiesResponseOutput {
	return o
}

func (o HcxEnterpriseSitePropertiesResponseOutput) ToHcxEnterpriseSitePropertiesResponsePtrOutput() HcxEnterpriseSitePropertiesResponsePtrOutput {
	return o.ToHcxEnterpriseSitePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o HcxEnterpriseSitePropertiesResponseOutput) ToHcxEnterpriseSitePropertiesResponsePtrOutputWithContext(ctx context.Context) HcxEnterpriseSitePropertiesResponsePtrOutput {
	return o.ApplyT(func(v HcxEnterpriseSitePropertiesResponse) *HcxEnterpriseSitePropertiesResponse {
		return &v
	}).(HcxEnterpriseSitePropertiesResponsePtrOutput)
}

// The activation key
func (o HcxEnterpriseSitePropertiesResponseOutput) ActivationKey() pulumi.StringOutput {
	return o.ApplyT(func(v HcxEnterpriseSitePropertiesResponse) string { return v.ActivationKey }).(pulumi.StringOutput)
}

// The status of the HCX Enterprise Site
func (o HcxEnterpriseSitePropertiesResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v HcxEnterpriseSitePropertiesResponse) string { return v.Status }).(pulumi.StringOutput)
}

type HcxEnterpriseSitePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (HcxEnterpriseSitePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HcxEnterpriseSitePropertiesResponse)(nil)).Elem()
}

func (o HcxEnterpriseSitePropertiesResponsePtrOutput) ToHcxEnterpriseSitePropertiesResponsePtrOutput() HcxEnterpriseSitePropertiesResponsePtrOutput {
	return o
}

func (o HcxEnterpriseSitePropertiesResponsePtrOutput) ToHcxEnterpriseSitePropertiesResponsePtrOutputWithContext(ctx context.Context) HcxEnterpriseSitePropertiesResponsePtrOutput {
	return o
}

func (o HcxEnterpriseSitePropertiesResponsePtrOutput) Elem() HcxEnterpriseSitePropertiesResponseOutput {
	return o.ApplyT(func(v *HcxEnterpriseSitePropertiesResponse) HcxEnterpriseSitePropertiesResponse { return *v }).(HcxEnterpriseSitePropertiesResponseOutput)
}

// The activation key
func (o HcxEnterpriseSitePropertiesResponsePtrOutput) ActivationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HcxEnterpriseSitePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ActivationKey
	}).(pulumi.StringPtrOutput)
}

// The status of the HCX Enterprise Site
func (o HcxEnterpriseSitePropertiesResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HcxEnterpriseSitePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// vCenter Single Sign On Identity Source
type IdentitySource struct {
	// The domain's NetBIOS name
	Alias *string `pulumi:"alias"`
	// The base distinguished name for groups
	BaseGroupDN *string `pulumi:"baseGroupDN"`
	// The base distinguished name for users
	BaseUserDN *string `pulumi:"baseUserDN"`
	// The domain's dns name
	Domain *string `pulumi:"domain"`
	// The name of the identity source
	Name *string `pulumi:"name"`
	// The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
	Password *string `pulumi:"password"`
	// Primary server URL
	PrimaryServer *string `pulumi:"primaryServer"`
	// Secondary server URL
	SecondaryServer *string `pulumi:"secondaryServer"`
	// Protect LDAP communication using SSL certificate (LDAPS)
	Ssl *string `pulumi:"ssl"`
	// The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
	Username *string `pulumi:"username"`
}

// IdentitySourceInput is an input type that accepts IdentitySourceArgs and IdentitySourceOutput values.
// You can construct a concrete instance of `IdentitySourceInput` via:
//
//          IdentitySourceArgs{...}
type IdentitySourceInput interface {
	pulumi.Input

	ToIdentitySourceOutput() IdentitySourceOutput
	ToIdentitySourceOutputWithContext(context.Context) IdentitySourceOutput
}

// vCenter Single Sign On Identity Source
type IdentitySourceArgs struct {
	// The domain's NetBIOS name
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// The base distinguished name for groups
	BaseGroupDN pulumi.StringPtrInput `pulumi:"baseGroupDN"`
	// The base distinguished name for users
	BaseUserDN pulumi.StringPtrInput `pulumi:"baseUserDN"`
	// The domain's dns name
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// The name of the identity source
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Primary server URL
	PrimaryServer pulumi.StringPtrInput `pulumi:"primaryServer"`
	// Secondary server URL
	SecondaryServer pulumi.StringPtrInput `pulumi:"secondaryServer"`
	// Protect LDAP communication using SSL certificate (LDAPS)
	Ssl pulumi.StringPtrInput `pulumi:"ssl"`
	// The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (IdentitySourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySource)(nil)).Elem()
}

func (i IdentitySourceArgs) ToIdentitySourceOutput() IdentitySourceOutput {
	return i.ToIdentitySourceOutputWithContext(context.Background())
}

func (i IdentitySourceArgs) ToIdentitySourceOutputWithContext(ctx context.Context) IdentitySourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceOutput)
}

// IdentitySourceArrayInput is an input type that accepts IdentitySourceArray and IdentitySourceArrayOutput values.
// You can construct a concrete instance of `IdentitySourceArrayInput` via:
//
//          IdentitySourceArray{ IdentitySourceArgs{...} }
type IdentitySourceArrayInput interface {
	pulumi.Input

	ToIdentitySourceArrayOutput() IdentitySourceArrayOutput
	ToIdentitySourceArrayOutputWithContext(context.Context) IdentitySourceArrayOutput
}

type IdentitySourceArray []IdentitySourceInput

func (IdentitySourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentitySource)(nil)).Elem()
}

func (i IdentitySourceArray) ToIdentitySourceArrayOutput() IdentitySourceArrayOutput {
	return i.ToIdentitySourceArrayOutputWithContext(context.Background())
}

func (i IdentitySourceArray) ToIdentitySourceArrayOutputWithContext(ctx context.Context) IdentitySourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceArrayOutput)
}

// vCenter Single Sign On Identity Source
type IdentitySourceOutput struct{ *pulumi.OutputState }

func (IdentitySourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySource)(nil)).Elem()
}

func (o IdentitySourceOutput) ToIdentitySourceOutput() IdentitySourceOutput {
	return o
}

func (o IdentitySourceOutput) ToIdentitySourceOutputWithContext(ctx context.Context) IdentitySourceOutput {
	return o
}

// The domain's NetBIOS name
func (o IdentitySourceOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// The base distinguished name for groups
func (o IdentitySourceOutput) BaseGroupDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.BaseGroupDN }).(pulumi.StringPtrOutput)
}

// The base distinguished name for users
func (o IdentitySourceOutput) BaseUserDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.BaseUserDN }).(pulumi.StringPtrOutput)
}

// The domain's dns name
func (o IdentitySourceOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The name of the identity source
func (o IdentitySourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
func (o IdentitySourceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Primary server URL
func (o IdentitySourceOutput) PrimaryServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.PrimaryServer }).(pulumi.StringPtrOutput)
}

// Secondary server URL
func (o IdentitySourceOutput) SecondaryServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.SecondaryServer }).(pulumi.StringPtrOutput)
}

// Protect LDAP communication using SSL certificate (LDAPS)
func (o IdentitySourceOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

// The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
func (o IdentitySourceOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySource) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type IdentitySourceArrayOutput struct{ *pulumi.OutputState }

func (IdentitySourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentitySource)(nil)).Elem()
}

func (o IdentitySourceArrayOutput) ToIdentitySourceArrayOutput() IdentitySourceArrayOutput {
	return o
}

func (o IdentitySourceArrayOutput) ToIdentitySourceArrayOutputWithContext(ctx context.Context) IdentitySourceArrayOutput {
	return o
}

func (o IdentitySourceArrayOutput) Index(i pulumi.IntInput) IdentitySourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentitySource {
		return vs[0].([]IdentitySource)[vs[1].(int)]
	}).(IdentitySourceOutput)
}

// vCenter Single Sign On Identity Source
type IdentitySourceResponse struct {
	// The domain's NetBIOS name
	Alias *string `pulumi:"alias"`
	// The base distinguished name for groups
	BaseGroupDN *string `pulumi:"baseGroupDN"`
	// The base distinguished name for users
	BaseUserDN *string `pulumi:"baseUserDN"`
	// The domain's dns name
	Domain *string `pulumi:"domain"`
	// The name of the identity source
	Name *string `pulumi:"name"`
	// The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
	Password *string `pulumi:"password"`
	// Primary server URL
	PrimaryServer *string `pulumi:"primaryServer"`
	// Secondary server URL
	SecondaryServer *string `pulumi:"secondaryServer"`
	// Protect LDAP communication using SSL certificate (LDAPS)
	Ssl *string `pulumi:"ssl"`
	// The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
	Username *string `pulumi:"username"`
}

// IdentitySourceResponseInput is an input type that accepts IdentitySourceResponseArgs and IdentitySourceResponseOutput values.
// You can construct a concrete instance of `IdentitySourceResponseInput` via:
//
//          IdentitySourceResponseArgs{...}
type IdentitySourceResponseInput interface {
	pulumi.Input

	ToIdentitySourceResponseOutput() IdentitySourceResponseOutput
	ToIdentitySourceResponseOutputWithContext(context.Context) IdentitySourceResponseOutput
}

// vCenter Single Sign On Identity Source
type IdentitySourceResponseArgs struct {
	// The domain's NetBIOS name
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// The base distinguished name for groups
	BaseGroupDN pulumi.StringPtrInput `pulumi:"baseGroupDN"`
	// The base distinguished name for users
	BaseUserDN pulumi.StringPtrInput `pulumi:"baseUserDN"`
	// The domain's dns name
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// The name of the identity source
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Primary server URL
	PrimaryServer pulumi.StringPtrInput `pulumi:"primaryServer"`
	// Secondary server URL
	SecondaryServer pulumi.StringPtrInput `pulumi:"secondaryServer"`
	// Protect LDAP communication using SSL certificate (LDAPS)
	Ssl pulumi.StringPtrInput `pulumi:"ssl"`
	// The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (IdentitySourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceResponse)(nil)).Elem()
}

func (i IdentitySourceResponseArgs) ToIdentitySourceResponseOutput() IdentitySourceResponseOutput {
	return i.ToIdentitySourceResponseOutputWithContext(context.Background())
}

func (i IdentitySourceResponseArgs) ToIdentitySourceResponseOutputWithContext(ctx context.Context) IdentitySourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceResponseOutput)
}

// IdentitySourceResponseArrayInput is an input type that accepts IdentitySourceResponseArray and IdentitySourceResponseArrayOutput values.
// You can construct a concrete instance of `IdentitySourceResponseArrayInput` via:
//
//          IdentitySourceResponseArray{ IdentitySourceResponseArgs{...} }
type IdentitySourceResponseArrayInput interface {
	pulumi.Input

	ToIdentitySourceResponseArrayOutput() IdentitySourceResponseArrayOutput
	ToIdentitySourceResponseArrayOutputWithContext(context.Context) IdentitySourceResponseArrayOutput
}

type IdentitySourceResponseArray []IdentitySourceResponseInput

func (IdentitySourceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentitySourceResponse)(nil)).Elem()
}

func (i IdentitySourceResponseArray) ToIdentitySourceResponseArrayOutput() IdentitySourceResponseArrayOutput {
	return i.ToIdentitySourceResponseArrayOutputWithContext(context.Background())
}

func (i IdentitySourceResponseArray) ToIdentitySourceResponseArrayOutputWithContext(ctx context.Context) IdentitySourceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentitySourceResponseArrayOutput)
}

// vCenter Single Sign On Identity Source
type IdentitySourceResponseOutput struct{ *pulumi.OutputState }

func (IdentitySourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentitySourceResponse)(nil)).Elem()
}

func (o IdentitySourceResponseOutput) ToIdentitySourceResponseOutput() IdentitySourceResponseOutput {
	return o
}

func (o IdentitySourceResponseOutput) ToIdentitySourceResponseOutputWithContext(ctx context.Context) IdentitySourceResponseOutput {
	return o
}

// The domain's NetBIOS name
func (o IdentitySourceResponseOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// The base distinguished name for groups
func (o IdentitySourceResponseOutput) BaseGroupDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.BaseGroupDN }).(pulumi.StringPtrOutput)
}

// The base distinguished name for users
func (o IdentitySourceResponseOutput) BaseUserDN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.BaseUserDN }).(pulumi.StringPtrOutput)
}

// The domain's dns name
func (o IdentitySourceResponseOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The name of the identity source
func (o IdentitySourceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
func (o IdentitySourceResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Primary server URL
func (o IdentitySourceResponseOutput) PrimaryServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.PrimaryServer }).(pulumi.StringPtrOutput)
}

// Secondary server URL
func (o IdentitySourceResponseOutput) SecondaryServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.SecondaryServer }).(pulumi.StringPtrOutput)
}

// Protect LDAP communication using SSL certificate (LDAPS)
func (o IdentitySourceResponseOutput) Ssl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Ssl }).(pulumi.StringPtrOutput)
}

// The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
func (o IdentitySourceResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentitySourceResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type IdentitySourceResponseArrayOutput struct{ *pulumi.OutputState }

func (IdentitySourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentitySourceResponse)(nil)).Elem()
}

func (o IdentitySourceResponseArrayOutput) ToIdentitySourceResponseArrayOutput() IdentitySourceResponseArrayOutput {
	return o
}

func (o IdentitySourceResponseArrayOutput) ToIdentitySourceResponseArrayOutputWithContext(ctx context.Context) IdentitySourceResponseArrayOutput {
	return o
}

func (o IdentitySourceResponseArrayOutput) Index(i pulumi.IntInput) IdentitySourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentitySourceResponse {
		return vs[0].([]IdentitySourceResponse)[vs[1].(int)]
	}).(IdentitySourceResponseOutput)
}

// The properties of a default cluster
type ManagementCluster struct {
	// The cluster size
	ClusterSize int `pulumi:"clusterSize"`
}

// ManagementClusterInput is an input type that accepts ManagementClusterArgs and ManagementClusterOutput values.
// You can construct a concrete instance of `ManagementClusterInput` via:
//
//          ManagementClusterArgs{...}
type ManagementClusterInput interface {
	pulumi.Input

	ToManagementClusterOutput() ManagementClusterOutput
	ToManagementClusterOutputWithContext(context.Context) ManagementClusterOutput
}

// The properties of a default cluster
type ManagementClusterArgs struct {
	// The cluster size
	ClusterSize pulumi.IntInput `pulumi:"clusterSize"`
}

func (ManagementClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementCluster)(nil)).Elem()
}

func (i ManagementClusterArgs) ToManagementClusterOutput() ManagementClusterOutput {
	return i.ToManagementClusterOutputWithContext(context.Background())
}

func (i ManagementClusterArgs) ToManagementClusterOutputWithContext(ctx context.Context) ManagementClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementClusterOutput)
}

func (i ManagementClusterArgs) ToManagementClusterPtrOutput() ManagementClusterPtrOutput {
	return i.ToManagementClusterPtrOutputWithContext(context.Background())
}

func (i ManagementClusterArgs) ToManagementClusterPtrOutputWithContext(ctx context.Context) ManagementClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementClusterOutput).ToManagementClusterPtrOutputWithContext(ctx)
}

// ManagementClusterPtrInput is an input type that accepts ManagementClusterArgs, ManagementClusterPtr and ManagementClusterPtrOutput values.
// You can construct a concrete instance of `ManagementClusterPtrInput` via:
//
//          ManagementClusterArgs{...}
//
//  or:
//
//          nil
type ManagementClusterPtrInput interface {
	pulumi.Input

	ToManagementClusterPtrOutput() ManagementClusterPtrOutput
	ToManagementClusterPtrOutputWithContext(context.Context) ManagementClusterPtrOutput
}

type managementClusterPtrType ManagementClusterArgs

func ManagementClusterPtr(v *ManagementClusterArgs) ManagementClusterPtrInput {
	return (*managementClusterPtrType)(v)
}

func (*managementClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementCluster)(nil)).Elem()
}

func (i *managementClusterPtrType) ToManagementClusterPtrOutput() ManagementClusterPtrOutput {
	return i.ToManagementClusterPtrOutputWithContext(context.Background())
}

func (i *managementClusterPtrType) ToManagementClusterPtrOutputWithContext(ctx context.Context) ManagementClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementClusterPtrOutput)
}

// The properties of a default cluster
type ManagementClusterOutput struct{ *pulumi.OutputState }

func (ManagementClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementCluster)(nil)).Elem()
}

func (o ManagementClusterOutput) ToManagementClusterOutput() ManagementClusterOutput {
	return o
}

func (o ManagementClusterOutput) ToManagementClusterOutputWithContext(ctx context.Context) ManagementClusterOutput {
	return o
}

func (o ManagementClusterOutput) ToManagementClusterPtrOutput() ManagementClusterPtrOutput {
	return o.ToManagementClusterPtrOutputWithContext(context.Background())
}

func (o ManagementClusterOutput) ToManagementClusterPtrOutputWithContext(ctx context.Context) ManagementClusterPtrOutput {
	return o.ApplyT(func(v ManagementCluster) *ManagementCluster {
		return &v
	}).(ManagementClusterPtrOutput)
}

// The cluster size
func (o ManagementClusterOutput) ClusterSize() pulumi.IntOutput {
	return o.ApplyT(func(v ManagementCluster) int { return v.ClusterSize }).(pulumi.IntOutput)
}

type ManagementClusterPtrOutput struct{ *pulumi.OutputState }

func (ManagementClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementCluster)(nil)).Elem()
}

func (o ManagementClusterPtrOutput) ToManagementClusterPtrOutput() ManagementClusterPtrOutput {
	return o
}

func (o ManagementClusterPtrOutput) ToManagementClusterPtrOutputWithContext(ctx context.Context) ManagementClusterPtrOutput {
	return o
}

func (o ManagementClusterPtrOutput) Elem() ManagementClusterOutput {
	return o.ApplyT(func(v *ManagementCluster) ManagementCluster { return *v }).(ManagementClusterOutput)
}

// The cluster size
func (o ManagementClusterPtrOutput) ClusterSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagementCluster) *int {
		if v == nil {
			return nil
		}
		return &v.ClusterSize
	}).(pulumi.IntPtrOutput)
}

// The properties of a default cluster
type ManagementClusterResponse struct {
	// The identity
	ClusterId int `pulumi:"clusterId"`
	// The cluster size
	ClusterSize int `pulumi:"clusterSize"`
	// The hosts
	Hosts []string `pulumi:"hosts"`
}

// ManagementClusterResponseInput is an input type that accepts ManagementClusterResponseArgs and ManagementClusterResponseOutput values.
// You can construct a concrete instance of `ManagementClusterResponseInput` via:
//
//          ManagementClusterResponseArgs{...}
type ManagementClusterResponseInput interface {
	pulumi.Input

	ToManagementClusterResponseOutput() ManagementClusterResponseOutput
	ToManagementClusterResponseOutputWithContext(context.Context) ManagementClusterResponseOutput
}

// The properties of a default cluster
type ManagementClusterResponseArgs struct {
	// The identity
	ClusterId pulumi.IntInput `pulumi:"clusterId"`
	// The cluster size
	ClusterSize pulumi.IntInput `pulumi:"clusterSize"`
	// The hosts
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
}

func (ManagementClusterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementClusterResponse)(nil)).Elem()
}

func (i ManagementClusterResponseArgs) ToManagementClusterResponseOutput() ManagementClusterResponseOutput {
	return i.ToManagementClusterResponseOutputWithContext(context.Background())
}

func (i ManagementClusterResponseArgs) ToManagementClusterResponseOutputWithContext(ctx context.Context) ManagementClusterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementClusterResponseOutput)
}

func (i ManagementClusterResponseArgs) ToManagementClusterResponsePtrOutput() ManagementClusterResponsePtrOutput {
	return i.ToManagementClusterResponsePtrOutputWithContext(context.Background())
}

func (i ManagementClusterResponseArgs) ToManagementClusterResponsePtrOutputWithContext(ctx context.Context) ManagementClusterResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementClusterResponseOutput).ToManagementClusterResponsePtrOutputWithContext(ctx)
}

// ManagementClusterResponsePtrInput is an input type that accepts ManagementClusterResponseArgs, ManagementClusterResponsePtr and ManagementClusterResponsePtrOutput values.
// You can construct a concrete instance of `ManagementClusterResponsePtrInput` via:
//
//          ManagementClusterResponseArgs{...}
//
//  or:
//
//          nil
type ManagementClusterResponsePtrInput interface {
	pulumi.Input

	ToManagementClusterResponsePtrOutput() ManagementClusterResponsePtrOutput
	ToManagementClusterResponsePtrOutputWithContext(context.Context) ManagementClusterResponsePtrOutput
}

type managementClusterResponsePtrType ManagementClusterResponseArgs

func ManagementClusterResponsePtr(v *ManagementClusterResponseArgs) ManagementClusterResponsePtrInput {
	return (*managementClusterResponsePtrType)(v)
}

func (*managementClusterResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementClusterResponse)(nil)).Elem()
}

func (i *managementClusterResponsePtrType) ToManagementClusterResponsePtrOutput() ManagementClusterResponsePtrOutput {
	return i.ToManagementClusterResponsePtrOutputWithContext(context.Background())
}

func (i *managementClusterResponsePtrType) ToManagementClusterResponsePtrOutputWithContext(ctx context.Context) ManagementClusterResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementClusterResponsePtrOutput)
}

// The properties of a default cluster
type ManagementClusterResponseOutput struct{ *pulumi.OutputState }

func (ManagementClusterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementClusterResponse)(nil)).Elem()
}

func (o ManagementClusterResponseOutput) ToManagementClusterResponseOutput() ManagementClusterResponseOutput {
	return o
}

func (o ManagementClusterResponseOutput) ToManagementClusterResponseOutputWithContext(ctx context.Context) ManagementClusterResponseOutput {
	return o
}

func (o ManagementClusterResponseOutput) ToManagementClusterResponsePtrOutput() ManagementClusterResponsePtrOutput {
	return o.ToManagementClusterResponsePtrOutputWithContext(context.Background())
}

func (o ManagementClusterResponseOutput) ToManagementClusterResponsePtrOutputWithContext(ctx context.Context) ManagementClusterResponsePtrOutput {
	return o.ApplyT(func(v ManagementClusterResponse) *ManagementClusterResponse {
		return &v
	}).(ManagementClusterResponsePtrOutput)
}

// The identity
func (o ManagementClusterResponseOutput) ClusterId() pulumi.IntOutput {
	return o.ApplyT(func(v ManagementClusterResponse) int { return v.ClusterId }).(pulumi.IntOutput)
}

// The cluster size
func (o ManagementClusterResponseOutput) ClusterSize() pulumi.IntOutput {
	return o.ApplyT(func(v ManagementClusterResponse) int { return v.ClusterSize }).(pulumi.IntOutput)
}

// The hosts
func (o ManagementClusterResponseOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagementClusterResponse) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

type ManagementClusterResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagementClusterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementClusterResponse)(nil)).Elem()
}

func (o ManagementClusterResponsePtrOutput) ToManagementClusterResponsePtrOutput() ManagementClusterResponsePtrOutput {
	return o
}

func (o ManagementClusterResponsePtrOutput) ToManagementClusterResponsePtrOutputWithContext(ctx context.Context) ManagementClusterResponsePtrOutput {
	return o
}

func (o ManagementClusterResponsePtrOutput) Elem() ManagementClusterResponseOutput {
	return o.ApplyT(func(v *ManagementClusterResponse) ManagementClusterResponse { return *v }).(ManagementClusterResponseOutput)
}

// The identity
func (o ManagementClusterResponsePtrOutput) ClusterId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagementClusterResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ClusterId
	}).(pulumi.IntPtrOutput)
}

// The cluster size
func (o ManagementClusterResponsePtrOutput) ClusterSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagementClusterResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ClusterSize
	}).(pulumi.IntPtrOutput)
}

// The hosts
func (o ManagementClusterResponsePtrOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagementClusterResponse) []string {
		if v == nil {
			return nil
		}
		return v.Hosts
	}).(pulumi.StringArrayOutput)
}

// A private cloud resource
type PrivateCloudType struct {
	// Resource location
	Location string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The properties of a private cloud resource
	Properties PrivateCloudPropertiesResponse `pulumi:"properties"`
	// The private cloud SKU
	Sku SkuResponse `pulumi:"sku"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// PrivateCloudTypeInput is an input type that accepts PrivateCloudTypeArgs and PrivateCloudTypeOutput values.
// You can construct a concrete instance of `PrivateCloudTypeInput` via:
//
//          PrivateCloudTypeArgs{...}
type PrivateCloudTypeInput interface {
	pulumi.Input

	ToPrivateCloudTypeOutput() PrivateCloudTypeOutput
	ToPrivateCloudTypeOutputWithContext(context.Context) PrivateCloudTypeOutput
}

// A private cloud resource
type PrivateCloudTypeArgs struct {
	// Resource location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of a private cloud resource
	Properties PrivateCloudPropertiesResponseInput `pulumi:"properties"`
	// The private cloud SKU
	Sku SkuResponseInput `pulumi:"sku"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PrivateCloudTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateCloudType)(nil)).Elem()
}

func (i PrivateCloudTypeArgs) ToPrivateCloudTypeOutput() PrivateCloudTypeOutput {
	return i.ToPrivateCloudTypeOutputWithContext(context.Background())
}

func (i PrivateCloudTypeArgs) ToPrivateCloudTypeOutputWithContext(ctx context.Context) PrivateCloudTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateCloudTypeOutput)
}

// A private cloud resource
type PrivateCloudTypeOutput struct{ *pulumi.OutputState }

func (PrivateCloudTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateCloudType)(nil)).Elem()
}

func (o PrivateCloudTypeOutput) ToPrivateCloudTypeOutput() PrivateCloudTypeOutput {
	return o
}

func (o PrivateCloudTypeOutput) ToPrivateCloudTypeOutputWithContext(ctx context.Context) PrivateCloudTypeOutput {
	return o
}

// Resource location
func (o PrivateCloudTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateCloudType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name.
func (o PrivateCloudTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateCloudType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of a private cloud resource
func (o PrivateCloudTypeOutput) Properties() PrivateCloudPropertiesResponseOutput {
	return o.ApplyT(func(v PrivateCloudType) PrivateCloudPropertiesResponse { return v.Properties }).(PrivateCloudPropertiesResponseOutput)
}

// The private cloud SKU
func (o PrivateCloudTypeOutput) Sku() SkuResponseOutput {
	return o.ApplyT(func(v PrivateCloudType) SkuResponse { return v.Sku }).(SkuResponseOutput)
}

// Resource tags
func (o PrivateCloudTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PrivateCloudType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o PrivateCloudTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateCloudType) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of a private cloud resource
type PrivateCloudProperties struct {
	// An ExpressRoute Circuit
	Circuit *Circuit `pulumi:"circuit"`
	// vCenter Single Sign On Identity Sources
	IdentitySources []IdentitySource `pulumi:"identitySources"`
	// Connectivity to internet is enabled or disabled
	Internet *string `pulumi:"internet"`
	// The default cluster used for management
	ManagementCluster ManagementCluster `pulumi:"managementCluster"`
	// The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22
	NetworkBlock string `pulumi:"networkBlock"`
	// Optionally, set the NSX-T Manager password when the private cloud is created
	NsxtPassword *string `pulumi:"nsxtPassword"`
	// Optionally, set the vCenter admin password when the private cloud is created
	VcenterPassword *string `pulumi:"vcenterPassword"`
}

// PrivateCloudPropertiesInput is an input type that accepts PrivateCloudPropertiesArgs and PrivateCloudPropertiesOutput values.
// You can construct a concrete instance of `PrivateCloudPropertiesInput` via:
//
//          PrivateCloudPropertiesArgs{...}
type PrivateCloudPropertiesInput interface {
	pulumi.Input

	ToPrivateCloudPropertiesOutput() PrivateCloudPropertiesOutput
	ToPrivateCloudPropertiesOutputWithContext(context.Context) PrivateCloudPropertiesOutput
}

// The properties of a private cloud resource
type PrivateCloudPropertiesArgs struct {
	// An ExpressRoute Circuit
	Circuit CircuitPtrInput `pulumi:"circuit"`
	// vCenter Single Sign On Identity Sources
	IdentitySources IdentitySourceArrayInput `pulumi:"identitySources"`
	// Connectivity to internet is enabled or disabled
	Internet pulumi.StringPtrInput `pulumi:"internet"`
	// The default cluster used for management
	ManagementCluster ManagementClusterInput `pulumi:"managementCluster"`
	// The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22
	NetworkBlock pulumi.StringInput `pulumi:"networkBlock"`
	// Optionally, set the NSX-T Manager password when the private cloud is created
	NsxtPassword pulumi.StringPtrInput `pulumi:"nsxtPassword"`
	// Optionally, set the vCenter admin password when the private cloud is created
	VcenterPassword pulumi.StringPtrInput `pulumi:"vcenterPassword"`
}

func (PrivateCloudPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateCloudProperties)(nil)).Elem()
}

func (i PrivateCloudPropertiesArgs) ToPrivateCloudPropertiesOutput() PrivateCloudPropertiesOutput {
	return i.ToPrivateCloudPropertiesOutputWithContext(context.Background())
}

func (i PrivateCloudPropertiesArgs) ToPrivateCloudPropertiesOutputWithContext(ctx context.Context) PrivateCloudPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateCloudPropertiesOutput)
}

func (i PrivateCloudPropertiesArgs) ToPrivateCloudPropertiesPtrOutput() PrivateCloudPropertiesPtrOutput {
	return i.ToPrivateCloudPropertiesPtrOutputWithContext(context.Background())
}

func (i PrivateCloudPropertiesArgs) ToPrivateCloudPropertiesPtrOutputWithContext(ctx context.Context) PrivateCloudPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateCloudPropertiesOutput).ToPrivateCloudPropertiesPtrOutputWithContext(ctx)
}

// PrivateCloudPropertiesPtrInput is an input type that accepts PrivateCloudPropertiesArgs, PrivateCloudPropertiesPtr and PrivateCloudPropertiesPtrOutput values.
// You can construct a concrete instance of `PrivateCloudPropertiesPtrInput` via:
//
//          PrivateCloudPropertiesArgs{...}
//
//  or:
//
//          nil
type PrivateCloudPropertiesPtrInput interface {
	pulumi.Input

	ToPrivateCloudPropertiesPtrOutput() PrivateCloudPropertiesPtrOutput
	ToPrivateCloudPropertiesPtrOutputWithContext(context.Context) PrivateCloudPropertiesPtrOutput
}

type privateCloudPropertiesPtrType PrivateCloudPropertiesArgs

func PrivateCloudPropertiesPtr(v *PrivateCloudPropertiesArgs) PrivateCloudPropertiesPtrInput {
	return (*privateCloudPropertiesPtrType)(v)
}

func (*privateCloudPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateCloudProperties)(nil)).Elem()
}

func (i *privateCloudPropertiesPtrType) ToPrivateCloudPropertiesPtrOutput() PrivateCloudPropertiesPtrOutput {
	return i.ToPrivateCloudPropertiesPtrOutputWithContext(context.Background())
}

func (i *privateCloudPropertiesPtrType) ToPrivateCloudPropertiesPtrOutputWithContext(ctx context.Context) PrivateCloudPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateCloudPropertiesPtrOutput)
}

// The properties of a private cloud resource
type PrivateCloudPropertiesOutput struct{ *pulumi.OutputState }

func (PrivateCloudPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateCloudProperties)(nil)).Elem()
}

func (o PrivateCloudPropertiesOutput) ToPrivateCloudPropertiesOutput() PrivateCloudPropertiesOutput {
	return o
}

func (o PrivateCloudPropertiesOutput) ToPrivateCloudPropertiesOutputWithContext(ctx context.Context) PrivateCloudPropertiesOutput {
	return o
}

func (o PrivateCloudPropertiesOutput) ToPrivateCloudPropertiesPtrOutput() PrivateCloudPropertiesPtrOutput {
	return o.ToPrivateCloudPropertiesPtrOutputWithContext(context.Background())
}

func (o PrivateCloudPropertiesOutput) ToPrivateCloudPropertiesPtrOutputWithContext(ctx context.Context) PrivateCloudPropertiesPtrOutput {
	return o.ApplyT(func(v PrivateCloudProperties) *PrivateCloudProperties {
		return &v
	}).(PrivateCloudPropertiesPtrOutput)
}

// An ExpressRoute Circuit
func (o PrivateCloudPropertiesOutput) Circuit() CircuitPtrOutput {
	return o.ApplyT(func(v PrivateCloudProperties) *Circuit { return v.Circuit }).(CircuitPtrOutput)
}

// vCenter Single Sign On Identity Sources
func (o PrivateCloudPropertiesOutput) IdentitySources() IdentitySourceArrayOutput {
	return o.ApplyT(func(v PrivateCloudProperties) []IdentitySource { return v.IdentitySources }).(IdentitySourceArrayOutput)
}

// Connectivity to internet is enabled or disabled
func (o PrivateCloudPropertiesOutput) Internet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateCloudProperties) *string { return v.Internet }).(pulumi.StringPtrOutput)
}

// The default cluster used for management
func (o PrivateCloudPropertiesOutput) ManagementCluster() ManagementClusterOutput {
	return o.ApplyT(func(v PrivateCloudProperties) ManagementCluster { return v.ManagementCluster }).(ManagementClusterOutput)
}

// The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22
func (o PrivateCloudPropertiesOutput) NetworkBlock() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateCloudProperties) string { return v.NetworkBlock }).(pulumi.StringOutput)
}

// Optionally, set the NSX-T Manager password when the private cloud is created
func (o PrivateCloudPropertiesOutput) NsxtPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateCloudProperties) *string { return v.NsxtPassword }).(pulumi.StringPtrOutput)
}

// Optionally, set the vCenter admin password when the private cloud is created
func (o PrivateCloudPropertiesOutput) VcenterPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateCloudProperties) *string { return v.VcenterPassword }).(pulumi.StringPtrOutput)
}

type PrivateCloudPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PrivateCloudPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateCloudProperties)(nil)).Elem()
}

func (o PrivateCloudPropertiesPtrOutput) ToPrivateCloudPropertiesPtrOutput() PrivateCloudPropertiesPtrOutput {
	return o
}

func (o PrivateCloudPropertiesPtrOutput) ToPrivateCloudPropertiesPtrOutputWithContext(ctx context.Context) PrivateCloudPropertiesPtrOutput {
	return o
}

func (o PrivateCloudPropertiesPtrOutput) Elem() PrivateCloudPropertiesOutput {
	return o.ApplyT(func(v *PrivateCloudProperties) PrivateCloudProperties { return *v }).(PrivateCloudPropertiesOutput)
}

// An ExpressRoute Circuit
func (o PrivateCloudPropertiesPtrOutput) Circuit() CircuitPtrOutput {
	return o.ApplyT(func(v *PrivateCloudProperties) *Circuit {
		if v == nil {
			return nil
		}
		return v.Circuit
	}).(CircuitPtrOutput)
}

// vCenter Single Sign On Identity Sources
func (o PrivateCloudPropertiesPtrOutput) IdentitySources() IdentitySourceArrayOutput {
	return o.ApplyT(func(v *PrivateCloudProperties) []IdentitySource {
		if v == nil {
			return nil
		}
		return v.IdentitySources
	}).(IdentitySourceArrayOutput)
}

// Connectivity to internet is enabled or disabled
func (o PrivateCloudPropertiesPtrOutput) Internet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateCloudProperties) *string {
		if v == nil {
			return nil
		}
		return v.Internet
	}).(pulumi.StringPtrOutput)
}

// The default cluster used for management
func (o PrivateCloudPropertiesPtrOutput) ManagementCluster() ManagementClusterPtrOutput {
	return o.ApplyT(func(v *PrivateCloudProperties) *ManagementCluster {
		if v == nil {
			return nil
		}
		return &v.ManagementCluster
	}).(ManagementClusterPtrOutput)
}

// The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22
func (o PrivateCloudPropertiesPtrOutput) NetworkBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateCloudProperties) *string {
		if v == nil {
			return nil
		}
		return &v.NetworkBlock
	}).(pulumi.StringPtrOutput)
}

// Optionally, set the NSX-T Manager password when the private cloud is created
func (o PrivateCloudPropertiesPtrOutput) NsxtPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateCloudProperties) *string {
		if v == nil {
			return nil
		}
		return v.NsxtPassword
	}).(pulumi.StringPtrOutput)
}

// Optionally, set the vCenter admin password when the private cloud is created
func (o PrivateCloudPropertiesPtrOutput) VcenterPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateCloudProperties) *string {
		if v == nil {
			return nil
		}
		return v.VcenterPassword
	}).(pulumi.StringPtrOutput)
}

// The properties of a private cloud resource
type PrivateCloudPropertiesResponse struct {
	// An ExpressRoute Circuit
	Circuit *CircuitResponse `pulumi:"circuit"`
	// The endpoints
	Endpoints EndpointsResponse `pulumi:"endpoints"`
	// vCenter Single Sign On Identity Sources
	IdentitySources []IdentitySourceResponse `pulumi:"identitySources"`
	// Connectivity to internet is enabled or disabled
	Internet *string `pulumi:"internet"`
	// The default cluster used for management
	ManagementCluster ManagementClusterResponse `pulumi:"managementCluster"`
	// Network used to access vCenter Server and NSX-T Manager
	ManagementNetwork string `pulumi:"managementNetwork"`
	// The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22
	NetworkBlock string `pulumi:"networkBlock"`
	// Thumbprint of the NSX-T Manager SSL certificate
	NsxtCertificateThumbprint string `pulumi:"nsxtCertificateThumbprint"`
	// Optionally, set the NSX-T Manager password when the private cloud is created
	NsxtPassword *string `pulumi:"nsxtPassword"`
	// Used for virtual machine cold migration, cloning, and snapshot migration
	ProvisioningNetwork string `pulumi:"provisioningNetwork"`
	// The provisioning state
	ProvisioningState string `pulumi:"provisioningState"`
	// Thumbprint of the vCenter Server SSL certificate
	VcenterCertificateThumbprint string `pulumi:"vcenterCertificateThumbprint"`
	// Optionally, set the vCenter admin password when the private cloud is created
	VcenterPassword *string `pulumi:"vcenterPassword"`
	// Used for live migration of virtual machines
	VmotionNetwork string `pulumi:"vmotionNetwork"`
}

// PrivateCloudPropertiesResponseInput is an input type that accepts PrivateCloudPropertiesResponseArgs and PrivateCloudPropertiesResponseOutput values.
// You can construct a concrete instance of `PrivateCloudPropertiesResponseInput` via:
//
//          PrivateCloudPropertiesResponseArgs{...}
type PrivateCloudPropertiesResponseInput interface {
	pulumi.Input

	ToPrivateCloudPropertiesResponseOutput() PrivateCloudPropertiesResponseOutput
	ToPrivateCloudPropertiesResponseOutputWithContext(context.Context) PrivateCloudPropertiesResponseOutput
}

// The properties of a private cloud resource
type PrivateCloudPropertiesResponseArgs struct {
	// An ExpressRoute Circuit
	Circuit CircuitResponsePtrInput `pulumi:"circuit"`
	// The endpoints
	Endpoints EndpointsResponseInput `pulumi:"endpoints"`
	// vCenter Single Sign On Identity Sources
	IdentitySources IdentitySourceResponseArrayInput `pulumi:"identitySources"`
	// Connectivity to internet is enabled or disabled
	Internet pulumi.StringPtrInput `pulumi:"internet"`
	// The default cluster used for management
	ManagementCluster ManagementClusterResponseInput `pulumi:"managementCluster"`
	// Network used to access vCenter Server and NSX-T Manager
	ManagementNetwork pulumi.StringInput `pulumi:"managementNetwork"`
	// The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22
	NetworkBlock pulumi.StringInput `pulumi:"networkBlock"`
	// Thumbprint of the NSX-T Manager SSL certificate
	NsxtCertificateThumbprint pulumi.StringInput `pulumi:"nsxtCertificateThumbprint"`
	// Optionally, set the NSX-T Manager password when the private cloud is created
	NsxtPassword pulumi.StringPtrInput `pulumi:"nsxtPassword"`
	// Used for virtual machine cold migration, cloning, and snapshot migration
	ProvisioningNetwork pulumi.StringInput `pulumi:"provisioningNetwork"`
	// The provisioning state
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Thumbprint of the vCenter Server SSL certificate
	VcenterCertificateThumbprint pulumi.StringInput `pulumi:"vcenterCertificateThumbprint"`
	// Optionally, set the vCenter admin password when the private cloud is created
	VcenterPassword pulumi.StringPtrInput `pulumi:"vcenterPassword"`
	// Used for live migration of virtual machines
	VmotionNetwork pulumi.StringInput `pulumi:"vmotionNetwork"`
}

func (PrivateCloudPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateCloudPropertiesResponse)(nil)).Elem()
}

func (i PrivateCloudPropertiesResponseArgs) ToPrivateCloudPropertiesResponseOutput() PrivateCloudPropertiesResponseOutput {
	return i.ToPrivateCloudPropertiesResponseOutputWithContext(context.Background())
}

func (i PrivateCloudPropertiesResponseArgs) ToPrivateCloudPropertiesResponseOutputWithContext(ctx context.Context) PrivateCloudPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateCloudPropertiesResponseOutput)
}

func (i PrivateCloudPropertiesResponseArgs) ToPrivateCloudPropertiesResponsePtrOutput() PrivateCloudPropertiesResponsePtrOutput {
	return i.ToPrivateCloudPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i PrivateCloudPropertiesResponseArgs) ToPrivateCloudPropertiesResponsePtrOutputWithContext(ctx context.Context) PrivateCloudPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateCloudPropertiesResponseOutput).ToPrivateCloudPropertiesResponsePtrOutputWithContext(ctx)
}

// PrivateCloudPropertiesResponsePtrInput is an input type that accepts PrivateCloudPropertiesResponseArgs, PrivateCloudPropertiesResponsePtr and PrivateCloudPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `PrivateCloudPropertiesResponsePtrInput` via:
//
//          PrivateCloudPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type PrivateCloudPropertiesResponsePtrInput interface {
	pulumi.Input

	ToPrivateCloudPropertiesResponsePtrOutput() PrivateCloudPropertiesResponsePtrOutput
	ToPrivateCloudPropertiesResponsePtrOutputWithContext(context.Context) PrivateCloudPropertiesResponsePtrOutput
}

type privateCloudPropertiesResponsePtrType PrivateCloudPropertiesResponseArgs

func PrivateCloudPropertiesResponsePtr(v *PrivateCloudPropertiesResponseArgs) PrivateCloudPropertiesResponsePtrInput {
	return (*privateCloudPropertiesResponsePtrType)(v)
}

func (*privateCloudPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateCloudPropertiesResponse)(nil)).Elem()
}

func (i *privateCloudPropertiesResponsePtrType) ToPrivateCloudPropertiesResponsePtrOutput() PrivateCloudPropertiesResponsePtrOutput {
	return i.ToPrivateCloudPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *privateCloudPropertiesResponsePtrType) ToPrivateCloudPropertiesResponsePtrOutputWithContext(ctx context.Context) PrivateCloudPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateCloudPropertiesResponsePtrOutput)
}

// The properties of a private cloud resource
type PrivateCloudPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PrivateCloudPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateCloudPropertiesResponse)(nil)).Elem()
}

func (o PrivateCloudPropertiesResponseOutput) ToPrivateCloudPropertiesResponseOutput() PrivateCloudPropertiesResponseOutput {
	return o
}

func (o PrivateCloudPropertiesResponseOutput) ToPrivateCloudPropertiesResponseOutputWithContext(ctx context.Context) PrivateCloudPropertiesResponseOutput {
	return o
}

func (o PrivateCloudPropertiesResponseOutput) ToPrivateCloudPropertiesResponsePtrOutput() PrivateCloudPropertiesResponsePtrOutput {
	return o.ToPrivateCloudPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o PrivateCloudPropertiesResponseOutput) ToPrivateCloudPropertiesResponsePtrOutputWithContext(ctx context.Context) PrivateCloudPropertiesResponsePtrOutput {
	return o.ApplyT(func(v PrivateCloudPropertiesResponse) *PrivateCloudPropertiesResponse {
		return &v
	}).(PrivateCloudPropertiesResponsePtrOutput)
}

// An ExpressRoute Circuit
func (o PrivateCloudPropertiesResponseOutput) Circuit() CircuitResponsePtrOutput {
	return o.ApplyT(func(v PrivateCloudPropertiesResponse) *CircuitResponse { return v.Circuit }).(CircuitResponsePtrOutput)
}

// The endpoints
func (o PrivateCloudPropertiesResponseOutput) Endpoints() EndpointsResponseOutput {
	return o.ApplyT(func(v PrivateCloudPropertiesResponse) EndpointsResponse { return v.Endpoints }).(EndpointsResponseOutput)
}

// vCenter Single Sign On Identity Sources
func (o PrivateCloudPropertiesResponseOutput) IdentitySources() IdentitySourceResponseArrayOutput {
	return o.ApplyT(func(v PrivateCloudPropertiesResponse) []IdentitySourceResponse { return v.IdentitySources }).(IdentitySourceResponseArrayOutput)
}

// Connectivity to internet is enabled or disabled
func (o PrivateCloudPropertiesResponseOutput) Internet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateCloudPropertiesResponse) *string { return v.Internet }).(pulumi.StringPtrOutput)
}

// The default cluster used for management
func (o PrivateCloudPropertiesResponseOutput) ManagementCluster() ManagementClusterResponseOutput {
	return o.ApplyT(func(v PrivateCloudPropertiesResponse) ManagementClusterResponse { return v.ManagementCluster }).(ManagementClusterResponseOutput)
}

// Network used to access vCenter Server and NSX-T Manager
func (o PrivateCloudPropertiesResponseOutput) ManagementNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateCloudPropertiesResponse) string { return v.ManagementNetwork }).(pulumi.StringOutput)
}

// The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22
func (o PrivateCloudPropertiesResponseOutput) NetworkBlock() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateCloudPropertiesResponse) string { return v.NetworkBlock }).(pulumi.StringOutput)
}

// Thumbprint of the NSX-T Manager SSL certificate
func (o PrivateCloudPropertiesResponseOutput) NsxtCertificateThumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateCloudPropertiesResponse) string { return v.NsxtCertificateThumbprint }).(pulumi.StringOutput)
}

// Optionally, set the NSX-T Manager password when the private cloud is created
func (o PrivateCloudPropertiesResponseOutput) NsxtPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateCloudPropertiesResponse) *string { return v.NsxtPassword }).(pulumi.StringPtrOutput)
}

// Used for virtual machine cold migration, cloning, and snapshot migration
func (o PrivateCloudPropertiesResponseOutput) ProvisioningNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateCloudPropertiesResponse) string { return v.ProvisioningNetwork }).(pulumi.StringOutput)
}

// The provisioning state
func (o PrivateCloudPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateCloudPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Thumbprint of the vCenter Server SSL certificate
func (o PrivateCloudPropertiesResponseOutput) VcenterCertificateThumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateCloudPropertiesResponse) string { return v.VcenterCertificateThumbprint }).(pulumi.StringOutput)
}

// Optionally, set the vCenter admin password when the private cloud is created
func (o PrivateCloudPropertiesResponseOutput) VcenterPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateCloudPropertiesResponse) *string { return v.VcenterPassword }).(pulumi.StringPtrOutput)
}

// Used for live migration of virtual machines
func (o PrivateCloudPropertiesResponseOutput) VmotionNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateCloudPropertiesResponse) string { return v.VmotionNetwork }).(pulumi.StringOutput)
}

type PrivateCloudPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateCloudPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateCloudPropertiesResponse)(nil)).Elem()
}

func (o PrivateCloudPropertiesResponsePtrOutput) ToPrivateCloudPropertiesResponsePtrOutput() PrivateCloudPropertiesResponsePtrOutput {
	return o
}

func (o PrivateCloudPropertiesResponsePtrOutput) ToPrivateCloudPropertiesResponsePtrOutputWithContext(ctx context.Context) PrivateCloudPropertiesResponsePtrOutput {
	return o
}

func (o PrivateCloudPropertiesResponsePtrOutput) Elem() PrivateCloudPropertiesResponseOutput {
	return o.ApplyT(func(v *PrivateCloudPropertiesResponse) PrivateCloudPropertiesResponse { return *v }).(PrivateCloudPropertiesResponseOutput)
}

// An ExpressRoute Circuit
func (o PrivateCloudPropertiesResponsePtrOutput) Circuit() CircuitResponsePtrOutput {
	return o.ApplyT(func(v *PrivateCloudPropertiesResponse) *CircuitResponse {
		if v == nil {
			return nil
		}
		return v.Circuit
	}).(CircuitResponsePtrOutput)
}

// The endpoints
func (o PrivateCloudPropertiesResponsePtrOutput) Endpoints() EndpointsResponsePtrOutput {
	return o.ApplyT(func(v *PrivateCloudPropertiesResponse) *EndpointsResponse {
		if v == nil {
			return nil
		}
		return &v.Endpoints
	}).(EndpointsResponsePtrOutput)
}

// vCenter Single Sign On Identity Sources
func (o PrivateCloudPropertiesResponsePtrOutput) IdentitySources() IdentitySourceResponseArrayOutput {
	return o.ApplyT(func(v *PrivateCloudPropertiesResponse) []IdentitySourceResponse {
		if v == nil {
			return nil
		}
		return v.IdentitySources
	}).(IdentitySourceResponseArrayOutput)
}

// Connectivity to internet is enabled or disabled
func (o PrivateCloudPropertiesResponsePtrOutput) Internet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateCloudPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Internet
	}).(pulumi.StringPtrOutput)
}

// The default cluster used for management
func (o PrivateCloudPropertiesResponsePtrOutput) ManagementCluster() ManagementClusterResponsePtrOutput {
	return o.ApplyT(func(v *PrivateCloudPropertiesResponse) *ManagementClusterResponse {
		if v == nil {
			return nil
		}
		return &v.ManagementCluster
	}).(ManagementClusterResponsePtrOutput)
}

// Network used to access vCenter Server and NSX-T Manager
func (o PrivateCloudPropertiesResponsePtrOutput) ManagementNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateCloudPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ManagementNetwork
	}).(pulumi.StringPtrOutput)
}

// The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22
func (o PrivateCloudPropertiesResponsePtrOutput) NetworkBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateCloudPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.NetworkBlock
	}).(pulumi.StringPtrOutput)
}

// Thumbprint of the NSX-T Manager SSL certificate
func (o PrivateCloudPropertiesResponsePtrOutput) NsxtCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateCloudPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.NsxtCertificateThumbprint
	}).(pulumi.StringPtrOutput)
}

// Optionally, set the NSX-T Manager password when the private cloud is created
func (o PrivateCloudPropertiesResponsePtrOutput) NsxtPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateCloudPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.NsxtPassword
	}).(pulumi.StringPtrOutput)
}

// Used for virtual machine cold migration, cloning, and snapshot migration
func (o PrivateCloudPropertiesResponsePtrOutput) ProvisioningNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateCloudPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningNetwork
	}).(pulumi.StringPtrOutput)
}

// The provisioning state
func (o PrivateCloudPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateCloudPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Thumbprint of the vCenter Server SSL certificate
func (o PrivateCloudPropertiesResponsePtrOutput) VcenterCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateCloudPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VcenterCertificateThumbprint
	}).(pulumi.StringPtrOutput)
}

// Optionally, set the vCenter admin password when the private cloud is created
func (o PrivateCloudPropertiesResponsePtrOutput) VcenterPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateCloudPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.VcenterPassword
	}).(pulumi.StringPtrOutput)
}

// Used for live migration of virtual machines
func (o PrivateCloudPropertiesResponsePtrOutput) VmotionNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateCloudPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VmotionNetwork
	}).(pulumi.StringPtrOutput)
}

// The resource model definition representing SKU
type Sku struct {
	// The name of the SKU.
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The resource model definition representing SKU
type SkuArgs struct {
	// The name of the SKU.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The resource model definition representing SKU
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The name of the SKU.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// The name of the SKU.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The resource model definition representing SKU
type SkuResponse struct {
	// The name of the SKU.
	Name string `pulumi:"name"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// The resource model definition representing SKU
type SkuResponseArgs struct {
	// The name of the SKU.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// The resource model definition representing SKU
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// The name of the SKU.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// The name of the SKU.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AuthorizationTypeOutput{})
	pulumi.RegisterOutputType(CircuitOutput{})
	pulumi.RegisterOutputType(CircuitPtrOutput{})
	pulumi.RegisterOutputType(CircuitResponseOutput{})
	pulumi.RegisterOutputType(CircuitResponsePtrOutput{})
	pulumi.RegisterOutputType(ClusterTypeOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ClusterPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(EndpointsOutput{})
	pulumi.RegisterOutputType(EndpointsResponseOutput{})
	pulumi.RegisterOutputType(EndpointsResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteAuthorizationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteAuthorizationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(HcxEnterpriseSiteTypeOutput{})
	pulumi.RegisterOutputType(HcxEnterpriseSitePropertiesResponseOutput{})
	pulumi.RegisterOutputType(HcxEnterpriseSitePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(IdentitySourceOutput{})
	pulumi.RegisterOutputType(IdentitySourceArrayOutput{})
	pulumi.RegisterOutputType(IdentitySourceResponseOutput{})
	pulumi.RegisterOutputType(IdentitySourceResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagementClusterOutput{})
	pulumi.RegisterOutputType(ManagementClusterPtrOutput{})
	pulumi.RegisterOutputType(ManagementClusterResponseOutput{})
	pulumi.RegisterOutputType(ManagementClusterResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateCloudTypeOutput{})
	pulumi.RegisterOutputType(PrivateCloudPropertiesOutput{})
	pulumi.RegisterOutputType(PrivateCloudPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PrivateCloudPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PrivateCloudPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
}
