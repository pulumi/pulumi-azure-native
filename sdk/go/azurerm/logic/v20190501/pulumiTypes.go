// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190501

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The AS2 agreement acknowledgement connection settings.
type AS2AcknowledgementConnectionSettings struct {
	// Indicates whether to ignore mismatch in certificate name.
	IgnoreCertificateNameMismatch bool `pulumi:"ignoreCertificateNameMismatch"`
	// Indicates whether to keep the connection alive.
	KeepHttpConnectionAlive bool `pulumi:"keepHttpConnectionAlive"`
	// Indicates whether to support HTTP status code 'CONTINUE'.
	SupportHttpStatusCodeContinue bool `pulumi:"supportHttpStatusCodeContinue"`
	// Indicates whether to unfold the HTTP headers.
	UnfoldHttpHeaders bool `pulumi:"unfoldHttpHeaders"`
}

// AS2AcknowledgementConnectionSettingsInput is an input type that accepts AS2AcknowledgementConnectionSettingsArgs and AS2AcknowledgementConnectionSettingsOutput values.
// You can construct a concrete instance of `AS2AcknowledgementConnectionSettingsInput` via:
//
//          AS2AcknowledgementConnectionSettingsArgs{...}
type AS2AcknowledgementConnectionSettingsInput interface {
	pulumi.Input

	ToAS2AcknowledgementConnectionSettingsOutput() AS2AcknowledgementConnectionSettingsOutput
	ToAS2AcknowledgementConnectionSettingsOutputWithContext(context.Context) AS2AcknowledgementConnectionSettingsOutput
}

// The AS2 agreement acknowledgement connection settings.
type AS2AcknowledgementConnectionSettingsArgs struct {
	// Indicates whether to ignore mismatch in certificate name.
	IgnoreCertificateNameMismatch pulumi.BoolInput `pulumi:"ignoreCertificateNameMismatch"`
	// Indicates whether to keep the connection alive.
	KeepHttpConnectionAlive pulumi.BoolInput `pulumi:"keepHttpConnectionAlive"`
	// Indicates whether to support HTTP status code 'CONTINUE'.
	SupportHttpStatusCodeContinue pulumi.BoolInput `pulumi:"supportHttpStatusCodeContinue"`
	// Indicates whether to unfold the HTTP headers.
	UnfoldHttpHeaders pulumi.BoolInput `pulumi:"unfoldHttpHeaders"`
}

func (AS2AcknowledgementConnectionSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AS2AcknowledgementConnectionSettings)(nil)).Elem()
}

func (i AS2AcknowledgementConnectionSettingsArgs) ToAS2AcknowledgementConnectionSettingsOutput() AS2AcknowledgementConnectionSettingsOutput {
	return i.ToAS2AcknowledgementConnectionSettingsOutputWithContext(context.Background())
}

func (i AS2AcknowledgementConnectionSettingsArgs) ToAS2AcknowledgementConnectionSettingsOutputWithContext(ctx context.Context) AS2AcknowledgementConnectionSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2AcknowledgementConnectionSettingsOutput)
}

func (i AS2AcknowledgementConnectionSettingsArgs) ToAS2AcknowledgementConnectionSettingsPtrOutput() AS2AcknowledgementConnectionSettingsPtrOutput {
	return i.ToAS2AcknowledgementConnectionSettingsPtrOutputWithContext(context.Background())
}

func (i AS2AcknowledgementConnectionSettingsArgs) ToAS2AcknowledgementConnectionSettingsPtrOutputWithContext(ctx context.Context) AS2AcknowledgementConnectionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2AcknowledgementConnectionSettingsOutput).ToAS2AcknowledgementConnectionSettingsPtrOutputWithContext(ctx)
}

// AS2AcknowledgementConnectionSettingsPtrInput is an input type that accepts AS2AcknowledgementConnectionSettingsArgs, AS2AcknowledgementConnectionSettingsPtr and AS2AcknowledgementConnectionSettingsPtrOutput values.
// You can construct a concrete instance of `AS2AcknowledgementConnectionSettingsPtrInput` via:
//
//          AS2AcknowledgementConnectionSettingsArgs{...}
//
//  or:
//
//          nil
type AS2AcknowledgementConnectionSettingsPtrInput interface {
	pulumi.Input

	ToAS2AcknowledgementConnectionSettingsPtrOutput() AS2AcknowledgementConnectionSettingsPtrOutput
	ToAS2AcknowledgementConnectionSettingsPtrOutputWithContext(context.Context) AS2AcknowledgementConnectionSettingsPtrOutput
}

type as2acknowledgementConnectionSettingsPtrType AS2AcknowledgementConnectionSettingsArgs

func AS2AcknowledgementConnectionSettingsPtr(v *AS2AcknowledgementConnectionSettingsArgs) AS2AcknowledgementConnectionSettingsPtrInput {
	return (*as2acknowledgementConnectionSettingsPtrType)(v)
}

func (*as2acknowledgementConnectionSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AS2AcknowledgementConnectionSettings)(nil)).Elem()
}

func (i *as2acknowledgementConnectionSettingsPtrType) ToAS2AcknowledgementConnectionSettingsPtrOutput() AS2AcknowledgementConnectionSettingsPtrOutput {
	return i.ToAS2AcknowledgementConnectionSettingsPtrOutputWithContext(context.Background())
}

func (i *as2acknowledgementConnectionSettingsPtrType) ToAS2AcknowledgementConnectionSettingsPtrOutputWithContext(ctx context.Context) AS2AcknowledgementConnectionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2AcknowledgementConnectionSettingsPtrOutput)
}

// The AS2 agreement acknowledgement connection settings.
type AS2AcknowledgementConnectionSettingsResponse struct {
	// Indicates whether to ignore mismatch in certificate name.
	IgnoreCertificateNameMismatch bool `pulumi:"ignoreCertificateNameMismatch"`
	// Indicates whether to keep the connection alive.
	KeepHttpConnectionAlive bool `pulumi:"keepHttpConnectionAlive"`
	// Indicates whether to support HTTP status code 'CONTINUE'.
	SupportHttpStatusCodeContinue bool `pulumi:"supportHttpStatusCodeContinue"`
	// Indicates whether to unfold the HTTP headers.
	UnfoldHttpHeaders bool `pulumi:"unfoldHttpHeaders"`
}

// The AS2 agreement acknowledgement connection settings.
type AS2AcknowledgementConnectionSettingsResponseOutput struct{ *pulumi.OutputState }

func (AS2AcknowledgementConnectionSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AS2AcknowledgementConnectionSettingsResponse)(nil)).Elem()
}

func (o AS2AcknowledgementConnectionSettingsResponseOutput) ToAS2AcknowledgementConnectionSettingsResponseOutput() AS2AcknowledgementConnectionSettingsResponseOutput {
	return o
}

func (o AS2AcknowledgementConnectionSettingsResponseOutput) ToAS2AcknowledgementConnectionSettingsResponseOutputWithContext(ctx context.Context) AS2AcknowledgementConnectionSettingsResponseOutput {
	return o
}

func (o AS2AcknowledgementConnectionSettingsResponseOutput) ToAS2AcknowledgementConnectionSettingsResponsePtrOutput() AS2AcknowledgementConnectionSettingsResponsePtrOutput {
	return o.ToAS2AcknowledgementConnectionSettingsResponsePtrOutputWithContext(context.Background())
}

func (o AS2AcknowledgementConnectionSettingsResponseOutput) ToAS2AcknowledgementConnectionSettingsResponsePtrOutputWithContext(ctx context.Context) AS2AcknowledgementConnectionSettingsResponsePtrOutput {
	return o.ApplyT(func(v AS2AcknowledgementConnectionSettingsResponse) *AS2AcknowledgementConnectionSettingsResponse {
		return &v
	}).(AS2AcknowledgementConnectionSettingsResponsePtrOutput)
}

// Indicates whether to ignore mismatch in certificate name.
func (o AS2AcknowledgementConnectionSettingsResponseOutput) IgnoreCertificateNameMismatch() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2AcknowledgementConnectionSettingsResponse) bool { return v.IgnoreCertificateNameMismatch }).(pulumi.BoolOutput)
}

// Indicates whether to keep the connection alive.
func (o AS2AcknowledgementConnectionSettingsResponseOutput) KeepHttpConnectionAlive() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2AcknowledgementConnectionSettingsResponse) bool { return v.KeepHttpConnectionAlive }).(pulumi.BoolOutput)
}

// Indicates whether to support HTTP status code 'CONTINUE'.
func (o AS2AcknowledgementConnectionSettingsResponseOutput) SupportHttpStatusCodeContinue() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2AcknowledgementConnectionSettingsResponse) bool { return v.SupportHttpStatusCodeContinue }).(pulumi.BoolOutput)
}

// Indicates whether to unfold the HTTP headers.
func (o AS2AcknowledgementConnectionSettingsResponseOutput) UnfoldHttpHeaders() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2AcknowledgementConnectionSettingsResponse) bool { return v.UnfoldHttpHeaders }).(pulumi.BoolOutput)
}

type AS2AcknowledgementConnectionSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AS2AcknowledgementConnectionSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AS2AcknowledgementConnectionSettingsResponse)(nil)).Elem()
}

func (o AS2AcknowledgementConnectionSettingsResponsePtrOutput) ToAS2AcknowledgementConnectionSettingsResponsePtrOutput() AS2AcknowledgementConnectionSettingsResponsePtrOutput {
	return o
}

func (o AS2AcknowledgementConnectionSettingsResponsePtrOutput) ToAS2AcknowledgementConnectionSettingsResponsePtrOutputWithContext(ctx context.Context) AS2AcknowledgementConnectionSettingsResponsePtrOutput {
	return o
}

func (o AS2AcknowledgementConnectionSettingsResponsePtrOutput) Elem() AS2AcknowledgementConnectionSettingsResponseOutput {
	return o.ApplyT(func(v *AS2AcknowledgementConnectionSettingsResponse) AS2AcknowledgementConnectionSettingsResponse {
		return *v
	}).(AS2AcknowledgementConnectionSettingsResponseOutput)
}

// Indicates whether to ignore mismatch in certificate name.
func (o AS2AcknowledgementConnectionSettingsResponsePtrOutput) IgnoreCertificateNameMismatch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2AcknowledgementConnectionSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IgnoreCertificateNameMismatch
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether to keep the connection alive.
func (o AS2AcknowledgementConnectionSettingsResponsePtrOutput) KeepHttpConnectionAlive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2AcknowledgementConnectionSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.KeepHttpConnectionAlive
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether to support HTTP status code 'CONTINUE'.
func (o AS2AcknowledgementConnectionSettingsResponsePtrOutput) SupportHttpStatusCodeContinue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2AcknowledgementConnectionSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.SupportHttpStatusCodeContinue
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether to unfold the HTTP headers.
func (o AS2AcknowledgementConnectionSettingsResponsePtrOutput) UnfoldHttpHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2AcknowledgementConnectionSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.UnfoldHttpHeaders
	}).(pulumi.BoolPtrOutput)
}

// The integration account AS2 agreement content.
type AS2AgreementContent struct {
	// The AS2 one-way receive agreement.
	ReceiveAgreement AS2OneWayAgreement `pulumi:"receiveAgreement"`
	// The AS2 one-way send agreement.
	SendAgreement AS2OneWayAgreement `pulumi:"sendAgreement"`
}

// AS2AgreementContentInput is an input type that accepts AS2AgreementContentArgs and AS2AgreementContentOutput values.
// You can construct a concrete instance of `AS2AgreementContentInput` via:
//
//          AS2AgreementContentArgs{...}
type AS2AgreementContentInput interface {
	pulumi.Input

	ToAS2AgreementContentOutput() AS2AgreementContentOutput
	ToAS2AgreementContentOutputWithContext(context.Context) AS2AgreementContentOutput
}

// The integration account AS2 agreement content.
type AS2AgreementContentArgs struct {
	// The AS2 one-way receive agreement.
	ReceiveAgreement AS2OneWayAgreementInput `pulumi:"receiveAgreement"`
	// The AS2 one-way send agreement.
	SendAgreement AS2OneWayAgreementInput `pulumi:"sendAgreement"`
}

func (AS2AgreementContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AS2AgreementContent)(nil)).Elem()
}

func (i AS2AgreementContentArgs) ToAS2AgreementContentOutput() AS2AgreementContentOutput {
	return i.ToAS2AgreementContentOutputWithContext(context.Background())
}

func (i AS2AgreementContentArgs) ToAS2AgreementContentOutputWithContext(ctx context.Context) AS2AgreementContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2AgreementContentOutput)
}

func (i AS2AgreementContentArgs) ToAS2AgreementContentPtrOutput() AS2AgreementContentPtrOutput {
	return i.ToAS2AgreementContentPtrOutputWithContext(context.Background())
}

func (i AS2AgreementContentArgs) ToAS2AgreementContentPtrOutputWithContext(ctx context.Context) AS2AgreementContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2AgreementContentOutput).ToAS2AgreementContentPtrOutputWithContext(ctx)
}

// AS2AgreementContentPtrInput is an input type that accepts AS2AgreementContentArgs, AS2AgreementContentPtr and AS2AgreementContentPtrOutput values.
// You can construct a concrete instance of `AS2AgreementContentPtrInput` via:
//
//          AS2AgreementContentArgs{...}
//
//  or:
//
//          nil
type AS2AgreementContentPtrInput interface {
	pulumi.Input

	ToAS2AgreementContentPtrOutput() AS2AgreementContentPtrOutput
	ToAS2AgreementContentPtrOutputWithContext(context.Context) AS2AgreementContentPtrOutput
}

type as2agreementContentPtrType AS2AgreementContentArgs

func AS2AgreementContentPtr(v *AS2AgreementContentArgs) AS2AgreementContentPtrInput {
	return (*as2agreementContentPtrType)(v)
}

func (*as2agreementContentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AS2AgreementContent)(nil)).Elem()
}

func (i *as2agreementContentPtrType) ToAS2AgreementContentPtrOutput() AS2AgreementContentPtrOutput {
	return i.ToAS2AgreementContentPtrOutputWithContext(context.Background())
}

func (i *as2agreementContentPtrType) ToAS2AgreementContentPtrOutputWithContext(ctx context.Context) AS2AgreementContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2AgreementContentPtrOutput)
}

// The integration account AS2 agreement content.
type AS2AgreementContentResponse struct {
	// The AS2 one-way receive agreement.
	ReceiveAgreement AS2OneWayAgreementResponse `pulumi:"receiveAgreement"`
	// The AS2 one-way send agreement.
	SendAgreement AS2OneWayAgreementResponse `pulumi:"sendAgreement"`
}

// The integration account AS2 agreement content.
type AS2AgreementContentResponseOutput struct{ *pulumi.OutputState }

func (AS2AgreementContentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AS2AgreementContentResponse)(nil)).Elem()
}

func (o AS2AgreementContentResponseOutput) ToAS2AgreementContentResponseOutput() AS2AgreementContentResponseOutput {
	return o
}

func (o AS2AgreementContentResponseOutput) ToAS2AgreementContentResponseOutputWithContext(ctx context.Context) AS2AgreementContentResponseOutput {
	return o
}

func (o AS2AgreementContentResponseOutput) ToAS2AgreementContentResponsePtrOutput() AS2AgreementContentResponsePtrOutput {
	return o.ToAS2AgreementContentResponsePtrOutputWithContext(context.Background())
}

func (o AS2AgreementContentResponseOutput) ToAS2AgreementContentResponsePtrOutputWithContext(ctx context.Context) AS2AgreementContentResponsePtrOutput {
	return o.ApplyT(func(v AS2AgreementContentResponse) *AS2AgreementContentResponse {
		return &v
	}).(AS2AgreementContentResponsePtrOutput)
}

// The AS2 one-way receive agreement.
func (o AS2AgreementContentResponseOutput) ReceiveAgreement() AS2OneWayAgreementResponseOutput {
	return o.ApplyT(func(v AS2AgreementContentResponse) AS2OneWayAgreementResponse { return v.ReceiveAgreement }).(AS2OneWayAgreementResponseOutput)
}

// The AS2 one-way send agreement.
func (o AS2AgreementContentResponseOutput) SendAgreement() AS2OneWayAgreementResponseOutput {
	return o.ApplyT(func(v AS2AgreementContentResponse) AS2OneWayAgreementResponse { return v.SendAgreement }).(AS2OneWayAgreementResponseOutput)
}

type AS2AgreementContentResponsePtrOutput struct{ *pulumi.OutputState }

func (AS2AgreementContentResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AS2AgreementContentResponse)(nil)).Elem()
}

func (o AS2AgreementContentResponsePtrOutput) ToAS2AgreementContentResponsePtrOutput() AS2AgreementContentResponsePtrOutput {
	return o
}

func (o AS2AgreementContentResponsePtrOutput) ToAS2AgreementContentResponsePtrOutputWithContext(ctx context.Context) AS2AgreementContentResponsePtrOutput {
	return o
}

func (o AS2AgreementContentResponsePtrOutput) Elem() AS2AgreementContentResponseOutput {
	return o.ApplyT(func(v *AS2AgreementContentResponse) AS2AgreementContentResponse { return *v }).(AS2AgreementContentResponseOutput)
}

// The AS2 one-way receive agreement.
func (o AS2AgreementContentResponsePtrOutput) ReceiveAgreement() AS2OneWayAgreementResponsePtrOutput {
	return o.ApplyT(func(v *AS2AgreementContentResponse) *AS2OneWayAgreementResponse {
		if v == nil {
			return nil
		}
		return &v.ReceiveAgreement
	}).(AS2OneWayAgreementResponsePtrOutput)
}

// The AS2 one-way send agreement.
func (o AS2AgreementContentResponsePtrOutput) SendAgreement() AS2OneWayAgreementResponsePtrOutput {
	return o.ApplyT(func(v *AS2AgreementContentResponse) *AS2OneWayAgreementResponse {
		if v == nil {
			return nil
		}
		return &v.SendAgreement
	}).(AS2OneWayAgreementResponsePtrOutput)
}

// The AS2 agreement envelope settings.
type AS2EnvelopeSettings struct {
	// The value indicating whether to auto generate file name.
	AutogenerateFileName bool `pulumi:"autogenerateFileName"`
	// The template for file name.
	FileNameTemplate string `pulumi:"fileNameTemplate"`
	// The message content type.
	MessageContentType string `pulumi:"messageContentType"`
	// The value indicating whether to suspend message on file name generation error.
	SuspendMessageOnFileNameGenerationError bool `pulumi:"suspendMessageOnFileNameGenerationError"`
	// The value indicating whether to transmit file name in mime header.
	TransmitFileNameInMimeHeader bool `pulumi:"transmitFileNameInMimeHeader"`
}

// AS2EnvelopeSettingsInput is an input type that accepts AS2EnvelopeSettingsArgs and AS2EnvelopeSettingsOutput values.
// You can construct a concrete instance of `AS2EnvelopeSettingsInput` via:
//
//          AS2EnvelopeSettingsArgs{...}
type AS2EnvelopeSettingsInput interface {
	pulumi.Input

	ToAS2EnvelopeSettingsOutput() AS2EnvelopeSettingsOutput
	ToAS2EnvelopeSettingsOutputWithContext(context.Context) AS2EnvelopeSettingsOutput
}

// The AS2 agreement envelope settings.
type AS2EnvelopeSettingsArgs struct {
	// The value indicating whether to auto generate file name.
	AutogenerateFileName pulumi.BoolInput `pulumi:"autogenerateFileName"`
	// The template for file name.
	FileNameTemplate pulumi.StringInput `pulumi:"fileNameTemplate"`
	// The message content type.
	MessageContentType pulumi.StringInput `pulumi:"messageContentType"`
	// The value indicating whether to suspend message on file name generation error.
	SuspendMessageOnFileNameGenerationError pulumi.BoolInput `pulumi:"suspendMessageOnFileNameGenerationError"`
	// The value indicating whether to transmit file name in mime header.
	TransmitFileNameInMimeHeader pulumi.BoolInput `pulumi:"transmitFileNameInMimeHeader"`
}

func (AS2EnvelopeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AS2EnvelopeSettings)(nil)).Elem()
}

func (i AS2EnvelopeSettingsArgs) ToAS2EnvelopeSettingsOutput() AS2EnvelopeSettingsOutput {
	return i.ToAS2EnvelopeSettingsOutputWithContext(context.Background())
}

func (i AS2EnvelopeSettingsArgs) ToAS2EnvelopeSettingsOutputWithContext(ctx context.Context) AS2EnvelopeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2EnvelopeSettingsOutput)
}

func (i AS2EnvelopeSettingsArgs) ToAS2EnvelopeSettingsPtrOutput() AS2EnvelopeSettingsPtrOutput {
	return i.ToAS2EnvelopeSettingsPtrOutputWithContext(context.Background())
}

func (i AS2EnvelopeSettingsArgs) ToAS2EnvelopeSettingsPtrOutputWithContext(ctx context.Context) AS2EnvelopeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2EnvelopeSettingsOutput).ToAS2EnvelopeSettingsPtrOutputWithContext(ctx)
}

// AS2EnvelopeSettingsPtrInput is an input type that accepts AS2EnvelopeSettingsArgs, AS2EnvelopeSettingsPtr and AS2EnvelopeSettingsPtrOutput values.
// You can construct a concrete instance of `AS2EnvelopeSettingsPtrInput` via:
//
//          AS2EnvelopeSettingsArgs{...}
//
//  or:
//
//          nil
type AS2EnvelopeSettingsPtrInput interface {
	pulumi.Input

	ToAS2EnvelopeSettingsPtrOutput() AS2EnvelopeSettingsPtrOutput
	ToAS2EnvelopeSettingsPtrOutputWithContext(context.Context) AS2EnvelopeSettingsPtrOutput
}

type as2envelopeSettingsPtrType AS2EnvelopeSettingsArgs

func AS2EnvelopeSettingsPtr(v *AS2EnvelopeSettingsArgs) AS2EnvelopeSettingsPtrInput {
	return (*as2envelopeSettingsPtrType)(v)
}

func (*as2envelopeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AS2EnvelopeSettings)(nil)).Elem()
}

func (i *as2envelopeSettingsPtrType) ToAS2EnvelopeSettingsPtrOutput() AS2EnvelopeSettingsPtrOutput {
	return i.ToAS2EnvelopeSettingsPtrOutputWithContext(context.Background())
}

func (i *as2envelopeSettingsPtrType) ToAS2EnvelopeSettingsPtrOutputWithContext(ctx context.Context) AS2EnvelopeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2EnvelopeSettingsPtrOutput)
}

// The AS2 agreement envelope settings.
type AS2EnvelopeSettingsResponse struct {
	// The value indicating whether to auto generate file name.
	AutogenerateFileName bool `pulumi:"autogenerateFileName"`
	// The template for file name.
	FileNameTemplate string `pulumi:"fileNameTemplate"`
	// The message content type.
	MessageContentType string `pulumi:"messageContentType"`
	// The value indicating whether to suspend message on file name generation error.
	SuspendMessageOnFileNameGenerationError bool `pulumi:"suspendMessageOnFileNameGenerationError"`
	// The value indicating whether to transmit file name in mime header.
	TransmitFileNameInMimeHeader bool `pulumi:"transmitFileNameInMimeHeader"`
}

// The AS2 agreement envelope settings.
type AS2EnvelopeSettingsResponseOutput struct{ *pulumi.OutputState }

func (AS2EnvelopeSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AS2EnvelopeSettingsResponse)(nil)).Elem()
}

func (o AS2EnvelopeSettingsResponseOutput) ToAS2EnvelopeSettingsResponseOutput() AS2EnvelopeSettingsResponseOutput {
	return o
}

func (o AS2EnvelopeSettingsResponseOutput) ToAS2EnvelopeSettingsResponseOutputWithContext(ctx context.Context) AS2EnvelopeSettingsResponseOutput {
	return o
}

func (o AS2EnvelopeSettingsResponseOutput) ToAS2EnvelopeSettingsResponsePtrOutput() AS2EnvelopeSettingsResponsePtrOutput {
	return o.ToAS2EnvelopeSettingsResponsePtrOutputWithContext(context.Background())
}

func (o AS2EnvelopeSettingsResponseOutput) ToAS2EnvelopeSettingsResponsePtrOutputWithContext(ctx context.Context) AS2EnvelopeSettingsResponsePtrOutput {
	return o.ApplyT(func(v AS2EnvelopeSettingsResponse) *AS2EnvelopeSettingsResponse {
		return &v
	}).(AS2EnvelopeSettingsResponsePtrOutput)
}

// The value indicating whether to auto generate file name.
func (o AS2EnvelopeSettingsResponseOutput) AutogenerateFileName() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2EnvelopeSettingsResponse) bool { return v.AutogenerateFileName }).(pulumi.BoolOutput)
}

// The template for file name.
func (o AS2EnvelopeSettingsResponseOutput) FileNameTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v AS2EnvelopeSettingsResponse) string { return v.FileNameTemplate }).(pulumi.StringOutput)
}

// The message content type.
func (o AS2EnvelopeSettingsResponseOutput) MessageContentType() pulumi.StringOutput {
	return o.ApplyT(func(v AS2EnvelopeSettingsResponse) string { return v.MessageContentType }).(pulumi.StringOutput)
}

// The value indicating whether to suspend message on file name generation error.
func (o AS2EnvelopeSettingsResponseOutput) SuspendMessageOnFileNameGenerationError() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2EnvelopeSettingsResponse) bool { return v.SuspendMessageOnFileNameGenerationError }).(pulumi.BoolOutput)
}

// The value indicating whether to transmit file name in mime header.
func (o AS2EnvelopeSettingsResponseOutput) TransmitFileNameInMimeHeader() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2EnvelopeSettingsResponse) bool { return v.TransmitFileNameInMimeHeader }).(pulumi.BoolOutput)
}

type AS2EnvelopeSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AS2EnvelopeSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AS2EnvelopeSettingsResponse)(nil)).Elem()
}

func (o AS2EnvelopeSettingsResponsePtrOutput) ToAS2EnvelopeSettingsResponsePtrOutput() AS2EnvelopeSettingsResponsePtrOutput {
	return o
}

func (o AS2EnvelopeSettingsResponsePtrOutput) ToAS2EnvelopeSettingsResponsePtrOutputWithContext(ctx context.Context) AS2EnvelopeSettingsResponsePtrOutput {
	return o
}

func (o AS2EnvelopeSettingsResponsePtrOutput) Elem() AS2EnvelopeSettingsResponseOutput {
	return o.ApplyT(func(v *AS2EnvelopeSettingsResponse) AS2EnvelopeSettingsResponse { return *v }).(AS2EnvelopeSettingsResponseOutput)
}

// The value indicating whether to auto generate file name.
func (o AS2EnvelopeSettingsResponsePtrOutput) AutogenerateFileName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2EnvelopeSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.AutogenerateFileName
	}).(pulumi.BoolPtrOutput)
}

// The template for file name.
func (o AS2EnvelopeSettingsResponsePtrOutput) FileNameTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AS2EnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.FileNameTemplate
	}).(pulumi.StringPtrOutput)
}

// The message content type.
func (o AS2EnvelopeSettingsResponsePtrOutput) MessageContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AS2EnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MessageContentType
	}).(pulumi.StringPtrOutput)
}

// The value indicating whether to suspend message on file name generation error.
func (o AS2EnvelopeSettingsResponsePtrOutput) SuspendMessageOnFileNameGenerationError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2EnvelopeSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.SuspendMessageOnFileNameGenerationError
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to transmit file name in mime header.
func (o AS2EnvelopeSettingsResponsePtrOutput) TransmitFileNameInMimeHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2EnvelopeSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.TransmitFileNameInMimeHeader
	}).(pulumi.BoolPtrOutput)
}

// The AS2 agreement error settings.
type AS2ErrorSettings struct {
	// The value indicating whether to resend message If MDN is not received.
	ResendIfMDNNotReceived bool `pulumi:"resendIfMDNNotReceived"`
	// The value indicating whether to suspend duplicate message.
	SuspendDuplicateMessage bool `pulumi:"suspendDuplicateMessage"`
}

// AS2ErrorSettingsInput is an input type that accepts AS2ErrorSettingsArgs and AS2ErrorSettingsOutput values.
// You can construct a concrete instance of `AS2ErrorSettingsInput` via:
//
//          AS2ErrorSettingsArgs{...}
type AS2ErrorSettingsInput interface {
	pulumi.Input

	ToAS2ErrorSettingsOutput() AS2ErrorSettingsOutput
	ToAS2ErrorSettingsOutputWithContext(context.Context) AS2ErrorSettingsOutput
}

// The AS2 agreement error settings.
type AS2ErrorSettingsArgs struct {
	// The value indicating whether to resend message If MDN is not received.
	ResendIfMDNNotReceived pulumi.BoolInput `pulumi:"resendIfMDNNotReceived"`
	// The value indicating whether to suspend duplicate message.
	SuspendDuplicateMessage pulumi.BoolInput `pulumi:"suspendDuplicateMessage"`
}

func (AS2ErrorSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AS2ErrorSettings)(nil)).Elem()
}

func (i AS2ErrorSettingsArgs) ToAS2ErrorSettingsOutput() AS2ErrorSettingsOutput {
	return i.ToAS2ErrorSettingsOutputWithContext(context.Background())
}

func (i AS2ErrorSettingsArgs) ToAS2ErrorSettingsOutputWithContext(ctx context.Context) AS2ErrorSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2ErrorSettingsOutput)
}

func (i AS2ErrorSettingsArgs) ToAS2ErrorSettingsPtrOutput() AS2ErrorSettingsPtrOutput {
	return i.ToAS2ErrorSettingsPtrOutputWithContext(context.Background())
}

func (i AS2ErrorSettingsArgs) ToAS2ErrorSettingsPtrOutputWithContext(ctx context.Context) AS2ErrorSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2ErrorSettingsOutput).ToAS2ErrorSettingsPtrOutputWithContext(ctx)
}

// AS2ErrorSettingsPtrInput is an input type that accepts AS2ErrorSettingsArgs, AS2ErrorSettingsPtr and AS2ErrorSettingsPtrOutput values.
// You can construct a concrete instance of `AS2ErrorSettingsPtrInput` via:
//
//          AS2ErrorSettingsArgs{...}
//
//  or:
//
//          nil
type AS2ErrorSettingsPtrInput interface {
	pulumi.Input

	ToAS2ErrorSettingsPtrOutput() AS2ErrorSettingsPtrOutput
	ToAS2ErrorSettingsPtrOutputWithContext(context.Context) AS2ErrorSettingsPtrOutput
}

type as2errorSettingsPtrType AS2ErrorSettingsArgs

func AS2ErrorSettingsPtr(v *AS2ErrorSettingsArgs) AS2ErrorSettingsPtrInput {
	return (*as2errorSettingsPtrType)(v)
}

func (*as2errorSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AS2ErrorSettings)(nil)).Elem()
}

func (i *as2errorSettingsPtrType) ToAS2ErrorSettingsPtrOutput() AS2ErrorSettingsPtrOutput {
	return i.ToAS2ErrorSettingsPtrOutputWithContext(context.Background())
}

func (i *as2errorSettingsPtrType) ToAS2ErrorSettingsPtrOutputWithContext(ctx context.Context) AS2ErrorSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2ErrorSettingsPtrOutput)
}

// The AS2 agreement error settings.
type AS2ErrorSettingsResponse struct {
	// The value indicating whether to resend message If MDN is not received.
	ResendIfMDNNotReceived bool `pulumi:"resendIfMDNNotReceived"`
	// The value indicating whether to suspend duplicate message.
	SuspendDuplicateMessage bool `pulumi:"suspendDuplicateMessage"`
}

// The AS2 agreement error settings.
type AS2ErrorSettingsResponseOutput struct{ *pulumi.OutputState }

func (AS2ErrorSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AS2ErrorSettingsResponse)(nil)).Elem()
}

func (o AS2ErrorSettingsResponseOutput) ToAS2ErrorSettingsResponseOutput() AS2ErrorSettingsResponseOutput {
	return o
}

func (o AS2ErrorSettingsResponseOutput) ToAS2ErrorSettingsResponseOutputWithContext(ctx context.Context) AS2ErrorSettingsResponseOutput {
	return o
}

func (o AS2ErrorSettingsResponseOutput) ToAS2ErrorSettingsResponsePtrOutput() AS2ErrorSettingsResponsePtrOutput {
	return o.ToAS2ErrorSettingsResponsePtrOutputWithContext(context.Background())
}

func (o AS2ErrorSettingsResponseOutput) ToAS2ErrorSettingsResponsePtrOutputWithContext(ctx context.Context) AS2ErrorSettingsResponsePtrOutput {
	return o.ApplyT(func(v AS2ErrorSettingsResponse) *AS2ErrorSettingsResponse {
		return &v
	}).(AS2ErrorSettingsResponsePtrOutput)
}

// The value indicating whether to resend message If MDN is not received.
func (o AS2ErrorSettingsResponseOutput) ResendIfMDNNotReceived() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2ErrorSettingsResponse) bool { return v.ResendIfMDNNotReceived }).(pulumi.BoolOutput)
}

// The value indicating whether to suspend duplicate message.
func (o AS2ErrorSettingsResponseOutput) SuspendDuplicateMessage() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2ErrorSettingsResponse) bool { return v.SuspendDuplicateMessage }).(pulumi.BoolOutput)
}

type AS2ErrorSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AS2ErrorSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AS2ErrorSettingsResponse)(nil)).Elem()
}

func (o AS2ErrorSettingsResponsePtrOutput) ToAS2ErrorSettingsResponsePtrOutput() AS2ErrorSettingsResponsePtrOutput {
	return o
}

func (o AS2ErrorSettingsResponsePtrOutput) ToAS2ErrorSettingsResponsePtrOutputWithContext(ctx context.Context) AS2ErrorSettingsResponsePtrOutput {
	return o
}

func (o AS2ErrorSettingsResponsePtrOutput) Elem() AS2ErrorSettingsResponseOutput {
	return o.ApplyT(func(v *AS2ErrorSettingsResponse) AS2ErrorSettingsResponse { return *v }).(AS2ErrorSettingsResponseOutput)
}

// The value indicating whether to resend message If MDN is not received.
func (o AS2ErrorSettingsResponsePtrOutput) ResendIfMDNNotReceived() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2ErrorSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.ResendIfMDNNotReceived
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to suspend duplicate message.
func (o AS2ErrorSettingsResponsePtrOutput) SuspendDuplicateMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2ErrorSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.SuspendDuplicateMessage
	}).(pulumi.BoolPtrOutput)
}

// The AS2 agreement mdn settings.
type AS2MdnSettings struct {
	// The disposition notification to header value.
	DispositionNotificationTo *string `pulumi:"dispositionNotificationTo"`
	// The MDN text.
	MdnText *string `pulumi:"mdnText"`
	// The signing or hashing algorithm.
	MicHashingAlgorithm string `pulumi:"micHashingAlgorithm"`
	// The value indicating whether to send or request a MDN.
	NeedMDN bool `pulumi:"needMDN"`
	// The receipt delivery URL.
	ReceiptDeliveryUrl *string `pulumi:"receiptDeliveryUrl"`
	// The value indicating whether to send inbound MDN to message box.
	SendInboundMDNToMessageBox bool `pulumi:"sendInboundMDNToMessageBox"`
	// The value indicating whether to send the asynchronous MDN.
	SendMDNAsynchronously bool `pulumi:"sendMDNAsynchronously"`
	// The value indicating whether the MDN needs to be signed or not.
	SignMDN bool `pulumi:"signMDN"`
	// The value indicating whether to sign the outbound MDN if optional.
	SignOutboundMDNIfOptional bool `pulumi:"signOutboundMDNIfOptional"`
}

// AS2MdnSettingsInput is an input type that accepts AS2MdnSettingsArgs and AS2MdnSettingsOutput values.
// You can construct a concrete instance of `AS2MdnSettingsInput` via:
//
//          AS2MdnSettingsArgs{...}
type AS2MdnSettingsInput interface {
	pulumi.Input

	ToAS2MdnSettingsOutput() AS2MdnSettingsOutput
	ToAS2MdnSettingsOutputWithContext(context.Context) AS2MdnSettingsOutput
}

// The AS2 agreement mdn settings.
type AS2MdnSettingsArgs struct {
	// The disposition notification to header value.
	DispositionNotificationTo pulumi.StringPtrInput `pulumi:"dispositionNotificationTo"`
	// The MDN text.
	MdnText pulumi.StringPtrInput `pulumi:"mdnText"`
	// The signing or hashing algorithm.
	MicHashingAlgorithm pulumi.StringInput `pulumi:"micHashingAlgorithm"`
	// The value indicating whether to send or request a MDN.
	NeedMDN pulumi.BoolInput `pulumi:"needMDN"`
	// The receipt delivery URL.
	ReceiptDeliveryUrl pulumi.StringPtrInput `pulumi:"receiptDeliveryUrl"`
	// The value indicating whether to send inbound MDN to message box.
	SendInboundMDNToMessageBox pulumi.BoolInput `pulumi:"sendInboundMDNToMessageBox"`
	// The value indicating whether to send the asynchronous MDN.
	SendMDNAsynchronously pulumi.BoolInput `pulumi:"sendMDNAsynchronously"`
	// The value indicating whether the MDN needs to be signed or not.
	SignMDN pulumi.BoolInput `pulumi:"signMDN"`
	// The value indicating whether to sign the outbound MDN if optional.
	SignOutboundMDNIfOptional pulumi.BoolInput `pulumi:"signOutboundMDNIfOptional"`
}

func (AS2MdnSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AS2MdnSettings)(nil)).Elem()
}

func (i AS2MdnSettingsArgs) ToAS2MdnSettingsOutput() AS2MdnSettingsOutput {
	return i.ToAS2MdnSettingsOutputWithContext(context.Background())
}

func (i AS2MdnSettingsArgs) ToAS2MdnSettingsOutputWithContext(ctx context.Context) AS2MdnSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2MdnSettingsOutput)
}

func (i AS2MdnSettingsArgs) ToAS2MdnSettingsPtrOutput() AS2MdnSettingsPtrOutput {
	return i.ToAS2MdnSettingsPtrOutputWithContext(context.Background())
}

func (i AS2MdnSettingsArgs) ToAS2MdnSettingsPtrOutputWithContext(ctx context.Context) AS2MdnSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2MdnSettingsOutput).ToAS2MdnSettingsPtrOutputWithContext(ctx)
}

// AS2MdnSettingsPtrInput is an input type that accepts AS2MdnSettingsArgs, AS2MdnSettingsPtr and AS2MdnSettingsPtrOutput values.
// You can construct a concrete instance of `AS2MdnSettingsPtrInput` via:
//
//          AS2MdnSettingsArgs{...}
//
//  or:
//
//          nil
type AS2MdnSettingsPtrInput interface {
	pulumi.Input

	ToAS2MdnSettingsPtrOutput() AS2MdnSettingsPtrOutput
	ToAS2MdnSettingsPtrOutputWithContext(context.Context) AS2MdnSettingsPtrOutput
}

type as2mdnSettingsPtrType AS2MdnSettingsArgs

func AS2MdnSettingsPtr(v *AS2MdnSettingsArgs) AS2MdnSettingsPtrInput {
	return (*as2mdnSettingsPtrType)(v)
}

func (*as2mdnSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AS2MdnSettings)(nil)).Elem()
}

func (i *as2mdnSettingsPtrType) ToAS2MdnSettingsPtrOutput() AS2MdnSettingsPtrOutput {
	return i.ToAS2MdnSettingsPtrOutputWithContext(context.Background())
}

func (i *as2mdnSettingsPtrType) ToAS2MdnSettingsPtrOutputWithContext(ctx context.Context) AS2MdnSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2MdnSettingsPtrOutput)
}

// The AS2 agreement mdn settings.
type AS2MdnSettingsResponse struct {
	// The disposition notification to header value.
	DispositionNotificationTo *string `pulumi:"dispositionNotificationTo"`
	// The MDN text.
	MdnText *string `pulumi:"mdnText"`
	// The signing or hashing algorithm.
	MicHashingAlgorithm string `pulumi:"micHashingAlgorithm"`
	// The value indicating whether to send or request a MDN.
	NeedMDN bool `pulumi:"needMDN"`
	// The receipt delivery URL.
	ReceiptDeliveryUrl *string `pulumi:"receiptDeliveryUrl"`
	// The value indicating whether to send inbound MDN to message box.
	SendInboundMDNToMessageBox bool `pulumi:"sendInboundMDNToMessageBox"`
	// The value indicating whether to send the asynchronous MDN.
	SendMDNAsynchronously bool `pulumi:"sendMDNAsynchronously"`
	// The value indicating whether the MDN needs to be signed or not.
	SignMDN bool `pulumi:"signMDN"`
	// The value indicating whether to sign the outbound MDN if optional.
	SignOutboundMDNIfOptional bool `pulumi:"signOutboundMDNIfOptional"`
}

// The AS2 agreement mdn settings.
type AS2MdnSettingsResponseOutput struct{ *pulumi.OutputState }

func (AS2MdnSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AS2MdnSettingsResponse)(nil)).Elem()
}

func (o AS2MdnSettingsResponseOutput) ToAS2MdnSettingsResponseOutput() AS2MdnSettingsResponseOutput {
	return o
}

func (o AS2MdnSettingsResponseOutput) ToAS2MdnSettingsResponseOutputWithContext(ctx context.Context) AS2MdnSettingsResponseOutput {
	return o
}

func (o AS2MdnSettingsResponseOutput) ToAS2MdnSettingsResponsePtrOutput() AS2MdnSettingsResponsePtrOutput {
	return o.ToAS2MdnSettingsResponsePtrOutputWithContext(context.Background())
}

func (o AS2MdnSettingsResponseOutput) ToAS2MdnSettingsResponsePtrOutputWithContext(ctx context.Context) AS2MdnSettingsResponsePtrOutput {
	return o.ApplyT(func(v AS2MdnSettingsResponse) *AS2MdnSettingsResponse {
		return &v
	}).(AS2MdnSettingsResponsePtrOutput)
}

// The disposition notification to header value.
func (o AS2MdnSettingsResponseOutput) DispositionNotificationTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AS2MdnSettingsResponse) *string { return v.DispositionNotificationTo }).(pulumi.StringPtrOutput)
}

// The MDN text.
func (o AS2MdnSettingsResponseOutput) MdnText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AS2MdnSettingsResponse) *string { return v.MdnText }).(pulumi.StringPtrOutput)
}

// The signing or hashing algorithm.
func (o AS2MdnSettingsResponseOutput) MicHashingAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v AS2MdnSettingsResponse) string { return v.MicHashingAlgorithm }).(pulumi.StringOutput)
}

// The value indicating whether to send or request a MDN.
func (o AS2MdnSettingsResponseOutput) NeedMDN() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2MdnSettingsResponse) bool { return v.NeedMDN }).(pulumi.BoolOutput)
}

// The receipt delivery URL.
func (o AS2MdnSettingsResponseOutput) ReceiptDeliveryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AS2MdnSettingsResponse) *string { return v.ReceiptDeliveryUrl }).(pulumi.StringPtrOutput)
}

// The value indicating whether to send inbound MDN to message box.
func (o AS2MdnSettingsResponseOutput) SendInboundMDNToMessageBox() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2MdnSettingsResponse) bool { return v.SendInboundMDNToMessageBox }).(pulumi.BoolOutput)
}

// The value indicating whether to send the asynchronous MDN.
func (o AS2MdnSettingsResponseOutput) SendMDNAsynchronously() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2MdnSettingsResponse) bool { return v.SendMDNAsynchronously }).(pulumi.BoolOutput)
}

// The value indicating whether the MDN needs to be signed or not.
func (o AS2MdnSettingsResponseOutput) SignMDN() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2MdnSettingsResponse) bool { return v.SignMDN }).(pulumi.BoolOutput)
}

// The value indicating whether to sign the outbound MDN if optional.
func (o AS2MdnSettingsResponseOutput) SignOutboundMDNIfOptional() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2MdnSettingsResponse) bool { return v.SignOutboundMDNIfOptional }).(pulumi.BoolOutput)
}

type AS2MdnSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AS2MdnSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AS2MdnSettingsResponse)(nil)).Elem()
}

func (o AS2MdnSettingsResponsePtrOutput) ToAS2MdnSettingsResponsePtrOutput() AS2MdnSettingsResponsePtrOutput {
	return o
}

func (o AS2MdnSettingsResponsePtrOutput) ToAS2MdnSettingsResponsePtrOutputWithContext(ctx context.Context) AS2MdnSettingsResponsePtrOutput {
	return o
}

func (o AS2MdnSettingsResponsePtrOutput) Elem() AS2MdnSettingsResponseOutput {
	return o.ApplyT(func(v *AS2MdnSettingsResponse) AS2MdnSettingsResponse { return *v }).(AS2MdnSettingsResponseOutput)
}

// The disposition notification to header value.
func (o AS2MdnSettingsResponsePtrOutput) DispositionNotificationTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AS2MdnSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DispositionNotificationTo
	}).(pulumi.StringPtrOutput)
}

// The MDN text.
func (o AS2MdnSettingsResponsePtrOutput) MdnText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AS2MdnSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MdnText
	}).(pulumi.StringPtrOutput)
}

// The signing or hashing algorithm.
func (o AS2MdnSettingsResponsePtrOutput) MicHashingAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AS2MdnSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MicHashingAlgorithm
	}).(pulumi.StringPtrOutput)
}

// The value indicating whether to send or request a MDN.
func (o AS2MdnSettingsResponsePtrOutput) NeedMDN() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2MdnSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.NeedMDN
	}).(pulumi.BoolPtrOutput)
}

// The receipt delivery URL.
func (o AS2MdnSettingsResponsePtrOutput) ReceiptDeliveryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AS2MdnSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReceiptDeliveryUrl
	}).(pulumi.StringPtrOutput)
}

// The value indicating whether to send inbound MDN to message box.
func (o AS2MdnSettingsResponsePtrOutput) SendInboundMDNToMessageBox() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2MdnSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.SendInboundMDNToMessageBox
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to send the asynchronous MDN.
func (o AS2MdnSettingsResponsePtrOutput) SendMDNAsynchronously() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2MdnSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.SendMDNAsynchronously
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether the MDN needs to be signed or not.
func (o AS2MdnSettingsResponsePtrOutput) SignMDN() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2MdnSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.SignMDN
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to sign the outbound MDN if optional.
func (o AS2MdnSettingsResponsePtrOutput) SignOutboundMDNIfOptional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2MdnSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.SignOutboundMDNIfOptional
	}).(pulumi.BoolPtrOutput)
}

// The AS2 agreement message connection settings.
type AS2MessageConnectionSettings struct {
	// The value indicating whether to ignore mismatch in certificate name.
	IgnoreCertificateNameMismatch bool `pulumi:"ignoreCertificateNameMismatch"`
	// The value indicating whether to keep the connection alive.
	KeepHttpConnectionAlive bool `pulumi:"keepHttpConnectionAlive"`
	// The value indicating whether to support HTTP status code 'CONTINUE'.
	SupportHttpStatusCodeContinue bool `pulumi:"supportHttpStatusCodeContinue"`
	// The value indicating whether to unfold the HTTP headers.
	UnfoldHttpHeaders bool `pulumi:"unfoldHttpHeaders"`
}

// AS2MessageConnectionSettingsInput is an input type that accepts AS2MessageConnectionSettingsArgs and AS2MessageConnectionSettingsOutput values.
// You can construct a concrete instance of `AS2MessageConnectionSettingsInput` via:
//
//          AS2MessageConnectionSettingsArgs{...}
type AS2MessageConnectionSettingsInput interface {
	pulumi.Input

	ToAS2MessageConnectionSettingsOutput() AS2MessageConnectionSettingsOutput
	ToAS2MessageConnectionSettingsOutputWithContext(context.Context) AS2MessageConnectionSettingsOutput
}

// The AS2 agreement message connection settings.
type AS2MessageConnectionSettingsArgs struct {
	// The value indicating whether to ignore mismatch in certificate name.
	IgnoreCertificateNameMismatch pulumi.BoolInput `pulumi:"ignoreCertificateNameMismatch"`
	// The value indicating whether to keep the connection alive.
	KeepHttpConnectionAlive pulumi.BoolInput `pulumi:"keepHttpConnectionAlive"`
	// The value indicating whether to support HTTP status code 'CONTINUE'.
	SupportHttpStatusCodeContinue pulumi.BoolInput `pulumi:"supportHttpStatusCodeContinue"`
	// The value indicating whether to unfold the HTTP headers.
	UnfoldHttpHeaders pulumi.BoolInput `pulumi:"unfoldHttpHeaders"`
}

func (AS2MessageConnectionSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AS2MessageConnectionSettings)(nil)).Elem()
}

func (i AS2MessageConnectionSettingsArgs) ToAS2MessageConnectionSettingsOutput() AS2MessageConnectionSettingsOutput {
	return i.ToAS2MessageConnectionSettingsOutputWithContext(context.Background())
}

func (i AS2MessageConnectionSettingsArgs) ToAS2MessageConnectionSettingsOutputWithContext(ctx context.Context) AS2MessageConnectionSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2MessageConnectionSettingsOutput)
}

func (i AS2MessageConnectionSettingsArgs) ToAS2MessageConnectionSettingsPtrOutput() AS2MessageConnectionSettingsPtrOutput {
	return i.ToAS2MessageConnectionSettingsPtrOutputWithContext(context.Background())
}

func (i AS2MessageConnectionSettingsArgs) ToAS2MessageConnectionSettingsPtrOutputWithContext(ctx context.Context) AS2MessageConnectionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2MessageConnectionSettingsOutput).ToAS2MessageConnectionSettingsPtrOutputWithContext(ctx)
}

// AS2MessageConnectionSettingsPtrInput is an input type that accepts AS2MessageConnectionSettingsArgs, AS2MessageConnectionSettingsPtr and AS2MessageConnectionSettingsPtrOutput values.
// You can construct a concrete instance of `AS2MessageConnectionSettingsPtrInput` via:
//
//          AS2MessageConnectionSettingsArgs{...}
//
//  or:
//
//          nil
type AS2MessageConnectionSettingsPtrInput interface {
	pulumi.Input

	ToAS2MessageConnectionSettingsPtrOutput() AS2MessageConnectionSettingsPtrOutput
	ToAS2MessageConnectionSettingsPtrOutputWithContext(context.Context) AS2MessageConnectionSettingsPtrOutput
}

type as2messageConnectionSettingsPtrType AS2MessageConnectionSettingsArgs

func AS2MessageConnectionSettingsPtr(v *AS2MessageConnectionSettingsArgs) AS2MessageConnectionSettingsPtrInput {
	return (*as2messageConnectionSettingsPtrType)(v)
}

func (*as2messageConnectionSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AS2MessageConnectionSettings)(nil)).Elem()
}

func (i *as2messageConnectionSettingsPtrType) ToAS2MessageConnectionSettingsPtrOutput() AS2MessageConnectionSettingsPtrOutput {
	return i.ToAS2MessageConnectionSettingsPtrOutputWithContext(context.Background())
}

func (i *as2messageConnectionSettingsPtrType) ToAS2MessageConnectionSettingsPtrOutputWithContext(ctx context.Context) AS2MessageConnectionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2MessageConnectionSettingsPtrOutput)
}

// The AS2 agreement message connection settings.
type AS2MessageConnectionSettingsResponse struct {
	// The value indicating whether to ignore mismatch in certificate name.
	IgnoreCertificateNameMismatch bool `pulumi:"ignoreCertificateNameMismatch"`
	// The value indicating whether to keep the connection alive.
	KeepHttpConnectionAlive bool `pulumi:"keepHttpConnectionAlive"`
	// The value indicating whether to support HTTP status code 'CONTINUE'.
	SupportHttpStatusCodeContinue bool `pulumi:"supportHttpStatusCodeContinue"`
	// The value indicating whether to unfold the HTTP headers.
	UnfoldHttpHeaders bool `pulumi:"unfoldHttpHeaders"`
}

// The AS2 agreement message connection settings.
type AS2MessageConnectionSettingsResponseOutput struct{ *pulumi.OutputState }

func (AS2MessageConnectionSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AS2MessageConnectionSettingsResponse)(nil)).Elem()
}

func (o AS2MessageConnectionSettingsResponseOutput) ToAS2MessageConnectionSettingsResponseOutput() AS2MessageConnectionSettingsResponseOutput {
	return o
}

func (o AS2MessageConnectionSettingsResponseOutput) ToAS2MessageConnectionSettingsResponseOutputWithContext(ctx context.Context) AS2MessageConnectionSettingsResponseOutput {
	return o
}

func (o AS2MessageConnectionSettingsResponseOutput) ToAS2MessageConnectionSettingsResponsePtrOutput() AS2MessageConnectionSettingsResponsePtrOutput {
	return o.ToAS2MessageConnectionSettingsResponsePtrOutputWithContext(context.Background())
}

func (o AS2MessageConnectionSettingsResponseOutput) ToAS2MessageConnectionSettingsResponsePtrOutputWithContext(ctx context.Context) AS2MessageConnectionSettingsResponsePtrOutput {
	return o.ApplyT(func(v AS2MessageConnectionSettingsResponse) *AS2MessageConnectionSettingsResponse {
		return &v
	}).(AS2MessageConnectionSettingsResponsePtrOutput)
}

// The value indicating whether to ignore mismatch in certificate name.
func (o AS2MessageConnectionSettingsResponseOutput) IgnoreCertificateNameMismatch() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2MessageConnectionSettingsResponse) bool { return v.IgnoreCertificateNameMismatch }).(pulumi.BoolOutput)
}

// The value indicating whether to keep the connection alive.
func (o AS2MessageConnectionSettingsResponseOutput) KeepHttpConnectionAlive() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2MessageConnectionSettingsResponse) bool { return v.KeepHttpConnectionAlive }).(pulumi.BoolOutput)
}

// The value indicating whether to support HTTP status code 'CONTINUE'.
func (o AS2MessageConnectionSettingsResponseOutput) SupportHttpStatusCodeContinue() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2MessageConnectionSettingsResponse) bool { return v.SupportHttpStatusCodeContinue }).(pulumi.BoolOutput)
}

// The value indicating whether to unfold the HTTP headers.
func (o AS2MessageConnectionSettingsResponseOutput) UnfoldHttpHeaders() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2MessageConnectionSettingsResponse) bool { return v.UnfoldHttpHeaders }).(pulumi.BoolOutput)
}

type AS2MessageConnectionSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AS2MessageConnectionSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AS2MessageConnectionSettingsResponse)(nil)).Elem()
}

func (o AS2MessageConnectionSettingsResponsePtrOutput) ToAS2MessageConnectionSettingsResponsePtrOutput() AS2MessageConnectionSettingsResponsePtrOutput {
	return o
}

func (o AS2MessageConnectionSettingsResponsePtrOutput) ToAS2MessageConnectionSettingsResponsePtrOutputWithContext(ctx context.Context) AS2MessageConnectionSettingsResponsePtrOutput {
	return o
}

func (o AS2MessageConnectionSettingsResponsePtrOutput) Elem() AS2MessageConnectionSettingsResponseOutput {
	return o.ApplyT(func(v *AS2MessageConnectionSettingsResponse) AS2MessageConnectionSettingsResponse { return *v }).(AS2MessageConnectionSettingsResponseOutput)
}

// The value indicating whether to ignore mismatch in certificate name.
func (o AS2MessageConnectionSettingsResponsePtrOutput) IgnoreCertificateNameMismatch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2MessageConnectionSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IgnoreCertificateNameMismatch
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to keep the connection alive.
func (o AS2MessageConnectionSettingsResponsePtrOutput) KeepHttpConnectionAlive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2MessageConnectionSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.KeepHttpConnectionAlive
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to support HTTP status code 'CONTINUE'.
func (o AS2MessageConnectionSettingsResponsePtrOutput) SupportHttpStatusCodeContinue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2MessageConnectionSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.SupportHttpStatusCodeContinue
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to unfold the HTTP headers.
func (o AS2MessageConnectionSettingsResponsePtrOutput) UnfoldHttpHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2MessageConnectionSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.UnfoldHttpHeaders
	}).(pulumi.BoolPtrOutput)
}

// The integration account AS2 one-way agreement.
type AS2OneWayAgreement struct {
	// The AS2 protocol settings.
	ProtocolSettings AS2ProtocolSettings `pulumi:"protocolSettings"`
	// The receiver business identity
	ReceiverBusinessIdentity BusinessIdentity `pulumi:"receiverBusinessIdentity"`
	// The sender business identity
	SenderBusinessIdentity BusinessIdentity `pulumi:"senderBusinessIdentity"`
}

// AS2OneWayAgreementInput is an input type that accepts AS2OneWayAgreementArgs and AS2OneWayAgreementOutput values.
// You can construct a concrete instance of `AS2OneWayAgreementInput` via:
//
//          AS2OneWayAgreementArgs{...}
type AS2OneWayAgreementInput interface {
	pulumi.Input

	ToAS2OneWayAgreementOutput() AS2OneWayAgreementOutput
	ToAS2OneWayAgreementOutputWithContext(context.Context) AS2OneWayAgreementOutput
}

// The integration account AS2 one-way agreement.
type AS2OneWayAgreementArgs struct {
	// The AS2 protocol settings.
	ProtocolSettings AS2ProtocolSettingsInput `pulumi:"protocolSettings"`
	// The receiver business identity
	ReceiverBusinessIdentity BusinessIdentityInput `pulumi:"receiverBusinessIdentity"`
	// The sender business identity
	SenderBusinessIdentity BusinessIdentityInput `pulumi:"senderBusinessIdentity"`
}

func (AS2OneWayAgreementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AS2OneWayAgreement)(nil)).Elem()
}

func (i AS2OneWayAgreementArgs) ToAS2OneWayAgreementOutput() AS2OneWayAgreementOutput {
	return i.ToAS2OneWayAgreementOutputWithContext(context.Background())
}

func (i AS2OneWayAgreementArgs) ToAS2OneWayAgreementOutputWithContext(ctx context.Context) AS2OneWayAgreementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2OneWayAgreementOutput)
}

func (i AS2OneWayAgreementArgs) ToAS2OneWayAgreementPtrOutput() AS2OneWayAgreementPtrOutput {
	return i.ToAS2OneWayAgreementPtrOutputWithContext(context.Background())
}

func (i AS2OneWayAgreementArgs) ToAS2OneWayAgreementPtrOutputWithContext(ctx context.Context) AS2OneWayAgreementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2OneWayAgreementOutput).ToAS2OneWayAgreementPtrOutputWithContext(ctx)
}

// AS2OneWayAgreementPtrInput is an input type that accepts AS2OneWayAgreementArgs, AS2OneWayAgreementPtr and AS2OneWayAgreementPtrOutput values.
// You can construct a concrete instance of `AS2OneWayAgreementPtrInput` via:
//
//          AS2OneWayAgreementArgs{...}
//
//  or:
//
//          nil
type AS2OneWayAgreementPtrInput interface {
	pulumi.Input

	ToAS2OneWayAgreementPtrOutput() AS2OneWayAgreementPtrOutput
	ToAS2OneWayAgreementPtrOutputWithContext(context.Context) AS2OneWayAgreementPtrOutput
}

type as2oneWayAgreementPtrType AS2OneWayAgreementArgs

func AS2OneWayAgreementPtr(v *AS2OneWayAgreementArgs) AS2OneWayAgreementPtrInput {
	return (*as2oneWayAgreementPtrType)(v)
}

func (*as2oneWayAgreementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AS2OneWayAgreement)(nil)).Elem()
}

func (i *as2oneWayAgreementPtrType) ToAS2OneWayAgreementPtrOutput() AS2OneWayAgreementPtrOutput {
	return i.ToAS2OneWayAgreementPtrOutputWithContext(context.Background())
}

func (i *as2oneWayAgreementPtrType) ToAS2OneWayAgreementPtrOutputWithContext(ctx context.Context) AS2OneWayAgreementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2OneWayAgreementPtrOutput)
}

// The integration account AS2 one-way agreement.
type AS2OneWayAgreementResponse struct {
	// The AS2 protocol settings.
	ProtocolSettings AS2ProtocolSettingsResponse `pulumi:"protocolSettings"`
	// The receiver business identity
	ReceiverBusinessIdentity BusinessIdentityResponse `pulumi:"receiverBusinessIdentity"`
	// The sender business identity
	SenderBusinessIdentity BusinessIdentityResponse `pulumi:"senderBusinessIdentity"`
}

// The integration account AS2 one-way agreement.
type AS2OneWayAgreementResponseOutput struct{ *pulumi.OutputState }

func (AS2OneWayAgreementResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AS2OneWayAgreementResponse)(nil)).Elem()
}

func (o AS2OneWayAgreementResponseOutput) ToAS2OneWayAgreementResponseOutput() AS2OneWayAgreementResponseOutput {
	return o
}

func (o AS2OneWayAgreementResponseOutput) ToAS2OneWayAgreementResponseOutputWithContext(ctx context.Context) AS2OneWayAgreementResponseOutput {
	return o
}

func (o AS2OneWayAgreementResponseOutput) ToAS2OneWayAgreementResponsePtrOutput() AS2OneWayAgreementResponsePtrOutput {
	return o.ToAS2OneWayAgreementResponsePtrOutputWithContext(context.Background())
}

func (o AS2OneWayAgreementResponseOutput) ToAS2OneWayAgreementResponsePtrOutputWithContext(ctx context.Context) AS2OneWayAgreementResponsePtrOutput {
	return o.ApplyT(func(v AS2OneWayAgreementResponse) *AS2OneWayAgreementResponse {
		return &v
	}).(AS2OneWayAgreementResponsePtrOutput)
}

// The AS2 protocol settings.
func (o AS2OneWayAgreementResponseOutput) ProtocolSettings() AS2ProtocolSettingsResponseOutput {
	return o.ApplyT(func(v AS2OneWayAgreementResponse) AS2ProtocolSettingsResponse { return v.ProtocolSettings }).(AS2ProtocolSettingsResponseOutput)
}

// The receiver business identity
func (o AS2OneWayAgreementResponseOutput) ReceiverBusinessIdentity() BusinessIdentityResponseOutput {
	return o.ApplyT(func(v AS2OneWayAgreementResponse) BusinessIdentityResponse { return v.ReceiverBusinessIdentity }).(BusinessIdentityResponseOutput)
}

// The sender business identity
func (o AS2OneWayAgreementResponseOutput) SenderBusinessIdentity() BusinessIdentityResponseOutput {
	return o.ApplyT(func(v AS2OneWayAgreementResponse) BusinessIdentityResponse { return v.SenderBusinessIdentity }).(BusinessIdentityResponseOutput)
}

type AS2OneWayAgreementResponsePtrOutput struct{ *pulumi.OutputState }

func (AS2OneWayAgreementResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AS2OneWayAgreementResponse)(nil)).Elem()
}

func (o AS2OneWayAgreementResponsePtrOutput) ToAS2OneWayAgreementResponsePtrOutput() AS2OneWayAgreementResponsePtrOutput {
	return o
}

func (o AS2OneWayAgreementResponsePtrOutput) ToAS2OneWayAgreementResponsePtrOutputWithContext(ctx context.Context) AS2OneWayAgreementResponsePtrOutput {
	return o
}

func (o AS2OneWayAgreementResponsePtrOutput) Elem() AS2OneWayAgreementResponseOutput {
	return o.ApplyT(func(v *AS2OneWayAgreementResponse) AS2OneWayAgreementResponse { return *v }).(AS2OneWayAgreementResponseOutput)
}

// The AS2 protocol settings.
func (o AS2OneWayAgreementResponsePtrOutput) ProtocolSettings() AS2ProtocolSettingsResponsePtrOutput {
	return o.ApplyT(func(v *AS2OneWayAgreementResponse) *AS2ProtocolSettingsResponse {
		if v == nil {
			return nil
		}
		return &v.ProtocolSettings
	}).(AS2ProtocolSettingsResponsePtrOutput)
}

// The receiver business identity
func (o AS2OneWayAgreementResponsePtrOutput) ReceiverBusinessIdentity() BusinessIdentityResponsePtrOutput {
	return o.ApplyT(func(v *AS2OneWayAgreementResponse) *BusinessIdentityResponse {
		if v == nil {
			return nil
		}
		return &v.ReceiverBusinessIdentity
	}).(BusinessIdentityResponsePtrOutput)
}

// The sender business identity
func (o AS2OneWayAgreementResponsePtrOutput) SenderBusinessIdentity() BusinessIdentityResponsePtrOutput {
	return o.ApplyT(func(v *AS2OneWayAgreementResponse) *BusinessIdentityResponse {
		if v == nil {
			return nil
		}
		return &v.SenderBusinessIdentity
	}).(BusinessIdentityResponsePtrOutput)
}

// The AS2 agreement protocol settings.
type AS2ProtocolSettings struct {
	// The acknowledgement connection settings.
	AcknowledgementConnectionSettings AS2AcknowledgementConnectionSettings `pulumi:"acknowledgementConnectionSettings"`
	// The envelope settings.
	EnvelopeSettings AS2EnvelopeSettings `pulumi:"envelopeSettings"`
	// The error settings.
	ErrorSettings AS2ErrorSettings `pulumi:"errorSettings"`
	// The MDN settings.
	MdnSettings AS2MdnSettings `pulumi:"mdnSettings"`
	// The message connection settings.
	MessageConnectionSettings AS2MessageConnectionSettings `pulumi:"messageConnectionSettings"`
	// The security settings.
	SecuritySettings AS2SecuritySettings `pulumi:"securitySettings"`
	// The validation settings.
	ValidationSettings AS2ValidationSettings `pulumi:"validationSettings"`
}

// AS2ProtocolSettingsInput is an input type that accepts AS2ProtocolSettingsArgs and AS2ProtocolSettingsOutput values.
// You can construct a concrete instance of `AS2ProtocolSettingsInput` via:
//
//          AS2ProtocolSettingsArgs{...}
type AS2ProtocolSettingsInput interface {
	pulumi.Input

	ToAS2ProtocolSettingsOutput() AS2ProtocolSettingsOutput
	ToAS2ProtocolSettingsOutputWithContext(context.Context) AS2ProtocolSettingsOutput
}

// The AS2 agreement protocol settings.
type AS2ProtocolSettingsArgs struct {
	// The acknowledgement connection settings.
	AcknowledgementConnectionSettings AS2AcknowledgementConnectionSettingsInput `pulumi:"acknowledgementConnectionSettings"`
	// The envelope settings.
	EnvelopeSettings AS2EnvelopeSettingsInput `pulumi:"envelopeSettings"`
	// The error settings.
	ErrorSettings AS2ErrorSettingsInput `pulumi:"errorSettings"`
	// The MDN settings.
	MdnSettings AS2MdnSettingsInput `pulumi:"mdnSettings"`
	// The message connection settings.
	MessageConnectionSettings AS2MessageConnectionSettingsInput `pulumi:"messageConnectionSettings"`
	// The security settings.
	SecuritySettings AS2SecuritySettingsInput `pulumi:"securitySettings"`
	// The validation settings.
	ValidationSettings AS2ValidationSettingsInput `pulumi:"validationSettings"`
}

func (AS2ProtocolSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AS2ProtocolSettings)(nil)).Elem()
}

func (i AS2ProtocolSettingsArgs) ToAS2ProtocolSettingsOutput() AS2ProtocolSettingsOutput {
	return i.ToAS2ProtocolSettingsOutputWithContext(context.Background())
}

func (i AS2ProtocolSettingsArgs) ToAS2ProtocolSettingsOutputWithContext(ctx context.Context) AS2ProtocolSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2ProtocolSettingsOutput)
}

func (i AS2ProtocolSettingsArgs) ToAS2ProtocolSettingsPtrOutput() AS2ProtocolSettingsPtrOutput {
	return i.ToAS2ProtocolSettingsPtrOutputWithContext(context.Background())
}

func (i AS2ProtocolSettingsArgs) ToAS2ProtocolSettingsPtrOutputWithContext(ctx context.Context) AS2ProtocolSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2ProtocolSettingsOutput).ToAS2ProtocolSettingsPtrOutputWithContext(ctx)
}

// AS2ProtocolSettingsPtrInput is an input type that accepts AS2ProtocolSettingsArgs, AS2ProtocolSettingsPtr and AS2ProtocolSettingsPtrOutput values.
// You can construct a concrete instance of `AS2ProtocolSettingsPtrInput` via:
//
//          AS2ProtocolSettingsArgs{...}
//
//  or:
//
//          nil
type AS2ProtocolSettingsPtrInput interface {
	pulumi.Input

	ToAS2ProtocolSettingsPtrOutput() AS2ProtocolSettingsPtrOutput
	ToAS2ProtocolSettingsPtrOutputWithContext(context.Context) AS2ProtocolSettingsPtrOutput
}

type as2protocolSettingsPtrType AS2ProtocolSettingsArgs

func AS2ProtocolSettingsPtr(v *AS2ProtocolSettingsArgs) AS2ProtocolSettingsPtrInput {
	return (*as2protocolSettingsPtrType)(v)
}

func (*as2protocolSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AS2ProtocolSettings)(nil)).Elem()
}

func (i *as2protocolSettingsPtrType) ToAS2ProtocolSettingsPtrOutput() AS2ProtocolSettingsPtrOutput {
	return i.ToAS2ProtocolSettingsPtrOutputWithContext(context.Background())
}

func (i *as2protocolSettingsPtrType) ToAS2ProtocolSettingsPtrOutputWithContext(ctx context.Context) AS2ProtocolSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2ProtocolSettingsPtrOutput)
}

// The AS2 agreement protocol settings.
type AS2ProtocolSettingsResponse struct {
	// The acknowledgement connection settings.
	AcknowledgementConnectionSettings AS2AcknowledgementConnectionSettingsResponse `pulumi:"acknowledgementConnectionSettings"`
	// The envelope settings.
	EnvelopeSettings AS2EnvelopeSettingsResponse `pulumi:"envelopeSettings"`
	// The error settings.
	ErrorSettings AS2ErrorSettingsResponse `pulumi:"errorSettings"`
	// The MDN settings.
	MdnSettings AS2MdnSettingsResponse `pulumi:"mdnSettings"`
	// The message connection settings.
	MessageConnectionSettings AS2MessageConnectionSettingsResponse `pulumi:"messageConnectionSettings"`
	// The security settings.
	SecuritySettings AS2SecuritySettingsResponse `pulumi:"securitySettings"`
	// The validation settings.
	ValidationSettings AS2ValidationSettingsResponse `pulumi:"validationSettings"`
}

// The AS2 agreement protocol settings.
type AS2ProtocolSettingsResponseOutput struct{ *pulumi.OutputState }

func (AS2ProtocolSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AS2ProtocolSettingsResponse)(nil)).Elem()
}

func (o AS2ProtocolSettingsResponseOutput) ToAS2ProtocolSettingsResponseOutput() AS2ProtocolSettingsResponseOutput {
	return o
}

func (o AS2ProtocolSettingsResponseOutput) ToAS2ProtocolSettingsResponseOutputWithContext(ctx context.Context) AS2ProtocolSettingsResponseOutput {
	return o
}

func (o AS2ProtocolSettingsResponseOutput) ToAS2ProtocolSettingsResponsePtrOutput() AS2ProtocolSettingsResponsePtrOutput {
	return o.ToAS2ProtocolSettingsResponsePtrOutputWithContext(context.Background())
}

func (o AS2ProtocolSettingsResponseOutput) ToAS2ProtocolSettingsResponsePtrOutputWithContext(ctx context.Context) AS2ProtocolSettingsResponsePtrOutput {
	return o.ApplyT(func(v AS2ProtocolSettingsResponse) *AS2ProtocolSettingsResponse {
		return &v
	}).(AS2ProtocolSettingsResponsePtrOutput)
}

// The acknowledgement connection settings.
func (o AS2ProtocolSettingsResponseOutput) AcknowledgementConnectionSettings() AS2AcknowledgementConnectionSettingsResponseOutput {
	return o.ApplyT(func(v AS2ProtocolSettingsResponse) AS2AcknowledgementConnectionSettingsResponse {
		return v.AcknowledgementConnectionSettings
	}).(AS2AcknowledgementConnectionSettingsResponseOutput)
}

// The envelope settings.
func (o AS2ProtocolSettingsResponseOutput) EnvelopeSettings() AS2EnvelopeSettingsResponseOutput {
	return o.ApplyT(func(v AS2ProtocolSettingsResponse) AS2EnvelopeSettingsResponse { return v.EnvelopeSettings }).(AS2EnvelopeSettingsResponseOutput)
}

// The error settings.
func (o AS2ProtocolSettingsResponseOutput) ErrorSettings() AS2ErrorSettingsResponseOutput {
	return o.ApplyT(func(v AS2ProtocolSettingsResponse) AS2ErrorSettingsResponse { return v.ErrorSettings }).(AS2ErrorSettingsResponseOutput)
}

// The MDN settings.
func (o AS2ProtocolSettingsResponseOutput) MdnSettings() AS2MdnSettingsResponseOutput {
	return o.ApplyT(func(v AS2ProtocolSettingsResponse) AS2MdnSettingsResponse { return v.MdnSettings }).(AS2MdnSettingsResponseOutput)
}

// The message connection settings.
func (o AS2ProtocolSettingsResponseOutput) MessageConnectionSettings() AS2MessageConnectionSettingsResponseOutput {
	return o.ApplyT(func(v AS2ProtocolSettingsResponse) AS2MessageConnectionSettingsResponse {
		return v.MessageConnectionSettings
	}).(AS2MessageConnectionSettingsResponseOutput)
}

// The security settings.
func (o AS2ProtocolSettingsResponseOutput) SecuritySettings() AS2SecuritySettingsResponseOutput {
	return o.ApplyT(func(v AS2ProtocolSettingsResponse) AS2SecuritySettingsResponse { return v.SecuritySettings }).(AS2SecuritySettingsResponseOutput)
}

// The validation settings.
func (o AS2ProtocolSettingsResponseOutput) ValidationSettings() AS2ValidationSettingsResponseOutput {
	return o.ApplyT(func(v AS2ProtocolSettingsResponse) AS2ValidationSettingsResponse { return v.ValidationSettings }).(AS2ValidationSettingsResponseOutput)
}

type AS2ProtocolSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AS2ProtocolSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AS2ProtocolSettingsResponse)(nil)).Elem()
}

func (o AS2ProtocolSettingsResponsePtrOutput) ToAS2ProtocolSettingsResponsePtrOutput() AS2ProtocolSettingsResponsePtrOutput {
	return o
}

func (o AS2ProtocolSettingsResponsePtrOutput) ToAS2ProtocolSettingsResponsePtrOutputWithContext(ctx context.Context) AS2ProtocolSettingsResponsePtrOutput {
	return o
}

func (o AS2ProtocolSettingsResponsePtrOutput) Elem() AS2ProtocolSettingsResponseOutput {
	return o.ApplyT(func(v *AS2ProtocolSettingsResponse) AS2ProtocolSettingsResponse { return *v }).(AS2ProtocolSettingsResponseOutput)
}

// The acknowledgement connection settings.
func (o AS2ProtocolSettingsResponsePtrOutput) AcknowledgementConnectionSettings() AS2AcknowledgementConnectionSettingsResponsePtrOutput {
	return o.ApplyT(func(v *AS2ProtocolSettingsResponse) *AS2AcknowledgementConnectionSettingsResponse {
		if v == nil {
			return nil
		}
		return &v.AcknowledgementConnectionSettings
	}).(AS2AcknowledgementConnectionSettingsResponsePtrOutput)
}

// The envelope settings.
func (o AS2ProtocolSettingsResponsePtrOutput) EnvelopeSettings() AS2EnvelopeSettingsResponsePtrOutput {
	return o.ApplyT(func(v *AS2ProtocolSettingsResponse) *AS2EnvelopeSettingsResponse {
		if v == nil {
			return nil
		}
		return &v.EnvelopeSettings
	}).(AS2EnvelopeSettingsResponsePtrOutput)
}

// The error settings.
func (o AS2ProtocolSettingsResponsePtrOutput) ErrorSettings() AS2ErrorSettingsResponsePtrOutput {
	return o.ApplyT(func(v *AS2ProtocolSettingsResponse) *AS2ErrorSettingsResponse {
		if v == nil {
			return nil
		}
		return &v.ErrorSettings
	}).(AS2ErrorSettingsResponsePtrOutput)
}

// The MDN settings.
func (o AS2ProtocolSettingsResponsePtrOutput) MdnSettings() AS2MdnSettingsResponsePtrOutput {
	return o.ApplyT(func(v *AS2ProtocolSettingsResponse) *AS2MdnSettingsResponse {
		if v == nil {
			return nil
		}
		return &v.MdnSettings
	}).(AS2MdnSettingsResponsePtrOutput)
}

// The message connection settings.
func (o AS2ProtocolSettingsResponsePtrOutput) MessageConnectionSettings() AS2MessageConnectionSettingsResponsePtrOutput {
	return o.ApplyT(func(v *AS2ProtocolSettingsResponse) *AS2MessageConnectionSettingsResponse {
		if v == nil {
			return nil
		}
		return &v.MessageConnectionSettings
	}).(AS2MessageConnectionSettingsResponsePtrOutput)
}

// The security settings.
func (o AS2ProtocolSettingsResponsePtrOutput) SecuritySettings() AS2SecuritySettingsResponsePtrOutput {
	return o.ApplyT(func(v *AS2ProtocolSettingsResponse) *AS2SecuritySettingsResponse {
		if v == nil {
			return nil
		}
		return &v.SecuritySettings
	}).(AS2SecuritySettingsResponsePtrOutput)
}

// The validation settings.
func (o AS2ProtocolSettingsResponsePtrOutput) ValidationSettings() AS2ValidationSettingsResponsePtrOutput {
	return o.ApplyT(func(v *AS2ProtocolSettingsResponse) *AS2ValidationSettingsResponse {
		if v == nil {
			return nil
		}
		return &v.ValidationSettings
	}).(AS2ValidationSettingsResponsePtrOutput)
}

// The AS2 agreement security settings.
type AS2SecuritySettings struct {
	// The value indicating whether to enable NRR for inbound decoded messages.
	EnableNRRForInboundDecodedMessages bool `pulumi:"enableNRRForInboundDecodedMessages"`
	// The value indicating whether to enable NRR for inbound encoded messages.
	EnableNRRForInboundEncodedMessages bool `pulumi:"enableNRRForInboundEncodedMessages"`
	// The value indicating whether to enable NRR for inbound MDN.
	EnableNRRForInboundMDN bool `pulumi:"enableNRRForInboundMDN"`
	// The value indicating whether to enable NRR for outbound decoded messages.
	EnableNRRForOutboundDecodedMessages bool `pulumi:"enableNRRForOutboundDecodedMessages"`
	// The value indicating whether to enable NRR for outbound encoded messages.
	EnableNRRForOutboundEncodedMessages bool `pulumi:"enableNRRForOutboundEncodedMessages"`
	// The value indicating whether to enable NRR for outbound MDN.
	EnableNRRForOutboundMDN bool `pulumi:"enableNRRForOutboundMDN"`
	// The name of the encryption certificate.
	EncryptionCertificateName *string `pulumi:"encryptionCertificateName"`
	// The value indicating whether to send or request a MDN.
	OverrideGroupSigningCertificate bool `pulumi:"overrideGroupSigningCertificate"`
	// The Sha2 algorithm format. Valid values are Sha2, ShaHashSize, ShaHyphenHashSize, Sha2UnderscoreHashSize.
	Sha2AlgorithmFormat *string `pulumi:"sha2AlgorithmFormat"`
	// The name of the signing certificate.
	SigningCertificateName *string `pulumi:"signingCertificateName"`
}

// AS2SecuritySettingsInput is an input type that accepts AS2SecuritySettingsArgs and AS2SecuritySettingsOutput values.
// You can construct a concrete instance of `AS2SecuritySettingsInput` via:
//
//          AS2SecuritySettingsArgs{...}
type AS2SecuritySettingsInput interface {
	pulumi.Input

	ToAS2SecuritySettingsOutput() AS2SecuritySettingsOutput
	ToAS2SecuritySettingsOutputWithContext(context.Context) AS2SecuritySettingsOutput
}

// The AS2 agreement security settings.
type AS2SecuritySettingsArgs struct {
	// The value indicating whether to enable NRR for inbound decoded messages.
	EnableNRRForInboundDecodedMessages pulumi.BoolInput `pulumi:"enableNRRForInboundDecodedMessages"`
	// The value indicating whether to enable NRR for inbound encoded messages.
	EnableNRRForInboundEncodedMessages pulumi.BoolInput `pulumi:"enableNRRForInboundEncodedMessages"`
	// The value indicating whether to enable NRR for inbound MDN.
	EnableNRRForInboundMDN pulumi.BoolInput `pulumi:"enableNRRForInboundMDN"`
	// The value indicating whether to enable NRR for outbound decoded messages.
	EnableNRRForOutboundDecodedMessages pulumi.BoolInput `pulumi:"enableNRRForOutboundDecodedMessages"`
	// The value indicating whether to enable NRR for outbound encoded messages.
	EnableNRRForOutboundEncodedMessages pulumi.BoolInput `pulumi:"enableNRRForOutboundEncodedMessages"`
	// The value indicating whether to enable NRR for outbound MDN.
	EnableNRRForOutboundMDN pulumi.BoolInput `pulumi:"enableNRRForOutboundMDN"`
	// The name of the encryption certificate.
	EncryptionCertificateName pulumi.StringPtrInput `pulumi:"encryptionCertificateName"`
	// The value indicating whether to send or request a MDN.
	OverrideGroupSigningCertificate pulumi.BoolInput `pulumi:"overrideGroupSigningCertificate"`
	// The Sha2 algorithm format. Valid values are Sha2, ShaHashSize, ShaHyphenHashSize, Sha2UnderscoreHashSize.
	Sha2AlgorithmFormat pulumi.StringPtrInput `pulumi:"sha2AlgorithmFormat"`
	// The name of the signing certificate.
	SigningCertificateName pulumi.StringPtrInput `pulumi:"signingCertificateName"`
}

func (AS2SecuritySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AS2SecuritySettings)(nil)).Elem()
}

func (i AS2SecuritySettingsArgs) ToAS2SecuritySettingsOutput() AS2SecuritySettingsOutput {
	return i.ToAS2SecuritySettingsOutputWithContext(context.Background())
}

func (i AS2SecuritySettingsArgs) ToAS2SecuritySettingsOutputWithContext(ctx context.Context) AS2SecuritySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2SecuritySettingsOutput)
}

func (i AS2SecuritySettingsArgs) ToAS2SecuritySettingsPtrOutput() AS2SecuritySettingsPtrOutput {
	return i.ToAS2SecuritySettingsPtrOutputWithContext(context.Background())
}

func (i AS2SecuritySettingsArgs) ToAS2SecuritySettingsPtrOutputWithContext(ctx context.Context) AS2SecuritySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2SecuritySettingsOutput).ToAS2SecuritySettingsPtrOutputWithContext(ctx)
}

// AS2SecuritySettingsPtrInput is an input type that accepts AS2SecuritySettingsArgs, AS2SecuritySettingsPtr and AS2SecuritySettingsPtrOutput values.
// You can construct a concrete instance of `AS2SecuritySettingsPtrInput` via:
//
//          AS2SecuritySettingsArgs{...}
//
//  or:
//
//          nil
type AS2SecuritySettingsPtrInput interface {
	pulumi.Input

	ToAS2SecuritySettingsPtrOutput() AS2SecuritySettingsPtrOutput
	ToAS2SecuritySettingsPtrOutputWithContext(context.Context) AS2SecuritySettingsPtrOutput
}

type as2securitySettingsPtrType AS2SecuritySettingsArgs

func AS2SecuritySettingsPtr(v *AS2SecuritySettingsArgs) AS2SecuritySettingsPtrInput {
	return (*as2securitySettingsPtrType)(v)
}

func (*as2securitySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AS2SecuritySettings)(nil)).Elem()
}

func (i *as2securitySettingsPtrType) ToAS2SecuritySettingsPtrOutput() AS2SecuritySettingsPtrOutput {
	return i.ToAS2SecuritySettingsPtrOutputWithContext(context.Background())
}

func (i *as2securitySettingsPtrType) ToAS2SecuritySettingsPtrOutputWithContext(ctx context.Context) AS2SecuritySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2SecuritySettingsPtrOutput)
}

// The AS2 agreement security settings.
type AS2SecuritySettingsResponse struct {
	// The value indicating whether to enable NRR for inbound decoded messages.
	EnableNRRForInboundDecodedMessages bool `pulumi:"enableNRRForInboundDecodedMessages"`
	// The value indicating whether to enable NRR for inbound encoded messages.
	EnableNRRForInboundEncodedMessages bool `pulumi:"enableNRRForInboundEncodedMessages"`
	// The value indicating whether to enable NRR for inbound MDN.
	EnableNRRForInboundMDN bool `pulumi:"enableNRRForInboundMDN"`
	// The value indicating whether to enable NRR for outbound decoded messages.
	EnableNRRForOutboundDecodedMessages bool `pulumi:"enableNRRForOutboundDecodedMessages"`
	// The value indicating whether to enable NRR for outbound encoded messages.
	EnableNRRForOutboundEncodedMessages bool `pulumi:"enableNRRForOutboundEncodedMessages"`
	// The value indicating whether to enable NRR for outbound MDN.
	EnableNRRForOutboundMDN bool `pulumi:"enableNRRForOutboundMDN"`
	// The name of the encryption certificate.
	EncryptionCertificateName *string `pulumi:"encryptionCertificateName"`
	// The value indicating whether to send or request a MDN.
	OverrideGroupSigningCertificate bool `pulumi:"overrideGroupSigningCertificate"`
	// The Sha2 algorithm format. Valid values are Sha2, ShaHashSize, ShaHyphenHashSize, Sha2UnderscoreHashSize.
	Sha2AlgorithmFormat *string `pulumi:"sha2AlgorithmFormat"`
	// The name of the signing certificate.
	SigningCertificateName *string `pulumi:"signingCertificateName"`
}

// The AS2 agreement security settings.
type AS2SecuritySettingsResponseOutput struct{ *pulumi.OutputState }

func (AS2SecuritySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AS2SecuritySettingsResponse)(nil)).Elem()
}

func (o AS2SecuritySettingsResponseOutput) ToAS2SecuritySettingsResponseOutput() AS2SecuritySettingsResponseOutput {
	return o
}

func (o AS2SecuritySettingsResponseOutput) ToAS2SecuritySettingsResponseOutputWithContext(ctx context.Context) AS2SecuritySettingsResponseOutput {
	return o
}

func (o AS2SecuritySettingsResponseOutput) ToAS2SecuritySettingsResponsePtrOutput() AS2SecuritySettingsResponsePtrOutput {
	return o.ToAS2SecuritySettingsResponsePtrOutputWithContext(context.Background())
}

func (o AS2SecuritySettingsResponseOutput) ToAS2SecuritySettingsResponsePtrOutputWithContext(ctx context.Context) AS2SecuritySettingsResponsePtrOutput {
	return o.ApplyT(func(v AS2SecuritySettingsResponse) *AS2SecuritySettingsResponse {
		return &v
	}).(AS2SecuritySettingsResponsePtrOutput)
}

// The value indicating whether to enable NRR for inbound decoded messages.
func (o AS2SecuritySettingsResponseOutput) EnableNRRForInboundDecodedMessages() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2SecuritySettingsResponse) bool { return v.EnableNRRForInboundDecodedMessages }).(pulumi.BoolOutput)
}

// The value indicating whether to enable NRR for inbound encoded messages.
func (o AS2SecuritySettingsResponseOutput) EnableNRRForInboundEncodedMessages() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2SecuritySettingsResponse) bool { return v.EnableNRRForInboundEncodedMessages }).(pulumi.BoolOutput)
}

// The value indicating whether to enable NRR for inbound MDN.
func (o AS2SecuritySettingsResponseOutput) EnableNRRForInboundMDN() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2SecuritySettingsResponse) bool { return v.EnableNRRForInboundMDN }).(pulumi.BoolOutput)
}

// The value indicating whether to enable NRR for outbound decoded messages.
func (o AS2SecuritySettingsResponseOutput) EnableNRRForOutboundDecodedMessages() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2SecuritySettingsResponse) bool { return v.EnableNRRForOutboundDecodedMessages }).(pulumi.BoolOutput)
}

// The value indicating whether to enable NRR for outbound encoded messages.
func (o AS2SecuritySettingsResponseOutput) EnableNRRForOutboundEncodedMessages() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2SecuritySettingsResponse) bool { return v.EnableNRRForOutboundEncodedMessages }).(pulumi.BoolOutput)
}

// The value indicating whether to enable NRR for outbound MDN.
func (o AS2SecuritySettingsResponseOutput) EnableNRRForOutboundMDN() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2SecuritySettingsResponse) bool { return v.EnableNRRForOutboundMDN }).(pulumi.BoolOutput)
}

// The name of the encryption certificate.
func (o AS2SecuritySettingsResponseOutput) EncryptionCertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AS2SecuritySettingsResponse) *string { return v.EncryptionCertificateName }).(pulumi.StringPtrOutput)
}

// The value indicating whether to send or request a MDN.
func (o AS2SecuritySettingsResponseOutput) OverrideGroupSigningCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2SecuritySettingsResponse) bool { return v.OverrideGroupSigningCertificate }).(pulumi.BoolOutput)
}

// The Sha2 algorithm format. Valid values are Sha2, ShaHashSize, ShaHyphenHashSize, Sha2UnderscoreHashSize.
func (o AS2SecuritySettingsResponseOutput) Sha2AlgorithmFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AS2SecuritySettingsResponse) *string { return v.Sha2AlgorithmFormat }).(pulumi.StringPtrOutput)
}

// The name of the signing certificate.
func (o AS2SecuritySettingsResponseOutput) SigningCertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AS2SecuritySettingsResponse) *string { return v.SigningCertificateName }).(pulumi.StringPtrOutput)
}

type AS2SecuritySettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AS2SecuritySettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AS2SecuritySettingsResponse)(nil)).Elem()
}

func (o AS2SecuritySettingsResponsePtrOutput) ToAS2SecuritySettingsResponsePtrOutput() AS2SecuritySettingsResponsePtrOutput {
	return o
}

func (o AS2SecuritySettingsResponsePtrOutput) ToAS2SecuritySettingsResponsePtrOutputWithContext(ctx context.Context) AS2SecuritySettingsResponsePtrOutput {
	return o
}

func (o AS2SecuritySettingsResponsePtrOutput) Elem() AS2SecuritySettingsResponseOutput {
	return o.ApplyT(func(v *AS2SecuritySettingsResponse) AS2SecuritySettingsResponse { return *v }).(AS2SecuritySettingsResponseOutput)
}

// The value indicating whether to enable NRR for inbound decoded messages.
func (o AS2SecuritySettingsResponsePtrOutput) EnableNRRForInboundDecodedMessages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2SecuritySettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableNRRForInboundDecodedMessages
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to enable NRR for inbound encoded messages.
func (o AS2SecuritySettingsResponsePtrOutput) EnableNRRForInboundEncodedMessages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2SecuritySettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableNRRForInboundEncodedMessages
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to enable NRR for inbound MDN.
func (o AS2SecuritySettingsResponsePtrOutput) EnableNRRForInboundMDN() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2SecuritySettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableNRRForInboundMDN
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to enable NRR for outbound decoded messages.
func (o AS2SecuritySettingsResponsePtrOutput) EnableNRRForOutboundDecodedMessages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2SecuritySettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableNRRForOutboundDecodedMessages
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to enable NRR for outbound encoded messages.
func (o AS2SecuritySettingsResponsePtrOutput) EnableNRRForOutboundEncodedMessages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2SecuritySettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableNRRForOutboundEncodedMessages
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to enable NRR for outbound MDN.
func (o AS2SecuritySettingsResponsePtrOutput) EnableNRRForOutboundMDN() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2SecuritySettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableNRRForOutboundMDN
	}).(pulumi.BoolPtrOutput)
}

// The name of the encryption certificate.
func (o AS2SecuritySettingsResponsePtrOutput) EncryptionCertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AS2SecuritySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionCertificateName
	}).(pulumi.StringPtrOutput)
}

// The value indicating whether to send or request a MDN.
func (o AS2SecuritySettingsResponsePtrOutput) OverrideGroupSigningCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2SecuritySettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.OverrideGroupSigningCertificate
	}).(pulumi.BoolPtrOutput)
}

// The Sha2 algorithm format. Valid values are Sha2, ShaHashSize, ShaHyphenHashSize, Sha2UnderscoreHashSize.
func (o AS2SecuritySettingsResponsePtrOutput) Sha2AlgorithmFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AS2SecuritySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Sha2AlgorithmFormat
	}).(pulumi.StringPtrOutput)
}

// The name of the signing certificate.
func (o AS2SecuritySettingsResponsePtrOutput) SigningCertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AS2SecuritySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SigningCertificateName
	}).(pulumi.StringPtrOutput)
}

// The AS2 agreement validation settings.
type AS2ValidationSettings struct {
	// The value indicating whether to check for certificate revocation list on receive.
	CheckCertificateRevocationListOnReceive bool `pulumi:"checkCertificateRevocationListOnReceive"`
	// The value indicating whether to check for certificate revocation list on send.
	CheckCertificateRevocationListOnSend bool `pulumi:"checkCertificateRevocationListOnSend"`
	// The value indicating whether to check for duplicate message.
	CheckDuplicateMessage bool `pulumi:"checkDuplicateMessage"`
	// The value indicating whether the message has to be compressed.
	CompressMessage bool `pulumi:"compressMessage"`
	// The value indicating whether the message has to be encrypted.
	EncryptMessage bool `pulumi:"encryptMessage"`
	// The encryption algorithm.
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// The number of days to look back for duplicate interchange.
	InterchangeDuplicatesValidityDays int `pulumi:"interchangeDuplicatesValidityDays"`
	// The value indicating whether to override incoming message properties with those in agreement.
	OverrideMessageProperties bool `pulumi:"overrideMessageProperties"`
	// The value indicating whether the message has to be signed.
	SignMessage bool `pulumi:"signMessage"`
	// The signing algorithm.
	SigningAlgorithm *string `pulumi:"signingAlgorithm"`
}

// AS2ValidationSettingsInput is an input type that accepts AS2ValidationSettingsArgs and AS2ValidationSettingsOutput values.
// You can construct a concrete instance of `AS2ValidationSettingsInput` via:
//
//          AS2ValidationSettingsArgs{...}
type AS2ValidationSettingsInput interface {
	pulumi.Input

	ToAS2ValidationSettingsOutput() AS2ValidationSettingsOutput
	ToAS2ValidationSettingsOutputWithContext(context.Context) AS2ValidationSettingsOutput
}

// The AS2 agreement validation settings.
type AS2ValidationSettingsArgs struct {
	// The value indicating whether to check for certificate revocation list on receive.
	CheckCertificateRevocationListOnReceive pulumi.BoolInput `pulumi:"checkCertificateRevocationListOnReceive"`
	// The value indicating whether to check for certificate revocation list on send.
	CheckCertificateRevocationListOnSend pulumi.BoolInput `pulumi:"checkCertificateRevocationListOnSend"`
	// The value indicating whether to check for duplicate message.
	CheckDuplicateMessage pulumi.BoolInput `pulumi:"checkDuplicateMessage"`
	// The value indicating whether the message has to be compressed.
	CompressMessage pulumi.BoolInput `pulumi:"compressMessage"`
	// The value indicating whether the message has to be encrypted.
	EncryptMessage pulumi.BoolInput `pulumi:"encryptMessage"`
	// The encryption algorithm.
	EncryptionAlgorithm pulumi.StringInput `pulumi:"encryptionAlgorithm"`
	// The number of days to look back for duplicate interchange.
	InterchangeDuplicatesValidityDays pulumi.IntInput `pulumi:"interchangeDuplicatesValidityDays"`
	// The value indicating whether to override incoming message properties with those in agreement.
	OverrideMessageProperties pulumi.BoolInput `pulumi:"overrideMessageProperties"`
	// The value indicating whether the message has to be signed.
	SignMessage pulumi.BoolInput `pulumi:"signMessage"`
	// The signing algorithm.
	SigningAlgorithm pulumi.StringPtrInput `pulumi:"signingAlgorithm"`
}

func (AS2ValidationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AS2ValidationSettings)(nil)).Elem()
}

func (i AS2ValidationSettingsArgs) ToAS2ValidationSettingsOutput() AS2ValidationSettingsOutput {
	return i.ToAS2ValidationSettingsOutputWithContext(context.Background())
}

func (i AS2ValidationSettingsArgs) ToAS2ValidationSettingsOutputWithContext(ctx context.Context) AS2ValidationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2ValidationSettingsOutput)
}

func (i AS2ValidationSettingsArgs) ToAS2ValidationSettingsPtrOutput() AS2ValidationSettingsPtrOutput {
	return i.ToAS2ValidationSettingsPtrOutputWithContext(context.Background())
}

func (i AS2ValidationSettingsArgs) ToAS2ValidationSettingsPtrOutputWithContext(ctx context.Context) AS2ValidationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2ValidationSettingsOutput).ToAS2ValidationSettingsPtrOutputWithContext(ctx)
}

// AS2ValidationSettingsPtrInput is an input type that accepts AS2ValidationSettingsArgs, AS2ValidationSettingsPtr and AS2ValidationSettingsPtrOutput values.
// You can construct a concrete instance of `AS2ValidationSettingsPtrInput` via:
//
//          AS2ValidationSettingsArgs{...}
//
//  or:
//
//          nil
type AS2ValidationSettingsPtrInput interface {
	pulumi.Input

	ToAS2ValidationSettingsPtrOutput() AS2ValidationSettingsPtrOutput
	ToAS2ValidationSettingsPtrOutputWithContext(context.Context) AS2ValidationSettingsPtrOutput
}

type as2validationSettingsPtrType AS2ValidationSettingsArgs

func AS2ValidationSettingsPtr(v *AS2ValidationSettingsArgs) AS2ValidationSettingsPtrInput {
	return (*as2validationSettingsPtrType)(v)
}

func (*as2validationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AS2ValidationSettings)(nil)).Elem()
}

func (i *as2validationSettingsPtrType) ToAS2ValidationSettingsPtrOutput() AS2ValidationSettingsPtrOutput {
	return i.ToAS2ValidationSettingsPtrOutputWithContext(context.Background())
}

func (i *as2validationSettingsPtrType) ToAS2ValidationSettingsPtrOutputWithContext(ctx context.Context) AS2ValidationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AS2ValidationSettingsPtrOutput)
}

// The AS2 agreement validation settings.
type AS2ValidationSettingsResponse struct {
	// The value indicating whether to check for certificate revocation list on receive.
	CheckCertificateRevocationListOnReceive bool `pulumi:"checkCertificateRevocationListOnReceive"`
	// The value indicating whether to check for certificate revocation list on send.
	CheckCertificateRevocationListOnSend bool `pulumi:"checkCertificateRevocationListOnSend"`
	// The value indicating whether to check for duplicate message.
	CheckDuplicateMessage bool `pulumi:"checkDuplicateMessage"`
	// The value indicating whether the message has to be compressed.
	CompressMessage bool `pulumi:"compressMessage"`
	// The value indicating whether the message has to be encrypted.
	EncryptMessage bool `pulumi:"encryptMessage"`
	// The encryption algorithm.
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// The number of days to look back for duplicate interchange.
	InterchangeDuplicatesValidityDays int `pulumi:"interchangeDuplicatesValidityDays"`
	// The value indicating whether to override incoming message properties with those in agreement.
	OverrideMessageProperties bool `pulumi:"overrideMessageProperties"`
	// The value indicating whether the message has to be signed.
	SignMessage bool `pulumi:"signMessage"`
	// The signing algorithm.
	SigningAlgorithm *string `pulumi:"signingAlgorithm"`
}

// The AS2 agreement validation settings.
type AS2ValidationSettingsResponseOutput struct{ *pulumi.OutputState }

func (AS2ValidationSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AS2ValidationSettingsResponse)(nil)).Elem()
}

func (o AS2ValidationSettingsResponseOutput) ToAS2ValidationSettingsResponseOutput() AS2ValidationSettingsResponseOutput {
	return o
}

func (o AS2ValidationSettingsResponseOutput) ToAS2ValidationSettingsResponseOutputWithContext(ctx context.Context) AS2ValidationSettingsResponseOutput {
	return o
}

func (o AS2ValidationSettingsResponseOutput) ToAS2ValidationSettingsResponsePtrOutput() AS2ValidationSettingsResponsePtrOutput {
	return o.ToAS2ValidationSettingsResponsePtrOutputWithContext(context.Background())
}

func (o AS2ValidationSettingsResponseOutput) ToAS2ValidationSettingsResponsePtrOutputWithContext(ctx context.Context) AS2ValidationSettingsResponsePtrOutput {
	return o.ApplyT(func(v AS2ValidationSettingsResponse) *AS2ValidationSettingsResponse {
		return &v
	}).(AS2ValidationSettingsResponsePtrOutput)
}

// The value indicating whether to check for certificate revocation list on receive.
func (o AS2ValidationSettingsResponseOutput) CheckCertificateRevocationListOnReceive() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2ValidationSettingsResponse) bool { return v.CheckCertificateRevocationListOnReceive }).(pulumi.BoolOutput)
}

// The value indicating whether to check for certificate revocation list on send.
func (o AS2ValidationSettingsResponseOutput) CheckCertificateRevocationListOnSend() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2ValidationSettingsResponse) bool { return v.CheckCertificateRevocationListOnSend }).(pulumi.BoolOutput)
}

// The value indicating whether to check for duplicate message.
func (o AS2ValidationSettingsResponseOutput) CheckDuplicateMessage() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2ValidationSettingsResponse) bool { return v.CheckDuplicateMessage }).(pulumi.BoolOutput)
}

// The value indicating whether the message has to be compressed.
func (o AS2ValidationSettingsResponseOutput) CompressMessage() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2ValidationSettingsResponse) bool { return v.CompressMessage }).(pulumi.BoolOutput)
}

// The value indicating whether the message has to be encrypted.
func (o AS2ValidationSettingsResponseOutput) EncryptMessage() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2ValidationSettingsResponse) bool { return v.EncryptMessage }).(pulumi.BoolOutput)
}

// The encryption algorithm.
func (o AS2ValidationSettingsResponseOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v AS2ValidationSettingsResponse) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// The number of days to look back for duplicate interchange.
func (o AS2ValidationSettingsResponseOutput) InterchangeDuplicatesValidityDays() pulumi.IntOutput {
	return o.ApplyT(func(v AS2ValidationSettingsResponse) int { return v.InterchangeDuplicatesValidityDays }).(pulumi.IntOutput)
}

// The value indicating whether to override incoming message properties with those in agreement.
func (o AS2ValidationSettingsResponseOutput) OverrideMessageProperties() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2ValidationSettingsResponse) bool { return v.OverrideMessageProperties }).(pulumi.BoolOutput)
}

// The value indicating whether the message has to be signed.
func (o AS2ValidationSettingsResponseOutput) SignMessage() pulumi.BoolOutput {
	return o.ApplyT(func(v AS2ValidationSettingsResponse) bool { return v.SignMessage }).(pulumi.BoolOutput)
}

// The signing algorithm.
func (o AS2ValidationSettingsResponseOutput) SigningAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AS2ValidationSettingsResponse) *string { return v.SigningAlgorithm }).(pulumi.StringPtrOutput)
}

type AS2ValidationSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AS2ValidationSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AS2ValidationSettingsResponse)(nil)).Elem()
}

func (o AS2ValidationSettingsResponsePtrOutput) ToAS2ValidationSettingsResponsePtrOutput() AS2ValidationSettingsResponsePtrOutput {
	return o
}

func (o AS2ValidationSettingsResponsePtrOutput) ToAS2ValidationSettingsResponsePtrOutputWithContext(ctx context.Context) AS2ValidationSettingsResponsePtrOutput {
	return o
}

func (o AS2ValidationSettingsResponsePtrOutput) Elem() AS2ValidationSettingsResponseOutput {
	return o.ApplyT(func(v *AS2ValidationSettingsResponse) AS2ValidationSettingsResponse { return *v }).(AS2ValidationSettingsResponseOutput)
}

// The value indicating whether to check for certificate revocation list on receive.
func (o AS2ValidationSettingsResponsePtrOutput) CheckCertificateRevocationListOnReceive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2ValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.CheckCertificateRevocationListOnReceive
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to check for certificate revocation list on send.
func (o AS2ValidationSettingsResponsePtrOutput) CheckCertificateRevocationListOnSend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2ValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.CheckCertificateRevocationListOnSend
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to check for duplicate message.
func (o AS2ValidationSettingsResponsePtrOutput) CheckDuplicateMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2ValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.CheckDuplicateMessage
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether the message has to be compressed.
func (o AS2ValidationSettingsResponsePtrOutput) CompressMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2ValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.CompressMessage
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether the message has to be encrypted.
func (o AS2ValidationSettingsResponsePtrOutput) EncryptMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2ValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.EncryptMessage
	}).(pulumi.BoolPtrOutput)
}

// The encryption algorithm.
func (o AS2ValidationSettingsResponsePtrOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AS2ValidationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionAlgorithm
	}).(pulumi.StringPtrOutput)
}

// The number of days to look back for duplicate interchange.
func (o AS2ValidationSettingsResponsePtrOutput) InterchangeDuplicatesValidityDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AS2ValidationSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.InterchangeDuplicatesValidityDays
	}).(pulumi.IntPtrOutput)
}

// The value indicating whether to override incoming message properties with those in agreement.
func (o AS2ValidationSettingsResponsePtrOutput) OverrideMessageProperties() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2ValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.OverrideMessageProperties
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether the message has to be signed.
func (o AS2ValidationSettingsResponsePtrOutput) SignMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AS2ValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.SignMessage
	}).(pulumi.BoolPtrOutput)
}

// The signing algorithm.
func (o AS2ValidationSettingsResponsePtrOutput) SigningAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AS2ValidationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SigningAlgorithm
	}).(pulumi.StringPtrOutput)
}

// The integration account agreement content.
type AgreementContent struct {
	// The AS2 agreement content.
	AS2 *AS2AgreementContent `pulumi:"aS2"`
	// The EDIFACT agreement content.
	Edifact *EdifactAgreementContent `pulumi:"edifact"`
	// The X12 agreement content.
	X12 *X12AgreementContent `pulumi:"x12"`
}

// AgreementContentInput is an input type that accepts AgreementContentArgs and AgreementContentOutput values.
// You can construct a concrete instance of `AgreementContentInput` via:
//
//          AgreementContentArgs{...}
type AgreementContentInput interface {
	pulumi.Input

	ToAgreementContentOutput() AgreementContentOutput
	ToAgreementContentOutputWithContext(context.Context) AgreementContentOutput
}

// The integration account agreement content.
type AgreementContentArgs struct {
	// The AS2 agreement content.
	AS2 AS2AgreementContentPtrInput `pulumi:"aS2"`
	// The EDIFACT agreement content.
	Edifact EdifactAgreementContentPtrInput `pulumi:"edifact"`
	// The X12 agreement content.
	X12 X12AgreementContentPtrInput `pulumi:"x12"`
}

func (AgreementContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgreementContent)(nil)).Elem()
}

func (i AgreementContentArgs) ToAgreementContentOutput() AgreementContentOutput {
	return i.ToAgreementContentOutputWithContext(context.Background())
}

func (i AgreementContentArgs) ToAgreementContentOutputWithContext(ctx context.Context) AgreementContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgreementContentOutput)
}

func (i AgreementContentArgs) ToAgreementContentPtrOutput() AgreementContentPtrOutput {
	return i.ToAgreementContentPtrOutputWithContext(context.Background())
}

func (i AgreementContentArgs) ToAgreementContentPtrOutputWithContext(ctx context.Context) AgreementContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgreementContentOutput).ToAgreementContentPtrOutputWithContext(ctx)
}

// AgreementContentPtrInput is an input type that accepts AgreementContentArgs, AgreementContentPtr and AgreementContentPtrOutput values.
// You can construct a concrete instance of `AgreementContentPtrInput` via:
//
//          AgreementContentArgs{...}
//
//  or:
//
//          nil
type AgreementContentPtrInput interface {
	pulumi.Input

	ToAgreementContentPtrOutput() AgreementContentPtrOutput
	ToAgreementContentPtrOutputWithContext(context.Context) AgreementContentPtrOutput
}

type agreementContentPtrType AgreementContentArgs

func AgreementContentPtr(v *AgreementContentArgs) AgreementContentPtrInput {
	return (*agreementContentPtrType)(v)
}

func (*agreementContentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgreementContent)(nil)).Elem()
}

func (i *agreementContentPtrType) ToAgreementContentPtrOutput() AgreementContentPtrOutput {
	return i.ToAgreementContentPtrOutputWithContext(context.Background())
}

func (i *agreementContentPtrType) ToAgreementContentPtrOutputWithContext(ctx context.Context) AgreementContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgreementContentPtrOutput)
}

// The integration account agreement content.
type AgreementContentResponse struct {
	// The AS2 agreement content.
	AS2 *AS2AgreementContentResponse `pulumi:"aS2"`
	// The EDIFACT agreement content.
	Edifact *EdifactAgreementContentResponse `pulumi:"edifact"`
	// The X12 agreement content.
	X12 *X12AgreementContentResponse `pulumi:"x12"`
}

// The integration account agreement content.
type AgreementContentResponseOutput struct{ *pulumi.OutputState }

func (AgreementContentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgreementContentResponse)(nil)).Elem()
}

func (o AgreementContentResponseOutput) ToAgreementContentResponseOutput() AgreementContentResponseOutput {
	return o
}

func (o AgreementContentResponseOutput) ToAgreementContentResponseOutputWithContext(ctx context.Context) AgreementContentResponseOutput {
	return o
}

func (o AgreementContentResponseOutput) ToAgreementContentResponsePtrOutput() AgreementContentResponsePtrOutput {
	return o.ToAgreementContentResponsePtrOutputWithContext(context.Background())
}

func (o AgreementContentResponseOutput) ToAgreementContentResponsePtrOutputWithContext(ctx context.Context) AgreementContentResponsePtrOutput {
	return o.ApplyT(func(v AgreementContentResponse) *AgreementContentResponse {
		return &v
	}).(AgreementContentResponsePtrOutput)
}

// The AS2 agreement content.
func (o AgreementContentResponseOutput) AS2() AS2AgreementContentResponsePtrOutput {
	return o.ApplyT(func(v AgreementContentResponse) *AS2AgreementContentResponse { return v.AS2 }).(AS2AgreementContentResponsePtrOutput)
}

// The EDIFACT agreement content.
func (o AgreementContentResponseOutput) Edifact() EdifactAgreementContentResponsePtrOutput {
	return o.ApplyT(func(v AgreementContentResponse) *EdifactAgreementContentResponse { return v.Edifact }).(EdifactAgreementContentResponsePtrOutput)
}

// The X12 agreement content.
func (o AgreementContentResponseOutput) X12() X12AgreementContentResponsePtrOutput {
	return o.ApplyT(func(v AgreementContentResponse) *X12AgreementContentResponse { return v.X12 }).(X12AgreementContentResponsePtrOutput)
}

type AgreementContentResponsePtrOutput struct{ *pulumi.OutputState }

func (AgreementContentResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgreementContentResponse)(nil)).Elem()
}

func (o AgreementContentResponsePtrOutput) ToAgreementContentResponsePtrOutput() AgreementContentResponsePtrOutput {
	return o
}

func (o AgreementContentResponsePtrOutput) ToAgreementContentResponsePtrOutputWithContext(ctx context.Context) AgreementContentResponsePtrOutput {
	return o
}

func (o AgreementContentResponsePtrOutput) Elem() AgreementContentResponseOutput {
	return o.ApplyT(func(v *AgreementContentResponse) AgreementContentResponse { return *v }).(AgreementContentResponseOutput)
}

// The AS2 agreement content.
func (o AgreementContentResponsePtrOutput) AS2() AS2AgreementContentResponsePtrOutput {
	return o.ApplyT(func(v *AgreementContentResponse) *AS2AgreementContentResponse {
		if v == nil {
			return nil
		}
		return v.AS2
	}).(AS2AgreementContentResponsePtrOutput)
}

// The EDIFACT agreement content.
func (o AgreementContentResponsePtrOutput) Edifact() EdifactAgreementContentResponsePtrOutput {
	return o.ApplyT(func(v *AgreementContentResponse) *EdifactAgreementContentResponse {
		if v == nil {
			return nil
		}
		return v.Edifact
	}).(EdifactAgreementContentResponsePtrOutput)
}

// The X12 agreement content.
func (o AgreementContentResponsePtrOutput) X12() X12AgreementContentResponsePtrOutput {
	return o.ApplyT(func(v *AgreementContentResponse) *X12AgreementContentResponse {
		if v == nil {
			return nil
		}
		return v.X12
	}).(X12AgreementContentResponsePtrOutput)
}

// The API deployment parameter metadata.
type ApiDeploymentParameterMetadataResponse struct {
	// The description.
	Description *string `pulumi:"description"`
	// The display name.
	DisplayName *string `pulumi:"displayName"`
	// Indicates whether its required.
	IsRequired *bool `pulumi:"isRequired"`
	// The type.
	Type *string `pulumi:"type"`
	// The visibility.
	Visibility *string `pulumi:"visibility"`
}

// The API deployment parameter metadata.
type ApiDeploymentParameterMetadataResponseOutput struct{ *pulumi.OutputState }

func (ApiDeploymentParameterMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDeploymentParameterMetadataResponse)(nil)).Elem()
}

func (o ApiDeploymentParameterMetadataResponseOutput) ToApiDeploymentParameterMetadataResponseOutput() ApiDeploymentParameterMetadataResponseOutput {
	return o
}

func (o ApiDeploymentParameterMetadataResponseOutput) ToApiDeploymentParameterMetadataResponseOutputWithContext(ctx context.Context) ApiDeploymentParameterMetadataResponseOutput {
	return o
}

func (o ApiDeploymentParameterMetadataResponseOutput) ToApiDeploymentParameterMetadataResponsePtrOutput() ApiDeploymentParameterMetadataResponsePtrOutput {
	return o.ToApiDeploymentParameterMetadataResponsePtrOutputWithContext(context.Background())
}

func (o ApiDeploymentParameterMetadataResponseOutput) ToApiDeploymentParameterMetadataResponsePtrOutputWithContext(ctx context.Context) ApiDeploymentParameterMetadataResponsePtrOutput {
	return o.ApplyT(func(v ApiDeploymentParameterMetadataResponse) *ApiDeploymentParameterMetadataResponse {
		return &v
	}).(ApiDeploymentParameterMetadataResponsePtrOutput)
}

// The description.
func (o ApiDeploymentParameterMetadataResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiDeploymentParameterMetadataResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name.
func (o ApiDeploymentParameterMetadataResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiDeploymentParameterMetadataResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Indicates whether its required.
func (o ApiDeploymentParameterMetadataResponseOutput) IsRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiDeploymentParameterMetadataResponse) *bool { return v.IsRequired }).(pulumi.BoolPtrOutput)
}

// The type.
func (o ApiDeploymentParameterMetadataResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiDeploymentParameterMetadataResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The visibility.
func (o ApiDeploymentParameterMetadataResponseOutput) Visibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiDeploymentParameterMetadataResponse) *string { return v.Visibility }).(pulumi.StringPtrOutput)
}

type ApiDeploymentParameterMetadataResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiDeploymentParameterMetadataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDeploymentParameterMetadataResponse)(nil)).Elem()
}

func (o ApiDeploymentParameterMetadataResponsePtrOutput) ToApiDeploymentParameterMetadataResponsePtrOutput() ApiDeploymentParameterMetadataResponsePtrOutput {
	return o
}

func (o ApiDeploymentParameterMetadataResponsePtrOutput) ToApiDeploymentParameterMetadataResponsePtrOutputWithContext(ctx context.Context) ApiDeploymentParameterMetadataResponsePtrOutput {
	return o
}

func (o ApiDeploymentParameterMetadataResponsePtrOutput) Elem() ApiDeploymentParameterMetadataResponseOutput {
	return o.ApplyT(func(v *ApiDeploymentParameterMetadataResponse) ApiDeploymentParameterMetadataResponse { return *v }).(ApiDeploymentParameterMetadataResponseOutput)
}

// The description.
func (o ApiDeploymentParameterMetadataResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiDeploymentParameterMetadataResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The display name.
func (o ApiDeploymentParameterMetadataResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiDeploymentParameterMetadataResponse) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Indicates whether its required.
func (o ApiDeploymentParameterMetadataResponsePtrOutput) IsRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApiDeploymentParameterMetadataResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsRequired
	}).(pulumi.BoolPtrOutput)
}

// The type.
func (o ApiDeploymentParameterMetadataResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiDeploymentParameterMetadataResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The visibility.
func (o ApiDeploymentParameterMetadataResponsePtrOutput) Visibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiDeploymentParameterMetadataResponse) *string {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(pulumi.StringPtrOutput)
}

// The API deployment parameters metadata.
type ApiDeploymentParameterMetadataSetResponse struct {
	// The package content link parameter.
	PackageContentLink *ApiDeploymentParameterMetadataResponse `pulumi:"packageContentLink"`
	// The package content link parameter.
	RedisCacheConnectionString *ApiDeploymentParameterMetadataResponse `pulumi:"redisCacheConnectionString"`
}

// The API deployment parameters metadata.
type ApiDeploymentParameterMetadataSetResponseOutput struct{ *pulumi.OutputState }

func (ApiDeploymentParameterMetadataSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDeploymentParameterMetadataSetResponse)(nil)).Elem()
}

func (o ApiDeploymentParameterMetadataSetResponseOutput) ToApiDeploymentParameterMetadataSetResponseOutput() ApiDeploymentParameterMetadataSetResponseOutput {
	return o
}

func (o ApiDeploymentParameterMetadataSetResponseOutput) ToApiDeploymentParameterMetadataSetResponseOutputWithContext(ctx context.Context) ApiDeploymentParameterMetadataSetResponseOutput {
	return o
}

func (o ApiDeploymentParameterMetadataSetResponseOutput) ToApiDeploymentParameterMetadataSetResponsePtrOutput() ApiDeploymentParameterMetadataSetResponsePtrOutput {
	return o.ToApiDeploymentParameterMetadataSetResponsePtrOutputWithContext(context.Background())
}

func (o ApiDeploymentParameterMetadataSetResponseOutput) ToApiDeploymentParameterMetadataSetResponsePtrOutputWithContext(ctx context.Context) ApiDeploymentParameterMetadataSetResponsePtrOutput {
	return o.ApplyT(func(v ApiDeploymentParameterMetadataSetResponse) *ApiDeploymentParameterMetadataSetResponse {
		return &v
	}).(ApiDeploymentParameterMetadataSetResponsePtrOutput)
}

// The package content link parameter.
func (o ApiDeploymentParameterMetadataSetResponseOutput) PackageContentLink() ApiDeploymentParameterMetadataResponsePtrOutput {
	return o.ApplyT(func(v ApiDeploymentParameterMetadataSetResponse) *ApiDeploymentParameterMetadataResponse {
		return v.PackageContentLink
	}).(ApiDeploymentParameterMetadataResponsePtrOutput)
}

// The package content link parameter.
func (o ApiDeploymentParameterMetadataSetResponseOutput) RedisCacheConnectionString() ApiDeploymentParameterMetadataResponsePtrOutput {
	return o.ApplyT(func(v ApiDeploymentParameterMetadataSetResponse) *ApiDeploymentParameterMetadataResponse {
		return v.RedisCacheConnectionString
	}).(ApiDeploymentParameterMetadataResponsePtrOutput)
}

type ApiDeploymentParameterMetadataSetResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiDeploymentParameterMetadataSetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDeploymentParameterMetadataSetResponse)(nil)).Elem()
}

func (o ApiDeploymentParameterMetadataSetResponsePtrOutput) ToApiDeploymentParameterMetadataSetResponsePtrOutput() ApiDeploymentParameterMetadataSetResponsePtrOutput {
	return o
}

func (o ApiDeploymentParameterMetadataSetResponsePtrOutput) ToApiDeploymentParameterMetadataSetResponsePtrOutputWithContext(ctx context.Context) ApiDeploymentParameterMetadataSetResponsePtrOutput {
	return o
}

func (o ApiDeploymentParameterMetadataSetResponsePtrOutput) Elem() ApiDeploymentParameterMetadataSetResponseOutput {
	return o.ApplyT(func(v *ApiDeploymentParameterMetadataSetResponse) ApiDeploymentParameterMetadataSetResponse {
		return *v
	}).(ApiDeploymentParameterMetadataSetResponseOutput)
}

// The package content link parameter.
func (o ApiDeploymentParameterMetadataSetResponsePtrOutput) PackageContentLink() ApiDeploymentParameterMetadataResponsePtrOutput {
	return o.ApplyT(func(v *ApiDeploymentParameterMetadataSetResponse) *ApiDeploymentParameterMetadataResponse {
		if v == nil {
			return nil
		}
		return v.PackageContentLink
	}).(ApiDeploymentParameterMetadataResponsePtrOutput)
}

// The package content link parameter.
func (o ApiDeploymentParameterMetadataSetResponsePtrOutput) RedisCacheConnectionString() ApiDeploymentParameterMetadataResponsePtrOutput {
	return o.ApplyT(func(v *ApiDeploymentParameterMetadataSetResponse) *ApiDeploymentParameterMetadataResponse {
		if v == nil {
			return nil
		}
		return v.RedisCacheConnectionString
	}).(ApiDeploymentParameterMetadataResponsePtrOutput)
}

// The API backend service.
type ApiResourceBackendServiceResponse struct {
	// The service URL.
	ServiceUrl *string `pulumi:"serviceUrl"`
}

// The API backend service.
type ApiResourceBackendServiceResponseOutput struct{ *pulumi.OutputState }

func (ApiResourceBackendServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiResourceBackendServiceResponse)(nil)).Elem()
}

func (o ApiResourceBackendServiceResponseOutput) ToApiResourceBackendServiceResponseOutput() ApiResourceBackendServiceResponseOutput {
	return o
}

func (o ApiResourceBackendServiceResponseOutput) ToApiResourceBackendServiceResponseOutputWithContext(ctx context.Context) ApiResourceBackendServiceResponseOutput {
	return o
}

func (o ApiResourceBackendServiceResponseOutput) ToApiResourceBackendServiceResponsePtrOutput() ApiResourceBackendServiceResponsePtrOutput {
	return o.ToApiResourceBackendServiceResponsePtrOutputWithContext(context.Background())
}

func (o ApiResourceBackendServiceResponseOutput) ToApiResourceBackendServiceResponsePtrOutputWithContext(ctx context.Context) ApiResourceBackendServiceResponsePtrOutput {
	return o.ApplyT(func(v ApiResourceBackendServiceResponse) *ApiResourceBackendServiceResponse {
		return &v
	}).(ApiResourceBackendServiceResponsePtrOutput)
}

// The service URL.
func (o ApiResourceBackendServiceResponseOutput) ServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceBackendServiceResponse) *string { return v.ServiceUrl }).(pulumi.StringPtrOutput)
}

type ApiResourceBackendServiceResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiResourceBackendServiceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiResourceBackendServiceResponse)(nil)).Elem()
}

func (o ApiResourceBackendServiceResponsePtrOutput) ToApiResourceBackendServiceResponsePtrOutput() ApiResourceBackendServiceResponsePtrOutput {
	return o
}

func (o ApiResourceBackendServiceResponsePtrOutput) ToApiResourceBackendServiceResponsePtrOutputWithContext(ctx context.Context) ApiResourceBackendServiceResponsePtrOutput {
	return o
}

func (o ApiResourceBackendServiceResponsePtrOutput) Elem() ApiResourceBackendServiceResponseOutput {
	return o.ApplyT(func(v *ApiResourceBackendServiceResponse) ApiResourceBackendServiceResponse { return *v }).(ApiResourceBackendServiceResponseOutput)
}

// The service URL.
func (o ApiResourceBackendServiceResponsePtrOutput) ServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceBackendServiceResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceUrl
	}).(pulumi.StringPtrOutput)
}

// The Api resource definition.
type ApiResourceDefinitionsResponse struct {
	// The modified swagger url.
	ModifiedSwaggerUrl *string `pulumi:"modifiedSwaggerUrl"`
	// The original swagger url.
	OriginalSwaggerUrl *string `pulumi:"originalSwaggerUrl"`
}

// The Api resource definition.
type ApiResourceDefinitionsResponseOutput struct{ *pulumi.OutputState }

func (ApiResourceDefinitionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiResourceDefinitionsResponse)(nil)).Elem()
}

func (o ApiResourceDefinitionsResponseOutput) ToApiResourceDefinitionsResponseOutput() ApiResourceDefinitionsResponseOutput {
	return o
}

func (o ApiResourceDefinitionsResponseOutput) ToApiResourceDefinitionsResponseOutputWithContext(ctx context.Context) ApiResourceDefinitionsResponseOutput {
	return o
}

func (o ApiResourceDefinitionsResponseOutput) ToApiResourceDefinitionsResponsePtrOutput() ApiResourceDefinitionsResponsePtrOutput {
	return o.ToApiResourceDefinitionsResponsePtrOutputWithContext(context.Background())
}

func (o ApiResourceDefinitionsResponseOutput) ToApiResourceDefinitionsResponsePtrOutputWithContext(ctx context.Context) ApiResourceDefinitionsResponsePtrOutput {
	return o.ApplyT(func(v ApiResourceDefinitionsResponse) *ApiResourceDefinitionsResponse {
		return &v
	}).(ApiResourceDefinitionsResponsePtrOutput)
}

// The modified swagger url.
func (o ApiResourceDefinitionsResponseOutput) ModifiedSwaggerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceDefinitionsResponse) *string { return v.ModifiedSwaggerUrl }).(pulumi.StringPtrOutput)
}

// The original swagger url.
func (o ApiResourceDefinitionsResponseOutput) OriginalSwaggerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceDefinitionsResponse) *string { return v.OriginalSwaggerUrl }).(pulumi.StringPtrOutput)
}

type ApiResourceDefinitionsResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiResourceDefinitionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiResourceDefinitionsResponse)(nil)).Elem()
}

func (o ApiResourceDefinitionsResponsePtrOutput) ToApiResourceDefinitionsResponsePtrOutput() ApiResourceDefinitionsResponsePtrOutput {
	return o
}

func (o ApiResourceDefinitionsResponsePtrOutput) ToApiResourceDefinitionsResponsePtrOutputWithContext(ctx context.Context) ApiResourceDefinitionsResponsePtrOutput {
	return o
}

func (o ApiResourceDefinitionsResponsePtrOutput) Elem() ApiResourceDefinitionsResponseOutput {
	return o.ApplyT(func(v *ApiResourceDefinitionsResponse) ApiResourceDefinitionsResponse { return *v }).(ApiResourceDefinitionsResponseOutput)
}

// The modified swagger url.
func (o ApiResourceDefinitionsResponsePtrOutput) ModifiedSwaggerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceDefinitionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ModifiedSwaggerUrl
	}).(pulumi.StringPtrOutput)
}

// The original swagger url.
func (o ApiResourceDefinitionsResponsePtrOutput) OriginalSwaggerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceDefinitionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OriginalSwaggerUrl
	}).(pulumi.StringPtrOutput)
}

// The API general information.
type ApiResourceGeneralInformationResponse struct {
	// The description.
	Description *string `pulumi:"description"`
	// The display name.
	DisplayName *string `pulumi:"displayName"`
	// The icon url.
	IconUrl *string `pulumi:"iconUrl"`
	// The release tag.
	ReleaseTag *string `pulumi:"releaseTag"`
	// The terms of use url.
	TermsOfUseUrl *string `pulumi:"termsOfUseUrl"`
	// The tier.
	Tier *string `pulumi:"tier"`
}

// The API general information.
type ApiResourceGeneralInformationResponseOutput struct{ *pulumi.OutputState }

func (ApiResourceGeneralInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiResourceGeneralInformationResponse)(nil)).Elem()
}

func (o ApiResourceGeneralInformationResponseOutput) ToApiResourceGeneralInformationResponseOutput() ApiResourceGeneralInformationResponseOutput {
	return o
}

func (o ApiResourceGeneralInformationResponseOutput) ToApiResourceGeneralInformationResponseOutputWithContext(ctx context.Context) ApiResourceGeneralInformationResponseOutput {
	return o
}

func (o ApiResourceGeneralInformationResponseOutput) ToApiResourceGeneralInformationResponsePtrOutput() ApiResourceGeneralInformationResponsePtrOutput {
	return o.ToApiResourceGeneralInformationResponsePtrOutputWithContext(context.Background())
}

func (o ApiResourceGeneralInformationResponseOutput) ToApiResourceGeneralInformationResponsePtrOutputWithContext(ctx context.Context) ApiResourceGeneralInformationResponsePtrOutput {
	return o.ApplyT(func(v ApiResourceGeneralInformationResponse) *ApiResourceGeneralInformationResponse {
		return &v
	}).(ApiResourceGeneralInformationResponsePtrOutput)
}

// The description.
func (o ApiResourceGeneralInformationResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceGeneralInformationResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name.
func (o ApiResourceGeneralInformationResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceGeneralInformationResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The icon url.
func (o ApiResourceGeneralInformationResponseOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceGeneralInformationResponse) *string { return v.IconUrl }).(pulumi.StringPtrOutput)
}

// The release tag.
func (o ApiResourceGeneralInformationResponseOutput) ReleaseTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceGeneralInformationResponse) *string { return v.ReleaseTag }).(pulumi.StringPtrOutput)
}

// The terms of use url.
func (o ApiResourceGeneralInformationResponseOutput) TermsOfUseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceGeneralInformationResponse) *string { return v.TermsOfUseUrl }).(pulumi.StringPtrOutput)
}

// The tier.
func (o ApiResourceGeneralInformationResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceGeneralInformationResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ApiResourceGeneralInformationResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiResourceGeneralInformationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiResourceGeneralInformationResponse)(nil)).Elem()
}

func (o ApiResourceGeneralInformationResponsePtrOutput) ToApiResourceGeneralInformationResponsePtrOutput() ApiResourceGeneralInformationResponsePtrOutput {
	return o
}

func (o ApiResourceGeneralInformationResponsePtrOutput) ToApiResourceGeneralInformationResponsePtrOutputWithContext(ctx context.Context) ApiResourceGeneralInformationResponsePtrOutput {
	return o
}

func (o ApiResourceGeneralInformationResponsePtrOutput) Elem() ApiResourceGeneralInformationResponseOutput {
	return o.ApplyT(func(v *ApiResourceGeneralInformationResponse) ApiResourceGeneralInformationResponse { return *v }).(ApiResourceGeneralInformationResponseOutput)
}

// The description.
func (o ApiResourceGeneralInformationResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceGeneralInformationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The display name.
func (o ApiResourceGeneralInformationResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceGeneralInformationResponse) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The icon url.
func (o ApiResourceGeneralInformationResponsePtrOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceGeneralInformationResponse) *string {
		if v == nil {
			return nil
		}
		return v.IconUrl
	}).(pulumi.StringPtrOutput)
}

// The release tag.
func (o ApiResourceGeneralInformationResponsePtrOutput) ReleaseTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceGeneralInformationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReleaseTag
	}).(pulumi.StringPtrOutput)
}

// The terms of use url.
func (o ApiResourceGeneralInformationResponsePtrOutput) TermsOfUseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceGeneralInformationResponse) *string {
		if v == nil {
			return nil
		}
		return v.TermsOfUseUrl
	}).(pulumi.StringPtrOutput)
}

// The tier.
func (o ApiResourceGeneralInformationResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceGeneralInformationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// The api resource metadata.
type ApiResourceMetadataResponse struct {
	// The api type.
	ApiType *string `pulumi:"apiType"`
	// The brand color.
	BrandColor *string `pulumi:"brandColor"`
	// The connection type.
	ConnectionType *string `pulumi:"connectionType"`
	// The connector deployment parameters metadata.
	DeploymentParameters *ApiDeploymentParameterMetadataSetResponse `pulumi:"deploymentParameters"`
	// The hide key.
	HideKey *string `pulumi:"hideKey"`
	// The provisioning state.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The source.
	Source *string `pulumi:"source"`
	// The tags.
	Tags map[string]string `pulumi:"tags"`
	// The WSDL import method.
	WsdlImportMethod *string `pulumi:"wsdlImportMethod"`
	// The WSDL service.
	WsdlService *WsdlServiceResponse `pulumi:"wsdlService"`
}

// The api resource metadata.
type ApiResourceMetadataResponseOutput struct{ *pulumi.OutputState }

func (ApiResourceMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiResourceMetadataResponse)(nil)).Elem()
}

func (o ApiResourceMetadataResponseOutput) ToApiResourceMetadataResponseOutput() ApiResourceMetadataResponseOutput {
	return o
}

func (o ApiResourceMetadataResponseOutput) ToApiResourceMetadataResponseOutputWithContext(ctx context.Context) ApiResourceMetadataResponseOutput {
	return o
}

func (o ApiResourceMetadataResponseOutput) ToApiResourceMetadataResponsePtrOutput() ApiResourceMetadataResponsePtrOutput {
	return o.ToApiResourceMetadataResponsePtrOutputWithContext(context.Background())
}

func (o ApiResourceMetadataResponseOutput) ToApiResourceMetadataResponsePtrOutputWithContext(ctx context.Context) ApiResourceMetadataResponsePtrOutput {
	return o.ApplyT(func(v ApiResourceMetadataResponse) *ApiResourceMetadataResponse {
		return &v
	}).(ApiResourceMetadataResponsePtrOutput)
}

// The api type.
func (o ApiResourceMetadataResponseOutput) ApiType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceMetadataResponse) *string { return v.ApiType }).(pulumi.StringPtrOutput)
}

// The brand color.
func (o ApiResourceMetadataResponseOutput) BrandColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceMetadataResponse) *string { return v.BrandColor }).(pulumi.StringPtrOutput)
}

// The connection type.
func (o ApiResourceMetadataResponseOutput) ConnectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceMetadataResponse) *string { return v.ConnectionType }).(pulumi.StringPtrOutput)
}

// The connector deployment parameters metadata.
func (o ApiResourceMetadataResponseOutput) DeploymentParameters() ApiDeploymentParameterMetadataSetResponsePtrOutput {
	return o.ApplyT(func(v ApiResourceMetadataResponse) *ApiDeploymentParameterMetadataSetResponse {
		return v.DeploymentParameters
	}).(ApiDeploymentParameterMetadataSetResponsePtrOutput)
}

// The hide key.
func (o ApiResourceMetadataResponseOutput) HideKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceMetadataResponse) *string { return v.HideKey }).(pulumi.StringPtrOutput)
}

// The provisioning state.
func (o ApiResourceMetadataResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceMetadataResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The source.
func (o ApiResourceMetadataResponseOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceMetadataResponse) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// The tags.
func (o ApiResourceMetadataResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApiResourceMetadataResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The WSDL import method.
func (o ApiResourceMetadataResponseOutput) WsdlImportMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceMetadataResponse) *string { return v.WsdlImportMethod }).(pulumi.StringPtrOutput)
}

// The WSDL service.
func (o ApiResourceMetadataResponseOutput) WsdlService() WsdlServiceResponsePtrOutput {
	return o.ApplyT(func(v ApiResourceMetadataResponse) *WsdlServiceResponse { return v.WsdlService }).(WsdlServiceResponsePtrOutput)
}

type ApiResourceMetadataResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiResourceMetadataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiResourceMetadataResponse)(nil)).Elem()
}

func (o ApiResourceMetadataResponsePtrOutput) ToApiResourceMetadataResponsePtrOutput() ApiResourceMetadataResponsePtrOutput {
	return o
}

func (o ApiResourceMetadataResponsePtrOutput) ToApiResourceMetadataResponsePtrOutputWithContext(ctx context.Context) ApiResourceMetadataResponsePtrOutput {
	return o
}

func (o ApiResourceMetadataResponsePtrOutput) Elem() ApiResourceMetadataResponseOutput {
	return o.ApplyT(func(v *ApiResourceMetadataResponse) ApiResourceMetadataResponse { return *v }).(ApiResourceMetadataResponseOutput)
}

// The api type.
func (o ApiResourceMetadataResponsePtrOutput) ApiType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceMetadataResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiType
	}).(pulumi.StringPtrOutput)
}

// The brand color.
func (o ApiResourceMetadataResponsePtrOutput) BrandColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceMetadataResponse) *string {
		if v == nil {
			return nil
		}
		return v.BrandColor
	}).(pulumi.StringPtrOutput)
}

// The connection type.
func (o ApiResourceMetadataResponsePtrOutput) ConnectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceMetadataResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionType
	}).(pulumi.StringPtrOutput)
}

// The connector deployment parameters metadata.
func (o ApiResourceMetadataResponsePtrOutput) DeploymentParameters() ApiDeploymentParameterMetadataSetResponsePtrOutput {
	return o.ApplyT(func(v *ApiResourceMetadataResponse) *ApiDeploymentParameterMetadataSetResponse {
		if v == nil {
			return nil
		}
		return v.DeploymentParameters
	}).(ApiDeploymentParameterMetadataSetResponsePtrOutput)
}

// The hide key.
func (o ApiResourceMetadataResponsePtrOutput) HideKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceMetadataResponse) *string {
		if v == nil {
			return nil
		}
		return v.HideKey
	}).(pulumi.StringPtrOutput)
}

// The provisioning state.
func (o ApiResourceMetadataResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceMetadataResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The source.
func (o ApiResourceMetadataResponsePtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceMetadataResponse) *string {
		if v == nil {
			return nil
		}
		return v.Source
	}).(pulumi.StringPtrOutput)
}

// The tags.
func (o ApiResourceMetadataResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApiResourceMetadataResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// The WSDL import method.
func (o ApiResourceMetadataResponsePtrOutput) WsdlImportMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceMetadataResponse) *string {
		if v == nil {
			return nil
		}
		return v.WsdlImportMethod
	}).(pulumi.StringPtrOutput)
}

// The WSDL service.
func (o ApiResourceMetadataResponsePtrOutput) WsdlService() WsdlServiceResponsePtrOutput {
	return o.ApplyT(func(v *ApiResourceMetadataResponse) *WsdlServiceResponse {
		if v == nil {
			return nil
		}
		return v.WsdlService
	}).(WsdlServiceResponsePtrOutput)
}

// The API resource policies.
type ApiResourcePoliciesResponse struct {
	// The API level only policies XML as embedded content.
	Content *string `pulumi:"content"`
	// The content link to the policies.
	ContentLink *string `pulumi:"contentLink"`
}

// The API resource policies.
type ApiResourcePoliciesResponseOutput struct{ *pulumi.OutputState }

func (ApiResourcePoliciesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiResourcePoliciesResponse)(nil)).Elem()
}

func (o ApiResourcePoliciesResponseOutput) ToApiResourcePoliciesResponseOutput() ApiResourcePoliciesResponseOutput {
	return o
}

func (o ApiResourcePoliciesResponseOutput) ToApiResourcePoliciesResponseOutputWithContext(ctx context.Context) ApiResourcePoliciesResponseOutput {
	return o
}

func (o ApiResourcePoliciesResponseOutput) ToApiResourcePoliciesResponsePtrOutput() ApiResourcePoliciesResponsePtrOutput {
	return o.ToApiResourcePoliciesResponsePtrOutputWithContext(context.Background())
}

func (o ApiResourcePoliciesResponseOutput) ToApiResourcePoliciesResponsePtrOutputWithContext(ctx context.Context) ApiResourcePoliciesResponsePtrOutput {
	return o.ApplyT(func(v ApiResourcePoliciesResponse) *ApiResourcePoliciesResponse {
		return &v
	}).(ApiResourcePoliciesResponsePtrOutput)
}

// The API level only policies XML as embedded content.
func (o ApiResourcePoliciesResponseOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourcePoliciesResponse) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// The content link to the policies.
func (o ApiResourcePoliciesResponseOutput) ContentLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourcePoliciesResponse) *string { return v.ContentLink }).(pulumi.StringPtrOutput)
}

type ApiResourcePoliciesResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiResourcePoliciesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiResourcePoliciesResponse)(nil)).Elem()
}

func (o ApiResourcePoliciesResponsePtrOutput) ToApiResourcePoliciesResponsePtrOutput() ApiResourcePoliciesResponsePtrOutput {
	return o
}

func (o ApiResourcePoliciesResponsePtrOutput) ToApiResourcePoliciesResponsePtrOutputWithContext(ctx context.Context) ApiResourcePoliciesResponsePtrOutput {
	return o
}

func (o ApiResourcePoliciesResponsePtrOutput) Elem() ApiResourcePoliciesResponseOutput {
	return o.ApplyT(func(v *ApiResourcePoliciesResponse) ApiResourcePoliciesResponse { return *v }).(ApiResourcePoliciesResponseOutput)
}

// The API level only policies XML as embedded content.
func (o ApiResourcePoliciesResponsePtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourcePoliciesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// The content link to the policies.
func (o ApiResourcePoliciesResponsePtrOutput) ContentLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourcePoliciesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ContentLink
	}).(pulumi.StringPtrOutput)
}

// The API resource properties.
type ApiResourcePropertiesResponse struct {
	// The API definition.
	ApiDefinitionUrl *string `pulumi:"apiDefinitionUrl"`
	// The api definitions.
	ApiDefinitions *ApiResourceDefinitionsResponse `pulumi:"apiDefinitions"`
	// The backend service.
	BackendService *ApiResourceBackendServiceResponse `pulumi:"backendService"`
	// The capabilities.
	Capabilities []string `pulumi:"capabilities"`
	// The category.
	Category *string `pulumi:"category"`
	// The connection parameters.
	ConnectionParameters map[string]map[string]interface{} `pulumi:"connectionParameters"`
	// The api general information.
	GeneralInformation *ApiResourceGeneralInformationResponse `pulumi:"generalInformation"`
	// The integration service environment reference.
	IntegrationServiceEnvironment *ResourceReferenceResponse `pulumi:"integrationServiceEnvironment"`
	// The metadata.
	Metadata *ApiResourceMetadataResponse `pulumi:"metadata"`
	// The name
	Name *string `pulumi:"name"`
	// The policies for the API.
	Policies *ApiResourcePoliciesResponse `pulumi:"policies"`
	// The provisioning state.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The runtime urls.
	RuntimeUrls []string `pulumi:"runtimeUrls"`
}

// The API resource properties.
type ApiResourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApiResourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiResourcePropertiesResponse)(nil)).Elem()
}

func (o ApiResourcePropertiesResponseOutput) ToApiResourcePropertiesResponseOutput() ApiResourcePropertiesResponseOutput {
	return o
}

func (o ApiResourcePropertiesResponseOutput) ToApiResourcePropertiesResponseOutputWithContext(ctx context.Context) ApiResourcePropertiesResponseOutput {
	return o
}

func (o ApiResourcePropertiesResponseOutput) ToApiResourcePropertiesResponsePtrOutput() ApiResourcePropertiesResponsePtrOutput {
	return o.ToApiResourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ApiResourcePropertiesResponseOutput) ToApiResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) ApiResourcePropertiesResponsePtrOutput {
	return o.ApplyT(func(v ApiResourcePropertiesResponse) *ApiResourcePropertiesResponse {
		return &v
	}).(ApiResourcePropertiesResponsePtrOutput)
}

// The API definition.
func (o ApiResourcePropertiesResponseOutput) ApiDefinitionUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourcePropertiesResponse) *string { return v.ApiDefinitionUrl }).(pulumi.StringPtrOutput)
}

// The api definitions.
func (o ApiResourcePropertiesResponseOutput) ApiDefinitions() ApiResourceDefinitionsResponsePtrOutput {
	return o.ApplyT(func(v ApiResourcePropertiesResponse) *ApiResourceDefinitionsResponse { return v.ApiDefinitions }).(ApiResourceDefinitionsResponsePtrOutput)
}

// The backend service.
func (o ApiResourcePropertiesResponseOutput) BackendService() ApiResourceBackendServiceResponsePtrOutput {
	return o.ApplyT(func(v ApiResourcePropertiesResponse) *ApiResourceBackendServiceResponse { return v.BackendService }).(ApiResourceBackendServiceResponsePtrOutput)
}

// The capabilities.
func (o ApiResourcePropertiesResponseOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiResourcePropertiesResponse) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// The category.
func (o ApiResourcePropertiesResponseOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourcePropertiesResponse) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// The connection parameters.
func (o ApiResourcePropertiesResponseOutput) ConnectionParameters() pulumi.MapMapOutput {
	return o.ApplyT(func(v ApiResourcePropertiesResponse) map[string]map[string]interface{} { return v.ConnectionParameters }).(pulumi.MapMapOutput)
}

// The api general information.
func (o ApiResourcePropertiesResponseOutput) GeneralInformation() ApiResourceGeneralInformationResponsePtrOutput {
	return o.ApplyT(func(v ApiResourcePropertiesResponse) *ApiResourceGeneralInformationResponse {
		return v.GeneralInformation
	}).(ApiResourceGeneralInformationResponsePtrOutput)
}

// The integration service environment reference.
func (o ApiResourcePropertiesResponseOutput) IntegrationServiceEnvironment() ResourceReferenceResponsePtrOutput {
	return o.ApplyT(func(v ApiResourcePropertiesResponse) *ResourceReferenceResponse {
		return v.IntegrationServiceEnvironment
	}).(ResourceReferenceResponsePtrOutput)
}

// The metadata.
func (o ApiResourcePropertiesResponseOutput) Metadata() ApiResourceMetadataResponsePtrOutput {
	return o.ApplyT(func(v ApiResourcePropertiesResponse) *ApiResourceMetadataResponse { return v.Metadata }).(ApiResourceMetadataResponsePtrOutput)
}

// The name
func (o ApiResourcePropertiesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourcePropertiesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The policies for the API.
func (o ApiResourcePropertiesResponseOutput) Policies() ApiResourcePoliciesResponsePtrOutput {
	return o.ApplyT(func(v ApiResourcePropertiesResponse) *ApiResourcePoliciesResponse { return v.Policies }).(ApiResourcePoliciesResponsePtrOutput)
}

// The provisioning state.
func (o ApiResourcePropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourcePropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The runtime urls.
func (o ApiResourcePropertiesResponseOutput) RuntimeUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiResourcePropertiesResponse) []string { return v.RuntimeUrls }).(pulumi.StringArrayOutput)
}

type ApiResourcePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiResourcePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiResourcePropertiesResponse)(nil)).Elem()
}

func (o ApiResourcePropertiesResponsePtrOutput) ToApiResourcePropertiesResponsePtrOutput() ApiResourcePropertiesResponsePtrOutput {
	return o
}

func (o ApiResourcePropertiesResponsePtrOutput) ToApiResourcePropertiesResponsePtrOutputWithContext(ctx context.Context) ApiResourcePropertiesResponsePtrOutput {
	return o
}

func (o ApiResourcePropertiesResponsePtrOutput) Elem() ApiResourcePropertiesResponseOutput {
	return o.ApplyT(func(v *ApiResourcePropertiesResponse) ApiResourcePropertiesResponse { return *v }).(ApiResourcePropertiesResponseOutput)
}

// The API definition.
func (o ApiResourcePropertiesResponsePtrOutput) ApiDefinitionUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiDefinitionUrl
	}).(pulumi.StringPtrOutput)
}

// The api definitions.
func (o ApiResourcePropertiesResponsePtrOutput) ApiDefinitions() ApiResourceDefinitionsResponsePtrOutput {
	return o.ApplyT(func(v *ApiResourcePropertiesResponse) *ApiResourceDefinitionsResponse {
		if v == nil {
			return nil
		}
		return v.ApiDefinitions
	}).(ApiResourceDefinitionsResponsePtrOutput)
}

// The backend service.
func (o ApiResourcePropertiesResponsePtrOutput) BackendService() ApiResourceBackendServiceResponsePtrOutput {
	return o.ApplyT(func(v *ApiResourcePropertiesResponse) *ApiResourceBackendServiceResponse {
		if v == nil {
			return nil
		}
		return v.BackendService
	}).(ApiResourceBackendServiceResponsePtrOutput)
}

// The capabilities.
func (o ApiResourcePropertiesResponsePtrOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiResourcePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(pulumi.StringArrayOutput)
}

// The category.
func (o ApiResourcePropertiesResponsePtrOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Category
	}).(pulumi.StringPtrOutput)
}

// The connection parameters.
func (o ApiResourcePropertiesResponsePtrOutput) ConnectionParameters() pulumi.MapMapOutput {
	return o.ApplyT(func(v *ApiResourcePropertiesResponse) map[string]map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.ConnectionParameters
	}).(pulumi.MapMapOutput)
}

// The api general information.
func (o ApiResourcePropertiesResponsePtrOutput) GeneralInformation() ApiResourceGeneralInformationResponsePtrOutput {
	return o.ApplyT(func(v *ApiResourcePropertiesResponse) *ApiResourceGeneralInformationResponse {
		if v == nil {
			return nil
		}
		return v.GeneralInformation
	}).(ApiResourceGeneralInformationResponsePtrOutput)
}

// The integration service environment reference.
func (o ApiResourcePropertiesResponsePtrOutput) IntegrationServiceEnvironment() ResourceReferenceResponsePtrOutput {
	return o.ApplyT(func(v *ApiResourcePropertiesResponse) *ResourceReferenceResponse {
		if v == nil {
			return nil
		}
		return v.IntegrationServiceEnvironment
	}).(ResourceReferenceResponsePtrOutput)
}

// The metadata.
func (o ApiResourcePropertiesResponsePtrOutput) Metadata() ApiResourceMetadataResponsePtrOutput {
	return o.ApplyT(func(v *ApiResourcePropertiesResponse) *ApiResourceMetadataResponse {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(ApiResourceMetadataResponsePtrOutput)
}

// The name
func (o ApiResourcePropertiesResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The policies for the API.
func (o ApiResourcePropertiesResponsePtrOutput) Policies() ApiResourcePoliciesResponsePtrOutput {
	return o.ApplyT(func(v *ApiResourcePropertiesResponse) *ApiResourcePoliciesResponse {
		if v == nil {
			return nil
		}
		return v.Policies
	}).(ApiResourcePoliciesResponsePtrOutput)
}

// The provisioning state.
func (o ApiResourcePropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The runtime urls.
func (o ApiResourcePropertiesResponsePtrOutput) RuntimeUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiResourcePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.RuntimeUrls
	}).(pulumi.StringArrayOutput)
}

// The assembly properties definition.
type AssemblyProperties struct {
	// The assembly culture.
	AssemblyCulture *string `pulumi:"assemblyCulture"`
	// The assembly name.
	AssemblyName string `pulumi:"assemblyName"`
	// The assembly public key token.
	AssemblyPublicKeyToken *string `pulumi:"assemblyPublicKeyToken"`
	// The assembly version.
	AssemblyVersion *string `pulumi:"assemblyVersion"`
	// The artifact changed time.
	ChangedTime *string                `pulumi:"changedTime"`
	Content     map[string]interface{} `pulumi:"content"`
	// The content link.
	ContentLink *ContentLink `pulumi:"contentLink"`
	// The content type.
	ContentType *string `pulumi:"contentType"`
	// The artifact creation time.
	CreatedTime *string                `pulumi:"createdTime"`
	Metadata    map[string]interface{} `pulumi:"metadata"`
}

// AssemblyPropertiesInput is an input type that accepts AssemblyPropertiesArgs and AssemblyPropertiesOutput values.
// You can construct a concrete instance of `AssemblyPropertiesInput` via:
//
//          AssemblyPropertiesArgs{...}
type AssemblyPropertiesInput interface {
	pulumi.Input

	ToAssemblyPropertiesOutput() AssemblyPropertiesOutput
	ToAssemblyPropertiesOutputWithContext(context.Context) AssemblyPropertiesOutput
}

// The assembly properties definition.
type AssemblyPropertiesArgs struct {
	// The assembly culture.
	AssemblyCulture pulumi.StringPtrInput `pulumi:"assemblyCulture"`
	// The assembly name.
	AssemblyName pulumi.StringInput `pulumi:"assemblyName"`
	// The assembly public key token.
	AssemblyPublicKeyToken pulumi.StringPtrInput `pulumi:"assemblyPublicKeyToken"`
	// The assembly version.
	AssemblyVersion pulumi.StringPtrInput `pulumi:"assemblyVersion"`
	// The artifact changed time.
	ChangedTime pulumi.StringPtrInput `pulumi:"changedTime"`
	Content     pulumi.MapInput       `pulumi:"content"`
	// The content link.
	ContentLink ContentLinkPtrInput `pulumi:"contentLink"`
	// The content type.
	ContentType pulumi.StringPtrInput `pulumi:"contentType"`
	// The artifact creation time.
	CreatedTime pulumi.StringPtrInput `pulumi:"createdTime"`
	Metadata    pulumi.MapInput       `pulumi:"metadata"`
}

func (AssemblyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AssemblyProperties)(nil)).Elem()
}

func (i AssemblyPropertiesArgs) ToAssemblyPropertiesOutput() AssemblyPropertiesOutput {
	return i.ToAssemblyPropertiesOutputWithContext(context.Background())
}

func (i AssemblyPropertiesArgs) ToAssemblyPropertiesOutputWithContext(ctx context.Context) AssemblyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssemblyPropertiesOutput)
}

func (i AssemblyPropertiesArgs) ToAssemblyPropertiesPtrOutput() AssemblyPropertiesPtrOutput {
	return i.ToAssemblyPropertiesPtrOutputWithContext(context.Background())
}

func (i AssemblyPropertiesArgs) ToAssemblyPropertiesPtrOutputWithContext(ctx context.Context) AssemblyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssemblyPropertiesOutput).ToAssemblyPropertiesPtrOutputWithContext(ctx)
}

// AssemblyPropertiesPtrInput is an input type that accepts AssemblyPropertiesArgs, AssemblyPropertiesPtr and AssemblyPropertiesPtrOutput values.
// You can construct a concrete instance of `AssemblyPropertiesPtrInput` via:
//
//          AssemblyPropertiesArgs{...}
//
//  or:
//
//          nil
type AssemblyPropertiesPtrInput interface {
	pulumi.Input

	ToAssemblyPropertiesPtrOutput() AssemblyPropertiesPtrOutput
	ToAssemblyPropertiesPtrOutputWithContext(context.Context) AssemblyPropertiesPtrOutput
}

type assemblyPropertiesPtrType AssemblyPropertiesArgs

func AssemblyPropertiesPtr(v *AssemblyPropertiesArgs) AssemblyPropertiesPtrInput {
	return (*assemblyPropertiesPtrType)(v)
}

func (*assemblyPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AssemblyProperties)(nil)).Elem()
}

func (i *assemblyPropertiesPtrType) ToAssemblyPropertiesPtrOutput() AssemblyPropertiesPtrOutput {
	return i.ToAssemblyPropertiesPtrOutputWithContext(context.Background())
}

func (i *assemblyPropertiesPtrType) ToAssemblyPropertiesPtrOutputWithContext(ctx context.Context) AssemblyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssemblyPropertiesPtrOutput)
}

// The assembly properties definition.
type AssemblyPropertiesResponse struct {
	// The assembly culture.
	AssemblyCulture *string `pulumi:"assemblyCulture"`
	// The assembly name.
	AssemblyName string `pulumi:"assemblyName"`
	// The assembly public key token.
	AssemblyPublicKeyToken *string `pulumi:"assemblyPublicKeyToken"`
	// The assembly version.
	AssemblyVersion *string `pulumi:"assemblyVersion"`
	// The artifact changed time.
	ChangedTime *string                `pulumi:"changedTime"`
	Content     map[string]interface{} `pulumi:"content"`
	// The content link.
	ContentLink *ContentLinkResponse `pulumi:"contentLink"`
	// The content type.
	ContentType *string `pulumi:"contentType"`
	// The artifact creation time.
	CreatedTime *string                `pulumi:"createdTime"`
	Metadata    map[string]interface{} `pulumi:"metadata"`
}

// The assembly properties definition.
type AssemblyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AssemblyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssemblyPropertiesResponse)(nil)).Elem()
}

func (o AssemblyPropertiesResponseOutput) ToAssemblyPropertiesResponseOutput() AssemblyPropertiesResponseOutput {
	return o
}

func (o AssemblyPropertiesResponseOutput) ToAssemblyPropertiesResponseOutputWithContext(ctx context.Context) AssemblyPropertiesResponseOutput {
	return o
}

func (o AssemblyPropertiesResponseOutput) ToAssemblyPropertiesResponsePtrOutput() AssemblyPropertiesResponsePtrOutput {
	return o.ToAssemblyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AssemblyPropertiesResponseOutput) ToAssemblyPropertiesResponsePtrOutputWithContext(ctx context.Context) AssemblyPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AssemblyPropertiesResponse) *AssemblyPropertiesResponse {
		return &v
	}).(AssemblyPropertiesResponsePtrOutput)
}

// The assembly culture.
func (o AssemblyPropertiesResponseOutput) AssemblyCulture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AssemblyPropertiesResponse) *string { return v.AssemblyCulture }).(pulumi.StringPtrOutput)
}

// The assembly name.
func (o AssemblyPropertiesResponseOutput) AssemblyName() pulumi.StringOutput {
	return o.ApplyT(func(v AssemblyPropertiesResponse) string { return v.AssemblyName }).(pulumi.StringOutput)
}

// The assembly public key token.
func (o AssemblyPropertiesResponseOutput) AssemblyPublicKeyToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AssemblyPropertiesResponse) *string { return v.AssemblyPublicKeyToken }).(pulumi.StringPtrOutput)
}

// The assembly version.
func (o AssemblyPropertiesResponseOutput) AssemblyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AssemblyPropertiesResponse) *string { return v.AssemblyVersion }).(pulumi.StringPtrOutput)
}

// The artifact changed time.
func (o AssemblyPropertiesResponseOutput) ChangedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AssemblyPropertiesResponse) *string { return v.ChangedTime }).(pulumi.StringPtrOutput)
}

func (o AssemblyPropertiesResponseOutput) Content() pulumi.MapOutput {
	return o.ApplyT(func(v AssemblyPropertiesResponse) map[string]interface{} { return v.Content }).(pulumi.MapOutput)
}

// The content link.
func (o AssemblyPropertiesResponseOutput) ContentLink() ContentLinkResponsePtrOutput {
	return o.ApplyT(func(v AssemblyPropertiesResponse) *ContentLinkResponse { return v.ContentLink }).(ContentLinkResponsePtrOutput)
}

// The content type.
func (o AssemblyPropertiesResponseOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AssemblyPropertiesResponse) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

// The artifact creation time.
func (o AssemblyPropertiesResponseOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AssemblyPropertiesResponse) *string { return v.CreatedTime }).(pulumi.StringPtrOutput)
}

func (o AssemblyPropertiesResponseOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v AssemblyPropertiesResponse) map[string]interface{} { return v.Metadata }).(pulumi.MapOutput)
}

type AssemblyPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AssemblyPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssemblyPropertiesResponse)(nil)).Elem()
}

func (o AssemblyPropertiesResponsePtrOutput) ToAssemblyPropertiesResponsePtrOutput() AssemblyPropertiesResponsePtrOutput {
	return o
}

func (o AssemblyPropertiesResponsePtrOutput) ToAssemblyPropertiesResponsePtrOutputWithContext(ctx context.Context) AssemblyPropertiesResponsePtrOutput {
	return o
}

func (o AssemblyPropertiesResponsePtrOutput) Elem() AssemblyPropertiesResponseOutput {
	return o.ApplyT(func(v *AssemblyPropertiesResponse) AssemblyPropertiesResponse { return *v }).(AssemblyPropertiesResponseOutput)
}

// The assembly culture.
func (o AssemblyPropertiesResponsePtrOutput) AssemblyCulture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssemblyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AssemblyCulture
	}).(pulumi.StringPtrOutput)
}

// The assembly name.
func (o AssemblyPropertiesResponsePtrOutput) AssemblyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssemblyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AssemblyName
	}).(pulumi.StringPtrOutput)
}

// The assembly public key token.
func (o AssemblyPropertiesResponsePtrOutput) AssemblyPublicKeyToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssemblyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AssemblyPublicKeyToken
	}).(pulumi.StringPtrOutput)
}

// The assembly version.
func (o AssemblyPropertiesResponsePtrOutput) AssemblyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssemblyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AssemblyVersion
	}).(pulumi.StringPtrOutput)
}

// The artifact changed time.
func (o AssemblyPropertiesResponsePtrOutput) ChangedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssemblyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ChangedTime
	}).(pulumi.StringPtrOutput)
}

func (o AssemblyPropertiesResponsePtrOutput) Content() pulumi.MapOutput {
	return o.ApplyT(func(v *AssemblyPropertiesResponse) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.MapOutput)
}

// The content link.
func (o AssemblyPropertiesResponsePtrOutput) ContentLink() ContentLinkResponsePtrOutput {
	return o.ApplyT(func(v *AssemblyPropertiesResponse) *ContentLinkResponse {
		if v == nil {
			return nil
		}
		return v.ContentLink
	}).(ContentLinkResponsePtrOutput)
}

// The content type.
func (o AssemblyPropertiesResponsePtrOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssemblyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ContentType
	}).(pulumi.StringPtrOutput)
}

// The artifact creation time.
func (o AssemblyPropertiesResponsePtrOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssemblyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedTime
	}).(pulumi.StringPtrOutput)
}

func (o AssemblyPropertiesResponsePtrOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v *AssemblyPropertiesResponse) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.MapOutput)
}

// The azure resource error info.
type AzureResourceErrorInfoResponse struct {
	// The error code.
	Code string `pulumi:"code"`
	// The error details.
	Details []AzureResourceErrorInfoResponse `pulumi:"details"`
	// The error message.
	Message string `pulumi:"message"`
}

// The B2B partner content.
type B2BPartnerContent struct {
	// The list of partner business identities.
	BusinessIdentities []BusinessIdentity `pulumi:"businessIdentities"`
}

// B2BPartnerContentInput is an input type that accepts B2BPartnerContentArgs and B2BPartnerContentOutput values.
// You can construct a concrete instance of `B2BPartnerContentInput` via:
//
//          B2BPartnerContentArgs{...}
type B2BPartnerContentInput interface {
	pulumi.Input

	ToB2BPartnerContentOutput() B2BPartnerContentOutput
	ToB2BPartnerContentOutputWithContext(context.Context) B2BPartnerContentOutput
}

// The B2B partner content.
type B2BPartnerContentArgs struct {
	// The list of partner business identities.
	BusinessIdentities BusinessIdentityArrayInput `pulumi:"businessIdentities"`
}

func (B2BPartnerContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*B2BPartnerContent)(nil)).Elem()
}

func (i B2BPartnerContentArgs) ToB2BPartnerContentOutput() B2BPartnerContentOutput {
	return i.ToB2BPartnerContentOutputWithContext(context.Background())
}

func (i B2BPartnerContentArgs) ToB2BPartnerContentOutputWithContext(ctx context.Context) B2BPartnerContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(B2BPartnerContentOutput)
}

func (i B2BPartnerContentArgs) ToB2BPartnerContentPtrOutput() B2BPartnerContentPtrOutput {
	return i.ToB2BPartnerContentPtrOutputWithContext(context.Background())
}

func (i B2BPartnerContentArgs) ToB2BPartnerContentPtrOutputWithContext(ctx context.Context) B2BPartnerContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(B2BPartnerContentOutput).ToB2BPartnerContentPtrOutputWithContext(ctx)
}

// B2BPartnerContentPtrInput is an input type that accepts B2BPartnerContentArgs, B2BPartnerContentPtr and B2BPartnerContentPtrOutput values.
// You can construct a concrete instance of `B2BPartnerContentPtrInput` via:
//
//          B2BPartnerContentArgs{...}
//
//  or:
//
//          nil
type B2BPartnerContentPtrInput interface {
	pulumi.Input

	ToB2BPartnerContentPtrOutput() B2BPartnerContentPtrOutput
	ToB2BPartnerContentPtrOutputWithContext(context.Context) B2BPartnerContentPtrOutput
}

type b2bpartnerContentPtrType B2BPartnerContentArgs

func B2BPartnerContentPtr(v *B2BPartnerContentArgs) B2BPartnerContentPtrInput {
	return (*b2bpartnerContentPtrType)(v)
}

func (*b2bpartnerContentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**B2BPartnerContent)(nil)).Elem()
}

func (i *b2bpartnerContentPtrType) ToB2BPartnerContentPtrOutput() B2BPartnerContentPtrOutput {
	return i.ToB2BPartnerContentPtrOutputWithContext(context.Background())
}

func (i *b2bpartnerContentPtrType) ToB2BPartnerContentPtrOutputWithContext(ctx context.Context) B2BPartnerContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(B2BPartnerContentPtrOutput)
}

// The B2B partner content.
type B2BPartnerContentResponse struct {
	// The list of partner business identities.
	BusinessIdentities []BusinessIdentityResponse `pulumi:"businessIdentities"`
}

// The B2B partner content.
type B2BPartnerContentResponseOutput struct{ *pulumi.OutputState }

func (B2BPartnerContentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*B2BPartnerContentResponse)(nil)).Elem()
}

func (o B2BPartnerContentResponseOutput) ToB2BPartnerContentResponseOutput() B2BPartnerContentResponseOutput {
	return o
}

func (o B2BPartnerContentResponseOutput) ToB2BPartnerContentResponseOutputWithContext(ctx context.Context) B2BPartnerContentResponseOutput {
	return o
}

func (o B2BPartnerContentResponseOutput) ToB2BPartnerContentResponsePtrOutput() B2BPartnerContentResponsePtrOutput {
	return o.ToB2BPartnerContentResponsePtrOutputWithContext(context.Background())
}

func (o B2BPartnerContentResponseOutput) ToB2BPartnerContentResponsePtrOutputWithContext(ctx context.Context) B2BPartnerContentResponsePtrOutput {
	return o.ApplyT(func(v B2BPartnerContentResponse) *B2BPartnerContentResponse {
		return &v
	}).(B2BPartnerContentResponsePtrOutput)
}

// The list of partner business identities.
func (o B2BPartnerContentResponseOutput) BusinessIdentities() BusinessIdentityResponseArrayOutput {
	return o.ApplyT(func(v B2BPartnerContentResponse) []BusinessIdentityResponse { return v.BusinessIdentities }).(BusinessIdentityResponseArrayOutput)
}

type B2BPartnerContentResponsePtrOutput struct{ *pulumi.OutputState }

func (B2BPartnerContentResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**B2BPartnerContentResponse)(nil)).Elem()
}

func (o B2BPartnerContentResponsePtrOutput) ToB2BPartnerContentResponsePtrOutput() B2BPartnerContentResponsePtrOutput {
	return o
}

func (o B2BPartnerContentResponsePtrOutput) ToB2BPartnerContentResponsePtrOutputWithContext(ctx context.Context) B2BPartnerContentResponsePtrOutput {
	return o
}

func (o B2BPartnerContentResponsePtrOutput) Elem() B2BPartnerContentResponseOutput {
	return o.ApplyT(func(v *B2BPartnerContentResponse) B2BPartnerContentResponse { return *v }).(B2BPartnerContentResponseOutput)
}

// The list of partner business identities.
func (o B2BPartnerContentResponsePtrOutput) BusinessIdentities() BusinessIdentityResponseArrayOutput {
	return o.ApplyT(func(v *B2BPartnerContentResponse) []BusinessIdentityResponse {
		if v == nil {
			return nil
		}
		return v.BusinessIdentities
	}).(BusinessIdentityResponseArrayOutput)
}

// The batch configuration properties definition.
type BatchConfigurationProperties struct {
	// The name of the batch group.
	BatchGroupName string `pulumi:"batchGroupName"`
	// The artifact changed time.
	ChangedTime *string `pulumi:"changedTime"`
	// The artifact creation time.
	CreatedTime *string                `pulumi:"createdTime"`
	Metadata    map[string]interface{} `pulumi:"metadata"`
	// The batch release criteria.
	ReleaseCriteria BatchReleaseCriteria `pulumi:"releaseCriteria"`
}

// BatchConfigurationPropertiesInput is an input type that accepts BatchConfigurationPropertiesArgs and BatchConfigurationPropertiesOutput values.
// You can construct a concrete instance of `BatchConfigurationPropertiesInput` via:
//
//          BatchConfigurationPropertiesArgs{...}
type BatchConfigurationPropertiesInput interface {
	pulumi.Input

	ToBatchConfigurationPropertiesOutput() BatchConfigurationPropertiesOutput
	ToBatchConfigurationPropertiesOutputWithContext(context.Context) BatchConfigurationPropertiesOutput
}

// The batch configuration properties definition.
type BatchConfigurationPropertiesArgs struct {
	// The name of the batch group.
	BatchGroupName pulumi.StringInput `pulumi:"batchGroupName"`
	// The artifact changed time.
	ChangedTime pulumi.StringPtrInput `pulumi:"changedTime"`
	// The artifact creation time.
	CreatedTime pulumi.StringPtrInput `pulumi:"createdTime"`
	Metadata    pulumi.MapInput       `pulumi:"metadata"`
	// The batch release criteria.
	ReleaseCriteria BatchReleaseCriteriaInput `pulumi:"releaseCriteria"`
}

func (BatchConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchConfigurationProperties)(nil)).Elem()
}

func (i BatchConfigurationPropertiesArgs) ToBatchConfigurationPropertiesOutput() BatchConfigurationPropertiesOutput {
	return i.ToBatchConfigurationPropertiesOutputWithContext(context.Background())
}

func (i BatchConfigurationPropertiesArgs) ToBatchConfigurationPropertiesOutputWithContext(ctx context.Context) BatchConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchConfigurationPropertiesOutput)
}

func (i BatchConfigurationPropertiesArgs) ToBatchConfigurationPropertiesPtrOutput() BatchConfigurationPropertiesPtrOutput {
	return i.ToBatchConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i BatchConfigurationPropertiesArgs) ToBatchConfigurationPropertiesPtrOutputWithContext(ctx context.Context) BatchConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchConfigurationPropertiesOutput).ToBatchConfigurationPropertiesPtrOutputWithContext(ctx)
}

// BatchConfigurationPropertiesPtrInput is an input type that accepts BatchConfigurationPropertiesArgs, BatchConfigurationPropertiesPtr and BatchConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `BatchConfigurationPropertiesPtrInput` via:
//
//          BatchConfigurationPropertiesArgs{...}
//
//  or:
//
//          nil
type BatchConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToBatchConfigurationPropertiesPtrOutput() BatchConfigurationPropertiesPtrOutput
	ToBatchConfigurationPropertiesPtrOutputWithContext(context.Context) BatchConfigurationPropertiesPtrOutput
}

type batchConfigurationPropertiesPtrType BatchConfigurationPropertiesArgs

func BatchConfigurationPropertiesPtr(v *BatchConfigurationPropertiesArgs) BatchConfigurationPropertiesPtrInput {
	return (*batchConfigurationPropertiesPtrType)(v)
}

func (*batchConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchConfigurationProperties)(nil)).Elem()
}

func (i *batchConfigurationPropertiesPtrType) ToBatchConfigurationPropertiesPtrOutput() BatchConfigurationPropertiesPtrOutput {
	return i.ToBatchConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *batchConfigurationPropertiesPtrType) ToBatchConfigurationPropertiesPtrOutputWithContext(ctx context.Context) BatchConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchConfigurationPropertiesPtrOutput)
}

// The batch configuration properties definition.
type BatchConfigurationPropertiesResponse struct {
	// The name of the batch group.
	BatchGroupName string `pulumi:"batchGroupName"`
	// The artifact changed time.
	ChangedTime *string `pulumi:"changedTime"`
	// The artifact creation time.
	CreatedTime *string                `pulumi:"createdTime"`
	Metadata    map[string]interface{} `pulumi:"metadata"`
	// The batch release criteria.
	ReleaseCriteria BatchReleaseCriteriaResponse `pulumi:"releaseCriteria"`
}

// The batch configuration properties definition.
type BatchConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (BatchConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchConfigurationPropertiesResponse)(nil)).Elem()
}

func (o BatchConfigurationPropertiesResponseOutput) ToBatchConfigurationPropertiesResponseOutput() BatchConfigurationPropertiesResponseOutput {
	return o
}

func (o BatchConfigurationPropertiesResponseOutput) ToBatchConfigurationPropertiesResponseOutputWithContext(ctx context.Context) BatchConfigurationPropertiesResponseOutput {
	return o
}

func (o BatchConfigurationPropertiesResponseOutput) ToBatchConfigurationPropertiesResponsePtrOutput() BatchConfigurationPropertiesResponsePtrOutput {
	return o.ToBatchConfigurationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o BatchConfigurationPropertiesResponseOutput) ToBatchConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) BatchConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v BatchConfigurationPropertiesResponse) *BatchConfigurationPropertiesResponse {
		return &v
	}).(BatchConfigurationPropertiesResponsePtrOutput)
}

// The name of the batch group.
func (o BatchConfigurationPropertiesResponseOutput) BatchGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v BatchConfigurationPropertiesResponse) string { return v.BatchGroupName }).(pulumi.StringOutput)
}

// The artifact changed time.
func (o BatchConfigurationPropertiesResponseOutput) ChangedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchConfigurationPropertiesResponse) *string { return v.ChangedTime }).(pulumi.StringPtrOutput)
}

// The artifact creation time.
func (o BatchConfigurationPropertiesResponseOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchConfigurationPropertiesResponse) *string { return v.CreatedTime }).(pulumi.StringPtrOutput)
}

func (o BatchConfigurationPropertiesResponseOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v BatchConfigurationPropertiesResponse) map[string]interface{} { return v.Metadata }).(pulumi.MapOutput)
}

// The batch release criteria.
func (o BatchConfigurationPropertiesResponseOutput) ReleaseCriteria() BatchReleaseCriteriaResponseOutput {
	return o.ApplyT(func(v BatchConfigurationPropertiesResponse) BatchReleaseCriteriaResponse { return v.ReleaseCriteria }).(BatchReleaseCriteriaResponseOutput)
}

type BatchConfigurationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (BatchConfigurationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchConfigurationPropertiesResponse)(nil)).Elem()
}

func (o BatchConfigurationPropertiesResponsePtrOutput) ToBatchConfigurationPropertiesResponsePtrOutput() BatchConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o BatchConfigurationPropertiesResponsePtrOutput) ToBatchConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) BatchConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o BatchConfigurationPropertiesResponsePtrOutput) Elem() BatchConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v *BatchConfigurationPropertiesResponse) BatchConfigurationPropertiesResponse { return *v }).(BatchConfigurationPropertiesResponseOutput)
}

// The name of the batch group.
func (o BatchConfigurationPropertiesResponsePtrOutput) BatchGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BatchGroupName
	}).(pulumi.StringPtrOutput)
}

// The artifact changed time.
func (o BatchConfigurationPropertiesResponsePtrOutput) ChangedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ChangedTime
	}).(pulumi.StringPtrOutput)
}

// The artifact creation time.
func (o BatchConfigurationPropertiesResponsePtrOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BatchConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedTime
	}).(pulumi.StringPtrOutput)
}

func (o BatchConfigurationPropertiesResponsePtrOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v *BatchConfigurationPropertiesResponse) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.MapOutput)
}

// The batch release criteria.
func (o BatchConfigurationPropertiesResponsePtrOutput) ReleaseCriteria() BatchReleaseCriteriaResponsePtrOutput {
	return o.ApplyT(func(v *BatchConfigurationPropertiesResponse) *BatchReleaseCriteriaResponse {
		if v == nil {
			return nil
		}
		return &v.ReleaseCriteria
	}).(BatchReleaseCriteriaResponsePtrOutput)
}

// The batch release criteria.
type BatchReleaseCriteria struct {
	// The batch size in bytes.
	BatchSize *int `pulumi:"batchSize"`
	// The message count.
	MessageCount *int `pulumi:"messageCount"`
	// The recurrence.
	Recurrence *WorkflowTriggerRecurrence `pulumi:"recurrence"`
}

// BatchReleaseCriteriaInput is an input type that accepts BatchReleaseCriteriaArgs and BatchReleaseCriteriaOutput values.
// You can construct a concrete instance of `BatchReleaseCriteriaInput` via:
//
//          BatchReleaseCriteriaArgs{...}
type BatchReleaseCriteriaInput interface {
	pulumi.Input

	ToBatchReleaseCriteriaOutput() BatchReleaseCriteriaOutput
	ToBatchReleaseCriteriaOutputWithContext(context.Context) BatchReleaseCriteriaOutput
}

// The batch release criteria.
type BatchReleaseCriteriaArgs struct {
	// The batch size in bytes.
	BatchSize pulumi.IntPtrInput `pulumi:"batchSize"`
	// The message count.
	MessageCount pulumi.IntPtrInput `pulumi:"messageCount"`
	// The recurrence.
	Recurrence WorkflowTriggerRecurrencePtrInput `pulumi:"recurrence"`
}

func (BatchReleaseCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchReleaseCriteria)(nil)).Elem()
}

func (i BatchReleaseCriteriaArgs) ToBatchReleaseCriteriaOutput() BatchReleaseCriteriaOutput {
	return i.ToBatchReleaseCriteriaOutputWithContext(context.Background())
}

func (i BatchReleaseCriteriaArgs) ToBatchReleaseCriteriaOutputWithContext(ctx context.Context) BatchReleaseCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchReleaseCriteriaOutput)
}

func (i BatchReleaseCriteriaArgs) ToBatchReleaseCriteriaPtrOutput() BatchReleaseCriteriaPtrOutput {
	return i.ToBatchReleaseCriteriaPtrOutputWithContext(context.Background())
}

func (i BatchReleaseCriteriaArgs) ToBatchReleaseCriteriaPtrOutputWithContext(ctx context.Context) BatchReleaseCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchReleaseCriteriaOutput).ToBatchReleaseCriteriaPtrOutputWithContext(ctx)
}

// BatchReleaseCriteriaPtrInput is an input type that accepts BatchReleaseCriteriaArgs, BatchReleaseCriteriaPtr and BatchReleaseCriteriaPtrOutput values.
// You can construct a concrete instance of `BatchReleaseCriteriaPtrInput` via:
//
//          BatchReleaseCriteriaArgs{...}
//
//  or:
//
//          nil
type BatchReleaseCriteriaPtrInput interface {
	pulumi.Input

	ToBatchReleaseCriteriaPtrOutput() BatchReleaseCriteriaPtrOutput
	ToBatchReleaseCriteriaPtrOutputWithContext(context.Context) BatchReleaseCriteriaPtrOutput
}

type batchReleaseCriteriaPtrType BatchReleaseCriteriaArgs

func BatchReleaseCriteriaPtr(v *BatchReleaseCriteriaArgs) BatchReleaseCriteriaPtrInput {
	return (*batchReleaseCriteriaPtrType)(v)
}

func (*batchReleaseCriteriaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchReleaseCriteria)(nil)).Elem()
}

func (i *batchReleaseCriteriaPtrType) ToBatchReleaseCriteriaPtrOutput() BatchReleaseCriteriaPtrOutput {
	return i.ToBatchReleaseCriteriaPtrOutputWithContext(context.Background())
}

func (i *batchReleaseCriteriaPtrType) ToBatchReleaseCriteriaPtrOutputWithContext(ctx context.Context) BatchReleaseCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchReleaseCriteriaPtrOutput)
}

// The batch release criteria.
type BatchReleaseCriteriaResponse struct {
	// The batch size in bytes.
	BatchSize *int `pulumi:"batchSize"`
	// The message count.
	MessageCount *int `pulumi:"messageCount"`
	// The recurrence.
	Recurrence *WorkflowTriggerRecurrenceResponse `pulumi:"recurrence"`
}

// The batch release criteria.
type BatchReleaseCriteriaResponseOutput struct{ *pulumi.OutputState }

func (BatchReleaseCriteriaResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchReleaseCriteriaResponse)(nil)).Elem()
}

func (o BatchReleaseCriteriaResponseOutput) ToBatchReleaseCriteriaResponseOutput() BatchReleaseCriteriaResponseOutput {
	return o
}

func (o BatchReleaseCriteriaResponseOutput) ToBatchReleaseCriteriaResponseOutputWithContext(ctx context.Context) BatchReleaseCriteriaResponseOutput {
	return o
}

func (o BatchReleaseCriteriaResponseOutput) ToBatchReleaseCriteriaResponsePtrOutput() BatchReleaseCriteriaResponsePtrOutput {
	return o.ToBatchReleaseCriteriaResponsePtrOutputWithContext(context.Background())
}

func (o BatchReleaseCriteriaResponseOutput) ToBatchReleaseCriteriaResponsePtrOutputWithContext(ctx context.Context) BatchReleaseCriteriaResponsePtrOutput {
	return o.ApplyT(func(v BatchReleaseCriteriaResponse) *BatchReleaseCriteriaResponse {
		return &v
	}).(BatchReleaseCriteriaResponsePtrOutput)
}

// The batch size in bytes.
func (o BatchReleaseCriteriaResponseOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BatchReleaseCriteriaResponse) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

// The message count.
func (o BatchReleaseCriteriaResponseOutput) MessageCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BatchReleaseCriteriaResponse) *int { return v.MessageCount }).(pulumi.IntPtrOutput)
}

// The recurrence.
func (o BatchReleaseCriteriaResponseOutput) Recurrence() WorkflowTriggerRecurrenceResponsePtrOutput {
	return o.ApplyT(func(v BatchReleaseCriteriaResponse) *WorkflowTriggerRecurrenceResponse { return v.Recurrence }).(WorkflowTriggerRecurrenceResponsePtrOutput)
}

type BatchReleaseCriteriaResponsePtrOutput struct{ *pulumi.OutputState }

func (BatchReleaseCriteriaResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchReleaseCriteriaResponse)(nil)).Elem()
}

func (o BatchReleaseCriteriaResponsePtrOutput) ToBatchReleaseCriteriaResponsePtrOutput() BatchReleaseCriteriaResponsePtrOutput {
	return o
}

func (o BatchReleaseCriteriaResponsePtrOutput) ToBatchReleaseCriteriaResponsePtrOutputWithContext(ctx context.Context) BatchReleaseCriteriaResponsePtrOutput {
	return o
}

func (o BatchReleaseCriteriaResponsePtrOutput) Elem() BatchReleaseCriteriaResponseOutput {
	return o.ApplyT(func(v *BatchReleaseCriteriaResponse) BatchReleaseCriteriaResponse { return *v }).(BatchReleaseCriteriaResponseOutput)
}

// The batch size in bytes.
func (o BatchReleaseCriteriaResponsePtrOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BatchReleaseCriteriaResponse) *int {
		if v == nil {
			return nil
		}
		return v.BatchSize
	}).(pulumi.IntPtrOutput)
}

// The message count.
func (o BatchReleaseCriteriaResponsePtrOutput) MessageCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BatchReleaseCriteriaResponse) *int {
		if v == nil {
			return nil
		}
		return v.MessageCount
	}).(pulumi.IntPtrOutput)
}

// The recurrence.
func (o BatchReleaseCriteriaResponsePtrOutput) Recurrence() WorkflowTriggerRecurrenceResponsePtrOutput {
	return o.ApplyT(func(v *BatchReleaseCriteriaResponse) *WorkflowTriggerRecurrenceResponse {
		if v == nil {
			return nil
		}
		return v.Recurrence
	}).(WorkflowTriggerRecurrenceResponsePtrOutput)
}

// The integration account partner's business identity.
type BusinessIdentity struct {
	// The business identity qualifier e.g. as2identity, ZZ, ZZZ, 31, 32
	Qualifier string `pulumi:"qualifier"`
	// The user defined business identity value.
	Value string `pulumi:"value"`
}

// BusinessIdentityInput is an input type that accepts BusinessIdentityArgs and BusinessIdentityOutput values.
// You can construct a concrete instance of `BusinessIdentityInput` via:
//
//          BusinessIdentityArgs{...}
type BusinessIdentityInput interface {
	pulumi.Input

	ToBusinessIdentityOutput() BusinessIdentityOutput
	ToBusinessIdentityOutputWithContext(context.Context) BusinessIdentityOutput
}

// The integration account partner's business identity.
type BusinessIdentityArgs struct {
	// The business identity qualifier e.g. as2identity, ZZ, ZZZ, 31, 32
	Qualifier pulumi.StringInput `pulumi:"qualifier"`
	// The user defined business identity value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (BusinessIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BusinessIdentity)(nil)).Elem()
}

func (i BusinessIdentityArgs) ToBusinessIdentityOutput() BusinessIdentityOutput {
	return i.ToBusinessIdentityOutputWithContext(context.Background())
}

func (i BusinessIdentityArgs) ToBusinessIdentityOutputWithContext(ctx context.Context) BusinessIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessIdentityOutput)
}

func (i BusinessIdentityArgs) ToBusinessIdentityPtrOutput() BusinessIdentityPtrOutput {
	return i.ToBusinessIdentityPtrOutputWithContext(context.Background())
}

func (i BusinessIdentityArgs) ToBusinessIdentityPtrOutputWithContext(ctx context.Context) BusinessIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessIdentityOutput).ToBusinessIdentityPtrOutputWithContext(ctx)
}

// BusinessIdentityPtrInput is an input type that accepts BusinessIdentityArgs, BusinessIdentityPtr and BusinessIdentityPtrOutput values.
// You can construct a concrete instance of `BusinessIdentityPtrInput` via:
//
//          BusinessIdentityArgs{...}
//
//  or:
//
//          nil
type BusinessIdentityPtrInput interface {
	pulumi.Input

	ToBusinessIdentityPtrOutput() BusinessIdentityPtrOutput
	ToBusinessIdentityPtrOutputWithContext(context.Context) BusinessIdentityPtrOutput
}

type businessIdentityPtrType BusinessIdentityArgs

func BusinessIdentityPtr(v *BusinessIdentityArgs) BusinessIdentityPtrInput {
	return (*businessIdentityPtrType)(v)
}

func (*businessIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BusinessIdentity)(nil)).Elem()
}

func (i *businessIdentityPtrType) ToBusinessIdentityPtrOutput() BusinessIdentityPtrOutput {
	return i.ToBusinessIdentityPtrOutputWithContext(context.Background())
}

func (i *businessIdentityPtrType) ToBusinessIdentityPtrOutputWithContext(ctx context.Context) BusinessIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessIdentityPtrOutput)
}

// BusinessIdentityArrayInput is an input type that accepts BusinessIdentityArray and BusinessIdentityArrayOutput values.
// You can construct a concrete instance of `BusinessIdentityArrayInput` via:
//
//          BusinessIdentityArray{ BusinessIdentityArgs{...} }
type BusinessIdentityArrayInput interface {
	pulumi.Input

	ToBusinessIdentityArrayOutput() BusinessIdentityArrayOutput
	ToBusinessIdentityArrayOutputWithContext(context.Context) BusinessIdentityArrayOutput
}

type BusinessIdentityArray []BusinessIdentityInput

func (BusinessIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BusinessIdentity)(nil)).Elem()
}

func (i BusinessIdentityArray) ToBusinessIdentityArrayOutput() BusinessIdentityArrayOutput {
	return i.ToBusinessIdentityArrayOutputWithContext(context.Background())
}

func (i BusinessIdentityArray) ToBusinessIdentityArrayOutputWithContext(ctx context.Context) BusinessIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessIdentityArrayOutput)
}

// The integration account partner's business identity.
type BusinessIdentityResponse struct {
	// The business identity qualifier e.g. as2identity, ZZ, ZZZ, 31, 32
	Qualifier string `pulumi:"qualifier"`
	// The user defined business identity value.
	Value string `pulumi:"value"`
}

// The integration account partner's business identity.
type BusinessIdentityResponseOutput struct{ *pulumi.OutputState }

func (BusinessIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BusinessIdentityResponse)(nil)).Elem()
}

func (o BusinessIdentityResponseOutput) ToBusinessIdentityResponseOutput() BusinessIdentityResponseOutput {
	return o
}

func (o BusinessIdentityResponseOutput) ToBusinessIdentityResponseOutputWithContext(ctx context.Context) BusinessIdentityResponseOutput {
	return o
}

func (o BusinessIdentityResponseOutput) ToBusinessIdentityResponsePtrOutput() BusinessIdentityResponsePtrOutput {
	return o.ToBusinessIdentityResponsePtrOutputWithContext(context.Background())
}

func (o BusinessIdentityResponseOutput) ToBusinessIdentityResponsePtrOutputWithContext(ctx context.Context) BusinessIdentityResponsePtrOutput {
	return o.ApplyT(func(v BusinessIdentityResponse) *BusinessIdentityResponse {
		return &v
	}).(BusinessIdentityResponsePtrOutput)
}

// The business identity qualifier e.g. as2identity, ZZ, ZZZ, 31, 32
func (o BusinessIdentityResponseOutput) Qualifier() pulumi.StringOutput {
	return o.ApplyT(func(v BusinessIdentityResponse) string { return v.Qualifier }).(pulumi.StringOutput)
}

// The user defined business identity value.
func (o BusinessIdentityResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BusinessIdentityResponse) string { return v.Value }).(pulumi.StringOutput)
}

type BusinessIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (BusinessIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BusinessIdentityResponse)(nil)).Elem()
}

func (o BusinessIdentityResponsePtrOutput) ToBusinessIdentityResponsePtrOutput() BusinessIdentityResponsePtrOutput {
	return o
}

func (o BusinessIdentityResponsePtrOutput) ToBusinessIdentityResponsePtrOutputWithContext(ctx context.Context) BusinessIdentityResponsePtrOutput {
	return o
}

func (o BusinessIdentityResponsePtrOutput) Elem() BusinessIdentityResponseOutput {
	return o.ApplyT(func(v *BusinessIdentityResponse) BusinessIdentityResponse { return *v }).(BusinessIdentityResponseOutput)
}

// The business identity qualifier e.g. as2identity, ZZ, ZZZ, 31, 32
func (o BusinessIdentityResponsePtrOutput) Qualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BusinessIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Qualifier
	}).(pulumi.StringPtrOutput)
}

// The user defined business identity value.
func (o BusinessIdentityResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BusinessIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type BusinessIdentityResponseArrayOutput struct{ *pulumi.OutputState }

func (BusinessIdentityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BusinessIdentityResponse)(nil)).Elem()
}

func (o BusinessIdentityResponseArrayOutput) ToBusinessIdentityResponseArrayOutput() BusinessIdentityResponseArrayOutput {
	return o
}

func (o BusinessIdentityResponseArrayOutput) ToBusinessIdentityResponseArrayOutputWithContext(ctx context.Context) BusinessIdentityResponseArrayOutput {
	return o
}

func (o BusinessIdentityResponseArrayOutput) Index(i pulumi.IntInput) BusinessIdentityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BusinessIdentityResponse {
		return vs[0].([]BusinessIdentityResponse)[vs[1].(int)]
	}).(BusinessIdentityResponseOutput)
}

// The content hash.
type ContentHash struct {
	// The algorithm of the content hash.
	Algorithm *string `pulumi:"algorithm"`
	// The value of the content hash.
	Value *string `pulumi:"value"`
}

// ContentHashInput is an input type that accepts ContentHashArgs and ContentHashOutput values.
// You can construct a concrete instance of `ContentHashInput` via:
//
//          ContentHashArgs{...}
type ContentHashInput interface {
	pulumi.Input

	ToContentHashOutput() ContentHashOutput
	ToContentHashOutputWithContext(context.Context) ContentHashOutput
}

// The content hash.
type ContentHashArgs struct {
	// The algorithm of the content hash.
	Algorithm pulumi.StringPtrInput `pulumi:"algorithm"`
	// The value of the content hash.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ContentHashArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentHash)(nil)).Elem()
}

func (i ContentHashArgs) ToContentHashOutput() ContentHashOutput {
	return i.ToContentHashOutputWithContext(context.Background())
}

func (i ContentHashArgs) ToContentHashOutputWithContext(ctx context.Context) ContentHashOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentHashOutput)
}

func (i ContentHashArgs) ToContentHashPtrOutput() ContentHashPtrOutput {
	return i.ToContentHashPtrOutputWithContext(context.Background())
}

func (i ContentHashArgs) ToContentHashPtrOutputWithContext(ctx context.Context) ContentHashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentHashOutput).ToContentHashPtrOutputWithContext(ctx)
}

// ContentHashPtrInput is an input type that accepts ContentHashArgs, ContentHashPtr and ContentHashPtrOutput values.
// You can construct a concrete instance of `ContentHashPtrInput` via:
//
//          ContentHashArgs{...}
//
//  or:
//
//          nil
type ContentHashPtrInput interface {
	pulumi.Input

	ToContentHashPtrOutput() ContentHashPtrOutput
	ToContentHashPtrOutputWithContext(context.Context) ContentHashPtrOutput
}

type contentHashPtrType ContentHashArgs

func ContentHashPtr(v *ContentHashArgs) ContentHashPtrInput {
	return (*contentHashPtrType)(v)
}

func (*contentHashPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContentHash)(nil)).Elem()
}

func (i *contentHashPtrType) ToContentHashPtrOutput() ContentHashPtrOutput {
	return i.ToContentHashPtrOutputWithContext(context.Background())
}

func (i *contentHashPtrType) ToContentHashPtrOutputWithContext(ctx context.Context) ContentHashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentHashPtrOutput)
}

// The content hash.
type ContentHashResponse struct {
	// The algorithm of the content hash.
	Algorithm *string `pulumi:"algorithm"`
	// The value of the content hash.
	Value *string `pulumi:"value"`
}

// The content hash.
type ContentHashResponseOutput struct{ *pulumi.OutputState }

func (ContentHashResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentHashResponse)(nil)).Elem()
}

func (o ContentHashResponseOutput) ToContentHashResponseOutput() ContentHashResponseOutput {
	return o
}

func (o ContentHashResponseOutput) ToContentHashResponseOutputWithContext(ctx context.Context) ContentHashResponseOutput {
	return o
}

func (o ContentHashResponseOutput) ToContentHashResponsePtrOutput() ContentHashResponsePtrOutput {
	return o.ToContentHashResponsePtrOutputWithContext(context.Background())
}

func (o ContentHashResponseOutput) ToContentHashResponsePtrOutputWithContext(ctx context.Context) ContentHashResponsePtrOutput {
	return o.ApplyT(func(v ContentHashResponse) *ContentHashResponse {
		return &v
	}).(ContentHashResponsePtrOutput)
}

// The algorithm of the content hash.
func (o ContentHashResponseOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentHashResponse) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

// The value of the content hash.
func (o ContentHashResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentHashResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ContentHashResponsePtrOutput struct{ *pulumi.OutputState }

func (ContentHashResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContentHashResponse)(nil)).Elem()
}

func (o ContentHashResponsePtrOutput) ToContentHashResponsePtrOutput() ContentHashResponsePtrOutput {
	return o
}

func (o ContentHashResponsePtrOutput) ToContentHashResponsePtrOutputWithContext(ctx context.Context) ContentHashResponsePtrOutput {
	return o
}

func (o ContentHashResponsePtrOutput) Elem() ContentHashResponseOutput {
	return o.ApplyT(func(v *ContentHashResponse) ContentHashResponse { return *v }).(ContentHashResponseOutput)
}

// The algorithm of the content hash.
func (o ContentHashResponsePtrOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContentHashResponse) *string {
		if v == nil {
			return nil
		}
		return v.Algorithm
	}).(pulumi.StringPtrOutput)
}

// The value of the content hash.
func (o ContentHashResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContentHashResponse) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// The content link.
type ContentLink struct {
	// The content hash.
	ContentHash *ContentHash `pulumi:"contentHash"`
	// The content size.
	ContentSize *int `pulumi:"contentSize"`
	// The content version.
	ContentVersion *string `pulumi:"contentVersion"`
	// The metadata.
	Metadata map[string]interface{} `pulumi:"metadata"`
	// The content link URI.
	Uri *string `pulumi:"uri"`
}

// ContentLinkInput is an input type that accepts ContentLinkArgs and ContentLinkOutput values.
// You can construct a concrete instance of `ContentLinkInput` via:
//
//          ContentLinkArgs{...}
type ContentLinkInput interface {
	pulumi.Input

	ToContentLinkOutput() ContentLinkOutput
	ToContentLinkOutputWithContext(context.Context) ContentLinkOutput
}

// The content link.
type ContentLinkArgs struct {
	// The content hash.
	ContentHash ContentHashPtrInput `pulumi:"contentHash"`
	// The content size.
	ContentSize pulumi.IntPtrInput `pulumi:"contentSize"`
	// The content version.
	ContentVersion pulumi.StringPtrInput `pulumi:"contentVersion"`
	// The metadata.
	Metadata pulumi.MapInput `pulumi:"metadata"`
	// The content link URI.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (ContentLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentLink)(nil)).Elem()
}

func (i ContentLinkArgs) ToContentLinkOutput() ContentLinkOutput {
	return i.ToContentLinkOutputWithContext(context.Background())
}

func (i ContentLinkArgs) ToContentLinkOutputWithContext(ctx context.Context) ContentLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentLinkOutput)
}

func (i ContentLinkArgs) ToContentLinkPtrOutput() ContentLinkPtrOutput {
	return i.ToContentLinkPtrOutputWithContext(context.Background())
}

func (i ContentLinkArgs) ToContentLinkPtrOutputWithContext(ctx context.Context) ContentLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentLinkOutput).ToContentLinkPtrOutputWithContext(ctx)
}

// ContentLinkPtrInput is an input type that accepts ContentLinkArgs, ContentLinkPtr and ContentLinkPtrOutput values.
// You can construct a concrete instance of `ContentLinkPtrInput` via:
//
//          ContentLinkArgs{...}
//
//  or:
//
//          nil
type ContentLinkPtrInput interface {
	pulumi.Input

	ToContentLinkPtrOutput() ContentLinkPtrOutput
	ToContentLinkPtrOutputWithContext(context.Context) ContentLinkPtrOutput
}

type contentLinkPtrType ContentLinkArgs

func ContentLinkPtr(v *ContentLinkArgs) ContentLinkPtrInput {
	return (*contentLinkPtrType)(v)
}

func (*contentLinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContentLink)(nil)).Elem()
}

func (i *contentLinkPtrType) ToContentLinkPtrOutput() ContentLinkPtrOutput {
	return i.ToContentLinkPtrOutputWithContext(context.Background())
}

func (i *contentLinkPtrType) ToContentLinkPtrOutputWithContext(ctx context.Context) ContentLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentLinkPtrOutput)
}

// The content link.
type ContentLinkResponse struct {
	// The content hash.
	ContentHash *ContentHashResponse `pulumi:"contentHash"`
	// The content size.
	ContentSize *int `pulumi:"contentSize"`
	// The content version.
	ContentVersion *string `pulumi:"contentVersion"`
	// The metadata.
	Metadata map[string]interface{} `pulumi:"metadata"`
	// The content link URI.
	Uri *string `pulumi:"uri"`
}

// The content link.
type ContentLinkResponseOutput struct{ *pulumi.OutputState }

func (ContentLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentLinkResponse)(nil)).Elem()
}

func (o ContentLinkResponseOutput) ToContentLinkResponseOutput() ContentLinkResponseOutput {
	return o
}

func (o ContentLinkResponseOutput) ToContentLinkResponseOutputWithContext(ctx context.Context) ContentLinkResponseOutput {
	return o
}

func (o ContentLinkResponseOutput) ToContentLinkResponsePtrOutput() ContentLinkResponsePtrOutput {
	return o.ToContentLinkResponsePtrOutputWithContext(context.Background())
}

func (o ContentLinkResponseOutput) ToContentLinkResponsePtrOutputWithContext(ctx context.Context) ContentLinkResponsePtrOutput {
	return o.ApplyT(func(v ContentLinkResponse) *ContentLinkResponse {
		return &v
	}).(ContentLinkResponsePtrOutput)
}

// The content hash.
func (o ContentLinkResponseOutput) ContentHash() ContentHashResponsePtrOutput {
	return o.ApplyT(func(v ContentLinkResponse) *ContentHashResponse { return v.ContentHash }).(ContentHashResponsePtrOutput)
}

// The content size.
func (o ContentLinkResponseOutput) ContentSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContentLinkResponse) *int { return v.ContentSize }).(pulumi.IntPtrOutput)
}

// The content version.
func (o ContentLinkResponseOutput) ContentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentLinkResponse) *string { return v.ContentVersion }).(pulumi.StringPtrOutput)
}

// The metadata.
func (o ContentLinkResponseOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v ContentLinkResponse) map[string]interface{} { return v.Metadata }).(pulumi.MapOutput)
}

// The content link URI.
func (o ContentLinkResponseOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentLinkResponse) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type ContentLinkResponsePtrOutput struct{ *pulumi.OutputState }

func (ContentLinkResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContentLinkResponse)(nil)).Elem()
}

func (o ContentLinkResponsePtrOutput) ToContentLinkResponsePtrOutput() ContentLinkResponsePtrOutput {
	return o
}

func (o ContentLinkResponsePtrOutput) ToContentLinkResponsePtrOutputWithContext(ctx context.Context) ContentLinkResponsePtrOutput {
	return o
}

func (o ContentLinkResponsePtrOutput) Elem() ContentLinkResponseOutput {
	return o.ApplyT(func(v *ContentLinkResponse) ContentLinkResponse { return *v }).(ContentLinkResponseOutput)
}

// The content hash.
func (o ContentLinkResponsePtrOutput) ContentHash() ContentHashResponsePtrOutput {
	return o.ApplyT(func(v *ContentLinkResponse) *ContentHashResponse {
		if v == nil {
			return nil
		}
		return v.ContentHash
	}).(ContentHashResponsePtrOutput)
}

// The content size.
func (o ContentLinkResponsePtrOutput) ContentSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContentLinkResponse) *int {
		if v == nil {
			return nil
		}
		return v.ContentSize
	}).(pulumi.IntPtrOutput)
}

// The content version.
func (o ContentLinkResponsePtrOutput) ContentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContentLinkResponse) *string {
		if v == nil {
			return nil
		}
		return v.ContentVersion
	}).(pulumi.StringPtrOutput)
}

// The metadata.
func (o ContentLinkResponsePtrOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v *ContentLinkResponse) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.MapOutput)
}

// The content link URI.
func (o ContentLinkResponsePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContentLinkResponse) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// The Edifact agreement acknowledgement settings.
type EdifactAcknowledgementSettings struct {
	// The acknowledgement control number lower bound.
	AcknowledgementControlNumberLowerBound int `pulumi:"acknowledgementControlNumberLowerBound"`
	// The acknowledgement control number prefix.
	AcknowledgementControlNumberPrefix *string `pulumi:"acknowledgementControlNumberPrefix"`
	// The acknowledgement control number suffix.
	AcknowledgementControlNumberSuffix *string `pulumi:"acknowledgementControlNumberSuffix"`
	// The acknowledgement control number upper bound.
	AcknowledgementControlNumberUpperBound int `pulumi:"acknowledgementControlNumberUpperBound"`
	// The value indicating whether to batch functional acknowledgements.
	BatchFunctionalAcknowledgements bool `pulumi:"batchFunctionalAcknowledgements"`
	// The value indicating whether to batch the technical acknowledgements.
	BatchTechnicalAcknowledgements bool `pulumi:"batchTechnicalAcknowledgements"`
	// The value indicating whether functional acknowledgement is needed.
	NeedFunctionalAcknowledgement bool `pulumi:"needFunctionalAcknowledgement"`
	// The value indicating whether a loop is needed for valid messages.
	NeedLoopForValidMessages bool `pulumi:"needLoopForValidMessages"`
	// The value indicating whether technical acknowledgement is needed.
	NeedTechnicalAcknowledgement bool `pulumi:"needTechnicalAcknowledgement"`
	// The value indicating whether to rollover acknowledgement control number.
	RolloverAcknowledgementControlNumber bool `pulumi:"rolloverAcknowledgementControlNumber"`
	// The value indicating whether to send synchronous acknowledgement.
	SendSynchronousAcknowledgement bool `pulumi:"sendSynchronousAcknowledgement"`
}

// EdifactAcknowledgementSettingsInput is an input type that accepts EdifactAcknowledgementSettingsArgs and EdifactAcknowledgementSettingsOutput values.
// You can construct a concrete instance of `EdifactAcknowledgementSettingsInput` via:
//
//          EdifactAcknowledgementSettingsArgs{...}
type EdifactAcknowledgementSettingsInput interface {
	pulumi.Input

	ToEdifactAcknowledgementSettingsOutput() EdifactAcknowledgementSettingsOutput
	ToEdifactAcknowledgementSettingsOutputWithContext(context.Context) EdifactAcknowledgementSettingsOutput
}

// The Edifact agreement acknowledgement settings.
type EdifactAcknowledgementSettingsArgs struct {
	// The acknowledgement control number lower bound.
	AcknowledgementControlNumberLowerBound pulumi.IntInput `pulumi:"acknowledgementControlNumberLowerBound"`
	// The acknowledgement control number prefix.
	AcknowledgementControlNumberPrefix pulumi.StringPtrInput `pulumi:"acknowledgementControlNumberPrefix"`
	// The acknowledgement control number suffix.
	AcknowledgementControlNumberSuffix pulumi.StringPtrInput `pulumi:"acknowledgementControlNumberSuffix"`
	// The acknowledgement control number upper bound.
	AcknowledgementControlNumberUpperBound pulumi.IntInput `pulumi:"acknowledgementControlNumberUpperBound"`
	// The value indicating whether to batch functional acknowledgements.
	BatchFunctionalAcknowledgements pulumi.BoolInput `pulumi:"batchFunctionalAcknowledgements"`
	// The value indicating whether to batch the technical acknowledgements.
	BatchTechnicalAcknowledgements pulumi.BoolInput `pulumi:"batchTechnicalAcknowledgements"`
	// The value indicating whether functional acknowledgement is needed.
	NeedFunctionalAcknowledgement pulumi.BoolInput `pulumi:"needFunctionalAcknowledgement"`
	// The value indicating whether a loop is needed for valid messages.
	NeedLoopForValidMessages pulumi.BoolInput `pulumi:"needLoopForValidMessages"`
	// The value indicating whether technical acknowledgement is needed.
	NeedTechnicalAcknowledgement pulumi.BoolInput `pulumi:"needTechnicalAcknowledgement"`
	// The value indicating whether to rollover acknowledgement control number.
	RolloverAcknowledgementControlNumber pulumi.BoolInput `pulumi:"rolloverAcknowledgementControlNumber"`
	// The value indicating whether to send synchronous acknowledgement.
	SendSynchronousAcknowledgement pulumi.BoolInput `pulumi:"sendSynchronousAcknowledgement"`
}

func (EdifactAcknowledgementSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactAcknowledgementSettings)(nil)).Elem()
}

func (i EdifactAcknowledgementSettingsArgs) ToEdifactAcknowledgementSettingsOutput() EdifactAcknowledgementSettingsOutput {
	return i.ToEdifactAcknowledgementSettingsOutputWithContext(context.Background())
}

func (i EdifactAcknowledgementSettingsArgs) ToEdifactAcknowledgementSettingsOutputWithContext(ctx context.Context) EdifactAcknowledgementSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactAcknowledgementSettingsOutput)
}

func (i EdifactAcknowledgementSettingsArgs) ToEdifactAcknowledgementSettingsPtrOutput() EdifactAcknowledgementSettingsPtrOutput {
	return i.ToEdifactAcknowledgementSettingsPtrOutputWithContext(context.Background())
}

func (i EdifactAcknowledgementSettingsArgs) ToEdifactAcknowledgementSettingsPtrOutputWithContext(ctx context.Context) EdifactAcknowledgementSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactAcknowledgementSettingsOutput).ToEdifactAcknowledgementSettingsPtrOutputWithContext(ctx)
}

// EdifactAcknowledgementSettingsPtrInput is an input type that accepts EdifactAcknowledgementSettingsArgs, EdifactAcknowledgementSettingsPtr and EdifactAcknowledgementSettingsPtrOutput values.
// You can construct a concrete instance of `EdifactAcknowledgementSettingsPtrInput` via:
//
//          EdifactAcknowledgementSettingsArgs{...}
//
//  or:
//
//          nil
type EdifactAcknowledgementSettingsPtrInput interface {
	pulumi.Input

	ToEdifactAcknowledgementSettingsPtrOutput() EdifactAcknowledgementSettingsPtrOutput
	ToEdifactAcknowledgementSettingsPtrOutputWithContext(context.Context) EdifactAcknowledgementSettingsPtrOutput
}

type edifactAcknowledgementSettingsPtrType EdifactAcknowledgementSettingsArgs

func EdifactAcknowledgementSettingsPtr(v *EdifactAcknowledgementSettingsArgs) EdifactAcknowledgementSettingsPtrInput {
	return (*edifactAcknowledgementSettingsPtrType)(v)
}

func (*edifactAcknowledgementSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EdifactAcknowledgementSettings)(nil)).Elem()
}

func (i *edifactAcknowledgementSettingsPtrType) ToEdifactAcknowledgementSettingsPtrOutput() EdifactAcknowledgementSettingsPtrOutput {
	return i.ToEdifactAcknowledgementSettingsPtrOutputWithContext(context.Background())
}

func (i *edifactAcknowledgementSettingsPtrType) ToEdifactAcknowledgementSettingsPtrOutputWithContext(ctx context.Context) EdifactAcknowledgementSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactAcknowledgementSettingsPtrOutput)
}

// The Edifact agreement acknowledgement settings.
type EdifactAcknowledgementSettingsResponse struct {
	// The acknowledgement control number lower bound.
	AcknowledgementControlNumberLowerBound int `pulumi:"acknowledgementControlNumberLowerBound"`
	// The acknowledgement control number prefix.
	AcknowledgementControlNumberPrefix *string `pulumi:"acknowledgementControlNumberPrefix"`
	// The acknowledgement control number suffix.
	AcknowledgementControlNumberSuffix *string `pulumi:"acknowledgementControlNumberSuffix"`
	// The acknowledgement control number upper bound.
	AcknowledgementControlNumberUpperBound int `pulumi:"acknowledgementControlNumberUpperBound"`
	// The value indicating whether to batch functional acknowledgements.
	BatchFunctionalAcknowledgements bool `pulumi:"batchFunctionalAcknowledgements"`
	// The value indicating whether to batch the technical acknowledgements.
	BatchTechnicalAcknowledgements bool `pulumi:"batchTechnicalAcknowledgements"`
	// The value indicating whether functional acknowledgement is needed.
	NeedFunctionalAcknowledgement bool `pulumi:"needFunctionalAcknowledgement"`
	// The value indicating whether a loop is needed for valid messages.
	NeedLoopForValidMessages bool `pulumi:"needLoopForValidMessages"`
	// The value indicating whether technical acknowledgement is needed.
	NeedTechnicalAcknowledgement bool `pulumi:"needTechnicalAcknowledgement"`
	// The value indicating whether to rollover acknowledgement control number.
	RolloverAcknowledgementControlNumber bool `pulumi:"rolloverAcknowledgementControlNumber"`
	// The value indicating whether to send synchronous acknowledgement.
	SendSynchronousAcknowledgement bool `pulumi:"sendSynchronousAcknowledgement"`
}

// The Edifact agreement acknowledgement settings.
type EdifactAcknowledgementSettingsResponseOutput struct{ *pulumi.OutputState }

func (EdifactAcknowledgementSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactAcknowledgementSettingsResponse)(nil)).Elem()
}

func (o EdifactAcknowledgementSettingsResponseOutput) ToEdifactAcknowledgementSettingsResponseOutput() EdifactAcknowledgementSettingsResponseOutput {
	return o
}

func (o EdifactAcknowledgementSettingsResponseOutput) ToEdifactAcknowledgementSettingsResponseOutputWithContext(ctx context.Context) EdifactAcknowledgementSettingsResponseOutput {
	return o
}

func (o EdifactAcknowledgementSettingsResponseOutput) ToEdifactAcknowledgementSettingsResponsePtrOutput() EdifactAcknowledgementSettingsResponsePtrOutput {
	return o.ToEdifactAcknowledgementSettingsResponsePtrOutputWithContext(context.Background())
}

func (o EdifactAcknowledgementSettingsResponseOutput) ToEdifactAcknowledgementSettingsResponsePtrOutputWithContext(ctx context.Context) EdifactAcknowledgementSettingsResponsePtrOutput {
	return o.ApplyT(func(v EdifactAcknowledgementSettingsResponse) *EdifactAcknowledgementSettingsResponse {
		return &v
	}).(EdifactAcknowledgementSettingsResponsePtrOutput)
}

// The acknowledgement control number lower bound.
func (o EdifactAcknowledgementSettingsResponseOutput) AcknowledgementControlNumberLowerBound() pulumi.IntOutput {
	return o.ApplyT(func(v EdifactAcknowledgementSettingsResponse) int { return v.AcknowledgementControlNumberLowerBound }).(pulumi.IntOutput)
}

// The acknowledgement control number prefix.
func (o EdifactAcknowledgementSettingsResponseOutput) AcknowledgementControlNumberPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactAcknowledgementSettingsResponse) *string { return v.AcknowledgementControlNumberPrefix }).(pulumi.StringPtrOutput)
}

// The acknowledgement control number suffix.
func (o EdifactAcknowledgementSettingsResponseOutput) AcknowledgementControlNumberSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactAcknowledgementSettingsResponse) *string { return v.AcknowledgementControlNumberSuffix }).(pulumi.StringPtrOutput)
}

// The acknowledgement control number upper bound.
func (o EdifactAcknowledgementSettingsResponseOutput) AcknowledgementControlNumberUpperBound() pulumi.IntOutput {
	return o.ApplyT(func(v EdifactAcknowledgementSettingsResponse) int { return v.AcknowledgementControlNumberUpperBound }).(pulumi.IntOutput)
}

// The value indicating whether to batch functional acknowledgements.
func (o EdifactAcknowledgementSettingsResponseOutput) BatchFunctionalAcknowledgements() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactAcknowledgementSettingsResponse) bool { return v.BatchFunctionalAcknowledgements }).(pulumi.BoolOutput)
}

// The value indicating whether to batch the technical acknowledgements.
func (o EdifactAcknowledgementSettingsResponseOutput) BatchTechnicalAcknowledgements() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactAcknowledgementSettingsResponse) bool { return v.BatchTechnicalAcknowledgements }).(pulumi.BoolOutput)
}

// The value indicating whether functional acknowledgement is needed.
func (o EdifactAcknowledgementSettingsResponseOutput) NeedFunctionalAcknowledgement() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactAcknowledgementSettingsResponse) bool { return v.NeedFunctionalAcknowledgement }).(pulumi.BoolOutput)
}

// The value indicating whether a loop is needed for valid messages.
func (o EdifactAcknowledgementSettingsResponseOutput) NeedLoopForValidMessages() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactAcknowledgementSettingsResponse) bool { return v.NeedLoopForValidMessages }).(pulumi.BoolOutput)
}

// The value indicating whether technical acknowledgement is needed.
func (o EdifactAcknowledgementSettingsResponseOutput) NeedTechnicalAcknowledgement() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactAcknowledgementSettingsResponse) bool { return v.NeedTechnicalAcknowledgement }).(pulumi.BoolOutput)
}

// The value indicating whether to rollover acknowledgement control number.
func (o EdifactAcknowledgementSettingsResponseOutput) RolloverAcknowledgementControlNumber() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactAcknowledgementSettingsResponse) bool { return v.RolloverAcknowledgementControlNumber }).(pulumi.BoolOutput)
}

// The value indicating whether to send synchronous acknowledgement.
func (o EdifactAcknowledgementSettingsResponseOutput) SendSynchronousAcknowledgement() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactAcknowledgementSettingsResponse) bool { return v.SendSynchronousAcknowledgement }).(pulumi.BoolOutput)
}

type EdifactAcknowledgementSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (EdifactAcknowledgementSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdifactAcknowledgementSettingsResponse)(nil)).Elem()
}

func (o EdifactAcknowledgementSettingsResponsePtrOutput) ToEdifactAcknowledgementSettingsResponsePtrOutput() EdifactAcknowledgementSettingsResponsePtrOutput {
	return o
}

func (o EdifactAcknowledgementSettingsResponsePtrOutput) ToEdifactAcknowledgementSettingsResponsePtrOutputWithContext(ctx context.Context) EdifactAcknowledgementSettingsResponsePtrOutput {
	return o
}

func (o EdifactAcknowledgementSettingsResponsePtrOutput) Elem() EdifactAcknowledgementSettingsResponseOutput {
	return o.ApplyT(func(v *EdifactAcknowledgementSettingsResponse) EdifactAcknowledgementSettingsResponse { return *v }).(EdifactAcknowledgementSettingsResponseOutput)
}

// The acknowledgement control number lower bound.
func (o EdifactAcknowledgementSettingsResponsePtrOutput) AcknowledgementControlNumberLowerBound() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EdifactAcknowledgementSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.AcknowledgementControlNumberLowerBound
	}).(pulumi.IntPtrOutput)
}

// The acknowledgement control number prefix.
func (o EdifactAcknowledgementSettingsResponsePtrOutput) AcknowledgementControlNumberPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactAcknowledgementSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AcknowledgementControlNumberPrefix
	}).(pulumi.StringPtrOutput)
}

// The acknowledgement control number suffix.
func (o EdifactAcknowledgementSettingsResponsePtrOutput) AcknowledgementControlNumberSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactAcknowledgementSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AcknowledgementControlNumberSuffix
	}).(pulumi.StringPtrOutput)
}

// The acknowledgement control number upper bound.
func (o EdifactAcknowledgementSettingsResponsePtrOutput) AcknowledgementControlNumberUpperBound() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EdifactAcknowledgementSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.AcknowledgementControlNumberUpperBound
	}).(pulumi.IntPtrOutput)
}

// The value indicating whether to batch functional acknowledgements.
func (o EdifactAcknowledgementSettingsResponsePtrOutput) BatchFunctionalAcknowledgements() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactAcknowledgementSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.BatchFunctionalAcknowledgements
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to batch the technical acknowledgements.
func (o EdifactAcknowledgementSettingsResponsePtrOutput) BatchTechnicalAcknowledgements() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactAcknowledgementSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.BatchTechnicalAcknowledgements
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether functional acknowledgement is needed.
func (o EdifactAcknowledgementSettingsResponsePtrOutput) NeedFunctionalAcknowledgement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactAcknowledgementSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.NeedFunctionalAcknowledgement
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether a loop is needed for valid messages.
func (o EdifactAcknowledgementSettingsResponsePtrOutput) NeedLoopForValidMessages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactAcknowledgementSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.NeedLoopForValidMessages
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether technical acknowledgement is needed.
func (o EdifactAcknowledgementSettingsResponsePtrOutput) NeedTechnicalAcknowledgement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactAcknowledgementSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.NeedTechnicalAcknowledgement
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to rollover acknowledgement control number.
func (o EdifactAcknowledgementSettingsResponsePtrOutput) RolloverAcknowledgementControlNumber() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactAcknowledgementSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.RolloverAcknowledgementControlNumber
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to send synchronous acknowledgement.
func (o EdifactAcknowledgementSettingsResponsePtrOutput) SendSynchronousAcknowledgement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactAcknowledgementSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.SendSynchronousAcknowledgement
	}).(pulumi.BoolPtrOutput)
}

// The Edifact agreement content.
type EdifactAgreementContent struct {
	// The EDIFACT one-way receive agreement.
	ReceiveAgreement EdifactOneWayAgreement `pulumi:"receiveAgreement"`
	// The EDIFACT one-way send agreement.
	SendAgreement EdifactOneWayAgreement `pulumi:"sendAgreement"`
}

// EdifactAgreementContentInput is an input type that accepts EdifactAgreementContentArgs and EdifactAgreementContentOutput values.
// You can construct a concrete instance of `EdifactAgreementContentInput` via:
//
//          EdifactAgreementContentArgs{...}
type EdifactAgreementContentInput interface {
	pulumi.Input

	ToEdifactAgreementContentOutput() EdifactAgreementContentOutput
	ToEdifactAgreementContentOutputWithContext(context.Context) EdifactAgreementContentOutput
}

// The Edifact agreement content.
type EdifactAgreementContentArgs struct {
	// The EDIFACT one-way receive agreement.
	ReceiveAgreement EdifactOneWayAgreementInput `pulumi:"receiveAgreement"`
	// The EDIFACT one-way send agreement.
	SendAgreement EdifactOneWayAgreementInput `pulumi:"sendAgreement"`
}

func (EdifactAgreementContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactAgreementContent)(nil)).Elem()
}

func (i EdifactAgreementContentArgs) ToEdifactAgreementContentOutput() EdifactAgreementContentOutput {
	return i.ToEdifactAgreementContentOutputWithContext(context.Background())
}

func (i EdifactAgreementContentArgs) ToEdifactAgreementContentOutputWithContext(ctx context.Context) EdifactAgreementContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactAgreementContentOutput)
}

func (i EdifactAgreementContentArgs) ToEdifactAgreementContentPtrOutput() EdifactAgreementContentPtrOutput {
	return i.ToEdifactAgreementContentPtrOutputWithContext(context.Background())
}

func (i EdifactAgreementContentArgs) ToEdifactAgreementContentPtrOutputWithContext(ctx context.Context) EdifactAgreementContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactAgreementContentOutput).ToEdifactAgreementContentPtrOutputWithContext(ctx)
}

// EdifactAgreementContentPtrInput is an input type that accepts EdifactAgreementContentArgs, EdifactAgreementContentPtr and EdifactAgreementContentPtrOutput values.
// You can construct a concrete instance of `EdifactAgreementContentPtrInput` via:
//
//          EdifactAgreementContentArgs{...}
//
//  or:
//
//          nil
type EdifactAgreementContentPtrInput interface {
	pulumi.Input

	ToEdifactAgreementContentPtrOutput() EdifactAgreementContentPtrOutput
	ToEdifactAgreementContentPtrOutputWithContext(context.Context) EdifactAgreementContentPtrOutput
}

type edifactAgreementContentPtrType EdifactAgreementContentArgs

func EdifactAgreementContentPtr(v *EdifactAgreementContentArgs) EdifactAgreementContentPtrInput {
	return (*edifactAgreementContentPtrType)(v)
}

func (*edifactAgreementContentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EdifactAgreementContent)(nil)).Elem()
}

func (i *edifactAgreementContentPtrType) ToEdifactAgreementContentPtrOutput() EdifactAgreementContentPtrOutput {
	return i.ToEdifactAgreementContentPtrOutputWithContext(context.Background())
}

func (i *edifactAgreementContentPtrType) ToEdifactAgreementContentPtrOutputWithContext(ctx context.Context) EdifactAgreementContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactAgreementContentPtrOutput)
}

// The Edifact agreement content.
type EdifactAgreementContentResponse struct {
	// The EDIFACT one-way receive agreement.
	ReceiveAgreement EdifactOneWayAgreementResponse `pulumi:"receiveAgreement"`
	// The EDIFACT one-way send agreement.
	SendAgreement EdifactOneWayAgreementResponse `pulumi:"sendAgreement"`
}

// The Edifact agreement content.
type EdifactAgreementContentResponseOutput struct{ *pulumi.OutputState }

func (EdifactAgreementContentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactAgreementContentResponse)(nil)).Elem()
}

func (o EdifactAgreementContentResponseOutput) ToEdifactAgreementContentResponseOutput() EdifactAgreementContentResponseOutput {
	return o
}

func (o EdifactAgreementContentResponseOutput) ToEdifactAgreementContentResponseOutputWithContext(ctx context.Context) EdifactAgreementContentResponseOutput {
	return o
}

func (o EdifactAgreementContentResponseOutput) ToEdifactAgreementContentResponsePtrOutput() EdifactAgreementContentResponsePtrOutput {
	return o.ToEdifactAgreementContentResponsePtrOutputWithContext(context.Background())
}

func (o EdifactAgreementContentResponseOutput) ToEdifactAgreementContentResponsePtrOutputWithContext(ctx context.Context) EdifactAgreementContentResponsePtrOutput {
	return o.ApplyT(func(v EdifactAgreementContentResponse) *EdifactAgreementContentResponse {
		return &v
	}).(EdifactAgreementContentResponsePtrOutput)
}

// The EDIFACT one-way receive agreement.
func (o EdifactAgreementContentResponseOutput) ReceiveAgreement() EdifactOneWayAgreementResponseOutput {
	return o.ApplyT(func(v EdifactAgreementContentResponse) EdifactOneWayAgreementResponse { return v.ReceiveAgreement }).(EdifactOneWayAgreementResponseOutput)
}

// The EDIFACT one-way send agreement.
func (o EdifactAgreementContentResponseOutput) SendAgreement() EdifactOneWayAgreementResponseOutput {
	return o.ApplyT(func(v EdifactAgreementContentResponse) EdifactOneWayAgreementResponse { return v.SendAgreement }).(EdifactOneWayAgreementResponseOutput)
}

type EdifactAgreementContentResponsePtrOutput struct{ *pulumi.OutputState }

func (EdifactAgreementContentResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdifactAgreementContentResponse)(nil)).Elem()
}

func (o EdifactAgreementContentResponsePtrOutput) ToEdifactAgreementContentResponsePtrOutput() EdifactAgreementContentResponsePtrOutput {
	return o
}

func (o EdifactAgreementContentResponsePtrOutput) ToEdifactAgreementContentResponsePtrOutputWithContext(ctx context.Context) EdifactAgreementContentResponsePtrOutput {
	return o
}

func (o EdifactAgreementContentResponsePtrOutput) Elem() EdifactAgreementContentResponseOutput {
	return o.ApplyT(func(v *EdifactAgreementContentResponse) EdifactAgreementContentResponse { return *v }).(EdifactAgreementContentResponseOutput)
}

// The EDIFACT one-way receive agreement.
func (o EdifactAgreementContentResponsePtrOutput) ReceiveAgreement() EdifactOneWayAgreementResponsePtrOutput {
	return o.ApplyT(func(v *EdifactAgreementContentResponse) *EdifactOneWayAgreementResponse {
		if v == nil {
			return nil
		}
		return &v.ReceiveAgreement
	}).(EdifactOneWayAgreementResponsePtrOutput)
}

// The EDIFACT one-way send agreement.
func (o EdifactAgreementContentResponsePtrOutput) SendAgreement() EdifactOneWayAgreementResponsePtrOutput {
	return o.ApplyT(func(v *EdifactAgreementContentResponse) *EdifactOneWayAgreementResponse {
		if v == nil {
			return nil
		}
		return &v.SendAgreement
	}).(EdifactOneWayAgreementResponsePtrOutput)
}

// The Edifact delimiter override settings.
type EdifactDelimiterOverride struct {
	// The component separator.
	ComponentSeparator int `pulumi:"componentSeparator"`
	// The data element separator.
	DataElementSeparator int `pulumi:"dataElementSeparator"`
	// The decimal point indicator.
	DecimalPointIndicator string `pulumi:"decimalPointIndicator"`
	// The message association assigned code.
	MessageAssociationAssignedCode *string `pulumi:"messageAssociationAssignedCode"`
	// The message id.
	MessageId *string `pulumi:"messageId"`
	// The message release.
	MessageRelease *string `pulumi:"messageRelease"`
	// The message version.
	MessageVersion *string `pulumi:"messageVersion"`
	// The release indicator.
	ReleaseIndicator int `pulumi:"releaseIndicator"`
	// The repetition separator.
	RepetitionSeparator int `pulumi:"repetitionSeparator"`
	// The segment terminator.
	SegmentTerminator int `pulumi:"segmentTerminator"`
	// The segment terminator suffix.
	SegmentTerminatorSuffix string `pulumi:"segmentTerminatorSuffix"`
	// The target namespace on which this delimiter settings has to be applied.
	TargetNamespace *string `pulumi:"targetNamespace"`
}

// EdifactDelimiterOverrideInput is an input type that accepts EdifactDelimiterOverrideArgs and EdifactDelimiterOverrideOutput values.
// You can construct a concrete instance of `EdifactDelimiterOverrideInput` via:
//
//          EdifactDelimiterOverrideArgs{...}
type EdifactDelimiterOverrideInput interface {
	pulumi.Input

	ToEdifactDelimiterOverrideOutput() EdifactDelimiterOverrideOutput
	ToEdifactDelimiterOverrideOutputWithContext(context.Context) EdifactDelimiterOverrideOutput
}

// The Edifact delimiter override settings.
type EdifactDelimiterOverrideArgs struct {
	// The component separator.
	ComponentSeparator pulumi.IntInput `pulumi:"componentSeparator"`
	// The data element separator.
	DataElementSeparator pulumi.IntInput `pulumi:"dataElementSeparator"`
	// The decimal point indicator.
	DecimalPointIndicator pulumi.StringInput `pulumi:"decimalPointIndicator"`
	// The message association assigned code.
	MessageAssociationAssignedCode pulumi.StringPtrInput `pulumi:"messageAssociationAssignedCode"`
	// The message id.
	MessageId pulumi.StringPtrInput `pulumi:"messageId"`
	// The message release.
	MessageRelease pulumi.StringPtrInput `pulumi:"messageRelease"`
	// The message version.
	MessageVersion pulumi.StringPtrInput `pulumi:"messageVersion"`
	// The release indicator.
	ReleaseIndicator pulumi.IntInput `pulumi:"releaseIndicator"`
	// The repetition separator.
	RepetitionSeparator pulumi.IntInput `pulumi:"repetitionSeparator"`
	// The segment terminator.
	SegmentTerminator pulumi.IntInput `pulumi:"segmentTerminator"`
	// The segment terminator suffix.
	SegmentTerminatorSuffix pulumi.StringInput `pulumi:"segmentTerminatorSuffix"`
	// The target namespace on which this delimiter settings has to be applied.
	TargetNamespace pulumi.StringPtrInput `pulumi:"targetNamespace"`
}

func (EdifactDelimiterOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactDelimiterOverride)(nil)).Elem()
}

func (i EdifactDelimiterOverrideArgs) ToEdifactDelimiterOverrideOutput() EdifactDelimiterOverrideOutput {
	return i.ToEdifactDelimiterOverrideOutputWithContext(context.Background())
}

func (i EdifactDelimiterOverrideArgs) ToEdifactDelimiterOverrideOutputWithContext(ctx context.Context) EdifactDelimiterOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactDelimiterOverrideOutput)
}

// EdifactDelimiterOverrideArrayInput is an input type that accepts EdifactDelimiterOverrideArray and EdifactDelimiterOverrideArrayOutput values.
// You can construct a concrete instance of `EdifactDelimiterOverrideArrayInput` via:
//
//          EdifactDelimiterOverrideArray{ EdifactDelimiterOverrideArgs{...} }
type EdifactDelimiterOverrideArrayInput interface {
	pulumi.Input

	ToEdifactDelimiterOverrideArrayOutput() EdifactDelimiterOverrideArrayOutput
	ToEdifactDelimiterOverrideArrayOutputWithContext(context.Context) EdifactDelimiterOverrideArrayOutput
}

type EdifactDelimiterOverrideArray []EdifactDelimiterOverrideInput

func (EdifactDelimiterOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EdifactDelimiterOverride)(nil)).Elem()
}

func (i EdifactDelimiterOverrideArray) ToEdifactDelimiterOverrideArrayOutput() EdifactDelimiterOverrideArrayOutput {
	return i.ToEdifactDelimiterOverrideArrayOutputWithContext(context.Background())
}

func (i EdifactDelimiterOverrideArray) ToEdifactDelimiterOverrideArrayOutputWithContext(ctx context.Context) EdifactDelimiterOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactDelimiterOverrideArrayOutput)
}

// The Edifact delimiter override settings.
type EdifactDelimiterOverrideResponse struct {
	// The component separator.
	ComponentSeparator int `pulumi:"componentSeparator"`
	// The data element separator.
	DataElementSeparator int `pulumi:"dataElementSeparator"`
	// The decimal point indicator.
	DecimalPointIndicator string `pulumi:"decimalPointIndicator"`
	// The message association assigned code.
	MessageAssociationAssignedCode *string `pulumi:"messageAssociationAssignedCode"`
	// The message id.
	MessageId *string `pulumi:"messageId"`
	// The message release.
	MessageRelease *string `pulumi:"messageRelease"`
	// The message version.
	MessageVersion *string `pulumi:"messageVersion"`
	// The release indicator.
	ReleaseIndicator int `pulumi:"releaseIndicator"`
	// The repetition separator.
	RepetitionSeparator int `pulumi:"repetitionSeparator"`
	// The segment terminator.
	SegmentTerminator int `pulumi:"segmentTerminator"`
	// The segment terminator suffix.
	SegmentTerminatorSuffix string `pulumi:"segmentTerminatorSuffix"`
	// The target namespace on which this delimiter settings has to be applied.
	TargetNamespace *string `pulumi:"targetNamespace"`
}

// The Edifact delimiter override settings.
type EdifactDelimiterOverrideResponseOutput struct{ *pulumi.OutputState }

func (EdifactDelimiterOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactDelimiterOverrideResponse)(nil)).Elem()
}

func (o EdifactDelimiterOverrideResponseOutput) ToEdifactDelimiterOverrideResponseOutput() EdifactDelimiterOverrideResponseOutput {
	return o
}

func (o EdifactDelimiterOverrideResponseOutput) ToEdifactDelimiterOverrideResponseOutputWithContext(ctx context.Context) EdifactDelimiterOverrideResponseOutput {
	return o
}

// The component separator.
func (o EdifactDelimiterOverrideResponseOutput) ComponentSeparator() pulumi.IntOutput {
	return o.ApplyT(func(v EdifactDelimiterOverrideResponse) int { return v.ComponentSeparator }).(pulumi.IntOutput)
}

// The data element separator.
func (o EdifactDelimiterOverrideResponseOutput) DataElementSeparator() pulumi.IntOutput {
	return o.ApplyT(func(v EdifactDelimiterOverrideResponse) int { return v.DataElementSeparator }).(pulumi.IntOutput)
}

// The decimal point indicator.
func (o EdifactDelimiterOverrideResponseOutput) DecimalPointIndicator() pulumi.StringOutput {
	return o.ApplyT(func(v EdifactDelimiterOverrideResponse) string { return v.DecimalPointIndicator }).(pulumi.StringOutput)
}

// The message association assigned code.
func (o EdifactDelimiterOverrideResponseOutput) MessageAssociationAssignedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactDelimiterOverrideResponse) *string { return v.MessageAssociationAssignedCode }).(pulumi.StringPtrOutput)
}

// The message id.
func (o EdifactDelimiterOverrideResponseOutput) MessageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactDelimiterOverrideResponse) *string { return v.MessageId }).(pulumi.StringPtrOutput)
}

// The message release.
func (o EdifactDelimiterOverrideResponseOutput) MessageRelease() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactDelimiterOverrideResponse) *string { return v.MessageRelease }).(pulumi.StringPtrOutput)
}

// The message version.
func (o EdifactDelimiterOverrideResponseOutput) MessageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactDelimiterOverrideResponse) *string { return v.MessageVersion }).(pulumi.StringPtrOutput)
}

// The release indicator.
func (o EdifactDelimiterOverrideResponseOutput) ReleaseIndicator() pulumi.IntOutput {
	return o.ApplyT(func(v EdifactDelimiterOverrideResponse) int { return v.ReleaseIndicator }).(pulumi.IntOutput)
}

// The repetition separator.
func (o EdifactDelimiterOverrideResponseOutput) RepetitionSeparator() pulumi.IntOutput {
	return o.ApplyT(func(v EdifactDelimiterOverrideResponse) int { return v.RepetitionSeparator }).(pulumi.IntOutput)
}

// The segment terminator.
func (o EdifactDelimiterOverrideResponseOutput) SegmentTerminator() pulumi.IntOutput {
	return o.ApplyT(func(v EdifactDelimiterOverrideResponse) int { return v.SegmentTerminator }).(pulumi.IntOutput)
}

// The segment terminator suffix.
func (o EdifactDelimiterOverrideResponseOutput) SegmentTerminatorSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v EdifactDelimiterOverrideResponse) string { return v.SegmentTerminatorSuffix }).(pulumi.StringOutput)
}

// The target namespace on which this delimiter settings has to be applied.
func (o EdifactDelimiterOverrideResponseOutput) TargetNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactDelimiterOverrideResponse) *string { return v.TargetNamespace }).(pulumi.StringPtrOutput)
}

type EdifactDelimiterOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (EdifactDelimiterOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EdifactDelimiterOverrideResponse)(nil)).Elem()
}

func (o EdifactDelimiterOverrideResponseArrayOutput) ToEdifactDelimiterOverrideResponseArrayOutput() EdifactDelimiterOverrideResponseArrayOutput {
	return o
}

func (o EdifactDelimiterOverrideResponseArrayOutput) ToEdifactDelimiterOverrideResponseArrayOutputWithContext(ctx context.Context) EdifactDelimiterOverrideResponseArrayOutput {
	return o
}

func (o EdifactDelimiterOverrideResponseArrayOutput) Index(i pulumi.IntInput) EdifactDelimiterOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EdifactDelimiterOverrideResponse {
		return vs[0].([]EdifactDelimiterOverrideResponse)[vs[1].(int)]
	}).(EdifactDelimiterOverrideResponseOutput)
}

// The Edifact envelope override settings.
type EdifactEnvelopeOverride struct {
	// The application password.
	ApplicationPassword *string `pulumi:"applicationPassword"`
	// The association assigned code.
	AssociationAssignedCode *string `pulumi:"associationAssignedCode"`
	// The controlling agency code.
	ControllingAgencyCode *string `pulumi:"controllingAgencyCode"`
	// The functional group id.
	FunctionalGroupId *string `pulumi:"functionalGroupId"`
	// The group header message release.
	GroupHeaderMessageRelease *string `pulumi:"groupHeaderMessageRelease"`
	// The group header message version.
	GroupHeaderMessageVersion *string `pulumi:"groupHeaderMessageVersion"`
	// The message association assigned code.
	MessageAssociationAssignedCode *string `pulumi:"messageAssociationAssignedCode"`
	// The message id on which this envelope settings has to be applied.
	MessageId *string `pulumi:"messageId"`
	// The message release version on which this envelope settings has to be applied.
	MessageRelease *string `pulumi:"messageRelease"`
	// The message version on which this envelope settings has to be applied.
	MessageVersion *string `pulumi:"messageVersion"`
	// The receiver application id.
	ReceiverApplicationId *string `pulumi:"receiverApplicationId"`
	// The receiver application qualifier.
	ReceiverApplicationQualifier *string `pulumi:"receiverApplicationQualifier"`
	// The sender application id.
	SenderApplicationId *string `pulumi:"senderApplicationId"`
	// The sender application qualifier.
	SenderApplicationQualifier *string `pulumi:"senderApplicationQualifier"`
	// The target namespace on which this envelope settings has to be applied.
	TargetNamespace *string `pulumi:"targetNamespace"`
}

// EdifactEnvelopeOverrideInput is an input type that accepts EdifactEnvelopeOverrideArgs and EdifactEnvelopeOverrideOutput values.
// You can construct a concrete instance of `EdifactEnvelopeOverrideInput` via:
//
//          EdifactEnvelopeOverrideArgs{...}
type EdifactEnvelopeOverrideInput interface {
	pulumi.Input

	ToEdifactEnvelopeOverrideOutput() EdifactEnvelopeOverrideOutput
	ToEdifactEnvelopeOverrideOutputWithContext(context.Context) EdifactEnvelopeOverrideOutput
}

// The Edifact envelope override settings.
type EdifactEnvelopeOverrideArgs struct {
	// The application password.
	ApplicationPassword pulumi.StringPtrInput `pulumi:"applicationPassword"`
	// The association assigned code.
	AssociationAssignedCode pulumi.StringPtrInput `pulumi:"associationAssignedCode"`
	// The controlling agency code.
	ControllingAgencyCode pulumi.StringPtrInput `pulumi:"controllingAgencyCode"`
	// The functional group id.
	FunctionalGroupId pulumi.StringPtrInput `pulumi:"functionalGroupId"`
	// The group header message release.
	GroupHeaderMessageRelease pulumi.StringPtrInput `pulumi:"groupHeaderMessageRelease"`
	// The group header message version.
	GroupHeaderMessageVersion pulumi.StringPtrInput `pulumi:"groupHeaderMessageVersion"`
	// The message association assigned code.
	MessageAssociationAssignedCode pulumi.StringPtrInput `pulumi:"messageAssociationAssignedCode"`
	// The message id on which this envelope settings has to be applied.
	MessageId pulumi.StringPtrInput `pulumi:"messageId"`
	// The message release version on which this envelope settings has to be applied.
	MessageRelease pulumi.StringPtrInput `pulumi:"messageRelease"`
	// The message version on which this envelope settings has to be applied.
	MessageVersion pulumi.StringPtrInput `pulumi:"messageVersion"`
	// The receiver application id.
	ReceiverApplicationId pulumi.StringPtrInput `pulumi:"receiverApplicationId"`
	// The receiver application qualifier.
	ReceiverApplicationQualifier pulumi.StringPtrInput `pulumi:"receiverApplicationQualifier"`
	// The sender application id.
	SenderApplicationId pulumi.StringPtrInput `pulumi:"senderApplicationId"`
	// The sender application qualifier.
	SenderApplicationQualifier pulumi.StringPtrInput `pulumi:"senderApplicationQualifier"`
	// The target namespace on which this envelope settings has to be applied.
	TargetNamespace pulumi.StringPtrInput `pulumi:"targetNamespace"`
}

func (EdifactEnvelopeOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactEnvelopeOverride)(nil)).Elem()
}

func (i EdifactEnvelopeOverrideArgs) ToEdifactEnvelopeOverrideOutput() EdifactEnvelopeOverrideOutput {
	return i.ToEdifactEnvelopeOverrideOutputWithContext(context.Background())
}

func (i EdifactEnvelopeOverrideArgs) ToEdifactEnvelopeOverrideOutputWithContext(ctx context.Context) EdifactEnvelopeOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactEnvelopeOverrideOutput)
}

// EdifactEnvelopeOverrideArrayInput is an input type that accepts EdifactEnvelopeOverrideArray and EdifactEnvelopeOverrideArrayOutput values.
// You can construct a concrete instance of `EdifactEnvelopeOverrideArrayInput` via:
//
//          EdifactEnvelopeOverrideArray{ EdifactEnvelopeOverrideArgs{...} }
type EdifactEnvelopeOverrideArrayInput interface {
	pulumi.Input

	ToEdifactEnvelopeOverrideArrayOutput() EdifactEnvelopeOverrideArrayOutput
	ToEdifactEnvelopeOverrideArrayOutputWithContext(context.Context) EdifactEnvelopeOverrideArrayOutput
}

type EdifactEnvelopeOverrideArray []EdifactEnvelopeOverrideInput

func (EdifactEnvelopeOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EdifactEnvelopeOverride)(nil)).Elem()
}

func (i EdifactEnvelopeOverrideArray) ToEdifactEnvelopeOverrideArrayOutput() EdifactEnvelopeOverrideArrayOutput {
	return i.ToEdifactEnvelopeOverrideArrayOutputWithContext(context.Background())
}

func (i EdifactEnvelopeOverrideArray) ToEdifactEnvelopeOverrideArrayOutputWithContext(ctx context.Context) EdifactEnvelopeOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactEnvelopeOverrideArrayOutput)
}

// The Edifact envelope override settings.
type EdifactEnvelopeOverrideResponse struct {
	// The application password.
	ApplicationPassword *string `pulumi:"applicationPassword"`
	// The association assigned code.
	AssociationAssignedCode *string `pulumi:"associationAssignedCode"`
	// The controlling agency code.
	ControllingAgencyCode *string `pulumi:"controllingAgencyCode"`
	// The functional group id.
	FunctionalGroupId *string `pulumi:"functionalGroupId"`
	// The group header message release.
	GroupHeaderMessageRelease *string `pulumi:"groupHeaderMessageRelease"`
	// The group header message version.
	GroupHeaderMessageVersion *string `pulumi:"groupHeaderMessageVersion"`
	// The message association assigned code.
	MessageAssociationAssignedCode *string `pulumi:"messageAssociationAssignedCode"`
	// The message id on which this envelope settings has to be applied.
	MessageId *string `pulumi:"messageId"`
	// The message release version on which this envelope settings has to be applied.
	MessageRelease *string `pulumi:"messageRelease"`
	// The message version on which this envelope settings has to be applied.
	MessageVersion *string `pulumi:"messageVersion"`
	// The receiver application id.
	ReceiverApplicationId *string `pulumi:"receiverApplicationId"`
	// The receiver application qualifier.
	ReceiverApplicationQualifier *string `pulumi:"receiverApplicationQualifier"`
	// The sender application id.
	SenderApplicationId *string `pulumi:"senderApplicationId"`
	// The sender application qualifier.
	SenderApplicationQualifier *string `pulumi:"senderApplicationQualifier"`
	// The target namespace on which this envelope settings has to be applied.
	TargetNamespace *string `pulumi:"targetNamespace"`
}

// The Edifact envelope override settings.
type EdifactEnvelopeOverrideResponseOutput struct{ *pulumi.OutputState }

func (EdifactEnvelopeOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactEnvelopeOverrideResponse)(nil)).Elem()
}

func (o EdifactEnvelopeOverrideResponseOutput) ToEdifactEnvelopeOverrideResponseOutput() EdifactEnvelopeOverrideResponseOutput {
	return o
}

func (o EdifactEnvelopeOverrideResponseOutput) ToEdifactEnvelopeOverrideResponseOutputWithContext(ctx context.Context) EdifactEnvelopeOverrideResponseOutput {
	return o
}

// The application password.
func (o EdifactEnvelopeOverrideResponseOutput) ApplicationPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeOverrideResponse) *string { return v.ApplicationPassword }).(pulumi.StringPtrOutput)
}

// The association assigned code.
func (o EdifactEnvelopeOverrideResponseOutput) AssociationAssignedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeOverrideResponse) *string { return v.AssociationAssignedCode }).(pulumi.StringPtrOutput)
}

// The controlling agency code.
func (o EdifactEnvelopeOverrideResponseOutput) ControllingAgencyCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeOverrideResponse) *string { return v.ControllingAgencyCode }).(pulumi.StringPtrOutput)
}

// The functional group id.
func (o EdifactEnvelopeOverrideResponseOutput) FunctionalGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeOverrideResponse) *string { return v.FunctionalGroupId }).(pulumi.StringPtrOutput)
}

// The group header message release.
func (o EdifactEnvelopeOverrideResponseOutput) GroupHeaderMessageRelease() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeOverrideResponse) *string { return v.GroupHeaderMessageRelease }).(pulumi.StringPtrOutput)
}

// The group header message version.
func (o EdifactEnvelopeOverrideResponseOutput) GroupHeaderMessageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeOverrideResponse) *string { return v.GroupHeaderMessageVersion }).(pulumi.StringPtrOutput)
}

// The message association assigned code.
func (o EdifactEnvelopeOverrideResponseOutput) MessageAssociationAssignedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeOverrideResponse) *string { return v.MessageAssociationAssignedCode }).(pulumi.StringPtrOutput)
}

// The message id on which this envelope settings has to be applied.
func (o EdifactEnvelopeOverrideResponseOutput) MessageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeOverrideResponse) *string { return v.MessageId }).(pulumi.StringPtrOutput)
}

// The message release version on which this envelope settings has to be applied.
func (o EdifactEnvelopeOverrideResponseOutput) MessageRelease() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeOverrideResponse) *string { return v.MessageRelease }).(pulumi.StringPtrOutput)
}

// The message version on which this envelope settings has to be applied.
func (o EdifactEnvelopeOverrideResponseOutput) MessageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeOverrideResponse) *string { return v.MessageVersion }).(pulumi.StringPtrOutput)
}

// The receiver application id.
func (o EdifactEnvelopeOverrideResponseOutput) ReceiverApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeOverrideResponse) *string { return v.ReceiverApplicationId }).(pulumi.StringPtrOutput)
}

// The receiver application qualifier.
func (o EdifactEnvelopeOverrideResponseOutput) ReceiverApplicationQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeOverrideResponse) *string { return v.ReceiverApplicationQualifier }).(pulumi.StringPtrOutput)
}

// The sender application id.
func (o EdifactEnvelopeOverrideResponseOutput) SenderApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeOverrideResponse) *string { return v.SenderApplicationId }).(pulumi.StringPtrOutput)
}

// The sender application qualifier.
func (o EdifactEnvelopeOverrideResponseOutput) SenderApplicationQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeOverrideResponse) *string { return v.SenderApplicationQualifier }).(pulumi.StringPtrOutput)
}

// The target namespace on which this envelope settings has to be applied.
func (o EdifactEnvelopeOverrideResponseOutput) TargetNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeOverrideResponse) *string { return v.TargetNamespace }).(pulumi.StringPtrOutput)
}

type EdifactEnvelopeOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (EdifactEnvelopeOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EdifactEnvelopeOverrideResponse)(nil)).Elem()
}

func (o EdifactEnvelopeOverrideResponseArrayOutput) ToEdifactEnvelopeOverrideResponseArrayOutput() EdifactEnvelopeOverrideResponseArrayOutput {
	return o
}

func (o EdifactEnvelopeOverrideResponseArrayOutput) ToEdifactEnvelopeOverrideResponseArrayOutputWithContext(ctx context.Context) EdifactEnvelopeOverrideResponseArrayOutput {
	return o
}

func (o EdifactEnvelopeOverrideResponseArrayOutput) Index(i pulumi.IntInput) EdifactEnvelopeOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EdifactEnvelopeOverrideResponse {
		return vs[0].([]EdifactEnvelopeOverrideResponse)[vs[1].(int)]
	}).(EdifactEnvelopeOverrideResponseOutput)
}

// The Edifact agreement envelope settings.
type EdifactEnvelopeSettings struct {
	// The application reference id.
	ApplicationReferenceId *string `pulumi:"applicationReferenceId"`
	// The value indicating whether to apply delimiter string advice.
	ApplyDelimiterStringAdvice bool `pulumi:"applyDelimiterStringAdvice"`
	// The communication agreement id.
	CommunicationAgreementId *string `pulumi:"communicationAgreementId"`
	// The value indicating whether to create grouping segments.
	CreateGroupingSegments bool `pulumi:"createGroupingSegments"`
	// The value indicating whether to enable default group headers.
	EnableDefaultGroupHeaders bool `pulumi:"enableDefaultGroupHeaders"`
	// The functional group id.
	FunctionalGroupId *string `pulumi:"functionalGroupId"`
	// The group application password.
	GroupApplicationPassword *string `pulumi:"groupApplicationPassword"`
	// The group application receiver id.
	GroupApplicationReceiverId *string `pulumi:"groupApplicationReceiverId"`
	// The group application receiver qualifier.
	GroupApplicationReceiverQualifier *string `pulumi:"groupApplicationReceiverQualifier"`
	// The group application sender id.
	GroupApplicationSenderId *string `pulumi:"groupApplicationSenderId"`
	// The group application sender qualifier.
	GroupApplicationSenderQualifier *string `pulumi:"groupApplicationSenderQualifier"`
	// The group association assigned code.
	GroupAssociationAssignedCode *string `pulumi:"groupAssociationAssignedCode"`
	// The group control number lower bound.
	GroupControlNumberLowerBound int `pulumi:"groupControlNumberLowerBound"`
	// The group control number prefix.
	GroupControlNumberPrefix *string `pulumi:"groupControlNumberPrefix"`
	// The group control number suffix.
	GroupControlNumberSuffix *string `pulumi:"groupControlNumberSuffix"`
	// The group control number upper bound.
	GroupControlNumberUpperBound int `pulumi:"groupControlNumberUpperBound"`
	// The group controlling agency code.
	GroupControllingAgencyCode *string `pulumi:"groupControllingAgencyCode"`
	// The group message release.
	GroupMessageRelease *string `pulumi:"groupMessageRelease"`
	// The group message version.
	GroupMessageVersion *string `pulumi:"groupMessageVersion"`
	// The interchange control number lower bound.
	InterchangeControlNumberLowerBound int `pulumi:"interchangeControlNumberLowerBound"`
	// The interchange control number prefix.
	InterchangeControlNumberPrefix *string `pulumi:"interchangeControlNumberPrefix"`
	// The interchange control number suffix.
	InterchangeControlNumberSuffix *string `pulumi:"interchangeControlNumberSuffix"`
	// The interchange control number upper bound.
	InterchangeControlNumberUpperBound int `pulumi:"interchangeControlNumberUpperBound"`
	// The value indicating whether the message is a test interchange.
	IsTestInterchange bool `pulumi:"isTestInterchange"`
	// The value indicating whether to overwrite existing transaction set control number.
	OverwriteExistingTransactionSetControlNumber bool `pulumi:"overwriteExistingTransactionSetControlNumber"`
	// The processing priority code.
	ProcessingPriorityCode *string `pulumi:"processingPriorityCode"`
	// The receiver internal identification.
	ReceiverInternalIdentification *string `pulumi:"receiverInternalIdentification"`
	// The receiver internal sub identification.
	ReceiverInternalSubIdentification *string `pulumi:"receiverInternalSubIdentification"`
	// The receiver reverse routing address.
	ReceiverReverseRoutingAddress *string `pulumi:"receiverReverseRoutingAddress"`
	// The recipient reference password qualifier.
	RecipientReferencePasswordQualifier *string `pulumi:"recipientReferencePasswordQualifier"`
	// The recipient reference password value.
	RecipientReferencePasswordValue *string `pulumi:"recipientReferencePasswordValue"`
	// The value indicating whether to rollover group control number.
	RolloverGroupControlNumber bool `pulumi:"rolloverGroupControlNumber"`
	// The value indicating whether to rollover interchange control number.
	RolloverInterchangeControlNumber bool `pulumi:"rolloverInterchangeControlNumber"`
	// The value indicating whether to rollover transaction set control number.
	RolloverTransactionSetControlNumber bool `pulumi:"rolloverTransactionSetControlNumber"`
	// The sender internal identification.
	SenderInternalIdentification *string `pulumi:"senderInternalIdentification"`
	// The sender internal sub identification.
	SenderInternalSubIdentification *string `pulumi:"senderInternalSubIdentification"`
	// The sender reverse routing address.
	SenderReverseRoutingAddress *string `pulumi:"senderReverseRoutingAddress"`
	// The transaction set control number lower bound.
	TransactionSetControlNumberLowerBound int `pulumi:"transactionSetControlNumberLowerBound"`
	// The transaction set control number prefix.
	TransactionSetControlNumberPrefix *string `pulumi:"transactionSetControlNumberPrefix"`
	// The transaction set control number suffix.
	TransactionSetControlNumberSuffix *string `pulumi:"transactionSetControlNumberSuffix"`
	// The transaction set control number upper bound.
	TransactionSetControlNumberUpperBound int `pulumi:"transactionSetControlNumberUpperBound"`
}

// EdifactEnvelopeSettingsInput is an input type that accepts EdifactEnvelopeSettingsArgs and EdifactEnvelopeSettingsOutput values.
// You can construct a concrete instance of `EdifactEnvelopeSettingsInput` via:
//
//          EdifactEnvelopeSettingsArgs{...}
type EdifactEnvelopeSettingsInput interface {
	pulumi.Input

	ToEdifactEnvelopeSettingsOutput() EdifactEnvelopeSettingsOutput
	ToEdifactEnvelopeSettingsOutputWithContext(context.Context) EdifactEnvelopeSettingsOutput
}

// The Edifact agreement envelope settings.
type EdifactEnvelopeSettingsArgs struct {
	// The application reference id.
	ApplicationReferenceId pulumi.StringPtrInput `pulumi:"applicationReferenceId"`
	// The value indicating whether to apply delimiter string advice.
	ApplyDelimiterStringAdvice pulumi.BoolInput `pulumi:"applyDelimiterStringAdvice"`
	// The communication agreement id.
	CommunicationAgreementId pulumi.StringPtrInput `pulumi:"communicationAgreementId"`
	// The value indicating whether to create grouping segments.
	CreateGroupingSegments pulumi.BoolInput `pulumi:"createGroupingSegments"`
	// The value indicating whether to enable default group headers.
	EnableDefaultGroupHeaders pulumi.BoolInput `pulumi:"enableDefaultGroupHeaders"`
	// The functional group id.
	FunctionalGroupId pulumi.StringPtrInput `pulumi:"functionalGroupId"`
	// The group application password.
	GroupApplicationPassword pulumi.StringPtrInput `pulumi:"groupApplicationPassword"`
	// The group application receiver id.
	GroupApplicationReceiverId pulumi.StringPtrInput `pulumi:"groupApplicationReceiverId"`
	// The group application receiver qualifier.
	GroupApplicationReceiverQualifier pulumi.StringPtrInput `pulumi:"groupApplicationReceiverQualifier"`
	// The group application sender id.
	GroupApplicationSenderId pulumi.StringPtrInput `pulumi:"groupApplicationSenderId"`
	// The group application sender qualifier.
	GroupApplicationSenderQualifier pulumi.StringPtrInput `pulumi:"groupApplicationSenderQualifier"`
	// The group association assigned code.
	GroupAssociationAssignedCode pulumi.StringPtrInput `pulumi:"groupAssociationAssignedCode"`
	// The group control number lower bound.
	GroupControlNumberLowerBound pulumi.IntInput `pulumi:"groupControlNumberLowerBound"`
	// The group control number prefix.
	GroupControlNumberPrefix pulumi.StringPtrInput `pulumi:"groupControlNumberPrefix"`
	// The group control number suffix.
	GroupControlNumberSuffix pulumi.StringPtrInput `pulumi:"groupControlNumberSuffix"`
	// The group control number upper bound.
	GroupControlNumberUpperBound pulumi.IntInput `pulumi:"groupControlNumberUpperBound"`
	// The group controlling agency code.
	GroupControllingAgencyCode pulumi.StringPtrInput `pulumi:"groupControllingAgencyCode"`
	// The group message release.
	GroupMessageRelease pulumi.StringPtrInput `pulumi:"groupMessageRelease"`
	// The group message version.
	GroupMessageVersion pulumi.StringPtrInput `pulumi:"groupMessageVersion"`
	// The interchange control number lower bound.
	InterchangeControlNumberLowerBound pulumi.IntInput `pulumi:"interchangeControlNumberLowerBound"`
	// The interchange control number prefix.
	InterchangeControlNumberPrefix pulumi.StringPtrInput `pulumi:"interchangeControlNumberPrefix"`
	// The interchange control number suffix.
	InterchangeControlNumberSuffix pulumi.StringPtrInput `pulumi:"interchangeControlNumberSuffix"`
	// The interchange control number upper bound.
	InterchangeControlNumberUpperBound pulumi.IntInput `pulumi:"interchangeControlNumberUpperBound"`
	// The value indicating whether the message is a test interchange.
	IsTestInterchange pulumi.BoolInput `pulumi:"isTestInterchange"`
	// The value indicating whether to overwrite existing transaction set control number.
	OverwriteExistingTransactionSetControlNumber pulumi.BoolInput `pulumi:"overwriteExistingTransactionSetControlNumber"`
	// The processing priority code.
	ProcessingPriorityCode pulumi.StringPtrInput `pulumi:"processingPriorityCode"`
	// The receiver internal identification.
	ReceiverInternalIdentification pulumi.StringPtrInput `pulumi:"receiverInternalIdentification"`
	// The receiver internal sub identification.
	ReceiverInternalSubIdentification pulumi.StringPtrInput `pulumi:"receiverInternalSubIdentification"`
	// The receiver reverse routing address.
	ReceiverReverseRoutingAddress pulumi.StringPtrInput `pulumi:"receiverReverseRoutingAddress"`
	// The recipient reference password qualifier.
	RecipientReferencePasswordQualifier pulumi.StringPtrInput `pulumi:"recipientReferencePasswordQualifier"`
	// The recipient reference password value.
	RecipientReferencePasswordValue pulumi.StringPtrInput `pulumi:"recipientReferencePasswordValue"`
	// The value indicating whether to rollover group control number.
	RolloverGroupControlNumber pulumi.BoolInput `pulumi:"rolloverGroupControlNumber"`
	// The value indicating whether to rollover interchange control number.
	RolloverInterchangeControlNumber pulumi.BoolInput `pulumi:"rolloverInterchangeControlNumber"`
	// The value indicating whether to rollover transaction set control number.
	RolloverTransactionSetControlNumber pulumi.BoolInput `pulumi:"rolloverTransactionSetControlNumber"`
	// The sender internal identification.
	SenderInternalIdentification pulumi.StringPtrInput `pulumi:"senderInternalIdentification"`
	// The sender internal sub identification.
	SenderInternalSubIdentification pulumi.StringPtrInput `pulumi:"senderInternalSubIdentification"`
	// The sender reverse routing address.
	SenderReverseRoutingAddress pulumi.StringPtrInput `pulumi:"senderReverseRoutingAddress"`
	// The transaction set control number lower bound.
	TransactionSetControlNumberLowerBound pulumi.IntInput `pulumi:"transactionSetControlNumberLowerBound"`
	// The transaction set control number prefix.
	TransactionSetControlNumberPrefix pulumi.StringPtrInput `pulumi:"transactionSetControlNumberPrefix"`
	// The transaction set control number suffix.
	TransactionSetControlNumberSuffix pulumi.StringPtrInput `pulumi:"transactionSetControlNumberSuffix"`
	// The transaction set control number upper bound.
	TransactionSetControlNumberUpperBound pulumi.IntInput `pulumi:"transactionSetControlNumberUpperBound"`
}

func (EdifactEnvelopeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactEnvelopeSettings)(nil)).Elem()
}

func (i EdifactEnvelopeSettingsArgs) ToEdifactEnvelopeSettingsOutput() EdifactEnvelopeSettingsOutput {
	return i.ToEdifactEnvelopeSettingsOutputWithContext(context.Background())
}

func (i EdifactEnvelopeSettingsArgs) ToEdifactEnvelopeSettingsOutputWithContext(ctx context.Context) EdifactEnvelopeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactEnvelopeSettingsOutput)
}

func (i EdifactEnvelopeSettingsArgs) ToEdifactEnvelopeSettingsPtrOutput() EdifactEnvelopeSettingsPtrOutput {
	return i.ToEdifactEnvelopeSettingsPtrOutputWithContext(context.Background())
}

func (i EdifactEnvelopeSettingsArgs) ToEdifactEnvelopeSettingsPtrOutputWithContext(ctx context.Context) EdifactEnvelopeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactEnvelopeSettingsOutput).ToEdifactEnvelopeSettingsPtrOutputWithContext(ctx)
}

// EdifactEnvelopeSettingsPtrInput is an input type that accepts EdifactEnvelopeSettingsArgs, EdifactEnvelopeSettingsPtr and EdifactEnvelopeSettingsPtrOutput values.
// You can construct a concrete instance of `EdifactEnvelopeSettingsPtrInput` via:
//
//          EdifactEnvelopeSettingsArgs{...}
//
//  or:
//
//          nil
type EdifactEnvelopeSettingsPtrInput interface {
	pulumi.Input

	ToEdifactEnvelopeSettingsPtrOutput() EdifactEnvelopeSettingsPtrOutput
	ToEdifactEnvelopeSettingsPtrOutputWithContext(context.Context) EdifactEnvelopeSettingsPtrOutput
}

type edifactEnvelopeSettingsPtrType EdifactEnvelopeSettingsArgs

func EdifactEnvelopeSettingsPtr(v *EdifactEnvelopeSettingsArgs) EdifactEnvelopeSettingsPtrInput {
	return (*edifactEnvelopeSettingsPtrType)(v)
}

func (*edifactEnvelopeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EdifactEnvelopeSettings)(nil)).Elem()
}

func (i *edifactEnvelopeSettingsPtrType) ToEdifactEnvelopeSettingsPtrOutput() EdifactEnvelopeSettingsPtrOutput {
	return i.ToEdifactEnvelopeSettingsPtrOutputWithContext(context.Background())
}

func (i *edifactEnvelopeSettingsPtrType) ToEdifactEnvelopeSettingsPtrOutputWithContext(ctx context.Context) EdifactEnvelopeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactEnvelopeSettingsPtrOutput)
}

// The Edifact agreement envelope settings.
type EdifactEnvelopeSettingsResponse struct {
	// The application reference id.
	ApplicationReferenceId *string `pulumi:"applicationReferenceId"`
	// The value indicating whether to apply delimiter string advice.
	ApplyDelimiterStringAdvice bool `pulumi:"applyDelimiterStringAdvice"`
	// The communication agreement id.
	CommunicationAgreementId *string `pulumi:"communicationAgreementId"`
	// The value indicating whether to create grouping segments.
	CreateGroupingSegments bool `pulumi:"createGroupingSegments"`
	// The value indicating whether to enable default group headers.
	EnableDefaultGroupHeaders bool `pulumi:"enableDefaultGroupHeaders"`
	// The functional group id.
	FunctionalGroupId *string `pulumi:"functionalGroupId"`
	// The group application password.
	GroupApplicationPassword *string `pulumi:"groupApplicationPassword"`
	// The group application receiver id.
	GroupApplicationReceiverId *string `pulumi:"groupApplicationReceiverId"`
	// The group application receiver qualifier.
	GroupApplicationReceiverQualifier *string `pulumi:"groupApplicationReceiverQualifier"`
	// The group application sender id.
	GroupApplicationSenderId *string `pulumi:"groupApplicationSenderId"`
	// The group application sender qualifier.
	GroupApplicationSenderQualifier *string `pulumi:"groupApplicationSenderQualifier"`
	// The group association assigned code.
	GroupAssociationAssignedCode *string `pulumi:"groupAssociationAssignedCode"`
	// The group control number lower bound.
	GroupControlNumberLowerBound int `pulumi:"groupControlNumberLowerBound"`
	// The group control number prefix.
	GroupControlNumberPrefix *string `pulumi:"groupControlNumberPrefix"`
	// The group control number suffix.
	GroupControlNumberSuffix *string `pulumi:"groupControlNumberSuffix"`
	// The group control number upper bound.
	GroupControlNumberUpperBound int `pulumi:"groupControlNumberUpperBound"`
	// The group controlling agency code.
	GroupControllingAgencyCode *string `pulumi:"groupControllingAgencyCode"`
	// The group message release.
	GroupMessageRelease *string `pulumi:"groupMessageRelease"`
	// The group message version.
	GroupMessageVersion *string `pulumi:"groupMessageVersion"`
	// The interchange control number lower bound.
	InterchangeControlNumberLowerBound int `pulumi:"interchangeControlNumberLowerBound"`
	// The interchange control number prefix.
	InterchangeControlNumberPrefix *string `pulumi:"interchangeControlNumberPrefix"`
	// The interchange control number suffix.
	InterchangeControlNumberSuffix *string `pulumi:"interchangeControlNumberSuffix"`
	// The interchange control number upper bound.
	InterchangeControlNumberUpperBound int `pulumi:"interchangeControlNumberUpperBound"`
	// The value indicating whether the message is a test interchange.
	IsTestInterchange bool `pulumi:"isTestInterchange"`
	// The value indicating whether to overwrite existing transaction set control number.
	OverwriteExistingTransactionSetControlNumber bool `pulumi:"overwriteExistingTransactionSetControlNumber"`
	// The processing priority code.
	ProcessingPriorityCode *string `pulumi:"processingPriorityCode"`
	// The receiver internal identification.
	ReceiverInternalIdentification *string `pulumi:"receiverInternalIdentification"`
	// The receiver internal sub identification.
	ReceiverInternalSubIdentification *string `pulumi:"receiverInternalSubIdentification"`
	// The receiver reverse routing address.
	ReceiverReverseRoutingAddress *string `pulumi:"receiverReverseRoutingAddress"`
	// The recipient reference password qualifier.
	RecipientReferencePasswordQualifier *string `pulumi:"recipientReferencePasswordQualifier"`
	// The recipient reference password value.
	RecipientReferencePasswordValue *string `pulumi:"recipientReferencePasswordValue"`
	// The value indicating whether to rollover group control number.
	RolloverGroupControlNumber bool `pulumi:"rolloverGroupControlNumber"`
	// The value indicating whether to rollover interchange control number.
	RolloverInterchangeControlNumber bool `pulumi:"rolloverInterchangeControlNumber"`
	// The value indicating whether to rollover transaction set control number.
	RolloverTransactionSetControlNumber bool `pulumi:"rolloverTransactionSetControlNumber"`
	// The sender internal identification.
	SenderInternalIdentification *string `pulumi:"senderInternalIdentification"`
	// The sender internal sub identification.
	SenderInternalSubIdentification *string `pulumi:"senderInternalSubIdentification"`
	// The sender reverse routing address.
	SenderReverseRoutingAddress *string `pulumi:"senderReverseRoutingAddress"`
	// The transaction set control number lower bound.
	TransactionSetControlNumberLowerBound int `pulumi:"transactionSetControlNumberLowerBound"`
	// The transaction set control number prefix.
	TransactionSetControlNumberPrefix *string `pulumi:"transactionSetControlNumberPrefix"`
	// The transaction set control number suffix.
	TransactionSetControlNumberSuffix *string `pulumi:"transactionSetControlNumberSuffix"`
	// The transaction set control number upper bound.
	TransactionSetControlNumberUpperBound int `pulumi:"transactionSetControlNumberUpperBound"`
}

// The Edifact agreement envelope settings.
type EdifactEnvelopeSettingsResponseOutput struct{ *pulumi.OutputState }

func (EdifactEnvelopeSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactEnvelopeSettingsResponse)(nil)).Elem()
}

func (o EdifactEnvelopeSettingsResponseOutput) ToEdifactEnvelopeSettingsResponseOutput() EdifactEnvelopeSettingsResponseOutput {
	return o
}

func (o EdifactEnvelopeSettingsResponseOutput) ToEdifactEnvelopeSettingsResponseOutputWithContext(ctx context.Context) EdifactEnvelopeSettingsResponseOutput {
	return o
}

func (o EdifactEnvelopeSettingsResponseOutput) ToEdifactEnvelopeSettingsResponsePtrOutput() EdifactEnvelopeSettingsResponsePtrOutput {
	return o.ToEdifactEnvelopeSettingsResponsePtrOutputWithContext(context.Background())
}

func (o EdifactEnvelopeSettingsResponseOutput) ToEdifactEnvelopeSettingsResponsePtrOutputWithContext(ctx context.Context) EdifactEnvelopeSettingsResponsePtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *EdifactEnvelopeSettingsResponse {
		return &v
	}).(EdifactEnvelopeSettingsResponsePtrOutput)
}

// The application reference id.
func (o EdifactEnvelopeSettingsResponseOutput) ApplicationReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.ApplicationReferenceId }).(pulumi.StringPtrOutput)
}

// The value indicating whether to apply delimiter string advice.
func (o EdifactEnvelopeSettingsResponseOutput) ApplyDelimiterStringAdvice() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) bool { return v.ApplyDelimiterStringAdvice }).(pulumi.BoolOutput)
}

// The communication agreement id.
func (o EdifactEnvelopeSettingsResponseOutput) CommunicationAgreementId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.CommunicationAgreementId }).(pulumi.StringPtrOutput)
}

// The value indicating whether to create grouping segments.
func (o EdifactEnvelopeSettingsResponseOutput) CreateGroupingSegments() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) bool { return v.CreateGroupingSegments }).(pulumi.BoolOutput)
}

// The value indicating whether to enable default group headers.
func (o EdifactEnvelopeSettingsResponseOutput) EnableDefaultGroupHeaders() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) bool { return v.EnableDefaultGroupHeaders }).(pulumi.BoolOutput)
}

// The functional group id.
func (o EdifactEnvelopeSettingsResponseOutput) FunctionalGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.FunctionalGroupId }).(pulumi.StringPtrOutput)
}

// The group application password.
func (o EdifactEnvelopeSettingsResponseOutput) GroupApplicationPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.GroupApplicationPassword }).(pulumi.StringPtrOutput)
}

// The group application receiver id.
func (o EdifactEnvelopeSettingsResponseOutput) GroupApplicationReceiverId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.GroupApplicationReceiverId }).(pulumi.StringPtrOutput)
}

// The group application receiver qualifier.
func (o EdifactEnvelopeSettingsResponseOutput) GroupApplicationReceiverQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.GroupApplicationReceiverQualifier }).(pulumi.StringPtrOutput)
}

// The group application sender id.
func (o EdifactEnvelopeSettingsResponseOutput) GroupApplicationSenderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.GroupApplicationSenderId }).(pulumi.StringPtrOutput)
}

// The group application sender qualifier.
func (o EdifactEnvelopeSettingsResponseOutput) GroupApplicationSenderQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.GroupApplicationSenderQualifier }).(pulumi.StringPtrOutput)
}

// The group association assigned code.
func (o EdifactEnvelopeSettingsResponseOutput) GroupAssociationAssignedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.GroupAssociationAssignedCode }).(pulumi.StringPtrOutput)
}

// The group control number lower bound.
func (o EdifactEnvelopeSettingsResponseOutput) GroupControlNumberLowerBound() pulumi.IntOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) int { return v.GroupControlNumberLowerBound }).(pulumi.IntOutput)
}

// The group control number prefix.
func (o EdifactEnvelopeSettingsResponseOutput) GroupControlNumberPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.GroupControlNumberPrefix }).(pulumi.StringPtrOutput)
}

// The group control number suffix.
func (o EdifactEnvelopeSettingsResponseOutput) GroupControlNumberSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.GroupControlNumberSuffix }).(pulumi.StringPtrOutput)
}

// The group control number upper bound.
func (o EdifactEnvelopeSettingsResponseOutput) GroupControlNumberUpperBound() pulumi.IntOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) int { return v.GroupControlNumberUpperBound }).(pulumi.IntOutput)
}

// The group controlling agency code.
func (o EdifactEnvelopeSettingsResponseOutput) GroupControllingAgencyCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.GroupControllingAgencyCode }).(pulumi.StringPtrOutput)
}

// The group message release.
func (o EdifactEnvelopeSettingsResponseOutput) GroupMessageRelease() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.GroupMessageRelease }).(pulumi.StringPtrOutput)
}

// The group message version.
func (o EdifactEnvelopeSettingsResponseOutput) GroupMessageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.GroupMessageVersion }).(pulumi.StringPtrOutput)
}

// The interchange control number lower bound.
func (o EdifactEnvelopeSettingsResponseOutput) InterchangeControlNumberLowerBound() pulumi.IntOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) int { return v.InterchangeControlNumberLowerBound }).(pulumi.IntOutput)
}

// The interchange control number prefix.
func (o EdifactEnvelopeSettingsResponseOutput) InterchangeControlNumberPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.InterchangeControlNumberPrefix }).(pulumi.StringPtrOutput)
}

// The interchange control number suffix.
func (o EdifactEnvelopeSettingsResponseOutput) InterchangeControlNumberSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.InterchangeControlNumberSuffix }).(pulumi.StringPtrOutput)
}

// The interchange control number upper bound.
func (o EdifactEnvelopeSettingsResponseOutput) InterchangeControlNumberUpperBound() pulumi.IntOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) int { return v.InterchangeControlNumberUpperBound }).(pulumi.IntOutput)
}

// The value indicating whether the message is a test interchange.
func (o EdifactEnvelopeSettingsResponseOutput) IsTestInterchange() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) bool { return v.IsTestInterchange }).(pulumi.BoolOutput)
}

// The value indicating whether to overwrite existing transaction set control number.
func (o EdifactEnvelopeSettingsResponseOutput) OverwriteExistingTransactionSetControlNumber() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) bool { return v.OverwriteExistingTransactionSetControlNumber }).(pulumi.BoolOutput)
}

// The processing priority code.
func (o EdifactEnvelopeSettingsResponseOutput) ProcessingPriorityCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.ProcessingPriorityCode }).(pulumi.StringPtrOutput)
}

// The receiver internal identification.
func (o EdifactEnvelopeSettingsResponseOutput) ReceiverInternalIdentification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.ReceiverInternalIdentification }).(pulumi.StringPtrOutput)
}

// The receiver internal sub identification.
func (o EdifactEnvelopeSettingsResponseOutput) ReceiverInternalSubIdentification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.ReceiverInternalSubIdentification }).(pulumi.StringPtrOutput)
}

// The receiver reverse routing address.
func (o EdifactEnvelopeSettingsResponseOutput) ReceiverReverseRoutingAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.ReceiverReverseRoutingAddress }).(pulumi.StringPtrOutput)
}

// The recipient reference password qualifier.
func (o EdifactEnvelopeSettingsResponseOutput) RecipientReferencePasswordQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.RecipientReferencePasswordQualifier }).(pulumi.StringPtrOutput)
}

// The recipient reference password value.
func (o EdifactEnvelopeSettingsResponseOutput) RecipientReferencePasswordValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.RecipientReferencePasswordValue }).(pulumi.StringPtrOutput)
}

// The value indicating whether to rollover group control number.
func (o EdifactEnvelopeSettingsResponseOutput) RolloverGroupControlNumber() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) bool { return v.RolloverGroupControlNumber }).(pulumi.BoolOutput)
}

// The value indicating whether to rollover interchange control number.
func (o EdifactEnvelopeSettingsResponseOutput) RolloverInterchangeControlNumber() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) bool { return v.RolloverInterchangeControlNumber }).(pulumi.BoolOutput)
}

// The value indicating whether to rollover transaction set control number.
func (o EdifactEnvelopeSettingsResponseOutput) RolloverTransactionSetControlNumber() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) bool { return v.RolloverTransactionSetControlNumber }).(pulumi.BoolOutput)
}

// The sender internal identification.
func (o EdifactEnvelopeSettingsResponseOutput) SenderInternalIdentification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.SenderInternalIdentification }).(pulumi.StringPtrOutput)
}

// The sender internal sub identification.
func (o EdifactEnvelopeSettingsResponseOutput) SenderInternalSubIdentification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.SenderInternalSubIdentification }).(pulumi.StringPtrOutput)
}

// The sender reverse routing address.
func (o EdifactEnvelopeSettingsResponseOutput) SenderReverseRoutingAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.SenderReverseRoutingAddress }).(pulumi.StringPtrOutput)
}

// The transaction set control number lower bound.
func (o EdifactEnvelopeSettingsResponseOutput) TransactionSetControlNumberLowerBound() pulumi.IntOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) int { return v.TransactionSetControlNumberLowerBound }).(pulumi.IntOutput)
}

// The transaction set control number prefix.
func (o EdifactEnvelopeSettingsResponseOutput) TransactionSetControlNumberPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.TransactionSetControlNumberPrefix }).(pulumi.StringPtrOutput)
}

// The transaction set control number suffix.
func (o EdifactEnvelopeSettingsResponseOutput) TransactionSetControlNumberSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) *string { return v.TransactionSetControlNumberSuffix }).(pulumi.StringPtrOutput)
}

// The transaction set control number upper bound.
func (o EdifactEnvelopeSettingsResponseOutput) TransactionSetControlNumberUpperBound() pulumi.IntOutput {
	return o.ApplyT(func(v EdifactEnvelopeSettingsResponse) int { return v.TransactionSetControlNumberUpperBound }).(pulumi.IntOutput)
}

type EdifactEnvelopeSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (EdifactEnvelopeSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdifactEnvelopeSettingsResponse)(nil)).Elem()
}

func (o EdifactEnvelopeSettingsResponsePtrOutput) ToEdifactEnvelopeSettingsResponsePtrOutput() EdifactEnvelopeSettingsResponsePtrOutput {
	return o
}

func (o EdifactEnvelopeSettingsResponsePtrOutput) ToEdifactEnvelopeSettingsResponsePtrOutputWithContext(ctx context.Context) EdifactEnvelopeSettingsResponsePtrOutput {
	return o
}

func (o EdifactEnvelopeSettingsResponsePtrOutput) Elem() EdifactEnvelopeSettingsResponseOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) EdifactEnvelopeSettingsResponse { return *v }).(EdifactEnvelopeSettingsResponseOutput)
}

// The application reference id.
func (o EdifactEnvelopeSettingsResponsePtrOutput) ApplicationReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationReferenceId
	}).(pulumi.StringPtrOutput)
}

// The value indicating whether to apply delimiter string advice.
func (o EdifactEnvelopeSettingsResponsePtrOutput) ApplyDelimiterStringAdvice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.ApplyDelimiterStringAdvice
	}).(pulumi.BoolPtrOutput)
}

// The communication agreement id.
func (o EdifactEnvelopeSettingsResponsePtrOutput) CommunicationAgreementId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CommunicationAgreementId
	}).(pulumi.StringPtrOutput)
}

// The value indicating whether to create grouping segments.
func (o EdifactEnvelopeSettingsResponsePtrOutput) CreateGroupingSegments() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.CreateGroupingSegments
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to enable default group headers.
func (o EdifactEnvelopeSettingsResponsePtrOutput) EnableDefaultGroupHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableDefaultGroupHeaders
	}).(pulumi.BoolPtrOutput)
}

// The functional group id.
func (o EdifactEnvelopeSettingsResponsePtrOutput) FunctionalGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.FunctionalGroupId
	}).(pulumi.StringPtrOutput)
}

// The group application password.
func (o EdifactEnvelopeSettingsResponsePtrOutput) GroupApplicationPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.GroupApplicationPassword
	}).(pulumi.StringPtrOutput)
}

// The group application receiver id.
func (o EdifactEnvelopeSettingsResponsePtrOutput) GroupApplicationReceiverId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.GroupApplicationReceiverId
	}).(pulumi.StringPtrOutput)
}

// The group application receiver qualifier.
func (o EdifactEnvelopeSettingsResponsePtrOutput) GroupApplicationReceiverQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.GroupApplicationReceiverQualifier
	}).(pulumi.StringPtrOutput)
}

// The group application sender id.
func (o EdifactEnvelopeSettingsResponsePtrOutput) GroupApplicationSenderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.GroupApplicationSenderId
	}).(pulumi.StringPtrOutput)
}

// The group application sender qualifier.
func (o EdifactEnvelopeSettingsResponsePtrOutput) GroupApplicationSenderQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.GroupApplicationSenderQualifier
	}).(pulumi.StringPtrOutput)
}

// The group association assigned code.
func (o EdifactEnvelopeSettingsResponsePtrOutput) GroupAssociationAssignedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.GroupAssociationAssignedCode
	}).(pulumi.StringPtrOutput)
}

// The group control number lower bound.
func (o EdifactEnvelopeSettingsResponsePtrOutput) GroupControlNumberLowerBound() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.GroupControlNumberLowerBound
	}).(pulumi.IntPtrOutput)
}

// The group control number prefix.
func (o EdifactEnvelopeSettingsResponsePtrOutput) GroupControlNumberPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.GroupControlNumberPrefix
	}).(pulumi.StringPtrOutput)
}

// The group control number suffix.
func (o EdifactEnvelopeSettingsResponsePtrOutput) GroupControlNumberSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.GroupControlNumberSuffix
	}).(pulumi.StringPtrOutput)
}

// The group control number upper bound.
func (o EdifactEnvelopeSettingsResponsePtrOutput) GroupControlNumberUpperBound() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.GroupControlNumberUpperBound
	}).(pulumi.IntPtrOutput)
}

// The group controlling agency code.
func (o EdifactEnvelopeSettingsResponsePtrOutput) GroupControllingAgencyCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.GroupControllingAgencyCode
	}).(pulumi.StringPtrOutput)
}

// The group message release.
func (o EdifactEnvelopeSettingsResponsePtrOutput) GroupMessageRelease() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.GroupMessageRelease
	}).(pulumi.StringPtrOutput)
}

// The group message version.
func (o EdifactEnvelopeSettingsResponsePtrOutput) GroupMessageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.GroupMessageVersion
	}).(pulumi.StringPtrOutput)
}

// The interchange control number lower bound.
func (o EdifactEnvelopeSettingsResponsePtrOutput) InterchangeControlNumberLowerBound() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.InterchangeControlNumberLowerBound
	}).(pulumi.IntPtrOutput)
}

// The interchange control number prefix.
func (o EdifactEnvelopeSettingsResponsePtrOutput) InterchangeControlNumberPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InterchangeControlNumberPrefix
	}).(pulumi.StringPtrOutput)
}

// The interchange control number suffix.
func (o EdifactEnvelopeSettingsResponsePtrOutput) InterchangeControlNumberSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InterchangeControlNumberSuffix
	}).(pulumi.StringPtrOutput)
}

// The interchange control number upper bound.
func (o EdifactEnvelopeSettingsResponsePtrOutput) InterchangeControlNumberUpperBound() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.InterchangeControlNumberUpperBound
	}).(pulumi.IntPtrOutput)
}

// The value indicating whether the message is a test interchange.
func (o EdifactEnvelopeSettingsResponsePtrOutput) IsTestInterchange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsTestInterchange
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to overwrite existing transaction set control number.
func (o EdifactEnvelopeSettingsResponsePtrOutput) OverwriteExistingTransactionSetControlNumber() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.OverwriteExistingTransactionSetControlNumber
	}).(pulumi.BoolPtrOutput)
}

// The processing priority code.
func (o EdifactEnvelopeSettingsResponsePtrOutput) ProcessingPriorityCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProcessingPriorityCode
	}).(pulumi.StringPtrOutput)
}

// The receiver internal identification.
func (o EdifactEnvelopeSettingsResponsePtrOutput) ReceiverInternalIdentification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReceiverInternalIdentification
	}).(pulumi.StringPtrOutput)
}

// The receiver internal sub identification.
func (o EdifactEnvelopeSettingsResponsePtrOutput) ReceiverInternalSubIdentification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReceiverInternalSubIdentification
	}).(pulumi.StringPtrOutput)
}

// The receiver reverse routing address.
func (o EdifactEnvelopeSettingsResponsePtrOutput) ReceiverReverseRoutingAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReceiverReverseRoutingAddress
	}).(pulumi.StringPtrOutput)
}

// The recipient reference password qualifier.
func (o EdifactEnvelopeSettingsResponsePtrOutput) RecipientReferencePasswordQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecipientReferencePasswordQualifier
	}).(pulumi.StringPtrOutput)
}

// The recipient reference password value.
func (o EdifactEnvelopeSettingsResponsePtrOutput) RecipientReferencePasswordValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecipientReferencePasswordValue
	}).(pulumi.StringPtrOutput)
}

// The value indicating whether to rollover group control number.
func (o EdifactEnvelopeSettingsResponsePtrOutput) RolloverGroupControlNumber() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.RolloverGroupControlNumber
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to rollover interchange control number.
func (o EdifactEnvelopeSettingsResponsePtrOutput) RolloverInterchangeControlNumber() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.RolloverInterchangeControlNumber
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to rollover transaction set control number.
func (o EdifactEnvelopeSettingsResponsePtrOutput) RolloverTransactionSetControlNumber() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.RolloverTransactionSetControlNumber
	}).(pulumi.BoolPtrOutput)
}

// The sender internal identification.
func (o EdifactEnvelopeSettingsResponsePtrOutput) SenderInternalIdentification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SenderInternalIdentification
	}).(pulumi.StringPtrOutput)
}

// The sender internal sub identification.
func (o EdifactEnvelopeSettingsResponsePtrOutput) SenderInternalSubIdentification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SenderInternalSubIdentification
	}).(pulumi.StringPtrOutput)
}

// The sender reverse routing address.
func (o EdifactEnvelopeSettingsResponsePtrOutput) SenderReverseRoutingAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SenderReverseRoutingAddress
	}).(pulumi.StringPtrOutput)
}

// The transaction set control number lower bound.
func (o EdifactEnvelopeSettingsResponsePtrOutput) TransactionSetControlNumberLowerBound() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TransactionSetControlNumberLowerBound
	}).(pulumi.IntPtrOutput)
}

// The transaction set control number prefix.
func (o EdifactEnvelopeSettingsResponsePtrOutput) TransactionSetControlNumberPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TransactionSetControlNumberPrefix
	}).(pulumi.StringPtrOutput)
}

// The transaction set control number suffix.
func (o EdifactEnvelopeSettingsResponsePtrOutput) TransactionSetControlNumberSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TransactionSetControlNumberSuffix
	}).(pulumi.StringPtrOutput)
}

// The transaction set control number upper bound.
func (o EdifactEnvelopeSettingsResponsePtrOutput) TransactionSetControlNumberUpperBound() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EdifactEnvelopeSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TransactionSetControlNumberUpperBound
	}).(pulumi.IntPtrOutput)
}

// The Edifact agreement framing settings.
type EdifactFramingSettings struct {
	// The character encoding.
	CharacterEncoding *string `pulumi:"characterEncoding"`
	// The EDIFACT frame setting characterSet.
	CharacterSet string `pulumi:"characterSet"`
	// The component separator.
	ComponentSeparator int `pulumi:"componentSeparator"`
	// The data element separator.
	DataElementSeparator int `pulumi:"dataElementSeparator"`
	// The EDIFACT frame setting decimal indicator.
	DecimalPointIndicator string `pulumi:"decimalPointIndicator"`
	// The protocol version.
	ProtocolVersion int `pulumi:"protocolVersion"`
	// The release indicator.
	ReleaseIndicator int `pulumi:"releaseIndicator"`
	// The repetition separator.
	RepetitionSeparator int `pulumi:"repetitionSeparator"`
	// The segment terminator.
	SegmentTerminator int `pulumi:"segmentTerminator"`
	// The EDIFACT frame setting segment terminator suffix.
	SegmentTerminatorSuffix string `pulumi:"segmentTerminatorSuffix"`
	// The service code list directory version.
	ServiceCodeListDirectoryVersion *string `pulumi:"serviceCodeListDirectoryVersion"`
}

// EdifactFramingSettingsInput is an input type that accepts EdifactFramingSettingsArgs and EdifactFramingSettingsOutput values.
// You can construct a concrete instance of `EdifactFramingSettingsInput` via:
//
//          EdifactFramingSettingsArgs{...}
type EdifactFramingSettingsInput interface {
	pulumi.Input

	ToEdifactFramingSettingsOutput() EdifactFramingSettingsOutput
	ToEdifactFramingSettingsOutputWithContext(context.Context) EdifactFramingSettingsOutput
}

// The Edifact agreement framing settings.
type EdifactFramingSettingsArgs struct {
	// The character encoding.
	CharacterEncoding pulumi.StringPtrInput `pulumi:"characterEncoding"`
	// The EDIFACT frame setting characterSet.
	CharacterSet pulumi.StringInput `pulumi:"characterSet"`
	// The component separator.
	ComponentSeparator pulumi.IntInput `pulumi:"componentSeparator"`
	// The data element separator.
	DataElementSeparator pulumi.IntInput `pulumi:"dataElementSeparator"`
	// The EDIFACT frame setting decimal indicator.
	DecimalPointIndicator pulumi.StringInput `pulumi:"decimalPointIndicator"`
	// The protocol version.
	ProtocolVersion pulumi.IntInput `pulumi:"protocolVersion"`
	// The release indicator.
	ReleaseIndicator pulumi.IntInput `pulumi:"releaseIndicator"`
	// The repetition separator.
	RepetitionSeparator pulumi.IntInput `pulumi:"repetitionSeparator"`
	// The segment terminator.
	SegmentTerminator pulumi.IntInput `pulumi:"segmentTerminator"`
	// The EDIFACT frame setting segment terminator suffix.
	SegmentTerminatorSuffix pulumi.StringInput `pulumi:"segmentTerminatorSuffix"`
	// The service code list directory version.
	ServiceCodeListDirectoryVersion pulumi.StringPtrInput `pulumi:"serviceCodeListDirectoryVersion"`
}

func (EdifactFramingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactFramingSettings)(nil)).Elem()
}

func (i EdifactFramingSettingsArgs) ToEdifactFramingSettingsOutput() EdifactFramingSettingsOutput {
	return i.ToEdifactFramingSettingsOutputWithContext(context.Background())
}

func (i EdifactFramingSettingsArgs) ToEdifactFramingSettingsOutputWithContext(ctx context.Context) EdifactFramingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactFramingSettingsOutput)
}

func (i EdifactFramingSettingsArgs) ToEdifactFramingSettingsPtrOutput() EdifactFramingSettingsPtrOutput {
	return i.ToEdifactFramingSettingsPtrOutputWithContext(context.Background())
}

func (i EdifactFramingSettingsArgs) ToEdifactFramingSettingsPtrOutputWithContext(ctx context.Context) EdifactFramingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactFramingSettingsOutput).ToEdifactFramingSettingsPtrOutputWithContext(ctx)
}

// EdifactFramingSettingsPtrInput is an input type that accepts EdifactFramingSettingsArgs, EdifactFramingSettingsPtr and EdifactFramingSettingsPtrOutput values.
// You can construct a concrete instance of `EdifactFramingSettingsPtrInput` via:
//
//          EdifactFramingSettingsArgs{...}
//
//  or:
//
//          nil
type EdifactFramingSettingsPtrInput interface {
	pulumi.Input

	ToEdifactFramingSettingsPtrOutput() EdifactFramingSettingsPtrOutput
	ToEdifactFramingSettingsPtrOutputWithContext(context.Context) EdifactFramingSettingsPtrOutput
}

type edifactFramingSettingsPtrType EdifactFramingSettingsArgs

func EdifactFramingSettingsPtr(v *EdifactFramingSettingsArgs) EdifactFramingSettingsPtrInput {
	return (*edifactFramingSettingsPtrType)(v)
}

func (*edifactFramingSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EdifactFramingSettings)(nil)).Elem()
}

func (i *edifactFramingSettingsPtrType) ToEdifactFramingSettingsPtrOutput() EdifactFramingSettingsPtrOutput {
	return i.ToEdifactFramingSettingsPtrOutputWithContext(context.Background())
}

func (i *edifactFramingSettingsPtrType) ToEdifactFramingSettingsPtrOutputWithContext(ctx context.Context) EdifactFramingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactFramingSettingsPtrOutput)
}

// The Edifact agreement framing settings.
type EdifactFramingSettingsResponse struct {
	// The character encoding.
	CharacterEncoding *string `pulumi:"characterEncoding"`
	// The EDIFACT frame setting characterSet.
	CharacterSet string `pulumi:"characterSet"`
	// The component separator.
	ComponentSeparator int `pulumi:"componentSeparator"`
	// The data element separator.
	DataElementSeparator int `pulumi:"dataElementSeparator"`
	// The EDIFACT frame setting decimal indicator.
	DecimalPointIndicator string `pulumi:"decimalPointIndicator"`
	// The protocol version.
	ProtocolVersion int `pulumi:"protocolVersion"`
	// The release indicator.
	ReleaseIndicator int `pulumi:"releaseIndicator"`
	// The repetition separator.
	RepetitionSeparator int `pulumi:"repetitionSeparator"`
	// The segment terminator.
	SegmentTerminator int `pulumi:"segmentTerminator"`
	// The EDIFACT frame setting segment terminator suffix.
	SegmentTerminatorSuffix string `pulumi:"segmentTerminatorSuffix"`
	// The service code list directory version.
	ServiceCodeListDirectoryVersion *string `pulumi:"serviceCodeListDirectoryVersion"`
}

// The Edifact agreement framing settings.
type EdifactFramingSettingsResponseOutput struct{ *pulumi.OutputState }

func (EdifactFramingSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactFramingSettingsResponse)(nil)).Elem()
}

func (o EdifactFramingSettingsResponseOutput) ToEdifactFramingSettingsResponseOutput() EdifactFramingSettingsResponseOutput {
	return o
}

func (o EdifactFramingSettingsResponseOutput) ToEdifactFramingSettingsResponseOutputWithContext(ctx context.Context) EdifactFramingSettingsResponseOutput {
	return o
}

func (o EdifactFramingSettingsResponseOutput) ToEdifactFramingSettingsResponsePtrOutput() EdifactFramingSettingsResponsePtrOutput {
	return o.ToEdifactFramingSettingsResponsePtrOutputWithContext(context.Background())
}

func (o EdifactFramingSettingsResponseOutput) ToEdifactFramingSettingsResponsePtrOutputWithContext(ctx context.Context) EdifactFramingSettingsResponsePtrOutput {
	return o.ApplyT(func(v EdifactFramingSettingsResponse) *EdifactFramingSettingsResponse {
		return &v
	}).(EdifactFramingSettingsResponsePtrOutput)
}

// The character encoding.
func (o EdifactFramingSettingsResponseOutput) CharacterEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactFramingSettingsResponse) *string { return v.CharacterEncoding }).(pulumi.StringPtrOutput)
}

// The EDIFACT frame setting characterSet.
func (o EdifactFramingSettingsResponseOutput) CharacterSet() pulumi.StringOutput {
	return o.ApplyT(func(v EdifactFramingSettingsResponse) string { return v.CharacterSet }).(pulumi.StringOutput)
}

// The component separator.
func (o EdifactFramingSettingsResponseOutput) ComponentSeparator() pulumi.IntOutput {
	return o.ApplyT(func(v EdifactFramingSettingsResponse) int { return v.ComponentSeparator }).(pulumi.IntOutput)
}

// The data element separator.
func (o EdifactFramingSettingsResponseOutput) DataElementSeparator() pulumi.IntOutput {
	return o.ApplyT(func(v EdifactFramingSettingsResponse) int { return v.DataElementSeparator }).(pulumi.IntOutput)
}

// The EDIFACT frame setting decimal indicator.
func (o EdifactFramingSettingsResponseOutput) DecimalPointIndicator() pulumi.StringOutput {
	return o.ApplyT(func(v EdifactFramingSettingsResponse) string { return v.DecimalPointIndicator }).(pulumi.StringOutput)
}

// The protocol version.
func (o EdifactFramingSettingsResponseOutput) ProtocolVersion() pulumi.IntOutput {
	return o.ApplyT(func(v EdifactFramingSettingsResponse) int { return v.ProtocolVersion }).(pulumi.IntOutput)
}

// The release indicator.
func (o EdifactFramingSettingsResponseOutput) ReleaseIndicator() pulumi.IntOutput {
	return o.ApplyT(func(v EdifactFramingSettingsResponse) int { return v.ReleaseIndicator }).(pulumi.IntOutput)
}

// The repetition separator.
func (o EdifactFramingSettingsResponseOutput) RepetitionSeparator() pulumi.IntOutput {
	return o.ApplyT(func(v EdifactFramingSettingsResponse) int { return v.RepetitionSeparator }).(pulumi.IntOutput)
}

// The segment terminator.
func (o EdifactFramingSettingsResponseOutput) SegmentTerminator() pulumi.IntOutput {
	return o.ApplyT(func(v EdifactFramingSettingsResponse) int { return v.SegmentTerminator }).(pulumi.IntOutput)
}

// The EDIFACT frame setting segment terminator suffix.
func (o EdifactFramingSettingsResponseOutput) SegmentTerminatorSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v EdifactFramingSettingsResponse) string { return v.SegmentTerminatorSuffix }).(pulumi.StringOutput)
}

// The service code list directory version.
func (o EdifactFramingSettingsResponseOutput) ServiceCodeListDirectoryVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactFramingSettingsResponse) *string { return v.ServiceCodeListDirectoryVersion }).(pulumi.StringPtrOutput)
}

type EdifactFramingSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (EdifactFramingSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdifactFramingSettingsResponse)(nil)).Elem()
}

func (o EdifactFramingSettingsResponsePtrOutput) ToEdifactFramingSettingsResponsePtrOutput() EdifactFramingSettingsResponsePtrOutput {
	return o
}

func (o EdifactFramingSettingsResponsePtrOutput) ToEdifactFramingSettingsResponsePtrOutputWithContext(ctx context.Context) EdifactFramingSettingsResponsePtrOutput {
	return o
}

func (o EdifactFramingSettingsResponsePtrOutput) Elem() EdifactFramingSettingsResponseOutput {
	return o.ApplyT(func(v *EdifactFramingSettingsResponse) EdifactFramingSettingsResponse { return *v }).(EdifactFramingSettingsResponseOutput)
}

// The character encoding.
func (o EdifactFramingSettingsResponsePtrOutput) CharacterEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactFramingSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CharacterEncoding
	}).(pulumi.StringPtrOutput)
}

// The EDIFACT frame setting characterSet.
func (o EdifactFramingSettingsResponsePtrOutput) CharacterSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactFramingSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CharacterSet
	}).(pulumi.StringPtrOutput)
}

// The component separator.
func (o EdifactFramingSettingsResponsePtrOutput) ComponentSeparator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EdifactFramingSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ComponentSeparator
	}).(pulumi.IntPtrOutput)
}

// The data element separator.
func (o EdifactFramingSettingsResponsePtrOutput) DataElementSeparator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EdifactFramingSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.DataElementSeparator
	}).(pulumi.IntPtrOutput)
}

// The EDIFACT frame setting decimal indicator.
func (o EdifactFramingSettingsResponsePtrOutput) DecimalPointIndicator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactFramingSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DecimalPointIndicator
	}).(pulumi.StringPtrOutput)
}

// The protocol version.
func (o EdifactFramingSettingsResponsePtrOutput) ProtocolVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EdifactFramingSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ProtocolVersion
	}).(pulumi.IntPtrOutput)
}

// The release indicator.
func (o EdifactFramingSettingsResponsePtrOutput) ReleaseIndicator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EdifactFramingSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ReleaseIndicator
	}).(pulumi.IntPtrOutput)
}

// The repetition separator.
func (o EdifactFramingSettingsResponsePtrOutput) RepetitionSeparator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EdifactFramingSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.RepetitionSeparator
	}).(pulumi.IntPtrOutput)
}

// The segment terminator.
func (o EdifactFramingSettingsResponsePtrOutput) SegmentTerminator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EdifactFramingSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.SegmentTerminator
	}).(pulumi.IntPtrOutput)
}

// The EDIFACT frame setting segment terminator suffix.
func (o EdifactFramingSettingsResponsePtrOutput) SegmentTerminatorSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactFramingSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SegmentTerminatorSuffix
	}).(pulumi.StringPtrOutput)
}

// The service code list directory version.
func (o EdifactFramingSettingsResponsePtrOutput) ServiceCodeListDirectoryVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactFramingSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCodeListDirectoryVersion
	}).(pulumi.StringPtrOutput)
}

// The Edifact message filter for odata query.
type EdifactMessageFilter struct {
	// The message filter type.
	MessageFilterType string `pulumi:"messageFilterType"`
}

// EdifactMessageFilterInput is an input type that accepts EdifactMessageFilterArgs and EdifactMessageFilterOutput values.
// You can construct a concrete instance of `EdifactMessageFilterInput` via:
//
//          EdifactMessageFilterArgs{...}
type EdifactMessageFilterInput interface {
	pulumi.Input

	ToEdifactMessageFilterOutput() EdifactMessageFilterOutput
	ToEdifactMessageFilterOutputWithContext(context.Context) EdifactMessageFilterOutput
}

// The Edifact message filter for odata query.
type EdifactMessageFilterArgs struct {
	// The message filter type.
	MessageFilterType pulumi.StringInput `pulumi:"messageFilterType"`
}

func (EdifactMessageFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactMessageFilter)(nil)).Elem()
}

func (i EdifactMessageFilterArgs) ToEdifactMessageFilterOutput() EdifactMessageFilterOutput {
	return i.ToEdifactMessageFilterOutputWithContext(context.Background())
}

func (i EdifactMessageFilterArgs) ToEdifactMessageFilterOutputWithContext(ctx context.Context) EdifactMessageFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactMessageFilterOutput)
}

func (i EdifactMessageFilterArgs) ToEdifactMessageFilterPtrOutput() EdifactMessageFilterPtrOutput {
	return i.ToEdifactMessageFilterPtrOutputWithContext(context.Background())
}

func (i EdifactMessageFilterArgs) ToEdifactMessageFilterPtrOutputWithContext(ctx context.Context) EdifactMessageFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactMessageFilterOutput).ToEdifactMessageFilterPtrOutputWithContext(ctx)
}

// EdifactMessageFilterPtrInput is an input type that accepts EdifactMessageFilterArgs, EdifactMessageFilterPtr and EdifactMessageFilterPtrOutput values.
// You can construct a concrete instance of `EdifactMessageFilterPtrInput` via:
//
//          EdifactMessageFilterArgs{...}
//
//  or:
//
//          nil
type EdifactMessageFilterPtrInput interface {
	pulumi.Input

	ToEdifactMessageFilterPtrOutput() EdifactMessageFilterPtrOutput
	ToEdifactMessageFilterPtrOutputWithContext(context.Context) EdifactMessageFilterPtrOutput
}

type edifactMessageFilterPtrType EdifactMessageFilterArgs

func EdifactMessageFilterPtr(v *EdifactMessageFilterArgs) EdifactMessageFilterPtrInput {
	return (*edifactMessageFilterPtrType)(v)
}

func (*edifactMessageFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EdifactMessageFilter)(nil)).Elem()
}

func (i *edifactMessageFilterPtrType) ToEdifactMessageFilterPtrOutput() EdifactMessageFilterPtrOutput {
	return i.ToEdifactMessageFilterPtrOutputWithContext(context.Background())
}

func (i *edifactMessageFilterPtrType) ToEdifactMessageFilterPtrOutputWithContext(ctx context.Context) EdifactMessageFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactMessageFilterPtrOutput)
}

// The Edifact message filter for odata query.
type EdifactMessageFilterResponse struct {
	// The message filter type.
	MessageFilterType string `pulumi:"messageFilterType"`
}

// The Edifact message filter for odata query.
type EdifactMessageFilterResponseOutput struct{ *pulumi.OutputState }

func (EdifactMessageFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactMessageFilterResponse)(nil)).Elem()
}

func (o EdifactMessageFilterResponseOutput) ToEdifactMessageFilterResponseOutput() EdifactMessageFilterResponseOutput {
	return o
}

func (o EdifactMessageFilterResponseOutput) ToEdifactMessageFilterResponseOutputWithContext(ctx context.Context) EdifactMessageFilterResponseOutput {
	return o
}

func (o EdifactMessageFilterResponseOutput) ToEdifactMessageFilterResponsePtrOutput() EdifactMessageFilterResponsePtrOutput {
	return o.ToEdifactMessageFilterResponsePtrOutputWithContext(context.Background())
}

func (o EdifactMessageFilterResponseOutput) ToEdifactMessageFilterResponsePtrOutputWithContext(ctx context.Context) EdifactMessageFilterResponsePtrOutput {
	return o.ApplyT(func(v EdifactMessageFilterResponse) *EdifactMessageFilterResponse {
		return &v
	}).(EdifactMessageFilterResponsePtrOutput)
}

// The message filter type.
func (o EdifactMessageFilterResponseOutput) MessageFilterType() pulumi.StringOutput {
	return o.ApplyT(func(v EdifactMessageFilterResponse) string { return v.MessageFilterType }).(pulumi.StringOutput)
}

type EdifactMessageFilterResponsePtrOutput struct{ *pulumi.OutputState }

func (EdifactMessageFilterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdifactMessageFilterResponse)(nil)).Elem()
}

func (o EdifactMessageFilterResponsePtrOutput) ToEdifactMessageFilterResponsePtrOutput() EdifactMessageFilterResponsePtrOutput {
	return o
}

func (o EdifactMessageFilterResponsePtrOutput) ToEdifactMessageFilterResponsePtrOutputWithContext(ctx context.Context) EdifactMessageFilterResponsePtrOutput {
	return o
}

func (o EdifactMessageFilterResponsePtrOutput) Elem() EdifactMessageFilterResponseOutput {
	return o.ApplyT(func(v *EdifactMessageFilterResponse) EdifactMessageFilterResponse { return *v }).(EdifactMessageFilterResponseOutput)
}

// The message filter type.
func (o EdifactMessageFilterResponsePtrOutput) MessageFilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactMessageFilterResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MessageFilterType
	}).(pulumi.StringPtrOutput)
}

// The Edifact message identifier.
type EdifactMessageIdentifier struct {
	// The message id on which this envelope settings has to be applied.
	MessageId string `pulumi:"messageId"`
}

// EdifactMessageIdentifierInput is an input type that accepts EdifactMessageIdentifierArgs and EdifactMessageIdentifierOutput values.
// You can construct a concrete instance of `EdifactMessageIdentifierInput` via:
//
//          EdifactMessageIdentifierArgs{...}
type EdifactMessageIdentifierInput interface {
	pulumi.Input

	ToEdifactMessageIdentifierOutput() EdifactMessageIdentifierOutput
	ToEdifactMessageIdentifierOutputWithContext(context.Context) EdifactMessageIdentifierOutput
}

// The Edifact message identifier.
type EdifactMessageIdentifierArgs struct {
	// The message id on which this envelope settings has to be applied.
	MessageId pulumi.StringInput `pulumi:"messageId"`
}

func (EdifactMessageIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactMessageIdentifier)(nil)).Elem()
}

func (i EdifactMessageIdentifierArgs) ToEdifactMessageIdentifierOutput() EdifactMessageIdentifierOutput {
	return i.ToEdifactMessageIdentifierOutputWithContext(context.Background())
}

func (i EdifactMessageIdentifierArgs) ToEdifactMessageIdentifierOutputWithContext(ctx context.Context) EdifactMessageIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactMessageIdentifierOutput)
}

// EdifactMessageIdentifierArrayInput is an input type that accepts EdifactMessageIdentifierArray and EdifactMessageIdentifierArrayOutput values.
// You can construct a concrete instance of `EdifactMessageIdentifierArrayInput` via:
//
//          EdifactMessageIdentifierArray{ EdifactMessageIdentifierArgs{...} }
type EdifactMessageIdentifierArrayInput interface {
	pulumi.Input

	ToEdifactMessageIdentifierArrayOutput() EdifactMessageIdentifierArrayOutput
	ToEdifactMessageIdentifierArrayOutputWithContext(context.Context) EdifactMessageIdentifierArrayOutput
}

type EdifactMessageIdentifierArray []EdifactMessageIdentifierInput

func (EdifactMessageIdentifierArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EdifactMessageIdentifier)(nil)).Elem()
}

func (i EdifactMessageIdentifierArray) ToEdifactMessageIdentifierArrayOutput() EdifactMessageIdentifierArrayOutput {
	return i.ToEdifactMessageIdentifierArrayOutputWithContext(context.Background())
}

func (i EdifactMessageIdentifierArray) ToEdifactMessageIdentifierArrayOutputWithContext(ctx context.Context) EdifactMessageIdentifierArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactMessageIdentifierArrayOutput)
}

// The Edifact message identifier.
type EdifactMessageIdentifierResponse struct {
	// The message id on which this envelope settings has to be applied.
	MessageId string `pulumi:"messageId"`
}

// The Edifact message identifier.
type EdifactMessageIdentifierResponseOutput struct{ *pulumi.OutputState }

func (EdifactMessageIdentifierResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactMessageIdentifierResponse)(nil)).Elem()
}

func (o EdifactMessageIdentifierResponseOutput) ToEdifactMessageIdentifierResponseOutput() EdifactMessageIdentifierResponseOutput {
	return o
}

func (o EdifactMessageIdentifierResponseOutput) ToEdifactMessageIdentifierResponseOutputWithContext(ctx context.Context) EdifactMessageIdentifierResponseOutput {
	return o
}

// The message id on which this envelope settings has to be applied.
func (o EdifactMessageIdentifierResponseOutput) MessageId() pulumi.StringOutput {
	return o.ApplyT(func(v EdifactMessageIdentifierResponse) string { return v.MessageId }).(pulumi.StringOutput)
}

type EdifactMessageIdentifierResponseArrayOutput struct{ *pulumi.OutputState }

func (EdifactMessageIdentifierResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EdifactMessageIdentifierResponse)(nil)).Elem()
}

func (o EdifactMessageIdentifierResponseArrayOutput) ToEdifactMessageIdentifierResponseArrayOutput() EdifactMessageIdentifierResponseArrayOutput {
	return o
}

func (o EdifactMessageIdentifierResponseArrayOutput) ToEdifactMessageIdentifierResponseArrayOutputWithContext(ctx context.Context) EdifactMessageIdentifierResponseArrayOutput {
	return o
}

func (o EdifactMessageIdentifierResponseArrayOutput) Index(i pulumi.IntInput) EdifactMessageIdentifierResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EdifactMessageIdentifierResponse {
		return vs[0].([]EdifactMessageIdentifierResponse)[vs[1].(int)]
	}).(EdifactMessageIdentifierResponseOutput)
}

// The Edifact one way agreement.
type EdifactOneWayAgreement struct {
	// The EDIFACT protocol settings.
	ProtocolSettings EdifactProtocolSettings `pulumi:"protocolSettings"`
	// The receiver business identity
	ReceiverBusinessIdentity BusinessIdentity `pulumi:"receiverBusinessIdentity"`
	// The sender business identity
	SenderBusinessIdentity BusinessIdentity `pulumi:"senderBusinessIdentity"`
}

// EdifactOneWayAgreementInput is an input type that accepts EdifactOneWayAgreementArgs and EdifactOneWayAgreementOutput values.
// You can construct a concrete instance of `EdifactOneWayAgreementInput` via:
//
//          EdifactOneWayAgreementArgs{...}
type EdifactOneWayAgreementInput interface {
	pulumi.Input

	ToEdifactOneWayAgreementOutput() EdifactOneWayAgreementOutput
	ToEdifactOneWayAgreementOutputWithContext(context.Context) EdifactOneWayAgreementOutput
}

// The Edifact one way agreement.
type EdifactOneWayAgreementArgs struct {
	// The EDIFACT protocol settings.
	ProtocolSettings EdifactProtocolSettingsInput `pulumi:"protocolSettings"`
	// The receiver business identity
	ReceiverBusinessIdentity BusinessIdentityInput `pulumi:"receiverBusinessIdentity"`
	// The sender business identity
	SenderBusinessIdentity BusinessIdentityInput `pulumi:"senderBusinessIdentity"`
}

func (EdifactOneWayAgreementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactOneWayAgreement)(nil)).Elem()
}

func (i EdifactOneWayAgreementArgs) ToEdifactOneWayAgreementOutput() EdifactOneWayAgreementOutput {
	return i.ToEdifactOneWayAgreementOutputWithContext(context.Background())
}

func (i EdifactOneWayAgreementArgs) ToEdifactOneWayAgreementOutputWithContext(ctx context.Context) EdifactOneWayAgreementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactOneWayAgreementOutput)
}

func (i EdifactOneWayAgreementArgs) ToEdifactOneWayAgreementPtrOutput() EdifactOneWayAgreementPtrOutput {
	return i.ToEdifactOneWayAgreementPtrOutputWithContext(context.Background())
}

func (i EdifactOneWayAgreementArgs) ToEdifactOneWayAgreementPtrOutputWithContext(ctx context.Context) EdifactOneWayAgreementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactOneWayAgreementOutput).ToEdifactOneWayAgreementPtrOutputWithContext(ctx)
}

// EdifactOneWayAgreementPtrInput is an input type that accepts EdifactOneWayAgreementArgs, EdifactOneWayAgreementPtr and EdifactOneWayAgreementPtrOutput values.
// You can construct a concrete instance of `EdifactOneWayAgreementPtrInput` via:
//
//          EdifactOneWayAgreementArgs{...}
//
//  or:
//
//          nil
type EdifactOneWayAgreementPtrInput interface {
	pulumi.Input

	ToEdifactOneWayAgreementPtrOutput() EdifactOneWayAgreementPtrOutput
	ToEdifactOneWayAgreementPtrOutputWithContext(context.Context) EdifactOneWayAgreementPtrOutput
}

type edifactOneWayAgreementPtrType EdifactOneWayAgreementArgs

func EdifactOneWayAgreementPtr(v *EdifactOneWayAgreementArgs) EdifactOneWayAgreementPtrInput {
	return (*edifactOneWayAgreementPtrType)(v)
}

func (*edifactOneWayAgreementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EdifactOneWayAgreement)(nil)).Elem()
}

func (i *edifactOneWayAgreementPtrType) ToEdifactOneWayAgreementPtrOutput() EdifactOneWayAgreementPtrOutput {
	return i.ToEdifactOneWayAgreementPtrOutputWithContext(context.Background())
}

func (i *edifactOneWayAgreementPtrType) ToEdifactOneWayAgreementPtrOutputWithContext(ctx context.Context) EdifactOneWayAgreementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactOneWayAgreementPtrOutput)
}

// The Edifact one way agreement.
type EdifactOneWayAgreementResponse struct {
	// The EDIFACT protocol settings.
	ProtocolSettings EdifactProtocolSettingsResponse `pulumi:"protocolSettings"`
	// The receiver business identity
	ReceiverBusinessIdentity BusinessIdentityResponse `pulumi:"receiverBusinessIdentity"`
	// The sender business identity
	SenderBusinessIdentity BusinessIdentityResponse `pulumi:"senderBusinessIdentity"`
}

// The Edifact one way agreement.
type EdifactOneWayAgreementResponseOutput struct{ *pulumi.OutputState }

func (EdifactOneWayAgreementResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactOneWayAgreementResponse)(nil)).Elem()
}

func (o EdifactOneWayAgreementResponseOutput) ToEdifactOneWayAgreementResponseOutput() EdifactOneWayAgreementResponseOutput {
	return o
}

func (o EdifactOneWayAgreementResponseOutput) ToEdifactOneWayAgreementResponseOutputWithContext(ctx context.Context) EdifactOneWayAgreementResponseOutput {
	return o
}

func (o EdifactOneWayAgreementResponseOutput) ToEdifactOneWayAgreementResponsePtrOutput() EdifactOneWayAgreementResponsePtrOutput {
	return o.ToEdifactOneWayAgreementResponsePtrOutputWithContext(context.Background())
}

func (o EdifactOneWayAgreementResponseOutput) ToEdifactOneWayAgreementResponsePtrOutputWithContext(ctx context.Context) EdifactOneWayAgreementResponsePtrOutput {
	return o.ApplyT(func(v EdifactOneWayAgreementResponse) *EdifactOneWayAgreementResponse {
		return &v
	}).(EdifactOneWayAgreementResponsePtrOutput)
}

// The EDIFACT protocol settings.
func (o EdifactOneWayAgreementResponseOutput) ProtocolSettings() EdifactProtocolSettingsResponseOutput {
	return o.ApplyT(func(v EdifactOneWayAgreementResponse) EdifactProtocolSettingsResponse { return v.ProtocolSettings }).(EdifactProtocolSettingsResponseOutput)
}

// The receiver business identity
func (o EdifactOneWayAgreementResponseOutput) ReceiverBusinessIdentity() BusinessIdentityResponseOutput {
	return o.ApplyT(func(v EdifactOneWayAgreementResponse) BusinessIdentityResponse { return v.ReceiverBusinessIdentity }).(BusinessIdentityResponseOutput)
}

// The sender business identity
func (o EdifactOneWayAgreementResponseOutput) SenderBusinessIdentity() BusinessIdentityResponseOutput {
	return o.ApplyT(func(v EdifactOneWayAgreementResponse) BusinessIdentityResponse { return v.SenderBusinessIdentity }).(BusinessIdentityResponseOutput)
}

type EdifactOneWayAgreementResponsePtrOutput struct{ *pulumi.OutputState }

func (EdifactOneWayAgreementResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdifactOneWayAgreementResponse)(nil)).Elem()
}

func (o EdifactOneWayAgreementResponsePtrOutput) ToEdifactOneWayAgreementResponsePtrOutput() EdifactOneWayAgreementResponsePtrOutput {
	return o
}

func (o EdifactOneWayAgreementResponsePtrOutput) ToEdifactOneWayAgreementResponsePtrOutputWithContext(ctx context.Context) EdifactOneWayAgreementResponsePtrOutput {
	return o
}

func (o EdifactOneWayAgreementResponsePtrOutput) Elem() EdifactOneWayAgreementResponseOutput {
	return o.ApplyT(func(v *EdifactOneWayAgreementResponse) EdifactOneWayAgreementResponse { return *v }).(EdifactOneWayAgreementResponseOutput)
}

// The EDIFACT protocol settings.
func (o EdifactOneWayAgreementResponsePtrOutput) ProtocolSettings() EdifactProtocolSettingsResponsePtrOutput {
	return o.ApplyT(func(v *EdifactOneWayAgreementResponse) *EdifactProtocolSettingsResponse {
		if v == nil {
			return nil
		}
		return &v.ProtocolSettings
	}).(EdifactProtocolSettingsResponsePtrOutput)
}

// The receiver business identity
func (o EdifactOneWayAgreementResponsePtrOutput) ReceiverBusinessIdentity() BusinessIdentityResponsePtrOutput {
	return o.ApplyT(func(v *EdifactOneWayAgreementResponse) *BusinessIdentityResponse {
		if v == nil {
			return nil
		}
		return &v.ReceiverBusinessIdentity
	}).(BusinessIdentityResponsePtrOutput)
}

// The sender business identity
func (o EdifactOneWayAgreementResponsePtrOutput) SenderBusinessIdentity() BusinessIdentityResponsePtrOutput {
	return o.ApplyT(func(v *EdifactOneWayAgreementResponse) *BusinessIdentityResponse {
		if v == nil {
			return nil
		}
		return &v.SenderBusinessIdentity
	}).(BusinessIdentityResponsePtrOutput)
}

// The Edifact agreement protocol settings.
type EdifactProcessingSettings struct {
	// The value indicating whether to create empty xml tags for trailing separators.
	CreateEmptyXmlTagsForTrailingSeparators bool `pulumi:"createEmptyXmlTagsForTrailingSeparators"`
	// The value indicating whether to mask security information.
	MaskSecurityInfo bool `pulumi:"maskSecurityInfo"`
	// The value indicating whether to preserve interchange.
	PreserveInterchange bool `pulumi:"preserveInterchange"`
	// The value indicating whether to suspend interchange on error.
	SuspendInterchangeOnError bool `pulumi:"suspendInterchangeOnError"`
	// The value indicating whether to use dot as decimal separator.
	UseDotAsDecimalSeparator bool `pulumi:"useDotAsDecimalSeparator"`
}

// EdifactProcessingSettingsInput is an input type that accepts EdifactProcessingSettingsArgs and EdifactProcessingSettingsOutput values.
// You can construct a concrete instance of `EdifactProcessingSettingsInput` via:
//
//          EdifactProcessingSettingsArgs{...}
type EdifactProcessingSettingsInput interface {
	pulumi.Input

	ToEdifactProcessingSettingsOutput() EdifactProcessingSettingsOutput
	ToEdifactProcessingSettingsOutputWithContext(context.Context) EdifactProcessingSettingsOutput
}

// The Edifact agreement protocol settings.
type EdifactProcessingSettingsArgs struct {
	// The value indicating whether to create empty xml tags for trailing separators.
	CreateEmptyXmlTagsForTrailingSeparators pulumi.BoolInput `pulumi:"createEmptyXmlTagsForTrailingSeparators"`
	// The value indicating whether to mask security information.
	MaskSecurityInfo pulumi.BoolInput `pulumi:"maskSecurityInfo"`
	// The value indicating whether to preserve interchange.
	PreserveInterchange pulumi.BoolInput `pulumi:"preserveInterchange"`
	// The value indicating whether to suspend interchange on error.
	SuspendInterchangeOnError pulumi.BoolInput `pulumi:"suspendInterchangeOnError"`
	// The value indicating whether to use dot as decimal separator.
	UseDotAsDecimalSeparator pulumi.BoolInput `pulumi:"useDotAsDecimalSeparator"`
}

func (EdifactProcessingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactProcessingSettings)(nil)).Elem()
}

func (i EdifactProcessingSettingsArgs) ToEdifactProcessingSettingsOutput() EdifactProcessingSettingsOutput {
	return i.ToEdifactProcessingSettingsOutputWithContext(context.Background())
}

func (i EdifactProcessingSettingsArgs) ToEdifactProcessingSettingsOutputWithContext(ctx context.Context) EdifactProcessingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactProcessingSettingsOutput)
}

func (i EdifactProcessingSettingsArgs) ToEdifactProcessingSettingsPtrOutput() EdifactProcessingSettingsPtrOutput {
	return i.ToEdifactProcessingSettingsPtrOutputWithContext(context.Background())
}

func (i EdifactProcessingSettingsArgs) ToEdifactProcessingSettingsPtrOutputWithContext(ctx context.Context) EdifactProcessingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactProcessingSettingsOutput).ToEdifactProcessingSettingsPtrOutputWithContext(ctx)
}

// EdifactProcessingSettingsPtrInput is an input type that accepts EdifactProcessingSettingsArgs, EdifactProcessingSettingsPtr and EdifactProcessingSettingsPtrOutput values.
// You can construct a concrete instance of `EdifactProcessingSettingsPtrInput` via:
//
//          EdifactProcessingSettingsArgs{...}
//
//  or:
//
//          nil
type EdifactProcessingSettingsPtrInput interface {
	pulumi.Input

	ToEdifactProcessingSettingsPtrOutput() EdifactProcessingSettingsPtrOutput
	ToEdifactProcessingSettingsPtrOutputWithContext(context.Context) EdifactProcessingSettingsPtrOutput
}

type edifactProcessingSettingsPtrType EdifactProcessingSettingsArgs

func EdifactProcessingSettingsPtr(v *EdifactProcessingSettingsArgs) EdifactProcessingSettingsPtrInput {
	return (*edifactProcessingSettingsPtrType)(v)
}

func (*edifactProcessingSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EdifactProcessingSettings)(nil)).Elem()
}

func (i *edifactProcessingSettingsPtrType) ToEdifactProcessingSettingsPtrOutput() EdifactProcessingSettingsPtrOutput {
	return i.ToEdifactProcessingSettingsPtrOutputWithContext(context.Background())
}

func (i *edifactProcessingSettingsPtrType) ToEdifactProcessingSettingsPtrOutputWithContext(ctx context.Context) EdifactProcessingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactProcessingSettingsPtrOutput)
}

// The Edifact agreement protocol settings.
type EdifactProcessingSettingsResponse struct {
	// The value indicating whether to create empty xml tags for trailing separators.
	CreateEmptyXmlTagsForTrailingSeparators bool `pulumi:"createEmptyXmlTagsForTrailingSeparators"`
	// The value indicating whether to mask security information.
	MaskSecurityInfo bool `pulumi:"maskSecurityInfo"`
	// The value indicating whether to preserve interchange.
	PreserveInterchange bool `pulumi:"preserveInterchange"`
	// The value indicating whether to suspend interchange on error.
	SuspendInterchangeOnError bool `pulumi:"suspendInterchangeOnError"`
	// The value indicating whether to use dot as decimal separator.
	UseDotAsDecimalSeparator bool `pulumi:"useDotAsDecimalSeparator"`
}

// The Edifact agreement protocol settings.
type EdifactProcessingSettingsResponseOutput struct{ *pulumi.OutputState }

func (EdifactProcessingSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactProcessingSettingsResponse)(nil)).Elem()
}

func (o EdifactProcessingSettingsResponseOutput) ToEdifactProcessingSettingsResponseOutput() EdifactProcessingSettingsResponseOutput {
	return o
}

func (o EdifactProcessingSettingsResponseOutput) ToEdifactProcessingSettingsResponseOutputWithContext(ctx context.Context) EdifactProcessingSettingsResponseOutput {
	return o
}

func (o EdifactProcessingSettingsResponseOutput) ToEdifactProcessingSettingsResponsePtrOutput() EdifactProcessingSettingsResponsePtrOutput {
	return o.ToEdifactProcessingSettingsResponsePtrOutputWithContext(context.Background())
}

func (o EdifactProcessingSettingsResponseOutput) ToEdifactProcessingSettingsResponsePtrOutputWithContext(ctx context.Context) EdifactProcessingSettingsResponsePtrOutput {
	return o.ApplyT(func(v EdifactProcessingSettingsResponse) *EdifactProcessingSettingsResponse {
		return &v
	}).(EdifactProcessingSettingsResponsePtrOutput)
}

// The value indicating whether to create empty xml tags for trailing separators.
func (o EdifactProcessingSettingsResponseOutput) CreateEmptyXmlTagsForTrailingSeparators() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactProcessingSettingsResponse) bool { return v.CreateEmptyXmlTagsForTrailingSeparators }).(pulumi.BoolOutput)
}

// The value indicating whether to mask security information.
func (o EdifactProcessingSettingsResponseOutput) MaskSecurityInfo() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactProcessingSettingsResponse) bool { return v.MaskSecurityInfo }).(pulumi.BoolOutput)
}

// The value indicating whether to preserve interchange.
func (o EdifactProcessingSettingsResponseOutput) PreserveInterchange() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactProcessingSettingsResponse) bool { return v.PreserveInterchange }).(pulumi.BoolOutput)
}

// The value indicating whether to suspend interchange on error.
func (o EdifactProcessingSettingsResponseOutput) SuspendInterchangeOnError() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactProcessingSettingsResponse) bool { return v.SuspendInterchangeOnError }).(pulumi.BoolOutput)
}

// The value indicating whether to use dot as decimal separator.
func (o EdifactProcessingSettingsResponseOutput) UseDotAsDecimalSeparator() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactProcessingSettingsResponse) bool { return v.UseDotAsDecimalSeparator }).(pulumi.BoolOutput)
}

type EdifactProcessingSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (EdifactProcessingSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdifactProcessingSettingsResponse)(nil)).Elem()
}

func (o EdifactProcessingSettingsResponsePtrOutput) ToEdifactProcessingSettingsResponsePtrOutput() EdifactProcessingSettingsResponsePtrOutput {
	return o
}

func (o EdifactProcessingSettingsResponsePtrOutput) ToEdifactProcessingSettingsResponsePtrOutputWithContext(ctx context.Context) EdifactProcessingSettingsResponsePtrOutput {
	return o
}

func (o EdifactProcessingSettingsResponsePtrOutput) Elem() EdifactProcessingSettingsResponseOutput {
	return o.ApplyT(func(v *EdifactProcessingSettingsResponse) EdifactProcessingSettingsResponse { return *v }).(EdifactProcessingSettingsResponseOutput)
}

// The value indicating whether to create empty xml tags for trailing separators.
func (o EdifactProcessingSettingsResponsePtrOutput) CreateEmptyXmlTagsForTrailingSeparators() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactProcessingSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.CreateEmptyXmlTagsForTrailingSeparators
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to mask security information.
func (o EdifactProcessingSettingsResponsePtrOutput) MaskSecurityInfo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactProcessingSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.MaskSecurityInfo
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to preserve interchange.
func (o EdifactProcessingSettingsResponsePtrOutput) PreserveInterchange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactProcessingSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.PreserveInterchange
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to suspend interchange on error.
func (o EdifactProcessingSettingsResponsePtrOutput) SuspendInterchangeOnError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactProcessingSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.SuspendInterchangeOnError
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to use dot as decimal separator.
func (o EdifactProcessingSettingsResponsePtrOutput) UseDotAsDecimalSeparator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactProcessingSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.UseDotAsDecimalSeparator
	}).(pulumi.BoolPtrOutput)
}

// The Edifact agreement protocol settings.
type EdifactProtocolSettings struct {
	// The EDIFACT acknowledgement settings.
	AcknowledgementSettings EdifactAcknowledgementSettings `pulumi:"acknowledgementSettings"`
	// The EDIFACT delimiter override settings.
	EdifactDelimiterOverrides []EdifactDelimiterOverride `pulumi:"edifactDelimiterOverrides"`
	// The EDIFACT envelope override settings.
	EnvelopeOverrides []EdifactEnvelopeOverride `pulumi:"envelopeOverrides"`
	// The EDIFACT envelope settings.
	EnvelopeSettings EdifactEnvelopeSettings `pulumi:"envelopeSettings"`
	// The EDIFACT framing settings.
	FramingSettings EdifactFramingSettings `pulumi:"framingSettings"`
	// The EDIFACT message filter.
	MessageFilter EdifactMessageFilter `pulumi:"messageFilter"`
	// The EDIFACT message filter list.
	MessageFilterList []EdifactMessageIdentifier `pulumi:"messageFilterList"`
	// The EDIFACT processing Settings.
	ProcessingSettings EdifactProcessingSettings `pulumi:"processingSettings"`
	// The EDIFACT schema references.
	SchemaReferences []EdifactSchemaReference `pulumi:"schemaReferences"`
	// The EDIFACT validation override settings.
	ValidationOverrides []EdifactValidationOverride `pulumi:"validationOverrides"`
	// The EDIFACT validation settings.
	ValidationSettings EdifactValidationSettings `pulumi:"validationSettings"`
}

// EdifactProtocolSettingsInput is an input type that accepts EdifactProtocolSettingsArgs and EdifactProtocolSettingsOutput values.
// You can construct a concrete instance of `EdifactProtocolSettingsInput` via:
//
//          EdifactProtocolSettingsArgs{...}
type EdifactProtocolSettingsInput interface {
	pulumi.Input

	ToEdifactProtocolSettingsOutput() EdifactProtocolSettingsOutput
	ToEdifactProtocolSettingsOutputWithContext(context.Context) EdifactProtocolSettingsOutput
}

// The Edifact agreement protocol settings.
type EdifactProtocolSettingsArgs struct {
	// The EDIFACT acknowledgement settings.
	AcknowledgementSettings EdifactAcknowledgementSettingsInput `pulumi:"acknowledgementSettings"`
	// The EDIFACT delimiter override settings.
	EdifactDelimiterOverrides EdifactDelimiterOverrideArrayInput `pulumi:"edifactDelimiterOverrides"`
	// The EDIFACT envelope override settings.
	EnvelopeOverrides EdifactEnvelopeOverrideArrayInput `pulumi:"envelopeOverrides"`
	// The EDIFACT envelope settings.
	EnvelopeSettings EdifactEnvelopeSettingsInput `pulumi:"envelopeSettings"`
	// The EDIFACT framing settings.
	FramingSettings EdifactFramingSettingsInput `pulumi:"framingSettings"`
	// The EDIFACT message filter.
	MessageFilter EdifactMessageFilterInput `pulumi:"messageFilter"`
	// The EDIFACT message filter list.
	MessageFilterList EdifactMessageIdentifierArrayInput `pulumi:"messageFilterList"`
	// The EDIFACT processing Settings.
	ProcessingSettings EdifactProcessingSettingsInput `pulumi:"processingSettings"`
	// The EDIFACT schema references.
	SchemaReferences EdifactSchemaReferenceArrayInput `pulumi:"schemaReferences"`
	// The EDIFACT validation override settings.
	ValidationOverrides EdifactValidationOverrideArrayInput `pulumi:"validationOverrides"`
	// The EDIFACT validation settings.
	ValidationSettings EdifactValidationSettingsInput `pulumi:"validationSettings"`
}

func (EdifactProtocolSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactProtocolSettings)(nil)).Elem()
}

func (i EdifactProtocolSettingsArgs) ToEdifactProtocolSettingsOutput() EdifactProtocolSettingsOutput {
	return i.ToEdifactProtocolSettingsOutputWithContext(context.Background())
}

func (i EdifactProtocolSettingsArgs) ToEdifactProtocolSettingsOutputWithContext(ctx context.Context) EdifactProtocolSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactProtocolSettingsOutput)
}

func (i EdifactProtocolSettingsArgs) ToEdifactProtocolSettingsPtrOutput() EdifactProtocolSettingsPtrOutput {
	return i.ToEdifactProtocolSettingsPtrOutputWithContext(context.Background())
}

func (i EdifactProtocolSettingsArgs) ToEdifactProtocolSettingsPtrOutputWithContext(ctx context.Context) EdifactProtocolSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactProtocolSettingsOutput).ToEdifactProtocolSettingsPtrOutputWithContext(ctx)
}

// EdifactProtocolSettingsPtrInput is an input type that accepts EdifactProtocolSettingsArgs, EdifactProtocolSettingsPtr and EdifactProtocolSettingsPtrOutput values.
// You can construct a concrete instance of `EdifactProtocolSettingsPtrInput` via:
//
//          EdifactProtocolSettingsArgs{...}
//
//  or:
//
//          nil
type EdifactProtocolSettingsPtrInput interface {
	pulumi.Input

	ToEdifactProtocolSettingsPtrOutput() EdifactProtocolSettingsPtrOutput
	ToEdifactProtocolSettingsPtrOutputWithContext(context.Context) EdifactProtocolSettingsPtrOutput
}

type edifactProtocolSettingsPtrType EdifactProtocolSettingsArgs

func EdifactProtocolSettingsPtr(v *EdifactProtocolSettingsArgs) EdifactProtocolSettingsPtrInput {
	return (*edifactProtocolSettingsPtrType)(v)
}

func (*edifactProtocolSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EdifactProtocolSettings)(nil)).Elem()
}

func (i *edifactProtocolSettingsPtrType) ToEdifactProtocolSettingsPtrOutput() EdifactProtocolSettingsPtrOutput {
	return i.ToEdifactProtocolSettingsPtrOutputWithContext(context.Background())
}

func (i *edifactProtocolSettingsPtrType) ToEdifactProtocolSettingsPtrOutputWithContext(ctx context.Context) EdifactProtocolSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactProtocolSettingsPtrOutput)
}

// The Edifact agreement protocol settings.
type EdifactProtocolSettingsResponse struct {
	// The EDIFACT acknowledgement settings.
	AcknowledgementSettings EdifactAcknowledgementSettingsResponse `pulumi:"acknowledgementSettings"`
	// The EDIFACT delimiter override settings.
	EdifactDelimiterOverrides []EdifactDelimiterOverrideResponse `pulumi:"edifactDelimiterOverrides"`
	// The EDIFACT envelope override settings.
	EnvelopeOverrides []EdifactEnvelopeOverrideResponse `pulumi:"envelopeOverrides"`
	// The EDIFACT envelope settings.
	EnvelopeSettings EdifactEnvelopeSettingsResponse `pulumi:"envelopeSettings"`
	// The EDIFACT framing settings.
	FramingSettings EdifactFramingSettingsResponse `pulumi:"framingSettings"`
	// The EDIFACT message filter.
	MessageFilter EdifactMessageFilterResponse `pulumi:"messageFilter"`
	// The EDIFACT message filter list.
	MessageFilterList []EdifactMessageIdentifierResponse `pulumi:"messageFilterList"`
	// The EDIFACT processing Settings.
	ProcessingSettings EdifactProcessingSettingsResponse `pulumi:"processingSettings"`
	// The EDIFACT schema references.
	SchemaReferences []EdifactSchemaReferenceResponse `pulumi:"schemaReferences"`
	// The EDIFACT validation override settings.
	ValidationOverrides []EdifactValidationOverrideResponse `pulumi:"validationOverrides"`
	// The EDIFACT validation settings.
	ValidationSettings EdifactValidationSettingsResponse `pulumi:"validationSettings"`
}

// The Edifact agreement protocol settings.
type EdifactProtocolSettingsResponseOutput struct{ *pulumi.OutputState }

func (EdifactProtocolSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactProtocolSettingsResponse)(nil)).Elem()
}

func (o EdifactProtocolSettingsResponseOutput) ToEdifactProtocolSettingsResponseOutput() EdifactProtocolSettingsResponseOutput {
	return o
}

func (o EdifactProtocolSettingsResponseOutput) ToEdifactProtocolSettingsResponseOutputWithContext(ctx context.Context) EdifactProtocolSettingsResponseOutput {
	return o
}

func (o EdifactProtocolSettingsResponseOutput) ToEdifactProtocolSettingsResponsePtrOutput() EdifactProtocolSettingsResponsePtrOutput {
	return o.ToEdifactProtocolSettingsResponsePtrOutputWithContext(context.Background())
}

func (o EdifactProtocolSettingsResponseOutput) ToEdifactProtocolSettingsResponsePtrOutputWithContext(ctx context.Context) EdifactProtocolSettingsResponsePtrOutput {
	return o.ApplyT(func(v EdifactProtocolSettingsResponse) *EdifactProtocolSettingsResponse {
		return &v
	}).(EdifactProtocolSettingsResponsePtrOutput)
}

// The EDIFACT acknowledgement settings.
func (o EdifactProtocolSettingsResponseOutput) AcknowledgementSettings() EdifactAcknowledgementSettingsResponseOutput {
	return o.ApplyT(func(v EdifactProtocolSettingsResponse) EdifactAcknowledgementSettingsResponse {
		return v.AcknowledgementSettings
	}).(EdifactAcknowledgementSettingsResponseOutput)
}

// The EDIFACT delimiter override settings.
func (o EdifactProtocolSettingsResponseOutput) EdifactDelimiterOverrides() EdifactDelimiterOverrideResponseArrayOutput {
	return o.ApplyT(func(v EdifactProtocolSettingsResponse) []EdifactDelimiterOverrideResponse {
		return v.EdifactDelimiterOverrides
	}).(EdifactDelimiterOverrideResponseArrayOutput)
}

// The EDIFACT envelope override settings.
func (o EdifactProtocolSettingsResponseOutput) EnvelopeOverrides() EdifactEnvelopeOverrideResponseArrayOutput {
	return o.ApplyT(func(v EdifactProtocolSettingsResponse) []EdifactEnvelopeOverrideResponse { return v.EnvelopeOverrides }).(EdifactEnvelopeOverrideResponseArrayOutput)
}

// The EDIFACT envelope settings.
func (o EdifactProtocolSettingsResponseOutput) EnvelopeSettings() EdifactEnvelopeSettingsResponseOutput {
	return o.ApplyT(func(v EdifactProtocolSettingsResponse) EdifactEnvelopeSettingsResponse { return v.EnvelopeSettings }).(EdifactEnvelopeSettingsResponseOutput)
}

// The EDIFACT framing settings.
func (o EdifactProtocolSettingsResponseOutput) FramingSettings() EdifactFramingSettingsResponseOutput {
	return o.ApplyT(func(v EdifactProtocolSettingsResponse) EdifactFramingSettingsResponse { return v.FramingSettings }).(EdifactFramingSettingsResponseOutput)
}

// The EDIFACT message filter.
func (o EdifactProtocolSettingsResponseOutput) MessageFilter() EdifactMessageFilterResponseOutput {
	return o.ApplyT(func(v EdifactProtocolSettingsResponse) EdifactMessageFilterResponse { return v.MessageFilter }).(EdifactMessageFilterResponseOutput)
}

// The EDIFACT message filter list.
func (o EdifactProtocolSettingsResponseOutput) MessageFilterList() EdifactMessageIdentifierResponseArrayOutput {
	return o.ApplyT(func(v EdifactProtocolSettingsResponse) []EdifactMessageIdentifierResponse { return v.MessageFilterList }).(EdifactMessageIdentifierResponseArrayOutput)
}

// The EDIFACT processing Settings.
func (o EdifactProtocolSettingsResponseOutput) ProcessingSettings() EdifactProcessingSettingsResponseOutput {
	return o.ApplyT(func(v EdifactProtocolSettingsResponse) EdifactProcessingSettingsResponse { return v.ProcessingSettings }).(EdifactProcessingSettingsResponseOutput)
}

// The EDIFACT schema references.
func (o EdifactProtocolSettingsResponseOutput) SchemaReferences() EdifactSchemaReferenceResponseArrayOutput {
	return o.ApplyT(func(v EdifactProtocolSettingsResponse) []EdifactSchemaReferenceResponse { return v.SchemaReferences }).(EdifactSchemaReferenceResponseArrayOutput)
}

// The EDIFACT validation override settings.
func (o EdifactProtocolSettingsResponseOutput) ValidationOverrides() EdifactValidationOverrideResponseArrayOutput {
	return o.ApplyT(func(v EdifactProtocolSettingsResponse) []EdifactValidationOverrideResponse {
		return v.ValidationOverrides
	}).(EdifactValidationOverrideResponseArrayOutput)
}

// The EDIFACT validation settings.
func (o EdifactProtocolSettingsResponseOutput) ValidationSettings() EdifactValidationSettingsResponseOutput {
	return o.ApplyT(func(v EdifactProtocolSettingsResponse) EdifactValidationSettingsResponse { return v.ValidationSettings }).(EdifactValidationSettingsResponseOutput)
}

type EdifactProtocolSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (EdifactProtocolSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdifactProtocolSettingsResponse)(nil)).Elem()
}

func (o EdifactProtocolSettingsResponsePtrOutput) ToEdifactProtocolSettingsResponsePtrOutput() EdifactProtocolSettingsResponsePtrOutput {
	return o
}

func (o EdifactProtocolSettingsResponsePtrOutput) ToEdifactProtocolSettingsResponsePtrOutputWithContext(ctx context.Context) EdifactProtocolSettingsResponsePtrOutput {
	return o
}

func (o EdifactProtocolSettingsResponsePtrOutput) Elem() EdifactProtocolSettingsResponseOutput {
	return o.ApplyT(func(v *EdifactProtocolSettingsResponse) EdifactProtocolSettingsResponse { return *v }).(EdifactProtocolSettingsResponseOutput)
}

// The EDIFACT acknowledgement settings.
func (o EdifactProtocolSettingsResponsePtrOutput) AcknowledgementSettings() EdifactAcknowledgementSettingsResponsePtrOutput {
	return o.ApplyT(func(v *EdifactProtocolSettingsResponse) *EdifactAcknowledgementSettingsResponse {
		if v == nil {
			return nil
		}
		return &v.AcknowledgementSettings
	}).(EdifactAcknowledgementSettingsResponsePtrOutput)
}

// The EDIFACT delimiter override settings.
func (o EdifactProtocolSettingsResponsePtrOutput) EdifactDelimiterOverrides() EdifactDelimiterOverrideResponseArrayOutput {
	return o.ApplyT(func(v *EdifactProtocolSettingsResponse) []EdifactDelimiterOverrideResponse {
		if v == nil {
			return nil
		}
		return v.EdifactDelimiterOverrides
	}).(EdifactDelimiterOverrideResponseArrayOutput)
}

// The EDIFACT envelope override settings.
func (o EdifactProtocolSettingsResponsePtrOutput) EnvelopeOverrides() EdifactEnvelopeOverrideResponseArrayOutput {
	return o.ApplyT(func(v *EdifactProtocolSettingsResponse) []EdifactEnvelopeOverrideResponse {
		if v == nil {
			return nil
		}
		return v.EnvelopeOverrides
	}).(EdifactEnvelopeOverrideResponseArrayOutput)
}

// The EDIFACT envelope settings.
func (o EdifactProtocolSettingsResponsePtrOutput) EnvelopeSettings() EdifactEnvelopeSettingsResponsePtrOutput {
	return o.ApplyT(func(v *EdifactProtocolSettingsResponse) *EdifactEnvelopeSettingsResponse {
		if v == nil {
			return nil
		}
		return &v.EnvelopeSettings
	}).(EdifactEnvelopeSettingsResponsePtrOutput)
}

// The EDIFACT framing settings.
func (o EdifactProtocolSettingsResponsePtrOutput) FramingSettings() EdifactFramingSettingsResponsePtrOutput {
	return o.ApplyT(func(v *EdifactProtocolSettingsResponse) *EdifactFramingSettingsResponse {
		if v == nil {
			return nil
		}
		return &v.FramingSettings
	}).(EdifactFramingSettingsResponsePtrOutput)
}

// The EDIFACT message filter.
func (o EdifactProtocolSettingsResponsePtrOutput) MessageFilter() EdifactMessageFilterResponsePtrOutput {
	return o.ApplyT(func(v *EdifactProtocolSettingsResponse) *EdifactMessageFilterResponse {
		if v == nil {
			return nil
		}
		return &v.MessageFilter
	}).(EdifactMessageFilterResponsePtrOutput)
}

// The EDIFACT message filter list.
func (o EdifactProtocolSettingsResponsePtrOutput) MessageFilterList() EdifactMessageIdentifierResponseArrayOutput {
	return o.ApplyT(func(v *EdifactProtocolSettingsResponse) []EdifactMessageIdentifierResponse {
		if v == nil {
			return nil
		}
		return v.MessageFilterList
	}).(EdifactMessageIdentifierResponseArrayOutput)
}

// The EDIFACT processing Settings.
func (o EdifactProtocolSettingsResponsePtrOutput) ProcessingSettings() EdifactProcessingSettingsResponsePtrOutput {
	return o.ApplyT(func(v *EdifactProtocolSettingsResponse) *EdifactProcessingSettingsResponse {
		if v == nil {
			return nil
		}
		return &v.ProcessingSettings
	}).(EdifactProcessingSettingsResponsePtrOutput)
}

// The EDIFACT schema references.
func (o EdifactProtocolSettingsResponsePtrOutput) SchemaReferences() EdifactSchemaReferenceResponseArrayOutput {
	return o.ApplyT(func(v *EdifactProtocolSettingsResponse) []EdifactSchemaReferenceResponse {
		if v == nil {
			return nil
		}
		return v.SchemaReferences
	}).(EdifactSchemaReferenceResponseArrayOutput)
}

// The EDIFACT validation override settings.
func (o EdifactProtocolSettingsResponsePtrOutput) ValidationOverrides() EdifactValidationOverrideResponseArrayOutput {
	return o.ApplyT(func(v *EdifactProtocolSettingsResponse) []EdifactValidationOverrideResponse {
		if v == nil {
			return nil
		}
		return v.ValidationOverrides
	}).(EdifactValidationOverrideResponseArrayOutput)
}

// The EDIFACT validation settings.
func (o EdifactProtocolSettingsResponsePtrOutput) ValidationSettings() EdifactValidationSettingsResponsePtrOutput {
	return o.ApplyT(func(v *EdifactProtocolSettingsResponse) *EdifactValidationSettingsResponse {
		if v == nil {
			return nil
		}
		return &v.ValidationSettings
	}).(EdifactValidationSettingsResponsePtrOutput)
}

// The Edifact schema reference.
type EdifactSchemaReference struct {
	// The association assigned code.
	AssociationAssignedCode *string `pulumi:"associationAssignedCode"`
	// The message id.
	MessageId string `pulumi:"messageId"`
	// The message release version.
	MessageRelease string `pulumi:"messageRelease"`
	// The message version.
	MessageVersion string `pulumi:"messageVersion"`
	// The schema name.
	SchemaName string `pulumi:"schemaName"`
	// The sender application id.
	SenderApplicationId *string `pulumi:"senderApplicationId"`
	// The sender application qualifier.
	SenderApplicationQualifier *string `pulumi:"senderApplicationQualifier"`
}

// EdifactSchemaReferenceInput is an input type that accepts EdifactSchemaReferenceArgs and EdifactSchemaReferenceOutput values.
// You can construct a concrete instance of `EdifactSchemaReferenceInput` via:
//
//          EdifactSchemaReferenceArgs{...}
type EdifactSchemaReferenceInput interface {
	pulumi.Input

	ToEdifactSchemaReferenceOutput() EdifactSchemaReferenceOutput
	ToEdifactSchemaReferenceOutputWithContext(context.Context) EdifactSchemaReferenceOutput
}

// The Edifact schema reference.
type EdifactSchemaReferenceArgs struct {
	// The association assigned code.
	AssociationAssignedCode pulumi.StringPtrInput `pulumi:"associationAssignedCode"`
	// The message id.
	MessageId pulumi.StringInput `pulumi:"messageId"`
	// The message release version.
	MessageRelease pulumi.StringInput `pulumi:"messageRelease"`
	// The message version.
	MessageVersion pulumi.StringInput `pulumi:"messageVersion"`
	// The schema name.
	SchemaName pulumi.StringInput `pulumi:"schemaName"`
	// The sender application id.
	SenderApplicationId pulumi.StringPtrInput `pulumi:"senderApplicationId"`
	// The sender application qualifier.
	SenderApplicationQualifier pulumi.StringPtrInput `pulumi:"senderApplicationQualifier"`
}

func (EdifactSchemaReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactSchemaReference)(nil)).Elem()
}

func (i EdifactSchemaReferenceArgs) ToEdifactSchemaReferenceOutput() EdifactSchemaReferenceOutput {
	return i.ToEdifactSchemaReferenceOutputWithContext(context.Background())
}

func (i EdifactSchemaReferenceArgs) ToEdifactSchemaReferenceOutputWithContext(ctx context.Context) EdifactSchemaReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactSchemaReferenceOutput)
}

// EdifactSchemaReferenceArrayInput is an input type that accepts EdifactSchemaReferenceArray and EdifactSchemaReferenceArrayOutput values.
// You can construct a concrete instance of `EdifactSchemaReferenceArrayInput` via:
//
//          EdifactSchemaReferenceArray{ EdifactSchemaReferenceArgs{...} }
type EdifactSchemaReferenceArrayInput interface {
	pulumi.Input

	ToEdifactSchemaReferenceArrayOutput() EdifactSchemaReferenceArrayOutput
	ToEdifactSchemaReferenceArrayOutputWithContext(context.Context) EdifactSchemaReferenceArrayOutput
}

type EdifactSchemaReferenceArray []EdifactSchemaReferenceInput

func (EdifactSchemaReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EdifactSchemaReference)(nil)).Elem()
}

func (i EdifactSchemaReferenceArray) ToEdifactSchemaReferenceArrayOutput() EdifactSchemaReferenceArrayOutput {
	return i.ToEdifactSchemaReferenceArrayOutputWithContext(context.Background())
}

func (i EdifactSchemaReferenceArray) ToEdifactSchemaReferenceArrayOutputWithContext(ctx context.Context) EdifactSchemaReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactSchemaReferenceArrayOutput)
}

// The Edifact schema reference.
type EdifactSchemaReferenceResponse struct {
	// The association assigned code.
	AssociationAssignedCode *string `pulumi:"associationAssignedCode"`
	// The message id.
	MessageId string `pulumi:"messageId"`
	// The message release version.
	MessageRelease string `pulumi:"messageRelease"`
	// The message version.
	MessageVersion string `pulumi:"messageVersion"`
	// The schema name.
	SchemaName string `pulumi:"schemaName"`
	// The sender application id.
	SenderApplicationId *string `pulumi:"senderApplicationId"`
	// The sender application qualifier.
	SenderApplicationQualifier *string `pulumi:"senderApplicationQualifier"`
}

// The Edifact schema reference.
type EdifactSchemaReferenceResponseOutput struct{ *pulumi.OutputState }

func (EdifactSchemaReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactSchemaReferenceResponse)(nil)).Elem()
}

func (o EdifactSchemaReferenceResponseOutput) ToEdifactSchemaReferenceResponseOutput() EdifactSchemaReferenceResponseOutput {
	return o
}

func (o EdifactSchemaReferenceResponseOutput) ToEdifactSchemaReferenceResponseOutputWithContext(ctx context.Context) EdifactSchemaReferenceResponseOutput {
	return o
}

// The association assigned code.
func (o EdifactSchemaReferenceResponseOutput) AssociationAssignedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactSchemaReferenceResponse) *string { return v.AssociationAssignedCode }).(pulumi.StringPtrOutput)
}

// The message id.
func (o EdifactSchemaReferenceResponseOutput) MessageId() pulumi.StringOutput {
	return o.ApplyT(func(v EdifactSchemaReferenceResponse) string { return v.MessageId }).(pulumi.StringOutput)
}

// The message release version.
func (o EdifactSchemaReferenceResponseOutput) MessageRelease() pulumi.StringOutput {
	return o.ApplyT(func(v EdifactSchemaReferenceResponse) string { return v.MessageRelease }).(pulumi.StringOutput)
}

// The message version.
func (o EdifactSchemaReferenceResponseOutput) MessageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v EdifactSchemaReferenceResponse) string { return v.MessageVersion }).(pulumi.StringOutput)
}

// The schema name.
func (o EdifactSchemaReferenceResponseOutput) SchemaName() pulumi.StringOutput {
	return o.ApplyT(func(v EdifactSchemaReferenceResponse) string { return v.SchemaName }).(pulumi.StringOutput)
}

// The sender application id.
func (o EdifactSchemaReferenceResponseOutput) SenderApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactSchemaReferenceResponse) *string { return v.SenderApplicationId }).(pulumi.StringPtrOutput)
}

// The sender application qualifier.
func (o EdifactSchemaReferenceResponseOutput) SenderApplicationQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdifactSchemaReferenceResponse) *string { return v.SenderApplicationQualifier }).(pulumi.StringPtrOutput)
}

type EdifactSchemaReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (EdifactSchemaReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EdifactSchemaReferenceResponse)(nil)).Elem()
}

func (o EdifactSchemaReferenceResponseArrayOutput) ToEdifactSchemaReferenceResponseArrayOutput() EdifactSchemaReferenceResponseArrayOutput {
	return o
}

func (o EdifactSchemaReferenceResponseArrayOutput) ToEdifactSchemaReferenceResponseArrayOutputWithContext(ctx context.Context) EdifactSchemaReferenceResponseArrayOutput {
	return o
}

func (o EdifactSchemaReferenceResponseArrayOutput) Index(i pulumi.IntInput) EdifactSchemaReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EdifactSchemaReferenceResponse {
		return vs[0].([]EdifactSchemaReferenceResponse)[vs[1].(int)]
	}).(EdifactSchemaReferenceResponseOutput)
}

// The Edifact validation override settings.
type EdifactValidationOverride struct {
	// The value indicating whether to allow leading and trailing spaces and zeroes.
	AllowLeadingAndTrailingSpacesAndZeroes bool `pulumi:"allowLeadingAndTrailingSpacesAndZeroes"`
	// The value indicating whether to validate character Set.
	EnforceCharacterSet bool `pulumi:"enforceCharacterSet"`
	// The message id on which the validation settings has to be applied.
	MessageId string `pulumi:"messageId"`
	// The trailing separator policy.
	TrailingSeparatorPolicy string `pulumi:"trailingSeparatorPolicy"`
	// The value indicating whether to trim leading and trailing spaces and zeroes.
	TrimLeadingAndTrailingSpacesAndZeroes bool `pulumi:"trimLeadingAndTrailingSpacesAndZeroes"`
	// The value indicating whether to validate EDI types.
	ValidateEDITypes bool `pulumi:"validateEDITypes"`
	// The value indicating whether to validate XSD types.
	ValidateXSDTypes bool `pulumi:"validateXSDTypes"`
}

// EdifactValidationOverrideInput is an input type that accepts EdifactValidationOverrideArgs and EdifactValidationOverrideOutput values.
// You can construct a concrete instance of `EdifactValidationOverrideInput` via:
//
//          EdifactValidationOverrideArgs{...}
type EdifactValidationOverrideInput interface {
	pulumi.Input

	ToEdifactValidationOverrideOutput() EdifactValidationOverrideOutput
	ToEdifactValidationOverrideOutputWithContext(context.Context) EdifactValidationOverrideOutput
}

// The Edifact validation override settings.
type EdifactValidationOverrideArgs struct {
	// The value indicating whether to allow leading and trailing spaces and zeroes.
	AllowLeadingAndTrailingSpacesAndZeroes pulumi.BoolInput `pulumi:"allowLeadingAndTrailingSpacesAndZeroes"`
	// The value indicating whether to validate character Set.
	EnforceCharacterSet pulumi.BoolInput `pulumi:"enforceCharacterSet"`
	// The message id on which the validation settings has to be applied.
	MessageId pulumi.StringInput `pulumi:"messageId"`
	// The trailing separator policy.
	TrailingSeparatorPolicy pulumi.StringInput `pulumi:"trailingSeparatorPolicy"`
	// The value indicating whether to trim leading and trailing spaces and zeroes.
	TrimLeadingAndTrailingSpacesAndZeroes pulumi.BoolInput `pulumi:"trimLeadingAndTrailingSpacesAndZeroes"`
	// The value indicating whether to validate EDI types.
	ValidateEDITypes pulumi.BoolInput `pulumi:"validateEDITypes"`
	// The value indicating whether to validate XSD types.
	ValidateXSDTypes pulumi.BoolInput `pulumi:"validateXSDTypes"`
}

func (EdifactValidationOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactValidationOverride)(nil)).Elem()
}

func (i EdifactValidationOverrideArgs) ToEdifactValidationOverrideOutput() EdifactValidationOverrideOutput {
	return i.ToEdifactValidationOverrideOutputWithContext(context.Background())
}

func (i EdifactValidationOverrideArgs) ToEdifactValidationOverrideOutputWithContext(ctx context.Context) EdifactValidationOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactValidationOverrideOutput)
}

// EdifactValidationOverrideArrayInput is an input type that accepts EdifactValidationOverrideArray and EdifactValidationOverrideArrayOutput values.
// You can construct a concrete instance of `EdifactValidationOverrideArrayInput` via:
//
//          EdifactValidationOverrideArray{ EdifactValidationOverrideArgs{...} }
type EdifactValidationOverrideArrayInput interface {
	pulumi.Input

	ToEdifactValidationOverrideArrayOutput() EdifactValidationOverrideArrayOutput
	ToEdifactValidationOverrideArrayOutputWithContext(context.Context) EdifactValidationOverrideArrayOutput
}

type EdifactValidationOverrideArray []EdifactValidationOverrideInput

func (EdifactValidationOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EdifactValidationOverride)(nil)).Elem()
}

func (i EdifactValidationOverrideArray) ToEdifactValidationOverrideArrayOutput() EdifactValidationOverrideArrayOutput {
	return i.ToEdifactValidationOverrideArrayOutputWithContext(context.Background())
}

func (i EdifactValidationOverrideArray) ToEdifactValidationOverrideArrayOutputWithContext(ctx context.Context) EdifactValidationOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactValidationOverrideArrayOutput)
}

// The Edifact validation override settings.
type EdifactValidationOverrideResponse struct {
	// The value indicating whether to allow leading and trailing spaces and zeroes.
	AllowLeadingAndTrailingSpacesAndZeroes bool `pulumi:"allowLeadingAndTrailingSpacesAndZeroes"`
	// The value indicating whether to validate character Set.
	EnforceCharacterSet bool `pulumi:"enforceCharacterSet"`
	// The message id on which the validation settings has to be applied.
	MessageId string `pulumi:"messageId"`
	// The trailing separator policy.
	TrailingSeparatorPolicy string `pulumi:"trailingSeparatorPolicy"`
	// The value indicating whether to trim leading and trailing spaces and zeroes.
	TrimLeadingAndTrailingSpacesAndZeroes bool `pulumi:"trimLeadingAndTrailingSpacesAndZeroes"`
	// The value indicating whether to validate EDI types.
	ValidateEDITypes bool `pulumi:"validateEDITypes"`
	// The value indicating whether to validate XSD types.
	ValidateXSDTypes bool `pulumi:"validateXSDTypes"`
}

// The Edifact validation override settings.
type EdifactValidationOverrideResponseOutput struct{ *pulumi.OutputState }

func (EdifactValidationOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactValidationOverrideResponse)(nil)).Elem()
}

func (o EdifactValidationOverrideResponseOutput) ToEdifactValidationOverrideResponseOutput() EdifactValidationOverrideResponseOutput {
	return o
}

func (o EdifactValidationOverrideResponseOutput) ToEdifactValidationOverrideResponseOutputWithContext(ctx context.Context) EdifactValidationOverrideResponseOutput {
	return o
}

// The value indicating whether to allow leading and trailing spaces and zeroes.
func (o EdifactValidationOverrideResponseOutput) AllowLeadingAndTrailingSpacesAndZeroes() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactValidationOverrideResponse) bool { return v.AllowLeadingAndTrailingSpacesAndZeroes }).(pulumi.BoolOutput)
}

// The value indicating whether to validate character Set.
func (o EdifactValidationOverrideResponseOutput) EnforceCharacterSet() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactValidationOverrideResponse) bool { return v.EnforceCharacterSet }).(pulumi.BoolOutput)
}

// The message id on which the validation settings has to be applied.
func (o EdifactValidationOverrideResponseOutput) MessageId() pulumi.StringOutput {
	return o.ApplyT(func(v EdifactValidationOverrideResponse) string { return v.MessageId }).(pulumi.StringOutput)
}

// The trailing separator policy.
func (o EdifactValidationOverrideResponseOutput) TrailingSeparatorPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v EdifactValidationOverrideResponse) string { return v.TrailingSeparatorPolicy }).(pulumi.StringOutput)
}

// The value indicating whether to trim leading and trailing spaces and zeroes.
func (o EdifactValidationOverrideResponseOutput) TrimLeadingAndTrailingSpacesAndZeroes() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactValidationOverrideResponse) bool { return v.TrimLeadingAndTrailingSpacesAndZeroes }).(pulumi.BoolOutput)
}

// The value indicating whether to validate EDI types.
func (o EdifactValidationOverrideResponseOutput) ValidateEDITypes() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactValidationOverrideResponse) bool { return v.ValidateEDITypes }).(pulumi.BoolOutput)
}

// The value indicating whether to validate XSD types.
func (o EdifactValidationOverrideResponseOutput) ValidateXSDTypes() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactValidationOverrideResponse) bool { return v.ValidateXSDTypes }).(pulumi.BoolOutput)
}

type EdifactValidationOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (EdifactValidationOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EdifactValidationOverrideResponse)(nil)).Elem()
}

func (o EdifactValidationOverrideResponseArrayOutput) ToEdifactValidationOverrideResponseArrayOutput() EdifactValidationOverrideResponseArrayOutput {
	return o
}

func (o EdifactValidationOverrideResponseArrayOutput) ToEdifactValidationOverrideResponseArrayOutputWithContext(ctx context.Context) EdifactValidationOverrideResponseArrayOutput {
	return o
}

func (o EdifactValidationOverrideResponseArrayOutput) Index(i pulumi.IntInput) EdifactValidationOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EdifactValidationOverrideResponse {
		return vs[0].([]EdifactValidationOverrideResponse)[vs[1].(int)]
	}).(EdifactValidationOverrideResponseOutput)
}

// The Edifact agreement validation settings.
type EdifactValidationSettings struct {
	// The value indicating whether to allow leading and trailing spaces and zeroes.
	AllowLeadingAndTrailingSpacesAndZeroes bool `pulumi:"allowLeadingAndTrailingSpacesAndZeroes"`
	// The value indicating whether to check for duplicate group control number.
	CheckDuplicateGroupControlNumber bool `pulumi:"checkDuplicateGroupControlNumber"`
	// The value indicating whether to check for duplicate interchange control number.
	CheckDuplicateInterchangeControlNumber bool `pulumi:"checkDuplicateInterchangeControlNumber"`
	// The value indicating whether to check for duplicate transaction set control number.
	CheckDuplicateTransactionSetControlNumber bool `pulumi:"checkDuplicateTransactionSetControlNumber"`
	// The validity period of interchange control number.
	InterchangeControlNumberValidityDays int `pulumi:"interchangeControlNumberValidityDays"`
	// The trailing separator policy.
	TrailingSeparatorPolicy string `pulumi:"trailingSeparatorPolicy"`
	// The value indicating whether to trim leading and trailing spaces and zeroes.
	TrimLeadingAndTrailingSpacesAndZeroes bool `pulumi:"trimLeadingAndTrailingSpacesAndZeroes"`
	// The value indicating whether to validate character set in the message.
	ValidateCharacterSet bool `pulumi:"validateCharacterSet"`
	// The value indicating whether to Whether to validate EDI types.
	ValidateEDITypes bool `pulumi:"validateEDITypes"`
	// The value indicating whether to Whether to validate XSD types.
	ValidateXSDTypes bool `pulumi:"validateXSDTypes"`
}

// EdifactValidationSettingsInput is an input type that accepts EdifactValidationSettingsArgs and EdifactValidationSettingsOutput values.
// You can construct a concrete instance of `EdifactValidationSettingsInput` via:
//
//          EdifactValidationSettingsArgs{...}
type EdifactValidationSettingsInput interface {
	pulumi.Input

	ToEdifactValidationSettingsOutput() EdifactValidationSettingsOutput
	ToEdifactValidationSettingsOutputWithContext(context.Context) EdifactValidationSettingsOutput
}

// The Edifact agreement validation settings.
type EdifactValidationSettingsArgs struct {
	// The value indicating whether to allow leading and trailing spaces and zeroes.
	AllowLeadingAndTrailingSpacesAndZeroes pulumi.BoolInput `pulumi:"allowLeadingAndTrailingSpacesAndZeroes"`
	// The value indicating whether to check for duplicate group control number.
	CheckDuplicateGroupControlNumber pulumi.BoolInput `pulumi:"checkDuplicateGroupControlNumber"`
	// The value indicating whether to check for duplicate interchange control number.
	CheckDuplicateInterchangeControlNumber pulumi.BoolInput `pulumi:"checkDuplicateInterchangeControlNumber"`
	// The value indicating whether to check for duplicate transaction set control number.
	CheckDuplicateTransactionSetControlNumber pulumi.BoolInput `pulumi:"checkDuplicateTransactionSetControlNumber"`
	// The validity period of interchange control number.
	InterchangeControlNumberValidityDays pulumi.IntInput `pulumi:"interchangeControlNumberValidityDays"`
	// The trailing separator policy.
	TrailingSeparatorPolicy pulumi.StringInput `pulumi:"trailingSeparatorPolicy"`
	// The value indicating whether to trim leading and trailing spaces and zeroes.
	TrimLeadingAndTrailingSpacesAndZeroes pulumi.BoolInput `pulumi:"trimLeadingAndTrailingSpacesAndZeroes"`
	// The value indicating whether to validate character set in the message.
	ValidateCharacterSet pulumi.BoolInput `pulumi:"validateCharacterSet"`
	// The value indicating whether to Whether to validate EDI types.
	ValidateEDITypes pulumi.BoolInput `pulumi:"validateEDITypes"`
	// The value indicating whether to Whether to validate XSD types.
	ValidateXSDTypes pulumi.BoolInput `pulumi:"validateXSDTypes"`
}

func (EdifactValidationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactValidationSettings)(nil)).Elem()
}

func (i EdifactValidationSettingsArgs) ToEdifactValidationSettingsOutput() EdifactValidationSettingsOutput {
	return i.ToEdifactValidationSettingsOutputWithContext(context.Background())
}

func (i EdifactValidationSettingsArgs) ToEdifactValidationSettingsOutputWithContext(ctx context.Context) EdifactValidationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactValidationSettingsOutput)
}

func (i EdifactValidationSettingsArgs) ToEdifactValidationSettingsPtrOutput() EdifactValidationSettingsPtrOutput {
	return i.ToEdifactValidationSettingsPtrOutputWithContext(context.Background())
}

func (i EdifactValidationSettingsArgs) ToEdifactValidationSettingsPtrOutputWithContext(ctx context.Context) EdifactValidationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactValidationSettingsOutput).ToEdifactValidationSettingsPtrOutputWithContext(ctx)
}

// EdifactValidationSettingsPtrInput is an input type that accepts EdifactValidationSettingsArgs, EdifactValidationSettingsPtr and EdifactValidationSettingsPtrOutput values.
// You can construct a concrete instance of `EdifactValidationSettingsPtrInput` via:
//
//          EdifactValidationSettingsArgs{...}
//
//  or:
//
//          nil
type EdifactValidationSettingsPtrInput interface {
	pulumi.Input

	ToEdifactValidationSettingsPtrOutput() EdifactValidationSettingsPtrOutput
	ToEdifactValidationSettingsPtrOutputWithContext(context.Context) EdifactValidationSettingsPtrOutput
}

type edifactValidationSettingsPtrType EdifactValidationSettingsArgs

func EdifactValidationSettingsPtr(v *EdifactValidationSettingsArgs) EdifactValidationSettingsPtrInput {
	return (*edifactValidationSettingsPtrType)(v)
}

func (*edifactValidationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EdifactValidationSettings)(nil)).Elem()
}

func (i *edifactValidationSettingsPtrType) ToEdifactValidationSettingsPtrOutput() EdifactValidationSettingsPtrOutput {
	return i.ToEdifactValidationSettingsPtrOutputWithContext(context.Background())
}

func (i *edifactValidationSettingsPtrType) ToEdifactValidationSettingsPtrOutputWithContext(ctx context.Context) EdifactValidationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdifactValidationSettingsPtrOutput)
}

// The Edifact agreement validation settings.
type EdifactValidationSettingsResponse struct {
	// The value indicating whether to allow leading and trailing spaces and zeroes.
	AllowLeadingAndTrailingSpacesAndZeroes bool `pulumi:"allowLeadingAndTrailingSpacesAndZeroes"`
	// The value indicating whether to check for duplicate group control number.
	CheckDuplicateGroupControlNumber bool `pulumi:"checkDuplicateGroupControlNumber"`
	// The value indicating whether to check for duplicate interchange control number.
	CheckDuplicateInterchangeControlNumber bool `pulumi:"checkDuplicateInterchangeControlNumber"`
	// The value indicating whether to check for duplicate transaction set control number.
	CheckDuplicateTransactionSetControlNumber bool `pulumi:"checkDuplicateTransactionSetControlNumber"`
	// The validity period of interchange control number.
	InterchangeControlNumberValidityDays int `pulumi:"interchangeControlNumberValidityDays"`
	// The trailing separator policy.
	TrailingSeparatorPolicy string `pulumi:"trailingSeparatorPolicy"`
	// The value indicating whether to trim leading and trailing spaces and zeroes.
	TrimLeadingAndTrailingSpacesAndZeroes bool `pulumi:"trimLeadingAndTrailingSpacesAndZeroes"`
	// The value indicating whether to validate character set in the message.
	ValidateCharacterSet bool `pulumi:"validateCharacterSet"`
	// The value indicating whether to Whether to validate EDI types.
	ValidateEDITypes bool `pulumi:"validateEDITypes"`
	// The value indicating whether to Whether to validate XSD types.
	ValidateXSDTypes bool `pulumi:"validateXSDTypes"`
}

// The Edifact agreement validation settings.
type EdifactValidationSettingsResponseOutput struct{ *pulumi.OutputState }

func (EdifactValidationSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdifactValidationSettingsResponse)(nil)).Elem()
}

func (o EdifactValidationSettingsResponseOutput) ToEdifactValidationSettingsResponseOutput() EdifactValidationSettingsResponseOutput {
	return o
}

func (o EdifactValidationSettingsResponseOutput) ToEdifactValidationSettingsResponseOutputWithContext(ctx context.Context) EdifactValidationSettingsResponseOutput {
	return o
}

func (o EdifactValidationSettingsResponseOutput) ToEdifactValidationSettingsResponsePtrOutput() EdifactValidationSettingsResponsePtrOutput {
	return o.ToEdifactValidationSettingsResponsePtrOutputWithContext(context.Background())
}

func (o EdifactValidationSettingsResponseOutput) ToEdifactValidationSettingsResponsePtrOutputWithContext(ctx context.Context) EdifactValidationSettingsResponsePtrOutput {
	return o.ApplyT(func(v EdifactValidationSettingsResponse) *EdifactValidationSettingsResponse {
		return &v
	}).(EdifactValidationSettingsResponsePtrOutput)
}

// The value indicating whether to allow leading and trailing spaces and zeroes.
func (o EdifactValidationSettingsResponseOutput) AllowLeadingAndTrailingSpacesAndZeroes() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactValidationSettingsResponse) bool { return v.AllowLeadingAndTrailingSpacesAndZeroes }).(pulumi.BoolOutput)
}

// The value indicating whether to check for duplicate group control number.
func (o EdifactValidationSettingsResponseOutput) CheckDuplicateGroupControlNumber() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactValidationSettingsResponse) bool { return v.CheckDuplicateGroupControlNumber }).(pulumi.BoolOutput)
}

// The value indicating whether to check for duplicate interchange control number.
func (o EdifactValidationSettingsResponseOutput) CheckDuplicateInterchangeControlNumber() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactValidationSettingsResponse) bool { return v.CheckDuplicateInterchangeControlNumber }).(pulumi.BoolOutput)
}

// The value indicating whether to check for duplicate transaction set control number.
func (o EdifactValidationSettingsResponseOutput) CheckDuplicateTransactionSetControlNumber() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactValidationSettingsResponse) bool { return v.CheckDuplicateTransactionSetControlNumber }).(pulumi.BoolOutput)
}

// The validity period of interchange control number.
func (o EdifactValidationSettingsResponseOutput) InterchangeControlNumberValidityDays() pulumi.IntOutput {
	return o.ApplyT(func(v EdifactValidationSettingsResponse) int { return v.InterchangeControlNumberValidityDays }).(pulumi.IntOutput)
}

// The trailing separator policy.
func (o EdifactValidationSettingsResponseOutput) TrailingSeparatorPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v EdifactValidationSettingsResponse) string { return v.TrailingSeparatorPolicy }).(pulumi.StringOutput)
}

// The value indicating whether to trim leading and trailing spaces and zeroes.
func (o EdifactValidationSettingsResponseOutput) TrimLeadingAndTrailingSpacesAndZeroes() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactValidationSettingsResponse) bool { return v.TrimLeadingAndTrailingSpacesAndZeroes }).(pulumi.BoolOutput)
}

// The value indicating whether to validate character set in the message.
func (o EdifactValidationSettingsResponseOutput) ValidateCharacterSet() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactValidationSettingsResponse) bool { return v.ValidateCharacterSet }).(pulumi.BoolOutput)
}

// The value indicating whether to Whether to validate EDI types.
func (o EdifactValidationSettingsResponseOutput) ValidateEDITypes() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactValidationSettingsResponse) bool { return v.ValidateEDITypes }).(pulumi.BoolOutput)
}

// The value indicating whether to Whether to validate XSD types.
func (o EdifactValidationSettingsResponseOutput) ValidateXSDTypes() pulumi.BoolOutput {
	return o.ApplyT(func(v EdifactValidationSettingsResponse) bool { return v.ValidateXSDTypes }).(pulumi.BoolOutput)
}

type EdifactValidationSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (EdifactValidationSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdifactValidationSettingsResponse)(nil)).Elem()
}

func (o EdifactValidationSettingsResponsePtrOutput) ToEdifactValidationSettingsResponsePtrOutput() EdifactValidationSettingsResponsePtrOutput {
	return o
}

func (o EdifactValidationSettingsResponsePtrOutput) ToEdifactValidationSettingsResponsePtrOutputWithContext(ctx context.Context) EdifactValidationSettingsResponsePtrOutput {
	return o
}

func (o EdifactValidationSettingsResponsePtrOutput) Elem() EdifactValidationSettingsResponseOutput {
	return o.ApplyT(func(v *EdifactValidationSettingsResponse) EdifactValidationSettingsResponse { return *v }).(EdifactValidationSettingsResponseOutput)
}

// The value indicating whether to allow leading and trailing spaces and zeroes.
func (o EdifactValidationSettingsResponsePtrOutput) AllowLeadingAndTrailingSpacesAndZeroes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.AllowLeadingAndTrailingSpacesAndZeroes
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to check for duplicate group control number.
func (o EdifactValidationSettingsResponsePtrOutput) CheckDuplicateGroupControlNumber() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.CheckDuplicateGroupControlNumber
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to check for duplicate interchange control number.
func (o EdifactValidationSettingsResponsePtrOutput) CheckDuplicateInterchangeControlNumber() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.CheckDuplicateInterchangeControlNumber
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to check for duplicate transaction set control number.
func (o EdifactValidationSettingsResponsePtrOutput) CheckDuplicateTransactionSetControlNumber() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.CheckDuplicateTransactionSetControlNumber
	}).(pulumi.BoolPtrOutput)
}

// The validity period of interchange control number.
func (o EdifactValidationSettingsResponsePtrOutput) InterchangeControlNumberValidityDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EdifactValidationSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.InterchangeControlNumberValidityDays
	}).(pulumi.IntPtrOutput)
}

// The trailing separator policy.
func (o EdifactValidationSettingsResponsePtrOutput) TrailingSeparatorPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdifactValidationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TrailingSeparatorPolicy
	}).(pulumi.StringPtrOutput)
}

// The value indicating whether to trim leading and trailing spaces and zeroes.
func (o EdifactValidationSettingsResponsePtrOutput) TrimLeadingAndTrailingSpacesAndZeroes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.TrimLeadingAndTrailingSpacesAndZeroes
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to validate character set in the message.
func (o EdifactValidationSettingsResponsePtrOutput) ValidateCharacterSet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.ValidateCharacterSet
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to Whether to validate EDI types.
func (o EdifactValidationSettingsResponsePtrOutput) ValidateEDITypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.ValidateEDITypes
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to Whether to validate XSD types.
func (o EdifactValidationSettingsResponsePtrOutput) ValidateXSDTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdifactValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.ValidateXSDTypes
	}).(pulumi.BoolPtrOutput)
}

// The expression.
type ExpressionResponse struct {
	// The azure resource error info.
	Error *AzureResourceErrorInfoResponse `pulumi:"error"`
	// The sub expressions.
	Subexpressions []ExpressionResponse `pulumi:"subexpressions"`
	// The text.
	Text  *string                `pulumi:"text"`
	Value map[string]interface{} `pulumi:"value"`
}

// The expression root.
type ExpressionRootResponse struct {
	// The azure resource error info.
	Error *AzureResourceErrorInfoResponse `pulumi:"error"`
	// The path.
	Path *string `pulumi:"path"`
	// The sub expressions.
	Subexpressions []ExpressionResponse `pulumi:"subexpressions"`
	// The text.
	Text  *string                `pulumi:"text"`
	Value map[string]interface{} `pulumi:"value"`
}

// The access control configuration.
type FlowAccessControlConfiguration struct {
	// The access control configuration for workflow actions.
	Actions *FlowAccessControlConfigurationPolicy `pulumi:"actions"`
	// The access control configuration for accessing workflow run contents.
	Contents *FlowAccessControlConfigurationPolicy `pulumi:"contents"`
	// The access control configuration for invoking workflow triggers.
	Triggers *FlowAccessControlConfigurationPolicy `pulumi:"triggers"`
	// The access control configuration for workflow management.
	WorkflowManagement *FlowAccessControlConfigurationPolicy `pulumi:"workflowManagement"`
}

// FlowAccessControlConfigurationInput is an input type that accepts FlowAccessControlConfigurationArgs and FlowAccessControlConfigurationOutput values.
// You can construct a concrete instance of `FlowAccessControlConfigurationInput` via:
//
//          FlowAccessControlConfigurationArgs{...}
type FlowAccessControlConfigurationInput interface {
	pulumi.Input

	ToFlowAccessControlConfigurationOutput() FlowAccessControlConfigurationOutput
	ToFlowAccessControlConfigurationOutputWithContext(context.Context) FlowAccessControlConfigurationOutput
}

// The access control configuration.
type FlowAccessControlConfigurationArgs struct {
	// The access control configuration for workflow actions.
	Actions FlowAccessControlConfigurationPolicyPtrInput `pulumi:"actions"`
	// The access control configuration for accessing workflow run contents.
	Contents FlowAccessControlConfigurationPolicyPtrInput `pulumi:"contents"`
	// The access control configuration for invoking workflow triggers.
	Triggers FlowAccessControlConfigurationPolicyPtrInput `pulumi:"triggers"`
	// The access control configuration for workflow management.
	WorkflowManagement FlowAccessControlConfigurationPolicyPtrInput `pulumi:"workflowManagement"`
}

func (FlowAccessControlConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowAccessControlConfiguration)(nil)).Elem()
}

func (i FlowAccessControlConfigurationArgs) ToFlowAccessControlConfigurationOutput() FlowAccessControlConfigurationOutput {
	return i.ToFlowAccessControlConfigurationOutputWithContext(context.Background())
}

func (i FlowAccessControlConfigurationArgs) ToFlowAccessControlConfigurationOutputWithContext(ctx context.Context) FlowAccessControlConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowAccessControlConfigurationOutput)
}

func (i FlowAccessControlConfigurationArgs) ToFlowAccessControlConfigurationPtrOutput() FlowAccessControlConfigurationPtrOutput {
	return i.ToFlowAccessControlConfigurationPtrOutputWithContext(context.Background())
}

func (i FlowAccessControlConfigurationArgs) ToFlowAccessControlConfigurationPtrOutputWithContext(ctx context.Context) FlowAccessControlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowAccessControlConfigurationOutput).ToFlowAccessControlConfigurationPtrOutputWithContext(ctx)
}

// FlowAccessControlConfigurationPtrInput is an input type that accepts FlowAccessControlConfigurationArgs, FlowAccessControlConfigurationPtr and FlowAccessControlConfigurationPtrOutput values.
// You can construct a concrete instance of `FlowAccessControlConfigurationPtrInput` via:
//
//          FlowAccessControlConfigurationArgs{...}
//
//  or:
//
//          nil
type FlowAccessControlConfigurationPtrInput interface {
	pulumi.Input

	ToFlowAccessControlConfigurationPtrOutput() FlowAccessControlConfigurationPtrOutput
	ToFlowAccessControlConfigurationPtrOutputWithContext(context.Context) FlowAccessControlConfigurationPtrOutput
}

type flowAccessControlConfigurationPtrType FlowAccessControlConfigurationArgs

func FlowAccessControlConfigurationPtr(v *FlowAccessControlConfigurationArgs) FlowAccessControlConfigurationPtrInput {
	return (*flowAccessControlConfigurationPtrType)(v)
}

func (*flowAccessControlConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowAccessControlConfiguration)(nil)).Elem()
}

func (i *flowAccessControlConfigurationPtrType) ToFlowAccessControlConfigurationPtrOutput() FlowAccessControlConfigurationPtrOutput {
	return i.ToFlowAccessControlConfigurationPtrOutputWithContext(context.Background())
}

func (i *flowAccessControlConfigurationPtrType) ToFlowAccessControlConfigurationPtrOutputWithContext(ctx context.Context) FlowAccessControlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowAccessControlConfigurationPtrOutput)
}

// The access control configuration policy.
type FlowAccessControlConfigurationPolicy struct {
	// The allowed caller IP address ranges.
	AllowedCallerIpAddresses []IpAddressRange `pulumi:"allowedCallerIpAddresses"`
	// The authentication policies for workflow.
	OpenAuthenticationPolicies *OpenAuthenticationAccessPolicies `pulumi:"openAuthenticationPolicies"`
}

// FlowAccessControlConfigurationPolicyInput is an input type that accepts FlowAccessControlConfigurationPolicyArgs and FlowAccessControlConfigurationPolicyOutput values.
// You can construct a concrete instance of `FlowAccessControlConfigurationPolicyInput` via:
//
//          FlowAccessControlConfigurationPolicyArgs{...}
type FlowAccessControlConfigurationPolicyInput interface {
	pulumi.Input

	ToFlowAccessControlConfigurationPolicyOutput() FlowAccessControlConfigurationPolicyOutput
	ToFlowAccessControlConfigurationPolicyOutputWithContext(context.Context) FlowAccessControlConfigurationPolicyOutput
}

// The access control configuration policy.
type FlowAccessControlConfigurationPolicyArgs struct {
	// The allowed caller IP address ranges.
	AllowedCallerIpAddresses IpAddressRangeArrayInput `pulumi:"allowedCallerIpAddresses"`
	// The authentication policies for workflow.
	OpenAuthenticationPolicies OpenAuthenticationAccessPoliciesPtrInput `pulumi:"openAuthenticationPolicies"`
}

func (FlowAccessControlConfigurationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowAccessControlConfigurationPolicy)(nil)).Elem()
}

func (i FlowAccessControlConfigurationPolicyArgs) ToFlowAccessControlConfigurationPolicyOutput() FlowAccessControlConfigurationPolicyOutput {
	return i.ToFlowAccessControlConfigurationPolicyOutputWithContext(context.Background())
}

func (i FlowAccessControlConfigurationPolicyArgs) ToFlowAccessControlConfigurationPolicyOutputWithContext(ctx context.Context) FlowAccessControlConfigurationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowAccessControlConfigurationPolicyOutput)
}

func (i FlowAccessControlConfigurationPolicyArgs) ToFlowAccessControlConfigurationPolicyPtrOutput() FlowAccessControlConfigurationPolicyPtrOutput {
	return i.ToFlowAccessControlConfigurationPolicyPtrOutputWithContext(context.Background())
}

func (i FlowAccessControlConfigurationPolicyArgs) ToFlowAccessControlConfigurationPolicyPtrOutputWithContext(ctx context.Context) FlowAccessControlConfigurationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowAccessControlConfigurationPolicyOutput).ToFlowAccessControlConfigurationPolicyPtrOutputWithContext(ctx)
}

// FlowAccessControlConfigurationPolicyPtrInput is an input type that accepts FlowAccessControlConfigurationPolicyArgs, FlowAccessControlConfigurationPolicyPtr and FlowAccessControlConfigurationPolicyPtrOutput values.
// You can construct a concrete instance of `FlowAccessControlConfigurationPolicyPtrInput` via:
//
//          FlowAccessControlConfigurationPolicyArgs{...}
//
//  or:
//
//          nil
type FlowAccessControlConfigurationPolicyPtrInput interface {
	pulumi.Input

	ToFlowAccessControlConfigurationPolicyPtrOutput() FlowAccessControlConfigurationPolicyPtrOutput
	ToFlowAccessControlConfigurationPolicyPtrOutputWithContext(context.Context) FlowAccessControlConfigurationPolicyPtrOutput
}

type flowAccessControlConfigurationPolicyPtrType FlowAccessControlConfigurationPolicyArgs

func FlowAccessControlConfigurationPolicyPtr(v *FlowAccessControlConfigurationPolicyArgs) FlowAccessControlConfigurationPolicyPtrInput {
	return (*flowAccessControlConfigurationPolicyPtrType)(v)
}

func (*flowAccessControlConfigurationPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowAccessControlConfigurationPolicy)(nil)).Elem()
}

func (i *flowAccessControlConfigurationPolicyPtrType) ToFlowAccessControlConfigurationPolicyPtrOutput() FlowAccessControlConfigurationPolicyPtrOutput {
	return i.ToFlowAccessControlConfigurationPolicyPtrOutputWithContext(context.Background())
}

func (i *flowAccessControlConfigurationPolicyPtrType) ToFlowAccessControlConfigurationPolicyPtrOutputWithContext(ctx context.Context) FlowAccessControlConfigurationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowAccessControlConfigurationPolicyPtrOutput)
}

// The access control configuration policy.
type FlowAccessControlConfigurationPolicyResponse struct {
	// The allowed caller IP address ranges.
	AllowedCallerIpAddresses []IpAddressRangeResponse `pulumi:"allowedCallerIpAddresses"`
	// The authentication policies for workflow.
	OpenAuthenticationPolicies *OpenAuthenticationAccessPoliciesResponse `pulumi:"openAuthenticationPolicies"`
}

// The access control configuration policy.
type FlowAccessControlConfigurationPolicyResponseOutput struct{ *pulumi.OutputState }

func (FlowAccessControlConfigurationPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowAccessControlConfigurationPolicyResponse)(nil)).Elem()
}

func (o FlowAccessControlConfigurationPolicyResponseOutput) ToFlowAccessControlConfigurationPolicyResponseOutput() FlowAccessControlConfigurationPolicyResponseOutput {
	return o
}

func (o FlowAccessControlConfigurationPolicyResponseOutput) ToFlowAccessControlConfigurationPolicyResponseOutputWithContext(ctx context.Context) FlowAccessControlConfigurationPolicyResponseOutput {
	return o
}

func (o FlowAccessControlConfigurationPolicyResponseOutput) ToFlowAccessControlConfigurationPolicyResponsePtrOutput() FlowAccessControlConfigurationPolicyResponsePtrOutput {
	return o.ToFlowAccessControlConfigurationPolicyResponsePtrOutputWithContext(context.Background())
}

func (o FlowAccessControlConfigurationPolicyResponseOutput) ToFlowAccessControlConfigurationPolicyResponsePtrOutputWithContext(ctx context.Context) FlowAccessControlConfigurationPolicyResponsePtrOutput {
	return o.ApplyT(func(v FlowAccessControlConfigurationPolicyResponse) *FlowAccessControlConfigurationPolicyResponse {
		return &v
	}).(FlowAccessControlConfigurationPolicyResponsePtrOutput)
}

// The allowed caller IP address ranges.
func (o FlowAccessControlConfigurationPolicyResponseOutput) AllowedCallerIpAddresses() IpAddressRangeResponseArrayOutput {
	return o.ApplyT(func(v FlowAccessControlConfigurationPolicyResponse) []IpAddressRangeResponse {
		return v.AllowedCallerIpAddresses
	}).(IpAddressRangeResponseArrayOutput)
}

// The authentication policies for workflow.
func (o FlowAccessControlConfigurationPolicyResponseOutput) OpenAuthenticationPolicies() OpenAuthenticationAccessPoliciesResponsePtrOutput {
	return o.ApplyT(func(v FlowAccessControlConfigurationPolicyResponse) *OpenAuthenticationAccessPoliciesResponse {
		return v.OpenAuthenticationPolicies
	}).(OpenAuthenticationAccessPoliciesResponsePtrOutput)
}

type FlowAccessControlConfigurationPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (FlowAccessControlConfigurationPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowAccessControlConfigurationPolicyResponse)(nil)).Elem()
}

func (o FlowAccessControlConfigurationPolicyResponsePtrOutput) ToFlowAccessControlConfigurationPolicyResponsePtrOutput() FlowAccessControlConfigurationPolicyResponsePtrOutput {
	return o
}

func (o FlowAccessControlConfigurationPolicyResponsePtrOutput) ToFlowAccessControlConfigurationPolicyResponsePtrOutputWithContext(ctx context.Context) FlowAccessControlConfigurationPolicyResponsePtrOutput {
	return o
}

func (o FlowAccessControlConfigurationPolicyResponsePtrOutput) Elem() FlowAccessControlConfigurationPolicyResponseOutput {
	return o.ApplyT(func(v *FlowAccessControlConfigurationPolicyResponse) FlowAccessControlConfigurationPolicyResponse {
		return *v
	}).(FlowAccessControlConfigurationPolicyResponseOutput)
}

// The allowed caller IP address ranges.
func (o FlowAccessControlConfigurationPolicyResponsePtrOutput) AllowedCallerIpAddresses() IpAddressRangeResponseArrayOutput {
	return o.ApplyT(func(v *FlowAccessControlConfigurationPolicyResponse) []IpAddressRangeResponse {
		if v == nil {
			return nil
		}
		return v.AllowedCallerIpAddresses
	}).(IpAddressRangeResponseArrayOutput)
}

// The authentication policies for workflow.
func (o FlowAccessControlConfigurationPolicyResponsePtrOutput) OpenAuthenticationPolicies() OpenAuthenticationAccessPoliciesResponsePtrOutput {
	return o.ApplyT(func(v *FlowAccessControlConfigurationPolicyResponse) *OpenAuthenticationAccessPoliciesResponse {
		if v == nil {
			return nil
		}
		return v.OpenAuthenticationPolicies
	}).(OpenAuthenticationAccessPoliciesResponsePtrOutput)
}

// The access control configuration.
type FlowAccessControlConfigurationResponse struct {
	// The access control configuration for workflow actions.
	Actions *FlowAccessControlConfigurationPolicyResponse `pulumi:"actions"`
	// The access control configuration for accessing workflow run contents.
	Contents *FlowAccessControlConfigurationPolicyResponse `pulumi:"contents"`
	// The access control configuration for invoking workflow triggers.
	Triggers *FlowAccessControlConfigurationPolicyResponse `pulumi:"triggers"`
	// The access control configuration for workflow management.
	WorkflowManagement *FlowAccessControlConfigurationPolicyResponse `pulumi:"workflowManagement"`
}

// The access control configuration.
type FlowAccessControlConfigurationResponseOutput struct{ *pulumi.OutputState }

func (FlowAccessControlConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowAccessControlConfigurationResponse)(nil)).Elem()
}

func (o FlowAccessControlConfigurationResponseOutput) ToFlowAccessControlConfigurationResponseOutput() FlowAccessControlConfigurationResponseOutput {
	return o
}

func (o FlowAccessControlConfigurationResponseOutput) ToFlowAccessControlConfigurationResponseOutputWithContext(ctx context.Context) FlowAccessControlConfigurationResponseOutput {
	return o
}

func (o FlowAccessControlConfigurationResponseOutput) ToFlowAccessControlConfigurationResponsePtrOutput() FlowAccessControlConfigurationResponsePtrOutput {
	return o.ToFlowAccessControlConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o FlowAccessControlConfigurationResponseOutput) ToFlowAccessControlConfigurationResponsePtrOutputWithContext(ctx context.Context) FlowAccessControlConfigurationResponsePtrOutput {
	return o.ApplyT(func(v FlowAccessControlConfigurationResponse) *FlowAccessControlConfigurationResponse {
		return &v
	}).(FlowAccessControlConfigurationResponsePtrOutput)
}

// The access control configuration for workflow actions.
func (o FlowAccessControlConfigurationResponseOutput) Actions() FlowAccessControlConfigurationPolicyResponsePtrOutput {
	return o.ApplyT(func(v FlowAccessControlConfigurationResponse) *FlowAccessControlConfigurationPolicyResponse {
		return v.Actions
	}).(FlowAccessControlConfigurationPolicyResponsePtrOutput)
}

// The access control configuration for accessing workflow run contents.
func (o FlowAccessControlConfigurationResponseOutput) Contents() FlowAccessControlConfigurationPolicyResponsePtrOutput {
	return o.ApplyT(func(v FlowAccessControlConfigurationResponse) *FlowAccessControlConfigurationPolicyResponse {
		return v.Contents
	}).(FlowAccessControlConfigurationPolicyResponsePtrOutput)
}

// The access control configuration for invoking workflow triggers.
func (o FlowAccessControlConfigurationResponseOutput) Triggers() FlowAccessControlConfigurationPolicyResponsePtrOutput {
	return o.ApplyT(func(v FlowAccessControlConfigurationResponse) *FlowAccessControlConfigurationPolicyResponse {
		return v.Triggers
	}).(FlowAccessControlConfigurationPolicyResponsePtrOutput)
}

// The access control configuration for workflow management.
func (o FlowAccessControlConfigurationResponseOutput) WorkflowManagement() FlowAccessControlConfigurationPolicyResponsePtrOutput {
	return o.ApplyT(func(v FlowAccessControlConfigurationResponse) *FlowAccessControlConfigurationPolicyResponse {
		return v.WorkflowManagement
	}).(FlowAccessControlConfigurationPolicyResponsePtrOutput)
}

type FlowAccessControlConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (FlowAccessControlConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowAccessControlConfigurationResponse)(nil)).Elem()
}

func (o FlowAccessControlConfigurationResponsePtrOutput) ToFlowAccessControlConfigurationResponsePtrOutput() FlowAccessControlConfigurationResponsePtrOutput {
	return o
}

func (o FlowAccessControlConfigurationResponsePtrOutput) ToFlowAccessControlConfigurationResponsePtrOutputWithContext(ctx context.Context) FlowAccessControlConfigurationResponsePtrOutput {
	return o
}

func (o FlowAccessControlConfigurationResponsePtrOutput) Elem() FlowAccessControlConfigurationResponseOutput {
	return o.ApplyT(func(v *FlowAccessControlConfigurationResponse) FlowAccessControlConfigurationResponse { return *v }).(FlowAccessControlConfigurationResponseOutput)
}

// The access control configuration for workflow actions.
func (o FlowAccessControlConfigurationResponsePtrOutput) Actions() FlowAccessControlConfigurationPolicyResponsePtrOutput {
	return o.ApplyT(func(v *FlowAccessControlConfigurationResponse) *FlowAccessControlConfigurationPolicyResponse {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(FlowAccessControlConfigurationPolicyResponsePtrOutput)
}

// The access control configuration for accessing workflow run contents.
func (o FlowAccessControlConfigurationResponsePtrOutput) Contents() FlowAccessControlConfigurationPolicyResponsePtrOutput {
	return o.ApplyT(func(v *FlowAccessControlConfigurationResponse) *FlowAccessControlConfigurationPolicyResponse {
		if v == nil {
			return nil
		}
		return v.Contents
	}).(FlowAccessControlConfigurationPolicyResponsePtrOutput)
}

// The access control configuration for invoking workflow triggers.
func (o FlowAccessControlConfigurationResponsePtrOutput) Triggers() FlowAccessControlConfigurationPolicyResponsePtrOutput {
	return o.ApplyT(func(v *FlowAccessControlConfigurationResponse) *FlowAccessControlConfigurationPolicyResponse {
		if v == nil {
			return nil
		}
		return v.Triggers
	}).(FlowAccessControlConfigurationPolicyResponsePtrOutput)
}

// The access control configuration for workflow management.
func (o FlowAccessControlConfigurationResponsePtrOutput) WorkflowManagement() FlowAccessControlConfigurationPolicyResponsePtrOutput {
	return o.ApplyT(func(v *FlowAccessControlConfigurationResponse) *FlowAccessControlConfigurationPolicyResponse {
		if v == nil {
			return nil
		}
		return v.WorkflowManagement
	}).(FlowAccessControlConfigurationPolicyResponsePtrOutput)
}

// The flow endpoints configuration.
type FlowEndpoints struct {
	// The access endpoint ip address.
	AccessEndpointIpAddresses []IpAddress `pulumi:"accessEndpointIpAddresses"`
	// The outgoing ip address.
	OutgoingIpAddresses []IpAddress `pulumi:"outgoingIpAddresses"`
}

// FlowEndpointsInput is an input type that accepts FlowEndpointsArgs and FlowEndpointsOutput values.
// You can construct a concrete instance of `FlowEndpointsInput` via:
//
//          FlowEndpointsArgs{...}
type FlowEndpointsInput interface {
	pulumi.Input

	ToFlowEndpointsOutput() FlowEndpointsOutput
	ToFlowEndpointsOutputWithContext(context.Context) FlowEndpointsOutput
}

// The flow endpoints configuration.
type FlowEndpointsArgs struct {
	// The access endpoint ip address.
	AccessEndpointIpAddresses IpAddressArrayInput `pulumi:"accessEndpointIpAddresses"`
	// The outgoing ip address.
	OutgoingIpAddresses IpAddressArrayInput `pulumi:"outgoingIpAddresses"`
}

func (FlowEndpointsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowEndpoints)(nil)).Elem()
}

func (i FlowEndpointsArgs) ToFlowEndpointsOutput() FlowEndpointsOutput {
	return i.ToFlowEndpointsOutputWithContext(context.Background())
}

func (i FlowEndpointsArgs) ToFlowEndpointsOutputWithContext(ctx context.Context) FlowEndpointsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowEndpointsOutput)
}

func (i FlowEndpointsArgs) ToFlowEndpointsPtrOutput() FlowEndpointsPtrOutput {
	return i.ToFlowEndpointsPtrOutputWithContext(context.Background())
}

func (i FlowEndpointsArgs) ToFlowEndpointsPtrOutputWithContext(ctx context.Context) FlowEndpointsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowEndpointsOutput).ToFlowEndpointsPtrOutputWithContext(ctx)
}

// FlowEndpointsPtrInput is an input type that accepts FlowEndpointsArgs, FlowEndpointsPtr and FlowEndpointsPtrOutput values.
// You can construct a concrete instance of `FlowEndpointsPtrInput` via:
//
//          FlowEndpointsArgs{...}
//
//  or:
//
//          nil
type FlowEndpointsPtrInput interface {
	pulumi.Input

	ToFlowEndpointsPtrOutput() FlowEndpointsPtrOutput
	ToFlowEndpointsPtrOutputWithContext(context.Context) FlowEndpointsPtrOutput
}

type flowEndpointsPtrType FlowEndpointsArgs

func FlowEndpointsPtr(v *FlowEndpointsArgs) FlowEndpointsPtrInput {
	return (*flowEndpointsPtrType)(v)
}

func (*flowEndpointsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowEndpoints)(nil)).Elem()
}

func (i *flowEndpointsPtrType) ToFlowEndpointsPtrOutput() FlowEndpointsPtrOutput {
	return i.ToFlowEndpointsPtrOutputWithContext(context.Background())
}

func (i *flowEndpointsPtrType) ToFlowEndpointsPtrOutputWithContext(ctx context.Context) FlowEndpointsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowEndpointsPtrOutput)
}

// The endpoints configuration.
type FlowEndpointsConfiguration struct {
	// The connector endpoints.
	Connector *FlowEndpoints `pulumi:"connector"`
	// The workflow endpoints.
	Workflow *FlowEndpoints `pulumi:"workflow"`
}

// FlowEndpointsConfigurationInput is an input type that accepts FlowEndpointsConfigurationArgs and FlowEndpointsConfigurationOutput values.
// You can construct a concrete instance of `FlowEndpointsConfigurationInput` via:
//
//          FlowEndpointsConfigurationArgs{...}
type FlowEndpointsConfigurationInput interface {
	pulumi.Input

	ToFlowEndpointsConfigurationOutput() FlowEndpointsConfigurationOutput
	ToFlowEndpointsConfigurationOutputWithContext(context.Context) FlowEndpointsConfigurationOutput
}

// The endpoints configuration.
type FlowEndpointsConfigurationArgs struct {
	// The connector endpoints.
	Connector FlowEndpointsPtrInput `pulumi:"connector"`
	// The workflow endpoints.
	Workflow FlowEndpointsPtrInput `pulumi:"workflow"`
}

func (FlowEndpointsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowEndpointsConfiguration)(nil)).Elem()
}

func (i FlowEndpointsConfigurationArgs) ToFlowEndpointsConfigurationOutput() FlowEndpointsConfigurationOutput {
	return i.ToFlowEndpointsConfigurationOutputWithContext(context.Background())
}

func (i FlowEndpointsConfigurationArgs) ToFlowEndpointsConfigurationOutputWithContext(ctx context.Context) FlowEndpointsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowEndpointsConfigurationOutput)
}

func (i FlowEndpointsConfigurationArgs) ToFlowEndpointsConfigurationPtrOutput() FlowEndpointsConfigurationPtrOutput {
	return i.ToFlowEndpointsConfigurationPtrOutputWithContext(context.Background())
}

func (i FlowEndpointsConfigurationArgs) ToFlowEndpointsConfigurationPtrOutputWithContext(ctx context.Context) FlowEndpointsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowEndpointsConfigurationOutput).ToFlowEndpointsConfigurationPtrOutputWithContext(ctx)
}

// FlowEndpointsConfigurationPtrInput is an input type that accepts FlowEndpointsConfigurationArgs, FlowEndpointsConfigurationPtr and FlowEndpointsConfigurationPtrOutput values.
// You can construct a concrete instance of `FlowEndpointsConfigurationPtrInput` via:
//
//          FlowEndpointsConfigurationArgs{...}
//
//  or:
//
//          nil
type FlowEndpointsConfigurationPtrInput interface {
	pulumi.Input

	ToFlowEndpointsConfigurationPtrOutput() FlowEndpointsConfigurationPtrOutput
	ToFlowEndpointsConfigurationPtrOutputWithContext(context.Context) FlowEndpointsConfigurationPtrOutput
}

type flowEndpointsConfigurationPtrType FlowEndpointsConfigurationArgs

func FlowEndpointsConfigurationPtr(v *FlowEndpointsConfigurationArgs) FlowEndpointsConfigurationPtrInput {
	return (*flowEndpointsConfigurationPtrType)(v)
}

func (*flowEndpointsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowEndpointsConfiguration)(nil)).Elem()
}

func (i *flowEndpointsConfigurationPtrType) ToFlowEndpointsConfigurationPtrOutput() FlowEndpointsConfigurationPtrOutput {
	return i.ToFlowEndpointsConfigurationPtrOutputWithContext(context.Background())
}

func (i *flowEndpointsConfigurationPtrType) ToFlowEndpointsConfigurationPtrOutputWithContext(ctx context.Context) FlowEndpointsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowEndpointsConfigurationPtrOutput)
}

// The endpoints configuration.
type FlowEndpointsConfigurationResponse struct {
	// The connector endpoints.
	Connector *FlowEndpointsResponse `pulumi:"connector"`
	// The workflow endpoints.
	Workflow *FlowEndpointsResponse `pulumi:"workflow"`
}

// The endpoints configuration.
type FlowEndpointsConfigurationResponseOutput struct{ *pulumi.OutputState }

func (FlowEndpointsConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowEndpointsConfigurationResponse)(nil)).Elem()
}

func (o FlowEndpointsConfigurationResponseOutput) ToFlowEndpointsConfigurationResponseOutput() FlowEndpointsConfigurationResponseOutput {
	return o
}

func (o FlowEndpointsConfigurationResponseOutput) ToFlowEndpointsConfigurationResponseOutputWithContext(ctx context.Context) FlowEndpointsConfigurationResponseOutput {
	return o
}

func (o FlowEndpointsConfigurationResponseOutput) ToFlowEndpointsConfigurationResponsePtrOutput() FlowEndpointsConfigurationResponsePtrOutput {
	return o.ToFlowEndpointsConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o FlowEndpointsConfigurationResponseOutput) ToFlowEndpointsConfigurationResponsePtrOutputWithContext(ctx context.Context) FlowEndpointsConfigurationResponsePtrOutput {
	return o.ApplyT(func(v FlowEndpointsConfigurationResponse) *FlowEndpointsConfigurationResponse {
		return &v
	}).(FlowEndpointsConfigurationResponsePtrOutput)
}

// The connector endpoints.
func (o FlowEndpointsConfigurationResponseOutput) Connector() FlowEndpointsResponsePtrOutput {
	return o.ApplyT(func(v FlowEndpointsConfigurationResponse) *FlowEndpointsResponse { return v.Connector }).(FlowEndpointsResponsePtrOutput)
}

// The workflow endpoints.
func (o FlowEndpointsConfigurationResponseOutput) Workflow() FlowEndpointsResponsePtrOutput {
	return o.ApplyT(func(v FlowEndpointsConfigurationResponse) *FlowEndpointsResponse { return v.Workflow }).(FlowEndpointsResponsePtrOutput)
}

type FlowEndpointsConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (FlowEndpointsConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowEndpointsConfigurationResponse)(nil)).Elem()
}

func (o FlowEndpointsConfigurationResponsePtrOutput) ToFlowEndpointsConfigurationResponsePtrOutput() FlowEndpointsConfigurationResponsePtrOutput {
	return o
}

func (o FlowEndpointsConfigurationResponsePtrOutput) ToFlowEndpointsConfigurationResponsePtrOutputWithContext(ctx context.Context) FlowEndpointsConfigurationResponsePtrOutput {
	return o
}

func (o FlowEndpointsConfigurationResponsePtrOutput) Elem() FlowEndpointsConfigurationResponseOutput {
	return o.ApplyT(func(v *FlowEndpointsConfigurationResponse) FlowEndpointsConfigurationResponse { return *v }).(FlowEndpointsConfigurationResponseOutput)
}

// The connector endpoints.
func (o FlowEndpointsConfigurationResponsePtrOutput) Connector() FlowEndpointsResponsePtrOutput {
	return o.ApplyT(func(v *FlowEndpointsConfigurationResponse) *FlowEndpointsResponse {
		if v == nil {
			return nil
		}
		return v.Connector
	}).(FlowEndpointsResponsePtrOutput)
}

// The workflow endpoints.
func (o FlowEndpointsConfigurationResponsePtrOutput) Workflow() FlowEndpointsResponsePtrOutput {
	return o.ApplyT(func(v *FlowEndpointsConfigurationResponse) *FlowEndpointsResponse {
		if v == nil {
			return nil
		}
		return v.Workflow
	}).(FlowEndpointsResponsePtrOutput)
}

// The flow endpoints configuration.
type FlowEndpointsResponse struct {
	// The access endpoint ip address.
	AccessEndpointIpAddresses []IpAddressResponse `pulumi:"accessEndpointIpAddresses"`
	// The outgoing ip address.
	OutgoingIpAddresses []IpAddressResponse `pulumi:"outgoingIpAddresses"`
}

// The flow endpoints configuration.
type FlowEndpointsResponseOutput struct{ *pulumi.OutputState }

func (FlowEndpointsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowEndpointsResponse)(nil)).Elem()
}

func (o FlowEndpointsResponseOutput) ToFlowEndpointsResponseOutput() FlowEndpointsResponseOutput {
	return o
}

func (o FlowEndpointsResponseOutput) ToFlowEndpointsResponseOutputWithContext(ctx context.Context) FlowEndpointsResponseOutput {
	return o
}

func (o FlowEndpointsResponseOutput) ToFlowEndpointsResponsePtrOutput() FlowEndpointsResponsePtrOutput {
	return o.ToFlowEndpointsResponsePtrOutputWithContext(context.Background())
}

func (o FlowEndpointsResponseOutput) ToFlowEndpointsResponsePtrOutputWithContext(ctx context.Context) FlowEndpointsResponsePtrOutput {
	return o.ApplyT(func(v FlowEndpointsResponse) *FlowEndpointsResponse {
		return &v
	}).(FlowEndpointsResponsePtrOutput)
}

// The access endpoint ip address.
func (o FlowEndpointsResponseOutput) AccessEndpointIpAddresses() IpAddressResponseArrayOutput {
	return o.ApplyT(func(v FlowEndpointsResponse) []IpAddressResponse { return v.AccessEndpointIpAddresses }).(IpAddressResponseArrayOutput)
}

// The outgoing ip address.
func (o FlowEndpointsResponseOutput) OutgoingIpAddresses() IpAddressResponseArrayOutput {
	return o.ApplyT(func(v FlowEndpointsResponse) []IpAddressResponse { return v.OutgoingIpAddresses }).(IpAddressResponseArrayOutput)
}

type FlowEndpointsResponsePtrOutput struct{ *pulumi.OutputState }

func (FlowEndpointsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowEndpointsResponse)(nil)).Elem()
}

func (o FlowEndpointsResponsePtrOutput) ToFlowEndpointsResponsePtrOutput() FlowEndpointsResponsePtrOutput {
	return o
}

func (o FlowEndpointsResponsePtrOutput) ToFlowEndpointsResponsePtrOutputWithContext(ctx context.Context) FlowEndpointsResponsePtrOutput {
	return o
}

func (o FlowEndpointsResponsePtrOutput) Elem() FlowEndpointsResponseOutput {
	return o.ApplyT(func(v *FlowEndpointsResponse) FlowEndpointsResponse { return *v }).(FlowEndpointsResponseOutput)
}

// The access endpoint ip address.
func (o FlowEndpointsResponsePtrOutput) AccessEndpointIpAddresses() IpAddressResponseArrayOutput {
	return o.ApplyT(func(v *FlowEndpointsResponse) []IpAddressResponse {
		if v == nil {
			return nil
		}
		return v.AccessEndpointIpAddresses
	}).(IpAddressResponseArrayOutput)
}

// The outgoing ip address.
func (o FlowEndpointsResponsePtrOutput) OutgoingIpAddresses() IpAddressResponseArrayOutput {
	return o.ApplyT(func(v *FlowEndpointsResponse) []IpAddressResponse {
		if v == nil {
			return nil
		}
		return v.OutgoingIpAddresses
	}).(IpAddressResponseArrayOutput)
}

// The parameters schema of integration account map.
type IntegrationAccountMapPropertiesParametersSchema struct {
	// The reference name.
	Ref *string `pulumi:"ref"`
}

// IntegrationAccountMapPropertiesParametersSchemaInput is an input type that accepts IntegrationAccountMapPropertiesParametersSchemaArgs and IntegrationAccountMapPropertiesParametersSchemaOutput values.
// You can construct a concrete instance of `IntegrationAccountMapPropertiesParametersSchemaInput` via:
//
//          IntegrationAccountMapPropertiesParametersSchemaArgs{...}
type IntegrationAccountMapPropertiesParametersSchemaInput interface {
	pulumi.Input

	ToIntegrationAccountMapPropertiesParametersSchemaOutput() IntegrationAccountMapPropertiesParametersSchemaOutput
	ToIntegrationAccountMapPropertiesParametersSchemaOutputWithContext(context.Context) IntegrationAccountMapPropertiesParametersSchemaOutput
}

// The parameters schema of integration account map.
type IntegrationAccountMapPropertiesParametersSchemaArgs struct {
	// The reference name.
	Ref pulumi.StringPtrInput `pulumi:"ref"`
}

func (IntegrationAccountMapPropertiesParametersSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountMapPropertiesParametersSchema)(nil)).Elem()
}

func (i IntegrationAccountMapPropertiesParametersSchemaArgs) ToIntegrationAccountMapPropertiesParametersSchemaOutput() IntegrationAccountMapPropertiesParametersSchemaOutput {
	return i.ToIntegrationAccountMapPropertiesParametersSchemaOutputWithContext(context.Background())
}

func (i IntegrationAccountMapPropertiesParametersSchemaArgs) ToIntegrationAccountMapPropertiesParametersSchemaOutputWithContext(ctx context.Context) IntegrationAccountMapPropertiesParametersSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountMapPropertiesParametersSchemaOutput)
}

func (i IntegrationAccountMapPropertiesParametersSchemaArgs) ToIntegrationAccountMapPropertiesParametersSchemaPtrOutput() IntegrationAccountMapPropertiesParametersSchemaPtrOutput {
	return i.ToIntegrationAccountMapPropertiesParametersSchemaPtrOutputWithContext(context.Background())
}

func (i IntegrationAccountMapPropertiesParametersSchemaArgs) ToIntegrationAccountMapPropertiesParametersSchemaPtrOutputWithContext(ctx context.Context) IntegrationAccountMapPropertiesParametersSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountMapPropertiesParametersSchemaOutput).ToIntegrationAccountMapPropertiesParametersSchemaPtrOutputWithContext(ctx)
}

// IntegrationAccountMapPropertiesParametersSchemaPtrInput is an input type that accepts IntegrationAccountMapPropertiesParametersSchemaArgs, IntegrationAccountMapPropertiesParametersSchemaPtr and IntegrationAccountMapPropertiesParametersSchemaPtrOutput values.
// You can construct a concrete instance of `IntegrationAccountMapPropertiesParametersSchemaPtrInput` via:
//
//          IntegrationAccountMapPropertiesParametersSchemaArgs{...}
//
//  or:
//
//          nil
type IntegrationAccountMapPropertiesParametersSchemaPtrInput interface {
	pulumi.Input

	ToIntegrationAccountMapPropertiesParametersSchemaPtrOutput() IntegrationAccountMapPropertiesParametersSchemaPtrOutput
	ToIntegrationAccountMapPropertiesParametersSchemaPtrOutputWithContext(context.Context) IntegrationAccountMapPropertiesParametersSchemaPtrOutput
}

type integrationAccountMapPropertiesParametersSchemaPtrType IntegrationAccountMapPropertiesParametersSchemaArgs

func IntegrationAccountMapPropertiesParametersSchemaPtr(v *IntegrationAccountMapPropertiesParametersSchemaArgs) IntegrationAccountMapPropertiesParametersSchemaPtrInput {
	return (*integrationAccountMapPropertiesParametersSchemaPtrType)(v)
}

func (*integrationAccountMapPropertiesParametersSchemaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountMapPropertiesParametersSchema)(nil)).Elem()
}

func (i *integrationAccountMapPropertiesParametersSchemaPtrType) ToIntegrationAccountMapPropertiesParametersSchemaPtrOutput() IntegrationAccountMapPropertiesParametersSchemaPtrOutput {
	return i.ToIntegrationAccountMapPropertiesParametersSchemaPtrOutputWithContext(context.Background())
}

func (i *integrationAccountMapPropertiesParametersSchemaPtrType) ToIntegrationAccountMapPropertiesParametersSchemaPtrOutputWithContext(ctx context.Context) IntegrationAccountMapPropertiesParametersSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountMapPropertiesParametersSchemaPtrOutput)
}

// The parameters schema of integration account map.
type IntegrationAccountMapPropertiesResponseParametersSchema struct {
	// The reference name.
	Ref *string `pulumi:"ref"`
}

// The parameters schema of integration account map.
type IntegrationAccountMapPropertiesResponseParametersSchemaOutput struct{ *pulumi.OutputState }

func (IntegrationAccountMapPropertiesResponseParametersSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountMapPropertiesResponseParametersSchema)(nil)).Elem()
}

func (o IntegrationAccountMapPropertiesResponseParametersSchemaOutput) ToIntegrationAccountMapPropertiesResponseParametersSchemaOutput() IntegrationAccountMapPropertiesResponseParametersSchemaOutput {
	return o
}

func (o IntegrationAccountMapPropertiesResponseParametersSchemaOutput) ToIntegrationAccountMapPropertiesResponseParametersSchemaOutputWithContext(ctx context.Context) IntegrationAccountMapPropertiesResponseParametersSchemaOutput {
	return o
}

func (o IntegrationAccountMapPropertiesResponseParametersSchemaOutput) ToIntegrationAccountMapPropertiesResponseParametersSchemaPtrOutput() IntegrationAccountMapPropertiesResponseParametersSchemaPtrOutput {
	return o.ToIntegrationAccountMapPropertiesResponseParametersSchemaPtrOutputWithContext(context.Background())
}

func (o IntegrationAccountMapPropertiesResponseParametersSchemaOutput) ToIntegrationAccountMapPropertiesResponseParametersSchemaPtrOutputWithContext(ctx context.Context) IntegrationAccountMapPropertiesResponseParametersSchemaPtrOutput {
	return o.ApplyT(func(v IntegrationAccountMapPropertiesResponseParametersSchema) *IntegrationAccountMapPropertiesResponseParametersSchema {
		return &v
	}).(IntegrationAccountMapPropertiesResponseParametersSchemaPtrOutput)
}

// The reference name.
func (o IntegrationAccountMapPropertiesResponseParametersSchemaOutput) Ref() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationAccountMapPropertiesResponseParametersSchema) *string { return v.Ref }).(pulumi.StringPtrOutput)
}

type IntegrationAccountMapPropertiesResponseParametersSchemaPtrOutput struct{ *pulumi.OutputState }

func (IntegrationAccountMapPropertiesResponseParametersSchemaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountMapPropertiesResponseParametersSchema)(nil)).Elem()
}

func (o IntegrationAccountMapPropertiesResponseParametersSchemaPtrOutput) ToIntegrationAccountMapPropertiesResponseParametersSchemaPtrOutput() IntegrationAccountMapPropertiesResponseParametersSchemaPtrOutput {
	return o
}

func (o IntegrationAccountMapPropertiesResponseParametersSchemaPtrOutput) ToIntegrationAccountMapPropertiesResponseParametersSchemaPtrOutputWithContext(ctx context.Context) IntegrationAccountMapPropertiesResponseParametersSchemaPtrOutput {
	return o
}

func (o IntegrationAccountMapPropertiesResponseParametersSchemaPtrOutput) Elem() IntegrationAccountMapPropertiesResponseParametersSchemaOutput {
	return o.ApplyT(func(v *IntegrationAccountMapPropertiesResponseParametersSchema) IntegrationAccountMapPropertiesResponseParametersSchema {
		return *v
	}).(IntegrationAccountMapPropertiesResponseParametersSchemaOutput)
}

// The reference name.
func (o IntegrationAccountMapPropertiesResponseParametersSchemaPtrOutput) Ref() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountMapPropertiesResponseParametersSchema) *string {
		if v == nil {
			return nil
		}
		return v.Ref
	}).(pulumi.StringPtrOutput)
}

// The integration account sku.
type IntegrationAccountSku struct {
	// The sku name.
	Name string `pulumi:"name"`
}

// IntegrationAccountSkuInput is an input type that accepts IntegrationAccountSkuArgs and IntegrationAccountSkuOutput values.
// You can construct a concrete instance of `IntegrationAccountSkuInput` via:
//
//          IntegrationAccountSkuArgs{...}
type IntegrationAccountSkuInput interface {
	pulumi.Input

	ToIntegrationAccountSkuOutput() IntegrationAccountSkuOutput
	ToIntegrationAccountSkuOutputWithContext(context.Context) IntegrationAccountSkuOutput
}

// The integration account sku.
type IntegrationAccountSkuArgs struct {
	// The sku name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (IntegrationAccountSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountSku)(nil)).Elem()
}

func (i IntegrationAccountSkuArgs) ToIntegrationAccountSkuOutput() IntegrationAccountSkuOutput {
	return i.ToIntegrationAccountSkuOutputWithContext(context.Background())
}

func (i IntegrationAccountSkuArgs) ToIntegrationAccountSkuOutputWithContext(ctx context.Context) IntegrationAccountSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountSkuOutput)
}

func (i IntegrationAccountSkuArgs) ToIntegrationAccountSkuPtrOutput() IntegrationAccountSkuPtrOutput {
	return i.ToIntegrationAccountSkuPtrOutputWithContext(context.Background())
}

func (i IntegrationAccountSkuArgs) ToIntegrationAccountSkuPtrOutputWithContext(ctx context.Context) IntegrationAccountSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountSkuOutput).ToIntegrationAccountSkuPtrOutputWithContext(ctx)
}

// IntegrationAccountSkuPtrInput is an input type that accepts IntegrationAccountSkuArgs, IntegrationAccountSkuPtr and IntegrationAccountSkuPtrOutput values.
// You can construct a concrete instance of `IntegrationAccountSkuPtrInput` via:
//
//          IntegrationAccountSkuArgs{...}
//
//  or:
//
//          nil
type IntegrationAccountSkuPtrInput interface {
	pulumi.Input

	ToIntegrationAccountSkuPtrOutput() IntegrationAccountSkuPtrOutput
	ToIntegrationAccountSkuPtrOutputWithContext(context.Context) IntegrationAccountSkuPtrOutput
}

type integrationAccountSkuPtrType IntegrationAccountSkuArgs

func IntegrationAccountSkuPtr(v *IntegrationAccountSkuArgs) IntegrationAccountSkuPtrInput {
	return (*integrationAccountSkuPtrType)(v)
}

func (*integrationAccountSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountSku)(nil)).Elem()
}

func (i *integrationAccountSkuPtrType) ToIntegrationAccountSkuPtrOutput() IntegrationAccountSkuPtrOutput {
	return i.ToIntegrationAccountSkuPtrOutputWithContext(context.Background())
}

func (i *integrationAccountSkuPtrType) ToIntegrationAccountSkuPtrOutputWithContext(ctx context.Context) IntegrationAccountSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountSkuPtrOutput)
}

// The integration account sku.
type IntegrationAccountSkuResponse struct {
	// The sku name.
	Name string `pulumi:"name"`
}

// The integration account sku.
type IntegrationAccountSkuResponseOutput struct{ *pulumi.OutputState }

func (IntegrationAccountSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountSkuResponse)(nil)).Elem()
}

func (o IntegrationAccountSkuResponseOutput) ToIntegrationAccountSkuResponseOutput() IntegrationAccountSkuResponseOutput {
	return o
}

func (o IntegrationAccountSkuResponseOutput) ToIntegrationAccountSkuResponseOutputWithContext(ctx context.Context) IntegrationAccountSkuResponseOutput {
	return o
}

func (o IntegrationAccountSkuResponseOutput) ToIntegrationAccountSkuResponsePtrOutput() IntegrationAccountSkuResponsePtrOutput {
	return o.ToIntegrationAccountSkuResponsePtrOutputWithContext(context.Background())
}

func (o IntegrationAccountSkuResponseOutput) ToIntegrationAccountSkuResponsePtrOutputWithContext(ctx context.Context) IntegrationAccountSkuResponsePtrOutput {
	return o.ApplyT(func(v IntegrationAccountSkuResponse) *IntegrationAccountSkuResponse {
		return &v
	}).(IntegrationAccountSkuResponsePtrOutput)
}

// The sku name.
func (o IntegrationAccountSkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationAccountSkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

type IntegrationAccountSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (IntegrationAccountSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountSkuResponse)(nil)).Elem()
}

func (o IntegrationAccountSkuResponsePtrOutput) ToIntegrationAccountSkuResponsePtrOutput() IntegrationAccountSkuResponsePtrOutput {
	return o
}

func (o IntegrationAccountSkuResponsePtrOutput) ToIntegrationAccountSkuResponsePtrOutputWithContext(ctx context.Context) IntegrationAccountSkuResponsePtrOutput {
	return o
}

func (o IntegrationAccountSkuResponsePtrOutput) Elem() IntegrationAccountSkuResponseOutput {
	return o.ApplyT(func(v *IntegrationAccountSkuResponse) IntegrationAccountSkuResponse { return *v }).(IntegrationAccountSkuResponseOutput)
}

// The sku name.
func (o IntegrationAccountSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountSkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The integration service environment.
type IntegrationServiceEnvironmentType struct {
	// The resource location.
	Location *string `pulumi:"location"`
	// The integration service environment properties.
	Properties *IntegrationServiceEnvironmentProperties `pulumi:"properties"`
	// The sku.
	Sku *IntegrationServiceEnvironmentSku `pulumi:"sku"`
	// The resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// IntegrationServiceEnvironmentTypeInput is an input type that accepts IntegrationServiceEnvironmentTypeArgs and IntegrationServiceEnvironmentTypeOutput values.
// You can construct a concrete instance of `IntegrationServiceEnvironmentTypeInput` via:
//
//          IntegrationServiceEnvironmentTypeArgs{...}
type IntegrationServiceEnvironmentTypeInput interface {
	pulumi.Input

	ToIntegrationServiceEnvironmentTypeOutput() IntegrationServiceEnvironmentTypeOutput
	ToIntegrationServiceEnvironmentTypeOutputWithContext(context.Context) IntegrationServiceEnvironmentTypeOutput
}

// The integration service environment.
type IntegrationServiceEnvironmentTypeArgs struct {
	// The resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The integration service environment properties.
	Properties IntegrationServiceEnvironmentPropertiesPtrInput `pulumi:"properties"`
	// The sku.
	Sku IntegrationServiceEnvironmentSkuPtrInput `pulumi:"sku"`
	// The resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (IntegrationServiceEnvironmentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationServiceEnvironmentType)(nil)).Elem()
}

func (i IntegrationServiceEnvironmentTypeArgs) ToIntegrationServiceEnvironmentTypeOutput() IntegrationServiceEnvironmentTypeOutput {
	return i.ToIntegrationServiceEnvironmentTypeOutputWithContext(context.Background())
}

func (i IntegrationServiceEnvironmentTypeArgs) ToIntegrationServiceEnvironmentTypeOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationServiceEnvironmentTypeOutput)
}

func (i IntegrationServiceEnvironmentTypeArgs) ToIntegrationServiceEnvironmentTypePtrOutput() IntegrationServiceEnvironmentTypePtrOutput {
	return i.ToIntegrationServiceEnvironmentTypePtrOutputWithContext(context.Background())
}

func (i IntegrationServiceEnvironmentTypeArgs) ToIntegrationServiceEnvironmentTypePtrOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationServiceEnvironmentTypeOutput).ToIntegrationServiceEnvironmentTypePtrOutputWithContext(ctx)
}

// IntegrationServiceEnvironmentTypePtrInput is an input type that accepts IntegrationServiceEnvironmentTypeArgs, IntegrationServiceEnvironmentTypePtr and IntegrationServiceEnvironmentTypePtrOutput values.
// You can construct a concrete instance of `IntegrationServiceEnvironmentTypePtrInput` via:
//
//          IntegrationServiceEnvironmentTypeArgs{...}
//
//  or:
//
//          nil
type IntegrationServiceEnvironmentTypePtrInput interface {
	pulumi.Input

	ToIntegrationServiceEnvironmentTypePtrOutput() IntegrationServiceEnvironmentTypePtrOutput
	ToIntegrationServiceEnvironmentTypePtrOutputWithContext(context.Context) IntegrationServiceEnvironmentTypePtrOutput
}

type integrationServiceEnvironmentTypePtrType IntegrationServiceEnvironmentTypeArgs

func IntegrationServiceEnvironmentTypePtr(v *IntegrationServiceEnvironmentTypeArgs) IntegrationServiceEnvironmentTypePtrInput {
	return (*integrationServiceEnvironmentTypePtrType)(v)
}

func (*integrationServiceEnvironmentTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationServiceEnvironmentType)(nil)).Elem()
}

func (i *integrationServiceEnvironmentTypePtrType) ToIntegrationServiceEnvironmentTypePtrOutput() IntegrationServiceEnvironmentTypePtrOutput {
	return i.ToIntegrationServiceEnvironmentTypePtrOutputWithContext(context.Background())
}

func (i *integrationServiceEnvironmentTypePtrType) ToIntegrationServiceEnvironmentTypePtrOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationServiceEnvironmentTypePtrOutput)
}

// The integration service environment access endpoint.
type IntegrationServiceEnvironmentAccessEndpoint struct {
	// The access endpoint type.
	Type *string `pulumi:"type"`
}

// IntegrationServiceEnvironmentAccessEndpointInput is an input type that accepts IntegrationServiceEnvironmentAccessEndpointArgs and IntegrationServiceEnvironmentAccessEndpointOutput values.
// You can construct a concrete instance of `IntegrationServiceEnvironmentAccessEndpointInput` via:
//
//          IntegrationServiceEnvironmentAccessEndpointArgs{...}
type IntegrationServiceEnvironmentAccessEndpointInput interface {
	pulumi.Input

	ToIntegrationServiceEnvironmentAccessEndpointOutput() IntegrationServiceEnvironmentAccessEndpointOutput
	ToIntegrationServiceEnvironmentAccessEndpointOutputWithContext(context.Context) IntegrationServiceEnvironmentAccessEndpointOutput
}

// The integration service environment access endpoint.
type IntegrationServiceEnvironmentAccessEndpointArgs struct {
	// The access endpoint type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IntegrationServiceEnvironmentAccessEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationServiceEnvironmentAccessEndpoint)(nil)).Elem()
}

func (i IntegrationServiceEnvironmentAccessEndpointArgs) ToIntegrationServiceEnvironmentAccessEndpointOutput() IntegrationServiceEnvironmentAccessEndpointOutput {
	return i.ToIntegrationServiceEnvironmentAccessEndpointOutputWithContext(context.Background())
}

func (i IntegrationServiceEnvironmentAccessEndpointArgs) ToIntegrationServiceEnvironmentAccessEndpointOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentAccessEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationServiceEnvironmentAccessEndpointOutput)
}

func (i IntegrationServiceEnvironmentAccessEndpointArgs) ToIntegrationServiceEnvironmentAccessEndpointPtrOutput() IntegrationServiceEnvironmentAccessEndpointPtrOutput {
	return i.ToIntegrationServiceEnvironmentAccessEndpointPtrOutputWithContext(context.Background())
}

func (i IntegrationServiceEnvironmentAccessEndpointArgs) ToIntegrationServiceEnvironmentAccessEndpointPtrOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentAccessEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationServiceEnvironmentAccessEndpointOutput).ToIntegrationServiceEnvironmentAccessEndpointPtrOutputWithContext(ctx)
}

// IntegrationServiceEnvironmentAccessEndpointPtrInput is an input type that accepts IntegrationServiceEnvironmentAccessEndpointArgs, IntegrationServiceEnvironmentAccessEndpointPtr and IntegrationServiceEnvironmentAccessEndpointPtrOutput values.
// You can construct a concrete instance of `IntegrationServiceEnvironmentAccessEndpointPtrInput` via:
//
//          IntegrationServiceEnvironmentAccessEndpointArgs{...}
//
//  or:
//
//          nil
type IntegrationServiceEnvironmentAccessEndpointPtrInput interface {
	pulumi.Input

	ToIntegrationServiceEnvironmentAccessEndpointPtrOutput() IntegrationServiceEnvironmentAccessEndpointPtrOutput
	ToIntegrationServiceEnvironmentAccessEndpointPtrOutputWithContext(context.Context) IntegrationServiceEnvironmentAccessEndpointPtrOutput
}

type integrationServiceEnvironmentAccessEndpointPtrType IntegrationServiceEnvironmentAccessEndpointArgs

func IntegrationServiceEnvironmentAccessEndpointPtr(v *IntegrationServiceEnvironmentAccessEndpointArgs) IntegrationServiceEnvironmentAccessEndpointPtrInput {
	return (*integrationServiceEnvironmentAccessEndpointPtrType)(v)
}

func (*integrationServiceEnvironmentAccessEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationServiceEnvironmentAccessEndpoint)(nil)).Elem()
}

func (i *integrationServiceEnvironmentAccessEndpointPtrType) ToIntegrationServiceEnvironmentAccessEndpointPtrOutput() IntegrationServiceEnvironmentAccessEndpointPtrOutput {
	return i.ToIntegrationServiceEnvironmentAccessEndpointPtrOutputWithContext(context.Background())
}

func (i *integrationServiceEnvironmentAccessEndpointPtrType) ToIntegrationServiceEnvironmentAccessEndpointPtrOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentAccessEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationServiceEnvironmentAccessEndpointPtrOutput)
}

// The integration service environment access endpoint.
type IntegrationServiceEnvironmentAccessEndpointResponse struct {
	// The access endpoint type.
	Type *string `pulumi:"type"`
}

// The integration service environment access endpoint.
type IntegrationServiceEnvironmentAccessEndpointResponseOutput struct{ *pulumi.OutputState }

func (IntegrationServiceEnvironmentAccessEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationServiceEnvironmentAccessEndpointResponse)(nil)).Elem()
}

func (o IntegrationServiceEnvironmentAccessEndpointResponseOutput) ToIntegrationServiceEnvironmentAccessEndpointResponseOutput() IntegrationServiceEnvironmentAccessEndpointResponseOutput {
	return o
}

func (o IntegrationServiceEnvironmentAccessEndpointResponseOutput) ToIntegrationServiceEnvironmentAccessEndpointResponseOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentAccessEndpointResponseOutput {
	return o
}

func (o IntegrationServiceEnvironmentAccessEndpointResponseOutput) ToIntegrationServiceEnvironmentAccessEndpointResponsePtrOutput() IntegrationServiceEnvironmentAccessEndpointResponsePtrOutput {
	return o.ToIntegrationServiceEnvironmentAccessEndpointResponsePtrOutputWithContext(context.Background())
}

func (o IntegrationServiceEnvironmentAccessEndpointResponseOutput) ToIntegrationServiceEnvironmentAccessEndpointResponsePtrOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentAccessEndpointResponsePtrOutput {
	return o.ApplyT(func(v IntegrationServiceEnvironmentAccessEndpointResponse) *IntegrationServiceEnvironmentAccessEndpointResponse {
		return &v
	}).(IntegrationServiceEnvironmentAccessEndpointResponsePtrOutput)
}

// The access endpoint type.
func (o IntegrationServiceEnvironmentAccessEndpointResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationServiceEnvironmentAccessEndpointResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IntegrationServiceEnvironmentAccessEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (IntegrationServiceEnvironmentAccessEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationServiceEnvironmentAccessEndpointResponse)(nil)).Elem()
}

func (o IntegrationServiceEnvironmentAccessEndpointResponsePtrOutput) ToIntegrationServiceEnvironmentAccessEndpointResponsePtrOutput() IntegrationServiceEnvironmentAccessEndpointResponsePtrOutput {
	return o
}

func (o IntegrationServiceEnvironmentAccessEndpointResponsePtrOutput) ToIntegrationServiceEnvironmentAccessEndpointResponsePtrOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentAccessEndpointResponsePtrOutput {
	return o
}

func (o IntegrationServiceEnvironmentAccessEndpointResponsePtrOutput) Elem() IntegrationServiceEnvironmentAccessEndpointResponseOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentAccessEndpointResponse) IntegrationServiceEnvironmentAccessEndpointResponse {
		return *v
	}).(IntegrationServiceEnvironmentAccessEndpointResponseOutput)
}

// The access endpoint type.
func (o IntegrationServiceEnvironmentAccessEndpointResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentAccessEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The integration service environment properties.
type IntegrationServiceEnvironmentProperties struct {
	// The endpoints configuration.
	EndpointsConfiguration *FlowEndpointsConfiguration `pulumi:"endpointsConfiguration"`
	// Gets the tracking id.
	IntegrationServiceEnvironmentId *string `pulumi:"integrationServiceEnvironmentId"`
	// The network configuration.
	NetworkConfiguration *NetworkConfiguration `pulumi:"networkConfiguration"`
	// The provisioning state.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The integration service environment state.
	State *string `pulumi:"state"`
}

// IntegrationServiceEnvironmentPropertiesInput is an input type that accepts IntegrationServiceEnvironmentPropertiesArgs and IntegrationServiceEnvironmentPropertiesOutput values.
// You can construct a concrete instance of `IntegrationServiceEnvironmentPropertiesInput` via:
//
//          IntegrationServiceEnvironmentPropertiesArgs{...}
type IntegrationServiceEnvironmentPropertiesInput interface {
	pulumi.Input

	ToIntegrationServiceEnvironmentPropertiesOutput() IntegrationServiceEnvironmentPropertiesOutput
	ToIntegrationServiceEnvironmentPropertiesOutputWithContext(context.Context) IntegrationServiceEnvironmentPropertiesOutput
}

// The integration service environment properties.
type IntegrationServiceEnvironmentPropertiesArgs struct {
	// The endpoints configuration.
	EndpointsConfiguration FlowEndpointsConfigurationPtrInput `pulumi:"endpointsConfiguration"`
	// Gets the tracking id.
	IntegrationServiceEnvironmentId pulumi.StringPtrInput `pulumi:"integrationServiceEnvironmentId"`
	// The network configuration.
	NetworkConfiguration NetworkConfigurationPtrInput `pulumi:"networkConfiguration"`
	// The provisioning state.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The integration service environment state.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (IntegrationServiceEnvironmentPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationServiceEnvironmentProperties)(nil)).Elem()
}

func (i IntegrationServiceEnvironmentPropertiesArgs) ToIntegrationServiceEnvironmentPropertiesOutput() IntegrationServiceEnvironmentPropertiesOutput {
	return i.ToIntegrationServiceEnvironmentPropertiesOutputWithContext(context.Background())
}

func (i IntegrationServiceEnvironmentPropertiesArgs) ToIntegrationServiceEnvironmentPropertiesOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationServiceEnvironmentPropertiesOutput)
}

func (i IntegrationServiceEnvironmentPropertiesArgs) ToIntegrationServiceEnvironmentPropertiesPtrOutput() IntegrationServiceEnvironmentPropertiesPtrOutput {
	return i.ToIntegrationServiceEnvironmentPropertiesPtrOutputWithContext(context.Background())
}

func (i IntegrationServiceEnvironmentPropertiesArgs) ToIntegrationServiceEnvironmentPropertiesPtrOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationServiceEnvironmentPropertiesOutput).ToIntegrationServiceEnvironmentPropertiesPtrOutputWithContext(ctx)
}

// IntegrationServiceEnvironmentPropertiesPtrInput is an input type that accepts IntegrationServiceEnvironmentPropertiesArgs, IntegrationServiceEnvironmentPropertiesPtr and IntegrationServiceEnvironmentPropertiesPtrOutput values.
// You can construct a concrete instance of `IntegrationServiceEnvironmentPropertiesPtrInput` via:
//
//          IntegrationServiceEnvironmentPropertiesArgs{...}
//
//  or:
//
//          nil
type IntegrationServiceEnvironmentPropertiesPtrInput interface {
	pulumi.Input

	ToIntegrationServiceEnvironmentPropertiesPtrOutput() IntegrationServiceEnvironmentPropertiesPtrOutput
	ToIntegrationServiceEnvironmentPropertiesPtrOutputWithContext(context.Context) IntegrationServiceEnvironmentPropertiesPtrOutput
}

type integrationServiceEnvironmentPropertiesPtrType IntegrationServiceEnvironmentPropertiesArgs

func IntegrationServiceEnvironmentPropertiesPtr(v *IntegrationServiceEnvironmentPropertiesArgs) IntegrationServiceEnvironmentPropertiesPtrInput {
	return (*integrationServiceEnvironmentPropertiesPtrType)(v)
}

func (*integrationServiceEnvironmentPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationServiceEnvironmentProperties)(nil)).Elem()
}

func (i *integrationServiceEnvironmentPropertiesPtrType) ToIntegrationServiceEnvironmentPropertiesPtrOutput() IntegrationServiceEnvironmentPropertiesPtrOutput {
	return i.ToIntegrationServiceEnvironmentPropertiesPtrOutputWithContext(context.Background())
}

func (i *integrationServiceEnvironmentPropertiesPtrType) ToIntegrationServiceEnvironmentPropertiesPtrOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationServiceEnvironmentPropertiesPtrOutput)
}

// The integration service environment properties.
type IntegrationServiceEnvironmentPropertiesResponse struct {
	// The endpoints configuration.
	EndpointsConfiguration *FlowEndpointsConfigurationResponse `pulumi:"endpointsConfiguration"`
	// Gets the tracking id.
	IntegrationServiceEnvironmentId *string `pulumi:"integrationServiceEnvironmentId"`
	// The network configuration.
	NetworkConfiguration *NetworkConfigurationResponse `pulumi:"networkConfiguration"`
	// The provisioning state.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The integration service environment state.
	State *string `pulumi:"state"`
}

// The integration service environment properties.
type IntegrationServiceEnvironmentPropertiesResponseOutput struct{ *pulumi.OutputState }

func (IntegrationServiceEnvironmentPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationServiceEnvironmentPropertiesResponse)(nil)).Elem()
}

func (o IntegrationServiceEnvironmentPropertiesResponseOutput) ToIntegrationServiceEnvironmentPropertiesResponseOutput() IntegrationServiceEnvironmentPropertiesResponseOutput {
	return o
}

func (o IntegrationServiceEnvironmentPropertiesResponseOutput) ToIntegrationServiceEnvironmentPropertiesResponseOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentPropertiesResponseOutput {
	return o
}

func (o IntegrationServiceEnvironmentPropertiesResponseOutput) ToIntegrationServiceEnvironmentPropertiesResponsePtrOutput() IntegrationServiceEnvironmentPropertiesResponsePtrOutput {
	return o.ToIntegrationServiceEnvironmentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o IntegrationServiceEnvironmentPropertiesResponseOutput) ToIntegrationServiceEnvironmentPropertiesResponsePtrOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IntegrationServiceEnvironmentPropertiesResponse) *IntegrationServiceEnvironmentPropertiesResponse {
		return &v
	}).(IntegrationServiceEnvironmentPropertiesResponsePtrOutput)
}

// The endpoints configuration.
func (o IntegrationServiceEnvironmentPropertiesResponseOutput) EndpointsConfiguration() FlowEndpointsConfigurationResponsePtrOutput {
	return o.ApplyT(func(v IntegrationServiceEnvironmentPropertiesResponse) *FlowEndpointsConfigurationResponse {
		return v.EndpointsConfiguration
	}).(FlowEndpointsConfigurationResponsePtrOutput)
}

// Gets the tracking id.
func (o IntegrationServiceEnvironmentPropertiesResponseOutput) IntegrationServiceEnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationServiceEnvironmentPropertiesResponse) *string {
		return v.IntegrationServiceEnvironmentId
	}).(pulumi.StringPtrOutput)
}

// The network configuration.
func (o IntegrationServiceEnvironmentPropertiesResponseOutput) NetworkConfiguration() NetworkConfigurationResponsePtrOutput {
	return o.ApplyT(func(v IntegrationServiceEnvironmentPropertiesResponse) *NetworkConfigurationResponse {
		return v.NetworkConfiguration
	}).(NetworkConfigurationResponsePtrOutput)
}

// The provisioning state.
func (o IntegrationServiceEnvironmentPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationServiceEnvironmentPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The integration service environment state.
func (o IntegrationServiceEnvironmentPropertiesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationServiceEnvironmentPropertiesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type IntegrationServiceEnvironmentPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (IntegrationServiceEnvironmentPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationServiceEnvironmentPropertiesResponse)(nil)).Elem()
}

func (o IntegrationServiceEnvironmentPropertiesResponsePtrOutput) ToIntegrationServiceEnvironmentPropertiesResponsePtrOutput() IntegrationServiceEnvironmentPropertiesResponsePtrOutput {
	return o
}

func (o IntegrationServiceEnvironmentPropertiesResponsePtrOutput) ToIntegrationServiceEnvironmentPropertiesResponsePtrOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentPropertiesResponsePtrOutput {
	return o
}

func (o IntegrationServiceEnvironmentPropertiesResponsePtrOutput) Elem() IntegrationServiceEnvironmentPropertiesResponseOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentPropertiesResponse) IntegrationServiceEnvironmentPropertiesResponse {
		return *v
	}).(IntegrationServiceEnvironmentPropertiesResponseOutput)
}

// The endpoints configuration.
func (o IntegrationServiceEnvironmentPropertiesResponsePtrOutput) EndpointsConfiguration() FlowEndpointsConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentPropertiesResponse) *FlowEndpointsConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.EndpointsConfiguration
	}).(FlowEndpointsConfigurationResponsePtrOutput)
}

// Gets the tracking id.
func (o IntegrationServiceEnvironmentPropertiesResponsePtrOutput) IntegrationServiceEnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IntegrationServiceEnvironmentId
	}).(pulumi.StringPtrOutput)
}

// The network configuration.
func (o IntegrationServiceEnvironmentPropertiesResponsePtrOutput) NetworkConfiguration() NetworkConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentPropertiesResponse) *NetworkConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.NetworkConfiguration
	}).(NetworkConfigurationResponsePtrOutput)
}

// The provisioning state.
func (o IntegrationServiceEnvironmentPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The integration service environment state.
func (o IntegrationServiceEnvironmentPropertiesResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// The integration service environment.
type IntegrationServiceEnvironmentResponse struct {
	// The resource id.
	Id string `pulumi:"id"`
	// The resource location.
	Location *string `pulumi:"location"`
	// Gets the resource name.
	Name string `pulumi:"name"`
	// The integration service environment properties.
	Properties *IntegrationServiceEnvironmentPropertiesResponse `pulumi:"properties"`
	// The sku.
	Sku *IntegrationServiceEnvironmentSkuResponse `pulumi:"sku"`
	// The resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Gets the resource type.
	Type string `pulumi:"type"`
}

// The integration service environment.
type IntegrationServiceEnvironmentResponseOutput struct{ *pulumi.OutputState }

func (IntegrationServiceEnvironmentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationServiceEnvironmentResponse)(nil)).Elem()
}

func (o IntegrationServiceEnvironmentResponseOutput) ToIntegrationServiceEnvironmentResponseOutput() IntegrationServiceEnvironmentResponseOutput {
	return o
}

func (o IntegrationServiceEnvironmentResponseOutput) ToIntegrationServiceEnvironmentResponseOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentResponseOutput {
	return o
}

func (o IntegrationServiceEnvironmentResponseOutput) ToIntegrationServiceEnvironmentResponsePtrOutput() IntegrationServiceEnvironmentResponsePtrOutput {
	return o.ToIntegrationServiceEnvironmentResponsePtrOutputWithContext(context.Background())
}

func (o IntegrationServiceEnvironmentResponseOutput) ToIntegrationServiceEnvironmentResponsePtrOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentResponsePtrOutput {
	return o.ApplyT(func(v IntegrationServiceEnvironmentResponse) *IntegrationServiceEnvironmentResponse {
		return &v
	}).(IntegrationServiceEnvironmentResponsePtrOutput)
}

// The resource id.
func (o IntegrationServiceEnvironmentResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationServiceEnvironmentResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The resource location.
func (o IntegrationServiceEnvironmentResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationServiceEnvironmentResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Gets the resource name.
func (o IntegrationServiceEnvironmentResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationServiceEnvironmentResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The integration service environment properties.
func (o IntegrationServiceEnvironmentResponseOutput) Properties() IntegrationServiceEnvironmentPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IntegrationServiceEnvironmentResponse) *IntegrationServiceEnvironmentPropertiesResponse {
		return v.Properties
	}).(IntegrationServiceEnvironmentPropertiesResponsePtrOutput)
}

// The sku.
func (o IntegrationServiceEnvironmentResponseOutput) Sku() IntegrationServiceEnvironmentSkuResponsePtrOutput {
	return o.ApplyT(func(v IntegrationServiceEnvironmentResponse) *IntegrationServiceEnvironmentSkuResponse { return v.Sku }).(IntegrationServiceEnvironmentSkuResponsePtrOutput)
}

// The resource tags.
func (o IntegrationServiceEnvironmentResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v IntegrationServiceEnvironmentResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Gets the resource type.
func (o IntegrationServiceEnvironmentResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationServiceEnvironmentResponse) string { return v.Type }).(pulumi.StringOutput)
}

type IntegrationServiceEnvironmentResponsePtrOutput struct{ *pulumi.OutputState }

func (IntegrationServiceEnvironmentResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationServiceEnvironmentResponse)(nil)).Elem()
}

func (o IntegrationServiceEnvironmentResponsePtrOutput) ToIntegrationServiceEnvironmentResponsePtrOutput() IntegrationServiceEnvironmentResponsePtrOutput {
	return o
}

func (o IntegrationServiceEnvironmentResponsePtrOutput) ToIntegrationServiceEnvironmentResponsePtrOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentResponsePtrOutput {
	return o
}

func (o IntegrationServiceEnvironmentResponsePtrOutput) Elem() IntegrationServiceEnvironmentResponseOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentResponse) IntegrationServiceEnvironmentResponse { return *v }).(IntegrationServiceEnvironmentResponseOutput)
}

// The resource id.
func (o IntegrationServiceEnvironmentResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The resource location.
func (o IntegrationServiceEnvironmentResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Gets the resource name.
func (o IntegrationServiceEnvironmentResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The integration service environment properties.
func (o IntegrationServiceEnvironmentResponsePtrOutput) Properties() IntegrationServiceEnvironmentPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentResponse) *IntegrationServiceEnvironmentPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(IntegrationServiceEnvironmentPropertiesResponsePtrOutput)
}

// The sku.
func (o IntegrationServiceEnvironmentResponsePtrOutput) Sku() IntegrationServiceEnvironmentSkuResponsePtrOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentResponse) *IntegrationServiceEnvironmentSkuResponse {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(IntegrationServiceEnvironmentSkuResponsePtrOutput)
}

// The resource tags.
func (o IntegrationServiceEnvironmentResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Gets the resource type.
func (o IntegrationServiceEnvironmentResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The integration service environment sku.
type IntegrationServiceEnvironmentSku struct {
	// The sku capacity.
	Capacity *int `pulumi:"capacity"`
	// The sku name.
	Name *string `pulumi:"name"`
}

// IntegrationServiceEnvironmentSkuInput is an input type that accepts IntegrationServiceEnvironmentSkuArgs and IntegrationServiceEnvironmentSkuOutput values.
// You can construct a concrete instance of `IntegrationServiceEnvironmentSkuInput` via:
//
//          IntegrationServiceEnvironmentSkuArgs{...}
type IntegrationServiceEnvironmentSkuInput interface {
	pulumi.Input

	ToIntegrationServiceEnvironmentSkuOutput() IntegrationServiceEnvironmentSkuOutput
	ToIntegrationServiceEnvironmentSkuOutputWithContext(context.Context) IntegrationServiceEnvironmentSkuOutput
}

// The integration service environment sku.
type IntegrationServiceEnvironmentSkuArgs struct {
	// The sku capacity.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// The sku name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IntegrationServiceEnvironmentSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationServiceEnvironmentSku)(nil)).Elem()
}

func (i IntegrationServiceEnvironmentSkuArgs) ToIntegrationServiceEnvironmentSkuOutput() IntegrationServiceEnvironmentSkuOutput {
	return i.ToIntegrationServiceEnvironmentSkuOutputWithContext(context.Background())
}

func (i IntegrationServiceEnvironmentSkuArgs) ToIntegrationServiceEnvironmentSkuOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationServiceEnvironmentSkuOutput)
}

func (i IntegrationServiceEnvironmentSkuArgs) ToIntegrationServiceEnvironmentSkuPtrOutput() IntegrationServiceEnvironmentSkuPtrOutput {
	return i.ToIntegrationServiceEnvironmentSkuPtrOutputWithContext(context.Background())
}

func (i IntegrationServiceEnvironmentSkuArgs) ToIntegrationServiceEnvironmentSkuPtrOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationServiceEnvironmentSkuOutput).ToIntegrationServiceEnvironmentSkuPtrOutputWithContext(ctx)
}

// IntegrationServiceEnvironmentSkuPtrInput is an input type that accepts IntegrationServiceEnvironmentSkuArgs, IntegrationServiceEnvironmentSkuPtr and IntegrationServiceEnvironmentSkuPtrOutput values.
// You can construct a concrete instance of `IntegrationServiceEnvironmentSkuPtrInput` via:
//
//          IntegrationServiceEnvironmentSkuArgs{...}
//
//  or:
//
//          nil
type IntegrationServiceEnvironmentSkuPtrInput interface {
	pulumi.Input

	ToIntegrationServiceEnvironmentSkuPtrOutput() IntegrationServiceEnvironmentSkuPtrOutput
	ToIntegrationServiceEnvironmentSkuPtrOutputWithContext(context.Context) IntegrationServiceEnvironmentSkuPtrOutput
}

type integrationServiceEnvironmentSkuPtrType IntegrationServiceEnvironmentSkuArgs

func IntegrationServiceEnvironmentSkuPtr(v *IntegrationServiceEnvironmentSkuArgs) IntegrationServiceEnvironmentSkuPtrInput {
	return (*integrationServiceEnvironmentSkuPtrType)(v)
}

func (*integrationServiceEnvironmentSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationServiceEnvironmentSku)(nil)).Elem()
}

func (i *integrationServiceEnvironmentSkuPtrType) ToIntegrationServiceEnvironmentSkuPtrOutput() IntegrationServiceEnvironmentSkuPtrOutput {
	return i.ToIntegrationServiceEnvironmentSkuPtrOutputWithContext(context.Background())
}

func (i *integrationServiceEnvironmentSkuPtrType) ToIntegrationServiceEnvironmentSkuPtrOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationServiceEnvironmentSkuPtrOutput)
}

// The integration service environment sku.
type IntegrationServiceEnvironmentSkuResponse struct {
	// The sku capacity.
	Capacity *int `pulumi:"capacity"`
	// The sku name.
	Name *string `pulumi:"name"`
}

// The integration service environment sku.
type IntegrationServiceEnvironmentSkuResponseOutput struct{ *pulumi.OutputState }

func (IntegrationServiceEnvironmentSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationServiceEnvironmentSkuResponse)(nil)).Elem()
}

func (o IntegrationServiceEnvironmentSkuResponseOutput) ToIntegrationServiceEnvironmentSkuResponseOutput() IntegrationServiceEnvironmentSkuResponseOutput {
	return o
}

func (o IntegrationServiceEnvironmentSkuResponseOutput) ToIntegrationServiceEnvironmentSkuResponseOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentSkuResponseOutput {
	return o
}

func (o IntegrationServiceEnvironmentSkuResponseOutput) ToIntegrationServiceEnvironmentSkuResponsePtrOutput() IntegrationServiceEnvironmentSkuResponsePtrOutput {
	return o.ToIntegrationServiceEnvironmentSkuResponsePtrOutputWithContext(context.Background())
}

func (o IntegrationServiceEnvironmentSkuResponseOutput) ToIntegrationServiceEnvironmentSkuResponsePtrOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentSkuResponsePtrOutput {
	return o.ApplyT(func(v IntegrationServiceEnvironmentSkuResponse) *IntegrationServiceEnvironmentSkuResponse {
		return &v
	}).(IntegrationServiceEnvironmentSkuResponsePtrOutput)
}

// The sku capacity.
func (o IntegrationServiceEnvironmentSkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationServiceEnvironmentSkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// The sku name.
func (o IntegrationServiceEnvironmentSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationServiceEnvironmentSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type IntegrationServiceEnvironmentSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (IntegrationServiceEnvironmentSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationServiceEnvironmentSkuResponse)(nil)).Elem()
}

func (o IntegrationServiceEnvironmentSkuResponsePtrOutput) ToIntegrationServiceEnvironmentSkuResponsePtrOutput() IntegrationServiceEnvironmentSkuResponsePtrOutput {
	return o
}

func (o IntegrationServiceEnvironmentSkuResponsePtrOutput) ToIntegrationServiceEnvironmentSkuResponsePtrOutputWithContext(ctx context.Context) IntegrationServiceEnvironmentSkuResponsePtrOutput {
	return o
}

func (o IntegrationServiceEnvironmentSkuResponsePtrOutput) Elem() IntegrationServiceEnvironmentSkuResponseOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentSkuResponse) IntegrationServiceEnvironmentSkuResponse { return *v }).(IntegrationServiceEnvironmentSkuResponseOutput)
}

// The sku capacity.
func (o IntegrationServiceEnvironmentSkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentSkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The sku name.
func (o IntegrationServiceEnvironmentSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationServiceEnvironmentSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The ip address.
type IpAddress struct {
	// The address.
	Address *string `pulumi:"address"`
}

// IpAddressInput is an input type that accepts IpAddressArgs and IpAddressOutput values.
// You can construct a concrete instance of `IpAddressInput` via:
//
//          IpAddressArgs{...}
type IpAddressInput interface {
	pulumi.Input

	ToIpAddressOutput() IpAddressOutput
	ToIpAddressOutputWithContext(context.Context) IpAddressOutput
}

// The ip address.
type IpAddressArgs struct {
	// The address.
	Address pulumi.StringPtrInput `pulumi:"address"`
}

func (IpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpAddress)(nil)).Elem()
}

func (i IpAddressArgs) ToIpAddressOutput() IpAddressOutput {
	return i.ToIpAddressOutputWithContext(context.Background())
}

func (i IpAddressArgs) ToIpAddressOutputWithContext(ctx context.Context) IpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAddressOutput)
}

// IpAddressArrayInput is an input type that accepts IpAddressArray and IpAddressArrayOutput values.
// You can construct a concrete instance of `IpAddressArrayInput` via:
//
//          IpAddressArray{ IpAddressArgs{...} }
type IpAddressArrayInput interface {
	pulumi.Input

	ToIpAddressArrayOutput() IpAddressArrayOutput
	ToIpAddressArrayOutputWithContext(context.Context) IpAddressArrayOutput
}

type IpAddressArray []IpAddressInput

func (IpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpAddress)(nil)).Elem()
}

func (i IpAddressArray) ToIpAddressArrayOutput() IpAddressArrayOutput {
	return i.ToIpAddressArrayOutputWithContext(context.Background())
}

func (i IpAddressArray) ToIpAddressArrayOutputWithContext(ctx context.Context) IpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAddressArrayOutput)
}

// The ip address range.
type IpAddressRange struct {
	// The IP address range.
	AddressRange *string `pulumi:"addressRange"`
}

// IpAddressRangeInput is an input type that accepts IpAddressRangeArgs and IpAddressRangeOutput values.
// You can construct a concrete instance of `IpAddressRangeInput` via:
//
//          IpAddressRangeArgs{...}
type IpAddressRangeInput interface {
	pulumi.Input

	ToIpAddressRangeOutput() IpAddressRangeOutput
	ToIpAddressRangeOutputWithContext(context.Context) IpAddressRangeOutput
}

// The ip address range.
type IpAddressRangeArgs struct {
	// The IP address range.
	AddressRange pulumi.StringPtrInput `pulumi:"addressRange"`
}

func (IpAddressRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpAddressRange)(nil)).Elem()
}

func (i IpAddressRangeArgs) ToIpAddressRangeOutput() IpAddressRangeOutput {
	return i.ToIpAddressRangeOutputWithContext(context.Background())
}

func (i IpAddressRangeArgs) ToIpAddressRangeOutputWithContext(ctx context.Context) IpAddressRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAddressRangeOutput)
}

// IpAddressRangeArrayInput is an input type that accepts IpAddressRangeArray and IpAddressRangeArrayOutput values.
// You can construct a concrete instance of `IpAddressRangeArrayInput` via:
//
//          IpAddressRangeArray{ IpAddressRangeArgs{...} }
type IpAddressRangeArrayInput interface {
	pulumi.Input

	ToIpAddressRangeArrayOutput() IpAddressRangeArrayOutput
	ToIpAddressRangeArrayOutputWithContext(context.Context) IpAddressRangeArrayOutput
}

type IpAddressRangeArray []IpAddressRangeInput

func (IpAddressRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpAddressRange)(nil)).Elem()
}

func (i IpAddressRangeArray) ToIpAddressRangeArrayOutput() IpAddressRangeArrayOutput {
	return i.ToIpAddressRangeArrayOutputWithContext(context.Background())
}

func (i IpAddressRangeArray) ToIpAddressRangeArrayOutputWithContext(ctx context.Context) IpAddressRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAddressRangeArrayOutput)
}

// The ip address range.
type IpAddressRangeResponse struct {
	// The IP address range.
	AddressRange *string `pulumi:"addressRange"`
}

// The ip address range.
type IpAddressRangeResponseOutput struct{ *pulumi.OutputState }

func (IpAddressRangeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpAddressRangeResponse)(nil)).Elem()
}

func (o IpAddressRangeResponseOutput) ToIpAddressRangeResponseOutput() IpAddressRangeResponseOutput {
	return o
}

func (o IpAddressRangeResponseOutput) ToIpAddressRangeResponseOutputWithContext(ctx context.Context) IpAddressRangeResponseOutput {
	return o
}

// The IP address range.
func (o IpAddressRangeResponseOutput) AddressRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpAddressRangeResponse) *string { return v.AddressRange }).(pulumi.StringPtrOutput)
}

type IpAddressRangeResponseArrayOutput struct{ *pulumi.OutputState }

func (IpAddressRangeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpAddressRangeResponse)(nil)).Elem()
}

func (o IpAddressRangeResponseArrayOutput) ToIpAddressRangeResponseArrayOutput() IpAddressRangeResponseArrayOutput {
	return o
}

func (o IpAddressRangeResponseArrayOutput) ToIpAddressRangeResponseArrayOutputWithContext(ctx context.Context) IpAddressRangeResponseArrayOutput {
	return o
}

func (o IpAddressRangeResponseArrayOutput) Index(i pulumi.IntInput) IpAddressRangeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpAddressRangeResponse {
		return vs[0].([]IpAddressRangeResponse)[vs[1].(int)]
	}).(IpAddressRangeResponseOutput)
}

// The ip address.
type IpAddressResponse struct {
	// The address.
	Address *string `pulumi:"address"`
}

// The ip address.
type IpAddressResponseOutput struct{ *pulumi.OutputState }

func (IpAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpAddressResponse)(nil)).Elem()
}

func (o IpAddressResponseOutput) ToIpAddressResponseOutput() IpAddressResponseOutput {
	return o
}

func (o IpAddressResponseOutput) ToIpAddressResponseOutputWithContext(ctx context.Context) IpAddressResponseOutput {
	return o
}

// The address.
func (o IpAddressResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpAddressResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type IpAddressResponseArrayOutput struct{ *pulumi.OutputState }

func (IpAddressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpAddressResponse)(nil)).Elem()
}

func (o IpAddressResponseArrayOutput) ToIpAddressResponseArrayOutput() IpAddressResponseArrayOutput {
	return o
}

func (o IpAddressResponseArrayOutput) ToIpAddressResponseArrayOutputWithContext(ctx context.Context) IpAddressResponseArrayOutput {
	return o
}

func (o IpAddressResponseArrayOutput) Index(i pulumi.IntInput) IpAddressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpAddressResponse {
		return vs[0].([]IpAddressResponse)[vs[1].(int)]
	}).(IpAddressResponseOutput)
}

// The reference to the key vault key.
type KeyVaultKeyReference struct {
	// The private key name in key vault.
	KeyName string `pulumi:"keyName"`
	// The key vault reference.
	KeyVault KeyVaultKeyReferenceKeyVault `pulumi:"keyVault"`
	// The private key version in key vault.
	KeyVersion *string `pulumi:"keyVersion"`
}

// KeyVaultKeyReferenceInput is an input type that accepts KeyVaultKeyReferenceArgs and KeyVaultKeyReferenceOutput values.
// You can construct a concrete instance of `KeyVaultKeyReferenceInput` via:
//
//          KeyVaultKeyReferenceArgs{...}
type KeyVaultKeyReferenceInput interface {
	pulumi.Input

	ToKeyVaultKeyReferenceOutput() KeyVaultKeyReferenceOutput
	ToKeyVaultKeyReferenceOutputWithContext(context.Context) KeyVaultKeyReferenceOutput
}

// The reference to the key vault key.
type KeyVaultKeyReferenceArgs struct {
	// The private key name in key vault.
	KeyName pulumi.StringInput `pulumi:"keyName"`
	// The key vault reference.
	KeyVault KeyVaultKeyReferenceKeyVaultInput `pulumi:"keyVault"`
	// The private key version in key vault.
	KeyVersion pulumi.StringPtrInput `pulumi:"keyVersion"`
}

func (KeyVaultKeyReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultKeyReference)(nil)).Elem()
}

func (i KeyVaultKeyReferenceArgs) ToKeyVaultKeyReferenceOutput() KeyVaultKeyReferenceOutput {
	return i.ToKeyVaultKeyReferenceOutputWithContext(context.Background())
}

func (i KeyVaultKeyReferenceArgs) ToKeyVaultKeyReferenceOutputWithContext(ctx context.Context) KeyVaultKeyReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultKeyReferenceOutput)
}

func (i KeyVaultKeyReferenceArgs) ToKeyVaultKeyReferencePtrOutput() KeyVaultKeyReferencePtrOutput {
	return i.ToKeyVaultKeyReferencePtrOutputWithContext(context.Background())
}

func (i KeyVaultKeyReferenceArgs) ToKeyVaultKeyReferencePtrOutputWithContext(ctx context.Context) KeyVaultKeyReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultKeyReferenceOutput).ToKeyVaultKeyReferencePtrOutputWithContext(ctx)
}

// KeyVaultKeyReferencePtrInput is an input type that accepts KeyVaultKeyReferenceArgs, KeyVaultKeyReferencePtr and KeyVaultKeyReferencePtrOutput values.
// You can construct a concrete instance of `KeyVaultKeyReferencePtrInput` via:
//
//          KeyVaultKeyReferenceArgs{...}
//
//  or:
//
//          nil
type KeyVaultKeyReferencePtrInput interface {
	pulumi.Input

	ToKeyVaultKeyReferencePtrOutput() KeyVaultKeyReferencePtrOutput
	ToKeyVaultKeyReferencePtrOutputWithContext(context.Context) KeyVaultKeyReferencePtrOutput
}

type keyVaultKeyReferencePtrType KeyVaultKeyReferenceArgs

func KeyVaultKeyReferencePtr(v *KeyVaultKeyReferenceArgs) KeyVaultKeyReferencePtrInput {
	return (*keyVaultKeyReferencePtrType)(v)
}

func (*keyVaultKeyReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultKeyReference)(nil)).Elem()
}

func (i *keyVaultKeyReferencePtrType) ToKeyVaultKeyReferencePtrOutput() KeyVaultKeyReferencePtrOutput {
	return i.ToKeyVaultKeyReferencePtrOutputWithContext(context.Background())
}

func (i *keyVaultKeyReferencePtrType) ToKeyVaultKeyReferencePtrOutputWithContext(ctx context.Context) KeyVaultKeyReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultKeyReferencePtrOutput)
}

// The key vault reference.
type KeyVaultKeyReferenceKeyVault struct {
	// The resource id.
	Id *string `pulumi:"id"`
}

// KeyVaultKeyReferenceKeyVaultInput is an input type that accepts KeyVaultKeyReferenceKeyVaultArgs and KeyVaultKeyReferenceKeyVaultOutput values.
// You can construct a concrete instance of `KeyVaultKeyReferenceKeyVaultInput` via:
//
//          KeyVaultKeyReferenceKeyVaultArgs{...}
type KeyVaultKeyReferenceKeyVaultInput interface {
	pulumi.Input

	ToKeyVaultKeyReferenceKeyVaultOutput() KeyVaultKeyReferenceKeyVaultOutput
	ToKeyVaultKeyReferenceKeyVaultOutputWithContext(context.Context) KeyVaultKeyReferenceKeyVaultOutput
}

// The key vault reference.
type KeyVaultKeyReferenceKeyVaultArgs struct {
	// The resource id.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (KeyVaultKeyReferenceKeyVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultKeyReferenceKeyVault)(nil)).Elem()
}

func (i KeyVaultKeyReferenceKeyVaultArgs) ToKeyVaultKeyReferenceKeyVaultOutput() KeyVaultKeyReferenceKeyVaultOutput {
	return i.ToKeyVaultKeyReferenceKeyVaultOutputWithContext(context.Background())
}

func (i KeyVaultKeyReferenceKeyVaultArgs) ToKeyVaultKeyReferenceKeyVaultOutputWithContext(ctx context.Context) KeyVaultKeyReferenceKeyVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultKeyReferenceKeyVaultOutput)
}

func (i KeyVaultKeyReferenceKeyVaultArgs) ToKeyVaultKeyReferenceKeyVaultPtrOutput() KeyVaultKeyReferenceKeyVaultPtrOutput {
	return i.ToKeyVaultKeyReferenceKeyVaultPtrOutputWithContext(context.Background())
}

func (i KeyVaultKeyReferenceKeyVaultArgs) ToKeyVaultKeyReferenceKeyVaultPtrOutputWithContext(ctx context.Context) KeyVaultKeyReferenceKeyVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultKeyReferenceKeyVaultOutput).ToKeyVaultKeyReferenceKeyVaultPtrOutputWithContext(ctx)
}

// KeyVaultKeyReferenceKeyVaultPtrInput is an input type that accepts KeyVaultKeyReferenceKeyVaultArgs, KeyVaultKeyReferenceKeyVaultPtr and KeyVaultKeyReferenceKeyVaultPtrOutput values.
// You can construct a concrete instance of `KeyVaultKeyReferenceKeyVaultPtrInput` via:
//
//          KeyVaultKeyReferenceKeyVaultArgs{...}
//
//  or:
//
//          nil
type KeyVaultKeyReferenceKeyVaultPtrInput interface {
	pulumi.Input

	ToKeyVaultKeyReferenceKeyVaultPtrOutput() KeyVaultKeyReferenceKeyVaultPtrOutput
	ToKeyVaultKeyReferenceKeyVaultPtrOutputWithContext(context.Context) KeyVaultKeyReferenceKeyVaultPtrOutput
}

type keyVaultKeyReferenceKeyVaultPtrType KeyVaultKeyReferenceKeyVaultArgs

func KeyVaultKeyReferenceKeyVaultPtr(v *KeyVaultKeyReferenceKeyVaultArgs) KeyVaultKeyReferenceKeyVaultPtrInput {
	return (*keyVaultKeyReferenceKeyVaultPtrType)(v)
}

func (*keyVaultKeyReferenceKeyVaultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultKeyReferenceKeyVault)(nil)).Elem()
}

func (i *keyVaultKeyReferenceKeyVaultPtrType) ToKeyVaultKeyReferenceKeyVaultPtrOutput() KeyVaultKeyReferenceKeyVaultPtrOutput {
	return i.ToKeyVaultKeyReferenceKeyVaultPtrOutputWithContext(context.Background())
}

func (i *keyVaultKeyReferenceKeyVaultPtrType) ToKeyVaultKeyReferenceKeyVaultPtrOutputWithContext(ctx context.Context) KeyVaultKeyReferenceKeyVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultKeyReferenceKeyVaultPtrOutput)
}

// The reference to the key vault key.
type KeyVaultKeyReferenceResponse struct {
	// The private key name in key vault.
	KeyName string `pulumi:"keyName"`
	// The key vault reference.
	KeyVault KeyVaultKeyReferenceResponseKeyVault `pulumi:"keyVault"`
	// The private key version in key vault.
	KeyVersion *string `pulumi:"keyVersion"`
}

// The reference to the key vault key.
type KeyVaultKeyReferenceResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultKeyReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultKeyReferenceResponse)(nil)).Elem()
}

func (o KeyVaultKeyReferenceResponseOutput) ToKeyVaultKeyReferenceResponseOutput() KeyVaultKeyReferenceResponseOutput {
	return o
}

func (o KeyVaultKeyReferenceResponseOutput) ToKeyVaultKeyReferenceResponseOutputWithContext(ctx context.Context) KeyVaultKeyReferenceResponseOutput {
	return o
}

func (o KeyVaultKeyReferenceResponseOutput) ToKeyVaultKeyReferenceResponsePtrOutput() KeyVaultKeyReferenceResponsePtrOutput {
	return o.ToKeyVaultKeyReferenceResponsePtrOutputWithContext(context.Background())
}

func (o KeyVaultKeyReferenceResponseOutput) ToKeyVaultKeyReferenceResponsePtrOutputWithContext(ctx context.Context) KeyVaultKeyReferenceResponsePtrOutput {
	return o.ApplyT(func(v KeyVaultKeyReferenceResponse) *KeyVaultKeyReferenceResponse {
		return &v
	}).(KeyVaultKeyReferenceResponsePtrOutput)
}

// The private key name in key vault.
func (o KeyVaultKeyReferenceResponseOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultKeyReferenceResponse) string { return v.KeyName }).(pulumi.StringOutput)
}

// The key vault reference.
func (o KeyVaultKeyReferenceResponseOutput) KeyVault() KeyVaultKeyReferenceResponseKeyVaultOutput {
	return o.ApplyT(func(v KeyVaultKeyReferenceResponse) KeyVaultKeyReferenceResponseKeyVault { return v.KeyVault }).(KeyVaultKeyReferenceResponseKeyVaultOutput)
}

// The private key version in key vault.
func (o KeyVaultKeyReferenceResponseOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultKeyReferenceResponse) *string { return v.KeyVersion }).(pulumi.StringPtrOutput)
}

type KeyVaultKeyReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultKeyReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultKeyReferenceResponse)(nil)).Elem()
}

func (o KeyVaultKeyReferenceResponsePtrOutput) ToKeyVaultKeyReferenceResponsePtrOutput() KeyVaultKeyReferenceResponsePtrOutput {
	return o
}

func (o KeyVaultKeyReferenceResponsePtrOutput) ToKeyVaultKeyReferenceResponsePtrOutputWithContext(ctx context.Context) KeyVaultKeyReferenceResponsePtrOutput {
	return o
}

func (o KeyVaultKeyReferenceResponsePtrOutput) Elem() KeyVaultKeyReferenceResponseOutput {
	return o.ApplyT(func(v *KeyVaultKeyReferenceResponse) KeyVaultKeyReferenceResponse { return *v }).(KeyVaultKeyReferenceResponseOutput)
}

// The private key name in key vault.
func (o KeyVaultKeyReferenceResponsePtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultKeyReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeyName
	}).(pulumi.StringPtrOutput)
}

// The key vault reference.
func (o KeyVaultKeyReferenceResponsePtrOutput) KeyVault() KeyVaultKeyReferenceResponseKeyVaultPtrOutput {
	return o.ApplyT(func(v *KeyVaultKeyReferenceResponse) *KeyVaultKeyReferenceResponseKeyVault {
		if v == nil {
			return nil
		}
		return &v.KeyVault
	}).(KeyVaultKeyReferenceResponseKeyVaultPtrOutput)
}

// The private key version in key vault.
func (o KeyVaultKeyReferenceResponsePtrOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultKeyReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVersion
	}).(pulumi.StringPtrOutput)
}

// The key vault reference.
type KeyVaultKeyReferenceResponseKeyVault struct {
	// The resource id.
	Id *string `pulumi:"id"`
	// The resource name.
	Name string `pulumi:"name"`
	// The resource type.
	Type string `pulumi:"type"`
}

// The key vault reference.
type KeyVaultKeyReferenceResponseKeyVaultOutput struct{ *pulumi.OutputState }

func (KeyVaultKeyReferenceResponseKeyVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultKeyReferenceResponseKeyVault)(nil)).Elem()
}

func (o KeyVaultKeyReferenceResponseKeyVaultOutput) ToKeyVaultKeyReferenceResponseKeyVaultOutput() KeyVaultKeyReferenceResponseKeyVaultOutput {
	return o
}

func (o KeyVaultKeyReferenceResponseKeyVaultOutput) ToKeyVaultKeyReferenceResponseKeyVaultOutputWithContext(ctx context.Context) KeyVaultKeyReferenceResponseKeyVaultOutput {
	return o
}

func (o KeyVaultKeyReferenceResponseKeyVaultOutput) ToKeyVaultKeyReferenceResponseKeyVaultPtrOutput() KeyVaultKeyReferenceResponseKeyVaultPtrOutput {
	return o.ToKeyVaultKeyReferenceResponseKeyVaultPtrOutputWithContext(context.Background())
}

func (o KeyVaultKeyReferenceResponseKeyVaultOutput) ToKeyVaultKeyReferenceResponseKeyVaultPtrOutputWithContext(ctx context.Context) KeyVaultKeyReferenceResponseKeyVaultPtrOutput {
	return o.ApplyT(func(v KeyVaultKeyReferenceResponseKeyVault) *KeyVaultKeyReferenceResponseKeyVault {
		return &v
	}).(KeyVaultKeyReferenceResponseKeyVaultPtrOutput)
}

// The resource id.
func (o KeyVaultKeyReferenceResponseKeyVaultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultKeyReferenceResponseKeyVault) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The resource name.
func (o KeyVaultKeyReferenceResponseKeyVaultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultKeyReferenceResponseKeyVault) string { return v.Name }).(pulumi.StringOutput)
}

// The resource type.
func (o KeyVaultKeyReferenceResponseKeyVaultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultKeyReferenceResponseKeyVault) string { return v.Type }).(pulumi.StringOutput)
}

type KeyVaultKeyReferenceResponseKeyVaultPtrOutput struct{ *pulumi.OutputState }

func (KeyVaultKeyReferenceResponseKeyVaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultKeyReferenceResponseKeyVault)(nil)).Elem()
}

func (o KeyVaultKeyReferenceResponseKeyVaultPtrOutput) ToKeyVaultKeyReferenceResponseKeyVaultPtrOutput() KeyVaultKeyReferenceResponseKeyVaultPtrOutput {
	return o
}

func (o KeyVaultKeyReferenceResponseKeyVaultPtrOutput) ToKeyVaultKeyReferenceResponseKeyVaultPtrOutputWithContext(ctx context.Context) KeyVaultKeyReferenceResponseKeyVaultPtrOutput {
	return o
}

func (o KeyVaultKeyReferenceResponseKeyVaultPtrOutput) Elem() KeyVaultKeyReferenceResponseKeyVaultOutput {
	return o.ApplyT(func(v *KeyVaultKeyReferenceResponseKeyVault) KeyVaultKeyReferenceResponseKeyVault { return *v }).(KeyVaultKeyReferenceResponseKeyVaultOutput)
}

// The resource id.
func (o KeyVaultKeyReferenceResponseKeyVaultPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultKeyReferenceResponseKeyVault) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The resource name.
func (o KeyVaultKeyReferenceResponseKeyVaultPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultKeyReferenceResponseKeyVault) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The resource type.
func (o KeyVaultKeyReferenceResponseKeyVaultPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultKeyReferenceResponseKeyVault) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The key vault key.
type KeyVaultKeyResponse struct {
	// The key attributes.
	Attributes *KeyVaultKeyResponseAttributes `pulumi:"attributes"`
	// The key id.
	Kid *string `pulumi:"kid"`
}

// The key attributes.
type KeyVaultKeyResponseAttributes struct {
	// When the key was created.
	Created *int `pulumi:"created"`
	// Whether the key is enabled or not.
	Enabled *bool `pulumi:"enabled"`
	// When the key was updated.
	Updated *int `pulumi:"updated"`
}

// The key vault reference.
type KeyVaultReference struct {
	// The resource id.
	Id *string `pulumi:"id"`
	// The key vault name.
	Name *string `pulumi:"name"`
}

// The network configuration.
type NetworkConfiguration struct {
	// The access endpoint.
	AccessEndpoint *IntegrationServiceEnvironmentAccessEndpoint `pulumi:"accessEndpoint"`
	// The subnets.
	Subnets []ResourceReference `pulumi:"subnets"`
	// Gets the virtual network address space.
	VirtualNetworkAddressSpace *string `pulumi:"virtualNetworkAddressSpace"`
}

// NetworkConfigurationInput is an input type that accepts NetworkConfigurationArgs and NetworkConfigurationOutput values.
// You can construct a concrete instance of `NetworkConfigurationInput` via:
//
//          NetworkConfigurationArgs{...}
type NetworkConfigurationInput interface {
	pulumi.Input

	ToNetworkConfigurationOutput() NetworkConfigurationOutput
	ToNetworkConfigurationOutputWithContext(context.Context) NetworkConfigurationOutput
}

// The network configuration.
type NetworkConfigurationArgs struct {
	// The access endpoint.
	AccessEndpoint IntegrationServiceEnvironmentAccessEndpointPtrInput `pulumi:"accessEndpoint"`
	// The subnets.
	Subnets ResourceReferenceArrayInput `pulumi:"subnets"`
	// Gets the virtual network address space.
	VirtualNetworkAddressSpace pulumi.StringPtrInput `pulumi:"virtualNetworkAddressSpace"`
}

func (NetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConfiguration)(nil)).Elem()
}

func (i NetworkConfigurationArgs) ToNetworkConfigurationOutput() NetworkConfigurationOutput {
	return i.ToNetworkConfigurationOutputWithContext(context.Background())
}

func (i NetworkConfigurationArgs) ToNetworkConfigurationOutputWithContext(ctx context.Context) NetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConfigurationOutput)
}

func (i NetworkConfigurationArgs) ToNetworkConfigurationPtrOutput() NetworkConfigurationPtrOutput {
	return i.ToNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i NetworkConfigurationArgs) ToNetworkConfigurationPtrOutputWithContext(ctx context.Context) NetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConfigurationOutput).ToNetworkConfigurationPtrOutputWithContext(ctx)
}

// NetworkConfigurationPtrInput is an input type that accepts NetworkConfigurationArgs, NetworkConfigurationPtr and NetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `NetworkConfigurationPtrInput` via:
//
//          NetworkConfigurationArgs{...}
//
//  or:
//
//          nil
type NetworkConfigurationPtrInput interface {
	pulumi.Input

	ToNetworkConfigurationPtrOutput() NetworkConfigurationPtrOutput
	ToNetworkConfigurationPtrOutputWithContext(context.Context) NetworkConfigurationPtrOutput
}

type networkConfigurationPtrType NetworkConfigurationArgs

func NetworkConfigurationPtr(v *NetworkConfigurationArgs) NetworkConfigurationPtrInput {
	return (*networkConfigurationPtrType)(v)
}

func (*networkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConfiguration)(nil)).Elem()
}

func (i *networkConfigurationPtrType) ToNetworkConfigurationPtrOutput() NetworkConfigurationPtrOutput {
	return i.ToNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *networkConfigurationPtrType) ToNetworkConfigurationPtrOutputWithContext(ctx context.Context) NetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConfigurationPtrOutput)
}

// The network configuration.
type NetworkConfigurationResponse struct {
	// The access endpoint.
	AccessEndpoint *IntegrationServiceEnvironmentAccessEndpointResponse `pulumi:"accessEndpoint"`
	// The subnets.
	Subnets []ResourceReferenceResponse `pulumi:"subnets"`
	// Gets the virtual network address space.
	VirtualNetworkAddressSpace *string `pulumi:"virtualNetworkAddressSpace"`
}

// The network configuration.
type NetworkConfigurationResponseOutput struct{ *pulumi.OutputState }

func (NetworkConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConfigurationResponse)(nil)).Elem()
}

func (o NetworkConfigurationResponseOutput) ToNetworkConfigurationResponseOutput() NetworkConfigurationResponseOutput {
	return o
}

func (o NetworkConfigurationResponseOutput) ToNetworkConfigurationResponseOutputWithContext(ctx context.Context) NetworkConfigurationResponseOutput {
	return o
}

func (o NetworkConfigurationResponseOutput) ToNetworkConfigurationResponsePtrOutput() NetworkConfigurationResponsePtrOutput {
	return o.ToNetworkConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o NetworkConfigurationResponseOutput) ToNetworkConfigurationResponsePtrOutputWithContext(ctx context.Context) NetworkConfigurationResponsePtrOutput {
	return o.ApplyT(func(v NetworkConfigurationResponse) *NetworkConfigurationResponse {
		return &v
	}).(NetworkConfigurationResponsePtrOutput)
}

// The access endpoint.
func (o NetworkConfigurationResponseOutput) AccessEndpoint() IntegrationServiceEnvironmentAccessEndpointResponsePtrOutput {
	return o.ApplyT(func(v NetworkConfigurationResponse) *IntegrationServiceEnvironmentAccessEndpointResponse {
		return v.AccessEndpoint
	}).(IntegrationServiceEnvironmentAccessEndpointResponsePtrOutput)
}

// The subnets.
func (o NetworkConfigurationResponseOutput) Subnets() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v NetworkConfigurationResponse) []ResourceReferenceResponse { return v.Subnets }).(ResourceReferenceResponseArrayOutput)
}

// Gets the virtual network address space.
func (o NetworkConfigurationResponseOutput) VirtualNetworkAddressSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkConfigurationResponse) *string { return v.VirtualNetworkAddressSpace }).(pulumi.StringPtrOutput)
}

type NetworkConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConfigurationResponse)(nil)).Elem()
}

func (o NetworkConfigurationResponsePtrOutput) ToNetworkConfigurationResponsePtrOutput() NetworkConfigurationResponsePtrOutput {
	return o
}

func (o NetworkConfigurationResponsePtrOutput) ToNetworkConfigurationResponsePtrOutputWithContext(ctx context.Context) NetworkConfigurationResponsePtrOutput {
	return o
}

func (o NetworkConfigurationResponsePtrOutput) Elem() NetworkConfigurationResponseOutput {
	return o.ApplyT(func(v *NetworkConfigurationResponse) NetworkConfigurationResponse { return *v }).(NetworkConfigurationResponseOutput)
}

// The access endpoint.
func (o NetworkConfigurationResponsePtrOutput) AccessEndpoint() IntegrationServiceEnvironmentAccessEndpointResponsePtrOutput {
	return o.ApplyT(func(v *NetworkConfigurationResponse) *IntegrationServiceEnvironmentAccessEndpointResponse {
		if v == nil {
			return nil
		}
		return v.AccessEndpoint
	}).(IntegrationServiceEnvironmentAccessEndpointResponsePtrOutput)
}

// The subnets.
func (o NetworkConfigurationResponsePtrOutput) Subnets() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v *NetworkConfigurationResponse) []ResourceReferenceResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(ResourceReferenceResponseArrayOutput)
}

// Gets the virtual network address space.
func (o NetworkConfigurationResponsePtrOutput) VirtualNetworkAddressSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkAddressSpace
	}).(pulumi.StringPtrOutput)
}

// AuthenticationPolicy of type Open.
type OpenAuthenticationAccessPolicies struct {
	// Open authentication policies.
	Policies map[string]OpenAuthenticationAccessPolicy `pulumi:"policies"`
}

// OpenAuthenticationAccessPoliciesInput is an input type that accepts OpenAuthenticationAccessPoliciesArgs and OpenAuthenticationAccessPoliciesOutput values.
// You can construct a concrete instance of `OpenAuthenticationAccessPoliciesInput` via:
//
//          OpenAuthenticationAccessPoliciesArgs{...}
type OpenAuthenticationAccessPoliciesInput interface {
	pulumi.Input

	ToOpenAuthenticationAccessPoliciesOutput() OpenAuthenticationAccessPoliciesOutput
	ToOpenAuthenticationAccessPoliciesOutputWithContext(context.Context) OpenAuthenticationAccessPoliciesOutput
}

// AuthenticationPolicy of type Open.
type OpenAuthenticationAccessPoliciesArgs struct {
	// Open authentication policies.
	Policies OpenAuthenticationAccessPolicyMapInput `pulumi:"policies"`
}

func (OpenAuthenticationAccessPoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenAuthenticationAccessPolicies)(nil)).Elem()
}

func (i OpenAuthenticationAccessPoliciesArgs) ToOpenAuthenticationAccessPoliciesOutput() OpenAuthenticationAccessPoliciesOutput {
	return i.ToOpenAuthenticationAccessPoliciesOutputWithContext(context.Background())
}

func (i OpenAuthenticationAccessPoliciesArgs) ToOpenAuthenticationAccessPoliciesOutputWithContext(ctx context.Context) OpenAuthenticationAccessPoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenAuthenticationAccessPoliciesOutput)
}

func (i OpenAuthenticationAccessPoliciesArgs) ToOpenAuthenticationAccessPoliciesPtrOutput() OpenAuthenticationAccessPoliciesPtrOutput {
	return i.ToOpenAuthenticationAccessPoliciesPtrOutputWithContext(context.Background())
}

func (i OpenAuthenticationAccessPoliciesArgs) ToOpenAuthenticationAccessPoliciesPtrOutputWithContext(ctx context.Context) OpenAuthenticationAccessPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenAuthenticationAccessPoliciesOutput).ToOpenAuthenticationAccessPoliciesPtrOutputWithContext(ctx)
}

// OpenAuthenticationAccessPoliciesPtrInput is an input type that accepts OpenAuthenticationAccessPoliciesArgs, OpenAuthenticationAccessPoliciesPtr and OpenAuthenticationAccessPoliciesPtrOutput values.
// You can construct a concrete instance of `OpenAuthenticationAccessPoliciesPtrInput` via:
//
//          OpenAuthenticationAccessPoliciesArgs{...}
//
//  or:
//
//          nil
type OpenAuthenticationAccessPoliciesPtrInput interface {
	pulumi.Input

	ToOpenAuthenticationAccessPoliciesPtrOutput() OpenAuthenticationAccessPoliciesPtrOutput
	ToOpenAuthenticationAccessPoliciesPtrOutputWithContext(context.Context) OpenAuthenticationAccessPoliciesPtrOutput
}

type openAuthenticationAccessPoliciesPtrType OpenAuthenticationAccessPoliciesArgs

func OpenAuthenticationAccessPoliciesPtr(v *OpenAuthenticationAccessPoliciesArgs) OpenAuthenticationAccessPoliciesPtrInput {
	return (*openAuthenticationAccessPoliciesPtrType)(v)
}

func (*openAuthenticationAccessPoliciesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenAuthenticationAccessPolicies)(nil)).Elem()
}

func (i *openAuthenticationAccessPoliciesPtrType) ToOpenAuthenticationAccessPoliciesPtrOutput() OpenAuthenticationAccessPoliciesPtrOutput {
	return i.ToOpenAuthenticationAccessPoliciesPtrOutputWithContext(context.Background())
}

func (i *openAuthenticationAccessPoliciesPtrType) ToOpenAuthenticationAccessPoliciesPtrOutputWithContext(ctx context.Context) OpenAuthenticationAccessPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenAuthenticationAccessPoliciesPtrOutput)
}

// AuthenticationPolicy of type Open.
type OpenAuthenticationAccessPoliciesResponse struct {
	// Open authentication policies.
	Policies map[string]OpenAuthenticationAccessPolicyResponse `pulumi:"policies"`
}

// AuthenticationPolicy of type Open.
type OpenAuthenticationAccessPoliciesResponseOutput struct{ *pulumi.OutputState }

func (OpenAuthenticationAccessPoliciesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenAuthenticationAccessPoliciesResponse)(nil)).Elem()
}

func (o OpenAuthenticationAccessPoliciesResponseOutput) ToOpenAuthenticationAccessPoliciesResponseOutput() OpenAuthenticationAccessPoliciesResponseOutput {
	return o
}

func (o OpenAuthenticationAccessPoliciesResponseOutput) ToOpenAuthenticationAccessPoliciesResponseOutputWithContext(ctx context.Context) OpenAuthenticationAccessPoliciesResponseOutput {
	return o
}

func (o OpenAuthenticationAccessPoliciesResponseOutput) ToOpenAuthenticationAccessPoliciesResponsePtrOutput() OpenAuthenticationAccessPoliciesResponsePtrOutput {
	return o.ToOpenAuthenticationAccessPoliciesResponsePtrOutputWithContext(context.Background())
}

func (o OpenAuthenticationAccessPoliciesResponseOutput) ToOpenAuthenticationAccessPoliciesResponsePtrOutputWithContext(ctx context.Context) OpenAuthenticationAccessPoliciesResponsePtrOutput {
	return o.ApplyT(func(v OpenAuthenticationAccessPoliciesResponse) *OpenAuthenticationAccessPoliciesResponse {
		return &v
	}).(OpenAuthenticationAccessPoliciesResponsePtrOutput)
}

// Open authentication policies.
func (o OpenAuthenticationAccessPoliciesResponseOutput) Policies() OpenAuthenticationAccessPolicyResponseMapOutput {
	return o.ApplyT(func(v OpenAuthenticationAccessPoliciesResponse) map[string]OpenAuthenticationAccessPolicyResponse {
		return v.Policies
	}).(OpenAuthenticationAccessPolicyResponseMapOutput)
}

type OpenAuthenticationAccessPoliciesResponsePtrOutput struct{ *pulumi.OutputState }

func (OpenAuthenticationAccessPoliciesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenAuthenticationAccessPoliciesResponse)(nil)).Elem()
}

func (o OpenAuthenticationAccessPoliciesResponsePtrOutput) ToOpenAuthenticationAccessPoliciesResponsePtrOutput() OpenAuthenticationAccessPoliciesResponsePtrOutput {
	return o
}

func (o OpenAuthenticationAccessPoliciesResponsePtrOutput) ToOpenAuthenticationAccessPoliciesResponsePtrOutputWithContext(ctx context.Context) OpenAuthenticationAccessPoliciesResponsePtrOutput {
	return o
}

func (o OpenAuthenticationAccessPoliciesResponsePtrOutput) Elem() OpenAuthenticationAccessPoliciesResponseOutput {
	return o.ApplyT(func(v *OpenAuthenticationAccessPoliciesResponse) OpenAuthenticationAccessPoliciesResponse { return *v }).(OpenAuthenticationAccessPoliciesResponseOutput)
}

// Open authentication policies.
func (o OpenAuthenticationAccessPoliciesResponsePtrOutput) Policies() OpenAuthenticationAccessPolicyResponseMapOutput {
	return o.ApplyT(func(v *OpenAuthenticationAccessPoliciesResponse) map[string]OpenAuthenticationAccessPolicyResponse {
		if v == nil {
			return nil
		}
		return v.Policies
	}).(OpenAuthenticationAccessPolicyResponseMapOutput)
}

// Open authentication access policy defined by user.
type OpenAuthenticationAccessPolicy struct {
	// The access policy claims.
	Claims []OpenAuthenticationPolicyClaim `pulumi:"claims"`
}

// OpenAuthenticationAccessPolicyInput is an input type that accepts OpenAuthenticationAccessPolicyArgs and OpenAuthenticationAccessPolicyOutput values.
// You can construct a concrete instance of `OpenAuthenticationAccessPolicyInput` via:
//
//          OpenAuthenticationAccessPolicyArgs{...}
type OpenAuthenticationAccessPolicyInput interface {
	pulumi.Input

	ToOpenAuthenticationAccessPolicyOutput() OpenAuthenticationAccessPolicyOutput
	ToOpenAuthenticationAccessPolicyOutputWithContext(context.Context) OpenAuthenticationAccessPolicyOutput
}

// Open authentication access policy defined by user.
type OpenAuthenticationAccessPolicyArgs struct {
	// The access policy claims.
	Claims OpenAuthenticationPolicyClaimArrayInput `pulumi:"claims"`
}

func (OpenAuthenticationAccessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenAuthenticationAccessPolicy)(nil)).Elem()
}

func (i OpenAuthenticationAccessPolicyArgs) ToOpenAuthenticationAccessPolicyOutput() OpenAuthenticationAccessPolicyOutput {
	return i.ToOpenAuthenticationAccessPolicyOutputWithContext(context.Background())
}

func (i OpenAuthenticationAccessPolicyArgs) ToOpenAuthenticationAccessPolicyOutputWithContext(ctx context.Context) OpenAuthenticationAccessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenAuthenticationAccessPolicyOutput)
}

// OpenAuthenticationAccessPolicyMapInput is an input type that accepts OpenAuthenticationAccessPolicyMap and OpenAuthenticationAccessPolicyMapOutput values.
// You can construct a concrete instance of `OpenAuthenticationAccessPolicyMapInput` via:
//
//          OpenAuthenticationAccessPolicyMap{ "key": OpenAuthenticationAccessPolicyArgs{...} }
type OpenAuthenticationAccessPolicyMapInput interface {
	pulumi.Input

	ToOpenAuthenticationAccessPolicyMapOutput() OpenAuthenticationAccessPolicyMapOutput
	ToOpenAuthenticationAccessPolicyMapOutputWithContext(context.Context) OpenAuthenticationAccessPolicyMapOutput
}

type OpenAuthenticationAccessPolicyMap map[string]OpenAuthenticationAccessPolicyInput

func (OpenAuthenticationAccessPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]OpenAuthenticationAccessPolicy)(nil)).Elem()
}

func (i OpenAuthenticationAccessPolicyMap) ToOpenAuthenticationAccessPolicyMapOutput() OpenAuthenticationAccessPolicyMapOutput {
	return i.ToOpenAuthenticationAccessPolicyMapOutputWithContext(context.Background())
}

func (i OpenAuthenticationAccessPolicyMap) ToOpenAuthenticationAccessPolicyMapOutputWithContext(ctx context.Context) OpenAuthenticationAccessPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenAuthenticationAccessPolicyMapOutput)
}

// Open authentication access policy defined by user.
type OpenAuthenticationAccessPolicyResponse struct {
	// The access policy claims.
	Claims []OpenAuthenticationPolicyClaimResponse `pulumi:"claims"`
	// Type of provider for OAuth.
	Type string `pulumi:"type"`
}

// Open authentication access policy defined by user.
type OpenAuthenticationAccessPolicyResponseOutput struct{ *pulumi.OutputState }

func (OpenAuthenticationAccessPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenAuthenticationAccessPolicyResponse)(nil)).Elem()
}

func (o OpenAuthenticationAccessPolicyResponseOutput) ToOpenAuthenticationAccessPolicyResponseOutput() OpenAuthenticationAccessPolicyResponseOutput {
	return o
}

func (o OpenAuthenticationAccessPolicyResponseOutput) ToOpenAuthenticationAccessPolicyResponseOutputWithContext(ctx context.Context) OpenAuthenticationAccessPolicyResponseOutput {
	return o
}

// The access policy claims.
func (o OpenAuthenticationAccessPolicyResponseOutput) Claims() OpenAuthenticationPolicyClaimResponseArrayOutput {
	return o.ApplyT(func(v OpenAuthenticationAccessPolicyResponse) []OpenAuthenticationPolicyClaimResponse {
		return v.Claims
	}).(OpenAuthenticationPolicyClaimResponseArrayOutput)
}

// Type of provider for OAuth.
func (o OpenAuthenticationAccessPolicyResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OpenAuthenticationAccessPolicyResponse) string { return v.Type }).(pulumi.StringOutput)
}

type OpenAuthenticationAccessPolicyResponseMapOutput struct{ *pulumi.OutputState }

func (OpenAuthenticationAccessPolicyResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]OpenAuthenticationAccessPolicyResponse)(nil)).Elem()
}

func (o OpenAuthenticationAccessPolicyResponseMapOutput) ToOpenAuthenticationAccessPolicyResponseMapOutput() OpenAuthenticationAccessPolicyResponseMapOutput {
	return o
}

func (o OpenAuthenticationAccessPolicyResponseMapOutput) ToOpenAuthenticationAccessPolicyResponseMapOutputWithContext(ctx context.Context) OpenAuthenticationAccessPolicyResponseMapOutput {
	return o
}

func (o OpenAuthenticationAccessPolicyResponseMapOutput) MapIndex(k pulumi.StringInput) OpenAuthenticationAccessPolicyResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) OpenAuthenticationAccessPolicyResponse {
		return vs[0].(map[string]OpenAuthenticationAccessPolicyResponse)[vs[1].(string)]
	}).(OpenAuthenticationAccessPolicyResponseOutput)
}

// Open authentication policy claim.
type OpenAuthenticationPolicyClaim struct {
	// The name of the claim.
	Name *string `pulumi:"name"`
	// The value of the claim.
	Value *string `pulumi:"value"`
}

// OpenAuthenticationPolicyClaimInput is an input type that accepts OpenAuthenticationPolicyClaimArgs and OpenAuthenticationPolicyClaimOutput values.
// You can construct a concrete instance of `OpenAuthenticationPolicyClaimInput` via:
//
//          OpenAuthenticationPolicyClaimArgs{...}
type OpenAuthenticationPolicyClaimInput interface {
	pulumi.Input

	ToOpenAuthenticationPolicyClaimOutput() OpenAuthenticationPolicyClaimOutput
	ToOpenAuthenticationPolicyClaimOutputWithContext(context.Context) OpenAuthenticationPolicyClaimOutput
}

// Open authentication policy claim.
type OpenAuthenticationPolicyClaimArgs struct {
	// The name of the claim.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of the claim.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (OpenAuthenticationPolicyClaimArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenAuthenticationPolicyClaim)(nil)).Elem()
}

func (i OpenAuthenticationPolicyClaimArgs) ToOpenAuthenticationPolicyClaimOutput() OpenAuthenticationPolicyClaimOutput {
	return i.ToOpenAuthenticationPolicyClaimOutputWithContext(context.Background())
}

func (i OpenAuthenticationPolicyClaimArgs) ToOpenAuthenticationPolicyClaimOutputWithContext(ctx context.Context) OpenAuthenticationPolicyClaimOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenAuthenticationPolicyClaimOutput)
}

// OpenAuthenticationPolicyClaimArrayInput is an input type that accepts OpenAuthenticationPolicyClaimArray and OpenAuthenticationPolicyClaimArrayOutput values.
// You can construct a concrete instance of `OpenAuthenticationPolicyClaimArrayInput` via:
//
//          OpenAuthenticationPolicyClaimArray{ OpenAuthenticationPolicyClaimArgs{...} }
type OpenAuthenticationPolicyClaimArrayInput interface {
	pulumi.Input

	ToOpenAuthenticationPolicyClaimArrayOutput() OpenAuthenticationPolicyClaimArrayOutput
	ToOpenAuthenticationPolicyClaimArrayOutputWithContext(context.Context) OpenAuthenticationPolicyClaimArrayOutput
}

type OpenAuthenticationPolicyClaimArray []OpenAuthenticationPolicyClaimInput

func (OpenAuthenticationPolicyClaimArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenAuthenticationPolicyClaim)(nil)).Elem()
}

func (i OpenAuthenticationPolicyClaimArray) ToOpenAuthenticationPolicyClaimArrayOutput() OpenAuthenticationPolicyClaimArrayOutput {
	return i.ToOpenAuthenticationPolicyClaimArrayOutputWithContext(context.Background())
}

func (i OpenAuthenticationPolicyClaimArray) ToOpenAuthenticationPolicyClaimArrayOutputWithContext(ctx context.Context) OpenAuthenticationPolicyClaimArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenAuthenticationPolicyClaimArrayOutput)
}

// Open authentication policy claim.
type OpenAuthenticationPolicyClaimResponse struct {
	// The name of the claim.
	Name *string `pulumi:"name"`
	// The value of the claim.
	Value *string `pulumi:"value"`
}

// Open authentication policy claim.
type OpenAuthenticationPolicyClaimResponseOutput struct{ *pulumi.OutputState }

func (OpenAuthenticationPolicyClaimResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenAuthenticationPolicyClaimResponse)(nil)).Elem()
}

func (o OpenAuthenticationPolicyClaimResponseOutput) ToOpenAuthenticationPolicyClaimResponseOutput() OpenAuthenticationPolicyClaimResponseOutput {
	return o
}

func (o OpenAuthenticationPolicyClaimResponseOutput) ToOpenAuthenticationPolicyClaimResponseOutputWithContext(ctx context.Context) OpenAuthenticationPolicyClaimResponseOutput {
	return o
}

// The name of the claim.
func (o OpenAuthenticationPolicyClaimResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenAuthenticationPolicyClaimResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of the claim.
func (o OpenAuthenticationPolicyClaimResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenAuthenticationPolicyClaimResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type OpenAuthenticationPolicyClaimResponseArrayOutput struct{ *pulumi.OutputState }

func (OpenAuthenticationPolicyClaimResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenAuthenticationPolicyClaimResponse)(nil)).Elem()
}

func (o OpenAuthenticationPolicyClaimResponseArrayOutput) ToOpenAuthenticationPolicyClaimResponseArrayOutput() OpenAuthenticationPolicyClaimResponseArrayOutput {
	return o
}

func (o OpenAuthenticationPolicyClaimResponseArrayOutput) ToOpenAuthenticationPolicyClaimResponseArrayOutputWithContext(ctx context.Context) OpenAuthenticationPolicyClaimResponseArrayOutput {
	return o
}

func (o OpenAuthenticationPolicyClaimResponseArrayOutput) Index(i pulumi.IntInput) OpenAuthenticationPolicyClaimResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpenAuthenticationPolicyClaimResponse {
		return vs[0].([]OpenAuthenticationPolicyClaimResponse)[vs[1].(int)]
	}).(OpenAuthenticationPolicyClaimResponseOutput)
}

// The integration account partner content.
type PartnerContent struct {
	// The B2B partner content.
	B2b *B2BPartnerContent `pulumi:"b2b"`
}

// PartnerContentInput is an input type that accepts PartnerContentArgs and PartnerContentOutput values.
// You can construct a concrete instance of `PartnerContentInput` via:
//
//          PartnerContentArgs{...}
type PartnerContentInput interface {
	pulumi.Input

	ToPartnerContentOutput() PartnerContentOutput
	ToPartnerContentOutputWithContext(context.Context) PartnerContentOutput
}

// The integration account partner content.
type PartnerContentArgs struct {
	// The B2B partner content.
	B2b B2BPartnerContentPtrInput `pulumi:"b2b"`
}

func (PartnerContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PartnerContent)(nil)).Elem()
}

func (i PartnerContentArgs) ToPartnerContentOutput() PartnerContentOutput {
	return i.ToPartnerContentOutputWithContext(context.Background())
}

func (i PartnerContentArgs) ToPartnerContentOutputWithContext(ctx context.Context) PartnerContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PartnerContentOutput)
}

func (i PartnerContentArgs) ToPartnerContentPtrOutput() PartnerContentPtrOutput {
	return i.ToPartnerContentPtrOutputWithContext(context.Background())
}

func (i PartnerContentArgs) ToPartnerContentPtrOutputWithContext(ctx context.Context) PartnerContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PartnerContentOutput).ToPartnerContentPtrOutputWithContext(ctx)
}

// PartnerContentPtrInput is an input type that accepts PartnerContentArgs, PartnerContentPtr and PartnerContentPtrOutput values.
// You can construct a concrete instance of `PartnerContentPtrInput` via:
//
//          PartnerContentArgs{...}
//
//  or:
//
//          nil
type PartnerContentPtrInput interface {
	pulumi.Input

	ToPartnerContentPtrOutput() PartnerContentPtrOutput
	ToPartnerContentPtrOutputWithContext(context.Context) PartnerContentPtrOutput
}

type partnerContentPtrType PartnerContentArgs

func PartnerContentPtr(v *PartnerContentArgs) PartnerContentPtrInput {
	return (*partnerContentPtrType)(v)
}

func (*partnerContentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PartnerContent)(nil)).Elem()
}

func (i *partnerContentPtrType) ToPartnerContentPtrOutput() PartnerContentPtrOutput {
	return i.ToPartnerContentPtrOutputWithContext(context.Background())
}

func (i *partnerContentPtrType) ToPartnerContentPtrOutputWithContext(ctx context.Context) PartnerContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PartnerContentPtrOutput)
}

// The integration account partner content.
type PartnerContentResponse struct {
	// The B2B partner content.
	B2b *B2BPartnerContentResponse `pulumi:"b2b"`
}

// The integration account partner content.
type PartnerContentResponseOutput struct{ *pulumi.OutputState }

func (PartnerContentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PartnerContentResponse)(nil)).Elem()
}

func (o PartnerContentResponseOutput) ToPartnerContentResponseOutput() PartnerContentResponseOutput {
	return o
}

func (o PartnerContentResponseOutput) ToPartnerContentResponseOutputWithContext(ctx context.Context) PartnerContentResponseOutput {
	return o
}

func (o PartnerContentResponseOutput) ToPartnerContentResponsePtrOutput() PartnerContentResponsePtrOutput {
	return o.ToPartnerContentResponsePtrOutputWithContext(context.Background())
}

func (o PartnerContentResponseOutput) ToPartnerContentResponsePtrOutputWithContext(ctx context.Context) PartnerContentResponsePtrOutput {
	return o.ApplyT(func(v PartnerContentResponse) *PartnerContentResponse {
		return &v
	}).(PartnerContentResponsePtrOutput)
}

// The B2B partner content.
func (o PartnerContentResponseOutput) B2b() B2BPartnerContentResponsePtrOutput {
	return o.ApplyT(func(v PartnerContentResponse) *B2BPartnerContentResponse { return v.B2b }).(B2BPartnerContentResponsePtrOutput)
}

type PartnerContentResponsePtrOutput struct{ *pulumi.OutputState }

func (PartnerContentResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PartnerContentResponse)(nil)).Elem()
}

func (o PartnerContentResponsePtrOutput) ToPartnerContentResponsePtrOutput() PartnerContentResponsePtrOutput {
	return o
}

func (o PartnerContentResponsePtrOutput) ToPartnerContentResponsePtrOutputWithContext(ctx context.Context) PartnerContentResponsePtrOutput {
	return o
}

func (o PartnerContentResponsePtrOutput) Elem() PartnerContentResponseOutput {
	return o.ApplyT(func(v *PartnerContentResponse) PartnerContentResponse { return *v }).(PartnerContentResponseOutput)
}

// The B2B partner content.
func (o PartnerContentResponsePtrOutput) B2b() B2BPartnerContentResponsePtrOutput {
	return o.ApplyT(func(v *PartnerContentResponse) *B2BPartnerContentResponse {
		if v == nil {
			return nil
		}
		return v.B2b
	}).(B2BPartnerContentResponsePtrOutput)
}

// The recurrence schedule.
type RecurrenceSchedule struct {
	// The hours.
	Hours []int `pulumi:"hours"`
	// The minutes.
	Minutes []int `pulumi:"minutes"`
	// The month days.
	MonthDays []int `pulumi:"monthDays"`
	// The monthly occurrences.
	MonthlyOccurrences []RecurrenceScheduleOccurrence `pulumi:"monthlyOccurrences"`
	// The days of the week.
	WeekDays []string `pulumi:"weekDays"`
}

// RecurrenceScheduleInput is an input type that accepts RecurrenceScheduleArgs and RecurrenceScheduleOutput values.
// You can construct a concrete instance of `RecurrenceScheduleInput` via:
//
//          RecurrenceScheduleArgs{...}
type RecurrenceScheduleInput interface {
	pulumi.Input

	ToRecurrenceScheduleOutput() RecurrenceScheduleOutput
	ToRecurrenceScheduleOutputWithContext(context.Context) RecurrenceScheduleOutput
}

// The recurrence schedule.
type RecurrenceScheduleArgs struct {
	// The hours.
	Hours pulumi.IntArrayInput `pulumi:"hours"`
	// The minutes.
	Minutes pulumi.IntArrayInput `pulumi:"minutes"`
	// The month days.
	MonthDays pulumi.IntArrayInput `pulumi:"monthDays"`
	// The monthly occurrences.
	MonthlyOccurrences RecurrenceScheduleOccurrenceArrayInput `pulumi:"monthlyOccurrences"`
	// The days of the week.
	WeekDays pulumi.StringArrayInput `pulumi:"weekDays"`
}

func (RecurrenceScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecurrenceSchedule)(nil)).Elem()
}

func (i RecurrenceScheduleArgs) ToRecurrenceScheduleOutput() RecurrenceScheduleOutput {
	return i.ToRecurrenceScheduleOutputWithContext(context.Background())
}

func (i RecurrenceScheduleArgs) ToRecurrenceScheduleOutputWithContext(ctx context.Context) RecurrenceScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecurrenceScheduleOutput)
}

func (i RecurrenceScheduleArgs) ToRecurrenceSchedulePtrOutput() RecurrenceSchedulePtrOutput {
	return i.ToRecurrenceSchedulePtrOutputWithContext(context.Background())
}

func (i RecurrenceScheduleArgs) ToRecurrenceSchedulePtrOutputWithContext(ctx context.Context) RecurrenceSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecurrenceScheduleOutput).ToRecurrenceSchedulePtrOutputWithContext(ctx)
}

// RecurrenceSchedulePtrInput is an input type that accepts RecurrenceScheduleArgs, RecurrenceSchedulePtr and RecurrenceSchedulePtrOutput values.
// You can construct a concrete instance of `RecurrenceSchedulePtrInput` via:
//
//          RecurrenceScheduleArgs{...}
//
//  or:
//
//          nil
type RecurrenceSchedulePtrInput interface {
	pulumi.Input

	ToRecurrenceSchedulePtrOutput() RecurrenceSchedulePtrOutput
	ToRecurrenceSchedulePtrOutputWithContext(context.Context) RecurrenceSchedulePtrOutput
}

type recurrenceSchedulePtrType RecurrenceScheduleArgs

func RecurrenceSchedulePtr(v *RecurrenceScheduleArgs) RecurrenceSchedulePtrInput {
	return (*recurrenceSchedulePtrType)(v)
}

func (*recurrenceSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecurrenceSchedule)(nil)).Elem()
}

func (i *recurrenceSchedulePtrType) ToRecurrenceSchedulePtrOutput() RecurrenceSchedulePtrOutput {
	return i.ToRecurrenceSchedulePtrOutputWithContext(context.Background())
}

func (i *recurrenceSchedulePtrType) ToRecurrenceSchedulePtrOutputWithContext(ctx context.Context) RecurrenceSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecurrenceSchedulePtrOutput)
}

// The recurrence schedule occurrence.
type RecurrenceScheduleOccurrence struct {
	// The day of the week.
	Day *string `pulumi:"day"`
	// The occurrence.
	Occurrence *int `pulumi:"occurrence"`
}

// RecurrenceScheduleOccurrenceInput is an input type that accepts RecurrenceScheduleOccurrenceArgs and RecurrenceScheduleOccurrenceOutput values.
// You can construct a concrete instance of `RecurrenceScheduleOccurrenceInput` via:
//
//          RecurrenceScheduleOccurrenceArgs{...}
type RecurrenceScheduleOccurrenceInput interface {
	pulumi.Input

	ToRecurrenceScheduleOccurrenceOutput() RecurrenceScheduleOccurrenceOutput
	ToRecurrenceScheduleOccurrenceOutputWithContext(context.Context) RecurrenceScheduleOccurrenceOutput
}

// The recurrence schedule occurrence.
type RecurrenceScheduleOccurrenceArgs struct {
	// The day of the week.
	Day pulumi.StringPtrInput `pulumi:"day"`
	// The occurrence.
	Occurrence pulumi.IntPtrInput `pulumi:"occurrence"`
}

func (RecurrenceScheduleOccurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecurrenceScheduleOccurrence)(nil)).Elem()
}

func (i RecurrenceScheduleOccurrenceArgs) ToRecurrenceScheduleOccurrenceOutput() RecurrenceScheduleOccurrenceOutput {
	return i.ToRecurrenceScheduleOccurrenceOutputWithContext(context.Background())
}

func (i RecurrenceScheduleOccurrenceArgs) ToRecurrenceScheduleOccurrenceOutputWithContext(ctx context.Context) RecurrenceScheduleOccurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecurrenceScheduleOccurrenceOutput)
}

// RecurrenceScheduleOccurrenceArrayInput is an input type that accepts RecurrenceScheduleOccurrenceArray and RecurrenceScheduleOccurrenceArrayOutput values.
// You can construct a concrete instance of `RecurrenceScheduleOccurrenceArrayInput` via:
//
//          RecurrenceScheduleOccurrenceArray{ RecurrenceScheduleOccurrenceArgs{...} }
type RecurrenceScheduleOccurrenceArrayInput interface {
	pulumi.Input

	ToRecurrenceScheduleOccurrenceArrayOutput() RecurrenceScheduleOccurrenceArrayOutput
	ToRecurrenceScheduleOccurrenceArrayOutputWithContext(context.Context) RecurrenceScheduleOccurrenceArrayOutput
}

type RecurrenceScheduleOccurrenceArray []RecurrenceScheduleOccurrenceInput

func (RecurrenceScheduleOccurrenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecurrenceScheduleOccurrence)(nil)).Elem()
}

func (i RecurrenceScheduleOccurrenceArray) ToRecurrenceScheduleOccurrenceArrayOutput() RecurrenceScheduleOccurrenceArrayOutput {
	return i.ToRecurrenceScheduleOccurrenceArrayOutputWithContext(context.Background())
}

func (i RecurrenceScheduleOccurrenceArray) ToRecurrenceScheduleOccurrenceArrayOutputWithContext(ctx context.Context) RecurrenceScheduleOccurrenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecurrenceScheduleOccurrenceArrayOutput)
}

// The recurrence schedule occurrence.
type RecurrenceScheduleOccurrenceResponse struct {
	// The day of the week.
	Day *string `pulumi:"day"`
	// The occurrence.
	Occurrence *int `pulumi:"occurrence"`
}

// The recurrence schedule occurrence.
type RecurrenceScheduleOccurrenceResponseOutput struct{ *pulumi.OutputState }

func (RecurrenceScheduleOccurrenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecurrenceScheduleOccurrenceResponse)(nil)).Elem()
}

func (o RecurrenceScheduleOccurrenceResponseOutput) ToRecurrenceScheduleOccurrenceResponseOutput() RecurrenceScheduleOccurrenceResponseOutput {
	return o
}

func (o RecurrenceScheduleOccurrenceResponseOutput) ToRecurrenceScheduleOccurrenceResponseOutputWithContext(ctx context.Context) RecurrenceScheduleOccurrenceResponseOutput {
	return o
}

// The day of the week.
func (o RecurrenceScheduleOccurrenceResponseOutput) Day() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecurrenceScheduleOccurrenceResponse) *string { return v.Day }).(pulumi.StringPtrOutput)
}

// The occurrence.
func (o RecurrenceScheduleOccurrenceResponseOutput) Occurrence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecurrenceScheduleOccurrenceResponse) *int { return v.Occurrence }).(pulumi.IntPtrOutput)
}

type RecurrenceScheduleOccurrenceResponseArrayOutput struct{ *pulumi.OutputState }

func (RecurrenceScheduleOccurrenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecurrenceScheduleOccurrenceResponse)(nil)).Elem()
}

func (o RecurrenceScheduleOccurrenceResponseArrayOutput) ToRecurrenceScheduleOccurrenceResponseArrayOutput() RecurrenceScheduleOccurrenceResponseArrayOutput {
	return o
}

func (o RecurrenceScheduleOccurrenceResponseArrayOutput) ToRecurrenceScheduleOccurrenceResponseArrayOutputWithContext(ctx context.Context) RecurrenceScheduleOccurrenceResponseArrayOutput {
	return o
}

func (o RecurrenceScheduleOccurrenceResponseArrayOutput) Index(i pulumi.IntInput) RecurrenceScheduleOccurrenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecurrenceScheduleOccurrenceResponse {
		return vs[0].([]RecurrenceScheduleOccurrenceResponse)[vs[1].(int)]
	}).(RecurrenceScheduleOccurrenceResponseOutput)
}

// The recurrence schedule.
type RecurrenceScheduleResponse struct {
	// The hours.
	Hours []int `pulumi:"hours"`
	// The minutes.
	Minutes []int `pulumi:"minutes"`
	// The month days.
	MonthDays []int `pulumi:"monthDays"`
	// The monthly occurrences.
	MonthlyOccurrences []RecurrenceScheduleOccurrenceResponse `pulumi:"monthlyOccurrences"`
	// The days of the week.
	WeekDays []string `pulumi:"weekDays"`
}

// The recurrence schedule.
type RecurrenceScheduleResponseOutput struct{ *pulumi.OutputState }

func (RecurrenceScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecurrenceScheduleResponse)(nil)).Elem()
}

func (o RecurrenceScheduleResponseOutput) ToRecurrenceScheduleResponseOutput() RecurrenceScheduleResponseOutput {
	return o
}

func (o RecurrenceScheduleResponseOutput) ToRecurrenceScheduleResponseOutputWithContext(ctx context.Context) RecurrenceScheduleResponseOutput {
	return o
}

func (o RecurrenceScheduleResponseOutput) ToRecurrenceScheduleResponsePtrOutput() RecurrenceScheduleResponsePtrOutput {
	return o.ToRecurrenceScheduleResponsePtrOutputWithContext(context.Background())
}

func (o RecurrenceScheduleResponseOutput) ToRecurrenceScheduleResponsePtrOutputWithContext(ctx context.Context) RecurrenceScheduleResponsePtrOutput {
	return o.ApplyT(func(v RecurrenceScheduleResponse) *RecurrenceScheduleResponse {
		return &v
	}).(RecurrenceScheduleResponsePtrOutput)
}

// The hours.
func (o RecurrenceScheduleResponseOutput) Hours() pulumi.IntArrayOutput {
	return o.ApplyT(func(v RecurrenceScheduleResponse) []int { return v.Hours }).(pulumi.IntArrayOutput)
}

// The minutes.
func (o RecurrenceScheduleResponseOutput) Minutes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v RecurrenceScheduleResponse) []int { return v.Minutes }).(pulumi.IntArrayOutput)
}

// The month days.
func (o RecurrenceScheduleResponseOutput) MonthDays() pulumi.IntArrayOutput {
	return o.ApplyT(func(v RecurrenceScheduleResponse) []int { return v.MonthDays }).(pulumi.IntArrayOutput)
}

// The monthly occurrences.
func (o RecurrenceScheduleResponseOutput) MonthlyOccurrences() RecurrenceScheduleOccurrenceResponseArrayOutput {
	return o.ApplyT(func(v RecurrenceScheduleResponse) []RecurrenceScheduleOccurrenceResponse { return v.MonthlyOccurrences }).(RecurrenceScheduleOccurrenceResponseArrayOutput)
}

// The days of the week.
func (o RecurrenceScheduleResponseOutput) WeekDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecurrenceScheduleResponse) []string { return v.WeekDays }).(pulumi.StringArrayOutput)
}

type RecurrenceScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (RecurrenceScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecurrenceScheduleResponse)(nil)).Elem()
}

func (o RecurrenceScheduleResponsePtrOutput) ToRecurrenceScheduleResponsePtrOutput() RecurrenceScheduleResponsePtrOutput {
	return o
}

func (o RecurrenceScheduleResponsePtrOutput) ToRecurrenceScheduleResponsePtrOutputWithContext(ctx context.Context) RecurrenceScheduleResponsePtrOutput {
	return o
}

func (o RecurrenceScheduleResponsePtrOutput) Elem() RecurrenceScheduleResponseOutput {
	return o.ApplyT(func(v *RecurrenceScheduleResponse) RecurrenceScheduleResponse { return *v }).(RecurrenceScheduleResponseOutput)
}

// The hours.
func (o RecurrenceScheduleResponsePtrOutput) Hours() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *RecurrenceScheduleResponse) []int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntArrayOutput)
}

// The minutes.
func (o RecurrenceScheduleResponsePtrOutput) Minutes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *RecurrenceScheduleResponse) []int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntArrayOutput)
}

// The month days.
func (o RecurrenceScheduleResponsePtrOutput) MonthDays() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *RecurrenceScheduleResponse) []int {
		if v == nil {
			return nil
		}
		return v.MonthDays
	}).(pulumi.IntArrayOutput)
}

// The monthly occurrences.
func (o RecurrenceScheduleResponsePtrOutput) MonthlyOccurrences() RecurrenceScheduleOccurrenceResponseArrayOutput {
	return o.ApplyT(func(v *RecurrenceScheduleResponse) []RecurrenceScheduleOccurrenceResponse {
		if v == nil {
			return nil
		}
		return v.MonthlyOccurrences
	}).(RecurrenceScheduleOccurrenceResponseArrayOutput)
}

// The days of the week.
func (o RecurrenceScheduleResponsePtrOutput) WeekDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RecurrenceScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.WeekDays
	}).(pulumi.StringArrayOutput)
}

// The resource reference.
type ResourceReference struct {
	// The resource id.
	Id *string `pulumi:"id"`
}

// ResourceReferenceInput is an input type that accepts ResourceReferenceArgs and ResourceReferenceOutput values.
// You can construct a concrete instance of `ResourceReferenceInput` via:
//
//          ResourceReferenceArgs{...}
type ResourceReferenceInput interface {
	pulumi.Input

	ToResourceReferenceOutput() ResourceReferenceOutput
	ToResourceReferenceOutputWithContext(context.Context) ResourceReferenceOutput
}

// The resource reference.
type ResourceReferenceArgs struct {
	// The resource id.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ResourceReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReference)(nil)).Elem()
}

func (i ResourceReferenceArgs) ToResourceReferenceOutput() ResourceReferenceOutput {
	return i.ToResourceReferenceOutputWithContext(context.Background())
}

func (i ResourceReferenceArgs) ToResourceReferenceOutputWithContext(ctx context.Context) ResourceReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceOutput)
}

func (i ResourceReferenceArgs) ToResourceReferencePtrOutput() ResourceReferencePtrOutput {
	return i.ToResourceReferencePtrOutputWithContext(context.Background())
}

func (i ResourceReferenceArgs) ToResourceReferencePtrOutputWithContext(ctx context.Context) ResourceReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceOutput).ToResourceReferencePtrOutputWithContext(ctx)
}

// ResourceReferencePtrInput is an input type that accepts ResourceReferenceArgs, ResourceReferencePtr and ResourceReferencePtrOutput values.
// You can construct a concrete instance of `ResourceReferencePtrInput` via:
//
//          ResourceReferenceArgs{...}
//
//  or:
//
//          nil
type ResourceReferencePtrInput interface {
	pulumi.Input

	ToResourceReferencePtrOutput() ResourceReferencePtrOutput
	ToResourceReferencePtrOutputWithContext(context.Context) ResourceReferencePtrOutput
}

type resourceReferencePtrType ResourceReferenceArgs

func ResourceReferencePtr(v *ResourceReferenceArgs) ResourceReferencePtrInput {
	return (*resourceReferencePtrType)(v)
}

func (*resourceReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceReference)(nil)).Elem()
}

func (i *resourceReferencePtrType) ToResourceReferencePtrOutput() ResourceReferencePtrOutput {
	return i.ToResourceReferencePtrOutputWithContext(context.Background())
}

func (i *resourceReferencePtrType) ToResourceReferencePtrOutputWithContext(ctx context.Context) ResourceReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferencePtrOutput)
}

// ResourceReferenceArrayInput is an input type that accepts ResourceReferenceArray and ResourceReferenceArrayOutput values.
// You can construct a concrete instance of `ResourceReferenceArrayInput` via:
//
//          ResourceReferenceArray{ ResourceReferenceArgs{...} }
type ResourceReferenceArrayInput interface {
	pulumi.Input

	ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput
	ToResourceReferenceArrayOutputWithContext(context.Context) ResourceReferenceArrayOutput
}

type ResourceReferenceArray []ResourceReferenceInput

func (ResourceReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReference)(nil)).Elem()
}

func (i ResourceReferenceArray) ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput {
	return i.ToResourceReferenceArrayOutputWithContext(context.Background())
}

func (i ResourceReferenceArray) ToResourceReferenceArrayOutputWithContext(ctx context.Context) ResourceReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceArrayOutput)
}

// The resource reference.
type ResourceReferenceResponse struct {
	// The resource id.
	Id *string `pulumi:"id"`
	// Gets the resource name.
	Name string `pulumi:"name"`
	// Gets the resource type.
	Type string `pulumi:"type"`
}

// The resource reference.
type ResourceReferenceResponseOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponseOutput() ResourceReferenceResponseOutput {
	return o
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponseOutputWithContext(ctx context.Context) ResourceReferenceResponseOutput {
	return o
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponsePtrOutput() ResourceReferenceResponsePtrOutput {
	return o.ToResourceReferenceResponsePtrOutputWithContext(context.Background())
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponsePtrOutputWithContext(ctx context.Context) ResourceReferenceResponsePtrOutput {
	return o.ApplyT(func(v ResourceReferenceResponse) *ResourceReferenceResponse {
		return &v
	}).(ResourceReferenceResponsePtrOutput)
}

// The resource id.
func (o ResourceReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets the resource name.
func (o ResourceReferenceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceReferenceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Gets the resource type.
func (o ResourceReferenceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceReferenceResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ResourceReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponsePtrOutput) ToResourceReferenceResponsePtrOutput() ResourceReferenceResponsePtrOutput {
	return o
}

func (o ResourceReferenceResponsePtrOutput) ToResourceReferenceResponsePtrOutputWithContext(ctx context.Context) ResourceReferenceResponsePtrOutput {
	return o
}

func (o ResourceReferenceResponsePtrOutput) Elem() ResourceReferenceResponseOutput {
	return o.ApplyT(func(v *ResourceReferenceResponse) ResourceReferenceResponse { return *v }).(ResourceReferenceResponseOutput)
}

// The resource id.
func (o ResourceReferenceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Gets the resource name.
func (o ResourceReferenceResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Gets the resource type.
func (o ResourceReferenceResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ResourceReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponseArrayOutput) ToResourceReferenceResponseArrayOutput() ResourceReferenceResponseArrayOutput {
	return o
}

func (o ResourceReferenceResponseArrayOutput) ToResourceReferenceResponseArrayOutputWithContext(ctx context.Context) ResourceReferenceResponseArrayOutput {
	return o
}

func (o ResourceReferenceResponseArrayOutput) Index(i pulumi.IntInput) ResourceReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceReferenceResponse {
		return vs[0].([]ResourceReferenceResponse)[vs[1].(int)]
	}).(ResourceReferenceResponseOutput)
}

// The sku type.
type SkuResponse struct {
	// The name.
	Name string `pulumi:"name"`
	// The reference to plan.
	Plan *ResourceReferenceResponse `pulumi:"plan"`
}

// The sku type.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// The name.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The reference to plan.
func (o SkuResponseOutput) Plan() ResourceReferenceResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *ResourceReferenceResponse { return v.Plan }).(ResourceReferenceResponsePtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// The name.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The reference to plan.
func (o SkuResponsePtrOutput) Plan() ResourceReferenceResponsePtrOutput {
	return o.ApplyT(func(v *SkuResponse) *ResourceReferenceResponse {
		if v == nil {
			return nil
		}
		return v.Plan
	}).(ResourceReferenceResponsePtrOutput)
}

// The workflow parameters.
type WorkflowParameter struct {
	// The description.
	Description *string `pulumi:"description"`
	// The metadata.
	Metadata map[string]interface{} `pulumi:"metadata"`
	// The type.
	Type *string `pulumi:"type"`
	// The value.
	Value map[string]interface{} `pulumi:"value"`
}

// WorkflowParameterInput is an input type that accepts WorkflowParameterArgs and WorkflowParameterOutput values.
// You can construct a concrete instance of `WorkflowParameterInput` via:
//
//          WorkflowParameterArgs{...}
type WorkflowParameterInput interface {
	pulumi.Input

	ToWorkflowParameterOutput() WorkflowParameterOutput
	ToWorkflowParameterOutputWithContext(context.Context) WorkflowParameterOutput
}

// The workflow parameters.
type WorkflowParameterArgs struct {
	// The description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The metadata.
	Metadata pulumi.MapInput `pulumi:"metadata"`
	// The type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The value.
	Value pulumi.MapInput `pulumi:"value"`
}

func (WorkflowParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowParameter)(nil)).Elem()
}

func (i WorkflowParameterArgs) ToWorkflowParameterOutput() WorkflowParameterOutput {
	return i.ToWorkflowParameterOutputWithContext(context.Background())
}

func (i WorkflowParameterArgs) ToWorkflowParameterOutputWithContext(ctx context.Context) WorkflowParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowParameterOutput)
}

// WorkflowParameterMapInput is an input type that accepts WorkflowParameterMap and WorkflowParameterMapOutput values.
// You can construct a concrete instance of `WorkflowParameterMapInput` via:
//
//          WorkflowParameterMap{ "key": WorkflowParameterArgs{...} }
type WorkflowParameterMapInput interface {
	pulumi.Input

	ToWorkflowParameterMapOutput() WorkflowParameterMapOutput
	ToWorkflowParameterMapOutputWithContext(context.Context) WorkflowParameterMapOutput
}

type WorkflowParameterMap map[string]WorkflowParameterInput

func (WorkflowParameterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]WorkflowParameter)(nil)).Elem()
}

func (i WorkflowParameterMap) ToWorkflowParameterMapOutput() WorkflowParameterMapOutput {
	return i.ToWorkflowParameterMapOutputWithContext(context.Background())
}

func (i WorkflowParameterMap) ToWorkflowParameterMapOutputWithContext(ctx context.Context) WorkflowParameterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowParameterMapOutput)
}

// The workflow parameters.
type WorkflowParameterResponse struct {
	// The description.
	Description *string `pulumi:"description"`
	// The metadata.
	Metadata map[string]interface{} `pulumi:"metadata"`
	// The type.
	Type *string `pulumi:"type"`
	// The value.
	Value map[string]interface{} `pulumi:"value"`
}

// The workflow parameters.
type WorkflowParameterResponseOutput struct{ *pulumi.OutputState }

func (WorkflowParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowParameterResponse)(nil)).Elem()
}

func (o WorkflowParameterResponseOutput) ToWorkflowParameterResponseOutput() WorkflowParameterResponseOutput {
	return o
}

func (o WorkflowParameterResponseOutput) ToWorkflowParameterResponseOutputWithContext(ctx context.Context) WorkflowParameterResponseOutput {
	return o
}

// The description.
func (o WorkflowParameterResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowParameterResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The metadata.
func (o WorkflowParameterResponseOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v WorkflowParameterResponse) map[string]interface{} { return v.Metadata }).(pulumi.MapOutput)
}

// The type.
func (o WorkflowParameterResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowParameterResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value.
func (o WorkflowParameterResponseOutput) Value() pulumi.MapOutput {
	return o.ApplyT(func(v WorkflowParameterResponse) map[string]interface{} { return v.Value }).(pulumi.MapOutput)
}

type WorkflowParameterResponseMapOutput struct{ *pulumi.OutputState }

func (WorkflowParameterResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]WorkflowParameterResponse)(nil)).Elem()
}

func (o WorkflowParameterResponseMapOutput) ToWorkflowParameterResponseMapOutput() WorkflowParameterResponseMapOutput {
	return o
}

func (o WorkflowParameterResponseMapOutput) ToWorkflowParameterResponseMapOutputWithContext(ctx context.Context) WorkflowParameterResponseMapOutput {
	return o
}

func (o WorkflowParameterResponseMapOutput) MapIndex(k pulumi.StringInput) WorkflowParameterResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) WorkflowParameterResponse {
		return vs[0].(map[string]WorkflowParameterResponse)[vs[1].(string)]
	}).(WorkflowParameterResponseOutput)
}

// Gets the workflow trigger callback URL query parameters.
type WorkflowTriggerListCallbackUrlQueriesResponse struct {
	// The api version.
	ApiVersion *string `pulumi:"apiVersion"`
	// The SAS timestamp.
	Se *string `pulumi:"se"`
	// The SAS signature.
	Sig *string `pulumi:"sig"`
	// The SAS permissions.
	Sp *string `pulumi:"sp"`
	// The SAS version.
	Sv *string `pulumi:"sv"`
}

// The workflow trigger recurrence.
type WorkflowTriggerRecurrence struct {
	// The end time.
	EndTime *string `pulumi:"endTime"`
	// The frequency.
	Frequency *string `pulumi:"frequency"`
	// The interval.
	Interval *int `pulumi:"interval"`
	// The recurrence schedule.
	Schedule *RecurrenceSchedule `pulumi:"schedule"`
	// The start time.
	StartTime *string `pulumi:"startTime"`
	// The time zone.
	TimeZone *string `pulumi:"timeZone"`
}

// WorkflowTriggerRecurrenceInput is an input type that accepts WorkflowTriggerRecurrenceArgs and WorkflowTriggerRecurrenceOutput values.
// You can construct a concrete instance of `WorkflowTriggerRecurrenceInput` via:
//
//          WorkflowTriggerRecurrenceArgs{...}
type WorkflowTriggerRecurrenceInput interface {
	pulumi.Input

	ToWorkflowTriggerRecurrenceOutput() WorkflowTriggerRecurrenceOutput
	ToWorkflowTriggerRecurrenceOutputWithContext(context.Context) WorkflowTriggerRecurrenceOutput
}

// The workflow trigger recurrence.
type WorkflowTriggerRecurrenceArgs struct {
	// The end time.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// The frequency.
	Frequency pulumi.StringPtrInput `pulumi:"frequency"`
	// The interval.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// The recurrence schedule.
	Schedule RecurrenceSchedulePtrInput `pulumi:"schedule"`
	// The start time.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// The time zone.
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (WorkflowTriggerRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTriggerRecurrence)(nil)).Elem()
}

func (i WorkflowTriggerRecurrenceArgs) ToWorkflowTriggerRecurrenceOutput() WorkflowTriggerRecurrenceOutput {
	return i.ToWorkflowTriggerRecurrenceOutputWithContext(context.Background())
}

func (i WorkflowTriggerRecurrenceArgs) ToWorkflowTriggerRecurrenceOutputWithContext(ctx context.Context) WorkflowTriggerRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTriggerRecurrenceOutput)
}

func (i WorkflowTriggerRecurrenceArgs) ToWorkflowTriggerRecurrencePtrOutput() WorkflowTriggerRecurrencePtrOutput {
	return i.ToWorkflowTriggerRecurrencePtrOutputWithContext(context.Background())
}

func (i WorkflowTriggerRecurrenceArgs) ToWorkflowTriggerRecurrencePtrOutputWithContext(ctx context.Context) WorkflowTriggerRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTriggerRecurrenceOutput).ToWorkflowTriggerRecurrencePtrOutputWithContext(ctx)
}

// WorkflowTriggerRecurrencePtrInput is an input type that accepts WorkflowTriggerRecurrenceArgs, WorkflowTriggerRecurrencePtr and WorkflowTriggerRecurrencePtrOutput values.
// You can construct a concrete instance of `WorkflowTriggerRecurrencePtrInput` via:
//
//          WorkflowTriggerRecurrenceArgs{...}
//
//  or:
//
//          nil
type WorkflowTriggerRecurrencePtrInput interface {
	pulumi.Input

	ToWorkflowTriggerRecurrencePtrOutput() WorkflowTriggerRecurrencePtrOutput
	ToWorkflowTriggerRecurrencePtrOutputWithContext(context.Context) WorkflowTriggerRecurrencePtrOutput
}

type workflowTriggerRecurrencePtrType WorkflowTriggerRecurrenceArgs

func WorkflowTriggerRecurrencePtr(v *WorkflowTriggerRecurrenceArgs) WorkflowTriggerRecurrencePtrInput {
	return (*workflowTriggerRecurrencePtrType)(v)
}

func (*workflowTriggerRecurrencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTriggerRecurrence)(nil)).Elem()
}

func (i *workflowTriggerRecurrencePtrType) ToWorkflowTriggerRecurrencePtrOutput() WorkflowTriggerRecurrencePtrOutput {
	return i.ToWorkflowTriggerRecurrencePtrOutputWithContext(context.Background())
}

func (i *workflowTriggerRecurrencePtrType) ToWorkflowTriggerRecurrencePtrOutputWithContext(ctx context.Context) WorkflowTriggerRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowTriggerRecurrencePtrOutput)
}

// The workflow trigger recurrence.
type WorkflowTriggerRecurrenceResponse struct {
	// The end time.
	EndTime *string `pulumi:"endTime"`
	// The frequency.
	Frequency *string `pulumi:"frequency"`
	// The interval.
	Interval *int `pulumi:"interval"`
	// The recurrence schedule.
	Schedule *RecurrenceScheduleResponse `pulumi:"schedule"`
	// The start time.
	StartTime *string `pulumi:"startTime"`
	// The time zone.
	TimeZone *string `pulumi:"timeZone"`
}

// The workflow trigger recurrence.
type WorkflowTriggerRecurrenceResponseOutput struct{ *pulumi.OutputState }

func (WorkflowTriggerRecurrenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTriggerRecurrenceResponse)(nil)).Elem()
}

func (o WorkflowTriggerRecurrenceResponseOutput) ToWorkflowTriggerRecurrenceResponseOutput() WorkflowTriggerRecurrenceResponseOutput {
	return o
}

func (o WorkflowTriggerRecurrenceResponseOutput) ToWorkflowTriggerRecurrenceResponseOutputWithContext(ctx context.Context) WorkflowTriggerRecurrenceResponseOutput {
	return o
}

func (o WorkflowTriggerRecurrenceResponseOutput) ToWorkflowTriggerRecurrenceResponsePtrOutput() WorkflowTriggerRecurrenceResponsePtrOutput {
	return o.ToWorkflowTriggerRecurrenceResponsePtrOutputWithContext(context.Background())
}

func (o WorkflowTriggerRecurrenceResponseOutput) ToWorkflowTriggerRecurrenceResponsePtrOutputWithContext(ctx context.Context) WorkflowTriggerRecurrenceResponsePtrOutput {
	return o.ApplyT(func(v WorkflowTriggerRecurrenceResponse) *WorkflowTriggerRecurrenceResponse {
		return &v
	}).(WorkflowTriggerRecurrenceResponsePtrOutput)
}

// The end time.
func (o WorkflowTriggerRecurrenceResponseOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTriggerRecurrenceResponse) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// The frequency.
func (o WorkflowTriggerRecurrenceResponseOutput) Frequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTriggerRecurrenceResponse) *string { return v.Frequency }).(pulumi.StringPtrOutput)
}

// The interval.
func (o WorkflowTriggerRecurrenceResponseOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkflowTriggerRecurrenceResponse) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// The recurrence schedule.
func (o WorkflowTriggerRecurrenceResponseOutput) Schedule() RecurrenceScheduleResponsePtrOutput {
	return o.ApplyT(func(v WorkflowTriggerRecurrenceResponse) *RecurrenceScheduleResponse { return v.Schedule }).(RecurrenceScheduleResponsePtrOutput)
}

// The start time.
func (o WorkflowTriggerRecurrenceResponseOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTriggerRecurrenceResponse) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// The time zone.
func (o WorkflowTriggerRecurrenceResponseOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTriggerRecurrenceResponse) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type WorkflowTriggerRecurrenceResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkflowTriggerRecurrenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTriggerRecurrenceResponse)(nil)).Elem()
}

func (o WorkflowTriggerRecurrenceResponsePtrOutput) ToWorkflowTriggerRecurrenceResponsePtrOutput() WorkflowTriggerRecurrenceResponsePtrOutput {
	return o
}

func (o WorkflowTriggerRecurrenceResponsePtrOutput) ToWorkflowTriggerRecurrenceResponsePtrOutputWithContext(ctx context.Context) WorkflowTriggerRecurrenceResponsePtrOutput {
	return o
}

func (o WorkflowTriggerRecurrenceResponsePtrOutput) Elem() WorkflowTriggerRecurrenceResponseOutput {
	return o.ApplyT(func(v *WorkflowTriggerRecurrenceResponse) WorkflowTriggerRecurrenceResponse { return *v }).(WorkflowTriggerRecurrenceResponseOutput)
}

// The end time.
func (o WorkflowTriggerRecurrenceResponsePtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTriggerRecurrenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// The frequency.
func (o WorkflowTriggerRecurrenceResponsePtrOutput) Frequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTriggerRecurrenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Frequency
	}).(pulumi.StringPtrOutput)
}

// The interval.
func (o WorkflowTriggerRecurrenceResponsePtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkflowTriggerRecurrenceResponse) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// The recurrence schedule.
func (o WorkflowTriggerRecurrenceResponsePtrOutput) Schedule() RecurrenceScheduleResponsePtrOutput {
	return o.ApplyT(func(v *WorkflowTriggerRecurrenceResponse) *RecurrenceScheduleResponse {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(RecurrenceScheduleResponsePtrOutput)
}

// The start time.
func (o WorkflowTriggerRecurrenceResponsePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTriggerRecurrenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// The time zone.
func (o WorkflowTriggerRecurrenceResponsePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTriggerRecurrenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// The WSDL service.
type WsdlServiceResponse struct {
	// The list of endpoints' qualified names.
	EndpointQualifiedNames []string `pulumi:"endpointQualifiedNames"`
	// The qualified name.
	QualifiedName *string `pulumi:"qualifiedName"`
}

// The WSDL service.
type WsdlServiceResponseOutput struct{ *pulumi.OutputState }

func (WsdlServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WsdlServiceResponse)(nil)).Elem()
}

func (o WsdlServiceResponseOutput) ToWsdlServiceResponseOutput() WsdlServiceResponseOutput {
	return o
}

func (o WsdlServiceResponseOutput) ToWsdlServiceResponseOutputWithContext(ctx context.Context) WsdlServiceResponseOutput {
	return o
}

func (o WsdlServiceResponseOutput) ToWsdlServiceResponsePtrOutput() WsdlServiceResponsePtrOutput {
	return o.ToWsdlServiceResponsePtrOutputWithContext(context.Background())
}

func (o WsdlServiceResponseOutput) ToWsdlServiceResponsePtrOutputWithContext(ctx context.Context) WsdlServiceResponsePtrOutput {
	return o.ApplyT(func(v WsdlServiceResponse) *WsdlServiceResponse {
		return &v
	}).(WsdlServiceResponsePtrOutput)
}

// The list of endpoints' qualified names.
func (o WsdlServiceResponseOutput) EndpointQualifiedNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WsdlServiceResponse) []string { return v.EndpointQualifiedNames }).(pulumi.StringArrayOutput)
}

// The qualified name.
func (o WsdlServiceResponseOutput) QualifiedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsdlServiceResponse) *string { return v.QualifiedName }).(pulumi.StringPtrOutput)
}

type WsdlServiceResponsePtrOutput struct{ *pulumi.OutputState }

func (WsdlServiceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WsdlServiceResponse)(nil)).Elem()
}

func (o WsdlServiceResponsePtrOutput) ToWsdlServiceResponsePtrOutput() WsdlServiceResponsePtrOutput {
	return o
}

func (o WsdlServiceResponsePtrOutput) ToWsdlServiceResponsePtrOutputWithContext(ctx context.Context) WsdlServiceResponsePtrOutput {
	return o
}

func (o WsdlServiceResponsePtrOutput) Elem() WsdlServiceResponseOutput {
	return o.ApplyT(func(v *WsdlServiceResponse) WsdlServiceResponse { return *v }).(WsdlServiceResponseOutput)
}

// The list of endpoints' qualified names.
func (o WsdlServiceResponsePtrOutput) EndpointQualifiedNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WsdlServiceResponse) []string {
		if v == nil {
			return nil
		}
		return v.EndpointQualifiedNames
	}).(pulumi.StringArrayOutput)
}

// The qualified name.
func (o WsdlServiceResponsePtrOutput) QualifiedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsdlServiceResponse) *string {
		if v == nil {
			return nil
		}
		return v.QualifiedName
	}).(pulumi.StringPtrOutput)
}

// The X12 agreement acknowledgement settings.
type X12AcknowledgementSettings struct {
	// The acknowledgement control number lower bound.
	AcknowledgementControlNumberLowerBound int `pulumi:"acknowledgementControlNumberLowerBound"`
	// The acknowledgement control number prefix.
	AcknowledgementControlNumberPrefix *string `pulumi:"acknowledgementControlNumberPrefix"`
	// The acknowledgement control number suffix.
	AcknowledgementControlNumberSuffix *string `pulumi:"acknowledgementControlNumberSuffix"`
	// The acknowledgement control number upper bound.
	AcknowledgementControlNumberUpperBound int `pulumi:"acknowledgementControlNumberUpperBound"`
	// The value indicating whether to batch functional acknowledgements.
	BatchFunctionalAcknowledgements bool `pulumi:"batchFunctionalAcknowledgements"`
	// The value indicating whether to batch implementation acknowledgements.
	BatchImplementationAcknowledgements bool `pulumi:"batchImplementationAcknowledgements"`
	// The value indicating whether to batch the technical acknowledgements.
	BatchTechnicalAcknowledgements bool `pulumi:"batchTechnicalAcknowledgements"`
	// The functional acknowledgement version.
	FunctionalAcknowledgementVersion *string `pulumi:"functionalAcknowledgementVersion"`
	// The implementation acknowledgement version.
	ImplementationAcknowledgementVersion *string `pulumi:"implementationAcknowledgementVersion"`
	// The value indicating whether functional acknowledgement is needed.
	NeedFunctionalAcknowledgement bool `pulumi:"needFunctionalAcknowledgement"`
	// The value indicating whether implementation acknowledgement is needed.
	NeedImplementationAcknowledgement bool `pulumi:"needImplementationAcknowledgement"`
	// The value indicating whether a loop is needed for valid messages.
	NeedLoopForValidMessages bool `pulumi:"needLoopForValidMessages"`
	// The value indicating whether technical acknowledgement is needed.
	NeedTechnicalAcknowledgement bool `pulumi:"needTechnicalAcknowledgement"`
	// The value indicating whether to rollover acknowledgement control number.
	RolloverAcknowledgementControlNumber bool `pulumi:"rolloverAcknowledgementControlNumber"`
	// The value indicating whether to send synchronous acknowledgement.
	SendSynchronousAcknowledgement bool `pulumi:"sendSynchronousAcknowledgement"`
}

// X12AcknowledgementSettingsInput is an input type that accepts X12AcknowledgementSettingsArgs and X12AcknowledgementSettingsOutput values.
// You can construct a concrete instance of `X12AcknowledgementSettingsInput` via:
//
//          X12AcknowledgementSettingsArgs{...}
type X12AcknowledgementSettingsInput interface {
	pulumi.Input

	ToX12AcknowledgementSettingsOutput() X12AcknowledgementSettingsOutput
	ToX12AcknowledgementSettingsOutputWithContext(context.Context) X12AcknowledgementSettingsOutput
}

// The X12 agreement acknowledgement settings.
type X12AcknowledgementSettingsArgs struct {
	// The acknowledgement control number lower bound.
	AcknowledgementControlNumberLowerBound pulumi.IntInput `pulumi:"acknowledgementControlNumberLowerBound"`
	// The acknowledgement control number prefix.
	AcknowledgementControlNumberPrefix pulumi.StringPtrInput `pulumi:"acknowledgementControlNumberPrefix"`
	// The acknowledgement control number suffix.
	AcknowledgementControlNumberSuffix pulumi.StringPtrInput `pulumi:"acknowledgementControlNumberSuffix"`
	// The acknowledgement control number upper bound.
	AcknowledgementControlNumberUpperBound pulumi.IntInput `pulumi:"acknowledgementControlNumberUpperBound"`
	// The value indicating whether to batch functional acknowledgements.
	BatchFunctionalAcknowledgements pulumi.BoolInput `pulumi:"batchFunctionalAcknowledgements"`
	// The value indicating whether to batch implementation acknowledgements.
	BatchImplementationAcknowledgements pulumi.BoolInput `pulumi:"batchImplementationAcknowledgements"`
	// The value indicating whether to batch the technical acknowledgements.
	BatchTechnicalAcknowledgements pulumi.BoolInput `pulumi:"batchTechnicalAcknowledgements"`
	// The functional acknowledgement version.
	FunctionalAcknowledgementVersion pulumi.StringPtrInput `pulumi:"functionalAcknowledgementVersion"`
	// The implementation acknowledgement version.
	ImplementationAcknowledgementVersion pulumi.StringPtrInput `pulumi:"implementationAcknowledgementVersion"`
	// The value indicating whether functional acknowledgement is needed.
	NeedFunctionalAcknowledgement pulumi.BoolInput `pulumi:"needFunctionalAcknowledgement"`
	// The value indicating whether implementation acknowledgement is needed.
	NeedImplementationAcknowledgement pulumi.BoolInput `pulumi:"needImplementationAcknowledgement"`
	// The value indicating whether a loop is needed for valid messages.
	NeedLoopForValidMessages pulumi.BoolInput `pulumi:"needLoopForValidMessages"`
	// The value indicating whether technical acknowledgement is needed.
	NeedTechnicalAcknowledgement pulumi.BoolInput `pulumi:"needTechnicalAcknowledgement"`
	// The value indicating whether to rollover acknowledgement control number.
	RolloverAcknowledgementControlNumber pulumi.BoolInput `pulumi:"rolloverAcknowledgementControlNumber"`
	// The value indicating whether to send synchronous acknowledgement.
	SendSynchronousAcknowledgement pulumi.BoolInput `pulumi:"sendSynchronousAcknowledgement"`
}

func (X12AcknowledgementSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X12AcknowledgementSettings)(nil)).Elem()
}

func (i X12AcknowledgementSettingsArgs) ToX12AcknowledgementSettingsOutput() X12AcknowledgementSettingsOutput {
	return i.ToX12AcknowledgementSettingsOutputWithContext(context.Background())
}

func (i X12AcknowledgementSettingsArgs) ToX12AcknowledgementSettingsOutputWithContext(ctx context.Context) X12AcknowledgementSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12AcknowledgementSettingsOutput)
}

func (i X12AcknowledgementSettingsArgs) ToX12AcknowledgementSettingsPtrOutput() X12AcknowledgementSettingsPtrOutput {
	return i.ToX12AcknowledgementSettingsPtrOutputWithContext(context.Background())
}

func (i X12AcknowledgementSettingsArgs) ToX12AcknowledgementSettingsPtrOutputWithContext(ctx context.Context) X12AcknowledgementSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12AcknowledgementSettingsOutput).ToX12AcknowledgementSettingsPtrOutputWithContext(ctx)
}

// X12AcknowledgementSettingsPtrInput is an input type that accepts X12AcknowledgementSettingsArgs, X12AcknowledgementSettingsPtr and X12AcknowledgementSettingsPtrOutput values.
// You can construct a concrete instance of `X12AcknowledgementSettingsPtrInput` via:
//
//          X12AcknowledgementSettingsArgs{...}
//
//  or:
//
//          nil
type X12AcknowledgementSettingsPtrInput interface {
	pulumi.Input

	ToX12AcknowledgementSettingsPtrOutput() X12AcknowledgementSettingsPtrOutput
	ToX12AcknowledgementSettingsPtrOutputWithContext(context.Context) X12AcknowledgementSettingsPtrOutput
}

type x12acknowledgementSettingsPtrType X12AcknowledgementSettingsArgs

func X12AcknowledgementSettingsPtr(v *X12AcknowledgementSettingsArgs) X12AcknowledgementSettingsPtrInput {
	return (*x12acknowledgementSettingsPtrType)(v)
}

func (*x12acknowledgementSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**X12AcknowledgementSettings)(nil)).Elem()
}

func (i *x12acknowledgementSettingsPtrType) ToX12AcknowledgementSettingsPtrOutput() X12AcknowledgementSettingsPtrOutput {
	return i.ToX12AcknowledgementSettingsPtrOutputWithContext(context.Background())
}

func (i *x12acknowledgementSettingsPtrType) ToX12AcknowledgementSettingsPtrOutputWithContext(ctx context.Context) X12AcknowledgementSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12AcknowledgementSettingsPtrOutput)
}

// The X12 agreement acknowledgement settings.
type X12AcknowledgementSettingsResponse struct {
	// The acknowledgement control number lower bound.
	AcknowledgementControlNumberLowerBound int `pulumi:"acknowledgementControlNumberLowerBound"`
	// The acknowledgement control number prefix.
	AcknowledgementControlNumberPrefix *string `pulumi:"acknowledgementControlNumberPrefix"`
	// The acknowledgement control number suffix.
	AcknowledgementControlNumberSuffix *string `pulumi:"acknowledgementControlNumberSuffix"`
	// The acknowledgement control number upper bound.
	AcknowledgementControlNumberUpperBound int `pulumi:"acknowledgementControlNumberUpperBound"`
	// The value indicating whether to batch functional acknowledgements.
	BatchFunctionalAcknowledgements bool `pulumi:"batchFunctionalAcknowledgements"`
	// The value indicating whether to batch implementation acknowledgements.
	BatchImplementationAcknowledgements bool `pulumi:"batchImplementationAcknowledgements"`
	// The value indicating whether to batch the technical acknowledgements.
	BatchTechnicalAcknowledgements bool `pulumi:"batchTechnicalAcknowledgements"`
	// The functional acknowledgement version.
	FunctionalAcknowledgementVersion *string `pulumi:"functionalAcknowledgementVersion"`
	// The implementation acknowledgement version.
	ImplementationAcknowledgementVersion *string `pulumi:"implementationAcknowledgementVersion"`
	// The value indicating whether functional acknowledgement is needed.
	NeedFunctionalAcknowledgement bool `pulumi:"needFunctionalAcknowledgement"`
	// The value indicating whether implementation acknowledgement is needed.
	NeedImplementationAcknowledgement bool `pulumi:"needImplementationAcknowledgement"`
	// The value indicating whether a loop is needed for valid messages.
	NeedLoopForValidMessages bool `pulumi:"needLoopForValidMessages"`
	// The value indicating whether technical acknowledgement is needed.
	NeedTechnicalAcknowledgement bool `pulumi:"needTechnicalAcknowledgement"`
	// The value indicating whether to rollover acknowledgement control number.
	RolloverAcknowledgementControlNumber bool `pulumi:"rolloverAcknowledgementControlNumber"`
	// The value indicating whether to send synchronous acknowledgement.
	SendSynchronousAcknowledgement bool `pulumi:"sendSynchronousAcknowledgement"`
}

// The X12 agreement acknowledgement settings.
type X12AcknowledgementSettingsResponseOutput struct{ *pulumi.OutputState }

func (X12AcknowledgementSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X12AcknowledgementSettingsResponse)(nil)).Elem()
}

func (o X12AcknowledgementSettingsResponseOutput) ToX12AcknowledgementSettingsResponseOutput() X12AcknowledgementSettingsResponseOutput {
	return o
}

func (o X12AcknowledgementSettingsResponseOutput) ToX12AcknowledgementSettingsResponseOutputWithContext(ctx context.Context) X12AcknowledgementSettingsResponseOutput {
	return o
}

func (o X12AcknowledgementSettingsResponseOutput) ToX12AcknowledgementSettingsResponsePtrOutput() X12AcknowledgementSettingsResponsePtrOutput {
	return o.ToX12AcknowledgementSettingsResponsePtrOutputWithContext(context.Background())
}

func (o X12AcknowledgementSettingsResponseOutput) ToX12AcknowledgementSettingsResponsePtrOutputWithContext(ctx context.Context) X12AcknowledgementSettingsResponsePtrOutput {
	return o.ApplyT(func(v X12AcknowledgementSettingsResponse) *X12AcknowledgementSettingsResponse {
		return &v
	}).(X12AcknowledgementSettingsResponsePtrOutput)
}

// The acknowledgement control number lower bound.
func (o X12AcknowledgementSettingsResponseOutput) AcknowledgementControlNumberLowerBound() pulumi.IntOutput {
	return o.ApplyT(func(v X12AcknowledgementSettingsResponse) int { return v.AcknowledgementControlNumberLowerBound }).(pulumi.IntOutput)
}

// The acknowledgement control number prefix.
func (o X12AcknowledgementSettingsResponseOutput) AcknowledgementControlNumberPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X12AcknowledgementSettingsResponse) *string { return v.AcknowledgementControlNumberPrefix }).(pulumi.StringPtrOutput)
}

// The acknowledgement control number suffix.
func (o X12AcknowledgementSettingsResponseOutput) AcknowledgementControlNumberSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X12AcknowledgementSettingsResponse) *string { return v.AcknowledgementControlNumberSuffix }).(pulumi.StringPtrOutput)
}

// The acknowledgement control number upper bound.
func (o X12AcknowledgementSettingsResponseOutput) AcknowledgementControlNumberUpperBound() pulumi.IntOutput {
	return o.ApplyT(func(v X12AcknowledgementSettingsResponse) int { return v.AcknowledgementControlNumberUpperBound }).(pulumi.IntOutput)
}

// The value indicating whether to batch functional acknowledgements.
func (o X12AcknowledgementSettingsResponseOutput) BatchFunctionalAcknowledgements() pulumi.BoolOutput {
	return o.ApplyT(func(v X12AcknowledgementSettingsResponse) bool { return v.BatchFunctionalAcknowledgements }).(pulumi.BoolOutput)
}

// The value indicating whether to batch implementation acknowledgements.
func (o X12AcknowledgementSettingsResponseOutput) BatchImplementationAcknowledgements() pulumi.BoolOutput {
	return o.ApplyT(func(v X12AcknowledgementSettingsResponse) bool { return v.BatchImplementationAcknowledgements }).(pulumi.BoolOutput)
}

// The value indicating whether to batch the technical acknowledgements.
func (o X12AcknowledgementSettingsResponseOutput) BatchTechnicalAcknowledgements() pulumi.BoolOutput {
	return o.ApplyT(func(v X12AcknowledgementSettingsResponse) bool { return v.BatchTechnicalAcknowledgements }).(pulumi.BoolOutput)
}

// The functional acknowledgement version.
func (o X12AcknowledgementSettingsResponseOutput) FunctionalAcknowledgementVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X12AcknowledgementSettingsResponse) *string { return v.FunctionalAcknowledgementVersion }).(pulumi.StringPtrOutput)
}

// The implementation acknowledgement version.
func (o X12AcknowledgementSettingsResponseOutput) ImplementationAcknowledgementVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X12AcknowledgementSettingsResponse) *string { return v.ImplementationAcknowledgementVersion }).(pulumi.StringPtrOutput)
}

// The value indicating whether functional acknowledgement is needed.
func (o X12AcknowledgementSettingsResponseOutput) NeedFunctionalAcknowledgement() pulumi.BoolOutput {
	return o.ApplyT(func(v X12AcknowledgementSettingsResponse) bool { return v.NeedFunctionalAcknowledgement }).(pulumi.BoolOutput)
}

// The value indicating whether implementation acknowledgement is needed.
func (o X12AcknowledgementSettingsResponseOutput) NeedImplementationAcknowledgement() pulumi.BoolOutput {
	return o.ApplyT(func(v X12AcknowledgementSettingsResponse) bool { return v.NeedImplementationAcknowledgement }).(pulumi.BoolOutput)
}

// The value indicating whether a loop is needed for valid messages.
func (o X12AcknowledgementSettingsResponseOutput) NeedLoopForValidMessages() pulumi.BoolOutput {
	return o.ApplyT(func(v X12AcknowledgementSettingsResponse) bool { return v.NeedLoopForValidMessages }).(pulumi.BoolOutput)
}

// The value indicating whether technical acknowledgement is needed.
func (o X12AcknowledgementSettingsResponseOutput) NeedTechnicalAcknowledgement() pulumi.BoolOutput {
	return o.ApplyT(func(v X12AcknowledgementSettingsResponse) bool { return v.NeedTechnicalAcknowledgement }).(pulumi.BoolOutput)
}

// The value indicating whether to rollover acknowledgement control number.
func (o X12AcknowledgementSettingsResponseOutput) RolloverAcknowledgementControlNumber() pulumi.BoolOutput {
	return o.ApplyT(func(v X12AcknowledgementSettingsResponse) bool { return v.RolloverAcknowledgementControlNumber }).(pulumi.BoolOutput)
}

// The value indicating whether to send synchronous acknowledgement.
func (o X12AcknowledgementSettingsResponseOutput) SendSynchronousAcknowledgement() pulumi.BoolOutput {
	return o.ApplyT(func(v X12AcknowledgementSettingsResponse) bool { return v.SendSynchronousAcknowledgement }).(pulumi.BoolOutput)
}

type X12AcknowledgementSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (X12AcknowledgementSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**X12AcknowledgementSettingsResponse)(nil)).Elem()
}

func (o X12AcknowledgementSettingsResponsePtrOutput) ToX12AcknowledgementSettingsResponsePtrOutput() X12AcknowledgementSettingsResponsePtrOutput {
	return o
}

func (o X12AcknowledgementSettingsResponsePtrOutput) ToX12AcknowledgementSettingsResponsePtrOutputWithContext(ctx context.Context) X12AcknowledgementSettingsResponsePtrOutput {
	return o
}

func (o X12AcknowledgementSettingsResponsePtrOutput) Elem() X12AcknowledgementSettingsResponseOutput {
	return o.ApplyT(func(v *X12AcknowledgementSettingsResponse) X12AcknowledgementSettingsResponse { return *v }).(X12AcknowledgementSettingsResponseOutput)
}

// The acknowledgement control number lower bound.
func (o X12AcknowledgementSettingsResponsePtrOutput) AcknowledgementControlNumberLowerBound() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *X12AcknowledgementSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.AcknowledgementControlNumberLowerBound
	}).(pulumi.IntPtrOutput)
}

// The acknowledgement control number prefix.
func (o X12AcknowledgementSettingsResponsePtrOutput) AcknowledgementControlNumberPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12AcknowledgementSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AcknowledgementControlNumberPrefix
	}).(pulumi.StringPtrOutput)
}

// The acknowledgement control number suffix.
func (o X12AcknowledgementSettingsResponsePtrOutput) AcknowledgementControlNumberSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12AcknowledgementSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AcknowledgementControlNumberSuffix
	}).(pulumi.StringPtrOutput)
}

// The acknowledgement control number upper bound.
func (o X12AcknowledgementSettingsResponsePtrOutput) AcknowledgementControlNumberUpperBound() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *X12AcknowledgementSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.AcknowledgementControlNumberUpperBound
	}).(pulumi.IntPtrOutput)
}

// The value indicating whether to batch functional acknowledgements.
func (o X12AcknowledgementSettingsResponsePtrOutput) BatchFunctionalAcknowledgements() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12AcknowledgementSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.BatchFunctionalAcknowledgements
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to batch implementation acknowledgements.
func (o X12AcknowledgementSettingsResponsePtrOutput) BatchImplementationAcknowledgements() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12AcknowledgementSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.BatchImplementationAcknowledgements
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to batch the technical acknowledgements.
func (o X12AcknowledgementSettingsResponsePtrOutput) BatchTechnicalAcknowledgements() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12AcknowledgementSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.BatchTechnicalAcknowledgements
	}).(pulumi.BoolPtrOutput)
}

// The functional acknowledgement version.
func (o X12AcknowledgementSettingsResponsePtrOutput) FunctionalAcknowledgementVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12AcknowledgementSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.FunctionalAcknowledgementVersion
	}).(pulumi.StringPtrOutput)
}

// The implementation acknowledgement version.
func (o X12AcknowledgementSettingsResponsePtrOutput) ImplementationAcknowledgementVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12AcknowledgementSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ImplementationAcknowledgementVersion
	}).(pulumi.StringPtrOutput)
}

// The value indicating whether functional acknowledgement is needed.
func (o X12AcknowledgementSettingsResponsePtrOutput) NeedFunctionalAcknowledgement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12AcknowledgementSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.NeedFunctionalAcknowledgement
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether implementation acknowledgement is needed.
func (o X12AcknowledgementSettingsResponsePtrOutput) NeedImplementationAcknowledgement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12AcknowledgementSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.NeedImplementationAcknowledgement
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether a loop is needed for valid messages.
func (o X12AcknowledgementSettingsResponsePtrOutput) NeedLoopForValidMessages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12AcknowledgementSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.NeedLoopForValidMessages
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether technical acknowledgement is needed.
func (o X12AcknowledgementSettingsResponsePtrOutput) NeedTechnicalAcknowledgement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12AcknowledgementSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.NeedTechnicalAcknowledgement
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to rollover acknowledgement control number.
func (o X12AcknowledgementSettingsResponsePtrOutput) RolloverAcknowledgementControlNumber() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12AcknowledgementSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.RolloverAcknowledgementControlNumber
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to send synchronous acknowledgement.
func (o X12AcknowledgementSettingsResponsePtrOutput) SendSynchronousAcknowledgement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12AcknowledgementSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.SendSynchronousAcknowledgement
	}).(pulumi.BoolPtrOutput)
}

// The X12 agreement content.
type X12AgreementContent struct {
	// The X12 one-way receive agreement.
	ReceiveAgreement X12OneWayAgreement `pulumi:"receiveAgreement"`
	// The X12 one-way send agreement.
	SendAgreement X12OneWayAgreement `pulumi:"sendAgreement"`
}

// X12AgreementContentInput is an input type that accepts X12AgreementContentArgs and X12AgreementContentOutput values.
// You can construct a concrete instance of `X12AgreementContentInput` via:
//
//          X12AgreementContentArgs{...}
type X12AgreementContentInput interface {
	pulumi.Input

	ToX12AgreementContentOutput() X12AgreementContentOutput
	ToX12AgreementContentOutputWithContext(context.Context) X12AgreementContentOutput
}

// The X12 agreement content.
type X12AgreementContentArgs struct {
	// The X12 one-way receive agreement.
	ReceiveAgreement X12OneWayAgreementInput `pulumi:"receiveAgreement"`
	// The X12 one-way send agreement.
	SendAgreement X12OneWayAgreementInput `pulumi:"sendAgreement"`
}

func (X12AgreementContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X12AgreementContent)(nil)).Elem()
}

func (i X12AgreementContentArgs) ToX12AgreementContentOutput() X12AgreementContentOutput {
	return i.ToX12AgreementContentOutputWithContext(context.Background())
}

func (i X12AgreementContentArgs) ToX12AgreementContentOutputWithContext(ctx context.Context) X12AgreementContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12AgreementContentOutput)
}

func (i X12AgreementContentArgs) ToX12AgreementContentPtrOutput() X12AgreementContentPtrOutput {
	return i.ToX12AgreementContentPtrOutputWithContext(context.Background())
}

func (i X12AgreementContentArgs) ToX12AgreementContentPtrOutputWithContext(ctx context.Context) X12AgreementContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12AgreementContentOutput).ToX12AgreementContentPtrOutputWithContext(ctx)
}

// X12AgreementContentPtrInput is an input type that accepts X12AgreementContentArgs, X12AgreementContentPtr and X12AgreementContentPtrOutput values.
// You can construct a concrete instance of `X12AgreementContentPtrInput` via:
//
//          X12AgreementContentArgs{...}
//
//  or:
//
//          nil
type X12AgreementContentPtrInput interface {
	pulumi.Input

	ToX12AgreementContentPtrOutput() X12AgreementContentPtrOutput
	ToX12AgreementContentPtrOutputWithContext(context.Context) X12AgreementContentPtrOutput
}

type x12agreementContentPtrType X12AgreementContentArgs

func X12AgreementContentPtr(v *X12AgreementContentArgs) X12AgreementContentPtrInput {
	return (*x12agreementContentPtrType)(v)
}

func (*x12agreementContentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**X12AgreementContent)(nil)).Elem()
}

func (i *x12agreementContentPtrType) ToX12AgreementContentPtrOutput() X12AgreementContentPtrOutput {
	return i.ToX12AgreementContentPtrOutputWithContext(context.Background())
}

func (i *x12agreementContentPtrType) ToX12AgreementContentPtrOutputWithContext(ctx context.Context) X12AgreementContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12AgreementContentPtrOutput)
}

// The X12 agreement content.
type X12AgreementContentResponse struct {
	// The X12 one-way receive agreement.
	ReceiveAgreement X12OneWayAgreementResponse `pulumi:"receiveAgreement"`
	// The X12 one-way send agreement.
	SendAgreement X12OneWayAgreementResponse `pulumi:"sendAgreement"`
}

// The X12 agreement content.
type X12AgreementContentResponseOutput struct{ *pulumi.OutputState }

func (X12AgreementContentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X12AgreementContentResponse)(nil)).Elem()
}

func (o X12AgreementContentResponseOutput) ToX12AgreementContentResponseOutput() X12AgreementContentResponseOutput {
	return o
}

func (o X12AgreementContentResponseOutput) ToX12AgreementContentResponseOutputWithContext(ctx context.Context) X12AgreementContentResponseOutput {
	return o
}

func (o X12AgreementContentResponseOutput) ToX12AgreementContentResponsePtrOutput() X12AgreementContentResponsePtrOutput {
	return o.ToX12AgreementContentResponsePtrOutputWithContext(context.Background())
}

func (o X12AgreementContentResponseOutput) ToX12AgreementContentResponsePtrOutputWithContext(ctx context.Context) X12AgreementContentResponsePtrOutput {
	return o.ApplyT(func(v X12AgreementContentResponse) *X12AgreementContentResponse {
		return &v
	}).(X12AgreementContentResponsePtrOutput)
}

// The X12 one-way receive agreement.
func (o X12AgreementContentResponseOutput) ReceiveAgreement() X12OneWayAgreementResponseOutput {
	return o.ApplyT(func(v X12AgreementContentResponse) X12OneWayAgreementResponse { return v.ReceiveAgreement }).(X12OneWayAgreementResponseOutput)
}

// The X12 one-way send agreement.
func (o X12AgreementContentResponseOutput) SendAgreement() X12OneWayAgreementResponseOutput {
	return o.ApplyT(func(v X12AgreementContentResponse) X12OneWayAgreementResponse { return v.SendAgreement }).(X12OneWayAgreementResponseOutput)
}

type X12AgreementContentResponsePtrOutput struct{ *pulumi.OutputState }

func (X12AgreementContentResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**X12AgreementContentResponse)(nil)).Elem()
}

func (o X12AgreementContentResponsePtrOutput) ToX12AgreementContentResponsePtrOutput() X12AgreementContentResponsePtrOutput {
	return o
}

func (o X12AgreementContentResponsePtrOutput) ToX12AgreementContentResponsePtrOutputWithContext(ctx context.Context) X12AgreementContentResponsePtrOutput {
	return o
}

func (o X12AgreementContentResponsePtrOutput) Elem() X12AgreementContentResponseOutput {
	return o.ApplyT(func(v *X12AgreementContentResponse) X12AgreementContentResponse { return *v }).(X12AgreementContentResponseOutput)
}

// The X12 one-way receive agreement.
func (o X12AgreementContentResponsePtrOutput) ReceiveAgreement() X12OneWayAgreementResponsePtrOutput {
	return o.ApplyT(func(v *X12AgreementContentResponse) *X12OneWayAgreementResponse {
		if v == nil {
			return nil
		}
		return &v.ReceiveAgreement
	}).(X12OneWayAgreementResponsePtrOutput)
}

// The X12 one-way send agreement.
func (o X12AgreementContentResponsePtrOutput) SendAgreement() X12OneWayAgreementResponsePtrOutput {
	return o.ApplyT(func(v *X12AgreementContentResponse) *X12OneWayAgreementResponse {
		if v == nil {
			return nil
		}
		return &v.SendAgreement
	}).(X12OneWayAgreementResponsePtrOutput)
}

// The X12 delimiter override settings.
type X12DelimiterOverrides struct {
	// The component separator.
	ComponentSeparator int `pulumi:"componentSeparator"`
	// The data element separator.
	DataElementSeparator int `pulumi:"dataElementSeparator"`
	// The message id.
	MessageId *string `pulumi:"messageId"`
	// The protocol version.
	ProtocolVersion *string `pulumi:"protocolVersion"`
	// The replacement character.
	ReplaceCharacter int `pulumi:"replaceCharacter"`
	// The value indicating whether to replace separators in payload.
	ReplaceSeparatorsInPayload bool `pulumi:"replaceSeparatorsInPayload"`
	// The segment terminator.
	SegmentTerminator int `pulumi:"segmentTerminator"`
	// The segment terminator suffix.
	SegmentTerminatorSuffix string `pulumi:"segmentTerminatorSuffix"`
	// The target namespace on which this delimiter settings has to be applied.
	TargetNamespace *string `pulumi:"targetNamespace"`
}

// X12DelimiterOverridesInput is an input type that accepts X12DelimiterOverridesArgs and X12DelimiterOverridesOutput values.
// You can construct a concrete instance of `X12DelimiterOverridesInput` via:
//
//          X12DelimiterOverridesArgs{...}
type X12DelimiterOverridesInput interface {
	pulumi.Input

	ToX12DelimiterOverridesOutput() X12DelimiterOverridesOutput
	ToX12DelimiterOverridesOutputWithContext(context.Context) X12DelimiterOverridesOutput
}

// The X12 delimiter override settings.
type X12DelimiterOverridesArgs struct {
	// The component separator.
	ComponentSeparator pulumi.IntInput `pulumi:"componentSeparator"`
	// The data element separator.
	DataElementSeparator pulumi.IntInput `pulumi:"dataElementSeparator"`
	// The message id.
	MessageId pulumi.StringPtrInput `pulumi:"messageId"`
	// The protocol version.
	ProtocolVersion pulumi.StringPtrInput `pulumi:"protocolVersion"`
	// The replacement character.
	ReplaceCharacter pulumi.IntInput `pulumi:"replaceCharacter"`
	// The value indicating whether to replace separators in payload.
	ReplaceSeparatorsInPayload pulumi.BoolInput `pulumi:"replaceSeparatorsInPayload"`
	// The segment terminator.
	SegmentTerminator pulumi.IntInput `pulumi:"segmentTerminator"`
	// The segment terminator suffix.
	SegmentTerminatorSuffix pulumi.StringInput `pulumi:"segmentTerminatorSuffix"`
	// The target namespace on which this delimiter settings has to be applied.
	TargetNamespace pulumi.StringPtrInput `pulumi:"targetNamespace"`
}

func (X12DelimiterOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X12DelimiterOverrides)(nil)).Elem()
}

func (i X12DelimiterOverridesArgs) ToX12DelimiterOverridesOutput() X12DelimiterOverridesOutput {
	return i.ToX12DelimiterOverridesOutputWithContext(context.Background())
}

func (i X12DelimiterOverridesArgs) ToX12DelimiterOverridesOutputWithContext(ctx context.Context) X12DelimiterOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12DelimiterOverridesOutput)
}

// X12DelimiterOverridesArrayInput is an input type that accepts X12DelimiterOverridesArray and X12DelimiterOverridesArrayOutput values.
// You can construct a concrete instance of `X12DelimiterOverridesArrayInput` via:
//
//          X12DelimiterOverridesArray{ X12DelimiterOverridesArgs{...} }
type X12DelimiterOverridesArrayInput interface {
	pulumi.Input

	ToX12DelimiterOverridesArrayOutput() X12DelimiterOverridesArrayOutput
	ToX12DelimiterOverridesArrayOutputWithContext(context.Context) X12DelimiterOverridesArrayOutput
}

type X12DelimiterOverridesArray []X12DelimiterOverridesInput

func (X12DelimiterOverridesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X12DelimiterOverrides)(nil)).Elem()
}

func (i X12DelimiterOverridesArray) ToX12DelimiterOverridesArrayOutput() X12DelimiterOverridesArrayOutput {
	return i.ToX12DelimiterOverridesArrayOutputWithContext(context.Background())
}

func (i X12DelimiterOverridesArray) ToX12DelimiterOverridesArrayOutputWithContext(ctx context.Context) X12DelimiterOverridesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12DelimiterOverridesArrayOutput)
}

// The X12 delimiter override settings.
type X12DelimiterOverridesResponse struct {
	// The component separator.
	ComponentSeparator int `pulumi:"componentSeparator"`
	// The data element separator.
	DataElementSeparator int `pulumi:"dataElementSeparator"`
	// The message id.
	MessageId *string `pulumi:"messageId"`
	// The protocol version.
	ProtocolVersion *string `pulumi:"protocolVersion"`
	// The replacement character.
	ReplaceCharacter int `pulumi:"replaceCharacter"`
	// The value indicating whether to replace separators in payload.
	ReplaceSeparatorsInPayload bool `pulumi:"replaceSeparatorsInPayload"`
	// The segment terminator.
	SegmentTerminator int `pulumi:"segmentTerminator"`
	// The segment terminator suffix.
	SegmentTerminatorSuffix string `pulumi:"segmentTerminatorSuffix"`
	// The target namespace on which this delimiter settings has to be applied.
	TargetNamespace *string `pulumi:"targetNamespace"`
}

// The X12 delimiter override settings.
type X12DelimiterOverridesResponseOutput struct{ *pulumi.OutputState }

func (X12DelimiterOverridesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X12DelimiterOverridesResponse)(nil)).Elem()
}

func (o X12DelimiterOverridesResponseOutput) ToX12DelimiterOverridesResponseOutput() X12DelimiterOverridesResponseOutput {
	return o
}

func (o X12DelimiterOverridesResponseOutput) ToX12DelimiterOverridesResponseOutputWithContext(ctx context.Context) X12DelimiterOverridesResponseOutput {
	return o
}

// The component separator.
func (o X12DelimiterOverridesResponseOutput) ComponentSeparator() pulumi.IntOutput {
	return o.ApplyT(func(v X12DelimiterOverridesResponse) int { return v.ComponentSeparator }).(pulumi.IntOutput)
}

// The data element separator.
func (o X12DelimiterOverridesResponseOutput) DataElementSeparator() pulumi.IntOutput {
	return o.ApplyT(func(v X12DelimiterOverridesResponse) int { return v.DataElementSeparator }).(pulumi.IntOutput)
}

// The message id.
func (o X12DelimiterOverridesResponseOutput) MessageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X12DelimiterOverridesResponse) *string { return v.MessageId }).(pulumi.StringPtrOutput)
}

// The protocol version.
func (o X12DelimiterOverridesResponseOutput) ProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X12DelimiterOverridesResponse) *string { return v.ProtocolVersion }).(pulumi.StringPtrOutput)
}

// The replacement character.
func (o X12DelimiterOverridesResponseOutput) ReplaceCharacter() pulumi.IntOutput {
	return o.ApplyT(func(v X12DelimiterOverridesResponse) int { return v.ReplaceCharacter }).(pulumi.IntOutput)
}

// The value indicating whether to replace separators in payload.
func (o X12DelimiterOverridesResponseOutput) ReplaceSeparatorsInPayload() pulumi.BoolOutput {
	return o.ApplyT(func(v X12DelimiterOverridesResponse) bool { return v.ReplaceSeparatorsInPayload }).(pulumi.BoolOutput)
}

// The segment terminator.
func (o X12DelimiterOverridesResponseOutput) SegmentTerminator() pulumi.IntOutput {
	return o.ApplyT(func(v X12DelimiterOverridesResponse) int { return v.SegmentTerminator }).(pulumi.IntOutput)
}

// The segment terminator suffix.
func (o X12DelimiterOverridesResponseOutput) SegmentTerminatorSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v X12DelimiterOverridesResponse) string { return v.SegmentTerminatorSuffix }).(pulumi.StringOutput)
}

// The target namespace on which this delimiter settings has to be applied.
func (o X12DelimiterOverridesResponseOutput) TargetNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X12DelimiterOverridesResponse) *string { return v.TargetNamespace }).(pulumi.StringPtrOutput)
}

type X12DelimiterOverridesResponseArrayOutput struct{ *pulumi.OutputState }

func (X12DelimiterOverridesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X12DelimiterOverridesResponse)(nil)).Elem()
}

func (o X12DelimiterOverridesResponseArrayOutput) ToX12DelimiterOverridesResponseArrayOutput() X12DelimiterOverridesResponseArrayOutput {
	return o
}

func (o X12DelimiterOverridesResponseArrayOutput) ToX12DelimiterOverridesResponseArrayOutputWithContext(ctx context.Context) X12DelimiterOverridesResponseArrayOutput {
	return o
}

func (o X12DelimiterOverridesResponseArrayOutput) Index(i pulumi.IntInput) X12DelimiterOverridesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) X12DelimiterOverridesResponse {
		return vs[0].([]X12DelimiterOverridesResponse)[vs[1].(int)]
	}).(X12DelimiterOverridesResponseOutput)
}

// The X12 envelope override settings.
type X12EnvelopeOverride struct {
	// The date format.
	DateFormat string `pulumi:"dateFormat"`
	// The functional identifier code.
	FunctionalIdentifierCode *string `pulumi:"functionalIdentifierCode"`
	// The header version.
	HeaderVersion string `pulumi:"headerVersion"`
	// The message id on which this envelope settings has to be applied.
	MessageId string `pulumi:"messageId"`
	// The protocol version on which this envelope settings has to be applied.
	ProtocolVersion string `pulumi:"protocolVersion"`
	// The receiver application id.
	ReceiverApplicationId string `pulumi:"receiverApplicationId"`
	// The responsible agency code.
	ResponsibleAgencyCode string `pulumi:"responsibleAgencyCode"`
	// The sender application id.
	SenderApplicationId string `pulumi:"senderApplicationId"`
	// The target namespace on which this envelope settings has to be applied.
	TargetNamespace string `pulumi:"targetNamespace"`
	// The time format.
	TimeFormat string `pulumi:"timeFormat"`
}

// X12EnvelopeOverrideInput is an input type that accepts X12EnvelopeOverrideArgs and X12EnvelopeOverrideOutput values.
// You can construct a concrete instance of `X12EnvelopeOverrideInput` via:
//
//          X12EnvelopeOverrideArgs{...}
type X12EnvelopeOverrideInput interface {
	pulumi.Input

	ToX12EnvelopeOverrideOutput() X12EnvelopeOverrideOutput
	ToX12EnvelopeOverrideOutputWithContext(context.Context) X12EnvelopeOverrideOutput
}

// The X12 envelope override settings.
type X12EnvelopeOverrideArgs struct {
	// The date format.
	DateFormat pulumi.StringInput `pulumi:"dateFormat"`
	// The functional identifier code.
	FunctionalIdentifierCode pulumi.StringPtrInput `pulumi:"functionalIdentifierCode"`
	// The header version.
	HeaderVersion pulumi.StringInput `pulumi:"headerVersion"`
	// The message id on which this envelope settings has to be applied.
	MessageId pulumi.StringInput `pulumi:"messageId"`
	// The protocol version on which this envelope settings has to be applied.
	ProtocolVersion pulumi.StringInput `pulumi:"protocolVersion"`
	// The receiver application id.
	ReceiverApplicationId pulumi.StringInput `pulumi:"receiverApplicationId"`
	// The responsible agency code.
	ResponsibleAgencyCode pulumi.StringInput `pulumi:"responsibleAgencyCode"`
	// The sender application id.
	SenderApplicationId pulumi.StringInput `pulumi:"senderApplicationId"`
	// The target namespace on which this envelope settings has to be applied.
	TargetNamespace pulumi.StringInput `pulumi:"targetNamespace"`
	// The time format.
	TimeFormat pulumi.StringInput `pulumi:"timeFormat"`
}

func (X12EnvelopeOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X12EnvelopeOverride)(nil)).Elem()
}

func (i X12EnvelopeOverrideArgs) ToX12EnvelopeOverrideOutput() X12EnvelopeOverrideOutput {
	return i.ToX12EnvelopeOverrideOutputWithContext(context.Background())
}

func (i X12EnvelopeOverrideArgs) ToX12EnvelopeOverrideOutputWithContext(ctx context.Context) X12EnvelopeOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12EnvelopeOverrideOutput)
}

// X12EnvelopeOverrideArrayInput is an input type that accepts X12EnvelopeOverrideArray and X12EnvelopeOverrideArrayOutput values.
// You can construct a concrete instance of `X12EnvelopeOverrideArrayInput` via:
//
//          X12EnvelopeOverrideArray{ X12EnvelopeOverrideArgs{...} }
type X12EnvelopeOverrideArrayInput interface {
	pulumi.Input

	ToX12EnvelopeOverrideArrayOutput() X12EnvelopeOverrideArrayOutput
	ToX12EnvelopeOverrideArrayOutputWithContext(context.Context) X12EnvelopeOverrideArrayOutput
}

type X12EnvelopeOverrideArray []X12EnvelopeOverrideInput

func (X12EnvelopeOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X12EnvelopeOverride)(nil)).Elem()
}

func (i X12EnvelopeOverrideArray) ToX12EnvelopeOverrideArrayOutput() X12EnvelopeOverrideArrayOutput {
	return i.ToX12EnvelopeOverrideArrayOutputWithContext(context.Background())
}

func (i X12EnvelopeOverrideArray) ToX12EnvelopeOverrideArrayOutputWithContext(ctx context.Context) X12EnvelopeOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12EnvelopeOverrideArrayOutput)
}

// The X12 envelope override settings.
type X12EnvelopeOverrideResponse struct {
	// The date format.
	DateFormat string `pulumi:"dateFormat"`
	// The functional identifier code.
	FunctionalIdentifierCode *string `pulumi:"functionalIdentifierCode"`
	// The header version.
	HeaderVersion string `pulumi:"headerVersion"`
	// The message id on which this envelope settings has to be applied.
	MessageId string `pulumi:"messageId"`
	// The protocol version on which this envelope settings has to be applied.
	ProtocolVersion string `pulumi:"protocolVersion"`
	// The receiver application id.
	ReceiverApplicationId string `pulumi:"receiverApplicationId"`
	// The responsible agency code.
	ResponsibleAgencyCode string `pulumi:"responsibleAgencyCode"`
	// The sender application id.
	SenderApplicationId string `pulumi:"senderApplicationId"`
	// The target namespace on which this envelope settings has to be applied.
	TargetNamespace string `pulumi:"targetNamespace"`
	// The time format.
	TimeFormat string `pulumi:"timeFormat"`
}

// The X12 envelope override settings.
type X12EnvelopeOverrideResponseOutput struct{ *pulumi.OutputState }

func (X12EnvelopeOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X12EnvelopeOverrideResponse)(nil)).Elem()
}

func (o X12EnvelopeOverrideResponseOutput) ToX12EnvelopeOverrideResponseOutput() X12EnvelopeOverrideResponseOutput {
	return o
}

func (o X12EnvelopeOverrideResponseOutput) ToX12EnvelopeOverrideResponseOutputWithContext(ctx context.Context) X12EnvelopeOverrideResponseOutput {
	return o
}

// The date format.
func (o X12EnvelopeOverrideResponseOutput) DateFormat() pulumi.StringOutput {
	return o.ApplyT(func(v X12EnvelopeOverrideResponse) string { return v.DateFormat }).(pulumi.StringOutput)
}

// The functional identifier code.
func (o X12EnvelopeOverrideResponseOutput) FunctionalIdentifierCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X12EnvelopeOverrideResponse) *string { return v.FunctionalIdentifierCode }).(pulumi.StringPtrOutput)
}

// The header version.
func (o X12EnvelopeOverrideResponseOutput) HeaderVersion() pulumi.StringOutput {
	return o.ApplyT(func(v X12EnvelopeOverrideResponse) string { return v.HeaderVersion }).(pulumi.StringOutput)
}

// The message id on which this envelope settings has to be applied.
func (o X12EnvelopeOverrideResponseOutput) MessageId() pulumi.StringOutput {
	return o.ApplyT(func(v X12EnvelopeOverrideResponse) string { return v.MessageId }).(pulumi.StringOutput)
}

// The protocol version on which this envelope settings has to be applied.
func (o X12EnvelopeOverrideResponseOutput) ProtocolVersion() pulumi.StringOutput {
	return o.ApplyT(func(v X12EnvelopeOverrideResponse) string { return v.ProtocolVersion }).(pulumi.StringOutput)
}

// The receiver application id.
func (o X12EnvelopeOverrideResponseOutput) ReceiverApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v X12EnvelopeOverrideResponse) string { return v.ReceiverApplicationId }).(pulumi.StringOutput)
}

// The responsible agency code.
func (o X12EnvelopeOverrideResponseOutput) ResponsibleAgencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v X12EnvelopeOverrideResponse) string { return v.ResponsibleAgencyCode }).(pulumi.StringOutput)
}

// The sender application id.
func (o X12EnvelopeOverrideResponseOutput) SenderApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v X12EnvelopeOverrideResponse) string { return v.SenderApplicationId }).(pulumi.StringOutput)
}

// The target namespace on which this envelope settings has to be applied.
func (o X12EnvelopeOverrideResponseOutput) TargetNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v X12EnvelopeOverrideResponse) string { return v.TargetNamespace }).(pulumi.StringOutput)
}

// The time format.
func (o X12EnvelopeOverrideResponseOutput) TimeFormat() pulumi.StringOutput {
	return o.ApplyT(func(v X12EnvelopeOverrideResponse) string { return v.TimeFormat }).(pulumi.StringOutput)
}

type X12EnvelopeOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (X12EnvelopeOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X12EnvelopeOverrideResponse)(nil)).Elem()
}

func (o X12EnvelopeOverrideResponseArrayOutput) ToX12EnvelopeOverrideResponseArrayOutput() X12EnvelopeOverrideResponseArrayOutput {
	return o
}

func (o X12EnvelopeOverrideResponseArrayOutput) ToX12EnvelopeOverrideResponseArrayOutputWithContext(ctx context.Context) X12EnvelopeOverrideResponseArrayOutput {
	return o
}

func (o X12EnvelopeOverrideResponseArrayOutput) Index(i pulumi.IntInput) X12EnvelopeOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) X12EnvelopeOverrideResponse {
		return vs[0].([]X12EnvelopeOverrideResponse)[vs[1].(int)]
	}).(X12EnvelopeOverrideResponseOutput)
}

// The X12 agreement envelope settings.
type X12EnvelopeSettings struct {
	// The controls standards id.
	ControlStandardsId int `pulumi:"controlStandardsId"`
	// The control version number.
	ControlVersionNumber string `pulumi:"controlVersionNumber"`
	// The value indicating whether to enable default group headers.
	EnableDefaultGroupHeaders bool `pulumi:"enableDefaultGroupHeaders"`
	// The functional group id.
	FunctionalGroupId *string `pulumi:"functionalGroupId"`
	// The group control number lower bound.
	GroupControlNumberLowerBound int `pulumi:"groupControlNumberLowerBound"`
	// The group control number upper bound.
	GroupControlNumberUpperBound int `pulumi:"groupControlNumberUpperBound"`
	// The group header agency code.
	GroupHeaderAgencyCode string `pulumi:"groupHeaderAgencyCode"`
	// The group header date format.
	GroupHeaderDateFormat string `pulumi:"groupHeaderDateFormat"`
	// The group header time format.
	GroupHeaderTimeFormat string `pulumi:"groupHeaderTimeFormat"`
	// The group header version.
	GroupHeaderVersion string `pulumi:"groupHeaderVersion"`
	// The interchange  control number lower bound.
	InterchangeControlNumberLowerBound int `pulumi:"interchangeControlNumberLowerBound"`
	// The interchange  control number upper bound.
	InterchangeControlNumberUpperBound int `pulumi:"interchangeControlNumberUpperBound"`
	// The value indicating whether to overwrite existing transaction set control number.
	OverwriteExistingTransactionSetControlNumber bool `pulumi:"overwriteExistingTransactionSetControlNumber"`
	// The receiver application id.
	ReceiverApplicationId string `pulumi:"receiverApplicationId"`
	// The value indicating whether to rollover group control number.
	RolloverGroupControlNumber bool `pulumi:"rolloverGroupControlNumber"`
	// The value indicating whether to rollover interchange control number.
	RolloverInterchangeControlNumber bool `pulumi:"rolloverInterchangeControlNumber"`
	// The value indicating whether to rollover transaction set control number.
	RolloverTransactionSetControlNumber bool `pulumi:"rolloverTransactionSetControlNumber"`
	// The sender application id.
	SenderApplicationId string `pulumi:"senderApplicationId"`
	// The transaction set control number lower bound.
	TransactionSetControlNumberLowerBound int `pulumi:"transactionSetControlNumberLowerBound"`
	// The transaction set control number prefix.
	TransactionSetControlNumberPrefix *string `pulumi:"transactionSetControlNumberPrefix"`
	// The transaction set control number suffix.
	TransactionSetControlNumberSuffix *string `pulumi:"transactionSetControlNumberSuffix"`
	// The transaction set control number upper bound.
	TransactionSetControlNumberUpperBound int `pulumi:"transactionSetControlNumberUpperBound"`
	// The usage indicator.
	UsageIndicator string `pulumi:"usageIndicator"`
	// The value indicating whether to use control standards id as repetition character.
	UseControlStandardsIdAsRepetitionCharacter bool `pulumi:"useControlStandardsIdAsRepetitionCharacter"`
}

// X12EnvelopeSettingsInput is an input type that accepts X12EnvelopeSettingsArgs and X12EnvelopeSettingsOutput values.
// You can construct a concrete instance of `X12EnvelopeSettingsInput` via:
//
//          X12EnvelopeSettingsArgs{...}
type X12EnvelopeSettingsInput interface {
	pulumi.Input

	ToX12EnvelopeSettingsOutput() X12EnvelopeSettingsOutput
	ToX12EnvelopeSettingsOutputWithContext(context.Context) X12EnvelopeSettingsOutput
}

// The X12 agreement envelope settings.
type X12EnvelopeSettingsArgs struct {
	// The controls standards id.
	ControlStandardsId pulumi.IntInput `pulumi:"controlStandardsId"`
	// The control version number.
	ControlVersionNumber pulumi.StringInput `pulumi:"controlVersionNumber"`
	// The value indicating whether to enable default group headers.
	EnableDefaultGroupHeaders pulumi.BoolInput `pulumi:"enableDefaultGroupHeaders"`
	// The functional group id.
	FunctionalGroupId pulumi.StringPtrInput `pulumi:"functionalGroupId"`
	// The group control number lower bound.
	GroupControlNumberLowerBound pulumi.IntInput `pulumi:"groupControlNumberLowerBound"`
	// The group control number upper bound.
	GroupControlNumberUpperBound pulumi.IntInput `pulumi:"groupControlNumberUpperBound"`
	// The group header agency code.
	GroupHeaderAgencyCode pulumi.StringInput `pulumi:"groupHeaderAgencyCode"`
	// The group header date format.
	GroupHeaderDateFormat pulumi.StringInput `pulumi:"groupHeaderDateFormat"`
	// The group header time format.
	GroupHeaderTimeFormat pulumi.StringInput `pulumi:"groupHeaderTimeFormat"`
	// The group header version.
	GroupHeaderVersion pulumi.StringInput `pulumi:"groupHeaderVersion"`
	// The interchange  control number lower bound.
	InterchangeControlNumberLowerBound pulumi.IntInput `pulumi:"interchangeControlNumberLowerBound"`
	// The interchange  control number upper bound.
	InterchangeControlNumberUpperBound pulumi.IntInput `pulumi:"interchangeControlNumberUpperBound"`
	// The value indicating whether to overwrite existing transaction set control number.
	OverwriteExistingTransactionSetControlNumber pulumi.BoolInput `pulumi:"overwriteExistingTransactionSetControlNumber"`
	// The receiver application id.
	ReceiverApplicationId pulumi.StringInput `pulumi:"receiverApplicationId"`
	// The value indicating whether to rollover group control number.
	RolloverGroupControlNumber pulumi.BoolInput `pulumi:"rolloverGroupControlNumber"`
	// The value indicating whether to rollover interchange control number.
	RolloverInterchangeControlNumber pulumi.BoolInput `pulumi:"rolloverInterchangeControlNumber"`
	// The value indicating whether to rollover transaction set control number.
	RolloverTransactionSetControlNumber pulumi.BoolInput `pulumi:"rolloverTransactionSetControlNumber"`
	// The sender application id.
	SenderApplicationId pulumi.StringInput `pulumi:"senderApplicationId"`
	// The transaction set control number lower bound.
	TransactionSetControlNumberLowerBound pulumi.IntInput `pulumi:"transactionSetControlNumberLowerBound"`
	// The transaction set control number prefix.
	TransactionSetControlNumberPrefix pulumi.StringPtrInput `pulumi:"transactionSetControlNumberPrefix"`
	// The transaction set control number suffix.
	TransactionSetControlNumberSuffix pulumi.StringPtrInput `pulumi:"transactionSetControlNumberSuffix"`
	// The transaction set control number upper bound.
	TransactionSetControlNumberUpperBound pulumi.IntInput `pulumi:"transactionSetControlNumberUpperBound"`
	// The usage indicator.
	UsageIndicator pulumi.StringInput `pulumi:"usageIndicator"`
	// The value indicating whether to use control standards id as repetition character.
	UseControlStandardsIdAsRepetitionCharacter pulumi.BoolInput `pulumi:"useControlStandardsIdAsRepetitionCharacter"`
}

func (X12EnvelopeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X12EnvelopeSettings)(nil)).Elem()
}

func (i X12EnvelopeSettingsArgs) ToX12EnvelopeSettingsOutput() X12EnvelopeSettingsOutput {
	return i.ToX12EnvelopeSettingsOutputWithContext(context.Background())
}

func (i X12EnvelopeSettingsArgs) ToX12EnvelopeSettingsOutputWithContext(ctx context.Context) X12EnvelopeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12EnvelopeSettingsOutput)
}

func (i X12EnvelopeSettingsArgs) ToX12EnvelopeSettingsPtrOutput() X12EnvelopeSettingsPtrOutput {
	return i.ToX12EnvelopeSettingsPtrOutputWithContext(context.Background())
}

func (i X12EnvelopeSettingsArgs) ToX12EnvelopeSettingsPtrOutputWithContext(ctx context.Context) X12EnvelopeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12EnvelopeSettingsOutput).ToX12EnvelopeSettingsPtrOutputWithContext(ctx)
}

// X12EnvelopeSettingsPtrInput is an input type that accepts X12EnvelopeSettingsArgs, X12EnvelopeSettingsPtr and X12EnvelopeSettingsPtrOutput values.
// You can construct a concrete instance of `X12EnvelopeSettingsPtrInput` via:
//
//          X12EnvelopeSettingsArgs{...}
//
//  or:
//
//          nil
type X12EnvelopeSettingsPtrInput interface {
	pulumi.Input

	ToX12EnvelopeSettingsPtrOutput() X12EnvelopeSettingsPtrOutput
	ToX12EnvelopeSettingsPtrOutputWithContext(context.Context) X12EnvelopeSettingsPtrOutput
}

type x12envelopeSettingsPtrType X12EnvelopeSettingsArgs

func X12EnvelopeSettingsPtr(v *X12EnvelopeSettingsArgs) X12EnvelopeSettingsPtrInput {
	return (*x12envelopeSettingsPtrType)(v)
}

func (*x12envelopeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**X12EnvelopeSettings)(nil)).Elem()
}

func (i *x12envelopeSettingsPtrType) ToX12EnvelopeSettingsPtrOutput() X12EnvelopeSettingsPtrOutput {
	return i.ToX12EnvelopeSettingsPtrOutputWithContext(context.Background())
}

func (i *x12envelopeSettingsPtrType) ToX12EnvelopeSettingsPtrOutputWithContext(ctx context.Context) X12EnvelopeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12EnvelopeSettingsPtrOutput)
}

// The X12 agreement envelope settings.
type X12EnvelopeSettingsResponse struct {
	// The controls standards id.
	ControlStandardsId int `pulumi:"controlStandardsId"`
	// The control version number.
	ControlVersionNumber string `pulumi:"controlVersionNumber"`
	// The value indicating whether to enable default group headers.
	EnableDefaultGroupHeaders bool `pulumi:"enableDefaultGroupHeaders"`
	// The functional group id.
	FunctionalGroupId *string `pulumi:"functionalGroupId"`
	// The group control number lower bound.
	GroupControlNumberLowerBound int `pulumi:"groupControlNumberLowerBound"`
	// The group control number upper bound.
	GroupControlNumberUpperBound int `pulumi:"groupControlNumberUpperBound"`
	// The group header agency code.
	GroupHeaderAgencyCode string `pulumi:"groupHeaderAgencyCode"`
	// The group header date format.
	GroupHeaderDateFormat string `pulumi:"groupHeaderDateFormat"`
	// The group header time format.
	GroupHeaderTimeFormat string `pulumi:"groupHeaderTimeFormat"`
	// The group header version.
	GroupHeaderVersion string `pulumi:"groupHeaderVersion"`
	// The interchange  control number lower bound.
	InterchangeControlNumberLowerBound int `pulumi:"interchangeControlNumberLowerBound"`
	// The interchange  control number upper bound.
	InterchangeControlNumberUpperBound int `pulumi:"interchangeControlNumberUpperBound"`
	// The value indicating whether to overwrite existing transaction set control number.
	OverwriteExistingTransactionSetControlNumber bool `pulumi:"overwriteExistingTransactionSetControlNumber"`
	// The receiver application id.
	ReceiverApplicationId string `pulumi:"receiverApplicationId"`
	// The value indicating whether to rollover group control number.
	RolloverGroupControlNumber bool `pulumi:"rolloverGroupControlNumber"`
	// The value indicating whether to rollover interchange control number.
	RolloverInterchangeControlNumber bool `pulumi:"rolloverInterchangeControlNumber"`
	// The value indicating whether to rollover transaction set control number.
	RolloverTransactionSetControlNumber bool `pulumi:"rolloverTransactionSetControlNumber"`
	// The sender application id.
	SenderApplicationId string `pulumi:"senderApplicationId"`
	// The transaction set control number lower bound.
	TransactionSetControlNumberLowerBound int `pulumi:"transactionSetControlNumberLowerBound"`
	// The transaction set control number prefix.
	TransactionSetControlNumberPrefix *string `pulumi:"transactionSetControlNumberPrefix"`
	// The transaction set control number suffix.
	TransactionSetControlNumberSuffix *string `pulumi:"transactionSetControlNumberSuffix"`
	// The transaction set control number upper bound.
	TransactionSetControlNumberUpperBound int `pulumi:"transactionSetControlNumberUpperBound"`
	// The usage indicator.
	UsageIndicator string `pulumi:"usageIndicator"`
	// The value indicating whether to use control standards id as repetition character.
	UseControlStandardsIdAsRepetitionCharacter bool `pulumi:"useControlStandardsIdAsRepetitionCharacter"`
}

// The X12 agreement envelope settings.
type X12EnvelopeSettingsResponseOutput struct{ *pulumi.OutputState }

func (X12EnvelopeSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X12EnvelopeSettingsResponse)(nil)).Elem()
}

func (o X12EnvelopeSettingsResponseOutput) ToX12EnvelopeSettingsResponseOutput() X12EnvelopeSettingsResponseOutput {
	return o
}

func (o X12EnvelopeSettingsResponseOutput) ToX12EnvelopeSettingsResponseOutputWithContext(ctx context.Context) X12EnvelopeSettingsResponseOutput {
	return o
}

func (o X12EnvelopeSettingsResponseOutput) ToX12EnvelopeSettingsResponsePtrOutput() X12EnvelopeSettingsResponsePtrOutput {
	return o.ToX12EnvelopeSettingsResponsePtrOutputWithContext(context.Background())
}

func (o X12EnvelopeSettingsResponseOutput) ToX12EnvelopeSettingsResponsePtrOutputWithContext(ctx context.Context) X12EnvelopeSettingsResponsePtrOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) *X12EnvelopeSettingsResponse {
		return &v
	}).(X12EnvelopeSettingsResponsePtrOutput)
}

// The controls standards id.
func (o X12EnvelopeSettingsResponseOutput) ControlStandardsId() pulumi.IntOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) int { return v.ControlStandardsId }).(pulumi.IntOutput)
}

// The control version number.
func (o X12EnvelopeSettingsResponseOutput) ControlVersionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) string { return v.ControlVersionNumber }).(pulumi.StringOutput)
}

// The value indicating whether to enable default group headers.
func (o X12EnvelopeSettingsResponseOutput) EnableDefaultGroupHeaders() pulumi.BoolOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) bool { return v.EnableDefaultGroupHeaders }).(pulumi.BoolOutput)
}

// The functional group id.
func (o X12EnvelopeSettingsResponseOutput) FunctionalGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) *string { return v.FunctionalGroupId }).(pulumi.StringPtrOutput)
}

// The group control number lower bound.
func (o X12EnvelopeSettingsResponseOutput) GroupControlNumberLowerBound() pulumi.IntOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) int { return v.GroupControlNumberLowerBound }).(pulumi.IntOutput)
}

// The group control number upper bound.
func (o X12EnvelopeSettingsResponseOutput) GroupControlNumberUpperBound() pulumi.IntOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) int { return v.GroupControlNumberUpperBound }).(pulumi.IntOutput)
}

// The group header agency code.
func (o X12EnvelopeSettingsResponseOutput) GroupHeaderAgencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) string { return v.GroupHeaderAgencyCode }).(pulumi.StringOutput)
}

// The group header date format.
func (o X12EnvelopeSettingsResponseOutput) GroupHeaderDateFormat() pulumi.StringOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) string { return v.GroupHeaderDateFormat }).(pulumi.StringOutput)
}

// The group header time format.
func (o X12EnvelopeSettingsResponseOutput) GroupHeaderTimeFormat() pulumi.StringOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) string { return v.GroupHeaderTimeFormat }).(pulumi.StringOutput)
}

// The group header version.
func (o X12EnvelopeSettingsResponseOutput) GroupHeaderVersion() pulumi.StringOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) string { return v.GroupHeaderVersion }).(pulumi.StringOutput)
}

// The interchange  control number lower bound.
func (o X12EnvelopeSettingsResponseOutput) InterchangeControlNumberLowerBound() pulumi.IntOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) int { return v.InterchangeControlNumberLowerBound }).(pulumi.IntOutput)
}

// The interchange  control number upper bound.
func (o X12EnvelopeSettingsResponseOutput) InterchangeControlNumberUpperBound() pulumi.IntOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) int { return v.InterchangeControlNumberUpperBound }).(pulumi.IntOutput)
}

// The value indicating whether to overwrite existing transaction set control number.
func (o X12EnvelopeSettingsResponseOutput) OverwriteExistingTransactionSetControlNumber() pulumi.BoolOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) bool { return v.OverwriteExistingTransactionSetControlNumber }).(pulumi.BoolOutput)
}

// The receiver application id.
func (o X12EnvelopeSettingsResponseOutput) ReceiverApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) string { return v.ReceiverApplicationId }).(pulumi.StringOutput)
}

// The value indicating whether to rollover group control number.
func (o X12EnvelopeSettingsResponseOutput) RolloverGroupControlNumber() pulumi.BoolOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) bool { return v.RolloverGroupControlNumber }).(pulumi.BoolOutput)
}

// The value indicating whether to rollover interchange control number.
func (o X12EnvelopeSettingsResponseOutput) RolloverInterchangeControlNumber() pulumi.BoolOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) bool { return v.RolloverInterchangeControlNumber }).(pulumi.BoolOutput)
}

// The value indicating whether to rollover transaction set control number.
func (o X12EnvelopeSettingsResponseOutput) RolloverTransactionSetControlNumber() pulumi.BoolOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) bool { return v.RolloverTransactionSetControlNumber }).(pulumi.BoolOutput)
}

// The sender application id.
func (o X12EnvelopeSettingsResponseOutput) SenderApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) string { return v.SenderApplicationId }).(pulumi.StringOutput)
}

// The transaction set control number lower bound.
func (o X12EnvelopeSettingsResponseOutput) TransactionSetControlNumberLowerBound() pulumi.IntOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) int { return v.TransactionSetControlNumberLowerBound }).(pulumi.IntOutput)
}

// The transaction set control number prefix.
func (o X12EnvelopeSettingsResponseOutput) TransactionSetControlNumberPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) *string { return v.TransactionSetControlNumberPrefix }).(pulumi.StringPtrOutput)
}

// The transaction set control number suffix.
func (o X12EnvelopeSettingsResponseOutput) TransactionSetControlNumberSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) *string { return v.TransactionSetControlNumberSuffix }).(pulumi.StringPtrOutput)
}

// The transaction set control number upper bound.
func (o X12EnvelopeSettingsResponseOutput) TransactionSetControlNumberUpperBound() pulumi.IntOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) int { return v.TransactionSetControlNumberUpperBound }).(pulumi.IntOutput)
}

// The usage indicator.
func (o X12EnvelopeSettingsResponseOutput) UsageIndicator() pulumi.StringOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) string { return v.UsageIndicator }).(pulumi.StringOutput)
}

// The value indicating whether to use control standards id as repetition character.
func (o X12EnvelopeSettingsResponseOutput) UseControlStandardsIdAsRepetitionCharacter() pulumi.BoolOutput {
	return o.ApplyT(func(v X12EnvelopeSettingsResponse) bool { return v.UseControlStandardsIdAsRepetitionCharacter }).(pulumi.BoolOutput)
}

type X12EnvelopeSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (X12EnvelopeSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**X12EnvelopeSettingsResponse)(nil)).Elem()
}

func (o X12EnvelopeSettingsResponsePtrOutput) ToX12EnvelopeSettingsResponsePtrOutput() X12EnvelopeSettingsResponsePtrOutput {
	return o
}

func (o X12EnvelopeSettingsResponsePtrOutput) ToX12EnvelopeSettingsResponsePtrOutputWithContext(ctx context.Context) X12EnvelopeSettingsResponsePtrOutput {
	return o
}

func (o X12EnvelopeSettingsResponsePtrOutput) Elem() X12EnvelopeSettingsResponseOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) X12EnvelopeSettingsResponse { return *v }).(X12EnvelopeSettingsResponseOutput)
}

// The controls standards id.
func (o X12EnvelopeSettingsResponsePtrOutput) ControlStandardsId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ControlStandardsId
	}).(pulumi.IntPtrOutput)
}

// The control version number.
func (o X12EnvelopeSettingsResponsePtrOutput) ControlVersionNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ControlVersionNumber
	}).(pulumi.StringPtrOutput)
}

// The value indicating whether to enable default group headers.
func (o X12EnvelopeSettingsResponsePtrOutput) EnableDefaultGroupHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableDefaultGroupHeaders
	}).(pulumi.BoolPtrOutput)
}

// The functional group id.
func (o X12EnvelopeSettingsResponsePtrOutput) FunctionalGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.FunctionalGroupId
	}).(pulumi.StringPtrOutput)
}

// The group control number lower bound.
func (o X12EnvelopeSettingsResponsePtrOutput) GroupControlNumberLowerBound() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.GroupControlNumberLowerBound
	}).(pulumi.IntPtrOutput)
}

// The group control number upper bound.
func (o X12EnvelopeSettingsResponsePtrOutput) GroupControlNumberUpperBound() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.GroupControlNumberUpperBound
	}).(pulumi.IntPtrOutput)
}

// The group header agency code.
func (o X12EnvelopeSettingsResponsePtrOutput) GroupHeaderAgencyCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.GroupHeaderAgencyCode
	}).(pulumi.StringPtrOutput)
}

// The group header date format.
func (o X12EnvelopeSettingsResponsePtrOutput) GroupHeaderDateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.GroupHeaderDateFormat
	}).(pulumi.StringPtrOutput)
}

// The group header time format.
func (o X12EnvelopeSettingsResponsePtrOutput) GroupHeaderTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.GroupHeaderTimeFormat
	}).(pulumi.StringPtrOutput)
}

// The group header version.
func (o X12EnvelopeSettingsResponsePtrOutput) GroupHeaderVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.GroupHeaderVersion
	}).(pulumi.StringPtrOutput)
}

// The interchange  control number lower bound.
func (o X12EnvelopeSettingsResponsePtrOutput) InterchangeControlNumberLowerBound() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.InterchangeControlNumberLowerBound
	}).(pulumi.IntPtrOutput)
}

// The interchange  control number upper bound.
func (o X12EnvelopeSettingsResponsePtrOutput) InterchangeControlNumberUpperBound() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.InterchangeControlNumberUpperBound
	}).(pulumi.IntPtrOutput)
}

// The value indicating whether to overwrite existing transaction set control number.
func (o X12EnvelopeSettingsResponsePtrOutput) OverwriteExistingTransactionSetControlNumber() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.OverwriteExistingTransactionSetControlNumber
	}).(pulumi.BoolPtrOutput)
}

// The receiver application id.
func (o X12EnvelopeSettingsResponsePtrOutput) ReceiverApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ReceiverApplicationId
	}).(pulumi.StringPtrOutput)
}

// The value indicating whether to rollover group control number.
func (o X12EnvelopeSettingsResponsePtrOutput) RolloverGroupControlNumber() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.RolloverGroupControlNumber
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to rollover interchange control number.
func (o X12EnvelopeSettingsResponsePtrOutput) RolloverInterchangeControlNumber() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.RolloverInterchangeControlNumber
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to rollover transaction set control number.
func (o X12EnvelopeSettingsResponsePtrOutput) RolloverTransactionSetControlNumber() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.RolloverTransactionSetControlNumber
	}).(pulumi.BoolPtrOutput)
}

// The sender application id.
func (o X12EnvelopeSettingsResponsePtrOutput) SenderApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SenderApplicationId
	}).(pulumi.StringPtrOutput)
}

// The transaction set control number lower bound.
func (o X12EnvelopeSettingsResponsePtrOutput) TransactionSetControlNumberLowerBound() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TransactionSetControlNumberLowerBound
	}).(pulumi.IntPtrOutput)
}

// The transaction set control number prefix.
func (o X12EnvelopeSettingsResponsePtrOutput) TransactionSetControlNumberPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TransactionSetControlNumberPrefix
	}).(pulumi.StringPtrOutput)
}

// The transaction set control number suffix.
func (o X12EnvelopeSettingsResponsePtrOutput) TransactionSetControlNumberSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TransactionSetControlNumberSuffix
	}).(pulumi.StringPtrOutput)
}

// The transaction set control number upper bound.
func (o X12EnvelopeSettingsResponsePtrOutput) TransactionSetControlNumberUpperBound() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TransactionSetControlNumberUpperBound
	}).(pulumi.IntPtrOutput)
}

// The usage indicator.
func (o X12EnvelopeSettingsResponsePtrOutput) UsageIndicator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UsageIndicator
	}).(pulumi.StringPtrOutput)
}

// The value indicating whether to use control standards id as repetition character.
func (o X12EnvelopeSettingsResponsePtrOutput) UseControlStandardsIdAsRepetitionCharacter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12EnvelopeSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.UseControlStandardsIdAsRepetitionCharacter
	}).(pulumi.BoolPtrOutput)
}

// The X12 agreement framing settings.
type X12FramingSettings struct {
	// The X12 character set.
	CharacterSet string `pulumi:"characterSet"`
	// The component separator.
	ComponentSeparator int `pulumi:"componentSeparator"`
	// The data element separator.
	DataElementSeparator int `pulumi:"dataElementSeparator"`
	// The replacement character.
	ReplaceCharacter int `pulumi:"replaceCharacter"`
	// The value indicating whether to replace separators in payload.
	ReplaceSeparatorsInPayload bool `pulumi:"replaceSeparatorsInPayload"`
	// The segment terminator.
	SegmentTerminator int `pulumi:"segmentTerminator"`
	// The segment terminator suffix.
	SegmentTerminatorSuffix string `pulumi:"segmentTerminatorSuffix"`
}

// X12FramingSettingsInput is an input type that accepts X12FramingSettingsArgs and X12FramingSettingsOutput values.
// You can construct a concrete instance of `X12FramingSettingsInput` via:
//
//          X12FramingSettingsArgs{...}
type X12FramingSettingsInput interface {
	pulumi.Input

	ToX12FramingSettingsOutput() X12FramingSettingsOutput
	ToX12FramingSettingsOutputWithContext(context.Context) X12FramingSettingsOutput
}

// The X12 agreement framing settings.
type X12FramingSettingsArgs struct {
	// The X12 character set.
	CharacterSet pulumi.StringInput `pulumi:"characterSet"`
	// The component separator.
	ComponentSeparator pulumi.IntInput `pulumi:"componentSeparator"`
	// The data element separator.
	DataElementSeparator pulumi.IntInput `pulumi:"dataElementSeparator"`
	// The replacement character.
	ReplaceCharacter pulumi.IntInput `pulumi:"replaceCharacter"`
	// The value indicating whether to replace separators in payload.
	ReplaceSeparatorsInPayload pulumi.BoolInput `pulumi:"replaceSeparatorsInPayload"`
	// The segment terminator.
	SegmentTerminator pulumi.IntInput `pulumi:"segmentTerminator"`
	// The segment terminator suffix.
	SegmentTerminatorSuffix pulumi.StringInput `pulumi:"segmentTerminatorSuffix"`
}

func (X12FramingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X12FramingSettings)(nil)).Elem()
}

func (i X12FramingSettingsArgs) ToX12FramingSettingsOutput() X12FramingSettingsOutput {
	return i.ToX12FramingSettingsOutputWithContext(context.Background())
}

func (i X12FramingSettingsArgs) ToX12FramingSettingsOutputWithContext(ctx context.Context) X12FramingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12FramingSettingsOutput)
}

func (i X12FramingSettingsArgs) ToX12FramingSettingsPtrOutput() X12FramingSettingsPtrOutput {
	return i.ToX12FramingSettingsPtrOutputWithContext(context.Background())
}

func (i X12FramingSettingsArgs) ToX12FramingSettingsPtrOutputWithContext(ctx context.Context) X12FramingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12FramingSettingsOutput).ToX12FramingSettingsPtrOutputWithContext(ctx)
}

// X12FramingSettingsPtrInput is an input type that accepts X12FramingSettingsArgs, X12FramingSettingsPtr and X12FramingSettingsPtrOutput values.
// You can construct a concrete instance of `X12FramingSettingsPtrInput` via:
//
//          X12FramingSettingsArgs{...}
//
//  or:
//
//          nil
type X12FramingSettingsPtrInput interface {
	pulumi.Input

	ToX12FramingSettingsPtrOutput() X12FramingSettingsPtrOutput
	ToX12FramingSettingsPtrOutputWithContext(context.Context) X12FramingSettingsPtrOutput
}

type x12framingSettingsPtrType X12FramingSettingsArgs

func X12FramingSettingsPtr(v *X12FramingSettingsArgs) X12FramingSettingsPtrInput {
	return (*x12framingSettingsPtrType)(v)
}

func (*x12framingSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**X12FramingSettings)(nil)).Elem()
}

func (i *x12framingSettingsPtrType) ToX12FramingSettingsPtrOutput() X12FramingSettingsPtrOutput {
	return i.ToX12FramingSettingsPtrOutputWithContext(context.Background())
}

func (i *x12framingSettingsPtrType) ToX12FramingSettingsPtrOutputWithContext(ctx context.Context) X12FramingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12FramingSettingsPtrOutput)
}

// The X12 agreement framing settings.
type X12FramingSettingsResponse struct {
	// The X12 character set.
	CharacterSet string `pulumi:"characterSet"`
	// The component separator.
	ComponentSeparator int `pulumi:"componentSeparator"`
	// The data element separator.
	DataElementSeparator int `pulumi:"dataElementSeparator"`
	// The replacement character.
	ReplaceCharacter int `pulumi:"replaceCharacter"`
	// The value indicating whether to replace separators in payload.
	ReplaceSeparatorsInPayload bool `pulumi:"replaceSeparatorsInPayload"`
	// The segment terminator.
	SegmentTerminator int `pulumi:"segmentTerminator"`
	// The segment terminator suffix.
	SegmentTerminatorSuffix string `pulumi:"segmentTerminatorSuffix"`
}

// The X12 agreement framing settings.
type X12FramingSettingsResponseOutput struct{ *pulumi.OutputState }

func (X12FramingSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X12FramingSettingsResponse)(nil)).Elem()
}

func (o X12FramingSettingsResponseOutput) ToX12FramingSettingsResponseOutput() X12FramingSettingsResponseOutput {
	return o
}

func (o X12FramingSettingsResponseOutput) ToX12FramingSettingsResponseOutputWithContext(ctx context.Context) X12FramingSettingsResponseOutput {
	return o
}

func (o X12FramingSettingsResponseOutput) ToX12FramingSettingsResponsePtrOutput() X12FramingSettingsResponsePtrOutput {
	return o.ToX12FramingSettingsResponsePtrOutputWithContext(context.Background())
}

func (o X12FramingSettingsResponseOutput) ToX12FramingSettingsResponsePtrOutputWithContext(ctx context.Context) X12FramingSettingsResponsePtrOutput {
	return o.ApplyT(func(v X12FramingSettingsResponse) *X12FramingSettingsResponse {
		return &v
	}).(X12FramingSettingsResponsePtrOutput)
}

// The X12 character set.
func (o X12FramingSettingsResponseOutput) CharacterSet() pulumi.StringOutput {
	return o.ApplyT(func(v X12FramingSettingsResponse) string { return v.CharacterSet }).(pulumi.StringOutput)
}

// The component separator.
func (o X12FramingSettingsResponseOutput) ComponentSeparator() pulumi.IntOutput {
	return o.ApplyT(func(v X12FramingSettingsResponse) int { return v.ComponentSeparator }).(pulumi.IntOutput)
}

// The data element separator.
func (o X12FramingSettingsResponseOutput) DataElementSeparator() pulumi.IntOutput {
	return o.ApplyT(func(v X12FramingSettingsResponse) int { return v.DataElementSeparator }).(pulumi.IntOutput)
}

// The replacement character.
func (o X12FramingSettingsResponseOutput) ReplaceCharacter() pulumi.IntOutput {
	return o.ApplyT(func(v X12FramingSettingsResponse) int { return v.ReplaceCharacter }).(pulumi.IntOutput)
}

// The value indicating whether to replace separators in payload.
func (o X12FramingSettingsResponseOutput) ReplaceSeparatorsInPayload() pulumi.BoolOutput {
	return o.ApplyT(func(v X12FramingSettingsResponse) bool { return v.ReplaceSeparatorsInPayload }).(pulumi.BoolOutput)
}

// The segment terminator.
func (o X12FramingSettingsResponseOutput) SegmentTerminator() pulumi.IntOutput {
	return o.ApplyT(func(v X12FramingSettingsResponse) int { return v.SegmentTerminator }).(pulumi.IntOutput)
}

// The segment terminator suffix.
func (o X12FramingSettingsResponseOutput) SegmentTerminatorSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v X12FramingSettingsResponse) string { return v.SegmentTerminatorSuffix }).(pulumi.StringOutput)
}

type X12FramingSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (X12FramingSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**X12FramingSettingsResponse)(nil)).Elem()
}

func (o X12FramingSettingsResponsePtrOutput) ToX12FramingSettingsResponsePtrOutput() X12FramingSettingsResponsePtrOutput {
	return o
}

func (o X12FramingSettingsResponsePtrOutput) ToX12FramingSettingsResponsePtrOutputWithContext(ctx context.Context) X12FramingSettingsResponsePtrOutput {
	return o
}

func (o X12FramingSettingsResponsePtrOutput) Elem() X12FramingSettingsResponseOutput {
	return o.ApplyT(func(v *X12FramingSettingsResponse) X12FramingSettingsResponse { return *v }).(X12FramingSettingsResponseOutput)
}

// The X12 character set.
func (o X12FramingSettingsResponsePtrOutput) CharacterSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12FramingSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CharacterSet
	}).(pulumi.StringPtrOutput)
}

// The component separator.
func (o X12FramingSettingsResponsePtrOutput) ComponentSeparator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *X12FramingSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ComponentSeparator
	}).(pulumi.IntPtrOutput)
}

// The data element separator.
func (o X12FramingSettingsResponsePtrOutput) DataElementSeparator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *X12FramingSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.DataElementSeparator
	}).(pulumi.IntPtrOutput)
}

// The replacement character.
func (o X12FramingSettingsResponsePtrOutput) ReplaceCharacter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *X12FramingSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ReplaceCharacter
	}).(pulumi.IntPtrOutput)
}

// The value indicating whether to replace separators in payload.
func (o X12FramingSettingsResponsePtrOutput) ReplaceSeparatorsInPayload() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12FramingSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.ReplaceSeparatorsInPayload
	}).(pulumi.BoolPtrOutput)
}

// The segment terminator.
func (o X12FramingSettingsResponsePtrOutput) SegmentTerminator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *X12FramingSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.SegmentTerminator
	}).(pulumi.IntPtrOutput)
}

// The segment terminator suffix.
func (o X12FramingSettingsResponsePtrOutput) SegmentTerminatorSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12FramingSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SegmentTerminatorSuffix
	}).(pulumi.StringPtrOutput)
}

// The X12 message filter for odata query.
type X12MessageFilter struct {
	// The message filter type.
	MessageFilterType string `pulumi:"messageFilterType"`
}

// X12MessageFilterInput is an input type that accepts X12MessageFilterArgs and X12MessageFilterOutput values.
// You can construct a concrete instance of `X12MessageFilterInput` via:
//
//          X12MessageFilterArgs{...}
type X12MessageFilterInput interface {
	pulumi.Input

	ToX12MessageFilterOutput() X12MessageFilterOutput
	ToX12MessageFilterOutputWithContext(context.Context) X12MessageFilterOutput
}

// The X12 message filter for odata query.
type X12MessageFilterArgs struct {
	// The message filter type.
	MessageFilterType pulumi.StringInput `pulumi:"messageFilterType"`
}

func (X12MessageFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X12MessageFilter)(nil)).Elem()
}

func (i X12MessageFilterArgs) ToX12MessageFilterOutput() X12MessageFilterOutput {
	return i.ToX12MessageFilterOutputWithContext(context.Background())
}

func (i X12MessageFilterArgs) ToX12MessageFilterOutputWithContext(ctx context.Context) X12MessageFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12MessageFilterOutput)
}

func (i X12MessageFilterArgs) ToX12MessageFilterPtrOutput() X12MessageFilterPtrOutput {
	return i.ToX12MessageFilterPtrOutputWithContext(context.Background())
}

func (i X12MessageFilterArgs) ToX12MessageFilterPtrOutputWithContext(ctx context.Context) X12MessageFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12MessageFilterOutput).ToX12MessageFilterPtrOutputWithContext(ctx)
}

// X12MessageFilterPtrInput is an input type that accepts X12MessageFilterArgs, X12MessageFilterPtr and X12MessageFilterPtrOutput values.
// You can construct a concrete instance of `X12MessageFilterPtrInput` via:
//
//          X12MessageFilterArgs{...}
//
//  or:
//
//          nil
type X12MessageFilterPtrInput interface {
	pulumi.Input

	ToX12MessageFilterPtrOutput() X12MessageFilterPtrOutput
	ToX12MessageFilterPtrOutputWithContext(context.Context) X12MessageFilterPtrOutput
}

type x12messageFilterPtrType X12MessageFilterArgs

func X12MessageFilterPtr(v *X12MessageFilterArgs) X12MessageFilterPtrInput {
	return (*x12messageFilterPtrType)(v)
}

func (*x12messageFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**X12MessageFilter)(nil)).Elem()
}

func (i *x12messageFilterPtrType) ToX12MessageFilterPtrOutput() X12MessageFilterPtrOutput {
	return i.ToX12MessageFilterPtrOutputWithContext(context.Background())
}

func (i *x12messageFilterPtrType) ToX12MessageFilterPtrOutputWithContext(ctx context.Context) X12MessageFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12MessageFilterPtrOutput)
}

// The X12 message filter for odata query.
type X12MessageFilterResponse struct {
	// The message filter type.
	MessageFilterType string `pulumi:"messageFilterType"`
}

// The X12 message filter for odata query.
type X12MessageFilterResponseOutput struct{ *pulumi.OutputState }

func (X12MessageFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X12MessageFilterResponse)(nil)).Elem()
}

func (o X12MessageFilterResponseOutput) ToX12MessageFilterResponseOutput() X12MessageFilterResponseOutput {
	return o
}

func (o X12MessageFilterResponseOutput) ToX12MessageFilterResponseOutputWithContext(ctx context.Context) X12MessageFilterResponseOutput {
	return o
}

func (o X12MessageFilterResponseOutput) ToX12MessageFilterResponsePtrOutput() X12MessageFilterResponsePtrOutput {
	return o.ToX12MessageFilterResponsePtrOutputWithContext(context.Background())
}

func (o X12MessageFilterResponseOutput) ToX12MessageFilterResponsePtrOutputWithContext(ctx context.Context) X12MessageFilterResponsePtrOutput {
	return o.ApplyT(func(v X12MessageFilterResponse) *X12MessageFilterResponse {
		return &v
	}).(X12MessageFilterResponsePtrOutput)
}

// The message filter type.
func (o X12MessageFilterResponseOutput) MessageFilterType() pulumi.StringOutput {
	return o.ApplyT(func(v X12MessageFilterResponse) string { return v.MessageFilterType }).(pulumi.StringOutput)
}

type X12MessageFilterResponsePtrOutput struct{ *pulumi.OutputState }

func (X12MessageFilterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**X12MessageFilterResponse)(nil)).Elem()
}

func (o X12MessageFilterResponsePtrOutput) ToX12MessageFilterResponsePtrOutput() X12MessageFilterResponsePtrOutput {
	return o
}

func (o X12MessageFilterResponsePtrOutput) ToX12MessageFilterResponsePtrOutputWithContext(ctx context.Context) X12MessageFilterResponsePtrOutput {
	return o
}

func (o X12MessageFilterResponsePtrOutput) Elem() X12MessageFilterResponseOutput {
	return o.ApplyT(func(v *X12MessageFilterResponse) X12MessageFilterResponse { return *v }).(X12MessageFilterResponseOutput)
}

// The message filter type.
func (o X12MessageFilterResponsePtrOutput) MessageFilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12MessageFilterResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MessageFilterType
	}).(pulumi.StringPtrOutput)
}

// The X12 message identifier.
type X12MessageIdentifier struct {
	// The message id.
	MessageId string `pulumi:"messageId"`
}

// X12MessageIdentifierInput is an input type that accepts X12MessageIdentifierArgs and X12MessageIdentifierOutput values.
// You can construct a concrete instance of `X12MessageIdentifierInput` via:
//
//          X12MessageIdentifierArgs{...}
type X12MessageIdentifierInput interface {
	pulumi.Input

	ToX12MessageIdentifierOutput() X12MessageIdentifierOutput
	ToX12MessageIdentifierOutputWithContext(context.Context) X12MessageIdentifierOutput
}

// The X12 message identifier.
type X12MessageIdentifierArgs struct {
	// The message id.
	MessageId pulumi.StringInput `pulumi:"messageId"`
}

func (X12MessageIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X12MessageIdentifier)(nil)).Elem()
}

func (i X12MessageIdentifierArgs) ToX12MessageIdentifierOutput() X12MessageIdentifierOutput {
	return i.ToX12MessageIdentifierOutputWithContext(context.Background())
}

func (i X12MessageIdentifierArgs) ToX12MessageIdentifierOutputWithContext(ctx context.Context) X12MessageIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12MessageIdentifierOutput)
}

// X12MessageIdentifierArrayInput is an input type that accepts X12MessageIdentifierArray and X12MessageIdentifierArrayOutput values.
// You can construct a concrete instance of `X12MessageIdentifierArrayInput` via:
//
//          X12MessageIdentifierArray{ X12MessageIdentifierArgs{...} }
type X12MessageIdentifierArrayInput interface {
	pulumi.Input

	ToX12MessageIdentifierArrayOutput() X12MessageIdentifierArrayOutput
	ToX12MessageIdentifierArrayOutputWithContext(context.Context) X12MessageIdentifierArrayOutput
}

type X12MessageIdentifierArray []X12MessageIdentifierInput

func (X12MessageIdentifierArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X12MessageIdentifier)(nil)).Elem()
}

func (i X12MessageIdentifierArray) ToX12MessageIdentifierArrayOutput() X12MessageIdentifierArrayOutput {
	return i.ToX12MessageIdentifierArrayOutputWithContext(context.Background())
}

func (i X12MessageIdentifierArray) ToX12MessageIdentifierArrayOutputWithContext(ctx context.Context) X12MessageIdentifierArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12MessageIdentifierArrayOutput)
}

// The X12 message identifier.
type X12MessageIdentifierResponse struct {
	// The message id.
	MessageId string `pulumi:"messageId"`
}

// The X12 message identifier.
type X12MessageIdentifierResponseOutput struct{ *pulumi.OutputState }

func (X12MessageIdentifierResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X12MessageIdentifierResponse)(nil)).Elem()
}

func (o X12MessageIdentifierResponseOutput) ToX12MessageIdentifierResponseOutput() X12MessageIdentifierResponseOutput {
	return o
}

func (o X12MessageIdentifierResponseOutput) ToX12MessageIdentifierResponseOutputWithContext(ctx context.Context) X12MessageIdentifierResponseOutput {
	return o
}

// The message id.
func (o X12MessageIdentifierResponseOutput) MessageId() pulumi.StringOutput {
	return o.ApplyT(func(v X12MessageIdentifierResponse) string { return v.MessageId }).(pulumi.StringOutput)
}

type X12MessageIdentifierResponseArrayOutput struct{ *pulumi.OutputState }

func (X12MessageIdentifierResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X12MessageIdentifierResponse)(nil)).Elem()
}

func (o X12MessageIdentifierResponseArrayOutput) ToX12MessageIdentifierResponseArrayOutput() X12MessageIdentifierResponseArrayOutput {
	return o
}

func (o X12MessageIdentifierResponseArrayOutput) ToX12MessageIdentifierResponseArrayOutputWithContext(ctx context.Context) X12MessageIdentifierResponseArrayOutput {
	return o
}

func (o X12MessageIdentifierResponseArrayOutput) Index(i pulumi.IntInput) X12MessageIdentifierResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) X12MessageIdentifierResponse {
		return vs[0].([]X12MessageIdentifierResponse)[vs[1].(int)]
	}).(X12MessageIdentifierResponseOutput)
}

// The X12 one-way agreement.
type X12OneWayAgreement struct {
	// The X12 protocol settings.
	ProtocolSettings X12ProtocolSettings `pulumi:"protocolSettings"`
	// The receiver business identity
	ReceiverBusinessIdentity BusinessIdentity `pulumi:"receiverBusinessIdentity"`
	// The sender business identity
	SenderBusinessIdentity BusinessIdentity `pulumi:"senderBusinessIdentity"`
}

// X12OneWayAgreementInput is an input type that accepts X12OneWayAgreementArgs and X12OneWayAgreementOutput values.
// You can construct a concrete instance of `X12OneWayAgreementInput` via:
//
//          X12OneWayAgreementArgs{...}
type X12OneWayAgreementInput interface {
	pulumi.Input

	ToX12OneWayAgreementOutput() X12OneWayAgreementOutput
	ToX12OneWayAgreementOutputWithContext(context.Context) X12OneWayAgreementOutput
}

// The X12 one-way agreement.
type X12OneWayAgreementArgs struct {
	// The X12 protocol settings.
	ProtocolSettings X12ProtocolSettingsInput `pulumi:"protocolSettings"`
	// The receiver business identity
	ReceiverBusinessIdentity BusinessIdentityInput `pulumi:"receiverBusinessIdentity"`
	// The sender business identity
	SenderBusinessIdentity BusinessIdentityInput `pulumi:"senderBusinessIdentity"`
}

func (X12OneWayAgreementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X12OneWayAgreement)(nil)).Elem()
}

func (i X12OneWayAgreementArgs) ToX12OneWayAgreementOutput() X12OneWayAgreementOutput {
	return i.ToX12OneWayAgreementOutputWithContext(context.Background())
}

func (i X12OneWayAgreementArgs) ToX12OneWayAgreementOutputWithContext(ctx context.Context) X12OneWayAgreementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12OneWayAgreementOutput)
}

func (i X12OneWayAgreementArgs) ToX12OneWayAgreementPtrOutput() X12OneWayAgreementPtrOutput {
	return i.ToX12OneWayAgreementPtrOutputWithContext(context.Background())
}

func (i X12OneWayAgreementArgs) ToX12OneWayAgreementPtrOutputWithContext(ctx context.Context) X12OneWayAgreementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12OneWayAgreementOutput).ToX12OneWayAgreementPtrOutputWithContext(ctx)
}

// X12OneWayAgreementPtrInput is an input type that accepts X12OneWayAgreementArgs, X12OneWayAgreementPtr and X12OneWayAgreementPtrOutput values.
// You can construct a concrete instance of `X12OneWayAgreementPtrInput` via:
//
//          X12OneWayAgreementArgs{...}
//
//  or:
//
//          nil
type X12OneWayAgreementPtrInput interface {
	pulumi.Input

	ToX12OneWayAgreementPtrOutput() X12OneWayAgreementPtrOutput
	ToX12OneWayAgreementPtrOutputWithContext(context.Context) X12OneWayAgreementPtrOutput
}

type x12oneWayAgreementPtrType X12OneWayAgreementArgs

func X12OneWayAgreementPtr(v *X12OneWayAgreementArgs) X12OneWayAgreementPtrInput {
	return (*x12oneWayAgreementPtrType)(v)
}

func (*x12oneWayAgreementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**X12OneWayAgreement)(nil)).Elem()
}

func (i *x12oneWayAgreementPtrType) ToX12OneWayAgreementPtrOutput() X12OneWayAgreementPtrOutput {
	return i.ToX12OneWayAgreementPtrOutputWithContext(context.Background())
}

func (i *x12oneWayAgreementPtrType) ToX12OneWayAgreementPtrOutputWithContext(ctx context.Context) X12OneWayAgreementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12OneWayAgreementPtrOutput)
}

// The X12 one-way agreement.
type X12OneWayAgreementResponse struct {
	// The X12 protocol settings.
	ProtocolSettings X12ProtocolSettingsResponse `pulumi:"protocolSettings"`
	// The receiver business identity
	ReceiverBusinessIdentity BusinessIdentityResponse `pulumi:"receiverBusinessIdentity"`
	// The sender business identity
	SenderBusinessIdentity BusinessIdentityResponse `pulumi:"senderBusinessIdentity"`
}

// The X12 one-way agreement.
type X12OneWayAgreementResponseOutput struct{ *pulumi.OutputState }

func (X12OneWayAgreementResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X12OneWayAgreementResponse)(nil)).Elem()
}

func (o X12OneWayAgreementResponseOutput) ToX12OneWayAgreementResponseOutput() X12OneWayAgreementResponseOutput {
	return o
}

func (o X12OneWayAgreementResponseOutput) ToX12OneWayAgreementResponseOutputWithContext(ctx context.Context) X12OneWayAgreementResponseOutput {
	return o
}

func (o X12OneWayAgreementResponseOutput) ToX12OneWayAgreementResponsePtrOutput() X12OneWayAgreementResponsePtrOutput {
	return o.ToX12OneWayAgreementResponsePtrOutputWithContext(context.Background())
}

func (o X12OneWayAgreementResponseOutput) ToX12OneWayAgreementResponsePtrOutputWithContext(ctx context.Context) X12OneWayAgreementResponsePtrOutput {
	return o.ApplyT(func(v X12OneWayAgreementResponse) *X12OneWayAgreementResponse {
		return &v
	}).(X12OneWayAgreementResponsePtrOutput)
}

// The X12 protocol settings.
func (o X12OneWayAgreementResponseOutput) ProtocolSettings() X12ProtocolSettingsResponseOutput {
	return o.ApplyT(func(v X12OneWayAgreementResponse) X12ProtocolSettingsResponse { return v.ProtocolSettings }).(X12ProtocolSettingsResponseOutput)
}

// The receiver business identity
func (o X12OneWayAgreementResponseOutput) ReceiverBusinessIdentity() BusinessIdentityResponseOutput {
	return o.ApplyT(func(v X12OneWayAgreementResponse) BusinessIdentityResponse { return v.ReceiverBusinessIdentity }).(BusinessIdentityResponseOutput)
}

// The sender business identity
func (o X12OneWayAgreementResponseOutput) SenderBusinessIdentity() BusinessIdentityResponseOutput {
	return o.ApplyT(func(v X12OneWayAgreementResponse) BusinessIdentityResponse { return v.SenderBusinessIdentity }).(BusinessIdentityResponseOutput)
}

type X12OneWayAgreementResponsePtrOutput struct{ *pulumi.OutputState }

func (X12OneWayAgreementResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**X12OneWayAgreementResponse)(nil)).Elem()
}

func (o X12OneWayAgreementResponsePtrOutput) ToX12OneWayAgreementResponsePtrOutput() X12OneWayAgreementResponsePtrOutput {
	return o
}

func (o X12OneWayAgreementResponsePtrOutput) ToX12OneWayAgreementResponsePtrOutputWithContext(ctx context.Context) X12OneWayAgreementResponsePtrOutput {
	return o
}

func (o X12OneWayAgreementResponsePtrOutput) Elem() X12OneWayAgreementResponseOutput {
	return o.ApplyT(func(v *X12OneWayAgreementResponse) X12OneWayAgreementResponse { return *v }).(X12OneWayAgreementResponseOutput)
}

// The X12 protocol settings.
func (o X12OneWayAgreementResponsePtrOutput) ProtocolSettings() X12ProtocolSettingsResponsePtrOutput {
	return o.ApplyT(func(v *X12OneWayAgreementResponse) *X12ProtocolSettingsResponse {
		if v == nil {
			return nil
		}
		return &v.ProtocolSettings
	}).(X12ProtocolSettingsResponsePtrOutput)
}

// The receiver business identity
func (o X12OneWayAgreementResponsePtrOutput) ReceiverBusinessIdentity() BusinessIdentityResponsePtrOutput {
	return o.ApplyT(func(v *X12OneWayAgreementResponse) *BusinessIdentityResponse {
		if v == nil {
			return nil
		}
		return &v.ReceiverBusinessIdentity
	}).(BusinessIdentityResponsePtrOutput)
}

// The sender business identity
func (o X12OneWayAgreementResponsePtrOutput) SenderBusinessIdentity() BusinessIdentityResponsePtrOutput {
	return o.ApplyT(func(v *X12OneWayAgreementResponse) *BusinessIdentityResponse {
		if v == nil {
			return nil
		}
		return &v.SenderBusinessIdentity
	}).(BusinessIdentityResponsePtrOutput)
}

// The X12 processing settings.
type X12ProcessingSettings struct {
	// The value indicating whether to convert numerical type to implied decimal.
	ConvertImpliedDecimal bool `pulumi:"convertImpliedDecimal"`
	// The value indicating whether to create empty xml tags for trailing separators.
	CreateEmptyXmlTagsForTrailingSeparators bool `pulumi:"createEmptyXmlTagsForTrailingSeparators"`
	// The value indicating whether to mask security information.
	MaskSecurityInfo bool `pulumi:"maskSecurityInfo"`
	// The value indicating whether to preserve interchange.
	PreserveInterchange bool `pulumi:"preserveInterchange"`
	// The value indicating whether to suspend interchange on error.
	SuspendInterchangeOnError bool `pulumi:"suspendInterchangeOnError"`
	// The value indicating whether to use dot as decimal separator.
	UseDotAsDecimalSeparator bool `pulumi:"useDotAsDecimalSeparator"`
}

// X12ProcessingSettingsInput is an input type that accepts X12ProcessingSettingsArgs and X12ProcessingSettingsOutput values.
// You can construct a concrete instance of `X12ProcessingSettingsInput` via:
//
//          X12ProcessingSettingsArgs{...}
type X12ProcessingSettingsInput interface {
	pulumi.Input

	ToX12ProcessingSettingsOutput() X12ProcessingSettingsOutput
	ToX12ProcessingSettingsOutputWithContext(context.Context) X12ProcessingSettingsOutput
}

// The X12 processing settings.
type X12ProcessingSettingsArgs struct {
	// The value indicating whether to convert numerical type to implied decimal.
	ConvertImpliedDecimal pulumi.BoolInput `pulumi:"convertImpliedDecimal"`
	// The value indicating whether to create empty xml tags for trailing separators.
	CreateEmptyXmlTagsForTrailingSeparators pulumi.BoolInput `pulumi:"createEmptyXmlTagsForTrailingSeparators"`
	// The value indicating whether to mask security information.
	MaskSecurityInfo pulumi.BoolInput `pulumi:"maskSecurityInfo"`
	// The value indicating whether to preserve interchange.
	PreserveInterchange pulumi.BoolInput `pulumi:"preserveInterchange"`
	// The value indicating whether to suspend interchange on error.
	SuspendInterchangeOnError pulumi.BoolInput `pulumi:"suspendInterchangeOnError"`
	// The value indicating whether to use dot as decimal separator.
	UseDotAsDecimalSeparator pulumi.BoolInput `pulumi:"useDotAsDecimalSeparator"`
}

func (X12ProcessingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X12ProcessingSettings)(nil)).Elem()
}

func (i X12ProcessingSettingsArgs) ToX12ProcessingSettingsOutput() X12ProcessingSettingsOutput {
	return i.ToX12ProcessingSettingsOutputWithContext(context.Background())
}

func (i X12ProcessingSettingsArgs) ToX12ProcessingSettingsOutputWithContext(ctx context.Context) X12ProcessingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12ProcessingSettingsOutput)
}

func (i X12ProcessingSettingsArgs) ToX12ProcessingSettingsPtrOutput() X12ProcessingSettingsPtrOutput {
	return i.ToX12ProcessingSettingsPtrOutputWithContext(context.Background())
}

func (i X12ProcessingSettingsArgs) ToX12ProcessingSettingsPtrOutputWithContext(ctx context.Context) X12ProcessingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12ProcessingSettingsOutput).ToX12ProcessingSettingsPtrOutputWithContext(ctx)
}

// X12ProcessingSettingsPtrInput is an input type that accepts X12ProcessingSettingsArgs, X12ProcessingSettingsPtr and X12ProcessingSettingsPtrOutput values.
// You can construct a concrete instance of `X12ProcessingSettingsPtrInput` via:
//
//          X12ProcessingSettingsArgs{...}
//
//  or:
//
//          nil
type X12ProcessingSettingsPtrInput interface {
	pulumi.Input

	ToX12ProcessingSettingsPtrOutput() X12ProcessingSettingsPtrOutput
	ToX12ProcessingSettingsPtrOutputWithContext(context.Context) X12ProcessingSettingsPtrOutput
}

type x12processingSettingsPtrType X12ProcessingSettingsArgs

func X12ProcessingSettingsPtr(v *X12ProcessingSettingsArgs) X12ProcessingSettingsPtrInput {
	return (*x12processingSettingsPtrType)(v)
}

func (*x12processingSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**X12ProcessingSettings)(nil)).Elem()
}

func (i *x12processingSettingsPtrType) ToX12ProcessingSettingsPtrOutput() X12ProcessingSettingsPtrOutput {
	return i.ToX12ProcessingSettingsPtrOutputWithContext(context.Background())
}

func (i *x12processingSettingsPtrType) ToX12ProcessingSettingsPtrOutputWithContext(ctx context.Context) X12ProcessingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12ProcessingSettingsPtrOutput)
}

// The X12 processing settings.
type X12ProcessingSettingsResponse struct {
	// The value indicating whether to convert numerical type to implied decimal.
	ConvertImpliedDecimal bool `pulumi:"convertImpliedDecimal"`
	// The value indicating whether to create empty xml tags for trailing separators.
	CreateEmptyXmlTagsForTrailingSeparators bool `pulumi:"createEmptyXmlTagsForTrailingSeparators"`
	// The value indicating whether to mask security information.
	MaskSecurityInfo bool `pulumi:"maskSecurityInfo"`
	// The value indicating whether to preserve interchange.
	PreserveInterchange bool `pulumi:"preserveInterchange"`
	// The value indicating whether to suspend interchange on error.
	SuspendInterchangeOnError bool `pulumi:"suspendInterchangeOnError"`
	// The value indicating whether to use dot as decimal separator.
	UseDotAsDecimalSeparator bool `pulumi:"useDotAsDecimalSeparator"`
}

// The X12 processing settings.
type X12ProcessingSettingsResponseOutput struct{ *pulumi.OutputState }

func (X12ProcessingSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X12ProcessingSettingsResponse)(nil)).Elem()
}

func (o X12ProcessingSettingsResponseOutput) ToX12ProcessingSettingsResponseOutput() X12ProcessingSettingsResponseOutput {
	return o
}

func (o X12ProcessingSettingsResponseOutput) ToX12ProcessingSettingsResponseOutputWithContext(ctx context.Context) X12ProcessingSettingsResponseOutput {
	return o
}

func (o X12ProcessingSettingsResponseOutput) ToX12ProcessingSettingsResponsePtrOutput() X12ProcessingSettingsResponsePtrOutput {
	return o.ToX12ProcessingSettingsResponsePtrOutputWithContext(context.Background())
}

func (o X12ProcessingSettingsResponseOutput) ToX12ProcessingSettingsResponsePtrOutputWithContext(ctx context.Context) X12ProcessingSettingsResponsePtrOutput {
	return o.ApplyT(func(v X12ProcessingSettingsResponse) *X12ProcessingSettingsResponse {
		return &v
	}).(X12ProcessingSettingsResponsePtrOutput)
}

// The value indicating whether to convert numerical type to implied decimal.
func (o X12ProcessingSettingsResponseOutput) ConvertImpliedDecimal() pulumi.BoolOutput {
	return o.ApplyT(func(v X12ProcessingSettingsResponse) bool { return v.ConvertImpliedDecimal }).(pulumi.BoolOutput)
}

// The value indicating whether to create empty xml tags for trailing separators.
func (o X12ProcessingSettingsResponseOutput) CreateEmptyXmlTagsForTrailingSeparators() pulumi.BoolOutput {
	return o.ApplyT(func(v X12ProcessingSettingsResponse) bool { return v.CreateEmptyXmlTagsForTrailingSeparators }).(pulumi.BoolOutput)
}

// The value indicating whether to mask security information.
func (o X12ProcessingSettingsResponseOutput) MaskSecurityInfo() pulumi.BoolOutput {
	return o.ApplyT(func(v X12ProcessingSettingsResponse) bool { return v.MaskSecurityInfo }).(pulumi.BoolOutput)
}

// The value indicating whether to preserve interchange.
func (o X12ProcessingSettingsResponseOutput) PreserveInterchange() pulumi.BoolOutput {
	return o.ApplyT(func(v X12ProcessingSettingsResponse) bool { return v.PreserveInterchange }).(pulumi.BoolOutput)
}

// The value indicating whether to suspend interchange on error.
func (o X12ProcessingSettingsResponseOutput) SuspendInterchangeOnError() pulumi.BoolOutput {
	return o.ApplyT(func(v X12ProcessingSettingsResponse) bool { return v.SuspendInterchangeOnError }).(pulumi.BoolOutput)
}

// The value indicating whether to use dot as decimal separator.
func (o X12ProcessingSettingsResponseOutput) UseDotAsDecimalSeparator() pulumi.BoolOutput {
	return o.ApplyT(func(v X12ProcessingSettingsResponse) bool { return v.UseDotAsDecimalSeparator }).(pulumi.BoolOutput)
}

type X12ProcessingSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (X12ProcessingSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**X12ProcessingSettingsResponse)(nil)).Elem()
}

func (o X12ProcessingSettingsResponsePtrOutput) ToX12ProcessingSettingsResponsePtrOutput() X12ProcessingSettingsResponsePtrOutput {
	return o
}

func (o X12ProcessingSettingsResponsePtrOutput) ToX12ProcessingSettingsResponsePtrOutputWithContext(ctx context.Context) X12ProcessingSettingsResponsePtrOutput {
	return o
}

func (o X12ProcessingSettingsResponsePtrOutput) Elem() X12ProcessingSettingsResponseOutput {
	return o.ApplyT(func(v *X12ProcessingSettingsResponse) X12ProcessingSettingsResponse { return *v }).(X12ProcessingSettingsResponseOutput)
}

// The value indicating whether to convert numerical type to implied decimal.
func (o X12ProcessingSettingsResponsePtrOutput) ConvertImpliedDecimal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12ProcessingSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.ConvertImpliedDecimal
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to create empty xml tags for trailing separators.
func (o X12ProcessingSettingsResponsePtrOutput) CreateEmptyXmlTagsForTrailingSeparators() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12ProcessingSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.CreateEmptyXmlTagsForTrailingSeparators
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to mask security information.
func (o X12ProcessingSettingsResponsePtrOutput) MaskSecurityInfo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12ProcessingSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.MaskSecurityInfo
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to preserve interchange.
func (o X12ProcessingSettingsResponsePtrOutput) PreserveInterchange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12ProcessingSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.PreserveInterchange
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to suspend interchange on error.
func (o X12ProcessingSettingsResponsePtrOutput) SuspendInterchangeOnError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12ProcessingSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.SuspendInterchangeOnError
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to use dot as decimal separator.
func (o X12ProcessingSettingsResponsePtrOutput) UseDotAsDecimalSeparator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12ProcessingSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.UseDotAsDecimalSeparator
	}).(pulumi.BoolPtrOutput)
}

// The X12 agreement protocol settings.
type X12ProtocolSettings struct {
	// The X12 acknowledgment settings.
	AcknowledgementSettings X12AcknowledgementSettings `pulumi:"acknowledgementSettings"`
	// The X12 envelope override settings.
	EnvelopeOverrides []X12EnvelopeOverride `pulumi:"envelopeOverrides"`
	// The X12 envelope settings.
	EnvelopeSettings X12EnvelopeSettings `pulumi:"envelopeSettings"`
	// The X12 framing settings.
	FramingSettings X12FramingSettings `pulumi:"framingSettings"`
	// The X12 message filter.
	MessageFilter X12MessageFilter `pulumi:"messageFilter"`
	// The X12 message filter list.
	MessageFilterList []X12MessageIdentifier `pulumi:"messageFilterList"`
	// The X12 processing settings.
	ProcessingSettings X12ProcessingSettings `pulumi:"processingSettings"`
	// The X12 schema references.
	SchemaReferences []X12SchemaReference `pulumi:"schemaReferences"`
	// The X12 security settings.
	SecuritySettings X12SecuritySettings `pulumi:"securitySettings"`
	// The X12 validation override settings.
	ValidationOverrides []X12ValidationOverride `pulumi:"validationOverrides"`
	// The X12 validation settings.
	ValidationSettings X12ValidationSettings `pulumi:"validationSettings"`
	// The X12 delimiter override settings.
	X12DelimiterOverrides []X12DelimiterOverrides `pulumi:"x12DelimiterOverrides"`
}

// X12ProtocolSettingsInput is an input type that accepts X12ProtocolSettingsArgs and X12ProtocolSettingsOutput values.
// You can construct a concrete instance of `X12ProtocolSettingsInput` via:
//
//          X12ProtocolSettingsArgs{...}
type X12ProtocolSettingsInput interface {
	pulumi.Input

	ToX12ProtocolSettingsOutput() X12ProtocolSettingsOutput
	ToX12ProtocolSettingsOutputWithContext(context.Context) X12ProtocolSettingsOutput
}

// The X12 agreement protocol settings.
type X12ProtocolSettingsArgs struct {
	// The X12 acknowledgment settings.
	AcknowledgementSettings X12AcknowledgementSettingsInput `pulumi:"acknowledgementSettings"`
	// The X12 envelope override settings.
	EnvelopeOverrides X12EnvelopeOverrideArrayInput `pulumi:"envelopeOverrides"`
	// The X12 envelope settings.
	EnvelopeSettings X12EnvelopeSettingsInput `pulumi:"envelopeSettings"`
	// The X12 framing settings.
	FramingSettings X12FramingSettingsInput `pulumi:"framingSettings"`
	// The X12 message filter.
	MessageFilter X12MessageFilterInput `pulumi:"messageFilter"`
	// The X12 message filter list.
	MessageFilterList X12MessageIdentifierArrayInput `pulumi:"messageFilterList"`
	// The X12 processing settings.
	ProcessingSettings X12ProcessingSettingsInput `pulumi:"processingSettings"`
	// The X12 schema references.
	SchemaReferences X12SchemaReferenceArrayInput `pulumi:"schemaReferences"`
	// The X12 security settings.
	SecuritySettings X12SecuritySettingsInput `pulumi:"securitySettings"`
	// The X12 validation override settings.
	ValidationOverrides X12ValidationOverrideArrayInput `pulumi:"validationOverrides"`
	// The X12 validation settings.
	ValidationSettings X12ValidationSettingsInput `pulumi:"validationSettings"`
	// The X12 delimiter override settings.
	X12DelimiterOverrides X12DelimiterOverridesArrayInput `pulumi:"x12DelimiterOverrides"`
}

func (X12ProtocolSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X12ProtocolSettings)(nil)).Elem()
}

func (i X12ProtocolSettingsArgs) ToX12ProtocolSettingsOutput() X12ProtocolSettingsOutput {
	return i.ToX12ProtocolSettingsOutputWithContext(context.Background())
}

func (i X12ProtocolSettingsArgs) ToX12ProtocolSettingsOutputWithContext(ctx context.Context) X12ProtocolSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12ProtocolSettingsOutput)
}

func (i X12ProtocolSettingsArgs) ToX12ProtocolSettingsPtrOutput() X12ProtocolSettingsPtrOutput {
	return i.ToX12ProtocolSettingsPtrOutputWithContext(context.Background())
}

func (i X12ProtocolSettingsArgs) ToX12ProtocolSettingsPtrOutputWithContext(ctx context.Context) X12ProtocolSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12ProtocolSettingsOutput).ToX12ProtocolSettingsPtrOutputWithContext(ctx)
}

// X12ProtocolSettingsPtrInput is an input type that accepts X12ProtocolSettingsArgs, X12ProtocolSettingsPtr and X12ProtocolSettingsPtrOutput values.
// You can construct a concrete instance of `X12ProtocolSettingsPtrInput` via:
//
//          X12ProtocolSettingsArgs{...}
//
//  or:
//
//          nil
type X12ProtocolSettingsPtrInput interface {
	pulumi.Input

	ToX12ProtocolSettingsPtrOutput() X12ProtocolSettingsPtrOutput
	ToX12ProtocolSettingsPtrOutputWithContext(context.Context) X12ProtocolSettingsPtrOutput
}

type x12protocolSettingsPtrType X12ProtocolSettingsArgs

func X12ProtocolSettingsPtr(v *X12ProtocolSettingsArgs) X12ProtocolSettingsPtrInput {
	return (*x12protocolSettingsPtrType)(v)
}

func (*x12protocolSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**X12ProtocolSettings)(nil)).Elem()
}

func (i *x12protocolSettingsPtrType) ToX12ProtocolSettingsPtrOutput() X12ProtocolSettingsPtrOutput {
	return i.ToX12ProtocolSettingsPtrOutputWithContext(context.Background())
}

func (i *x12protocolSettingsPtrType) ToX12ProtocolSettingsPtrOutputWithContext(ctx context.Context) X12ProtocolSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12ProtocolSettingsPtrOutput)
}

// The X12 agreement protocol settings.
type X12ProtocolSettingsResponse struct {
	// The X12 acknowledgment settings.
	AcknowledgementSettings X12AcknowledgementSettingsResponse `pulumi:"acknowledgementSettings"`
	// The X12 envelope override settings.
	EnvelopeOverrides []X12EnvelopeOverrideResponse `pulumi:"envelopeOverrides"`
	// The X12 envelope settings.
	EnvelopeSettings X12EnvelopeSettingsResponse `pulumi:"envelopeSettings"`
	// The X12 framing settings.
	FramingSettings X12FramingSettingsResponse `pulumi:"framingSettings"`
	// The X12 message filter.
	MessageFilter X12MessageFilterResponse `pulumi:"messageFilter"`
	// The X12 message filter list.
	MessageFilterList []X12MessageIdentifierResponse `pulumi:"messageFilterList"`
	// The X12 processing settings.
	ProcessingSettings X12ProcessingSettingsResponse `pulumi:"processingSettings"`
	// The X12 schema references.
	SchemaReferences []X12SchemaReferenceResponse `pulumi:"schemaReferences"`
	// The X12 security settings.
	SecuritySettings X12SecuritySettingsResponse `pulumi:"securitySettings"`
	// The X12 validation override settings.
	ValidationOverrides []X12ValidationOverrideResponse `pulumi:"validationOverrides"`
	// The X12 validation settings.
	ValidationSettings X12ValidationSettingsResponse `pulumi:"validationSettings"`
	// The X12 delimiter override settings.
	X12DelimiterOverrides []X12DelimiterOverridesResponse `pulumi:"x12DelimiterOverrides"`
}

// The X12 agreement protocol settings.
type X12ProtocolSettingsResponseOutput struct{ *pulumi.OutputState }

func (X12ProtocolSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X12ProtocolSettingsResponse)(nil)).Elem()
}

func (o X12ProtocolSettingsResponseOutput) ToX12ProtocolSettingsResponseOutput() X12ProtocolSettingsResponseOutput {
	return o
}

func (o X12ProtocolSettingsResponseOutput) ToX12ProtocolSettingsResponseOutputWithContext(ctx context.Context) X12ProtocolSettingsResponseOutput {
	return o
}

func (o X12ProtocolSettingsResponseOutput) ToX12ProtocolSettingsResponsePtrOutput() X12ProtocolSettingsResponsePtrOutput {
	return o.ToX12ProtocolSettingsResponsePtrOutputWithContext(context.Background())
}

func (o X12ProtocolSettingsResponseOutput) ToX12ProtocolSettingsResponsePtrOutputWithContext(ctx context.Context) X12ProtocolSettingsResponsePtrOutput {
	return o.ApplyT(func(v X12ProtocolSettingsResponse) *X12ProtocolSettingsResponse {
		return &v
	}).(X12ProtocolSettingsResponsePtrOutput)
}

// The X12 acknowledgment settings.
func (o X12ProtocolSettingsResponseOutput) AcknowledgementSettings() X12AcknowledgementSettingsResponseOutput {
	return o.ApplyT(func(v X12ProtocolSettingsResponse) X12AcknowledgementSettingsResponse {
		return v.AcknowledgementSettings
	}).(X12AcknowledgementSettingsResponseOutput)
}

// The X12 envelope override settings.
func (o X12ProtocolSettingsResponseOutput) EnvelopeOverrides() X12EnvelopeOverrideResponseArrayOutput {
	return o.ApplyT(func(v X12ProtocolSettingsResponse) []X12EnvelopeOverrideResponse { return v.EnvelopeOverrides }).(X12EnvelopeOverrideResponseArrayOutput)
}

// The X12 envelope settings.
func (o X12ProtocolSettingsResponseOutput) EnvelopeSettings() X12EnvelopeSettingsResponseOutput {
	return o.ApplyT(func(v X12ProtocolSettingsResponse) X12EnvelopeSettingsResponse { return v.EnvelopeSettings }).(X12EnvelopeSettingsResponseOutput)
}

// The X12 framing settings.
func (o X12ProtocolSettingsResponseOutput) FramingSettings() X12FramingSettingsResponseOutput {
	return o.ApplyT(func(v X12ProtocolSettingsResponse) X12FramingSettingsResponse { return v.FramingSettings }).(X12FramingSettingsResponseOutput)
}

// The X12 message filter.
func (o X12ProtocolSettingsResponseOutput) MessageFilter() X12MessageFilterResponseOutput {
	return o.ApplyT(func(v X12ProtocolSettingsResponse) X12MessageFilterResponse { return v.MessageFilter }).(X12MessageFilterResponseOutput)
}

// The X12 message filter list.
func (o X12ProtocolSettingsResponseOutput) MessageFilterList() X12MessageIdentifierResponseArrayOutput {
	return o.ApplyT(func(v X12ProtocolSettingsResponse) []X12MessageIdentifierResponse { return v.MessageFilterList }).(X12MessageIdentifierResponseArrayOutput)
}

// The X12 processing settings.
func (o X12ProtocolSettingsResponseOutput) ProcessingSettings() X12ProcessingSettingsResponseOutput {
	return o.ApplyT(func(v X12ProtocolSettingsResponse) X12ProcessingSettingsResponse { return v.ProcessingSettings }).(X12ProcessingSettingsResponseOutput)
}

// The X12 schema references.
func (o X12ProtocolSettingsResponseOutput) SchemaReferences() X12SchemaReferenceResponseArrayOutput {
	return o.ApplyT(func(v X12ProtocolSettingsResponse) []X12SchemaReferenceResponse { return v.SchemaReferences }).(X12SchemaReferenceResponseArrayOutput)
}

// The X12 security settings.
func (o X12ProtocolSettingsResponseOutput) SecuritySettings() X12SecuritySettingsResponseOutput {
	return o.ApplyT(func(v X12ProtocolSettingsResponse) X12SecuritySettingsResponse { return v.SecuritySettings }).(X12SecuritySettingsResponseOutput)
}

// The X12 validation override settings.
func (o X12ProtocolSettingsResponseOutput) ValidationOverrides() X12ValidationOverrideResponseArrayOutput {
	return o.ApplyT(func(v X12ProtocolSettingsResponse) []X12ValidationOverrideResponse { return v.ValidationOverrides }).(X12ValidationOverrideResponseArrayOutput)
}

// The X12 validation settings.
func (o X12ProtocolSettingsResponseOutput) ValidationSettings() X12ValidationSettingsResponseOutput {
	return o.ApplyT(func(v X12ProtocolSettingsResponse) X12ValidationSettingsResponse { return v.ValidationSettings }).(X12ValidationSettingsResponseOutput)
}

// The X12 delimiter override settings.
func (o X12ProtocolSettingsResponseOutput) X12DelimiterOverrides() X12DelimiterOverridesResponseArrayOutput {
	return o.ApplyT(func(v X12ProtocolSettingsResponse) []X12DelimiterOverridesResponse { return v.X12DelimiterOverrides }).(X12DelimiterOverridesResponseArrayOutput)
}

type X12ProtocolSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (X12ProtocolSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**X12ProtocolSettingsResponse)(nil)).Elem()
}

func (o X12ProtocolSettingsResponsePtrOutput) ToX12ProtocolSettingsResponsePtrOutput() X12ProtocolSettingsResponsePtrOutput {
	return o
}

func (o X12ProtocolSettingsResponsePtrOutput) ToX12ProtocolSettingsResponsePtrOutputWithContext(ctx context.Context) X12ProtocolSettingsResponsePtrOutput {
	return o
}

func (o X12ProtocolSettingsResponsePtrOutput) Elem() X12ProtocolSettingsResponseOutput {
	return o.ApplyT(func(v *X12ProtocolSettingsResponse) X12ProtocolSettingsResponse { return *v }).(X12ProtocolSettingsResponseOutput)
}

// The X12 acknowledgment settings.
func (o X12ProtocolSettingsResponsePtrOutput) AcknowledgementSettings() X12AcknowledgementSettingsResponsePtrOutput {
	return o.ApplyT(func(v *X12ProtocolSettingsResponse) *X12AcknowledgementSettingsResponse {
		if v == nil {
			return nil
		}
		return &v.AcknowledgementSettings
	}).(X12AcknowledgementSettingsResponsePtrOutput)
}

// The X12 envelope override settings.
func (o X12ProtocolSettingsResponsePtrOutput) EnvelopeOverrides() X12EnvelopeOverrideResponseArrayOutput {
	return o.ApplyT(func(v *X12ProtocolSettingsResponse) []X12EnvelopeOverrideResponse {
		if v == nil {
			return nil
		}
		return v.EnvelopeOverrides
	}).(X12EnvelopeOverrideResponseArrayOutput)
}

// The X12 envelope settings.
func (o X12ProtocolSettingsResponsePtrOutput) EnvelopeSettings() X12EnvelopeSettingsResponsePtrOutput {
	return o.ApplyT(func(v *X12ProtocolSettingsResponse) *X12EnvelopeSettingsResponse {
		if v == nil {
			return nil
		}
		return &v.EnvelopeSettings
	}).(X12EnvelopeSettingsResponsePtrOutput)
}

// The X12 framing settings.
func (o X12ProtocolSettingsResponsePtrOutput) FramingSettings() X12FramingSettingsResponsePtrOutput {
	return o.ApplyT(func(v *X12ProtocolSettingsResponse) *X12FramingSettingsResponse {
		if v == nil {
			return nil
		}
		return &v.FramingSettings
	}).(X12FramingSettingsResponsePtrOutput)
}

// The X12 message filter.
func (o X12ProtocolSettingsResponsePtrOutput) MessageFilter() X12MessageFilterResponsePtrOutput {
	return o.ApplyT(func(v *X12ProtocolSettingsResponse) *X12MessageFilterResponse {
		if v == nil {
			return nil
		}
		return &v.MessageFilter
	}).(X12MessageFilterResponsePtrOutput)
}

// The X12 message filter list.
func (o X12ProtocolSettingsResponsePtrOutput) MessageFilterList() X12MessageIdentifierResponseArrayOutput {
	return o.ApplyT(func(v *X12ProtocolSettingsResponse) []X12MessageIdentifierResponse {
		if v == nil {
			return nil
		}
		return v.MessageFilterList
	}).(X12MessageIdentifierResponseArrayOutput)
}

// The X12 processing settings.
func (o X12ProtocolSettingsResponsePtrOutput) ProcessingSettings() X12ProcessingSettingsResponsePtrOutput {
	return o.ApplyT(func(v *X12ProtocolSettingsResponse) *X12ProcessingSettingsResponse {
		if v == nil {
			return nil
		}
		return &v.ProcessingSettings
	}).(X12ProcessingSettingsResponsePtrOutput)
}

// The X12 schema references.
func (o X12ProtocolSettingsResponsePtrOutput) SchemaReferences() X12SchemaReferenceResponseArrayOutput {
	return o.ApplyT(func(v *X12ProtocolSettingsResponse) []X12SchemaReferenceResponse {
		if v == nil {
			return nil
		}
		return v.SchemaReferences
	}).(X12SchemaReferenceResponseArrayOutput)
}

// The X12 security settings.
func (o X12ProtocolSettingsResponsePtrOutput) SecuritySettings() X12SecuritySettingsResponsePtrOutput {
	return o.ApplyT(func(v *X12ProtocolSettingsResponse) *X12SecuritySettingsResponse {
		if v == nil {
			return nil
		}
		return &v.SecuritySettings
	}).(X12SecuritySettingsResponsePtrOutput)
}

// The X12 validation override settings.
func (o X12ProtocolSettingsResponsePtrOutput) ValidationOverrides() X12ValidationOverrideResponseArrayOutput {
	return o.ApplyT(func(v *X12ProtocolSettingsResponse) []X12ValidationOverrideResponse {
		if v == nil {
			return nil
		}
		return v.ValidationOverrides
	}).(X12ValidationOverrideResponseArrayOutput)
}

// The X12 validation settings.
func (o X12ProtocolSettingsResponsePtrOutput) ValidationSettings() X12ValidationSettingsResponsePtrOutput {
	return o.ApplyT(func(v *X12ProtocolSettingsResponse) *X12ValidationSettingsResponse {
		if v == nil {
			return nil
		}
		return &v.ValidationSettings
	}).(X12ValidationSettingsResponsePtrOutput)
}

// The X12 delimiter override settings.
func (o X12ProtocolSettingsResponsePtrOutput) X12DelimiterOverrides() X12DelimiterOverridesResponseArrayOutput {
	return o.ApplyT(func(v *X12ProtocolSettingsResponse) []X12DelimiterOverridesResponse {
		if v == nil {
			return nil
		}
		return v.X12DelimiterOverrides
	}).(X12DelimiterOverridesResponseArrayOutput)
}

// The X12 schema reference.
type X12SchemaReference struct {
	// The message id.
	MessageId string `pulumi:"messageId"`
	// The schema name.
	SchemaName string `pulumi:"schemaName"`
	// The schema version.
	SchemaVersion string `pulumi:"schemaVersion"`
	// The sender application id.
	SenderApplicationId *string `pulumi:"senderApplicationId"`
}

// X12SchemaReferenceInput is an input type that accepts X12SchemaReferenceArgs and X12SchemaReferenceOutput values.
// You can construct a concrete instance of `X12SchemaReferenceInput` via:
//
//          X12SchemaReferenceArgs{...}
type X12SchemaReferenceInput interface {
	pulumi.Input

	ToX12SchemaReferenceOutput() X12SchemaReferenceOutput
	ToX12SchemaReferenceOutputWithContext(context.Context) X12SchemaReferenceOutput
}

// The X12 schema reference.
type X12SchemaReferenceArgs struct {
	// The message id.
	MessageId pulumi.StringInput `pulumi:"messageId"`
	// The schema name.
	SchemaName pulumi.StringInput `pulumi:"schemaName"`
	// The schema version.
	SchemaVersion pulumi.StringInput `pulumi:"schemaVersion"`
	// The sender application id.
	SenderApplicationId pulumi.StringPtrInput `pulumi:"senderApplicationId"`
}

func (X12SchemaReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X12SchemaReference)(nil)).Elem()
}

func (i X12SchemaReferenceArgs) ToX12SchemaReferenceOutput() X12SchemaReferenceOutput {
	return i.ToX12SchemaReferenceOutputWithContext(context.Background())
}

func (i X12SchemaReferenceArgs) ToX12SchemaReferenceOutputWithContext(ctx context.Context) X12SchemaReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12SchemaReferenceOutput)
}

// X12SchemaReferenceArrayInput is an input type that accepts X12SchemaReferenceArray and X12SchemaReferenceArrayOutput values.
// You can construct a concrete instance of `X12SchemaReferenceArrayInput` via:
//
//          X12SchemaReferenceArray{ X12SchemaReferenceArgs{...} }
type X12SchemaReferenceArrayInput interface {
	pulumi.Input

	ToX12SchemaReferenceArrayOutput() X12SchemaReferenceArrayOutput
	ToX12SchemaReferenceArrayOutputWithContext(context.Context) X12SchemaReferenceArrayOutput
}

type X12SchemaReferenceArray []X12SchemaReferenceInput

func (X12SchemaReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X12SchemaReference)(nil)).Elem()
}

func (i X12SchemaReferenceArray) ToX12SchemaReferenceArrayOutput() X12SchemaReferenceArrayOutput {
	return i.ToX12SchemaReferenceArrayOutputWithContext(context.Background())
}

func (i X12SchemaReferenceArray) ToX12SchemaReferenceArrayOutputWithContext(ctx context.Context) X12SchemaReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12SchemaReferenceArrayOutput)
}

// The X12 schema reference.
type X12SchemaReferenceResponse struct {
	// The message id.
	MessageId string `pulumi:"messageId"`
	// The schema name.
	SchemaName string `pulumi:"schemaName"`
	// The schema version.
	SchemaVersion string `pulumi:"schemaVersion"`
	// The sender application id.
	SenderApplicationId *string `pulumi:"senderApplicationId"`
}

// The X12 schema reference.
type X12SchemaReferenceResponseOutput struct{ *pulumi.OutputState }

func (X12SchemaReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X12SchemaReferenceResponse)(nil)).Elem()
}

func (o X12SchemaReferenceResponseOutput) ToX12SchemaReferenceResponseOutput() X12SchemaReferenceResponseOutput {
	return o
}

func (o X12SchemaReferenceResponseOutput) ToX12SchemaReferenceResponseOutputWithContext(ctx context.Context) X12SchemaReferenceResponseOutput {
	return o
}

// The message id.
func (o X12SchemaReferenceResponseOutput) MessageId() pulumi.StringOutput {
	return o.ApplyT(func(v X12SchemaReferenceResponse) string { return v.MessageId }).(pulumi.StringOutput)
}

// The schema name.
func (o X12SchemaReferenceResponseOutput) SchemaName() pulumi.StringOutput {
	return o.ApplyT(func(v X12SchemaReferenceResponse) string { return v.SchemaName }).(pulumi.StringOutput)
}

// The schema version.
func (o X12SchemaReferenceResponseOutput) SchemaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v X12SchemaReferenceResponse) string { return v.SchemaVersion }).(pulumi.StringOutput)
}

// The sender application id.
func (o X12SchemaReferenceResponseOutput) SenderApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X12SchemaReferenceResponse) *string { return v.SenderApplicationId }).(pulumi.StringPtrOutput)
}

type X12SchemaReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (X12SchemaReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X12SchemaReferenceResponse)(nil)).Elem()
}

func (o X12SchemaReferenceResponseArrayOutput) ToX12SchemaReferenceResponseArrayOutput() X12SchemaReferenceResponseArrayOutput {
	return o
}

func (o X12SchemaReferenceResponseArrayOutput) ToX12SchemaReferenceResponseArrayOutputWithContext(ctx context.Context) X12SchemaReferenceResponseArrayOutput {
	return o
}

func (o X12SchemaReferenceResponseArrayOutput) Index(i pulumi.IntInput) X12SchemaReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) X12SchemaReferenceResponse {
		return vs[0].([]X12SchemaReferenceResponse)[vs[1].(int)]
	}).(X12SchemaReferenceResponseOutput)
}

// The X12 agreement security settings.
type X12SecuritySettings struct {
	// The authorization qualifier.
	AuthorizationQualifier string `pulumi:"authorizationQualifier"`
	// The authorization value.
	AuthorizationValue *string `pulumi:"authorizationValue"`
	// The password value.
	PasswordValue *string `pulumi:"passwordValue"`
	// The security qualifier.
	SecurityQualifier string `pulumi:"securityQualifier"`
}

// X12SecuritySettingsInput is an input type that accepts X12SecuritySettingsArgs and X12SecuritySettingsOutput values.
// You can construct a concrete instance of `X12SecuritySettingsInput` via:
//
//          X12SecuritySettingsArgs{...}
type X12SecuritySettingsInput interface {
	pulumi.Input

	ToX12SecuritySettingsOutput() X12SecuritySettingsOutput
	ToX12SecuritySettingsOutputWithContext(context.Context) X12SecuritySettingsOutput
}

// The X12 agreement security settings.
type X12SecuritySettingsArgs struct {
	// The authorization qualifier.
	AuthorizationQualifier pulumi.StringInput `pulumi:"authorizationQualifier"`
	// The authorization value.
	AuthorizationValue pulumi.StringPtrInput `pulumi:"authorizationValue"`
	// The password value.
	PasswordValue pulumi.StringPtrInput `pulumi:"passwordValue"`
	// The security qualifier.
	SecurityQualifier pulumi.StringInput `pulumi:"securityQualifier"`
}

func (X12SecuritySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X12SecuritySettings)(nil)).Elem()
}

func (i X12SecuritySettingsArgs) ToX12SecuritySettingsOutput() X12SecuritySettingsOutput {
	return i.ToX12SecuritySettingsOutputWithContext(context.Background())
}

func (i X12SecuritySettingsArgs) ToX12SecuritySettingsOutputWithContext(ctx context.Context) X12SecuritySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12SecuritySettingsOutput)
}

func (i X12SecuritySettingsArgs) ToX12SecuritySettingsPtrOutput() X12SecuritySettingsPtrOutput {
	return i.ToX12SecuritySettingsPtrOutputWithContext(context.Background())
}

func (i X12SecuritySettingsArgs) ToX12SecuritySettingsPtrOutputWithContext(ctx context.Context) X12SecuritySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12SecuritySettingsOutput).ToX12SecuritySettingsPtrOutputWithContext(ctx)
}

// X12SecuritySettingsPtrInput is an input type that accepts X12SecuritySettingsArgs, X12SecuritySettingsPtr and X12SecuritySettingsPtrOutput values.
// You can construct a concrete instance of `X12SecuritySettingsPtrInput` via:
//
//          X12SecuritySettingsArgs{...}
//
//  or:
//
//          nil
type X12SecuritySettingsPtrInput interface {
	pulumi.Input

	ToX12SecuritySettingsPtrOutput() X12SecuritySettingsPtrOutput
	ToX12SecuritySettingsPtrOutputWithContext(context.Context) X12SecuritySettingsPtrOutput
}

type x12securitySettingsPtrType X12SecuritySettingsArgs

func X12SecuritySettingsPtr(v *X12SecuritySettingsArgs) X12SecuritySettingsPtrInput {
	return (*x12securitySettingsPtrType)(v)
}

func (*x12securitySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**X12SecuritySettings)(nil)).Elem()
}

func (i *x12securitySettingsPtrType) ToX12SecuritySettingsPtrOutput() X12SecuritySettingsPtrOutput {
	return i.ToX12SecuritySettingsPtrOutputWithContext(context.Background())
}

func (i *x12securitySettingsPtrType) ToX12SecuritySettingsPtrOutputWithContext(ctx context.Context) X12SecuritySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12SecuritySettingsPtrOutput)
}

// The X12 agreement security settings.
type X12SecuritySettingsResponse struct {
	// The authorization qualifier.
	AuthorizationQualifier string `pulumi:"authorizationQualifier"`
	// The authorization value.
	AuthorizationValue *string `pulumi:"authorizationValue"`
	// The password value.
	PasswordValue *string `pulumi:"passwordValue"`
	// The security qualifier.
	SecurityQualifier string `pulumi:"securityQualifier"`
}

// The X12 agreement security settings.
type X12SecuritySettingsResponseOutput struct{ *pulumi.OutputState }

func (X12SecuritySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X12SecuritySettingsResponse)(nil)).Elem()
}

func (o X12SecuritySettingsResponseOutput) ToX12SecuritySettingsResponseOutput() X12SecuritySettingsResponseOutput {
	return o
}

func (o X12SecuritySettingsResponseOutput) ToX12SecuritySettingsResponseOutputWithContext(ctx context.Context) X12SecuritySettingsResponseOutput {
	return o
}

func (o X12SecuritySettingsResponseOutput) ToX12SecuritySettingsResponsePtrOutput() X12SecuritySettingsResponsePtrOutput {
	return o.ToX12SecuritySettingsResponsePtrOutputWithContext(context.Background())
}

func (o X12SecuritySettingsResponseOutput) ToX12SecuritySettingsResponsePtrOutputWithContext(ctx context.Context) X12SecuritySettingsResponsePtrOutput {
	return o.ApplyT(func(v X12SecuritySettingsResponse) *X12SecuritySettingsResponse {
		return &v
	}).(X12SecuritySettingsResponsePtrOutput)
}

// The authorization qualifier.
func (o X12SecuritySettingsResponseOutput) AuthorizationQualifier() pulumi.StringOutput {
	return o.ApplyT(func(v X12SecuritySettingsResponse) string { return v.AuthorizationQualifier }).(pulumi.StringOutput)
}

// The authorization value.
func (o X12SecuritySettingsResponseOutput) AuthorizationValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X12SecuritySettingsResponse) *string { return v.AuthorizationValue }).(pulumi.StringPtrOutput)
}

// The password value.
func (o X12SecuritySettingsResponseOutput) PasswordValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X12SecuritySettingsResponse) *string { return v.PasswordValue }).(pulumi.StringPtrOutput)
}

// The security qualifier.
func (o X12SecuritySettingsResponseOutput) SecurityQualifier() pulumi.StringOutput {
	return o.ApplyT(func(v X12SecuritySettingsResponse) string { return v.SecurityQualifier }).(pulumi.StringOutput)
}

type X12SecuritySettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (X12SecuritySettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**X12SecuritySettingsResponse)(nil)).Elem()
}

func (o X12SecuritySettingsResponsePtrOutput) ToX12SecuritySettingsResponsePtrOutput() X12SecuritySettingsResponsePtrOutput {
	return o
}

func (o X12SecuritySettingsResponsePtrOutput) ToX12SecuritySettingsResponsePtrOutputWithContext(ctx context.Context) X12SecuritySettingsResponsePtrOutput {
	return o
}

func (o X12SecuritySettingsResponsePtrOutput) Elem() X12SecuritySettingsResponseOutput {
	return o.ApplyT(func(v *X12SecuritySettingsResponse) X12SecuritySettingsResponse { return *v }).(X12SecuritySettingsResponseOutput)
}

// The authorization qualifier.
func (o X12SecuritySettingsResponsePtrOutput) AuthorizationQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12SecuritySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AuthorizationQualifier
	}).(pulumi.StringPtrOutput)
}

// The authorization value.
func (o X12SecuritySettingsResponsePtrOutput) AuthorizationValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12SecuritySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationValue
	}).(pulumi.StringPtrOutput)
}

// The password value.
func (o X12SecuritySettingsResponsePtrOutput) PasswordValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12SecuritySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PasswordValue
	}).(pulumi.StringPtrOutput)
}

// The security qualifier.
func (o X12SecuritySettingsResponsePtrOutput) SecurityQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12SecuritySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecurityQualifier
	}).(pulumi.StringPtrOutput)
}

// The X12 validation override settings.
type X12ValidationOverride struct {
	// The value indicating whether to allow leading and trailing spaces and zeroes.
	AllowLeadingAndTrailingSpacesAndZeroes bool `pulumi:"allowLeadingAndTrailingSpacesAndZeroes"`
	// The message id on which the validation settings has to be applied.
	MessageId string `pulumi:"messageId"`
	// The trailing separator policy.
	TrailingSeparatorPolicy string `pulumi:"trailingSeparatorPolicy"`
	// The value indicating whether to trim leading and trailing spaces and zeroes.
	TrimLeadingAndTrailingSpacesAndZeroes bool `pulumi:"trimLeadingAndTrailingSpacesAndZeroes"`
	// The value indicating whether to validate character Set.
	ValidateCharacterSet bool `pulumi:"validateCharacterSet"`
	// The value indicating whether to validate EDI types.
	ValidateEDITypes bool `pulumi:"validateEDITypes"`
	// The value indicating whether to validate XSD types.
	ValidateXSDTypes bool `pulumi:"validateXSDTypes"`
}

// X12ValidationOverrideInput is an input type that accepts X12ValidationOverrideArgs and X12ValidationOverrideOutput values.
// You can construct a concrete instance of `X12ValidationOverrideInput` via:
//
//          X12ValidationOverrideArgs{...}
type X12ValidationOverrideInput interface {
	pulumi.Input

	ToX12ValidationOverrideOutput() X12ValidationOverrideOutput
	ToX12ValidationOverrideOutputWithContext(context.Context) X12ValidationOverrideOutput
}

// The X12 validation override settings.
type X12ValidationOverrideArgs struct {
	// The value indicating whether to allow leading and trailing spaces and zeroes.
	AllowLeadingAndTrailingSpacesAndZeroes pulumi.BoolInput `pulumi:"allowLeadingAndTrailingSpacesAndZeroes"`
	// The message id on which the validation settings has to be applied.
	MessageId pulumi.StringInput `pulumi:"messageId"`
	// The trailing separator policy.
	TrailingSeparatorPolicy pulumi.StringInput `pulumi:"trailingSeparatorPolicy"`
	// The value indicating whether to trim leading and trailing spaces and zeroes.
	TrimLeadingAndTrailingSpacesAndZeroes pulumi.BoolInput `pulumi:"trimLeadingAndTrailingSpacesAndZeroes"`
	// The value indicating whether to validate character Set.
	ValidateCharacterSet pulumi.BoolInput `pulumi:"validateCharacterSet"`
	// The value indicating whether to validate EDI types.
	ValidateEDITypes pulumi.BoolInput `pulumi:"validateEDITypes"`
	// The value indicating whether to validate XSD types.
	ValidateXSDTypes pulumi.BoolInput `pulumi:"validateXSDTypes"`
}

func (X12ValidationOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X12ValidationOverride)(nil)).Elem()
}

func (i X12ValidationOverrideArgs) ToX12ValidationOverrideOutput() X12ValidationOverrideOutput {
	return i.ToX12ValidationOverrideOutputWithContext(context.Background())
}

func (i X12ValidationOverrideArgs) ToX12ValidationOverrideOutputWithContext(ctx context.Context) X12ValidationOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12ValidationOverrideOutput)
}

// X12ValidationOverrideArrayInput is an input type that accepts X12ValidationOverrideArray and X12ValidationOverrideArrayOutput values.
// You can construct a concrete instance of `X12ValidationOverrideArrayInput` via:
//
//          X12ValidationOverrideArray{ X12ValidationOverrideArgs{...} }
type X12ValidationOverrideArrayInput interface {
	pulumi.Input

	ToX12ValidationOverrideArrayOutput() X12ValidationOverrideArrayOutput
	ToX12ValidationOverrideArrayOutputWithContext(context.Context) X12ValidationOverrideArrayOutput
}

type X12ValidationOverrideArray []X12ValidationOverrideInput

func (X12ValidationOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X12ValidationOverride)(nil)).Elem()
}

func (i X12ValidationOverrideArray) ToX12ValidationOverrideArrayOutput() X12ValidationOverrideArrayOutput {
	return i.ToX12ValidationOverrideArrayOutputWithContext(context.Background())
}

func (i X12ValidationOverrideArray) ToX12ValidationOverrideArrayOutputWithContext(ctx context.Context) X12ValidationOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12ValidationOverrideArrayOutput)
}

// The X12 validation override settings.
type X12ValidationOverrideResponse struct {
	// The value indicating whether to allow leading and trailing spaces and zeroes.
	AllowLeadingAndTrailingSpacesAndZeroes bool `pulumi:"allowLeadingAndTrailingSpacesAndZeroes"`
	// The message id on which the validation settings has to be applied.
	MessageId string `pulumi:"messageId"`
	// The trailing separator policy.
	TrailingSeparatorPolicy string `pulumi:"trailingSeparatorPolicy"`
	// The value indicating whether to trim leading and trailing spaces and zeroes.
	TrimLeadingAndTrailingSpacesAndZeroes bool `pulumi:"trimLeadingAndTrailingSpacesAndZeroes"`
	// The value indicating whether to validate character Set.
	ValidateCharacterSet bool `pulumi:"validateCharacterSet"`
	// The value indicating whether to validate EDI types.
	ValidateEDITypes bool `pulumi:"validateEDITypes"`
	// The value indicating whether to validate XSD types.
	ValidateXSDTypes bool `pulumi:"validateXSDTypes"`
}

// The X12 validation override settings.
type X12ValidationOverrideResponseOutput struct{ *pulumi.OutputState }

func (X12ValidationOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X12ValidationOverrideResponse)(nil)).Elem()
}

func (o X12ValidationOverrideResponseOutput) ToX12ValidationOverrideResponseOutput() X12ValidationOverrideResponseOutput {
	return o
}

func (o X12ValidationOverrideResponseOutput) ToX12ValidationOverrideResponseOutputWithContext(ctx context.Context) X12ValidationOverrideResponseOutput {
	return o
}

// The value indicating whether to allow leading and trailing spaces and zeroes.
func (o X12ValidationOverrideResponseOutput) AllowLeadingAndTrailingSpacesAndZeroes() pulumi.BoolOutput {
	return o.ApplyT(func(v X12ValidationOverrideResponse) bool { return v.AllowLeadingAndTrailingSpacesAndZeroes }).(pulumi.BoolOutput)
}

// The message id on which the validation settings has to be applied.
func (o X12ValidationOverrideResponseOutput) MessageId() pulumi.StringOutput {
	return o.ApplyT(func(v X12ValidationOverrideResponse) string { return v.MessageId }).(pulumi.StringOutput)
}

// The trailing separator policy.
func (o X12ValidationOverrideResponseOutput) TrailingSeparatorPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v X12ValidationOverrideResponse) string { return v.TrailingSeparatorPolicy }).(pulumi.StringOutput)
}

// The value indicating whether to trim leading and trailing spaces and zeroes.
func (o X12ValidationOverrideResponseOutput) TrimLeadingAndTrailingSpacesAndZeroes() pulumi.BoolOutput {
	return o.ApplyT(func(v X12ValidationOverrideResponse) bool { return v.TrimLeadingAndTrailingSpacesAndZeroes }).(pulumi.BoolOutput)
}

// The value indicating whether to validate character Set.
func (o X12ValidationOverrideResponseOutput) ValidateCharacterSet() pulumi.BoolOutput {
	return o.ApplyT(func(v X12ValidationOverrideResponse) bool { return v.ValidateCharacterSet }).(pulumi.BoolOutput)
}

// The value indicating whether to validate EDI types.
func (o X12ValidationOverrideResponseOutput) ValidateEDITypes() pulumi.BoolOutput {
	return o.ApplyT(func(v X12ValidationOverrideResponse) bool { return v.ValidateEDITypes }).(pulumi.BoolOutput)
}

// The value indicating whether to validate XSD types.
func (o X12ValidationOverrideResponseOutput) ValidateXSDTypes() pulumi.BoolOutput {
	return o.ApplyT(func(v X12ValidationOverrideResponse) bool { return v.ValidateXSDTypes }).(pulumi.BoolOutput)
}

type X12ValidationOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (X12ValidationOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X12ValidationOverrideResponse)(nil)).Elem()
}

func (o X12ValidationOverrideResponseArrayOutput) ToX12ValidationOverrideResponseArrayOutput() X12ValidationOverrideResponseArrayOutput {
	return o
}

func (o X12ValidationOverrideResponseArrayOutput) ToX12ValidationOverrideResponseArrayOutputWithContext(ctx context.Context) X12ValidationOverrideResponseArrayOutput {
	return o
}

func (o X12ValidationOverrideResponseArrayOutput) Index(i pulumi.IntInput) X12ValidationOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) X12ValidationOverrideResponse {
		return vs[0].([]X12ValidationOverrideResponse)[vs[1].(int)]
	}).(X12ValidationOverrideResponseOutput)
}

// The X12 agreement validation settings.
type X12ValidationSettings struct {
	// The value indicating whether to allow leading and trailing spaces and zeroes.
	AllowLeadingAndTrailingSpacesAndZeroes bool `pulumi:"allowLeadingAndTrailingSpacesAndZeroes"`
	// The value indicating whether to check for duplicate group control number.
	CheckDuplicateGroupControlNumber bool `pulumi:"checkDuplicateGroupControlNumber"`
	// The value indicating whether to check for duplicate interchange control number.
	CheckDuplicateInterchangeControlNumber bool `pulumi:"checkDuplicateInterchangeControlNumber"`
	// The value indicating whether to check for duplicate transaction set control number.
	CheckDuplicateTransactionSetControlNumber bool `pulumi:"checkDuplicateTransactionSetControlNumber"`
	// The validity period of interchange control number.
	InterchangeControlNumberValidityDays int `pulumi:"interchangeControlNumberValidityDays"`
	// The trailing separator policy.
	TrailingSeparatorPolicy string `pulumi:"trailingSeparatorPolicy"`
	// The value indicating whether to trim leading and trailing spaces and zeroes.
	TrimLeadingAndTrailingSpacesAndZeroes bool `pulumi:"trimLeadingAndTrailingSpacesAndZeroes"`
	// The value indicating whether to validate character set in the message.
	ValidateCharacterSet bool `pulumi:"validateCharacterSet"`
	// The value indicating whether to Whether to validate EDI types.
	ValidateEDITypes bool `pulumi:"validateEDITypes"`
	// The value indicating whether to Whether to validate XSD types.
	ValidateXSDTypes bool `pulumi:"validateXSDTypes"`
}

// X12ValidationSettingsInput is an input type that accepts X12ValidationSettingsArgs and X12ValidationSettingsOutput values.
// You can construct a concrete instance of `X12ValidationSettingsInput` via:
//
//          X12ValidationSettingsArgs{...}
type X12ValidationSettingsInput interface {
	pulumi.Input

	ToX12ValidationSettingsOutput() X12ValidationSettingsOutput
	ToX12ValidationSettingsOutputWithContext(context.Context) X12ValidationSettingsOutput
}

// The X12 agreement validation settings.
type X12ValidationSettingsArgs struct {
	// The value indicating whether to allow leading and trailing spaces and zeroes.
	AllowLeadingAndTrailingSpacesAndZeroes pulumi.BoolInput `pulumi:"allowLeadingAndTrailingSpacesAndZeroes"`
	// The value indicating whether to check for duplicate group control number.
	CheckDuplicateGroupControlNumber pulumi.BoolInput `pulumi:"checkDuplicateGroupControlNumber"`
	// The value indicating whether to check for duplicate interchange control number.
	CheckDuplicateInterchangeControlNumber pulumi.BoolInput `pulumi:"checkDuplicateInterchangeControlNumber"`
	// The value indicating whether to check for duplicate transaction set control number.
	CheckDuplicateTransactionSetControlNumber pulumi.BoolInput `pulumi:"checkDuplicateTransactionSetControlNumber"`
	// The validity period of interchange control number.
	InterchangeControlNumberValidityDays pulumi.IntInput `pulumi:"interchangeControlNumberValidityDays"`
	// The trailing separator policy.
	TrailingSeparatorPolicy pulumi.StringInput `pulumi:"trailingSeparatorPolicy"`
	// The value indicating whether to trim leading and trailing spaces and zeroes.
	TrimLeadingAndTrailingSpacesAndZeroes pulumi.BoolInput `pulumi:"trimLeadingAndTrailingSpacesAndZeroes"`
	// The value indicating whether to validate character set in the message.
	ValidateCharacterSet pulumi.BoolInput `pulumi:"validateCharacterSet"`
	// The value indicating whether to Whether to validate EDI types.
	ValidateEDITypes pulumi.BoolInput `pulumi:"validateEDITypes"`
	// The value indicating whether to Whether to validate XSD types.
	ValidateXSDTypes pulumi.BoolInput `pulumi:"validateXSDTypes"`
}

func (X12ValidationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X12ValidationSettings)(nil)).Elem()
}

func (i X12ValidationSettingsArgs) ToX12ValidationSettingsOutput() X12ValidationSettingsOutput {
	return i.ToX12ValidationSettingsOutputWithContext(context.Background())
}

func (i X12ValidationSettingsArgs) ToX12ValidationSettingsOutputWithContext(ctx context.Context) X12ValidationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12ValidationSettingsOutput)
}

func (i X12ValidationSettingsArgs) ToX12ValidationSettingsPtrOutput() X12ValidationSettingsPtrOutput {
	return i.ToX12ValidationSettingsPtrOutputWithContext(context.Background())
}

func (i X12ValidationSettingsArgs) ToX12ValidationSettingsPtrOutputWithContext(ctx context.Context) X12ValidationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12ValidationSettingsOutput).ToX12ValidationSettingsPtrOutputWithContext(ctx)
}

// X12ValidationSettingsPtrInput is an input type that accepts X12ValidationSettingsArgs, X12ValidationSettingsPtr and X12ValidationSettingsPtrOutput values.
// You can construct a concrete instance of `X12ValidationSettingsPtrInput` via:
//
//          X12ValidationSettingsArgs{...}
//
//  or:
//
//          nil
type X12ValidationSettingsPtrInput interface {
	pulumi.Input

	ToX12ValidationSettingsPtrOutput() X12ValidationSettingsPtrOutput
	ToX12ValidationSettingsPtrOutputWithContext(context.Context) X12ValidationSettingsPtrOutput
}

type x12validationSettingsPtrType X12ValidationSettingsArgs

func X12ValidationSettingsPtr(v *X12ValidationSettingsArgs) X12ValidationSettingsPtrInput {
	return (*x12validationSettingsPtrType)(v)
}

func (*x12validationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**X12ValidationSettings)(nil)).Elem()
}

func (i *x12validationSettingsPtrType) ToX12ValidationSettingsPtrOutput() X12ValidationSettingsPtrOutput {
	return i.ToX12ValidationSettingsPtrOutputWithContext(context.Background())
}

func (i *x12validationSettingsPtrType) ToX12ValidationSettingsPtrOutputWithContext(ctx context.Context) X12ValidationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X12ValidationSettingsPtrOutput)
}

// The X12 agreement validation settings.
type X12ValidationSettingsResponse struct {
	// The value indicating whether to allow leading and trailing spaces and zeroes.
	AllowLeadingAndTrailingSpacesAndZeroes bool `pulumi:"allowLeadingAndTrailingSpacesAndZeroes"`
	// The value indicating whether to check for duplicate group control number.
	CheckDuplicateGroupControlNumber bool `pulumi:"checkDuplicateGroupControlNumber"`
	// The value indicating whether to check for duplicate interchange control number.
	CheckDuplicateInterchangeControlNumber bool `pulumi:"checkDuplicateInterchangeControlNumber"`
	// The value indicating whether to check for duplicate transaction set control number.
	CheckDuplicateTransactionSetControlNumber bool `pulumi:"checkDuplicateTransactionSetControlNumber"`
	// The validity period of interchange control number.
	InterchangeControlNumberValidityDays int `pulumi:"interchangeControlNumberValidityDays"`
	// The trailing separator policy.
	TrailingSeparatorPolicy string `pulumi:"trailingSeparatorPolicy"`
	// The value indicating whether to trim leading and trailing spaces and zeroes.
	TrimLeadingAndTrailingSpacesAndZeroes bool `pulumi:"trimLeadingAndTrailingSpacesAndZeroes"`
	// The value indicating whether to validate character set in the message.
	ValidateCharacterSet bool `pulumi:"validateCharacterSet"`
	// The value indicating whether to Whether to validate EDI types.
	ValidateEDITypes bool `pulumi:"validateEDITypes"`
	// The value indicating whether to Whether to validate XSD types.
	ValidateXSDTypes bool `pulumi:"validateXSDTypes"`
}

// The X12 agreement validation settings.
type X12ValidationSettingsResponseOutput struct{ *pulumi.OutputState }

func (X12ValidationSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X12ValidationSettingsResponse)(nil)).Elem()
}

func (o X12ValidationSettingsResponseOutput) ToX12ValidationSettingsResponseOutput() X12ValidationSettingsResponseOutput {
	return o
}

func (o X12ValidationSettingsResponseOutput) ToX12ValidationSettingsResponseOutputWithContext(ctx context.Context) X12ValidationSettingsResponseOutput {
	return o
}

func (o X12ValidationSettingsResponseOutput) ToX12ValidationSettingsResponsePtrOutput() X12ValidationSettingsResponsePtrOutput {
	return o.ToX12ValidationSettingsResponsePtrOutputWithContext(context.Background())
}

func (o X12ValidationSettingsResponseOutput) ToX12ValidationSettingsResponsePtrOutputWithContext(ctx context.Context) X12ValidationSettingsResponsePtrOutput {
	return o.ApplyT(func(v X12ValidationSettingsResponse) *X12ValidationSettingsResponse {
		return &v
	}).(X12ValidationSettingsResponsePtrOutput)
}

// The value indicating whether to allow leading and trailing spaces and zeroes.
func (o X12ValidationSettingsResponseOutput) AllowLeadingAndTrailingSpacesAndZeroes() pulumi.BoolOutput {
	return o.ApplyT(func(v X12ValidationSettingsResponse) bool { return v.AllowLeadingAndTrailingSpacesAndZeroes }).(pulumi.BoolOutput)
}

// The value indicating whether to check for duplicate group control number.
func (o X12ValidationSettingsResponseOutput) CheckDuplicateGroupControlNumber() pulumi.BoolOutput {
	return o.ApplyT(func(v X12ValidationSettingsResponse) bool { return v.CheckDuplicateGroupControlNumber }).(pulumi.BoolOutput)
}

// The value indicating whether to check for duplicate interchange control number.
func (o X12ValidationSettingsResponseOutput) CheckDuplicateInterchangeControlNumber() pulumi.BoolOutput {
	return o.ApplyT(func(v X12ValidationSettingsResponse) bool { return v.CheckDuplicateInterchangeControlNumber }).(pulumi.BoolOutput)
}

// The value indicating whether to check for duplicate transaction set control number.
func (o X12ValidationSettingsResponseOutput) CheckDuplicateTransactionSetControlNumber() pulumi.BoolOutput {
	return o.ApplyT(func(v X12ValidationSettingsResponse) bool { return v.CheckDuplicateTransactionSetControlNumber }).(pulumi.BoolOutput)
}

// The validity period of interchange control number.
func (o X12ValidationSettingsResponseOutput) InterchangeControlNumberValidityDays() pulumi.IntOutput {
	return o.ApplyT(func(v X12ValidationSettingsResponse) int { return v.InterchangeControlNumberValidityDays }).(pulumi.IntOutput)
}

// The trailing separator policy.
func (o X12ValidationSettingsResponseOutput) TrailingSeparatorPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v X12ValidationSettingsResponse) string { return v.TrailingSeparatorPolicy }).(pulumi.StringOutput)
}

// The value indicating whether to trim leading and trailing spaces and zeroes.
func (o X12ValidationSettingsResponseOutput) TrimLeadingAndTrailingSpacesAndZeroes() pulumi.BoolOutput {
	return o.ApplyT(func(v X12ValidationSettingsResponse) bool { return v.TrimLeadingAndTrailingSpacesAndZeroes }).(pulumi.BoolOutput)
}

// The value indicating whether to validate character set in the message.
func (o X12ValidationSettingsResponseOutput) ValidateCharacterSet() pulumi.BoolOutput {
	return o.ApplyT(func(v X12ValidationSettingsResponse) bool { return v.ValidateCharacterSet }).(pulumi.BoolOutput)
}

// The value indicating whether to Whether to validate EDI types.
func (o X12ValidationSettingsResponseOutput) ValidateEDITypes() pulumi.BoolOutput {
	return o.ApplyT(func(v X12ValidationSettingsResponse) bool { return v.ValidateEDITypes }).(pulumi.BoolOutput)
}

// The value indicating whether to Whether to validate XSD types.
func (o X12ValidationSettingsResponseOutput) ValidateXSDTypes() pulumi.BoolOutput {
	return o.ApplyT(func(v X12ValidationSettingsResponse) bool { return v.ValidateXSDTypes }).(pulumi.BoolOutput)
}

type X12ValidationSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (X12ValidationSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**X12ValidationSettingsResponse)(nil)).Elem()
}

func (o X12ValidationSettingsResponsePtrOutput) ToX12ValidationSettingsResponsePtrOutput() X12ValidationSettingsResponsePtrOutput {
	return o
}

func (o X12ValidationSettingsResponsePtrOutput) ToX12ValidationSettingsResponsePtrOutputWithContext(ctx context.Context) X12ValidationSettingsResponsePtrOutput {
	return o
}

func (o X12ValidationSettingsResponsePtrOutput) Elem() X12ValidationSettingsResponseOutput {
	return o.ApplyT(func(v *X12ValidationSettingsResponse) X12ValidationSettingsResponse { return *v }).(X12ValidationSettingsResponseOutput)
}

// The value indicating whether to allow leading and trailing spaces and zeroes.
func (o X12ValidationSettingsResponsePtrOutput) AllowLeadingAndTrailingSpacesAndZeroes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12ValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.AllowLeadingAndTrailingSpacesAndZeroes
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to check for duplicate group control number.
func (o X12ValidationSettingsResponsePtrOutput) CheckDuplicateGroupControlNumber() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12ValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.CheckDuplicateGroupControlNumber
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to check for duplicate interchange control number.
func (o X12ValidationSettingsResponsePtrOutput) CheckDuplicateInterchangeControlNumber() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12ValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.CheckDuplicateInterchangeControlNumber
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to check for duplicate transaction set control number.
func (o X12ValidationSettingsResponsePtrOutput) CheckDuplicateTransactionSetControlNumber() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12ValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.CheckDuplicateTransactionSetControlNumber
	}).(pulumi.BoolPtrOutput)
}

// The validity period of interchange control number.
func (o X12ValidationSettingsResponsePtrOutput) InterchangeControlNumberValidityDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *X12ValidationSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.InterchangeControlNumberValidityDays
	}).(pulumi.IntPtrOutput)
}

// The trailing separator policy.
func (o X12ValidationSettingsResponsePtrOutput) TrailingSeparatorPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *X12ValidationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TrailingSeparatorPolicy
	}).(pulumi.StringPtrOutput)
}

// The value indicating whether to trim leading and trailing spaces and zeroes.
func (o X12ValidationSettingsResponsePtrOutput) TrimLeadingAndTrailingSpacesAndZeroes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12ValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.TrimLeadingAndTrailingSpacesAndZeroes
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to validate character set in the message.
func (o X12ValidationSettingsResponsePtrOutput) ValidateCharacterSet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12ValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.ValidateCharacterSet
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to Whether to validate EDI types.
func (o X12ValidationSettingsResponsePtrOutput) ValidateEDITypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12ValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.ValidateEDITypes
	}).(pulumi.BoolPtrOutput)
}

// The value indicating whether to Whether to validate XSD types.
func (o X12ValidationSettingsResponsePtrOutput) ValidateXSDTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *X12ValidationSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.ValidateXSDTypes
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AS2AcknowledgementConnectionSettingsOutput{})
	pulumi.RegisterOutputType(AS2AcknowledgementConnectionSettingsPtrOutput{})
	pulumi.RegisterOutputType(AS2AcknowledgementConnectionSettingsResponseOutput{})
	pulumi.RegisterOutputType(AS2AcknowledgementConnectionSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(AS2AgreementContentOutput{})
	pulumi.RegisterOutputType(AS2AgreementContentPtrOutput{})
	pulumi.RegisterOutputType(AS2AgreementContentResponseOutput{})
	pulumi.RegisterOutputType(AS2AgreementContentResponsePtrOutput{})
	pulumi.RegisterOutputType(AS2EnvelopeSettingsOutput{})
	pulumi.RegisterOutputType(AS2EnvelopeSettingsPtrOutput{})
	pulumi.RegisterOutputType(AS2EnvelopeSettingsResponseOutput{})
	pulumi.RegisterOutputType(AS2EnvelopeSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(AS2ErrorSettingsOutput{})
	pulumi.RegisterOutputType(AS2ErrorSettingsPtrOutput{})
	pulumi.RegisterOutputType(AS2ErrorSettingsResponseOutput{})
	pulumi.RegisterOutputType(AS2ErrorSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(AS2MdnSettingsOutput{})
	pulumi.RegisterOutputType(AS2MdnSettingsPtrOutput{})
	pulumi.RegisterOutputType(AS2MdnSettingsResponseOutput{})
	pulumi.RegisterOutputType(AS2MdnSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(AS2MessageConnectionSettingsOutput{})
	pulumi.RegisterOutputType(AS2MessageConnectionSettingsPtrOutput{})
	pulumi.RegisterOutputType(AS2MessageConnectionSettingsResponseOutput{})
	pulumi.RegisterOutputType(AS2MessageConnectionSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(AS2OneWayAgreementOutput{})
	pulumi.RegisterOutputType(AS2OneWayAgreementPtrOutput{})
	pulumi.RegisterOutputType(AS2OneWayAgreementResponseOutput{})
	pulumi.RegisterOutputType(AS2OneWayAgreementResponsePtrOutput{})
	pulumi.RegisterOutputType(AS2ProtocolSettingsOutput{})
	pulumi.RegisterOutputType(AS2ProtocolSettingsPtrOutput{})
	pulumi.RegisterOutputType(AS2ProtocolSettingsResponseOutput{})
	pulumi.RegisterOutputType(AS2ProtocolSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(AS2SecuritySettingsOutput{})
	pulumi.RegisterOutputType(AS2SecuritySettingsPtrOutput{})
	pulumi.RegisterOutputType(AS2SecuritySettingsResponseOutput{})
	pulumi.RegisterOutputType(AS2SecuritySettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(AS2ValidationSettingsOutput{})
	pulumi.RegisterOutputType(AS2ValidationSettingsPtrOutput{})
	pulumi.RegisterOutputType(AS2ValidationSettingsResponseOutput{})
	pulumi.RegisterOutputType(AS2ValidationSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(AgreementContentOutput{})
	pulumi.RegisterOutputType(AgreementContentPtrOutput{})
	pulumi.RegisterOutputType(AgreementContentResponseOutput{})
	pulumi.RegisterOutputType(AgreementContentResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiDeploymentParameterMetadataResponseOutput{})
	pulumi.RegisterOutputType(ApiDeploymentParameterMetadataResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiDeploymentParameterMetadataSetResponseOutput{})
	pulumi.RegisterOutputType(ApiDeploymentParameterMetadataSetResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiResourceBackendServiceResponseOutput{})
	pulumi.RegisterOutputType(ApiResourceBackendServiceResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiResourceDefinitionsResponseOutput{})
	pulumi.RegisterOutputType(ApiResourceDefinitionsResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiResourceGeneralInformationResponseOutput{})
	pulumi.RegisterOutputType(ApiResourceGeneralInformationResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiResourceMetadataResponseOutput{})
	pulumi.RegisterOutputType(ApiResourceMetadataResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiResourcePoliciesResponseOutput{})
	pulumi.RegisterOutputType(ApiResourcePoliciesResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiResourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApiResourcePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AssemblyPropertiesOutput{})
	pulumi.RegisterOutputType(AssemblyPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AssemblyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AssemblyPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureResourceErrorInfoResponseOutput{})
	pulumi.RegisterOutputType(AzureResourceErrorInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureResourceErrorInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(B2BPartnerContentOutput{})
	pulumi.RegisterOutputType(B2BPartnerContentPtrOutput{})
	pulumi.RegisterOutputType(B2BPartnerContentResponseOutput{})
	pulumi.RegisterOutputType(B2BPartnerContentResponsePtrOutput{})
	pulumi.RegisterOutputType(BatchConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(BatchConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BatchConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(BatchConfigurationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(BatchReleaseCriteriaOutput{})
	pulumi.RegisterOutputType(BatchReleaseCriteriaPtrOutput{})
	pulumi.RegisterOutputType(BatchReleaseCriteriaResponseOutput{})
	pulumi.RegisterOutputType(BatchReleaseCriteriaResponsePtrOutput{})
	pulumi.RegisterOutputType(BusinessIdentityOutput{})
	pulumi.RegisterOutputType(BusinessIdentityPtrOutput{})
	pulumi.RegisterOutputType(BusinessIdentityArrayOutput{})
	pulumi.RegisterOutputType(BusinessIdentityResponseOutput{})
	pulumi.RegisterOutputType(BusinessIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(BusinessIdentityResponseArrayOutput{})
	pulumi.RegisterOutputType(ContentHashOutput{})
	pulumi.RegisterOutputType(ContentHashPtrOutput{})
	pulumi.RegisterOutputType(ContentHashResponseOutput{})
	pulumi.RegisterOutputType(ContentHashResponsePtrOutput{})
	pulumi.RegisterOutputType(ContentLinkOutput{})
	pulumi.RegisterOutputType(ContentLinkPtrOutput{})
	pulumi.RegisterOutputType(ContentLinkResponseOutput{})
	pulumi.RegisterOutputType(ContentLinkResponsePtrOutput{})
	pulumi.RegisterOutputType(EdifactAcknowledgementSettingsOutput{})
	pulumi.RegisterOutputType(EdifactAcknowledgementSettingsPtrOutput{})
	pulumi.RegisterOutputType(EdifactAcknowledgementSettingsResponseOutput{})
	pulumi.RegisterOutputType(EdifactAcknowledgementSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(EdifactAgreementContentOutput{})
	pulumi.RegisterOutputType(EdifactAgreementContentPtrOutput{})
	pulumi.RegisterOutputType(EdifactAgreementContentResponseOutput{})
	pulumi.RegisterOutputType(EdifactAgreementContentResponsePtrOutput{})
	pulumi.RegisterOutputType(EdifactDelimiterOverrideOutput{})
	pulumi.RegisterOutputType(EdifactDelimiterOverrideArrayOutput{})
	pulumi.RegisterOutputType(EdifactDelimiterOverrideResponseOutput{})
	pulumi.RegisterOutputType(EdifactDelimiterOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(EdifactEnvelopeOverrideOutput{})
	pulumi.RegisterOutputType(EdifactEnvelopeOverrideArrayOutput{})
	pulumi.RegisterOutputType(EdifactEnvelopeOverrideResponseOutput{})
	pulumi.RegisterOutputType(EdifactEnvelopeOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(EdifactEnvelopeSettingsOutput{})
	pulumi.RegisterOutputType(EdifactEnvelopeSettingsPtrOutput{})
	pulumi.RegisterOutputType(EdifactEnvelopeSettingsResponseOutput{})
	pulumi.RegisterOutputType(EdifactEnvelopeSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(EdifactFramingSettingsOutput{})
	pulumi.RegisterOutputType(EdifactFramingSettingsPtrOutput{})
	pulumi.RegisterOutputType(EdifactFramingSettingsResponseOutput{})
	pulumi.RegisterOutputType(EdifactFramingSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(EdifactMessageFilterOutput{})
	pulumi.RegisterOutputType(EdifactMessageFilterPtrOutput{})
	pulumi.RegisterOutputType(EdifactMessageFilterResponseOutput{})
	pulumi.RegisterOutputType(EdifactMessageFilterResponsePtrOutput{})
	pulumi.RegisterOutputType(EdifactMessageIdentifierOutput{})
	pulumi.RegisterOutputType(EdifactMessageIdentifierArrayOutput{})
	pulumi.RegisterOutputType(EdifactMessageIdentifierResponseOutput{})
	pulumi.RegisterOutputType(EdifactMessageIdentifierResponseArrayOutput{})
	pulumi.RegisterOutputType(EdifactOneWayAgreementOutput{})
	pulumi.RegisterOutputType(EdifactOneWayAgreementPtrOutput{})
	pulumi.RegisterOutputType(EdifactOneWayAgreementResponseOutput{})
	pulumi.RegisterOutputType(EdifactOneWayAgreementResponsePtrOutput{})
	pulumi.RegisterOutputType(EdifactProcessingSettingsOutput{})
	pulumi.RegisterOutputType(EdifactProcessingSettingsPtrOutput{})
	pulumi.RegisterOutputType(EdifactProcessingSettingsResponseOutput{})
	pulumi.RegisterOutputType(EdifactProcessingSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(EdifactProtocolSettingsOutput{})
	pulumi.RegisterOutputType(EdifactProtocolSettingsPtrOutput{})
	pulumi.RegisterOutputType(EdifactProtocolSettingsResponseOutput{})
	pulumi.RegisterOutputType(EdifactProtocolSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(EdifactSchemaReferenceOutput{})
	pulumi.RegisterOutputType(EdifactSchemaReferenceArrayOutput{})
	pulumi.RegisterOutputType(EdifactSchemaReferenceResponseOutput{})
	pulumi.RegisterOutputType(EdifactSchemaReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(EdifactValidationOverrideOutput{})
	pulumi.RegisterOutputType(EdifactValidationOverrideArrayOutput{})
	pulumi.RegisterOutputType(EdifactValidationOverrideResponseOutput{})
	pulumi.RegisterOutputType(EdifactValidationOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(EdifactValidationSettingsOutput{})
	pulumi.RegisterOutputType(EdifactValidationSettingsPtrOutput{})
	pulumi.RegisterOutputType(EdifactValidationSettingsResponseOutput{})
	pulumi.RegisterOutputType(EdifactValidationSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressionResponseOutput{})
	pulumi.RegisterOutputType(ExpressionResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressionRootResponseOutput{})
	pulumi.RegisterOutputType(ExpressionRootResponseArrayOutput{})
	pulumi.RegisterOutputType(FlowAccessControlConfigurationOutput{})
	pulumi.RegisterOutputType(FlowAccessControlConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowAccessControlConfigurationPolicyOutput{})
	pulumi.RegisterOutputType(FlowAccessControlConfigurationPolicyPtrOutput{})
	pulumi.RegisterOutputType(FlowAccessControlConfigurationPolicyResponseOutput{})
	pulumi.RegisterOutputType(FlowAccessControlConfigurationPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(FlowAccessControlConfigurationResponseOutput{})
	pulumi.RegisterOutputType(FlowAccessControlConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(FlowEndpointsOutput{})
	pulumi.RegisterOutputType(FlowEndpointsPtrOutput{})
	pulumi.RegisterOutputType(FlowEndpointsConfigurationOutput{})
	pulumi.RegisterOutputType(FlowEndpointsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowEndpointsConfigurationResponseOutput{})
	pulumi.RegisterOutputType(FlowEndpointsConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(FlowEndpointsResponseOutput{})
	pulumi.RegisterOutputType(FlowEndpointsResponsePtrOutput{})
	pulumi.RegisterOutputType(IntegrationAccountMapPropertiesParametersSchemaOutput{})
	pulumi.RegisterOutputType(IntegrationAccountMapPropertiesParametersSchemaPtrOutput{})
	pulumi.RegisterOutputType(IntegrationAccountMapPropertiesResponseParametersSchemaOutput{})
	pulumi.RegisterOutputType(IntegrationAccountMapPropertiesResponseParametersSchemaPtrOutput{})
	pulumi.RegisterOutputType(IntegrationAccountSkuOutput{})
	pulumi.RegisterOutputType(IntegrationAccountSkuPtrOutput{})
	pulumi.RegisterOutputType(IntegrationAccountSkuResponseOutput{})
	pulumi.RegisterOutputType(IntegrationAccountSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(IntegrationServiceEnvironmentTypeOutput{})
	pulumi.RegisterOutputType(IntegrationServiceEnvironmentTypePtrOutput{})
	pulumi.RegisterOutputType(IntegrationServiceEnvironmentAccessEndpointOutput{})
	pulumi.RegisterOutputType(IntegrationServiceEnvironmentAccessEndpointPtrOutput{})
	pulumi.RegisterOutputType(IntegrationServiceEnvironmentAccessEndpointResponseOutput{})
	pulumi.RegisterOutputType(IntegrationServiceEnvironmentAccessEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(IntegrationServiceEnvironmentPropertiesOutput{})
	pulumi.RegisterOutputType(IntegrationServiceEnvironmentPropertiesPtrOutput{})
	pulumi.RegisterOutputType(IntegrationServiceEnvironmentPropertiesResponseOutput{})
	pulumi.RegisterOutputType(IntegrationServiceEnvironmentPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(IntegrationServiceEnvironmentResponseOutput{})
	pulumi.RegisterOutputType(IntegrationServiceEnvironmentResponsePtrOutput{})
	pulumi.RegisterOutputType(IntegrationServiceEnvironmentSkuOutput{})
	pulumi.RegisterOutputType(IntegrationServiceEnvironmentSkuPtrOutput{})
	pulumi.RegisterOutputType(IntegrationServiceEnvironmentSkuResponseOutput{})
	pulumi.RegisterOutputType(IntegrationServiceEnvironmentSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(IpAddressOutput{})
	pulumi.RegisterOutputType(IpAddressArrayOutput{})
	pulumi.RegisterOutputType(IpAddressRangeOutput{})
	pulumi.RegisterOutputType(IpAddressRangeArrayOutput{})
	pulumi.RegisterOutputType(IpAddressRangeResponseOutput{})
	pulumi.RegisterOutputType(IpAddressRangeResponseArrayOutput{})
	pulumi.RegisterOutputType(IpAddressResponseOutput{})
	pulumi.RegisterOutputType(IpAddressResponseArrayOutput{})
	pulumi.RegisterOutputType(KeyVaultKeyReferenceOutput{})
	pulumi.RegisterOutputType(KeyVaultKeyReferencePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultKeyReferenceKeyVaultOutput{})
	pulumi.RegisterOutputType(KeyVaultKeyReferenceKeyVaultPtrOutput{})
	pulumi.RegisterOutputType(KeyVaultKeyReferenceResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultKeyReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultKeyReferenceResponseKeyVaultOutput{})
	pulumi.RegisterOutputType(KeyVaultKeyReferenceResponseKeyVaultPtrOutput{})
	pulumi.RegisterOutputType(KeyVaultKeyResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(KeyVaultKeyResponseAttributesOutput{})
	pulumi.RegisterOutputType(KeyVaultKeyResponseAttributesPtrOutput{})
	pulumi.RegisterOutputType(KeyVaultReferenceOutput{})
	pulumi.RegisterOutputType(NetworkConfigurationOutput{})
	pulumi.RegisterOutputType(NetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(NetworkConfigurationResponseOutput{})
	pulumi.RegisterOutputType(NetworkConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenAuthenticationAccessPoliciesOutput{})
	pulumi.RegisterOutputType(OpenAuthenticationAccessPoliciesPtrOutput{})
	pulumi.RegisterOutputType(OpenAuthenticationAccessPoliciesResponseOutput{})
	pulumi.RegisterOutputType(OpenAuthenticationAccessPoliciesResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenAuthenticationAccessPolicyOutput{})
	pulumi.RegisterOutputType(OpenAuthenticationAccessPolicyMapOutput{})
	pulumi.RegisterOutputType(OpenAuthenticationAccessPolicyResponseOutput{})
	pulumi.RegisterOutputType(OpenAuthenticationAccessPolicyResponseMapOutput{})
	pulumi.RegisterOutputType(OpenAuthenticationPolicyClaimOutput{})
	pulumi.RegisterOutputType(OpenAuthenticationPolicyClaimArrayOutput{})
	pulumi.RegisterOutputType(OpenAuthenticationPolicyClaimResponseOutput{})
	pulumi.RegisterOutputType(OpenAuthenticationPolicyClaimResponseArrayOutput{})
	pulumi.RegisterOutputType(PartnerContentOutput{})
	pulumi.RegisterOutputType(PartnerContentPtrOutput{})
	pulumi.RegisterOutputType(PartnerContentResponseOutput{})
	pulumi.RegisterOutputType(PartnerContentResponsePtrOutput{})
	pulumi.RegisterOutputType(RecurrenceScheduleOutput{})
	pulumi.RegisterOutputType(RecurrenceSchedulePtrOutput{})
	pulumi.RegisterOutputType(RecurrenceScheduleOccurrenceOutput{})
	pulumi.RegisterOutputType(RecurrenceScheduleOccurrenceArrayOutput{})
	pulumi.RegisterOutputType(RecurrenceScheduleOccurrenceResponseOutput{})
	pulumi.RegisterOutputType(RecurrenceScheduleOccurrenceResponseArrayOutput{})
	pulumi.RegisterOutputType(RecurrenceScheduleResponseOutput{})
	pulumi.RegisterOutputType(RecurrenceScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceReferenceOutput{})
	pulumi.RegisterOutputType(ResourceReferencePtrOutput{})
	pulumi.RegisterOutputType(ResourceReferenceArrayOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponseOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(WorkflowParameterOutput{})
	pulumi.RegisterOutputType(WorkflowParameterMapOutput{})
	pulumi.RegisterOutputType(WorkflowParameterResponseOutput{})
	pulumi.RegisterOutputType(WorkflowParameterResponseMapOutput{})
	pulumi.RegisterOutputType(WorkflowTriggerListCallbackUrlQueriesResponseOutput{})
	pulumi.RegisterOutputType(WorkflowTriggerRecurrenceOutput{})
	pulumi.RegisterOutputType(WorkflowTriggerRecurrencePtrOutput{})
	pulumi.RegisterOutputType(WorkflowTriggerRecurrenceResponseOutput{})
	pulumi.RegisterOutputType(WorkflowTriggerRecurrenceResponsePtrOutput{})
	pulumi.RegisterOutputType(WsdlServiceResponseOutput{})
	pulumi.RegisterOutputType(WsdlServiceResponsePtrOutput{})
	pulumi.RegisterOutputType(X12AcknowledgementSettingsOutput{})
	pulumi.RegisterOutputType(X12AcknowledgementSettingsPtrOutput{})
	pulumi.RegisterOutputType(X12AcknowledgementSettingsResponseOutput{})
	pulumi.RegisterOutputType(X12AcknowledgementSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(X12AgreementContentOutput{})
	pulumi.RegisterOutputType(X12AgreementContentPtrOutput{})
	pulumi.RegisterOutputType(X12AgreementContentResponseOutput{})
	pulumi.RegisterOutputType(X12AgreementContentResponsePtrOutput{})
	pulumi.RegisterOutputType(X12DelimiterOverridesOutput{})
	pulumi.RegisterOutputType(X12DelimiterOverridesArrayOutput{})
	pulumi.RegisterOutputType(X12DelimiterOverridesResponseOutput{})
	pulumi.RegisterOutputType(X12DelimiterOverridesResponseArrayOutput{})
	pulumi.RegisterOutputType(X12EnvelopeOverrideOutput{})
	pulumi.RegisterOutputType(X12EnvelopeOverrideArrayOutput{})
	pulumi.RegisterOutputType(X12EnvelopeOverrideResponseOutput{})
	pulumi.RegisterOutputType(X12EnvelopeOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(X12EnvelopeSettingsOutput{})
	pulumi.RegisterOutputType(X12EnvelopeSettingsPtrOutput{})
	pulumi.RegisterOutputType(X12EnvelopeSettingsResponseOutput{})
	pulumi.RegisterOutputType(X12EnvelopeSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(X12FramingSettingsOutput{})
	pulumi.RegisterOutputType(X12FramingSettingsPtrOutput{})
	pulumi.RegisterOutputType(X12FramingSettingsResponseOutput{})
	pulumi.RegisterOutputType(X12FramingSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(X12MessageFilterOutput{})
	pulumi.RegisterOutputType(X12MessageFilterPtrOutput{})
	pulumi.RegisterOutputType(X12MessageFilterResponseOutput{})
	pulumi.RegisterOutputType(X12MessageFilterResponsePtrOutput{})
	pulumi.RegisterOutputType(X12MessageIdentifierOutput{})
	pulumi.RegisterOutputType(X12MessageIdentifierArrayOutput{})
	pulumi.RegisterOutputType(X12MessageIdentifierResponseOutput{})
	pulumi.RegisterOutputType(X12MessageIdentifierResponseArrayOutput{})
	pulumi.RegisterOutputType(X12OneWayAgreementOutput{})
	pulumi.RegisterOutputType(X12OneWayAgreementPtrOutput{})
	pulumi.RegisterOutputType(X12OneWayAgreementResponseOutput{})
	pulumi.RegisterOutputType(X12OneWayAgreementResponsePtrOutput{})
	pulumi.RegisterOutputType(X12ProcessingSettingsOutput{})
	pulumi.RegisterOutputType(X12ProcessingSettingsPtrOutput{})
	pulumi.RegisterOutputType(X12ProcessingSettingsResponseOutput{})
	pulumi.RegisterOutputType(X12ProcessingSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(X12ProtocolSettingsOutput{})
	pulumi.RegisterOutputType(X12ProtocolSettingsPtrOutput{})
	pulumi.RegisterOutputType(X12ProtocolSettingsResponseOutput{})
	pulumi.RegisterOutputType(X12ProtocolSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(X12SchemaReferenceOutput{})
	pulumi.RegisterOutputType(X12SchemaReferenceArrayOutput{})
	pulumi.RegisterOutputType(X12SchemaReferenceResponseOutput{})
	pulumi.RegisterOutputType(X12SchemaReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(X12SecuritySettingsOutput{})
	pulumi.RegisterOutputType(X12SecuritySettingsPtrOutput{})
	pulumi.RegisterOutputType(X12SecuritySettingsResponseOutput{})
	pulumi.RegisterOutputType(X12SecuritySettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(X12ValidationOverrideOutput{})
	pulumi.RegisterOutputType(X12ValidationOverrideArrayOutput{})
	pulumi.RegisterOutputType(X12ValidationOverrideResponseOutput{})
	pulumi.RegisterOutputType(X12ValidationOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(X12ValidationSettingsOutput{})
	pulumi.RegisterOutputType(X12ValidationSettingsPtrOutput{})
	pulumi.RegisterOutputType(X12ValidationSettingsResponseOutput{})
	pulumi.RegisterOutputType(X12ValidationSettingsResponsePtrOutput{})
}
