// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20191101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A Cache instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md
type CacheType struct {
	// Region name string.
	Location *string `pulumi:"location"`
	// Name of Cache.
	Name string `pulumi:"name"`
	// Properties of the Cache.
	Properties CacheResponseProperties `pulumi:"properties"`
	// SKU for the Cache.
	Sku *CacheResponseProperties `pulumi:"sku"`
	// ARM tags as name/value pairs.
	Tags map[string]string `pulumi:"tags"`
	// Type of the Cache; Microsoft.StorageCache/Cache
	Type string `pulumi:"type"`
}

// CacheTypeInput is an input type that accepts CacheTypeArgs and CacheTypeOutput values.
// You can construct a concrete instance of `CacheTypeInput` via:
//
//          CacheTypeArgs{...}
type CacheTypeInput interface {
	pulumi.Input

	ToCacheTypeOutput() CacheTypeOutput
	ToCacheTypeOutputWithContext(context.Context) CacheTypeOutput
}

// A Cache instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md
type CacheTypeArgs struct {
	// Region name string.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Name of Cache.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the Cache.
	Properties CacheResponsePropertiesInput `pulumi:"properties"`
	// SKU for the Cache.
	Sku CacheResponsePropertiesPtrInput `pulumi:"sku"`
	// ARM tags as name/value pairs.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Type of the Cache; Microsoft.StorageCache/Cache
	Type pulumi.StringInput `pulumi:"type"`
}

func (CacheTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheType)(nil)).Elem()
}

func (i CacheTypeArgs) ToCacheTypeOutput() CacheTypeOutput {
	return i.ToCacheTypeOutputWithContext(context.Background())
}

func (i CacheTypeArgs) ToCacheTypeOutputWithContext(ctx context.Context) CacheTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheTypeOutput)
}

// A Cache instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md
type CacheTypeOutput struct{ *pulumi.OutputState }

func (CacheTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheType)(nil)).Elem()
}

func (o CacheTypeOutput) ToCacheTypeOutput() CacheTypeOutput {
	return o
}

func (o CacheTypeOutput) ToCacheTypeOutputWithContext(ctx context.Context) CacheTypeOutput {
	return o
}

// Region name string.
func (o CacheTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Name of Cache.
func (o CacheTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CacheType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the Cache.
func (o CacheTypeOutput) Properties() CacheResponsePropertiesOutput {
	return o.ApplyT(func(v CacheType) CacheResponseProperties { return v.Properties }).(CacheResponsePropertiesOutput)
}

// SKU for the Cache.
func (o CacheTypeOutput) Sku() CacheResponsePropertiesPtrOutput {
	return o.ApplyT(func(v CacheType) *CacheResponseProperties { return v.Sku }).(CacheResponsePropertiesPtrOutput)
}

// ARM tags as name/value pairs.
func (o CacheTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CacheType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Type of the Cache; Microsoft.StorageCache/Cache
func (o CacheTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CacheType) string { return v.Type }).(pulumi.StringOutput)
}

// An indication of Cache health. Gives more information about health than just that related to provisioning.
type CacheHealth struct {
	// List of Cache health states.
	State *string `pulumi:"state"`
	// Describes explanation of state.
	StatusDescription *string `pulumi:"statusDescription"`
}

// CacheHealthInput is an input type that accepts CacheHealthArgs and CacheHealthOutput values.
// You can construct a concrete instance of `CacheHealthInput` via:
//
//          CacheHealthArgs{...}
type CacheHealthInput interface {
	pulumi.Input

	ToCacheHealthOutput() CacheHealthOutput
	ToCacheHealthOutputWithContext(context.Context) CacheHealthOutput
}

// An indication of Cache health. Gives more information about health than just that related to provisioning.
type CacheHealthArgs struct {
	// List of Cache health states.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Describes explanation of state.
	StatusDescription pulumi.StringPtrInput `pulumi:"statusDescription"`
}

func (CacheHealthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheHealth)(nil)).Elem()
}

func (i CacheHealthArgs) ToCacheHealthOutput() CacheHealthOutput {
	return i.ToCacheHealthOutputWithContext(context.Background())
}

func (i CacheHealthArgs) ToCacheHealthOutputWithContext(ctx context.Context) CacheHealthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheHealthOutput)
}

// An indication of Cache health. Gives more information about health than just that related to provisioning.
type CacheHealthOutput struct{ *pulumi.OutputState }

func (CacheHealthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheHealth)(nil)).Elem()
}

func (o CacheHealthOutput) ToCacheHealthOutput() CacheHealthOutput {
	return o
}

func (o CacheHealthOutput) ToCacheHealthOutputWithContext(ctx context.Context) CacheHealthOutput {
	return o
}

// List of Cache health states.
func (o CacheHealthOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheHealth) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Describes explanation of state.
func (o CacheHealthOutput) StatusDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheHealth) *string { return v.StatusDescription }).(pulumi.StringPtrOutput)
}

// An indication of Cache health. Gives more information about health than just that related to provisioning.
type CacheHealthResponse struct {
	// List of Cache health states.
	State *string `pulumi:"state"`
	// Describes explanation of state.
	StatusDescription *string `pulumi:"statusDescription"`
}

// CacheHealthResponseInput is an input type that accepts CacheHealthResponseArgs and CacheHealthResponseOutput values.
// You can construct a concrete instance of `CacheHealthResponseInput` via:
//
//          CacheHealthResponseArgs{...}
type CacheHealthResponseInput interface {
	pulumi.Input

	ToCacheHealthResponseOutput() CacheHealthResponseOutput
	ToCacheHealthResponseOutputWithContext(context.Context) CacheHealthResponseOutput
}

// An indication of Cache health. Gives more information about health than just that related to provisioning.
type CacheHealthResponseArgs struct {
	// List of Cache health states.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Describes explanation of state.
	StatusDescription pulumi.StringPtrInput `pulumi:"statusDescription"`
}

func (CacheHealthResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheHealthResponse)(nil)).Elem()
}

func (i CacheHealthResponseArgs) ToCacheHealthResponseOutput() CacheHealthResponseOutput {
	return i.ToCacheHealthResponseOutputWithContext(context.Background())
}

func (i CacheHealthResponseArgs) ToCacheHealthResponseOutputWithContext(ctx context.Context) CacheHealthResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheHealthResponseOutput)
}

func (i CacheHealthResponseArgs) ToCacheHealthResponsePtrOutput() CacheHealthResponsePtrOutput {
	return i.ToCacheHealthResponsePtrOutputWithContext(context.Background())
}

func (i CacheHealthResponseArgs) ToCacheHealthResponsePtrOutputWithContext(ctx context.Context) CacheHealthResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheHealthResponseOutput).ToCacheHealthResponsePtrOutputWithContext(ctx)
}

// CacheHealthResponsePtrInput is an input type that accepts CacheHealthResponseArgs, CacheHealthResponsePtr and CacheHealthResponsePtrOutput values.
// You can construct a concrete instance of `CacheHealthResponsePtrInput` via:
//
//          CacheHealthResponseArgs{...}
//
//  or:
//
//          nil
type CacheHealthResponsePtrInput interface {
	pulumi.Input

	ToCacheHealthResponsePtrOutput() CacheHealthResponsePtrOutput
	ToCacheHealthResponsePtrOutputWithContext(context.Context) CacheHealthResponsePtrOutput
}

type cacheHealthResponsePtrType CacheHealthResponseArgs

func CacheHealthResponsePtr(v *CacheHealthResponseArgs) CacheHealthResponsePtrInput {
	return (*cacheHealthResponsePtrType)(v)
}

func (*cacheHealthResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheHealthResponse)(nil)).Elem()
}

func (i *cacheHealthResponsePtrType) ToCacheHealthResponsePtrOutput() CacheHealthResponsePtrOutput {
	return i.ToCacheHealthResponsePtrOutputWithContext(context.Background())
}

func (i *cacheHealthResponsePtrType) ToCacheHealthResponsePtrOutputWithContext(ctx context.Context) CacheHealthResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheHealthResponsePtrOutput)
}

// An indication of Cache health. Gives more information about health than just that related to provisioning.
type CacheHealthResponseOutput struct{ *pulumi.OutputState }

func (CacheHealthResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheHealthResponse)(nil)).Elem()
}

func (o CacheHealthResponseOutput) ToCacheHealthResponseOutput() CacheHealthResponseOutput {
	return o
}

func (o CacheHealthResponseOutput) ToCacheHealthResponseOutputWithContext(ctx context.Context) CacheHealthResponseOutput {
	return o
}

func (o CacheHealthResponseOutput) ToCacheHealthResponsePtrOutput() CacheHealthResponsePtrOutput {
	return o.ToCacheHealthResponsePtrOutputWithContext(context.Background())
}

func (o CacheHealthResponseOutput) ToCacheHealthResponsePtrOutputWithContext(ctx context.Context) CacheHealthResponsePtrOutput {
	return o.ApplyT(func(v CacheHealthResponse) *CacheHealthResponse {
		return &v
	}).(CacheHealthResponsePtrOutput)
}

// List of Cache health states.
func (o CacheHealthResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheHealthResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Describes explanation of state.
func (o CacheHealthResponseOutput) StatusDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheHealthResponse) *string { return v.StatusDescription }).(pulumi.StringPtrOutput)
}

type CacheHealthResponsePtrOutput struct{ *pulumi.OutputState }

func (CacheHealthResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheHealthResponse)(nil)).Elem()
}

func (o CacheHealthResponsePtrOutput) ToCacheHealthResponsePtrOutput() CacheHealthResponsePtrOutput {
	return o
}

func (o CacheHealthResponsePtrOutput) ToCacheHealthResponsePtrOutputWithContext(ctx context.Context) CacheHealthResponsePtrOutput {
	return o
}

func (o CacheHealthResponsePtrOutput) Elem() CacheHealthResponseOutput {
	return o.ApplyT(func(v *CacheHealthResponse) CacheHealthResponse { return *v }).(CacheHealthResponseOutput)
}

// List of Cache health states.
func (o CacheHealthResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheHealthResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Describes explanation of state.
func (o CacheHealthResponsePtrOutput) StatusDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheHealthResponse) *string {
		if v == nil {
			return nil
		}
		return v.StatusDescription
	}).(pulumi.StringPtrOutput)
}

// Properties of the Cache.
type CacheProperties struct {
	// The size of this Cache, in GB.
	CacheSizeGB *int `pulumi:"cacheSizeGB"`
	// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
	ProvisioningState *string `pulumi:"provisioningState"`
	// Subnet used for the Cache.
	Subnet *string `pulumi:"subnet"`
	// Upgrade status of the Cache.
	UpgradeStatus *CacheUpgradeStatus `pulumi:"upgradeStatus"`
}

// CachePropertiesInput is an input type that accepts CachePropertiesArgs and CachePropertiesOutput values.
// You can construct a concrete instance of `CachePropertiesInput` via:
//
//          CachePropertiesArgs{...}
type CachePropertiesInput interface {
	pulumi.Input

	ToCachePropertiesOutput() CachePropertiesOutput
	ToCachePropertiesOutputWithContext(context.Context) CachePropertiesOutput
}

// Properties of the Cache.
type CachePropertiesArgs struct {
	// The size of this Cache, in GB.
	CacheSizeGB pulumi.IntPtrInput `pulumi:"cacheSizeGB"`
	// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Subnet used for the Cache.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
	// Upgrade status of the Cache.
	UpgradeStatus CacheUpgradeStatusPtrInput `pulumi:"upgradeStatus"`
}

func (CachePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheProperties)(nil)).Elem()
}

func (i CachePropertiesArgs) ToCachePropertiesOutput() CachePropertiesOutput {
	return i.ToCachePropertiesOutputWithContext(context.Background())
}

func (i CachePropertiesArgs) ToCachePropertiesOutputWithContext(ctx context.Context) CachePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CachePropertiesOutput)
}

func (i CachePropertiesArgs) ToCachePropertiesPtrOutput() CachePropertiesPtrOutput {
	return i.ToCachePropertiesPtrOutputWithContext(context.Background())
}

func (i CachePropertiesArgs) ToCachePropertiesPtrOutputWithContext(ctx context.Context) CachePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CachePropertiesOutput).ToCachePropertiesPtrOutputWithContext(ctx)
}

// CachePropertiesPtrInput is an input type that accepts CachePropertiesArgs, CachePropertiesPtr and CachePropertiesPtrOutput values.
// You can construct a concrete instance of `CachePropertiesPtrInput` via:
//
//          CachePropertiesArgs{...}
//
//  or:
//
//          nil
type CachePropertiesPtrInput interface {
	pulumi.Input

	ToCachePropertiesPtrOutput() CachePropertiesPtrOutput
	ToCachePropertiesPtrOutputWithContext(context.Context) CachePropertiesPtrOutput
}

type cachePropertiesPtrType CachePropertiesArgs

func CachePropertiesPtr(v *CachePropertiesArgs) CachePropertiesPtrInput {
	return (*cachePropertiesPtrType)(v)
}

func (*cachePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheProperties)(nil)).Elem()
}

func (i *cachePropertiesPtrType) ToCachePropertiesPtrOutput() CachePropertiesPtrOutput {
	return i.ToCachePropertiesPtrOutputWithContext(context.Background())
}

func (i *cachePropertiesPtrType) ToCachePropertiesPtrOutputWithContext(ctx context.Context) CachePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CachePropertiesPtrOutput)
}

// Properties of the Cache.
type CachePropertiesOutput struct{ *pulumi.OutputState }

func (CachePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheProperties)(nil)).Elem()
}

func (o CachePropertiesOutput) ToCachePropertiesOutput() CachePropertiesOutput {
	return o
}

func (o CachePropertiesOutput) ToCachePropertiesOutputWithContext(ctx context.Context) CachePropertiesOutput {
	return o
}

func (o CachePropertiesOutput) ToCachePropertiesPtrOutput() CachePropertiesPtrOutput {
	return o.ToCachePropertiesPtrOutputWithContext(context.Background())
}

func (o CachePropertiesOutput) ToCachePropertiesPtrOutputWithContext(ctx context.Context) CachePropertiesPtrOutput {
	return o.ApplyT(func(v CacheProperties) *CacheProperties {
		return &v
	}).(CachePropertiesPtrOutput)
}

// The size of this Cache, in GB.
func (o CachePropertiesOutput) CacheSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CacheProperties) *int { return v.CacheSizeGB }).(pulumi.IntPtrOutput)
}

// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
func (o CachePropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Subnet used for the Cache.
func (o CachePropertiesOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheProperties) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// Upgrade status of the Cache.
func (o CachePropertiesOutput) UpgradeStatus() CacheUpgradeStatusPtrOutput {
	return o.ApplyT(func(v CacheProperties) *CacheUpgradeStatus { return v.UpgradeStatus }).(CacheUpgradeStatusPtrOutput)
}

type CachePropertiesPtrOutput struct{ *pulumi.OutputState }

func (CachePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheProperties)(nil)).Elem()
}

func (o CachePropertiesPtrOutput) ToCachePropertiesPtrOutput() CachePropertiesPtrOutput {
	return o
}

func (o CachePropertiesPtrOutput) ToCachePropertiesPtrOutputWithContext(ctx context.Context) CachePropertiesPtrOutput {
	return o
}

func (o CachePropertiesPtrOutput) Elem() CachePropertiesOutput {
	return o.ApplyT(func(v *CacheProperties) CacheProperties { return *v }).(CachePropertiesOutput)
}

// The size of this Cache, in GB.
func (o CachePropertiesPtrOutput) CacheSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CacheProperties) *int {
		if v == nil {
			return nil
		}
		return v.CacheSizeGB
	}).(pulumi.IntPtrOutput)
}

// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
func (o CachePropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Subnet used for the Cache.
func (o CachePropertiesPtrOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheProperties) *string {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(pulumi.StringPtrOutput)
}

// Upgrade status of the Cache.
func (o CachePropertiesPtrOutput) UpgradeStatus() CacheUpgradeStatusPtrOutput {
	return o.ApplyT(func(v *CacheProperties) *CacheUpgradeStatus {
		if v == nil {
			return nil
		}
		return v.UpgradeStatus
	}).(CacheUpgradeStatusPtrOutput)
}

// Properties of the Cache.
type CacheResponseProperties struct {
	// The size of this Cache, in GB.
	CacheSizeGB *int `pulumi:"cacheSizeGB"`
	// Health of the Cache.
	Health CacheHealthResponse `pulumi:"health"`
	// Array of IP addresses that can be used by clients mounting this Cache.
	MountAddresses []string `pulumi:"mountAddresses"`
	// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
	ProvisioningState *string `pulumi:"provisioningState"`
	// Subnet used for the Cache.
	Subnet *string `pulumi:"subnet"`
	// Upgrade status of the Cache.
	UpgradeStatus *CacheUpgradeStatusResponse `pulumi:"upgradeStatus"`
}

// CacheResponsePropertiesInput is an input type that accepts CacheResponsePropertiesArgs and CacheResponsePropertiesOutput values.
// You can construct a concrete instance of `CacheResponsePropertiesInput` via:
//
//          CacheResponsePropertiesArgs{...}
type CacheResponsePropertiesInput interface {
	pulumi.Input

	ToCacheResponsePropertiesOutput() CacheResponsePropertiesOutput
	ToCacheResponsePropertiesOutputWithContext(context.Context) CacheResponsePropertiesOutput
}

// Properties of the Cache.
type CacheResponsePropertiesArgs struct {
	// The size of this Cache, in GB.
	CacheSizeGB pulumi.IntPtrInput `pulumi:"cacheSizeGB"`
	// Health of the Cache.
	Health CacheHealthResponseInput `pulumi:"health"`
	// Array of IP addresses that can be used by clients mounting this Cache.
	MountAddresses pulumi.StringArrayInput `pulumi:"mountAddresses"`
	// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Subnet used for the Cache.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
	// Upgrade status of the Cache.
	UpgradeStatus CacheUpgradeStatusResponsePtrInput `pulumi:"upgradeStatus"`
}

func (CacheResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheResponseProperties)(nil)).Elem()
}

func (i CacheResponsePropertiesArgs) ToCacheResponsePropertiesOutput() CacheResponsePropertiesOutput {
	return i.ToCacheResponsePropertiesOutputWithContext(context.Background())
}

func (i CacheResponsePropertiesArgs) ToCacheResponsePropertiesOutputWithContext(ctx context.Context) CacheResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheResponsePropertiesOutput)
}

func (i CacheResponsePropertiesArgs) ToCacheResponsePropertiesPtrOutput() CacheResponsePropertiesPtrOutput {
	return i.ToCacheResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i CacheResponsePropertiesArgs) ToCacheResponsePropertiesPtrOutputWithContext(ctx context.Context) CacheResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheResponsePropertiesOutput).ToCacheResponsePropertiesPtrOutputWithContext(ctx)
}

// CacheResponsePropertiesPtrInput is an input type that accepts CacheResponsePropertiesArgs, CacheResponsePropertiesPtr and CacheResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `CacheResponsePropertiesPtrInput` via:
//
//          CacheResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type CacheResponsePropertiesPtrInput interface {
	pulumi.Input

	ToCacheResponsePropertiesPtrOutput() CacheResponsePropertiesPtrOutput
	ToCacheResponsePropertiesPtrOutputWithContext(context.Context) CacheResponsePropertiesPtrOutput
}

type cacheResponsePropertiesPtrType CacheResponsePropertiesArgs

func CacheResponsePropertiesPtr(v *CacheResponsePropertiesArgs) CacheResponsePropertiesPtrInput {
	return (*cacheResponsePropertiesPtrType)(v)
}

func (*cacheResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheResponseProperties)(nil)).Elem()
}

func (i *cacheResponsePropertiesPtrType) ToCacheResponsePropertiesPtrOutput() CacheResponsePropertiesPtrOutput {
	return i.ToCacheResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *cacheResponsePropertiesPtrType) ToCacheResponsePropertiesPtrOutputWithContext(ctx context.Context) CacheResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheResponsePropertiesPtrOutput)
}

// Properties of the Cache.
type CacheResponsePropertiesOutput struct{ *pulumi.OutputState }

func (CacheResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheResponseProperties)(nil)).Elem()
}

func (o CacheResponsePropertiesOutput) ToCacheResponsePropertiesOutput() CacheResponsePropertiesOutput {
	return o
}

func (o CacheResponsePropertiesOutput) ToCacheResponsePropertiesOutputWithContext(ctx context.Context) CacheResponsePropertiesOutput {
	return o
}

func (o CacheResponsePropertiesOutput) ToCacheResponsePropertiesPtrOutput() CacheResponsePropertiesPtrOutput {
	return o.ToCacheResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o CacheResponsePropertiesOutput) ToCacheResponsePropertiesPtrOutputWithContext(ctx context.Context) CacheResponsePropertiesPtrOutput {
	return o.ApplyT(func(v CacheResponseProperties) *CacheResponseProperties {
		return &v
	}).(CacheResponsePropertiesPtrOutput)
}

// The size of this Cache, in GB.
func (o CacheResponsePropertiesOutput) CacheSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CacheResponseProperties) *int { return v.CacheSizeGB }).(pulumi.IntPtrOutput)
}

// Health of the Cache.
func (o CacheResponsePropertiesOutput) Health() CacheHealthResponseOutput {
	return o.ApplyT(func(v CacheResponseProperties) CacheHealthResponse { return v.Health }).(CacheHealthResponseOutput)
}

// Array of IP addresses that can be used by clients mounting this Cache.
func (o CacheResponsePropertiesOutput) MountAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CacheResponseProperties) []string { return v.MountAddresses }).(pulumi.StringArrayOutput)
}

// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
func (o CacheResponsePropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheResponseProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Subnet used for the Cache.
func (o CacheResponsePropertiesOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheResponseProperties) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// Upgrade status of the Cache.
func (o CacheResponsePropertiesOutput) UpgradeStatus() CacheUpgradeStatusResponsePtrOutput {
	return o.ApplyT(func(v CacheResponseProperties) *CacheUpgradeStatusResponse { return v.UpgradeStatus }).(CacheUpgradeStatusResponsePtrOutput)
}

type CacheResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (CacheResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheResponseProperties)(nil)).Elem()
}

func (o CacheResponsePropertiesPtrOutput) ToCacheResponsePropertiesPtrOutput() CacheResponsePropertiesPtrOutput {
	return o
}

func (o CacheResponsePropertiesPtrOutput) ToCacheResponsePropertiesPtrOutputWithContext(ctx context.Context) CacheResponsePropertiesPtrOutput {
	return o
}

func (o CacheResponsePropertiesPtrOutput) Elem() CacheResponsePropertiesOutput {
	return o.ApplyT(func(v *CacheResponseProperties) CacheResponseProperties { return *v }).(CacheResponsePropertiesOutput)
}

// The size of this Cache, in GB.
func (o CacheResponsePropertiesPtrOutput) CacheSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CacheResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.CacheSizeGB
	}).(pulumi.IntPtrOutput)
}

// Health of the Cache.
func (o CacheResponsePropertiesPtrOutput) Health() CacheHealthResponsePtrOutput {
	return o.ApplyT(func(v *CacheResponseProperties) *CacheHealthResponse {
		if v == nil {
			return nil
		}
		return &v.Health
	}).(CacheHealthResponsePtrOutput)
}

// Array of IP addresses that can be used by clients mounting this Cache.
func (o CacheResponsePropertiesPtrOutput) MountAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CacheResponseProperties) []string {
		if v == nil {
			return nil
		}
		return v.MountAddresses
	}).(pulumi.StringArrayOutput)
}

// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
func (o CacheResponsePropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Subnet used for the Cache.
func (o CacheResponsePropertiesPtrOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(pulumi.StringPtrOutput)
}

// Upgrade status of the Cache.
func (o CacheResponsePropertiesPtrOutput) UpgradeStatus() CacheUpgradeStatusResponsePtrOutput {
	return o.ApplyT(func(v *CacheResponseProperties) *CacheUpgradeStatusResponse {
		if v == nil {
			return nil
		}
		return v.UpgradeStatus
	}).(CacheUpgradeStatusResponsePtrOutput)
}

// Properties describing the software upgrade state of the Cache.
type CacheUpgradeStatus struct {
}

// CacheUpgradeStatusInput is an input type that accepts CacheUpgradeStatusArgs and CacheUpgradeStatusOutput values.
// You can construct a concrete instance of `CacheUpgradeStatusInput` via:
//
//          CacheUpgradeStatusArgs{...}
type CacheUpgradeStatusInput interface {
	pulumi.Input

	ToCacheUpgradeStatusOutput() CacheUpgradeStatusOutput
	ToCacheUpgradeStatusOutputWithContext(context.Context) CacheUpgradeStatusOutput
}

// Properties describing the software upgrade state of the Cache.
type CacheUpgradeStatusArgs struct {
}

func (CacheUpgradeStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheUpgradeStatus)(nil)).Elem()
}

func (i CacheUpgradeStatusArgs) ToCacheUpgradeStatusOutput() CacheUpgradeStatusOutput {
	return i.ToCacheUpgradeStatusOutputWithContext(context.Background())
}

func (i CacheUpgradeStatusArgs) ToCacheUpgradeStatusOutputWithContext(ctx context.Context) CacheUpgradeStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheUpgradeStatusOutput)
}

func (i CacheUpgradeStatusArgs) ToCacheUpgradeStatusPtrOutput() CacheUpgradeStatusPtrOutput {
	return i.ToCacheUpgradeStatusPtrOutputWithContext(context.Background())
}

func (i CacheUpgradeStatusArgs) ToCacheUpgradeStatusPtrOutputWithContext(ctx context.Context) CacheUpgradeStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheUpgradeStatusOutput).ToCacheUpgradeStatusPtrOutputWithContext(ctx)
}

// CacheUpgradeStatusPtrInput is an input type that accepts CacheUpgradeStatusArgs, CacheUpgradeStatusPtr and CacheUpgradeStatusPtrOutput values.
// You can construct a concrete instance of `CacheUpgradeStatusPtrInput` via:
//
//          CacheUpgradeStatusArgs{...}
//
//  or:
//
//          nil
type CacheUpgradeStatusPtrInput interface {
	pulumi.Input

	ToCacheUpgradeStatusPtrOutput() CacheUpgradeStatusPtrOutput
	ToCacheUpgradeStatusPtrOutputWithContext(context.Context) CacheUpgradeStatusPtrOutput
}

type cacheUpgradeStatusPtrType CacheUpgradeStatusArgs

func CacheUpgradeStatusPtr(v *CacheUpgradeStatusArgs) CacheUpgradeStatusPtrInput {
	return (*cacheUpgradeStatusPtrType)(v)
}

func (*cacheUpgradeStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheUpgradeStatus)(nil)).Elem()
}

func (i *cacheUpgradeStatusPtrType) ToCacheUpgradeStatusPtrOutput() CacheUpgradeStatusPtrOutput {
	return i.ToCacheUpgradeStatusPtrOutputWithContext(context.Background())
}

func (i *cacheUpgradeStatusPtrType) ToCacheUpgradeStatusPtrOutputWithContext(ctx context.Context) CacheUpgradeStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheUpgradeStatusPtrOutput)
}

// Properties describing the software upgrade state of the Cache.
type CacheUpgradeStatusOutput struct{ *pulumi.OutputState }

func (CacheUpgradeStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheUpgradeStatus)(nil)).Elem()
}

func (o CacheUpgradeStatusOutput) ToCacheUpgradeStatusOutput() CacheUpgradeStatusOutput {
	return o
}

func (o CacheUpgradeStatusOutput) ToCacheUpgradeStatusOutputWithContext(ctx context.Context) CacheUpgradeStatusOutput {
	return o
}

func (o CacheUpgradeStatusOutput) ToCacheUpgradeStatusPtrOutput() CacheUpgradeStatusPtrOutput {
	return o.ToCacheUpgradeStatusPtrOutputWithContext(context.Background())
}

func (o CacheUpgradeStatusOutput) ToCacheUpgradeStatusPtrOutputWithContext(ctx context.Context) CacheUpgradeStatusPtrOutput {
	return o.ApplyT(func(v CacheUpgradeStatus) *CacheUpgradeStatus {
		return &v
	}).(CacheUpgradeStatusPtrOutput)
}

type CacheUpgradeStatusPtrOutput struct{ *pulumi.OutputState }

func (CacheUpgradeStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheUpgradeStatus)(nil)).Elem()
}

func (o CacheUpgradeStatusPtrOutput) ToCacheUpgradeStatusPtrOutput() CacheUpgradeStatusPtrOutput {
	return o
}

func (o CacheUpgradeStatusPtrOutput) ToCacheUpgradeStatusPtrOutputWithContext(ctx context.Context) CacheUpgradeStatusPtrOutput {
	return o
}

func (o CacheUpgradeStatusPtrOutput) Elem() CacheUpgradeStatusOutput {
	return o.ApplyT(func(v *CacheUpgradeStatus) CacheUpgradeStatus { return *v }).(CacheUpgradeStatusOutput)
}

// Properties describing the software upgrade state of the Cache.
type CacheUpgradeStatusResponse struct {
	// Version string of the firmware currently installed on this Cache.
	CurrentFirmwareVersion string `pulumi:"currentFirmwareVersion"`
	// Time at which the pending firmware update will automatically be installed on the Cache.
	FirmwareUpdateDeadline string `pulumi:"firmwareUpdateDeadline"`
	// True if there is a firmware update ready to install on this Cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.
	FirmwareUpdateStatus string `pulumi:"firmwareUpdateStatus"`
	// Time of the last successful firmware update.
	LastFirmwareUpdate string `pulumi:"lastFirmwareUpdate"`
	// When firmwareUpdateAvailable is true, this field holds the version string for the update.
	PendingFirmwareVersion string `pulumi:"pendingFirmwareVersion"`
}

// CacheUpgradeStatusResponseInput is an input type that accepts CacheUpgradeStatusResponseArgs and CacheUpgradeStatusResponseOutput values.
// You can construct a concrete instance of `CacheUpgradeStatusResponseInput` via:
//
//          CacheUpgradeStatusResponseArgs{...}
type CacheUpgradeStatusResponseInput interface {
	pulumi.Input

	ToCacheUpgradeStatusResponseOutput() CacheUpgradeStatusResponseOutput
	ToCacheUpgradeStatusResponseOutputWithContext(context.Context) CacheUpgradeStatusResponseOutput
}

// Properties describing the software upgrade state of the Cache.
type CacheUpgradeStatusResponseArgs struct {
	// Version string of the firmware currently installed on this Cache.
	CurrentFirmwareVersion pulumi.StringInput `pulumi:"currentFirmwareVersion"`
	// Time at which the pending firmware update will automatically be installed on the Cache.
	FirmwareUpdateDeadline pulumi.StringInput `pulumi:"firmwareUpdateDeadline"`
	// True if there is a firmware update ready to install on this Cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.
	FirmwareUpdateStatus pulumi.StringInput `pulumi:"firmwareUpdateStatus"`
	// Time of the last successful firmware update.
	LastFirmwareUpdate pulumi.StringInput `pulumi:"lastFirmwareUpdate"`
	// When firmwareUpdateAvailable is true, this field holds the version string for the update.
	PendingFirmwareVersion pulumi.StringInput `pulumi:"pendingFirmwareVersion"`
}

func (CacheUpgradeStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheUpgradeStatusResponse)(nil)).Elem()
}

func (i CacheUpgradeStatusResponseArgs) ToCacheUpgradeStatusResponseOutput() CacheUpgradeStatusResponseOutput {
	return i.ToCacheUpgradeStatusResponseOutputWithContext(context.Background())
}

func (i CacheUpgradeStatusResponseArgs) ToCacheUpgradeStatusResponseOutputWithContext(ctx context.Context) CacheUpgradeStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheUpgradeStatusResponseOutput)
}

func (i CacheUpgradeStatusResponseArgs) ToCacheUpgradeStatusResponsePtrOutput() CacheUpgradeStatusResponsePtrOutput {
	return i.ToCacheUpgradeStatusResponsePtrOutputWithContext(context.Background())
}

func (i CacheUpgradeStatusResponseArgs) ToCacheUpgradeStatusResponsePtrOutputWithContext(ctx context.Context) CacheUpgradeStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheUpgradeStatusResponseOutput).ToCacheUpgradeStatusResponsePtrOutputWithContext(ctx)
}

// CacheUpgradeStatusResponsePtrInput is an input type that accepts CacheUpgradeStatusResponseArgs, CacheUpgradeStatusResponsePtr and CacheUpgradeStatusResponsePtrOutput values.
// You can construct a concrete instance of `CacheUpgradeStatusResponsePtrInput` via:
//
//          CacheUpgradeStatusResponseArgs{...}
//
//  or:
//
//          nil
type CacheUpgradeStatusResponsePtrInput interface {
	pulumi.Input

	ToCacheUpgradeStatusResponsePtrOutput() CacheUpgradeStatusResponsePtrOutput
	ToCacheUpgradeStatusResponsePtrOutputWithContext(context.Context) CacheUpgradeStatusResponsePtrOutput
}

type cacheUpgradeStatusResponsePtrType CacheUpgradeStatusResponseArgs

func CacheUpgradeStatusResponsePtr(v *CacheUpgradeStatusResponseArgs) CacheUpgradeStatusResponsePtrInput {
	return (*cacheUpgradeStatusResponsePtrType)(v)
}

func (*cacheUpgradeStatusResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheUpgradeStatusResponse)(nil)).Elem()
}

func (i *cacheUpgradeStatusResponsePtrType) ToCacheUpgradeStatusResponsePtrOutput() CacheUpgradeStatusResponsePtrOutput {
	return i.ToCacheUpgradeStatusResponsePtrOutputWithContext(context.Background())
}

func (i *cacheUpgradeStatusResponsePtrType) ToCacheUpgradeStatusResponsePtrOutputWithContext(ctx context.Context) CacheUpgradeStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheUpgradeStatusResponsePtrOutput)
}

// Properties describing the software upgrade state of the Cache.
type CacheUpgradeStatusResponseOutput struct{ *pulumi.OutputState }

func (CacheUpgradeStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheUpgradeStatusResponse)(nil)).Elem()
}

func (o CacheUpgradeStatusResponseOutput) ToCacheUpgradeStatusResponseOutput() CacheUpgradeStatusResponseOutput {
	return o
}

func (o CacheUpgradeStatusResponseOutput) ToCacheUpgradeStatusResponseOutputWithContext(ctx context.Context) CacheUpgradeStatusResponseOutput {
	return o
}

func (o CacheUpgradeStatusResponseOutput) ToCacheUpgradeStatusResponsePtrOutput() CacheUpgradeStatusResponsePtrOutput {
	return o.ToCacheUpgradeStatusResponsePtrOutputWithContext(context.Background())
}

func (o CacheUpgradeStatusResponseOutput) ToCacheUpgradeStatusResponsePtrOutputWithContext(ctx context.Context) CacheUpgradeStatusResponsePtrOutput {
	return o.ApplyT(func(v CacheUpgradeStatusResponse) *CacheUpgradeStatusResponse {
		return &v
	}).(CacheUpgradeStatusResponsePtrOutput)
}

// Version string of the firmware currently installed on this Cache.
func (o CacheUpgradeStatusResponseOutput) CurrentFirmwareVersion() pulumi.StringOutput {
	return o.ApplyT(func(v CacheUpgradeStatusResponse) string { return v.CurrentFirmwareVersion }).(pulumi.StringOutput)
}

// Time at which the pending firmware update will automatically be installed on the Cache.
func (o CacheUpgradeStatusResponseOutput) FirmwareUpdateDeadline() pulumi.StringOutput {
	return o.ApplyT(func(v CacheUpgradeStatusResponse) string { return v.FirmwareUpdateDeadline }).(pulumi.StringOutput)
}

// True if there is a firmware update ready to install on this Cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.
func (o CacheUpgradeStatusResponseOutput) FirmwareUpdateStatus() pulumi.StringOutput {
	return o.ApplyT(func(v CacheUpgradeStatusResponse) string { return v.FirmwareUpdateStatus }).(pulumi.StringOutput)
}

// Time of the last successful firmware update.
func (o CacheUpgradeStatusResponseOutput) LastFirmwareUpdate() pulumi.StringOutput {
	return o.ApplyT(func(v CacheUpgradeStatusResponse) string { return v.LastFirmwareUpdate }).(pulumi.StringOutput)
}

// When firmwareUpdateAvailable is true, this field holds the version string for the update.
func (o CacheUpgradeStatusResponseOutput) PendingFirmwareVersion() pulumi.StringOutput {
	return o.ApplyT(func(v CacheUpgradeStatusResponse) string { return v.PendingFirmwareVersion }).(pulumi.StringOutput)
}

type CacheUpgradeStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (CacheUpgradeStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheUpgradeStatusResponse)(nil)).Elem()
}

func (o CacheUpgradeStatusResponsePtrOutput) ToCacheUpgradeStatusResponsePtrOutput() CacheUpgradeStatusResponsePtrOutput {
	return o
}

func (o CacheUpgradeStatusResponsePtrOutput) ToCacheUpgradeStatusResponsePtrOutputWithContext(ctx context.Context) CacheUpgradeStatusResponsePtrOutput {
	return o
}

func (o CacheUpgradeStatusResponsePtrOutput) Elem() CacheUpgradeStatusResponseOutput {
	return o.ApplyT(func(v *CacheUpgradeStatusResponse) CacheUpgradeStatusResponse { return *v }).(CacheUpgradeStatusResponseOutput)
}

// Version string of the firmware currently installed on this Cache.
func (o CacheUpgradeStatusResponsePtrOutput) CurrentFirmwareVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheUpgradeStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CurrentFirmwareVersion
	}).(pulumi.StringPtrOutput)
}

// Time at which the pending firmware update will automatically be installed on the Cache.
func (o CacheUpgradeStatusResponsePtrOutput) FirmwareUpdateDeadline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheUpgradeStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.FirmwareUpdateDeadline
	}).(pulumi.StringPtrOutput)
}

// True if there is a firmware update ready to install on this Cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.
func (o CacheUpgradeStatusResponsePtrOutput) FirmwareUpdateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheUpgradeStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.FirmwareUpdateStatus
	}).(pulumi.StringPtrOutput)
}

// Time of the last successful firmware update.
func (o CacheUpgradeStatusResponsePtrOutput) LastFirmwareUpdate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheUpgradeStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastFirmwareUpdate
	}).(pulumi.StringPtrOutput)
}

// When firmwareUpdateAvailable is true, this field holds the version string for the update.
func (o CacheUpgradeStatusResponsePtrOutput) PendingFirmwareVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheUpgradeStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PendingFirmwareVersion
	}).(pulumi.StringPtrOutput)
}

// Storage container for use as a CLFS Storage Target.
type ClfsTarget struct {
	// Resource ID of storage container.
	Target *string `pulumi:"target"`
}

// ClfsTargetInput is an input type that accepts ClfsTargetArgs and ClfsTargetOutput values.
// You can construct a concrete instance of `ClfsTargetInput` via:
//
//          ClfsTargetArgs{...}
type ClfsTargetInput interface {
	pulumi.Input

	ToClfsTargetOutput() ClfsTargetOutput
	ToClfsTargetOutputWithContext(context.Context) ClfsTargetOutput
}

// Storage container for use as a CLFS Storage Target.
type ClfsTargetArgs struct {
	// Resource ID of storage container.
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (ClfsTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClfsTarget)(nil)).Elem()
}

func (i ClfsTargetArgs) ToClfsTargetOutput() ClfsTargetOutput {
	return i.ToClfsTargetOutputWithContext(context.Background())
}

func (i ClfsTargetArgs) ToClfsTargetOutputWithContext(ctx context.Context) ClfsTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClfsTargetOutput)
}

func (i ClfsTargetArgs) ToClfsTargetPtrOutput() ClfsTargetPtrOutput {
	return i.ToClfsTargetPtrOutputWithContext(context.Background())
}

func (i ClfsTargetArgs) ToClfsTargetPtrOutputWithContext(ctx context.Context) ClfsTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClfsTargetOutput).ToClfsTargetPtrOutputWithContext(ctx)
}

// ClfsTargetPtrInput is an input type that accepts ClfsTargetArgs, ClfsTargetPtr and ClfsTargetPtrOutput values.
// You can construct a concrete instance of `ClfsTargetPtrInput` via:
//
//          ClfsTargetArgs{...}
//
//  or:
//
//          nil
type ClfsTargetPtrInput interface {
	pulumi.Input

	ToClfsTargetPtrOutput() ClfsTargetPtrOutput
	ToClfsTargetPtrOutputWithContext(context.Context) ClfsTargetPtrOutput
}

type clfsTargetPtrType ClfsTargetArgs

func ClfsTargetPtr(v *ClfsTargetArgs) ClfsTargetPtrInput {
	return (*clfsTargetPtrType)(v)
}

func (*clfsTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClfsTarget)(nil)).Elem()
}

func (i *clfsTargetPtrType) ToClfsTargetPtrOutput() ClfsTargetPtrOutput {
	return i.ToClfsTargetPtrOutputWithContext(context.Background())
}

func (i *clfsTargetPtrType) ToClfsTargetPtrOutputWithContext(ctx context.Context) ClfsTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClfsTargetPtrOutput)
}

// Storage container for use as a CLFS Storage Target.
type ClfsTargetOutput struct{ *pulumi.OutputState }

func (ClfsTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClfsTarget)(nil)).Elem()
}

func (o ClfsTargetOutput) ToClfsTargetOutput() ClfsTargetOutput {
	return o
}

func (o ClfsTargetOutput) ToClfsTargetOutputWithContext(ctx context.Context) ClfsTargetOutput {
	return o
}

func (o ClfsTargetOutput) ToClfsTargetPtrOutput() ClfsTargetPtrOutput {
	return o.ToClfsTargetPtrOutputWithContext(context.Background())
}

func (o ClfsTargetOutput) ToClfsTargetPtrOutputWithContext(ctx context.Context) ClfsTargetPtrOutput {
	return o.ApplyT(func(v ClfsTarget) *ClfsTarget {
		return &v
	}).(ClfsTargetPtrOutput)
}

// Resource ID of storage container.
func (o ClfsTargetOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClfsTarget) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type ClfsTargetPtrOutput struct{ *pulumi.OutputState }

func (ClfsTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClfsTarget)(nil)).Elem()
}

func (o ClfsTargetPtrOutput) ToClfsTargetPtrOutput() ClfsTargetPtrOutput {
	return o
}

func (o ClfsTargetPtrOutput) ToClfsTargetPtrOutputWithContext(ctx context.Context) ClfsTargetPtrOutput {
	return o
}

func (o ClfsTargetPtrOutput) Elem() ClfsTargetOutput {
	return o.ApplyT(func(v *ClfsTarget) ClfsTarget { return *v }).(ClfsTargetOutput)
}

// Resource ID of storage container.
func (o ClfsTargetPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClfsTarget) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

// Storage container for use as a CLFS Storage Target.
type ClfsTargetResponse struct {
	// Resource ID of storage container.
	Target *string `pulumi:"target"`
}

// ClfsTargetResponseInput is an input type that accepts ClfsTargetResponseArgs and ClfsTargetResponseOutput values.
// You can construct a concrete instance of `ClfsTargetResponseInput` via:
//
//          ClfsTargetResponseArgs{...}
type ClfsTargetResponseInput interface {
	pulumi.Input

	ToClfsTargetResponseOutput() ClfsTargetResponseOutput
	ToClfsTargetResponseOutputWithContext(context.Context) ClfsTargetResponseOutput
}

// Storage container for use as a CLFS Storage Target.
type ClfsTargetResponseArgs struct {
	// Resource ID of storage container.
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (ClfsTargetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClfsTargetResponse)(nil)).Elem()
}

func (i ClfsTargetResponseArgs) ToClfsTargetResponseOutput() ClfsTargetResponseOutput {
	return i.ToClfsTargetResponseOutputWithContext(context.Background())
}

func (i ClfsTargetResponseArgs) ToClfsTargetResponseOutputWithContext(ctx context.Context) ClfsTargetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClfsTargetResponseOutput)
}

func (i ClfsTargetResponseArgs) ToClfsTargetResponsePtrOutput() ClfsTargetResponsePtrOutput {
	return i.ToClfsTargetResponsePtrOutputWithContext(context.Background())
}

func (i ClfsTargetResponseArgs) ToClfsTargetResponsePtrOutputWithContext(ctx context.Context) ClfsTargetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClfsTargetResponseOutput).ToClfsTargetResponsePtrOutputWithContext(ctx)
}

// ClfsTargetResponsePtrInput is an input type that accepts ClfsTargetResponseArgs, ClfsTargetResponsePtr and ClfsTargetResponsePtrOutput values.
// You can construct a concrete instance of `ClfsTargetResponsePtrInput` via:
//
//          ClfsTargetResponseArgs{...}
//
//  or:
//
//          nil
type ClfsTargetResponsePtrInput interface {
	pulumi.Input

	ToClfsTargetResponsePtrOutput() ClfsTargetResponsePtrOutput
	ToClfsTargetResponsePtrOutputWithContext(context.Context) ClfsTargetResponsePtrOutput
}

type clfsTargetResponsePtrType ClfsTargetResponseArgs

func ClfsTargetResponsePtr(v *ClfsTargetResponseArgs) ClfsTargetResponsePtrInput {
	return (*clfsTargetResponsePtrType)(v)
}

func (*clfsTargetResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClfsTargetResponse)(nil)).Elem()
}

func (i *clfsTargetResponsePtrType) ToClfsTargetResponsePtrOutput() ClfsTargetResponsePtrOutput {
	return i.ToClfsTargetResponsePtrOutputWithContext(context.Background())
}

func (i *clfsTargetResponsePtrType) ToClfsTargetResponsePtrOutputWithContext(ctx context.Context) ClfsTargetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClfsTargetResponsePtrOutput)
}

// Storage container for use as a CLFS Storage Target.
type ClfsTargetResponseOutput struct{ *pulumi.OutputState }

func (ClfsTargetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClfsTargetResponse)(nil)).Elem()
}

func (o ClfsTargetResponseOutput) ToClfsTargetResponseOutput() ClfsTargetResponseOutput {
	return o
}

func (o ClfsTargetResponseOutput) ToClfsTargetResponseOutputWithContext(ctx context.Context) ClfsTargetResponseOutput {
	return o
}

func (o ClfsTargetResponseOutput) ToClfsTargetResponsePtrOutput() ClfsTargetResponsePtrOutput {
	return o.ToClfsTargetResponsePtrOutputWithContext(context.Background())
}

func (o ClfsTargetResponseOutput) ToClfsTargetResponsePtrOutputWithContext(ctx context.Context) ClfsTargetResponsePtrOutput {
	return o.ApplyT(func(v ClfsTargetResponse) *ClfsTargetResponse {
		return &v
	}).(ClfsTargetResponsePtrOutput)
}

// Resource ID of storage container.
func (o ClfsTargetResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClfsTargetResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type ClfsTargetResponsePtrOutput struct{ *pulumi.OutputState }

func (ClfsTargetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClfsTargetResponse)(nil)).Elem()
}

func (o ClfsTargetResponsePtrOutput) ToClfsTargetResponsePtrOutput() ClfsTargetResponsePtrOutput {
	return o
}

func (o ClfsTargetResponsePtrOutput) ToClfsTargetResponsePtrOutputWithContext(ctx context.Context) ClfsTargetResponsePtrOutput {
	return o
}

func (o ClfsTargetResponsePtrOutput) Elem() ClfsTargetResponseOutput {
	return o.ApplyT(func(v *ClfsTargetResponse) ClfsTargetResponse { return *v }).(ClfsTargetResponseOutput)
}

// Resource ID of storage container.
func (o ClfsTargetResponsePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClfsTargetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

// A namespace junction.
type NamespaceJunction struct {
	// Namespace path on a Cache for a Storage Target.
	NamespacePath *string `pulumi:"namespacePath"`
	// NFS export where targetPath exists.
	NfsExport *string `pulumi:"nfsExport"`
	// Path in Storage Target to which namespacePath points.
	TargetPath *string `pulumi:"targetPath"`
}

// NamespaceJunctionInput is an input type that accepts NamespaceJunctionArgs and NamespaceJunctionOutput values.
// You can construct a concrete instance of `NamespaceJunctionInput` via:
//
//          NamespaceJunctionArgs{...}
type NamespaceJunctionInput interface {
	pulumi.Input

	ToNamespaceJunctionOutput() NamespaceJunctionOutput
	ToNamespaceJunctionOutputWithContext(context.Context) NamespaceJunctionOutput
}

// A namespace junction.
type NamespaceJunctionArgs struct {
	// Namespace path on a Cache for a Storage Target.
	NamespacePath pulumi.StringPtrInput `pulumi:"namespacePath"`
	// NFS export where targetPath exists.
	NfsExport pulumi.StringPtrInput `pulumi:"nfsExport"`
	// Path in Storage Target to which namespacePath points.
	TargetPath pulumi.StringPtrInput `pulumi:"targetPath"`
}

func (NamespaceJunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceJunction)(nil)).Elem()
}

func (i NamespaceJunctionArgs) ToNamespaceJunctionOutput() NamespaceJunctionOutput {
	return i.ToNamespaceJunctionOutputWithContext(context.Background())
}

func (i NamespaceJunctionArgs) ToNamespaceJunctionOutputWithContext(ctx context.Context) NamespaceJunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceJunctionOutput)
}

// NamespaceJunctionArrayInput is an input type that accepts NamespaceJunctionArray and NamespaceJunctionArrayOutput values.
// You can construct a concrete instance of `NamespaceJunctionArrayInput` via:
//
//          NamespaceJunctionArray{ NamespaceJunctionArgs{...} }
type NamespaceJunctionArrayInput interface {
	pulumi.Input

	ToNamespaceJunctionArrayOutput() NamespaceJunctionArrayOutput
	ToNamespaceJunctionArrayOutputWithContext(context.Context) NamespaceJunctionArrayOutput
}

type NamespaceJunctionArray []NamespaceJunctionInput

func (NamespaceJunctionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NamespaceJunction)(nil)).Elem()
}

func (i NamespaceJunctionArray) ToNamespaceJunctionArrayOutput() NamespaceJunctionArrayOutput {
	return i.ToNamespaceJunctionArrayOutputWithContext(context.Background())
}

func (i NamespaceJunctionArray) ToNamespaceJunctionArrayOutputWithContext(ctx context.Context) NamespaceJunctionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceJunctionArrayOutput)
}

// A namespace junction.
type NamespaceJunctionOutput struct{ *pulumi.OutputState }

func (NamespaceJunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceJunction)(nil)).Elem()
}

func (o NamespaceJunctionOutput) ToNamespaceJunctionOutput() NamespaceJunctionOutput {
	return o
}

func (o NamespaceJunctionOutput) ToNamespaceJunctionOutputWithContext(ctx context.Context) NamespaceJunctionOutput {
	return o
}

// Namespace path on a Cache for a Storage Target.
func (o NamespaceJunctionOutput) NamespacePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceJunction) *string { return v.NamespacePath }).(pulumi.StringPtrOutput)
}

// NFS export where targetPath exists.
func (o NamespaceJunctionOutput) NfsExport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceJunction) *string { return v.NfsExport }).(pulumi.StringPtrOutput)
}

// Path in Storage Target to which namespacePath points.
func (o NamespaceJunctionOutput) TargetPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceJunction) *string { return v.TargetPath }).(pulumi.StringPtrOutput)
}

type NamespaceJunctionArrayOutput struct{ *pulumi.OutputState }

func (NamespaceJunctionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NamespaceJunction)(nil)).Elem()
}

func (o NamespaceJunctionArrayOutput) ToNamespaceJunctionArrayOutput() NamespaceJunctionArrayOutput {
	return o
}

func (o NamespaceJunctionArrayOutput) ToNamespaceJunctionArrayOutputWithContext(ctx context.Context) NamespaceJunctionArrayOutput {
	return o
}

func (o NamespaceJunctionArrayOutput) Index(i pulumi.IntInput) NamespaceJunctionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NamespaceJunction {
		return vs[0].([]NamespaceJunction)[vs[1].(int)]
	}).(NamespaceJunctionOutput)
}

// A namespace junction.
type NamespaceJunctionResponse struct {
	// Namespace path on a Cache for a Storage Target.
	NamespacePath *string `pulumi:"namespacePath"`
	// NFS export where targetPath exists.
	NfsExport *string `pulumi:"nfsExport"`
	// Path in Storage Target to which namespacePath points.
	TargetPath *string `pulumi:"targetPath"`
}

// NamespaceJunctionResponseInput is an input type that accepts NamespaceJunctionResponseArgs and NamespaceJunctionResponseOutput values.
// You can construct a concrete instance of `NamespaceJunctionResponseInput` via:
//
//          NamespaceJunctionResponseArgs{...}
type NamespaceJunctionResponseInput interface {
	pulumi.Input

	ToNamespaceJunctionResponseOutput() NamespaceJunctionResponseOutput
	ToNamespaceJunctionResponseOutputWithContext(context.Context) NamespaceJunctionResponseOutput
}

// A namespace junction.
type NamespaceJunctionResponseArgs struct {
	// Namespace path on a Cache for a Storage Target.
	NamespacePath pulumi.StringPtrInput `pulumi:"namespacePath"`
	// NFS export where targetPath exists.
	NfsExport pulumi.StringPtrInput `pulumi:"nfsExport"`
	// Path in Storage Target to which namespacePath points.
	TargetPath pulumi.StringPtrInput `pulumi:"targetPath"`
}

func (NamespaceJunctionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceJunctionResponse)(nil)).Elem()
}

func (i NamespaceJunctionResponseArgs) ToNamespaceJunctionResponseOutput() NamespaceJunctionResponseOutput {
	return i.ToNamespaceJunctionResponseOutputWithContext(context.Background())
}

func (i NamespaceJunctionResponseArgs) ToNamespaceJunctionResponseOutputWithContext(ctx context.Context) NamespaceJunctionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceJunctionResponseOutput)
}

// NamespaceJunctionResponseArrayInput is an input type that accepts NamespaceJunctionResponseArray and NamespaceJunctionResponseArrayOutput values.
// You can construct a concrete instance of `NamespaceJunctionResponseArrayInput` via:
//
//          NamespaceJunctionResponseArray{ NamespaceJunctionResponseArgs{...} }
type NamespaceJunctionResponseArrayInput interface {
	pulumi.Input

	ToNamespaceJunctionResponseArrayOutput() NamespaceJunctionResponseArrayOutput
	ToNamespaceJunctionResponseArrayOutputWithContext(context.Context) NamespaceJunctionResponseArrayOutput
}

type NamespaceJunctionResponseArray []NamespaceJunctionResponseInput

func (NamespaceJunctionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NamespaceJunctionResponse)(nil)).Elem()
}

func (i NamespaceJunctionResponseArray) ToNamespaceJunctionResponseArrayOutput() NamespaceJunctionResponseArrayOutput {
	return i.ToNamespaceJunctionResponseArrayOutputWithContext(context.Background())
}

func (i NamespaceJunctionResponseArray) ToNamespaceJunctionResponseArrayOutputWithContext(ctx context.Context) NamespaceJunctionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceJunctionResponseArrayOutput)
}

// A namespace junction.
type NamespaceJunctionResponseOutput struct{ *pulumi.OutputState }

func (NamespaceJunctionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceJunctionResponse)(nil)).Elem()
}

func (o NamespaceJunctionResponseOutput) ToNamespaceJunctionResponseOutput() NamespaceJunctionResponseOutput {
	return o
}

func (o NamespaceJunctionResponseOutput) ToNamespaceJunctionResponseOutputWithContext(ctx context.Context) NamespaceJunctionResponseOutput {
	return o
}

// Namespace path on a Cache for a Storage Target.
func (o NamespaceJunctionResponseOutput) NamespacePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceJunctionResponse) *string { return v.NamespacePath }).(pulumi.StringPtrOutput)
}

// NFS export where targetPath exists.
func (o NamespaceJunctionResponseOutput) NfsExport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceJunctionResponse) *string { return v.NfsExport }).(pulumi.StringPtrOutput)
}

// Path in Storage Target to which namespacePath points.
func (o NamespaceJunctionResponseOutput) TargetPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceJunctionResponse) *string { return v.TargetPath }).(pulumi.StringPtrOutput)
}

type NamespaceJunctionResponseArrayOutput struct{ *pulumi.OutputState }

func (NamespaceJunctionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NamespaceJunctionResponse)(nil)).Elem()
}

func (o NamespaceJunctionResponseArrayOutput) ToNamespaceJunctionResponseArrayOutput() NamespaceJunctionResponseArrayOutput {
	return o
}

func (o NamespaceJunctionResponseArrayOutput) ToNamespaceJunctionResponseArrayOutputWithContext(ctx context.Context) NamespaceJunctionResponseArrayOutput {
	return o
}

func (o NamespaceJunctionResponseArrayOutput) Index(i pulumi.IntInput) NamespaceJunctionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NamespaceJunctionResponse {
		return vs[0].([]NamespaceJunctionResponse)[vs[1].(int)]
	}).(NamespaceJunctionResponseOutput)
}

// An NFSv3 mount point for use as a Storage Target.
type Nfs3Target struct {
	// IP address or host name of an NFSv3 host (e.g., 10.0.44.44).
	Target *string `pulumi:"target"`
	// Identifies the primary usage model to be used for this Storage Target. Get choices from .../usageModels
	UsageModel *string `pulumi:"usageModel"`
}

// Nfs3TargetInput is an input type that accepts Nfs3TargetArgs and Nfs3TargetOutput values.
// You can construct a concrete instance of `Nfs3TargetInput` via:
//
//          Nfs3TargetArgs{...}
type Nfs3TargetInput interface {
	pulumi.Input

	ToNfs3TargetOutput() Nfs3TargetOutput
	ToNfs3TargetOutputWithContext(context.Context) Nfs3TargetOutput
}

// An NFSv3 mount point for use as a Storage Target.
type Nfs3TargetArgs struct {
	// IP address or host name of an NFSv3 host (e.g., 10.0.44.44).
	Target pulumi.StringPtrInput `pulumi:"target"`
	// Identifies the primary usage model to be used for this Storage Target. Get choices from .../usageModels
	UsageModel pulumi.StringPtrInput `pulumi:"usageModel"`
}

func (Nfs3TargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Nfs3Target)(nil)).Elem()
}

func (i Nfs3TargetArgs) ToNfs3TargetOutput() Nfs3TargetOutput {
	return i.ToNfs3TargetOutputWithContext(context.Background())
}

func (i Nfs3TargetArgs) ToNfs3TargetOutputWithContext(ctx context.Context) Nfs3TargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Nfs3TargetOutput)
}

func (i Nfs3TargetArgs) ToNfs3TargetPtrOutput() Nfs3TargetPtrOutput {
	return i.ToNfs3TargetPtrOutputWithContext(context.Background())
}

func (i Nfs3TargetArgs) ToNfs3TargetPtrOutputWithContext(ctx context.Context) Nfs3TargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Nfs3TargetOutput).ToNfs3TargetPtrOutputWithContext(ctx)
}

// Nfs3TargetPtrInput is an input type that accepts Nfs3TargetArgs, Nfs3TargetPtr and Nfs3TargetPtrOutput values.
// You can construct a concrete instance of `Nfs3TargetPtrInput` via:
//
//          Nfs3TargetArgs{...}
//
//  or:
//
//          nil
type Nfs3TargetPtrInput interface {
	pulumi.Input

	ToNfs3TargetPtrOutput() Nfs3TargetPtrOutput
	ToNfs3TargetPtrOutputWithContext(context.Context) Nfs3TargetPtrOutput
}

type nfs3TargetPtrType Nfs3TargetArgs

func Nfs3TargetPtr(v *Nfs3TargetArgs) Nfs3TargetPtrInput {
	return (*nfs3TargetPtrType)(v)
}

func (*nfs3TargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Nfs3Target)(nil)).Elem()
}

func (i *nfs3TargetPtrType) ToNfs3TargetPtrOutput() Nfs3TargetPtrOutput {
	return i.ToNfs3TargetPtrOutputWithContext(context.Background())
}

func (i *nfs3TargetPtrType) ToNfs3TargetPtrOutputWithContext(ctx context.Context) Nfs3TargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Nfs3TargetPtrOutput)
}

// An NFSv3 mount point for use as a Storage Target.
type Nfs3TargetOutput struct{ *pulumi.OutputState }

func (Nfs3TargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Nfs3Target)(nil)).Elem()
}

func (o Nfs3TargetOutput) ToNfs3TargetOutput() Nfs3TargetOutput {
	return o
}

func (o Nfs3TargetOutput) ToNfs3TargetOutputWithContext(ctx context.Context) Nfs3TargetOutput {
	return o
}

func (o Nfs3TargetOutput) ToNfs3TargetPtrOutput() Nfs3TargetPtrOutput {
	return o.ToNfs3TargetPtrOutputWithContext(context.Background())
}

func (o Nfs3TargetOutput) ToNfs3TargetPtrOutputWithContext(ctx context.Context) Nfs3TargetPtrOutput {
	return o.ApplyT(func(v Nfs3Target) *Nfs3Target {
		return &v
	}).(Nfs3TargetPtrOutput)
}

// IP address or host name of an NFSv3 host (e.g., 10.0.44.44).
func (o Nfs3TargetOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Nfs3Target) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// Identifies the primary usage model to be used for this Storage Target. Get choices from .../usageModels
func (o Nfs3TargetOutput) UsageModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Nfs3Target) *string { return v.UsageModel }).(pulumi.StringPtrOutput)
}

type Nfs3TargetPtrOutput struct{ *pulumi.OutputState }

func (Nfs3TargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Nfs3Target)(nil)).Elem()
}

func (o Nfs3TargetPtrOutput) ToNfs3TargetPtrOutput() Nfs3TargetPtrOutput {
	return o
}

func (o Nfs3TargetPtrOutput) ToNfs3TargetPtrOutputWithContext(ctx context.Context) Nfs3TargetPtrOutput {
	return o
}

func (o Nfs3TargetPtrOutput) Elem() Nfs3TargetOutput {
	return o.ApplyT(func(v *Nfs3Target) Nfs3Target { return *v }).(Nfs3TargetOutput)
}

// IP address or host name of an NFSv3 host (e.g., 10.0.44.44).
func (o Nfs3TargetPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Nfs3Target) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

// Identifies the primary usage model to be used for this Storage Target. Get choices from .../usageModels
func (o Nfs3TargetPtrOutput) UsageModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Nfs3Target) *string {
		if v == nil {
			return nil
		}
		return v.UsageModel
	}).(pulumi.StringPtrOutput)
}

// An NFSv3 mount point for use as a Storage Target.
type Nfs3TargetResponse struct {
	// IP address or host name of an NFSv3 host (e.g., 10.0.44.44).
	Target *string `pulumi:"target"`
	// Identifies the primary usage model to be used for this Storage Target. Get choices from .../usageModels
	UsageModel *string `pulumi:"usageModel"`
}

// Nfs3TargetResponseInput is an input type that accepts Nfs3TargetResponseArgs and Nfs3TargetResponseOutput values.
// You can construct a concrete instance of `Nfs3TargetResponseInput` via:
//
//          Nfs3TargetResponseArgs{...}
type Nfs3TargetResponseInput interface {
	pulumi.Input

	ToNfs3TargetResponseOutput() Nfs3TargetResponseOutput
	ToNfs3TargetResponseOutputWithContext(context.Context) Nfs3TargetResponseOutput
}

// An NFSv3 mount point for use as a Storage Target.
type Nfs3TargetResponseArgs struct {
	// IP address or host name of an NFSv3 host (e.g., 10.0.44.44).
	Target pulumi.StringPtrInput `pulumi:"target"`
	// Identifies the primary usage model to be used for this Storage Target. Get choices from .../usageModels
	UsageModel pulumi.StringPtrInput `pulumi:"usageModel"`
}

func (Nfs3TargetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Nfs3TargetResponse)(nil)).Elem()
}

func (i Nfs3TargetResponseArgs) ToNfs3TargetResponseOutput() Nfs3TargetResponseOutput {
	return i.ToNfs3TargetResponseOutputWithContext(context.Background())
}

func (i Nfs3TargetResponseArgs) ToNfs3TargetResponseOutputWithContext(ctx context.Context) Nfs3TargetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Nfs3TargetResponseOutput)
}

func (i Nfs3TargetResponseArgs) ToNfs3TargetResponsePtrOutput() Nfs3TargetResponsePtrOutput {
	return i.ToNfs3TargetResponsePtrOutputWithContext(context.Background())
}

func (i Nfs3TargetResponseArgs) ToNfs3TargetResponsePtrOutputWithContext(ctx context.Context) Nfs3TargetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Nfs3TargetResponseOutput).ToNfs3TargetResponsePtrOutputWithContext(ctx)
}

// Nfs3TargetResponsePtrInput is an input type that accepts Nfs3TargetResponseArgs, Nfs3TargetResponsePtr and Nfs3TargetResponsePtrOutput values.
// You can construct a concrete instance of `Nfs3TargetResponsePtrInput` via:
//
//          Nfs3TargetResponseArgs{...}
//
//  or:
//
//          nil
type Nfs3TargetResponsePtrInput interface {
	pulumi.Input

	ToNfs3TargetResponsePtrOutput() Nfs3TargetResponsePtrOutput
	ToNfs3TargetResponsePtrOutputWithContext(context.Context) Nfs3TargetResponsePtrOutput
}

type nfs3TargetResponsePtrType Nfs3TargetResponseArgs

func Nfs3TargetResponsePtr(v *Nfs3TargetResponseArgs) Nfs3TargetResponsePtrInput {
	return (*nfs3TargetResponsePtrType)(v)
}

func (*nfs3TargetResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Nfs3TargetResponse)(nil)).Elem()
}

func (i *nfs3TargetResponsePtrType) ToNfs3TargetResponsePtrOutput() Nfs3TargetResponsePtrOutput {
	return i.ToNfs3TargetResponsePtrOutputWithContext(context.Background())
}

func (i *nfs3TargetResponsePtrType) ToNfs3TargetResponsePtrOutputWithContext(ctx context.Context) Nfs3TargetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Nfs3TargetResponsePtrOutput)
}

// An NFSv3 mount point for use as a Storage Target.
type Nfs3TargetResponseOutput struct{ *pulumi.OutputState }

func (Nfs3TargetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Nfs3TargetResponse)(nil)).Elem()
}

func (o Nfs3TargetResponseOutput) ToNfs3TargetResponseOutput() Nfs3TargetResponseOutput {
	return o
}

func (o Nfs3TargetResponseOutput) ToNfs3TargetResponseOutputWithContext(ctx context.Context) Nfs3TargetResponseOutput {
	return o
}

func (o Nfs3TargetResponseOutput) ToNfs3TargetResponsePtrOutput() Nfs3TargetResponsePtrOutput {
	return o.ToNfs3TargetResponsePtrOutputWithContext(context.Background())
}

func (o Nfs3TargetResponseOutput) ToNfs3TargetResponsePtrOutputWithContext(ctx context.Context) Nfs3TargetResponsePtrOutput {
	return o.ApplyT(func(v Nfs3TargetResponse) *Nfs3TargetResponse {
		return &v
	}).(Nfs3TargetResponsePtrOutput)
}

// IP address or host name of an NFSv3 host (e.g., 10.0.44.44).
func (o Nfs3TargetResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Nfs3TargetResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// Identifies the primary usage model to be used for this Storage Target. Get choices from .../usageModels
func (o Nfs3TargetResponseOutput) UsageModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Nfs3TargetResponse) *string { return v.UsageModel }).(pulumi.StringPtrOutput)
}

type Nfs3TargetResponsePtrOutput struct{ *pulumi.OutputState }

func (Nfs3TargetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Nfs3TargetResponse)(nil)).Elem()
}

func (o Nfs3TargetResponsePtrOutput) ToNfs3TargetResponsePtrOutput() Nfs3TargetResponsePtrOutput {
	return o
}

func (o Nfs3TargetResponsePtrOutput) ToNfs3TargetResponsePtrOutputWithContext(ctx context.Context) Nfs3TargetResponsePtrOutput {
	return o
}

func (o Nfs3TargetResponsePtrOutput) Elem() Nfs3TargetResponseOutput {
	return o.ApplyT(func(v *Nfs3TargetResponse) Nfs3TargetResponse { return *v }).(Nfs3TargetResponseOutput)
}

// IP address or host name of an NFSv3 host (e.g., 10.0.44.44).
func (o Nfs3TargetResponsePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Nfs3TargetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

// Identifies the primary usage model to be used for this Storage Target. Get choices from .../usageModels
func (o Nfs3TargetResponsePtrOutput) UsageModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Nfs3TargetResponse) *string {
		if v == nil {
			return nil
		}
		return v.UsageModel
	}).(pulumi.StringPtrOutput)
}

// A storage system being cached by a Cache.
type StorageTargetType struct {
	// Name of the Storage Target.
	Name string `pulumi:"name"`
	// Properties of the Storage Target.
	Properties StorageTargetResponseProperties `pulumi:"properties"`
	// Type of the Storage Target; Microsoft.StorageCache/Cache/StorageTarget
	Type string `pulumi:"type"`
}

// StorageTargetTypeInput is an input type that accepts StorageTargetTypeArgs and StorageTargetTypeOutput values.
// You can construct a concrete instance of `StorageTargetTypeInput` via:
//
//          StorageTargetTypeArgs{...}
type StorageTargetTypeInput interface {
	pulumi.Input

	ToStorageTargetTypeOutput() StorageTargetTypeOutput
	ToStorageTargetTypeOutputWithContext(context.Context) StorageTargetTypeOutput
}

// A storage system being cached by a Cache.
type StorageTargetTypeArgs struct {
	// Name of the Storage Target.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the Storage Target.
	Properties StorageTargetResponsePropertiesInput `pulumi:"properties"`
	// Type of the Storage Target; Microsoft.StorageCache/Cache/StorageTarget
	Type pulumi.StringInput `pulumi:"type"`
}

func (StorageTargetTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageTargetType)(nil)).Elem()
}

func (i StorageTargetTypeArgs) ToStorageTargetTypeOutput() StorageTargetTypeOutput {
	return i.ToStorageTargetTypeOutputWithContext(context.Background())
}

func (i StorageTargetTypeArgs) ToStorageTargetTypeOutputWithContext(ctx context.Context) StorageTargetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageTargetTypeOutput)
}

// A storage system being cached by a Cache.
type StorageTargetTypeOutput struct{ *pulumi.OutputState }

func (StorageTargetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageTargetType)(nil)).Elem()
}

func (o StorageTargetTypeOutput) ToStorageTargetTypeOutput() StorageTargetTypeOutput {
	return o
}

func (o StorageTargetTypeOutput) ToStorageTargetTypeOutputWithContext(ctx context.Context) StorageTargetTypeOutput {
	return o
}

// Name of the Storage Target.
func (o StorageTargetTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StorageTargetType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the Storage Target.
func (o StorageTargetTypeOutput) Properties() StorageTargetResponsePropertiesOutput {
	return o.ApplyT(func(v StorageTargetType) StorageTargetResponseProperties { return v.Properties }).(StorageTargetResponsePropertiesOutput)
}

// Type of the Storage Target; Microsoft.StorageCache/Cache/StorageTarget
func (o StorageTargetTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StorageTargetType) string { return v.Type }).(pulumi.StringOutput)
}

// Properties of the Storage Target.
type StorageTargetProperties struct {
	// Properties when targetType is clfs.
	Clfs *ClfsTarget `pulumi:"clfs"`
	// List of Cache namespace junctions to target for namespace associations.
	Junctions []NamespaceJunction `pulumi:"junctions"`
	// Properties when targetType is nfs3.
	Nfs3 *Nfs3Target `pulumi:"nfs3"`
	// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
	ProvisioningState *string `pulumi:"provisioningState"`
	// Type of the Storage Target.
	TargetType *string `pulumi:"targetType"`
	// Properties when targetType is unknown.
	Unknown *UnknownTarget `pulumi:"unknown"`
}

// StorageTargetPropertiesInput is an input type that accepts StorageTargetPropertiesArgs and StorageTargetPropertiesOutput values.
// You can construct a concrete instance of `StorageTargetPropertiesInput` via:
//
//          StorageTargetPropertiesArgs{...}
type StorageTargetPropertiesInput interface {
	pulumi.Input

	ToStorageTargetPropertiesOutput() StorageTargetPropertiesOutput
	ToStorageTargetPropertiesOutputWithContext(context.Context) StorageTargetPropertiesOutput
}

// Properties of the Storage Target.
type StorageTargetPropertiesArgs struct {
	// Properties when targetType is clfs.
	Clfs ClfsTargetPtrInput `pulumi:"clfs"`
	// List of Cache namespace junctions to target for namespace associations.
	Junctions NamespaceJunctionArrayInput `pulumi:"junctions"`
	// Properties when targetType is nfs3.
	Nfs3 Nfs3TargetPtrInput `pulumi:"nfs3"`
	// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Type of the Storage Target.
	TargetType pulumi.StringPtrInput `pulumi:"targetType"`
	// Properties when targetType is unknown.
	Unknown UnknownTargetPtrInput `pulumi:"unknown"`
}

func (StorageTargetPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageTargetProperties)(nil)).Elem()
}

func (i StorageTargetPropertiesArgs) ToStorageTargetPropertiesOutput() StorageTargetPropertiesOutput {
	return i.ToStorageTargetPropertiesOutputWithContext(context.Background())
}

func (i StorageTargetPropertiesArgs) ToStorageTargetPropertiesOutputWithContext(ctx context.Context) StorageTargetPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageTargetPropertiesOutput)
}

func (i StorageTargetPropertiesArgs) ToStorageTargetPropertiesPtrOutput() StorageTargetPropertiesPtrOutput {
	return i.ToStorageTargetPropertiesPtrOutputWithContext(context.Background())
}

func (i StorageTargetPropertiesArgs) ToStorageTargetPropertiesPtrOutputWithContext(ctx context.Context) StorageTargetPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageTargetPropertiesOutput).ToStorageTargetPropertiesPtrOutputWithContext(ctx)
}

// StorageTargetPropertiesPtrInput is an input type that accepts StorageTargetPropertiesArgs, StorageTargetPropertiesPtr and StorageTargetPropertiesPtrOutput values.
// You can construct a concrete instance of `StorageTargetPropertiesPtrInput` via:
//
//          StorageTargetPropertiesArgs{...}
//
//  or:
//
//          nil
type StorageTargetPropertiesPtrInput interface {
	pulumi.Input

	ToStorageTargetPropertiesPtrOutput() StorageTargetPropertiesPtrOutput
	ToStorageTargetPropertiesPtrOutputWithContext(context.Context) StorageTargetPropertiesPtrOutput
}

type storageTargetPropertiesPtrType StorageTargetPropertiesArgs

func StorageTargetPropertiesPtr(v *StorageTargetPropertiesArgs) StorageTargetPropertiesPtrInput {
	return (*storageTargetPropertiesPtrType)(v)
}

func (*storageTargetPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageTargetProperties)(nil)).Elem()
}

func (i *storageTargetPropertiesPtrType) ToStorageTargetPropertiesPtrOutput() StorageTargetPropertiesPtrOutput {
	return i.ToStorageTargetPropertiesPtrOutputWithContext(context.Background())
}

func (i *storageTargetPropertiesPtrType) ToStorageTargetPropertiesPtrOutputWithContext(ctx context.Context) StorageTargetPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageTargetPropertiesPtrOutput)
}

// Properties of the Storage Target.
type StorageTargetPropertiesOutput struct{ *pulumi.OutputState }

func (StorageTargetPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageTargetProperties)(nil)).Elem()
}

func (o StorageTargetPropertiesOutput) ToStorageTargetPropertiesOutput() StorageTargetPropertiesOutput {
	return o
}

func (o StorageTargetPropertiesOutput) ToStorageTargetPropertiesOutputWithContext(ctx context.Context) StorageTargetPropertiesOutput {
	return o
}

func (o StorageTargetPropertiesOutput) ToStorageTargetPropertiesPtrOutput() StorageTargetPropertiesPtrOutput {
	return o.ToStorageTargetPropertiesPtrOutputWithContext(context.Background())
}

func (o StorageTargetPropertiesOutput) ToStorageTargetPropertiesPtrOutputWithContext(ctx context.Context) StorageTargetPropertiesPtrOutput {
	return o.ApplyT(func(v StorageTargetProperties) *StorageTargetProperties {
		return &v
	}).(StorageTargetPropertiesPtrOutput)
}

// Properties when targetType is clfs.
func (o StorageTargetPropertiesOutput) Clfs() ClfsTargetPtrOutput {
	return o.ApplyT(func(v StorageTargetProperties) *ClfsTarget { return v.Clfs }).(ClfsTargetPtrOutput)
}

// List of Cache namespace junctions to target for namespace associations.
func (o StorageTargetPropertiesOutput) Junctions() NamespaceJunctionArrayOutput {
	return o.ApplyT(func(v StorageTargetProperties) []NamespaceJunction { return v.Junctions }).(NamespaceJunctionArrayOutput)
}

// Properties when targetType is nfs3.
func (o StorageTargetPropertiesOutput) Nfs3() Nfs3TargetPtrOutput {
	return o.ApplyT(func(v StorageTargetProperties) *Nfs3Target { return v.Nfs3 }).(Nfs3TargetPtrOutput)
}

// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
func (o StorageTargetPropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageTargetProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Type of the Storage Target.
func (o StorageTargetPropertiesOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageTargetProperties) *string { return v.TargetType }).(pulumi.StringPtrOutput)
}

// Properties when targetType is unknown.
func (o StorageTargetPropertiesOutput) Unknown() UnknownTargetPtrOutput {
	return o.ApplyT(func(v StorageTargetProperties) *UnknownTarget { return v.Unknown }).(UnknownTargetPtrOutput)
}

type StorageTargetPropertiesPtrOutput struct{ *pulumi.OutputState }

func (StorageTargetPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageTargetProperties)(nil)).Elem()
}

func (o StorageTargetPropertiesPtrOutput) ToStorageTargetPropertiesPtrOutput() StorageTargetPropertiesPtrOutput {
	return o
}

func (o StorageTargetPropertiesPtrOutput) ToStorageTargetPropertiesPtrOutputWithContext(ctx context.Context) StorageTargetPropertiesPtrOutput {
	return o
}

func (o StorageTargetPropertiesPtrOutput) Elem() StorageTargetPropertiesOutput {
	return o.ApplyT(func(v *StorageTargetProperties) StorageTargetProperties { return *v }).(StorageTargetPropertiesOutput)
}

// Properties when targetType is clfs.
func (o StorageTargetPropertiesPtrOutput) Clfs() ClfsTargetPtrOutput {
	return o.ApplyT(func(v *StorageTargetProperties) *ClfsTarget {
		if v == nil {
			return nil
		}
		return v.Clfs
	}).(ClfsTargetPtrOutput)
}

// List of Cache namespace junctions to target for namespace associations.
func (o StorageTargetPropertiesPtrOutput) Junctions() NamespaceJunctionArrayOutput {
	return o.ApplyT(func(v *StorageTargetProperties) []NamespaceJunction {
		if v == nil {
			return nil
		}
		return v.Junctions
	}).(NamespaceJunctionArrayOutput)
}

// Properties when targetType is nfs3.
func (o StorageTargetPropertiesPtrOutput) Nfs3() Nfs3TargetPtrOutput {
	return o.ApplyT(func(v *StorageTargetProperties) *Nfs3Target {
		if v == nil {
			return nil
		}
		return v.Nfs3
	}).(Nfs3TargetPtrOutput)
}

// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
func (o StorageTargetPropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageTargetProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Type of the Storage Target.
func (o StorageTargetPropertiesPtrOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageTargetProperties) *string {
		if v == nil {
			return nil
		}
		return v.TargetType
	}).(pulumi.StringPtrOutput)
}

// Properties when targetType is unknown.
func (o StorageTargetPropertiesPtrOutput) Unknown() UnknownTargetPtrOutput {
	return o.ApplyT(func(v *StorageTargetProperties) *UnknownTarget {
		if v == nil {
			return nil
		}
		return v.Unknown
	}).(UnknownTargetPtrOutput)
}

// Properties of the Storage Target.
type StorageTargetResponseProperties struct {
	// Properties when targetType is clfs.
	Clfs *ClfsTargetResponse `pulumi:"clfs"`
	// List of Cache namespace junctions to target for namespace associations.
	Junctions []NamespaceJunctionResponse `pulumi:"junctions"`
	// Properties when targetType is nfs3.
	Nfs3 *Nfs3TargetResponse `pulumi:"nfs3"`
	// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
	ProvisioningState *string `pulumi:"provisioningState"`
	// Type of the Storage Target.
	TargetType *string `pulumi:"targetType"`
	// Properties when targetType is unknown.
	Unknown *UnknownTargetResponse `pulumi:"unknown"`
}

// StorageTargetResponsePropertiesInput is an input type that accepts StorageTargetResponsePropertiesArgs and StorageTargetResponsePropertiesOutput values.
// You can construct a concrete instance of `StorageTargetResponsePropertiesInput` via:
//
//          StorageTargetResponsePropertiesArgs{...}
type StorageTargetResponsePropertiesInput interface {
	pulumi.Input

	ToStorageTargetResponsePropertiesOutput() StorageTargetResponsePropertiesOutput
	ToStorageTargetResponsePropertiesOutputWithContext(context.Context) StorageTargetResponsePropertiesOutput
}

// Properties of the Storage Target.
type StorageTargetResponsePropertiesArgs struct {
	// Properties when targetType is clfs.
	Clfs ClfsTargetResponsePtrInput `pulumi:"clfs"`
	// List of Cache namespace junctions to target for namespace associations.
	Junctions NamespaceJunctionResponseArrayInput `pulumi:"junctions"`
	// Properties when targetType is nfs3.
	Nfs3 Nfs3TargetResponsePtrInput `pulumi:"nfs3"`
	// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Type of the Storage Target.
	TargetType pulumi.StringPtrInput `pulumi:"targetType"`
	// Properties when targetType is unknown.
	Unknown UnknownTargetResponsePtrInput `pulumi:"unknown"`
}

func (StorageTargetResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageTargetResponseProperties)(nil)).Elem()
}

func (i StorageTargetResponsePropertiesArgs) ToStorageTargetResponsePropertiesOutput() StorageTargetResponsePropertiesOutput {
	return i.ToStorageTargetResponsePropertiesOutputWithContext(context.Background())
}

func (i StorageTargetResponsePropertiesArgs) ToStorageTargetResponsePropertiesOutputWithContext(ctx context.Context) StorageTargetResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageTargetResponsePropertiesOutput)
}

func (i StorageTargetResponsePropertiesArgs) ToStorageTargetResponsePropertiesPtrOutput() StorageTargetResponsePropertiesPtrOutput {
	return i.ToStorageTargetResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i StorageTargetResponsePropertiesArgs) ToStorageTargetResponsePropertiesPtrOutputWithContext(ctx context.Context) StorageTargetResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageTargetResponsePropertiesOutput).ToStorageTargetResponsePropertiesPtrOutputWithContext(ctx)
}

// StorageTargetResponsePropertiesPtrInput is an input type that accepts StorageTargetResponsePropertiesArgs, StorageTargetResponsePropertiesPtr and StorageTargetResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `StorageTargetResponsePropertiesPtrInput` via:
//
//          StorageTargetResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type StorageTargetResponsePropertiesPtrInput interface {
	pulumi.Input

	ToStorageTargetResponsePropertiesPtrOutput() StorageTargetResponsePropertiesPtrOutput
	ToStorageTargetResponsePropertiesPtrOutputWithContext(context.Context) StorageTargetResponsePropertiesPtrOutput
}

type storageTargetResponsePropertiesPtrType StorageTargetResponsePropertiesArgs

func StorageTargetResponsePropertiesPtr(v *StorageTargetResponsePropertiesArgs) StorageTargetResponsePropertiesPtrInput {
	return (*storageTargetResponsePropertiesPtrType)(v)
}

func (*storageTargetResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageTargetResponseProperties)(nil)).Elem()
}

func (i *storageTargetResponsePropertiesPtrType) ToStorageTargetResponsePropertiesPtrOutput() StorageTargetResponsePropertiesPtrOutput {
	return i.ToStorageTargetResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *storageTargetResponsePropertiesPtrType) ToStorageTargetResponsePropertiesPtrOutputWithContext(ctx context.Context) StorageTargetResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageTargetResponsePropertiesPtrOutput)
}

// Properties of the Storage Target.
type StorageTargetResponsePropertiesOutput struct{ *pulumi.OutputState }

func (StorageTargetResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageTargetResponseProperties)(nil)).Elem()
}

func (o StorageTargetResponsePropertiesOutput) ToStorageTargetResponsePropertiesOutput() StorageTargetResponsePropertiesOutput {
	return o
}

func (o StorageTargetResponsePropertiesOutput) ToStorageTargetResponsePropertiesOutputWithContext(ctx context.Context) StorageTargetResponsePropertiesOutput {
	return o
}

func (o StorageTargetResponsePropertiesOutput) ToStorageTargetResponsePropertiesPtrOutput() StorageTargetResponsePropertiesPtrOutput {
	return o.ToStorageTargetResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o StorageTargetResponsePropertiesOutput) ToStorageTargetResponsePropertiesPtrOutputWithContext(ctx context.Context) StorageTargetResponsePropertiesPtrOutput {
	return o.ApplyT(func(v StorageTargetResponseProperties) *StorageTargetResponseProperties {
		return &v
	}).(StorageTargetResponsePropertiesPtrOutput)
}

// Properties when targetType is clfs.
func (o StorageTargetResponsePropertiesOutput) Clfs() ClfsTargetResponsePtrOutput {
	return o.ApplyT(func(v StorageTargetResponseProperties) *ClfsTargetResponse { return v.Clfs }).(ClfsTargetResponsePtrOutput)
}

// List of Cache namespace junctions to target for namespace associations.
func (o StorageTargetResponsePropertiesOutput) Junctions() NamespaceJunctionResponseArrayOutput {
	return o.ApplyT(func(v StorageTargetResponseProperties) []NamespaceJunctionResponse { return v.Junctions }).(NamespaceJunctionResponseArrayOutput)
}

// Properties when targetType is nfs3.
func (o StorageTargetResponsePropertiesOutput) Nfs3() Nfs3TargetResponsePtrOutput {
	return o.ApplyT(func(v StorageTargetResponseProperties) *Nfs3TargetResponse { return v.Nfs3 }).(Nfs3TargetResponsePtrOutput)
}

// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
func (o StorageTargetResponsePropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageTargetResponseProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Type of the Storage Target.
func (o StorageTargetResponsePropertiesOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageTargetResponseProperties) *string { return v.TargetType }).(pulumi.StringPtrOutput)
}

// Properties when targetType is unknown.
func (o StorageTargetResponsePropertiesOutput) Unknown() UnknownTargetResponsePtrOutput {
	return o.ApplyT(func(v StorageTargetResponseProperties) *UnknownTargetResponse { return v.Unknown }).(UnknownTargetResponsePtrOutput)
}

type StorageTargetResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (StorageTargetResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageTargetResponseProperties)(nil)).Elem()
}

func (o StorageTargetResponsePropertiesPtrOutput) ToStorageTargetResponsePropertiesPtrOutput() StorageTargetResponsePropertiesPtrOutput {
	return o
}

func (o StorageTargetResponsePropertiesPtrOutput) ToStorageTargetResponsePropertiesPtrOutputWithContext(ctx context.Context) StorageTargetResponsePropertiesPtrOutput {
	return o
}

func (o StorageTargetResponsePropertiesPtrOutput) Elem() StorageTargetResponsePropertiesOutput {
	return o.ApplyT(func(v *StorageTargetResponseProperties) StorageTargetResponseProperties { return *v }).(StorageTargetResponsePropertiesOutput)
}

// Properties when targetType is clfs.
func (o StorageTargetResponsePropertiesPtrOutput) Clfs() ClfsTargetResponsePtrOutput {
	return o.ApplyT(func(v *StorageTargetResponseProperties) *ClfsTargetResponse {
		if v == nil {
			return nil
		}
		return v.Clfs
	}).(ClfsTargetResponsePtrOutput)
}

// List of Cache namespace junctions to target for namespace associations.
func (o StorageTargetResponsePropertiesPtrOutput) Junctions() NamespaceJunctionResponseArrayOutput {
	return o.ApplyT(func(v *StorageTargetResponseProperties) []NamespaceJunctionResponse {
		if v == nil {
			return nil
		}
		return v.Junctions
	}).(NamespaceJunctionResponseArrayOutput)
}

// Properties when targetType is nfs3.
func (o StorageTargetResponsePropertiesPtrOutput) Nfs3() Nfs3TargetResponsePtrOutput {
	return o.ApplyT(func(v *StorageTargetResponseProperties) *Nfs3TargetResponse {
		if v == nil {
			return nil
		}
		return v.Nfs3
	}).(Nfs3TargetResponsePtrOutput)
}

// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
func (o StorageTargetResponsePropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageTargetResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Type of the Storage Target.
func (o StorageTargetResponsePropertiesPtrOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageTargetResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.TargetType
	}).(pulumi.StringPtrOutput)
}

// Properties when targetType is unknown.
func (o StorageTargetResponsePropertiesPtrOutput) Unknown() UnknownTargetResponsePtrOutput {
	return o.ApplyT(func(v *StorageTargetResponseProperties) *UnknownTargetResponse {
		if v == nil {
			return nil
		}
		return v.Unknown
	}).(UnknownTargetResponsePtrOutput)
}

// Properties of an unknown type of Storage Target.
type UnknownProperties struct {
}

// UnknownPropertiesInput is an input type that accepts UnknownPropertiesArgs and UnknownPropertiesOutput values.
// You can construct a concrete instance of `UnknownPropertiesInput` via:
//
//          UnknownPropertiesArgs{...}
type UnknownPropertiesInput interface {
	pulumi.Input

	ToUnknownPropertiesOutput() UnknownPropertiesOutput
	ToUnknownPropertiesOutputWithContext(context.Context) UnknownPropertiesOutput
}

// Properties of an unknown type of Storage Target.
type UnknownPropertiesArgs struct {
}

func (UnknownPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UnknownProperties)(nil)).Elem()
}

func (i UnknownPropertiesArgs) ToUnknownPropertiesOutput() UnknownPropertiesOutput {
	return i.ToUnknownPropertiesOutputWithContext(context.Background())
}

func (i UnknownPropertiesArgs) ToUnknownPropertiesOutputWithContext(ctx context.Context) UnknownPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnknownPropertiesOutput)
}

func (i UnknownPropertiesArgs) ToUnknownPropertiesPtrOutput() UnknownPropertiesPtrOutput {
	return i.ToUnknownPropertiesPtrOutputWithContext(context.Background())
}

func (i UnknownPropertiesArgs) ToUnknownPropertiesPtrOutputWithContext(ctx context.Context) UnknownPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnknownPropertiesOutput).ToUnknownPropertiesPtrOutputWithContext(ctx)
}

// UnknownPropertiesPtrInput is an input type that accepts UnknownPropertiesArgs, UnknownPropertiesPtr and UnknownPropertiesPtrOutput values.
// You can construct a concrete instance of `UnknownPropertiesPtrInput` via:
//
//          UnknownPropertiesArgs{...}
//
//  or:
//
//          nil
type UnknownPropertiesPtrInput interface {
	pulumi.Input

	ToUnknownPropertiesPtrOutput() UnknownPropertiesPtrOutput
	ToUnknownPropertiesPtrOutputWithContext(context.Context) UnknownPropertiesPtrOutput
}

type unknownPropertiesPtrType UnknownPropertiesArgs

func UnknownPropertiesPtr(v *UnknownPropertiesArgs) UnknownPropertiesPtrInput {
	return (*unknownPropertiesPtrType)(v)
}

func (*unknownPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UnknownProperties)(nil)).Elem()
}

func (i *unknownPropertiesPtrType) ToUnknownPropertiesPtrOutput() UnknownPropertiesPtrOutput {
	return i.ToUnknownPropertiesPtrOutputWithContext(context.Background())
}

func (i *unknownPropertiesPtrType) ToUnknownPropertiesPtrOutputWithContext(ctx context.Context) UnknownPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnknownPropertiesPtrOutput)
}

// Properties of an unknown type of Storage Target.
type UnknownPropertiesOutput struct{ *pulumi.OutputState }

func (UnknownPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UnknownProperties)(nil)).Elem()
}

func (o UnknownPropertiesOutput) ToUnknownPropertiesOutput() UnknownPropertiesOutput {
	return o
}

func (o UnknownPropertiesOutput) ToUnknownPropertiesOutputWithContext(ctx context.Context) UnknownPropertiesOutput {
	return o
}

func (o UnknownPropertiesOutput) ToUnknownPropertiesPtrOutput() UnknownPropertiesPtrOutput {
	return o.ToUnknownPropertiesPtrOutputWithContext(context.Background())
}

func (o UnknownPropertiesOutput) ToUnknownPropertiesPtrOutputWithContext(ctx context.Context) UnknownPropertiesPtrOutput {
	return o.ApplyT(func(v UnknownProperties) *UnknownProperties {
		return &v
	}).(UnknownPropertiesPtrOutput)
}

type UnknownPropertiesPtrOutput struct{ *pulumi.OutputState }

func (UnknownPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UnknownProperties)(nil)).Elem()
}

func (o UnknownPropertiesPtrOutput) ToUnknownPropertiesPtrOutput() UnknownPropertiesPtrOutput {
	return o
}

func (o UnknownPropertiesPtrOutput) ToUnknownPropertiesPtrOutputWithContext(ctx context.Context) UnknownPropertiesPtrOutput {
	return o
}

func (o UnknownPropertiesPtrOutput) Elem() UnknownPropertiesOutput {
	return o.ApplyT(func(v *UnknownProperties) UnknownProperties { return *v }).(UnknownPropertiesOutput)
}

// Properties of an unknown type of Storage Target.
type UnknownPropertiesResponse struct {
}

// UnknownPropertiesResponseInput is an input type that accepts UnknownPropertiesResponseArgs and UnknownPropertiesResponseOutput values.
// You can construct a concrete instance of `UnknownPropertiesResponseInput` via:
//
//          UnknownPropertiesResponseArgs{...}
type UnknownPropertiesResponseInput interface {
	pulumi.Input

	ToUnknownPropertiesResponseOutput() UnknownPropertiesResponseOutput
	ToUnknownPropertiesResponseOutputWithContext(context.Context) UnknownPropertiesResponseOutput
}

// Properties of an unknown type of Storage Target.
type UnknownPropertiesResponseArgs struct {
}

func (UnknownPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UnknownPropertiesResponse)(nil)).Elem()
}

func (i UnknownPropertiesResponseArgs) ToUnknownPropertiesResponseOutput() UnknownPropertiesResponseOutput {
	return i.ToUnknownPropertiesResponseOutputWithContext(context.Background())
}

func (i UnknownPropertiesResponseArgs) ToUnknownPropertiesResponseOutputWithContext(ctx context.Context) UnknownPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnknownPropertiesResponseOutput)
}

func (i UnknownPropertiesResponseArgs) ToUnknownPropertiesResponsePtrOutput() UnknownPropertiesResponsePtrOutput {
	return i.ToUnknownPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i UnknownPropertiesResponseArgs) ToUnknownPropertiesResponsePtrOutputWithContext(ctx context.Context) UnknownPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnknownPropertiesResponseOutput).ToUnknownPropertiesResponsePtrOutputWithContext(ctx)
}

// UnknownPropertiesResponsePtrInput is an input type that accepts UnknownPropertiesResponseArgs, UnknownPropertiesResponsePtr and UnknownPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `UnknownPropertiesResponsePtrInput` via:
//
//          UnknownPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type UnknownPropertiesResponsePtrInput interface {
	pulumi.Input

	ToUnknownPropertiesResponsePtrOutput() UnknownPropertiesResponsePtrOutput
	ToUnknownPropertiesResponsePtrOutputWithContext(context.Context) UnknownPropertiesResponsePtrOutput
}

type unknownPropertiesResponsePtrType UnknownPropertiesResponseArgs

func UnknownPropertiesResponsePtr(v *UnknownPropertiesResponseArgs) UnknownPropertiesResponsePtrInput {
	return (*unknownPropertiesResponsePtrType)(v)
}

func (*unknownPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UnknownPropertiesResponse)(nil)).Elem()
}

func (i *unknownPropertiesResponsePtrType) ToUnknownPropertiesResponsePtrOutput() UnknownPropertiesResponsePtrOutput {
	return i.ToUnknownPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *unknownPropertiesResponsePtrType) ToUnknownPropertiesResponsePtrOutputWithContext(ctx context.Context) UnknownPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnknownPropertiesResponsePtrOutput)
}

// Properties of an unknown type of Storage Target.
type UnknownPropertiesResponseOutput struct{ *pulumi.OutputState }

func (UnknownPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UnknownPropertiesResponse)(nil)).Elem()
}

func (o UnknownPropertiesResponseOutput) ToUnknownPropertiesResponseOutput() UnknownPropertiesResponseOutput {
	return o
}

func (o UnknownPropertiesResponseOutput) ToUnknownPropertiesResponseOutputWithContext(ctx context.Context) UnknownPropertiesResponseOutput {
	return o
}

func (o UnknownPropertiesResponseOutput) ToUnknownPropertiesResponsePtrOutput() UnknownPropertiesResponsePtrOutput {
	return o.ToUnknownPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o UnknownPropertiesResponseOutput) ToUnknownPropertiesResponsePtrOutputWithContext(ctx context.Context) UnknownPropertiesResponsePtrOutput {
	return o.ApplyT(func(v UnknownPropertiesResponse) *UnknownPropertiesResponse {
		return &v
	}).(UnknownPropertiesResponsePtrOutput)
}

type UnknownPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (UnknownPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UnknownPropertiesResponse)(nil)).Elem()
}

func (o UnknownPropertiesResponsePtrOutput) ToUnknownPropertiesResponsePtrOutput() UnknownPropertiesResponsePtrOutput {
	return o
}

func (o UnknownPropertiesResponsePtrOutput) ToUnknownPropertiesResponsePtrOutputWithContext(ctx context.Context) UnknownPropertiesResponsePtrOutput {
	return o
}

func (o UnknownPropertiesResponsePtrOutput) Elem() UnknownPropertiesResponseOutput {
	return o.ApplyT(func(v *UnknownPropertiesResponse) UnknownPropertiesResponse { return *v }).(UnknownPropertiesResponseOutput)
}

// Storage container for use as an Unknown Storage Target.
type UnknownTarget struct {
	// Dictionary of string->string pairs containing information about the Storage Target.
	UnknownMap *UnknownProperties `pulumi:"unknownMap"`
}

// UnknownTargetInput is an input type that accepts UnknownTargetArgs and UnknownTargetOutput values.
// You can construct a concrete instance of `UnknownTargetInput` via:
//
//          UnknownTargetArgs{...}
type UnknownTargetInput interface {
	pulumi.Input

	ToUnknownTargetOutput() UnknownTargetOutput
	ToUnknownTargetOutputWithContext(context.Context) UnknownTargetOutput
}

// Storage container for use as an Unknown Storage Target.
type UnknownTargetArgs struct {
	// Dictionary of string->string pairs containing information about the Storage Target.
	UnknownMap UnknownPropertiesPtrInput `pulumi:"unknownMap"`
}

func (UnknownTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UnknownTarget)(nil)).Elem()
}

func (i UnknownTargetArgs) ToUnknownTargetOutput() UnknownTargetOutput {
	return i.ToUnknownTargetOutputWithContext(context.Background())
}

func (i UnknownTargetArgs) ToUnknownTargetOutputWithContext(ctx context.Context) UnknownTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnknownTargetOutput)
}

func (i UnknownTargetArgs) ToUnknownTargetPtrOutput() UnknownTargetPtrOutput {
	return i.ToUnknownTargetPtrOutputWithContext(context.Background())
}

func (i UnknownTargetArgs) ToUnknownTargetPtrOutputWithContext(ctx context.Context) UnknownTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnknownTargetOutput).ToUnknownTargetPtrOutputWithContext(ctx)
}

// UnknownTargetPtrInput is an input type that accepts UnknownTargetArgs, UnknownTargetPtr and UnknownTargetPtrOutput values.
// You can construct a concrete instance of `UnknownTargetPtrInput` via:
//
//          UnknownTargetArgs{...}
//
//  or:
//
//          nil
type UnknownTargetPtrInput interface {
	pulumi.Input

	ToUnknownTargetPtrOutput() UnknownTargetPtrOutput
	ToUnknownTargetPtrOutputWithContext(context.Context) UnknownTargetPtrOutput
}

type unknownTargetPtrType UnknownTargetArgs

func UnknownTargetPtr(v *UnknownTargetArgs) UnknownTargetPtrInput {
	return (*unknownTargetPtrType)(v)
}

func (*unknownTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UnknownTarget)(nil)).Elem()
}

func (i *unknownTargetPtrType) ToUnknownTargetPtrOutput() UnknownTargetPtrOutput {
	return i.ToUnknownTargetPtrOutputWithContext(context.Background())
}

func (i *unknownTargetPtrType) ToUnknownTargetPtrOutputWithContext(ctx context.Context) UnknownTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnknownTargetPtrOutput)
}

// Storage container for use as an Unknown Storage Target.
type UnknownTargetOutput struct{ *pulumi.OutputState }

func (UnknownTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UnknownTarget)(nil)).Elem()
}

func (o UnknownTargetOutput) ToUnknownTargetOutput() UnknownTargetOutput {
	return o
}

func (o UnknownTargetOutput) ToUnknownTargetOutputWithContext(ctx context.Context) UnknownTargetOutput {
	return o
}

func (o UnknownTargetOutput) ToUnknownTargetPtrOutput() UnknownTargetPtrOutput {
	return o.ToUnknownTargetPtrOutputWithContext(context.Background())
}

func (o UnknownTargetOutput) ToUnknownTargetPtrOutputWithContext(ctx context.Context) UnknownTargetPtrOutput {
	return o.ApplyT(func(v UnknownTarget) *UnknownTarget {
		return &v
	}).(UnknownTargetPtrOutput)
}

// Dictionary of string->string pairs containing information about the Storage Target.
func (o UnknownTargetOutput) UnknownMap() UnknownPropertiesPtrOutput {
	return o.ApplyT(func(v UnknownTarget) *UnknownProperties { return v.UnknownMap }).(UnknownPropertiesPtrOutput)
}

type UnknownTargetPtrOutput struct{ *pulumi.OutputState }

func (UnknownTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UnknownTarget)(nil)).Elem()
}

func (o UnknownTargetPtrOutput) ToUnknownTargetPtrOutput() UnknownTargetPtrOutput {
	return o
}

func (o UnknownTargetPtrOutput) ToUnknownTargetPtrOutputWithContext(ctx context.Context) UnknownTargetPtrOutput {
	return o
}

func (o UnknownTargetPtrOutput) Elem() UnknownTargetOutput {
	return o.ApplyT(func(v *UnknownTarget) UnknownTarget { return *v }).(UnknownTargetOutput)
}

// Dictionary of string->string pairs containing information about the Storage Target.
func (o UnknownTargetPtrOutput) UnknownMap() UnknownPropertiesPtrOutput {
	return o.ApplyT(func(v *UnknownTarget) *UnknownProperties {
		if v == nil {
			return nil
		}
		return v.UnknownMap
	}).(UnknownPropertiesPtrOutput)
}

// Storage container for use as an Unknown Storage Target.
type UnknownTargetResponse struct {
	// Dictionary of string->string pairs containing information about the Storage Target.
	UnknownMap *UnknownPropertiesResponse `pulumi:"unknownMap"`
}

// UnknownTargetResponseInput is an input type that accepts UnknownTargetResponseArgs and UnknownTargetResponseOutput values.
// You can construct a concrete instance of `UnknownTargetResponseInput` via:
//
//          UnknownTargetResponseArgs{...}
type UnknownTargetResponseInput interface {
	pulumi.Input

	ToUnknownTargetResponseOutput() UnknownTargetResponseOutput
	ToUnknownTargetResponseOutputWithContext(context.Context) UnknownTargetResponseOutput
}

// Storage container for use as an Unknown Storage Target.
type UnknownTargetResponseArgs struct {
	// Dictionary of string->string pairs containing information about the Storage Target.
	UnknownMap UnknownPropertiesResponsePtrInput `pulumi:"unknownMap"`
}

func (UnknownTargetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UnknownTargetResponse)(nil)).Elem()
}

func (i UnknownTargetResponseArgs) ToUnknownTargetResponseOutput() UnknownTargetResponseOutput {
	return i.ToUnknownTargetResponseOutputWithContext(context.Background())
}

func (i UnknownTargetResponseArgs) ToUnknownTargetResponseOutputWithContext(ctx context.Context) UnknownTargetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnknownTargetResponseOutput)
}

func (i UnknownTargetResponseArgs) ToUnknownTargetResponsePtrOutput() UnknownTargetResponsePtrOutput {
	return i.ToUnknownTargetResponsePtrOutputWithContext(context.Background())
}

func (i UnknownTargetResponseArgs) ToUnknownTargetResponsePtrOutputWithContext(ctx context.Context) UnknownTargetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnknownTargetResponseOutput).ToUnknownTargetResponsePtrOutputWithContext(ctx)
}

// UnknownTargetResponsePtrInput is an input type that accepts UnknownTargetResponseArgs, UnknownTargetResponsePtr and UnknownTargetResponsePtrOutput values.
// You can construct a concrete instance of `UnknownTargetResponsePtrInput` via:
//
//          UnknownTargetResponseArgs{...}
//
//  or:
//
//          nil
type UnknownTargetResponsePtrInput interface {
	pulumi.Input

	ToUnknownTargetResponsePtrOutput() UnknownTargetResponsePtrOutput
	ToUnknownTargetResponsePtrOutputWithContext(context.Context) UnknownTargetResponsePtrOutput
}

type unknownTargetResponsePtrType UnknownTargetResponseArgs

func UnknownTargetResponsePtr(v *UnknownTargetResponseArgs) UnknownTargetResponsePtrInput {
	return (*unknownTargetResponsePtrType)(v)
}

func (*unknownTargetResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UnknownTargetResponse)(nil)).Elem()
}

func (i *unknownTargetResponsePtrType) ToUnknownTargetResponsePtrOutput() UnknownTargetResponsePtrOutput {
	return i.ToUnknownTargetResponsePtrOutputWithContext(context.Background())
}

func (i *unknownTargetResponsePtrType) ToUnknownTargetResponsePtrOutputWithContext(ctx context.Context) UnknownTargetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnknownTargetResponsePtrOutput)
}

// Storage container for use as an Unknown Storage Target.
type UnknownTargetResponseOutput struct{ *pulumi.OutputState }

func (UnknownTargetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UnknownTargetResponse)(nil)).Elem()
}

func (o UnknownTargetResponseOutput) ToUnknownTargetResponseOutput() UnknownTargetResponseOutput {
	return o
}

func (o UnknownTargetResponseOutput) ToUnknownTargetResponseOutputWithContext(ctx context.Context) UnknownTargetResponseOutput {
	return o
}

func (o UnknownTargetResponseOutput) ToUnknownTargetResponsePtrOutput() UnknownTargetResponsePtrOutput {
	return o.ToUnknownTargetResponsePtrOutputWithContext(context.Background())
}

func (o UnknownTargetResponseOutput) ToUnknownTargetResponsePtrOutputWithContext(ctx context.Context) UnknownTargetResponsePtrOutput {
	return o.ApplyT(func(v UnknownTargetResponse) *UnknownTargetResponse {
		return &v
	}).(UnknownTargetResponsePtrOutput)
}

// Dictionary of string->string pairs containing information about the Storage Target.
func (o UnknownTargetResponseOutput) UnknownMap() UnknownPropertiesResponsePtrOutput {
	return o.ApplyT(func(v UnknownTargetResponse) *UnknownPropertiesResponse { return v.UnknownMap }).(UnknownPropertiesResponsePtrOutput)
}

type UnknownTargetResponsePtrOutput struct{ *pulumi.OutputState }

func (UnknownTargetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UnknownTargetResponse)(nil)).Elem()
}

func (o UnknownTargetResponsePtrOutput) ToUnknownTargetResponsePtrOutput() UnknownTargetResponsePtrOutput {
	return o
}

func (o UnknownTargetResponsePtrOutput) ToUnknownTargetResponsePtrOutputWithContext(ctx context.Context) UnknownTargetResponsePtrOutput {
	return o
}

func (o UnknownTargetResponsePtrOutput) Elem() UnknownTargetResponseOutput {
	return o.ApplyT(func(v *UnknownTargetResponse) UnknownTargetResponse { return *v }).(UnknownTargetResponseOutput)
}

// Dictionary of string->string pairs containing information about the Storage Target.
func (o UnknownTargetResponsePtrOutput) UnknownMap() UnknownPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *UnknownTargetResponse) *UnknownPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.UnknownMap
	}).(UnknownPropertiesResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(CacheTypeOutput{})
	pulumi.RegisterOutputType(CacheHealthOutput{})
	pulumi.RegisterOutputType(CacheHealthResponseOutput{})
	pulumi.RegisterOutputType(CacheHealthResponsePtrOutput{})
	pulumi.RegisterOutputType(CachePropertiesOutput{})
	pulumi.RegisterOutputType(CachePropertiesPtrOutput{})
	pulumi.RegisterOutputType(CacheResponsePropertiesOutput{})
	pulumi.RegisterOutputType(CacheResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(CacheUpgradeStatusOutput{})
	pulumi.RegisterOutputType(CacheUpgradeStatusPtrOutput{})
	pulumi.RegisterOutputType(CacheUpgradeStatusResponseOutput{})
	pulumi.RegisterOutputType(CacheUpgradeStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(ClfsTargetOutput{})
	pulumi.RegisterOutputType(ClfsTargetPtrOutput{})
	pulumi.RegisterOutputType(ClfsTargetResponseOutput{})
	pulumi.RegisterOutputType(ClfsTargetResponsePtrOutput{})
	pulumi.RegisterOutputType(NamespaceJunctionOutput{})
	pulumi.RegisterOutputType(NamespaceJunctionArrayOutput{})
	pulumi.RegisterOutputType(NamespaceJunctionResponseOutput{})
	pulumi.RegisterOutputType(NamespaceJunctionResponseArrayOutput{})
	pulumi.RegisterOutputType(Nfs3TargetOutput{})
	pulumi.RegisterOutputType(Nfs3TargetPtrOutput{})
	pulumi.RegisterOutputType(Nfs3TargetResponseOutput{})
	pulumi.RegisterOutputType(Nfs3TargetResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageTargetTypeOutput{})
	pulumi.RegisterOutputType(StorageTargetPropertiesOutput{})
	pulumi.RegisterOutputType(StorageTargetPropertiesPtrOutput{})
	pulumi.RegisterOutputType(StorageTargetResponsePropertiesOutput{})
	pulumi.RegisterOutputType(StorageTargetResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(UnknownPropertiesOutput{})
	pulumi.RegisterOutputType(UnknownPropertiesPtrOutput{})
	pulumi.RegisterOutputType(UnknownPropertiesResponseOutput{})
	pulumi.RegisterOutputType(UnknownPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(UnknownTargetOutput{})
	pulumi.RegisterOutputType(UnknownTargetPtrOutput{})
	pulumi.RegisterOutputType(UnknownTargetResponseOutput{})
	pulumi.RegisterOutputType(UnknownTargetResponsePtrOutput{})
}
