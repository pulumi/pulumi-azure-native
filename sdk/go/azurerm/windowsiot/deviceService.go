// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package windowsiot

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The description of the Windows IoT Device Service.
type DeviceService struct {
	pulumi.CustomResourceState

	// The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// The Azure Region where the resource lives
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The properties of a Windows IoT Device Service.
	Properties DeviceServicePropertiesResponseOutput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDeviceService registers a new resource with the given unique name, arguments, and options.
func NewDeviceService(ctx *pulumi.Context,
	name string, args *DeviceServiceArgs, opts ...pulumi.ResourceOption) (*DeviceService, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &DeviceServiceArgs{}
	}
	var resource DeviceService
	err := ctx.RegisterResource("azurerm:windowsiot:DeviceService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeviceService gets an existing DeviceService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeviceService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeviceServiceState, opts ...pulumi.ResourceOption) (*DeviceService, error) {
	var resource DeviceService
	err := ctx.ReadResource("azurerm:windowsiot:DeviceService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeviceService resources.
type deviceServiceState struct {
	// The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.
	Etag *string `pulumi:"etag"`
	// The Azure Region where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource
	Name *string `pulumi:"name"`
	// The properties of a Windows IoT Device Service.
	Properties *DeviceServicePropertiesResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

type DeviceServiceState struct {
	// The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.
	Etag pulumi.StringPtrInput
	// The Azure Region where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource
	Name pulumi.StringPtrInput
	// The properties of a Windows IoT Device Service.
	Properties DeviceServicePropertiesResponsePtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The type of the resource.
	Type pulumi.StringPtrInput
}

func (DeviceServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceServiceState)(nil)).Elem()
}

type deviceServiceArgs struct {
	// Windows IoT Device Service OEM AAD domain
	AdminDomainName *string `pulumi:"adminDomainName"`
	// Windows IoT Device Service ODM AAD domain
	BillingDomainName *string `pulumi:"billingDomainName"`
	// The name of the Windows IoT Device Service.
	Name string `pulumi:"name"`
	// Windows IoT Device Service notes.
	Notes *string `pulumi:"notes"`
	// Windows IoT Device Service device allocation,
	Quantity *int `pulumi:"quantity"`
	// The name of the resource group that contains the Windows IoT Device Service.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a DeviceService resource.
type DeviceServiceArgs struct {
	// Windows IoT Device Service OEM AAD domain
	AdminDomainName pulumi.StringPtrInput
	// Windows IoT Device Service ODM AAD domain
	BillingDomainName pulumi.StringPtrInput
	// The name of the Windows IoT Device Service.
	Name pulumi.StringInput
	// Windows IoT Device Service notes.
	Notes pulumi.StringPtrInput
	// Windows IoT Device Service device allocation,
	Quantity pulumi.IntPtrInput
	// The name of the resource group that contains the Windows IoT Device Service.
	ResourceGroupName pulumi.StringInput
}

func (DeviceServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceServiceArgs)(nil)).Elem()
}
