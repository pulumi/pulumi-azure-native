// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package containerregistry

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An object that represents a webhook for a container registry.
type RegistryWebhook struct {
	pulumi.CustomResourceState

	// The location of the resource. This cannot be changed after the resource is created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The properties of the webhook.
	Properties WebhookPropertiesResponseOutput `pulumi:"properties"`
	// The tags of the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewRegistryWebhook registers a new resource with the given unique name, arguments, and options.
func NewRegistryWebhook(ctx *pulumi.Context,
	name string, args *RegistryWebhookArgs, opts ...pulumi.ResourceOption) (*RegistryWebhook, error) {
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.RegistryName == nil {
		return nil, errors.New("missing required argument 'RegistryName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &RegistryWebhookArgs{}
	}
	var resource RegistryWebhook
	err := ctx.RegisterResource("azurerm:containerregistry:RegistryWebhook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRegistryWebhook gets an existing RegistryWebhook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRegistryWebhook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RegistryWebhookState, opts ...pulumi.ResourceOption) (*RegistryWebhook, error) {
	var resource RegistryWebhook
	err := ctx.ReadResource("azurerm:containerregistry:RegistryWebhook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RegistryWebhook resources.
type registryWebhookState struct {
	// The location of the resource. This cannot be changed after the resource is created.
	Location *string `pulumi:"location"`
	// The name of the resource.
	Name *string `pulumi:"name"`
	// The properties of the webhook.
	Properties *WebhookPropertiesResponse `pulumi:"properties"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

type RegistryWebhookState struct {
	// The location of the resource. This cannot be changed after the resource is created.
	Location pulumi.StringPtrInput
	// The name of the resource.
	Name pulumi.StringPtrInput
	// The properties of the webhook.
	Properties WebhookPropertiesResponsePtrInput
	// The tags of the resource.
	Tags pulumi.StringMapInput
	// The type of the resource.
	Type pulumi.StringPtrInput
}

func (RegistryWebhookState) ElementType() reflect.Type {
	return reflect.TypeOf((*registryWebhookState)(nil)).Elem()
}

type registryWebhookArgs struct {
	// The location of the webhook. This cannot be changed after the resource is created.
	Location string `pulumi:"location"`
	// The name of the webhook.
	Name string `pulumi:"name"`
	// The properties that the webhook will be created with.
	Properties *WebhookPropertiesCreateParameters `pulumi:"properties"`
	// The name of the container registry.
	RegistryName string `pulumi:"registryName"`
	// The name of the resource group to which the container registry belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The tags for the webhook.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a RegistryWebhook resource.
type RegistryWebhookArgs struct {
	// The location of the webhook. This cannot be changed after the resource is created.
	Location pulumi.StringInput
	// The name of the webhook.
	Name pulumi.StringInput
	// The properties that the webhook will be created with.
	Properties WebhookPropertiesCreateParametersPtrInput
	// The name of the container registry.
	RegistryName pulumi.StringInput
	// The name of the resource group to which the container registry belongs.
	ResourceGroupName pulumi.StringInput
	// The tags for the webhook.
	Tags pulumi.StringMapInput
}

func (RegistryWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*registryWebhookArgs)(nil)).Elem()
}
