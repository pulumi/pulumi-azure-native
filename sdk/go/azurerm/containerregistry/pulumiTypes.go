// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package containerregistry

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The agent that initiated the event. For most situations, this could be from the authorization context of the request.
type ActorResponse struct {
	// The subject or username associated with the request context that generated the event.
	Name *string `pulumi:"name"`
}

// ActorResponseInput is an input type that accepts ActorResponseArgs and ActorResponseOutput values.
// You can construct a concrete instance of `ActorResponseInput` via:
//
//          ActorResponseArgs{...}
type ActorResponseInput interface {
	pulumi.Input

	ToActorResponseOutput() ActorResponseOutput
	ToActorResponseOutputWithContext(context.Context) ActorResponseOutput
}

// The agent that initiated the event. For most situations, this could be from the authorization context of the request.
type ActorResponseArgs struct {
	// The subject or username associated with the request context that generated the event.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ActorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActorResponse)(nil)).Elem()
}

func (i ActorResponseArgs) ToActorResponseOutput() ActorResponseOutput {
	return i.ToActorResponseOutputWithContext(context.Background())
}

func (i ActorResponseArgs) ToActorResponseOutputWithContext(ctx context.Context) ActorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActorResponseOutput)
}

func (i ActorResponseArgs) ToActorResponsePtrOutput() ActorResponsePtrOutput {
	return i.ToActorResponsePtrOutputWithContext(context.Background())
}

func (i ActorResponseArgs) ToActorResponsePtrOutputWithContext(ctx context.Context) ActorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActorResponseOutput).ToActorResponsePtrOutputWithContext(ctx)
}

// ActorResponsePtrInput is an input type that accepts ActorResponseArgs, ActorResponsePtr and ActorResponsePtrOutput values.
// You can construct a concrete instance of `ActorResponsePtrInput` via:
//
//          ActorResponseArgs{...}
//
//  or:
//
//          nil
type ActorResponsePtrInput interface {
	pulumi.Input

	ToActorResponsePtrOutput() ActorResponsePtrOutput
	ToActorResponsePtrOutputWithContext(context.Context) ActorResponsePtrOutput
}

type actorResponsePtrType ActorResponseArgs

func ActorResponsePtr(v *ActorResponseArgs) ActorResponsePtrInput {
	return (*actorResponsePtrType)(v)
}

func (*actorResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActorResponse)(nil)).Elem()
}

func (i *actorResponsePtrType) ToActorResponsePtrOutput() ActorResponsePtrOutput {
	return i.ToActorResponsePtrOutputWithContext(context.Background())
}

func (i *actorResponsePtrType) ToActorResponsePtrOutputWithContext(ctx context.Context) ActorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActorResponsePtrOutput)
}

// The agent that initiated the event. For most situations, this could be from the authorization context of the request.
type ActorResponseOutput struct{ *pulumi.OutputState }

func (ActorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActorResponse)(nil)).Elem()
}

func (o ActorResponseOutput) ToActorResponseOutput() ActorResponseOutput {
	return o
}

func (o ActorResponseOutput) ToActorResponseOutputWithContext(ctx context.Context) ActorResponseOutput {
	return o
}

func (o ActorResponseOutput) ToActorResponsePtrOutput() ActorResponsePtrOutput {
	return o.ToActorResponsePtrOutputWithContext(context.Background())
}

func (o ActorResponseOutput) ToActorResponsePtrOutputWithContext(ctx context.Context) ActorResponsePtrOutput {
	return o.ApplyT(func(v ActorResponse) *ActorResponse {
		return &v
	}).(ActorResponsePtrOutput)
}

// The subject or username associated with the request context that generated the event.
func (o ActorResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActorResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ActorResponsePtrOutput struct{ *pulumi.OutputState }

func (ActorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActorResponse)(nil)).Elem()
}

func (o ActorResponsePtrOutput) ToActorResponsePtrOutput() ActorResponsePtrOutput {
	return o
}

func (o ActorResponsePtrOutput) ToActorResponsePtrOutputWithContext(ctx context.Context) ActorResponsePtrOutput {
	return o
}

func (o ActorResponsePtrOutput) Elem() ActorResponseOutput {
	return o.ApplyT(func(v *ActorResponse) ActorResponse { return *v }).(ActorResponseOutput)
}

// The subject or username associated with the request context that generated the event.
func (o ActorResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The properties that determine the run agent configuration.
type AgentProperties struct {
	// The CPU configuration in terms of number of cores required for the run.
	Cpu *int `pulumi:"cpu"`
}

// AgentPropertiesInput is an input type that accepts AgentPropertiesArgs and AgentPropertiesOutput values.
// You can construct a concrete instance of `AgentPropertiesInput` via:
//
//          AgentPropertiesArgs{...}
type AgentPropertiesInput interface {
	pulumi.Input

	ToAgentPropertiesOutput() AgentPropertiesOutput
	ToAgentPropertiesOutputWithContext(context.Context) AgentPropertiesOutput
}

// The properties that determine the run agent configuration.
type AgentPropertiesArgs struct {
	// The CPU configuration in terms of number of cores required for the run.
	Cpu pulumi.IntPtrInput `pulumi:"cpu"`
}

func (AgentPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentProperties)(nil)).Elem()
}

func (i AgentPropertiesArgs) ToAgentPropertiesOutput() AgentPropertiesOutput {
	return i.ToAgentPropertiesOutputWithContext(context.Background())
}

func (i AgentPropertiesArgs) ToAgentPropertiesOutputWithContext(ctx context.Context) AgentPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPropertiesOutput)
}

func (i AgentPropertiesArgs) ToAgentPropertiesPtrOutput() AgentPropertiesPtrOutput {
	return i.ToAgentPropertiesPtrOutputWithContext(context.Background())
}

func (i AgentPropertiesArgs) ToAgentPropertiesPtrOutputWithContext(ctx context.Context) AgentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPropertiesOutput).ToAgentPropertiesPtrOutputWithContext(ctx)
}

// AgentPropertiesPtrInput is an input type that accepts AgentPropertiesArgs, AgentPropertiesPtr and AgentPropertiesPtrOutput values.
// You can construct a concrete instance of `AgentPropertiesPtrInput` via:
//
//          AgentPropertiesArgs{...}
//
//  or:
//
//          nil
type AgentPropertiesPtrInput interface {
	pulumi.Input

	ToAgentPropertiesPtrOutput() AgentPropertiesPtrOutput
	ToAgentPropertiesPtrOutputWithContext(context.Context) AgentPropertiesPtrOutput
}

type agentPropertiesPtrType AgentPropertiesArgs

func AgentPropertiesPtr(v *AgentPropertiesArgs) AgentPropertiesPtrInput {
	return (*agentPropertiesPtrType)(v)
}

func (*agentPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentProperties)(nil)).Elem()
}

func (i *agentPropertiesPtrType) ToAgentPropertiesPtrOutput() AgentPropertiesPtrOutput {
	return i.ToAgentPropertiesPtrOutputWithContext(context.Background())
}

func (i *agentPropertiesPtrType) ToAgentPropertiesPtrOutputWithContext(ctx context.Context) AgentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPropertiesPtrOutput)
}

// The properties that determine the run agent configuration.
type AgentPropertiesOutput struct{ *pulumi.OutputState }

func (AgentPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentProperties)(nil)).Elem()
}

func (o AgentPropertiesOutput) ToAgentPropertiesOutput() AgentPropertiesOutput {
	return o
}

func (o AgentPropertiesOutput) ToAgentPropertiesOutputWithContext(ctx context.Context) AgentPropertiesOutput {
	return o
}

func (o AgentPropertiesOutput) ToAgentPropertiesPtrOutput() AgentPropertiesPtrOutput {
	return o.ToAgentPropertiesPtrOutputWithContext(context.Background())
}

func (o AgentPropertiesOutput) ToAgentPropertiesPtrOutputWithContext(ctx context.Context) AgentPropertiesPtrOutput {
	return o.ApplyT(func(v AgentProperties) *AgentProperties {
		return &v
	}).(AgentPropertiesPtrOutput)
}

// The CPU configuration in terms of number of cores required for the run.
func (o AgentPropertiesOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentProperties) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

type AgentPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AgentPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentProperties)(nil)).Elem()
}

func (o AgentPropertiesPtrOutput) ToAgentPropertiesPtrOutput() AgentPropertiesPtrOutput {
	return o
}

func (o AgentPropertiesPtrOutput) ToAgentPropertiesPtrOutputWithContext(ctx context.Context) AgentPropertiesPtrOutput {
	return o
}

func (o AgentPropertiesPtrOutput) Elem() AgentPropertiesOutput {
	return o.ApplyT(func(v *AgentProperties) AgentProperties { return *v }).(AgentPropertiesOutput)
}

// The CPU configuration in terms of number of cores required for the run.
func (o AgentPropertiesPtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentProperties) *int {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.IntPtrOutput)
}

// The properties that determine the run agent configuration.
type AgentPropertiesResponse struct {
	// The CPU configuration in terms of number of cores required for the run.
	Cpu *int `pulumi:"cpu"`
}

// AgentPropertiesResponseInput is an input type that accepts AgentPropertiesResponseArgs and AgentPropertiesResponseOutput values.
// You can construct a concrete instance of `AgentPropertiesResponseInput` via:
//
//          AgentPropertiesResponseArgs{...}
type AgentPropertiesResponseInput interface {
	pulumi.Input

	ToAgentPropertiesResponseOutput() AgentPropertiesResponseOutput
	ToAgentPropertiesResponseOutputWithContext(context.Context) AgentPropertiesResponseOutput
}

// The properties that determine the run agent configuration.
type AgentPropertiesResponseArgs struct {
	// The CPU configuration in terms of number of cores required for the run.
	Cpu pulumi.IntPtrInput `pulumi:"cpu"`
}

func (AgentPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPropertiesResponse)(nil)).Elem()
}

func (i AgentPropertiesResponseArgs) ToAgentPropertiesResponseOutput() AgentPropertiesResponseOutput {
	return i.ToAgentPropertiesResponseOutputWithContext(context.Background())
}

func (i AgentPropertiesResponseArgs) ToAgentPropertiesResponseOutputWithContext(ctx context.Context) AgentPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPropertiesResponseOutput)
}

func (i AgentPropertiesResponseArgs) ToAgentPropertiesResponsePtrOutput() AgentPropertiesResponsePtrOutput {
	return i.ToAgentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i AgentPropertiesResponseArgs) ToAgentPropertiesResponsePtrOutputWithContext(ctx context.Context) AgentPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPropertiesResponseOutput).ToAgentPropertiesResponsePtrOutputWithContext(ctx)
}

// AgentPropertiesResponsePtrInput is an input type that accepts AgentPropertiesResponseArgs, AgentPropertiesResponsePtr and AgentPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `AgentPropertiesResponsePtrInput` via:
//
//          AgentPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type AgentPropertiesResponsePtrInput interface {
	pulumi.Input

	ToAgentPropertiesResponsePtrOutput() AgentPropertiesResponsePtrOutput
	ToAgentPropertiesResponsePtrOutputWithContext(context.Context) AgentPropertiesResponsePtrOutput
}

type agentPropertiesResponsePtrType AgentPropertiesResponseArgs

func AgentPropertiesResponsePtr(v *AgentPropertiesResponseArgs) AgentPropertiesResponsePtrInput {
	return (*agentPropertiesResponsePtrType)(v)
}

func (*agentPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPropertiesResponse)(nil)).Elem()
}

func (i *agentPropertiesResponsePtrType) ToAgentPropertiesResponsePtrOutput() AgentPropertiesResponsePtrOutput {
	return i.ToAgentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *agentPropertiesResponsePtrType) ToAgentPropertiesResponsePtrOutputWithContext(ctx context.Context) AgentPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPropertiesResponsePtrOutput)
}

// The properties that determine the run agent configuration.
type AgentPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AgentPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPropertiesResponse)(nil)).Elem()
}

func (o AgentPropertiesResponseOutput) ToAgentPropertiesResponseOutput() AgentPropertiesResponseOutput {
	return o
}

func (o AgentPropertiesResponseOutput) ToAgentPropertiesResponseOutputWithContext(ctx context.Context) AgentPropertiesResponseOutput {
	return o
}

func (o AgentPropertiesResponseOutput) ToAgentPropertiesResponsePtrOutput() AgentPropertiesResponsePtrOutput {
	return o.ToAgentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AgentPropertiesResponseOutput) ToAgentPropertiesResponsePtrOutputWithContext(ctx context.Context) AgentPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AgentPropertiesResponse) *AgentPropertiesResponse {
		return &v
	}).(AgentPropertiesResponsePtrOutput)
}

// The CPU configuration in terms of number of cores required for the run.
func (o AgentPropertiesResponseOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentPropertiesResponse) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

type AgentPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AgentPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPropertiesResponse)(nil)).Elem()
}

func (o AgentPropertiesResponsePtrOutput) ToAgentPropertiesResponsePtrOutput() AgentPropertiesResponsePtrOutput {
	return o
}

func (o AgentPropertiesResponsePtrOutput) ToAgentPropertiesResponsePtrOutputWithContext(ctx context.Context) AgentPropertiesResponsePtrOutput {
	return o
}

func (o AgentPropertiesResponsePtrOutput) Elem() AgentPropertiesResponseOutput {
	return o.ApplyT(func(v *AgentPropertiesResponse) AgentPropertiesResponse { return *v }).(AgentPropertiesResponseOutput)
}

// The CPU configuration in terms of number of cores required for the run.
func (o AgentPropertiesResponsePtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.IntPtrOutput)
}

// The authorization properties for accessing the source code repository.
type AuthInfo struct {
	// Time in seconds that the token remains valid
	ExpiresIn *int `pulumi:"expiresIn"`
	// The refresh token used to refresh the access token.
	RefreshToken *string `pulumi:"refreshToken"`
	// The scope of the access token.
	Scope *string `pulumi:"scope"`
	// The access token used to access the source control provider.
	Token string `pulumi:"token"`
	// The type of Auth token.
	TokenType string `pulumi:"tokenType"`
}

// AuthInfoInput is an input type that accepts AuthInfoArgs and AuthInfoOutput values.
// You can construct a concrete instance of `AuthInfoInput` via:
//
//          AuthInfoArgs{...}
type AuthInfoInput interface {
	pulumi.Input

	ToAuthInfoOutput() AuthInfoOutput
	ToAuthInfoOutputWithContext(context.Context) AuthInfoOutput
}

// The authorization properties for accessing the source code repository.
type AuthInfoArgs struct {
	// Time in seconds that the token remains valid
	ExpiresIn pulumi.IntPtrInput `pulumi:"expiresIn"`
	// The refresh token used to refresh the access token.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
	// The scope of the access token.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The access token used to access the source control provider.
	Token pulumi.StringInput `pulumi:"token"`
	// The type of Auth token.
	TokenType pulumi.StringInput `pulumi:"tokenType"`
}

func (AuthInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthInfo)(nil)).Elem()
}

func (i AuthInfoArgs) ToAuthInfoOutput() AuthInfoOutput {
	return i.ToAuthInfoOutputWithContext(context.Background())
}

func (i AuthInfoArgs) ToAuthInfoOutputWithContext(ctx context.Context) AuthInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoOutput)
}

func (i AuthInfoArgs) ToAuthInfoPtrOutput() AuthInfoPtrOutput {
	return i.ToAuthInfoPtrOutputWithContext(context.Background())
}

func (i AuthInfoArgs) ToAuthInfoPtrOutputWithContext(ctx context.Context) AuthInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoOutput).ToAuthInfoPtrOutputWithContext(ctx)
}

// AuthInfoPtrInput is an input type that accepts AuthInfoArgs, AuthInfoPtr and AuthInfoPtrOutput values.
// You can construct a concrete instance of `AuthInfoPtrInput` via:
//
//          AuthInfoArgs{...}
//
//  or:
//
//          nil
type AuthInfoPtrInput interface {
	pulumi.Input

	ToAuthInfoPtrOutput() AuthInfoPtrOutput
	ToAuthInfoPtrOutputWithContext(context.Context) AuthInfoPtrOutput
}

type authInfoPtrType AuthInfoArgs

func AuthInfoPtr(v *AuthInfoArgs) AuthInfoPtrInput {
	return (*authInfoPtrType)(v)
}

func (*authInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthInfo)(nil)).Elem()
}

func (i *authInfoPtrType) ToAuthInfoPtrOutput() AuthInfoPtrOutput {
	return i.ToAuthInfoPtrOutputWithContext(context.Background())
}

func (i *authInfoPtrType) ToAuthInfoPtrOutputWithContext(ctx context.Context) AuthInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoPtrOutput)
}

// The authorization properties for accessing the source code repository.
type AuthInfoOutput struct{ *pulumi.OutputState }

func (AuthInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthInfo)(nil)).Elem()
}

func (o AuthInfoOutput) ToAuthInfoOutput() AuthInfoOutput {
	return o
}

func (o AuthInfoOutput) ToAuthInfoOutputWithContext(ctx context.Context) AuthInfoOutput {
	return o
}

func (o AuthInfoOutput) ToAuthInfoPtrOutput() AuthInfoPtrOutput {
	return o.ToAuthInfoPtrOutputWithContext(context.Background())
}

func (o AuthInfoOutput) ToAuthInfoPtrOutputWithContext(ctx context.Context) AuthInfoPtrOutput {
	return o.ApplyT(func(v AuthInfo) *AuthInfo {
		return &v
	}).(AuthInfoPtrOutput)
}

// Time in seconds that the token remains valid
func (o AuthInfoOutput) ExpiresIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AuthInfo) *int { return v.ExpiresIn }).(pulumi.IntPtrOutput)
}

// The refresh token used to refresh the access token.
func (o AuthInfoOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthInfo) *string { return v.RefreshToken }).(pulumi.StringPtrOutput)
}

// The scope of the access token.
func (o AuthInfoOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthInfo) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The access token used to access the source control provider.
func (o AuthInfoOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v AuthInfo) string { return v.Token }).(pulumi.StringOutput)
}

// The type of Auth token.
func (o AuthInfoOutput) TokenType() pulumi.StringOutput {
	return o.ApplyT(func(v AuthInfo) string { return v.TokenType }).(pulumi.StringOutput)
}

type AuthInfoPtrOutput struct{ *pulumi.OutputState }

func (AuthInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthInfo)(nil)).Elem()
}

func (o AuthInfoPtrOutput) ToAuthInfoPtrOutput() AuthInfoPtrOutput {
	return o
}

func (o AuthInfoPtrOutput) ToAuthInfoPtrOutputWithContext(ctx context.Context) AuthInfoPtrOutput {
	return o
}

func (o AuthInfoPtrOutput) Elem() AuthInfoOutput {
	return o.ApplyT(func(v *AuthInfo) AuthInfo { return *v }).(AuthInfoOutput)
}

// Time in seconds that the token remains valid
func (o AuthInfoPtrOutput) ExpiresIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AuthInfo) *int {
		if v == nil {
			return nil
		}
		return v.ExpiresIn
	}).(pulumi.IntPtrOutput)
}

// The refresh token used to refresh the access token.
func (o AuthInfoPtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfo) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

// The scope of the access token.
func (o AuthInfoPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfo) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// The access token used to access the source control provider.
func (o AuthInfoPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Token
	}).(pulumi.StringPtrOutput)
}

// The type of Auth token.
func (o AuthInfoPtrOutput) TokenType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfo) *string {
		if v == nil {
			return nil
		}
		return &v.TokenType
	}).(pulumi.StringPtrOutput)
}

// The authorization properties for accessing the source code repository.
type AuthInfoResponse struct {
	// Time in seconds that the token remains valid
	ExpiresIn *int `pulumi:"expiresIn"`
	// The refresh token used to refresh the access token.
	RefreshToken *string `pulumi:"refreshToken"`
	// The scope of the access token.
	Scope *string `pulumi:"scope"`
	// The access token used to access the source control provider.
	Token string `pulumi:"token"`
	// The type of Auth token.
	TokenType string `pulumi:"tokenType"`
}

// AuthInfoResponseInput is an input type that accepts AuthInfoResponseArgs and AuthInfoResponseOutput values.
// You can construct a concrete instance of `AuthInfoResponseInput` via:
//
//          AuthInfoResponseArgs{...}
type AuthInfoResponseInput interface {
	pulumi.Input

	ToAuthInfoResponseOutput() AuthInfoResponseOutput
	ToAuthInfoResponseOutputWithContext(context.Context) AuthInfoResponseOutput
}

// The authorization properties for accessing the source code repository.
type AuthInfoResponseArgs struct {
	// Time in seconds that the token remains valid
	ExpiresIn pulumi.IntPtrInput `pulumi:"expiresIn"`
	// The refresh token used to refresh the access token.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
	// The scope of the access token.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The access token used to access the source control provider.
	Token pulumi.StringInput `pulumi:"token"`
	// The type of Auth token.
	TokenType pulumi.StringInput `pulumi:"tokenType"`
}

func (AuthInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthInfoResponse)(nil)).Elem()
}

func (i AuthInfoResponseArgs) ToAuthInfoResponseOutput() AuthInfoResponseOutput {
	return i.ToAuthInfoResponseOutputWithContext(context.Background())
}

func (i AuthInfoResponseArgs) ToAuthInfoResponseOutputWithContext(ctx context.Context) AuthInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoResponseOutput)
}

func (i AuthInfoResponseArgs) ToAuthInfoResponsePtrOutput() AuthInfoResponsePtrOutput {
	return i.ToAuthInfoResponsePtrOutputWithContext(context.Background())
}

func (i AuthInfoResponseArgs) ToAuthInfoResponsePtrOutputWithContext(ctx context.Context) AuthInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoResponseOutput).ToAuthInfoResponsePtrOutputWithContext(ctx)
}

// AuthInfoResponsePtrInput is an input type that accepts AuthInfoResponseArgs, AuthInfoResponsePtr and AuthInfoResponsePtrOutput values.
// You can construct a concrete instance of `AuthInfoResponsePtrInput` via:
//
//          AuthInfoResponseArgs{...}
//
//  or:
//
//          nil
type AuthInfoResponsePtrInput interface {
	pulumi.Input

	ToAuthInfoResponsePtrOutput() AuthInfoResponsePtrOutput
	ToAuthInfoResponsePtrOutputWithContext(context.Context) AuthInfoResponsePtrOutput
}

type authInfoResponsePtrType AuthInfoResponseArgs

func AuthInfoResponsePtr(v *AuthInfoResponseArgs) AuthInfoResponsePtrInput {
	return (*authInfoResponsePtrType)(v)
}

func (*authInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthInfoResponse)(nil)).Elem()
}

func (i *authInfoResponsePtrType) ToAuthInfoResponsePtrOutput() AuthInfoResponsePtrOutput {
	return i.ToAuthInfoResponsePtrOutputWithContext(context.Background())
}

func (i *authInfoResponsePtrType) ToAuthInfoResponsePtrOutputWithContext(ctx context.Context) AuthInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthInfoResponsePtrOutput)
}

// The authorization properties for accessing the source code repository.
type AuthInfoResponseOutput struct{ *pulumi.OutputState }

func (AuthInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthInfoResponse)(nil)).Elem()
}

func (o AuthInfoResponseOutput) ToAuthInfoResponseOutput() AuthInfoResponseOutput {
	return o
}

func (o AuthInfoResponseOutput) ToAuthInfoResponseOutputWithContext(ctx context.Context) AuthInfoResponseOutput {
	return o
}

func (o AuthInfoResponseOutput) ToAuthInfoResponsePtrOutput() AuthInfoResponsePtrOutput {
	return o.ToAuthInfoResponsePtrOutputWithContext(context.Background())
}

func (o AuthInfoResponseOutput) ToAuthInfoResponsePtrOutputWithContext(ctx context.Context) AuthInfoResponsePtrOutput {
	return o.ApplyT(func(v AuthInfoResponse) *AuthInfoResponse {
		return &v
	}).(AuthInfoResponsePtrOutput)
}

// Time in seconds that the token remains valid
func (o AuthInfoResponseOutput) ExpiresIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AuthInfoResponse) *int { return v.ExpiresIn }).(pulumi.IntPtrOutput)
}

// The refresh token used to refresh the access token.
func (o AuthInfoResponseOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthInfoResponse) *string { return v.RefreshToken }).(pulumi.StringPtrOutput)
}

// The scope of the access token.
func (o AuthInfoResponseOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthInfoResponse) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The access token used to access the source control provider.
func (o AuthInfoResponseOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v AuthInfoResponse) string { return v.Token }).(pulumi.StringOutput)
}

// The type of Auth token.
func (o AuthInfoResponseOutput) TokenType() pulumi.StringOutput {
	return o.ApplyT(func(v AuthInfoResponse) string { return v.TokenType }).(pulumi.StringOutput)
}

type AuthInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AuthInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthInfoResponse)(nil)).Elem()
}

func (o AuthInfoResponsePtrOutput) ToAuthInfoResponsePtrOutput() AuthInfoResponsePtrOutput {
	return o
}

func (o AuthInfoResponsePtrOutput) ToAuthInfoResponsePtrOutputWithContext(ctx context.Context) AuthInfoResponsePtrOutput {
	return o
}

func (o AuthInfoResponsePtrOutput) Elem() AuthInfoResponseOutput {
	return o.ApplyT(func(v *AuthInfoResponse) AuthInfoResponse { return *v }).(AuthInfoResponseOutput)
}

// Time in seconds that the token remains valid
func (o AuthInfoResponsePtrOutput) ExpiresIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AuthInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.ExpiresIn
	}).(pulumi.IntPtrOutput)
}

// The refresh token used to refresh the access token.
func (o AuthInfoResponsePtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

// The scope of the access token.
func (o AuthInfoResponsePtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// The access token used to access the source control provider.
func (o AuthInfoResponsePtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Token
	}).(pulumi.StringPtrOutput)
}

// The type of Auth token.
func (o AuthInfoResponsePtrOutput) TokenType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TokenType
	}).(pulumi.StringPtrOutput)
}

// Properties that describe a base image dependency.
type BaseImageDependency struct {
	// The sha256-based digest of the image manifest.
	Digest *string `pulumi:"digest"`
	// The registry login server.
	Registry *string `pulumi:"registry"`
	// The repository name.
	Repository *string `pulumi:"repository"`
	// The tag name.
	Tag *string `pulumi:"tag"`
	// The type of the base image dependency.
	Type *string `pulumi:"type"`
}

// BaseImageDependencyInput is an input type that accepts BaseImageDependencyArgs and BaseImageDependencyOutput values.
// You can construct a concrete instance of `BaseImageDependencyInput` via:
//
//          BaseImageDependencyArgs{...}
type BaseImageDependencyInput interface {
	pulumi.Input

	ToBaseImageDependencyOutput() BaseImageDependencyOutput
	ToBaseImageDependencyOutputWithContext(context.Context) BaseImageDependencyOutput
}

// Properties that describe a base image dependency.
type BaseImageDependencyArgs struct {
	// The sha256-based digest of the image manifest.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// The registry login server.
	Registry pulumi.StringPtrInput `pulumi:"registry"`
	// The repository name.
	Repository pulumi.StringPtrInput `pulumi:"repository"`
	// The tag name.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// The type of the base image dependency.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (BaseImageDependencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageDependency)(nil)).Elem()
}

func (i BaseImageDependencyArgs) ToBaseImageDependencyOutput() BaseImageDependencyOutput {
	return i.ToBaseImageDependencyOutputWithContext(context.Background())
}

func (i BaseImageDependencyArgs) ToBaseImageDependencyOutputWithContext(ctx context.Context) BaseImageDependencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageDependencyOutput)
}

// Properties that describe a base image dependency.
type BaseImageDependencyOutput struct{ *pulumi.OutputState }

func (BaseImageDependencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageDependency)(nil)).Elem()
}

func (o BaseImageDependencyOutput) ToBaseImageDependencyOutput() BaseImageDependencyOutput {
	return o
}

func (o BaseImageDependencyOutput) ToBaseImageDependencyOutputWithContext(ctx context.Context) BaseImageDependencyOutput {
	return o
}

// The sha256-based digest of the image manifest.
func (o BaseImageDependencyOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependency) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// The registry login server.
func (o BaseImageDependencyOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependency) *string { return v.Registry }).(pulumi.StringPtrOutput)
}

// The repository name.
func (o BaseImageDependencyOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependency) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

// The tag name.
func (o BaseImageDependencyOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependency) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// The type of the base image dependency.
func (o BaseImageDependencyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependency) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Properties that describe a base image dependency.
type BaseImageDependencyResponse struct {
	// The sha256-based digest of the image manifest.
	Digest *string `pulumi:"digest"`
	// The registry login server.
	Registry *string `pulumi:"registry"`
	// The repository name.
	Repository *string `pulumi:"repository"`
	// The tag name.
	Tag *string `pulumi:"tag"`
	// The type of the base image dependency.
	Type *string `pulumi:"type"`
}

// BaseImageDependencyResponseInput is an input type that accepts BaseImageDependencyResponseArgs and BaseImageDependencyResponseOutput values.
// You can construct a concrete instance of `BaseImageDependencyResponseInput` via:
//
//          BaseImageDependencyResponseArgs{...}
type BaseImageDependencyResponseInput interface {
	pulumi.Input

	ToBaseImageDependencyResponseOutput() BaseImageDependencyResponseOutput
	ToBaseImageDependencyResponseOutputWithContext(context.Context) BaseImageDependencyResponseOutput
}

// Properties that describe a base image dependency.
type BaseImageDependencyResponseArgs struct {
	// The sha256-based digest of the image manifest.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// The registry login server.
	Registry pulumi.StringPtrInput `pulumi:"registry"`
	// The repository name.
	Repository pulumi.StringPtrInput `pulumi:"repository"`
	// The tag name.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// The type of the base image dependency.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (BaseImageDependencyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageDependencyResponse)(nil)).Elem()
}

func (i BaseImageDependencyResponseArgs) ToBaseImageDependencyResponseOutput() BaseImageDependencyResponseOutput {
	return i.ToBaseImageDependencyResponseOutputWithContext(context.Background())
}

func (i BaseImageDependencyResponseArgs) ToBaseImageDependencyResponseOutputWithContext(ctx context.Context) BaseImageDependencyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageDependencyResponseOutput)
}

// BaseImageDependencyResponseArrayInput is an input type that accepts BaseImageDependencyResponseArray and BaseImageDependencyResponseArrayOutput values.
// You can construct a concrete instance of `BaseImageDependencyResponseArrayInput` via:
//
//          BaseImageDependencyResponseArray{ BaseImageDependencyResponseArgs{...} }
type BaseImageDependencyResponseArrayInput interface {
	pulumi.Input

	ToBaseImageDependencyResponseArrayOutput() BaseImageDependencyResponseArrayOutput
	ToBaseImageDependencyResponseArrayOutputWithContext(context.Context) BaseImageDependencyResponseArrayOutput
}

type BaseImageDependencyResponseArray []BaseImageDependencyResponseInput

func (BaseImageDependencyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaseImageDependencyResponse)(nil)).Elem()
}

func (i BaseImageDependencyResponseArray) ToBaseImageDependencyResponseArrayOutput() BaseImageDependencyResponseArrayOutput {
	return i.ToBaseImageDependencyResponseArrayOutputWithContext(context.Background())
}

func (i BaseImageDependencyResponseArray) ToBaseImageDependencyResponseArrayOutputWithContext(ctx context.Context) BaseImageDependencyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageDependencyResponseArrayOutput)
}

// Properties that describe a base image dependency.
type BaseImageDependencyResponseOutput struct{ *pulumi.OutputState }

func (BaseImageDependencyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageDependencyResponse)(nil)).Elem()
}

func (o BaseImageDependencyResponseOutput) ToBaseImageDependencyResponseOutput() BaseImageDependencyResponseOutput {
	return o
}

func (o BaseImageDependencyResponseOutput) ToBaseImageDependencyResponseOutputWithContext(ctx context.Context) BaseImageDependencyResponseOutput {
	return o
}

// The sha256-based digest of the image manifest.
func (o BaseImageDependencyResponseOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyResponse) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// The registry login server.
func (o BaseImageDependencyResponseOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyResponse) *string { return v.Registry }).(pulumi.StringPtrOutput)
}

// The repository name.
func (o BaseImageDependencyResponseOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyResponse) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

// The tag name.
func (o BaseImageDependencyResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// The type of the base image dependency.
func (o BaseImageDependencyResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageDependencyResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type BaseImageDependencyResponseArrayOutput struct{ *pulumi.OutputState }

func (BaseImageDependencyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaseImageDependencyResponse)(nil)).Elem()
}

func (o BaseImageDependencyResponseArrayOutput) ToBaseImageDependencyResponseArrayOutput() BaseImageDependencyResponseArrayOutput {
	return o
}

func (o BaseImageDependencyResponseArrayOutput) ToBaseImageDependencyResponseArrayOutputWithContext(ctx context.Context) BaseImageDependencyResponseArrayOutput {
	return o
}

func (o BaseImageDependencyResponseArrayOutput) Index(i pulumi.IntInput) BaseImageDependencyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BaseImageDependencyResponse {
		return vs[0].([]BaseImageDependencyResponse)[vs[1].(int)]
	}).(BaseImageDependencyResponseOutput)
}

// The trigger based on base image dependency.
type BaseImageTrigger struct {
	// The type of the auto trigger for base image dependency updates.
	BaseImageTriggerType string `pulumi:"baseImageTriggerType"`
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
}

// BaseImageTriggerInput is an input type that accepts BaseImageTriggerArgs and BaseImageTriggerOutput values.
// You can construct a concrete instance of `BaseImageTriggerInput` via:
//
//          BaseImageTriggerArgs{...}
type BaseImageTriggerInput interface {
	pulumi.Input

	ToBaseImageTriggerOutput() BaseImageTriggerOutput
	ToBaseImageTriggerOutputWithContext(context.Context) BaseImageTriggerOutput
}

// The trigger based on base image dependency.
type BaseImageTriggerArgs struct {
	// The type of the auto trigger for base image dependency updates.
	BaseImageTriggerType pulumi.StringInput `pulumi:"baseImageTriggerType"`
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (BaseImageTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageTrigger)(nil)).Elem()
}

func (i BaseImageTriggerArgs) ToBaseImageTriggerOutput() BaseImageTriggerOutput {
	return i.ToBaseImageTriggerOutputWithContext(context.Background())
}

func (i BaseImageTriggerArgs) ToBaseImageTriggerOutputWithContext(ctx context.Context) BaseImageTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerOutput)
}

func (i BaseImageTriggerArgs) ToBaseImageTriggerPtrOutput() BaseImageTriggerPtrOutput {
	return i.ToBaseImageTriggerPtrOutputWithContext(context.Background())
}

func (i BaseImageTriggerArgs) ToBaseImageTriggerPtrOutputWithContext(ctx context.Context) BaseImageTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerOutput).ToBaseImageTriggerPtrOutputWithContext(ctx)
}

// BaseImageTriggerPtrInput is an input type that accepts BaseImageTriggerArgs, BaseImageTriggerPtr and BaseImageTriggerPtrOutput values.
// You can construct a concrete instance of `BaseImageTriggerPtrInput` via:
//
//          BaseImageTriggerArgs{...}
//
//  or:
//
//          nil
type BaseImageTriggerPtrInput interface {
	pulumi.Input

	ToBaseImageTriggerPtrOutput() BaseImageTriggerPtrOutput
	ToBaseImageTriggerPtrOutputWithContext(context.Context) BaseImageTriggerPtrOutput
}

type baseImageTriggerPtrType BaseImageTriggerArgs

func BaseImageTriggerPtr(v *BaseImageTriggerArgs) BaseImageTriggerPtrInput {
	return (*baseImageTriggerPtrType)(v)
}

func (*baseImageTriggerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseImageTrigger)(nil)).Elem()
}

func (i *baseImageTriggerPtrType) ToBaseImageTriggerPtrOutput() BaseImageTriggerPtrOutput {
	return i.ToBaseImageTriggerPtrOutputWithContext(context.Background())
}

func (i *baseImageTriggerPtrType) ToBaseImageTriggerPtrOutputWithContext(ctx context.Context) BaseImageTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerPtrOutput)
}

// The trigger based on base image dependency.
type BaseImageTriggerOutput struct{ *pulumi.OutputState }

func (BaseImageTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageTrigger)(nil)).Elem()
}

func (o BaseImageTriggerOutput) ToBaseImageTriggerOutput() BaseImageTriggerOutput {
	return o
}

func (o BaseImageTriggerOutput) ToBaseImageTriggerOutputWithContext(ctx context.Context) BaseImageTriggerOutput {
	return o
}

func (o BaseImageTriggerOutput) ToBaseImageTriggerPtrOutput() BaseImageTriggerPtrOutput {
	return o.ToBaseImageTriggerPtrOutputWithContext(context.Background())
}

func (o BaseImageTriggerOutput) ToBaseImageTriggerPtrOutputWithContext(ctx context.Context) BaseImageTriggerPtrOutput {
	return o.ApplyT(func(v BaseImageTrigger) *BaseImageTrigger {
		return &v
	}).(BaseImageTriggerPtrOutput)
}

// The type of the auto trigger for base image dependency updates.
func (o BaseImageTriggerOutput) BaseImageTriggerType() pulumi.StringOutput {
	return o.ApplyT(func(v BaseImageTrigger) string { return v.BaseImageTriggerType }).(pulumi.StringOutput)
}

// The name of the trigger.
func (o BaseImageTriggerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BaseImageTrigger) string { return v.Name }).(pulumi.StringOutput)
}

// The current status of trigger.
func (o BaseImageTriggerOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageTrigger) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type BaseImageTriggerPtrOutput struct{ *pulumi.OutputState }

func (BaseImageTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseImageTrigger)(nil)).Elem()
}

func (o BaseImageTriggerPtrOutput) ToBaseImageTriggerPtrOutput() BaseImageTriggerPtrOutput {
	return o
}

func (o BaseImageTriggerPtrOutput) ToBaseImageTriggerPtrOutputWithContext(ctx context.Context) BaseImageTriggerPtrOutput {
	return o
}

func (o BaseImageTriggerPtrOutput) Elem() BaseImageTriggerOutput {
	return o.ApplyT(func(v *BaseImageTrigger) BaseImageTrigger { return *v }).(BaseImageTriggerOutput)
}

// The type of the auto trigger for base image dependency updates.
func (o BaseImageTriggerPtrOutput) BaseImageTriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTrigger) *string {
		if v == nil {
			return nil
		}
		return &v.BaseImageTriggerType
	}).(pulumi.StringPtrOutput)
}

// The name of the trigger.
func (o BaseImageTriggerPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTrigger) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The current status of trigger.
func (o BaseImageTriggerPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTrigger) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The trigger based on base image dependency.
type BaseImageTriggerResponse struct {
	// The type of the auto trigger for base image dependency updates.
	BaseImageTriggerType string `pulumi:"baseImageTriggerType"`
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
}

// BaseImageTriggerResponseInput is an input type that accepts BaseImageTriggerResponseArgs and BaseImageTriggerResponseOutput values.
// You can construct a concrete instance of `BaseImageTriggerResponseInput` via:
//
//          BaseImageTriggerResponseArgs{...}
type BaseImageTriggerResponseInput interface {
	pulumi.Input

	ToBaseImageTriggerResponseOutput() BaseImageTriggerResponseOutput
	ToBaseImageTriggerResponseOutputWithContext(context.Context) BaseImageTriggerResponseOutput
}

// The trigger based on base image dependency.
type BaseImageTriggerResponseArgs struct {
	// The type of the auto trigger for base image dependency updates.
	BaseImageTriggerType pulumi.StringInput `pulumi:"baseImageTriggerType"`
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (BaseImageTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageTriggerResponse)(nil)).Elem()
}

func (i BaseImageTriggerResponseArgs) ToBaseImageTriggerResponseOutput() BaseImageTriggerResponseOutput {
	return i.ToBaseImageTriggerResponseOutputWithContext(context.Background())
}

func (i BaseImageTriggerResponseArgs) ToBaseImageTriggerResponseOutputWithContext(ctx context.Context) BaseImageTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerResponseOutput)
}

func (i BaseImageTriggerResponseArgs) ToBaseImageTriggerResponsePtrOutput() BaseImageTriggerResponsePtrOutput {
	return i.ToBaseImageTriggerResponsePtrOutputWithContext(context.Background())
}

func (i BaseImageTriggerResponseArgs) ToBaseImageTriggerResponsePtrOutputWithContext(ctx context.Context) BaseImageTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerResponseOutput).ToBaseImageTriggerResponsePtrOutputWithContext(ctx)
}

// BaseImageTriggerResponsePtrInput is an input type that accepts BaseImageTriggerResponseArgs, BaseImageTriggerResponsePtr and BaseImageTriggerResponsePtrOutput values.
// You can construct a concrete instance of `BaseImageTriggerResponsePtrInput` via:
//
//          BaseImageTriggerResponseArgs{...}
//
//  or:
//
//          nil
type BaseImageTriggerResponsePtrInput interface {
	pulumi.Input

	ToBaseImageTriggerResponsePtrOutput() BaseImageTriggerResponsePtrOutput
	ToBaseImageTriggerResponsePtrOutputWithContext(context.Context) BaseImageTriggerResponsePtrOutput
}

type baseImageTriggerResponsePtrType BaseImageTriggerResponseArgs

func BaseImageTriggerResponsePtr(v *BaseImageTriggerResponseArgs) BaseImageTriggerResponsePtrInput {
	return (*baseImageTriggerResponsePtrType)(v)
}

func (*baseImageTriggerResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseImageTriggerResponse)(nil)).Elem()
}

func (i *baseImageTriggerResponsePtrType) ToBaseImageTriggerResponsePtrOutput() BaseImageTriggerResponsePtrOutput {
	return i.ToBaseImageTriggerResponsePtrOutputWithContext(context.Background())
}

func (i *baseImageTriggerResponsePtrType) ToBaseImageTriggerResponsePtrOutputWithContext(ctx context.Context) BaseImageTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaseImageTriggerResponsePtrOutput)
}

// The trigger based on base image dependency.
type BaseImageTriggerResponseOutput struct{ *pulumi.OutputState }

func (BaseImageTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaseImageTriggerResponse)(nil)).Elem()
}

func (o BaseImageTriggerResponseOutput) ToBaseImageTriggerResponseOutput() BaseImageTriggerResponseOutput {
	return o
}

func (o BaseImageTriggerResponseOutput) ToBaseImageTriggerResponseOutputWithContext(ctx context.Context) BaseImageTriggerResponseOutput {
	return o
}

func (o BaseImageTriggerResponseOutput) ToBaseImageTriggerResponsePtrOutput() BaseImageTriggerResponsePtrOutput {
	return o.ToBaseImageTriggerResponsePtrOutputWithContext(context.Background())
}

func (o BaseImageTriggerResponseOutput) ToBaseImageTriggerResponsePtrOutputWithContext(ctx context.Context) BaseImageTriggerResponsePtrOutput {
	return o.ApplyT(func(v BaseImageTriggerResponse) *BaseImageTriggerResponse {
		return &v
	}).(BaseImageTriggerResponsePtrOutput)
}

// The type of the auto trigger for base image dependency updates.
func (o BaseImageTriggerResponseOutput) BaseImageTriggerType() pulumi.StringOutput {
	return o.ApplyT(func(v BaseImageTriggerResponse) string { return v.BaseImageTriggerType }).(pulumi.StringOutput)
}

// The name of the trigger.
func (o BaseImageTriggerResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BaseImageTriggerResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The current status of trigger.
func (o BaseImageTriggerResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaseImageTriggerResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type BaseImageTriggerResponsePtrOutput struct{ *pulumi.OutputState }

func (BaseImageTriggerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BaseImageTriggerResponse)(nil)).Elem()
}

func (o BaseImageTriggerResponsePtrOutput) ToBaseImageTriggerResponsePtrOutput() BaseImageTriggerResponsePtrOutput {
	return o
}

func (o BaseImageTriggerResponsePtrOutput) ToBaseImageTriggerResponsePtrOutputWithContext(ctx context.Context) BaseImageTriggerResponsePtrOutput {
	return o
}

func (o BaseImageTriggerResponsePtrOutput) Elem() BaseImageTriggerResponseOutput {
	return o.ApplyT(func(v *BaseImageTriggerResponse) BaseImageTriggerResponse { return *v }).(BaseImageTriggerResponseOutput)
}

// The type of the auto trigger for base image dependency updates.
func (o BaseImageTriggerResponsePtrOutput) BaseImageTriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BaseImageTriggerType
	}).(pulumi.StringPtrOutput)
}

// The name of the trigger.
func (o BaseImageTriggerResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The current status of trigger.
func (o BaseImageTriggerResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaseImageTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type Credentials struct {
	// Describes the credential parameters for accessing other custom registries. The key
	// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
	// the value of the item will be the registry credentials for accessing the registry.
	CustomRegistries map[string]string `pulumi:"customRegistries"`
	// Describes the credential parameters for accessing the source registry.
	SourceRegistry *SourceRegistryCredentials `pulumi:"sourceRegistry"`
}

// CredentialsInput is an input type that accepts CredentialsArgs and CredentialsOutput values.
// You can construct a concrete instance of `CredentialsInput` via:
//
//          CredentialsArgs{...}
type CredentialsInput interface {
	pulumi.Input

	ToCredentialsOutput() CredentialsOutput
	ToCredentialsOutputWithContext(context.Context) CredentialsOutput
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type CredentialsArgs struct {
	// Describes the credential parameters for accessing other custom registries. The key
	// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
	// the value of the item will be the registry credentials for accessing the registry.
	CustomRegistries pulumi.StringMapInput `pulumi:"customRegistries"`
	// Describes the credential parameters for accessing the source registry.
	SourceRegistry SourceRegistryCredentialsPtrInput `pulumi:"sourceRegistry"`
}

func (CredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Credentials)(nil)).Elem()
}

func (i CredentialsArgs) ToCredentialsOutput() CredentialsOutput {
	return i.ToCredentialsOutputWithContext(context.Background())
}

func (i CredentialsArgs) ToCredentialsOutputWithContext(ctx context.Context) CredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsOutput)
}

func (i CredentialsArgs) ToCredentialsPtrOutput() CredentialsPtrOutput {
	return i.ToCredentialsPtrOutputWithContext(context.Background())
}

func (i CredentialsArgs) ToCredentialsPtrOutputWithContext(ctx context.Context) CredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsOutput).ToCredentialsPtrOutputWithContext(ctx)
}

// CredentialsPtrInput is an input type that accepts CredentialsArgs, CredentialsPtr and CredentialsPtrOutput values.
// You can construct a concrete instance of `CredentialsPtrInput` via:
//
//          CredentialsArgs{...}
//
//  or:
//
//          nil
type CredentialsPtrInput interface {
	pulumi.Input

	ToCredentialsPtrOutput() CredentialsPtrOutput
	ToCredentialsPtrOutputWithContext(context.Context) CredentialsPtrOutput
}

type credentialsPtrType CredentialsArgs

func CredentialsPtr(v *CredentialsArgs) CredentialsPtrInput {
	return (*credentialsPtrType)(v)
}

func (*credentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Credentials)(nil)).Elem()
}

func (i *credentialsPtrType) ToCredentialsPtrOutput() CredentialsPtrOutput {
	return i.ToCredentialsPtrOutputWithContext(context.Background())
}

func (i *credentialsPtrType) ToCredentialsPtrOutputWithContext(ctx context.Context) CredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsPtrOutput)
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type CredentialsOutput struct{ *pulumi.OutputState }

func (CredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Credentials)(nil)).Elem()
}

func (o CredentialsOutput) ToCredentialsOutput() CredentialsOutput {
	return o
}

func (o CredentialsOutput) ToCredentialsOutputWithContext(ctx context.Context) CredentialsOutput {
	return o
}

func (o CredentialsOutput) ToCredentialsPtrOutput() CredentialsPtrOutput {
	return o.ToCredentialsPtrOutputWithContext(context.Background())
}

func (o CredentialsOutput) ToCredentialsPtrOutputWithContext(ctx context.Context) CredentialsPtrOutput {
	return o.ApplyT(func(v Credentials) *Credentials {
		return &v
	}).(CredentialsPtrOutput)
}

// Describes the credential parameters for accessing other custom registries. The key
// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
// the value of the item will be the registry credentials for accessing the registry.
func (o CredentialsOutput) CustomRegistries() pulumi.StringMapOutput {
	return o.ApplyT(func(v Credentials) map[string]string { return v.CustomRegistries }).(pulumi.StringMapOutput)
}

// Describes the credential parameters for accessing the source registry.
func (o CredentialsOutput) SourceRegistry() SourceRegistryCredentialsPtrOutput {
	return o.ApplyT(func(v Credentials) *SourceRegistryCredentials { return v.SourceRegistry }).(SourceRegistryCredentialsPtrOutput)
}

type CredentialsPtrOutput struct{ *pulumi.OutputState }

func (CredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Credentials)(nil)).Elem()
}

func (o CredentialsPtrOutput) ToCredentialsPtrOutput() CredentialsPtrOutput {
	return o
}

func (o CredentialsPtrOutput) ToCredentialsPtrOutputWithContext(ctx context.Context) CredentialsPtrOutput {
	return o
}

func (o CredentialsPtrOutput) Elem() CredentialsOutput {
	return o.ApplyT(func(v *Credentials) Credentials { return *v }).(CredentialsOutput)
}

// Describes the credential parameters for accessing other custom registries. The key
// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
// the value of the item will be the registry credentials for accessing the registry.
func (o CredentialsPtrOutput) CustomRegistries() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Credentials) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomRegistries
	}).(pulumi.StringMapOutput)
}

// Describes the credential parameters for accessing the source registry.
func (o CredentialsPtrOutput) SourceRegistry() SourceRegistryCredentialsPtrOutput {
	return o.ApplyT(func(v *Credentials) *SourceRegistryCredentials {
		if v == nil {
			return nil
		}
		return v.SourceRegistry
	}).(SourceRegistryCredentialsPtrOutput)
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type CredentialsResponse struct {
	// Describes the credential parameters for accessing other custom registries. The key
	// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
	// the value of the item will be the registry credentials for accessing the registry.
	CustomRegistries map[string]string `pulumi:"customRegistries"`
	// Describes the credential parameters for accessing the source registry.
	SourceRegistry *SourceRegistryCredentialsResponse `pulumi:"sourceRegistry"`
}

// CredentialsResponseInput is an input type that accepts CredentialsResponseArgs and CredentialsResponseOutput values.
// You can construct a concrete instance of `CredentialsResponseInput` via:
//
//          CredentialsResponseArgs{...}
type CredentialsResponseInput interface {
	pulumi.Input

	ToCredentialsResponseOutput() CredentialsResponseOutput
	ToCredentialsResponseOutputWithContext(context.Context) CredentialsResponseOutput
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type CredentialsResponseArgs struct {
	// Describes the credential parameters for accessing other custom registries. The key
	// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
	// the value of the item will be the registry credentials for accessing the registry.
	CustomRegistries pulumi.StringMapInput `pulumi:"customRegistries"`
	// Describes the credential parameters for accessing the source registry.
	SourceRegistry SourceRegistryCredentialsResponsePtrInput `pulumi:"sourceRegistry"`
}

func (CredentialsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialsResponse)(nil)).Elem()
}

func (i CredentialsResponseArgs) ToCredentialsResponseOutput() CredentialsResponseOutput {
	return i.ToCredentialsResponseOutputWithContext(context.Background())
}

func (i CredentialsResponseArgs) ToCredentialsResponseOutputWithContext(ctx context.Context) CredentialsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsResponseOutput)
}

func (i CredentialsResponseArgs) ToCredentialsResponsePtrOutput() CredentialsResponsePtrOutput {
	return i.ToCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i CredentialsResponseArgs) ToCredentialsResponsePtrOutputWithContext(ctx context.Context) CredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsResponseOutput).ToCredentialsResponsePtrOutputWithContext(ctx)
}

// CredentialsResponsePtrInput is an input type that accepts CredentialsResponseArgs, CredentialsResponsePtr and CredentialsResponsePtrOutput values.
// You can construct a concrete instance of `CredentialsResponsePtrInput` via:
//
//          CredentialsResponseArgs{...}
//
//  or:
//
//          nil
type CredentialsResponsePtrInput interface {
	pulumi.Input

	ToCredentialsResponsePtrOutput() CredentialsResponsePtrOutput
	ToCredentialsResponsePtrOutputWithContext(context.Context) CredentialsResponsePtrOutput
}

type credentialsResponsePtrType CredentialsResponseArgs

func CredentialsResponsePtr(v *CredentialsResponseArgs) CredentialsResponsePtrInput {
	return (*credentialsResponsePtrType)(v)
}

func (*credentialsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CredentialsResponse)(nil)).Elem()
}

func (i *credentialsResponsePtrType) ToCredentialsResponsePtrOutput() CredentialsResponsePtrOutput {
	return i.ToCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i *credentialsResponsePtrType) ToCredentialsResponsePtrOutputWithContext(ctx context.Context) CredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialsResponsePtrOutput)
}

// The parameters that describes a set of credentials that will be used when a run is invoked.
type CredentialsResponseOutput struct{ *pulumi.OutputState }

func (CredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialsResponse)(nil)).Elem()
}

func (o CredentialsResponseOutput) ToCredentialsResponseOutput() CredentialsResponseOutput {
	return o
}

func (o CredentialsResponseOutput) ToCredentialsResponseOutputWithContext(ctx context.Context) CredentialsResponseOutput {
	return o
}

func (o CredentialsResponseOutput) ToCredentialsResponsePtrOutput() CredentialsResponsePtrOutput {
	return o.ToCredentialsResponsePtrOutputWithContext(context.Background())
}

func (o CredentialsResponseOutput) ToCredentialsResponsePtrOutputWithContext(ctx context.Context) CredentialsResponsePtrOutput {
	return o.ApplyT(func(v CredentialsResponse) *CredentialsResponse {
		return &v
	}).(CredentialsResponsePtrOutput)
}

// Describes the credential parameters for accessing other custom registries. The key
// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
// the value of the item will be the registry credentials for accessing the registry.
func (o CredentialsResponseOutput) CustomRegistries() pulumi.StringMapOutput {
	return o.ApplyT(func(v CredentialsResponse) map[string]string { return v.CustomRegistries }).(pulumi.StringMapOutput)
}

// Describes the credential parameters for accessing the source registry.
func (o CredentialsResponseOutput) SourceRegistry() SourceRegistryCredentialsResponsePtrOutput {
	return o.ApplyT(func(v CredentialsResponse) *SourceRegistryCredentialsResponse { return v.SourceRegistry }).(SourceRegistryCredentialsResponsePtrOutput)
}

type CredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (CredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CredentialsResponse)(nil)).Elem()
}

func (o CredentialsResponsePtrOutput) ToCredentialsResponsePtrOutput() CredentialsResponsePtrOutput {
	return o
}

func (o CredentialsResponsePtrOutput) ToCredentialsResponsePtrOutputWithContext(ctx context.Context) CredentialsResponsePtrOutput {
	return o
}

func (o CredentialsResponsePtrOutput) Elem() CredentialsResponseOutput {
	return o.ApplyT(func(v *CredentialsResponse) CredentialsResponse { return *v }).(CredentialsResponseOutput)
}

// Describes the credential parameters for accessing other custom registries. The key
// for the dictionary item will be the registry login server (myregistry.azurecr.io) and
// the value of the item will be the registry credentials for accessing the registry.
func (o CredentialsResponsePtrOutput) CustomRegistries() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CredentialsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomRegistries
	}).(pulumi.StringMapOutput)
}

// Describes the credential parameters for accessing the source registry.
func (o CredentialsResponsePtrOutput) SourceRegistry() SourceRegistryCredentialsResponsePtrOutput {
	return o.ApplyT(func(v *CredentialsResponse) *SourceRegistryCredentialsResponse {
		if v == nil {
			return nil
		}
		return v.SourceRegistry
	}).(SourceRegistryCredentialsResponsePtrOutput)
}

// The content of the event request message.
type EventContentResponse struct {
	// The action that encompasses the provided event.
	Action *string `pulumi:"action"`
	// The agent that initiated the event. For most situations, this could be from the authorization context of the request.
	Actor *ActorResponse `pulumi:"actor"`
	// The event ID.
	Id *string `pulumi:"id"`
	// The request that generated the event.
	Request *RequestResponse `pulumi:"request"`
	// The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it.
	Source *SourceResponse `pulumi:"source"`
	// The target of the event.
	Target *TargetResponse `pulumi:"target"`
	// The time at which the event occurred.
	Timestamp *string `pulumi:"timestamp"`
}

// EventContentResponseInput is an input type that accepts EventContentResponseArgs and EventContentResponseOutput values.
// You can construct a concrete instance of `EventContentResponseInput` via:
//
//          EventContentResponseArgs{...}
type EventContentResponseInput interface {
	pulumi.Input

	ToEventContentResponseOutput() EventContentResponseOutput
	ToEventContentResponseOutputWithContext(context.Context) EventContentResponseOutput
}

// The content of the event request message.
type EventContentResponseArgs struct {
	// The action that encompasses the provided event.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// The agent that initiated the event. For most situations, this could be from the authorization context of the request.
	Actor ActorResponsePtrInput `pulumi:"actor"`
	// The event ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The request that generated the event.
	Request RequestResponsePtrInput `pulumi:"request"`
	// The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it.
	Source SourceResponsePtrInput `pulumi:"source"`
	// The target of the event.
	Target TargetResponsePtrInput `pulumi:"target"`
	// The time at which the event occurred.
	Timestamp pulumi.StringPtrInput `pulumi:"timestamp"`
}

func (EventContentResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventContentResponse)(nil)).Elem()
}

func (i EventContentResponseArgs) ToEventContentResponseOutput() EventContentResponseOutput {
	return i.ToEventContentResponseOutputWithContext(context.Background())
}

func (i EventContentResponseArgs) ToEventContentResponseOutputWithContext(ctx context.Context) EventContentResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventContentResponseOutput)
}

func (i EventContentResponseArgs) ToEventContentResponsePtrOutput() EventContentResponsePtrOutput {
	return i.ToEventContentResponsePtrOutputWithContext(context.Background())
}

func (i EventContentResponseArgs) ToEventContentResponsePtrOutputWithContext(ctx context.Context) EventContentResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventContentResponseOutput).ToEventContentResponsePtrOutputWithContext(ctx)
}

// EventContentResponsePtrInput is an input type that accepts EventContentResponseArgs, EventContentResponsePtr and EventContentResponsePtrOutput values.
// You can construct a concrete instance of `EventContentResponsePtrInput` via:
//
//          EventContentResponseArgs{...}
//
//  or:
//
//          nil
type EventContentResponsePtrInput interface {
	pulumi.Input

	ToEventContentResponsePtrOutput() EventContentResponsePtrOutput
	ToEventContentResponsePtrOutputWithContext(context.Context) EventContentResponsePtrOutput
}

type eventContentResponsePtrType EventContentResponseArgs

func EventContentResponsePtr(v *EventContentResponseArgs) EventContentResponsePtrInput {
	return (*eventContentResponsePtrType)(v)
}

func (*eventContentResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventContentResponse)(nil)).Elem()
}

func (i *eventContentResponsePtrType) ToEventContentResponsePtrOutput() EventContentResponsePtrOutput {
	return i.ToEventContentResponsePtrOutputWithContext(context.Background())
}

func (i *eventContentResponsePtrType) ToEventContentResponsePtrOutputWithContext(ctx context.Context) EventContentResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventContentResponsePtrOutput)
}

// The content of the event request message.
type EventContentResponseOutput struct{ *pulumi.OutputState }

func (EventContentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventContentResponse)(nil)).Elem()
}

func (o EventContentResponseOutput) ToEventContentResponseOutput() EventContentResponseOutput {
	return o
}

func (o EventContentResponseOutput) ToEventContentResponseOutputWithContext(ctx context.Context) EventContentResponseOutput {
	return o
}

func (o EventContentResponseOutput) ToEventContentResponsePtrOutput() EventContentResponsePtrOutput {
	return o.ToEventContentResponsePtrOutputWithContext(context.Background())
}

func (o EventContentResponseOutput) ToEventContentResponsePtrOutputWithContext(ctx context.Context) EventContentResponsePtrOutput {
	return o.ApplyT(func(v EventContentResponse) *EventContentResponse {
		return &v
	}).(EventContentResponsePtrOutput)
}

// The action that encompasses the provided event.
func (o EventContentResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventContentResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// The agent that initiated the event. For most situations, this could be from the authorization context of the request.
func (o EventContentResponseOutput) Actor() ActorResponsePtrOutput {
	return o.ApplyT(func(v EventContentResponse) *ActorResponse { return v.Actor }).(ActorResponsePtrOutput)
}

// The event ID.
func (o EventContentResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventContentResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The request that generated the event.
func (o EventContentResponseOutput) Request() RequestResponsePtrOutput {
	return o.ApplyT(func(v EventContentResponse) *RequestResponse { return v.Request }).(RequestResponsePtrOutput)
}

// The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it.
func (o EventContentResponseOutput) Source() SourceResponsePtrOutput {
	return o.ApplyT(func(v EventContentResponse) *SourceResponse { return v.Source }).(SourceResponsePtrOutput)
}

// The target of the event.
func (o EventContentResponseOutput) Target() TargetResponsePtrOutput {
	return o.ApplyT(func(v EventContentResponse) *TargetResponse { return v.Target }).(TargetResponsePtrOutput)
}

// The time at which the event occurred.
func (o EventContentResponseOutput) Timestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventContentResponse) *string { return v.Timestamp }).(pulumi.StringPtrOutput)
}

type EventContentResponsePtrOutput struct{ *pulumi.OutputState }

func (EventContentResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventContentResponse)(nil)).Elem()
}

func (o EventContentResponsePtrOutput) ToEventContentResponsePtrOutput() EventContentResponsePtrOutput {
	return o
}

func (o EventContentResponsePtrOutput) ToEventContentResponsePtrOutputWithContext(ctx context.Context) EventContentResponsePtrOutput {
	return o
}

func (o EventContentResponsePtrOutput) Elem() EventContentResponseOutput {
	return o.ApplyT(func(v *EventContentResponse) EventContentResponse { return *v }).(EventContentResponseOutput)
}

// The action that encompasses the provided event.
func (o EventContentResponsePtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventContentResponse) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// The agent that initiated the event. For most situations, this could be from the authorization context of the request.
func (o EventContentResponsePtrOutput) Actor() ActorResponsePtrOutput {
	return o.ApplyT(func(v *EventContentResponse) *ActorResponse {
		if v == nil {
			return nil
		}
		return v.Actor
	}).(ActorResponsePtrOutput)
}

// The event ID.
func (o EventContentResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventContentResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The request that generated the event.
func (o EventContentResponsePtrOutput) Request() RequestResponsePtrOutput {
	return o.ApplyT(func(v *EventContentResponse) *RequestResponse {
		if v == nil {
			return nil
		}
		return v.Request
	}).(RequestResponsePtrOutput)
}

// The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it.
func (o EventContentResponsePtrOutput) Source() SourceResponsePtrOutput {
	return o.ApplyT(func(v *EventContentResponse) *SourceResponse {
		if v == nil {
			return nil
		}
		return v.Source
	}).(SourceResponsePtrOutput)
}

// The target of the event.
func (o EventContentResponsePtrOutput) Target() TargetResponsePtrOutput {
	return o.ApplyT(func(v *EventContentResponse) *TargetResponse {
		if v == nil {
			return nil
		}
		return v.Target
	}).(TargetResponsePtrOutput)
}

// The time at which the event occurred.
func (o EventContentResponsePtrOutput) Timestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventContentResponse) *string {
		if v == nil {
			return nil
		}
		return v.Timestamp
	}).(pulumi.StringPtrOutput)
}

// The event request message sent to the service URI.
type EventRequestMessageResponse struct {
	// The content of the event request message.
	Content *EventContentResponse `pulumi:"content"`
	// The headers of the event request message.
	Headers map[string]string `pulumi:"headers"`
	// The HTTP method used to send the event request message.
	Method *string `pulumi:"method"`
	// The URI used to send the event request message.
	RequestUri *string `pulumi:"requestUri"`
	// The HTTP message version.
	Version *string `pulumi:"version"`
}

// EventRequestMessageResponseInput is an input type that accepts EventRequestMessageResponseArgs and EventRequestMessageResponseOutput values.
// You can construct a concrete instance of `EventRequestMessageResponseInput` via:
//
//          EventRequestMessageResponseArgs{...}
type EventRequestMessageResponseInput interface {
	pulumi.Input

	ToEventRequestMessageResponseOutput() EventRequestMessageResponseOutput
	ToEventRequestMessageResponseOutputWithContext(context.Context) EventRequestMessageResponseOutput
}

// The event request message sent to the service URI.
type EventRequestMessageResponseArgs struct {
	// The content of the event request message.
	Content EventContentResponsePtrInput `pulumi:"content"`
	// The headers of the event request message.
	Headers pulumi.StringMapInput `pulumi:"headers"`
	// The HTTP method used to send the event request message.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// The URI used to send the event request message.
	RequestUri pulumi.StringPtrInput `pulumi:"requestUri"`
	// The HTTP message version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (EventRequestMessageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventRequestMessageResponse)(nil)).Elem()
}

func (i EventRequestMessageResponseArgs) ToEventRequestMessageResponseOutput() EventRequestMessageResponseOutput {
	return i.ToEventRequestMessageResponseOutputWithContext(context.Background())
}

func (i EventRequestMessageResponseArgs) ToEventRequestMessageResponseOutputWithContext(ctx context.Context) EventRequestMessageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventRequestMessageResponseOutput)
}

func (i EventRequestMessageResponseArgs) ToEventRequestMessageResponsePtrOutput() EventRequestMessageResponsePtrOutput {
	return i.ToEventRequestMessageResponsePtrOutputWithContext(context.Background())
}

func (i EventRequestMessageResponseArgs) ToEventRequestMessageResponsePtrOutputWithContext(ctx context.Context) EventRequestMessageResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventRequestMessageResponseOutput).ToEventRequestMessageResponsePtrOutputWithContext(ctx)
}

// EventRequestMessageResponsePtrInput is an input type that accepts EventRequestMessageResponseArgs, EventRequestMessageResponsePtr and EventRequestMessageResponsePtrOutput values.
// You can construct a concrete instance of `EventRequestMessageResponsePtrInput` via:
//
//          EventRequestMessageResponseArgs{...}
//
//  or:
//
//          nil
type EventRequestMessageResponsePtrInput interface {
	pulumi.Input

	ToEventRequestMessageResponsePtrOutput() EventRequestMessageResponsePtrOutput
	ToEventRequestMessageResponsePtrOutputWithContext(context.Context) EventRequestMessageResponsePtrOutput
}

type eventRequestMessageResponsePtrType EventRequestMessageResponseArgs

func EventRequestMessageResponsePtr(v *EventRequestMessageResponseArgs) EventRequestMessageResponsePtrInput {
	return (*eventRequestMessageResponsePtrType)(v)
}

func (*eventRequestMessageResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventRequestMessageResponse)(nil)).Elem()
}

func (i *eventRequestMessageResponsePtrType) ToEventRequestMessageResponsePtrOutput() EventRequestMessageResponsePtrOutput {
	return i.ToEventRequestMessageResponsePtrOutputWithContext(context.Background())
}

func (i *eventRequestMessageResponsePtrType) ToEventRequestMessageResponsePtrOutputWithContext(ctx context.Context) EventRequestMessageResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventRequestMessageResponsePtrOutput)
}

// The event request message sent to the service URI.
type EventRequestMessageResponseOutput struct{ *pulumi.OutputState }

func (EventRequestMessageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventRequestMessageResponse)(nil)).Elem()
}

func (o EventRequestMessageResponseOutput) ToEventRequestMessageResponseOutput() EventRequestMessageResponseOutput {
	return o
}

func (o EventRequestMessageResponseOutput) ToEventRequestMessageResponseOutputWithContext(ctx context.Context) EventRequestMessageResponseOutput {
	return o
}

func (o EventRequestMessageResponseOutput) ToEventRequestMessageResponsePtrOutput() EventRequestMessageResponsePtrOutput {
	return o.ToEventRequestMessageResponsePtrOutputWithContext(context.Background())
}

func (o EventRequestMessageResponseOutput) ToEventRequestMessageResponsePtrOutputWithContext(ctx context.Context) EventRequestMessageResponsePtrOutput {
	return o.ApplyT(func(v EventRequestMessageResponse) *EventRequestMessageResponse {
		return &v
	}).(EventRequestMessageResponsePtrOutput)
}

// The content of the event request message.
func (o EventRequestMessageResponseOutput) Content() EventContentResponsePtrOutput {
	return o.ApplyT(func(v EventRequestMessageResponse) *EventContentResponse { return v.Content }).(EventContentResponsePtrOutput)
}

// The headers of the event request message.
func (o EventRequestMessageResponseOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v EventRequestMessageResponse) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// The HTTP method used to send the event request message.
func (o EventRequestMessageResponseOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventRequestMessageResponse) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// The URI used to send the event request message.
func (o EventRequestMessageResponseOutput) RequestUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventRequestMessageResponse) *string { return v.RequestUri }).(pulumi.StringPtrOutput)
}

// The HTTP message version.
func (o EventRequestMessageResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventRequestMessageResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type EventRequestMessageResponsePtrOutput struct{ *pulumi.OutputState }

func (EventRequestMessageResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventRequestMessageResponse)(nil)).Elem()
}

func (o EventRequestMessageResponsePtrOutput) ToEventRequestMessageResponsePtrOutput() EventRequestMessageResponsePtrOutput {
	return o
}

func (o EventRequestMessageResponsePtrOutput) ToEventRequestMessageResponsePtrOutputWithContext(ctx context.Context) EventRequestMessageResponsePtrOutput {
	return o
}

func (o EventRequestMessageResponsePtrOutput) Elem() EventRequestMessageResponseOutput {
	return o.ApplyT(func(v *EventRequestMessageResponse) EventRequestMessageResponse { return *v }).(EventRequestMessageResponseOutput)
}

// The content of the event request message.
func (o EventRequestMessageResponsePtrOutput) Content() EventContentResponsePtrOutput {
	return o.ApplyT(func(v *EventRequestMessageResponse) *EventContentResponse {
		if v == nil {
			return nil
		}
		return v.Content
	}).(EventContentResponsePtrOutput)
}

// The headers of the event request message.
func (o EventRequestMessageResponsePtrOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EventRequestMessageResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringMapOutput)
}

// The HTTP method used to send the event request message.
func (o EventRequestMessageResponsePtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventRequestMessageResponse) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// The URI used to send the event request message.
func (o EventRequestMessageResponsePtrOutput) RequestUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventRequestMessageResponse) *string {
		if v == nil {
			return nil
		}
		return v.RequestUri
	}).(pulumi.StringPtrOutput)
}

// The HTTP message version.
func (o EventRequestMessageResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventRequestMessageResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The event for a webhook.
type EventResponse struct {
	// The event request message sent to the service URI.
	EventRequestMessage *EventRequestMessageResponse `pulumi:"eventRequestMessage"`
	// The event response message received from the service URI.
	EventResponseMessage *EventResponseMessageResponse `pulumi:"eventResponseMessage"`
	// The event ID.
	Id *string `pulumi:"id"`
}

// EventResponseInput is an input type that accepts EventResponseArgs and EventResponseOutput values.
// You can construct a concrete instance of `EventResponseInput` via:
//
//          EventResponseArgs{...}
type EventResponseInput interface {
	pulumi.Input

	ToEventResponseOutput() EventResponseOutput
	ToEventResponseOutputWithContext(context.Context) EventResponseOutput
}

// The event for a webhook.
type EventResponseArgs struct {
	// The event request message sent to the service URI.
	EventRequestMessage EventRequestMessageResponsePtrInput `pulumi:"eventRequestMessage"`
	// The event response message received from the service URI.
	EventResponseMessage EventResponseMessageResponsePtrInput `pulumi:"eventResponseMessage"`
	// The event ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (EventResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventResponse)(nil)).Elem()
}

func (i EventResponseArgs) ToEventResponseOutput() EventResponseOutput {
	return i.ToEventResponseOutputWithContext(context.Background())
}

func (i EventResponseArgs) ToEventResponseOutputWithContext(ctx context.Context) EventResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventResponseOutput)
}

// EventResponseArrayInput is an input type that accepts EventResponseArray and EventResponseArrayOutput values.
// You can construct a concrete instance of `EventResponseArrayInput` via:
//
//          EventResponseArray{ EventResponseArgs{...} }
type EventResponseArrayInput interface {
	pulumi.Input

	ToEventResponseArrayOutput() EventResponseArrayOutput
	ToEventResponseArrayOutputWithContext(context.Context) EventResponseArrayOutput
}

type EventResponseArray []EventResponseInput

func (EventResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventResponse)(nil)).Elem()
}

func (i EventResponseArray) ToEventResponseArrayOutput() EventResponseArrayOutput {
	return i.ToEventResponseArrayOutputWithContext(context.Background())
}

func (i EventResponseArray) ToEventResponseArrayOutputWithContext(ctx context.Context) EventResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventResponseArrayOutput)
}

// The event for a webhook.
type EventResponseOutput struct{ *pulumi.OutputState }

func (EventResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventResponse)(nil)).Elem()
}

func (o EventResponseOutput) ToEventResponseOutput() EventResponseOutput {
	return o
}

func (o EventResponseOutput) ToEventResponseOutputWithContext(ctx context.Context) EventResponseOutput {
	return o
}

// The event request message sent to the service URI.
func (o EventResponseOutput) EventRequestMessage() EventRequestMessageResponsePtrOutput {
	return o.ApplyT(func(v EventResponse) *EventRequestMessageResponse { return v.EventRequestMessage }).(EventRequestMessageResponsePtrOutput)
}

// The event response message received from the service URI.
func (o EventResponseOutput) EventResponseMessage() EventResponseMessageResponsePtrOutput {
	return o.ApplyT(func(v EventResponse) *EventResponseMessageResponse { return v.EventResponseMessage }).(EventResponseMessageResponsePtrOutput)
}

// The event ID.
func (o EventResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type EventResponseArrayOutput struct{ *pulumi.OutputState }

func (EventResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventResponse)(nil)).Elem()
}

func (o EventResponseArrayOutput) ToEventResponseArrayOutput() EventResponseArrayOutput {
	return o
}

func (o EventResponseArrayOutput) ToEventResponseArrayOutputWithContext(ctx context.Context) EventResponseArrayOutput {
	return o
}

func (o EventResponseArrayOutput) Index(i pulumi.IntInput) EventResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventResponse {
		return vs[0].([]EventResponse)[vs[1].(int)]
	}).(EventResponseOutput)
}

// The event response message received from the service URI.
type EventResponseMessageResponse struct {
	// The content of the event response message.
	Content *string `pulumi:"content"`
	// The headers of the event response message.
	Headers map[string]string `pulumi:"headers"`
	// The reason phrase of the event response message.
	ReasonPhrase *string `pulumi:"reasonPhrase"`
	// The status code of the event response message.
	StatusCode *string `pulumi:"statusCode"`
	// The HTTP message version.
	Version *string `pulumi:"version"`
}

// EventResponseMessageResponseInput is an input type that accepts EventResponseMessageResponseArgs and EventResponseMessageResponseOutput values.
// You can construct a concrete instance of `EventResponseMessageResponseInput` via:
//
//          EventResponseMessageResponseArgs{...}
type EventResponseMessageResponseInput interface {
	pulumi.Input

	ToEventResponseMessageResponseOutput() EventResponseMessageResponseOutput
	ToEventResponseMessageResponseOutputWithContext(context.Context) EventResponseMessageResponseOutput
}

// The event response message received from the service URI.
type EventResponseMessageResponseArgs struct {
	// The content of the event response message.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// The headers of the event response message.
	Headers pulumi.StringMapInput `pulumi:"headers"`
	// The reason phrase of the event response message.
	ReasonPhrase pulumi.StringPtrInput `pulumi:"reasonPhrase"`
	// The status code of the event response message.
	StatusCode pulumi.StringPtrInput `pulumi:"statusCode"`
	// The HTTP message version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (EventResponseMessageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventResponseMessageResponse)(nil)).Elem()
}

func (i EventResponseMessageResponseArgs) ToEventResponseMessageResponseOutput() EventResponseMessageResponseOutput {
	return i.ToEventResponseMessageResponseOutputWithContext(context.Background())
}

func (i EventResponseMessageResponseArgs) ToEventResponseMessageResponseOutputWithContext(ctx context.Context) EventResponseMessageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventResponseMessageResponseOutput)
}

func (i EventResponseMessageResponseArgs) ToEventResponseMessageResponsePtrOutput() EventResponseMessageResponsePtrOutput {
	return i.ToEventResponseMessageResponsePtrOutputWithContext(context.Background())
}

func (i EventResponseMessageResponseArgs) ToEventResponseMessageResponsePtrOutputWithContext(ctx context.Context) EventResponseMessageResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventResponseMessageResponseOutput).ToEventResponseMessageResponsePtrOutputWithContext(ctx)
}

// EventResponseMessageResponsePtrInput is an input type that accepts EventResponseMessageResponseArgs, EventResponseMessageResponsePtr and EventResponseMessageResponsePtrOutput values.
// You can construct a concrete instance of `EventResponseMessageResponsePtrInput` via:
//
//          EventResponseMessageResponseArgs{...}
//
//  or:
//
//          nil
type EventResponseMessageResponsePtrInput interface {
	pulumi.Input

	ToEventResponseMessageResponsePtrOutput() EventResponseMessageResponsePtrOutput
	ToEventResponseMessageResponsePtrOutputWithContext(context.Context) EventResponseMessageResponsePtrOutput
}

type eventResponseMessageResponsePtrType EventResponseMessageResponseArgs

func EventResponseMessageResponsePtr(v *EventResponseMessageResponseArgs) EventResponseMessageResponsePtrInput {
	return (*eventResponseMessageResponsePtrType)(v)
}

func (*eventResponseMessageResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventResponseMessageResponse)(nil)).Elem()
}

func (i *eventResponseMessageResponsePtrType) ToEventResponseMessageResponsePtrOutput() EventResponseMessageResponsePtrOutput {
	return i.ToEventResponseMessageResponsePtrOutputWithContext(context.Background())
}

func (i *eventResponseMessageResponsePtrType) ToEventResponseMessageResponsePtrOutputWithContext(ctx context.Context) EventResponseMessageResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventResponseMessageResponsePtrOutput)
}

// The event response message received from the service URI.
type EventResponseMessageResponseOutput struct{ *pulumi.OutputState }

func (EventResponseMessageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventResponseMessageResponse)(nil)).Elem()
}

func (o EventResponseMessageResponseOutput) ToEventResponseMessageResponseOutput() EventResponseMessageResponseOutput {
	return o
}

func (o EventResponseMessageResponseOutput) ToEventResponseMessageResponseOutputWithContext(ctx context.Context) EventResponseMessageResponseOutput {
	return o
}

func (o EventResponseMessageResponseOutput) ToEventResponseMessageResponsePtrOutput() EventResponseMessageResponsePtrOutput {
	return o.ToEventResponseMessageResponsePtrOutputWithContext(context.Background())
}

func (o EventResponseMessageResponseOutput) ToEventResponseMessageResponsePtrOutputWithContext(ctx context.Context) EventResponseMessageResponsePtrOutput {
	return o.ApplyT(func(v EventResponseMessageResponse) *EventResponseMessageResponse {
		return &v
	}).(EventResponseMessageResponsePtrOutput)
}

// The content of the event response message.
func (o EventResponseMessageResponseOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventResponseMessageResponse) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// The headers of the event response message.
func (o EventResponseMessageResponseOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v EventResponseMessageResponse) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// The reason phrase of the event response message.
func (o EventResponseMessageResponseOutput) ReasonPhrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventResponseMessageResponse) *string { return v.ReasonPhrase }).(pulumi.StringPtrOutput)
}

// The status code of the event response message.
func (o EventResponseMessageResponseOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventResponseMessageResponse) *string { return v.StatusCode }).(pulumi.StringPtrOutput)
}

// The HTTP message version.
func (o EventResponseMessageResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventResponseMessageResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type EventResponseMessageResponsePtrOutput struct{ *pulumi.OutputState }

func (EventResponseMessageResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventResponseMessageResponse)(nil)).Elem()
}

func (o EventResponseMessageResponsePtrOutput) ToEventResponseMessageResponsePtrOutput() EventResponseMessageResponsePtrOutput {
	return o
}

func (o EventResponseMessageResponsePtrOutput) ToEventResponseMessageResponsePtrOutputWithContext(ctx context.Context) EventResponseMessageResponsePtrOutput {
	return o
}

func (o EventResponseMessageResponsePtrOutput) Elem() EventResponseMessageResponseOutput {
	return o.ApplyT(func(v *EventResponseMessageResponse) EventResponseMessageResponse { return *v }).(EventResponseMessageResponseOutput)
}

// The content of the event response message.
func (o EventResponseMessageResponsePtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventResponseMessageResponse) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// The headers of the event response message.
func (o EventResponseMessageResponsePtrOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EventResponseMessageResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringMapOutput)
}

// The reason phrase of the event response message.
func (o EventResponseMessageResponsePtrOutput) ReasonPhrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventResponseMessageResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReasonPhrase
	}).(pulumi.StringPtrOutput)
}

// The status code of the event response message.
func (o EventResponseMessageResponsePtrOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventResponseMessageResponse) *string {
		if v == nil {
			return nil
		}
		return v.StatusCode
	}).(pulumi.StringPtrOutput)
}

// The HTTP message version.
func (o EventResponseMessageResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventResponseMessageResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// IP rule with specific IP or IP range in CIDR format.
type IPRule struct {
	// The action of IP ACL rule.
	Action *string `pulumi:"action"`
	// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
	Value string `pulumi:"value"`
}

// IPRuleInput is an input type that accepts IPRuleArgs and IPRuleOutput values.
// You can construct a concrete instance of `IPRuleInput` via:
//
//          IPRuleArgs{...}
type IPRuleInput interface {
	pulumi.Input

	ToIPRuleOutput() IPRuleOutput
	ToIPRuleOutputWithContext(context.Context) IPRuleOutput
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleArgs struct {
	// The action of IP ACL rule.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
	Value pulumi.StringInput `pulumi:"value"`
}

func (IPRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPRule)(nil)).Elem()
}

func (i IPRuleArgs) ToIPRuleOutput() IPRuleOutput {
	return i.ToIPRuleOutputWithContext(context.Background())
}

func (i IPRuleArgs) ToIPRuleOutputWithContext(ctx context.Context) IPRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPRuleOutput)
}

// IPRuleArrayInput is an input type that accepts IPRuleArray and IPRuleArrayOutput values.
// You can construct a concrete instance of `IPRuleArrayInput` via:
//
//          IPRuleArray{ IPRuleArgs{...} }
type IPRuleArrayInput interface {
	pulumi.Input

	ToIPRuleArrayOutput() IPRuleArrayOutput
	ToIPRuleArrayOutputWithContext(context.Context) IPRuleArrayOutput
}

type IPRuleArray []IPRuleInput

func (IPRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPRule)(nil)).Elem()
}

func (i IPRuleArray) ToIPRuleArrayOutput() IPRuleArrayOutput {
	return i.ToIPRuleArrayOutputWithContext(context.Background())
}

func (i IPRuleArray) ToIPRuleArrayOutputWithContext(ctx context.Context) IPRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPRuleArrayOutput)
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleOutput struct{ *pulumi.OutputState }

func (IPRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPRule)(nil)).Elem()
}

func (o IPRuleOutput) ToIPRuleOutput() IPRuleOutput {
	return o
}

func (o IPRuleOutput) ToIPRuleOutputWithContext(ctx context.Context) IPRuleOutput {
	return o
}

// The action of IP ACL rule.
func (o IPRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
func (o IPRuleOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IPRule) string { return v.Value }).(pulumi.StringOutput)
}

type IPRuleArrayOutput struct{ *pulumi.OutputState }

func (IPRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPRule)(nil)).Elem()
}

func (o IPRuleArrayOutput) ToIPRuleArrayOutput() IPRuleArrayOutput {
	return o
}

func (o IPRuleArrayOutput) ToIPRuleArrayOutputWithContext(ctx context.Context) IPRuleArrayOutput {
	return o
}

func (o IPRuleArrayOutput) Index(i pulumi.IntInput) IPRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPRule {
		return vs[0].([]IPRule)[vs[1].(int)]
	}).(IPRuleOutput)
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleResponse struct {
	// The action of IP ACL rule.
	Action *string `pulumi:"action"`
	// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
	Value string `pulumi:"value"`
}

// IPRuleResponseInput is an input type that accepts IPRuleResponseArgs and IPRuleResponseOutput values.
// You can construct a concrete instance of `IPRuleResponseInput` via:
//
//          IPRuleResponseArgs{...}
type IPRuleResponseInput interface {
	pulumi.Input

	ToIPRuleResponseOutput() IPRuleResponseOutput
	ToIPRuleResponseOutputWithContext(context.Context) IPRuleResponseOutput
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleResponseArgs struct {
	// The action of IP ACL rule.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
	Value pulumi.StringInput `pulumi:"value"`
}

func (IPRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPRuleResponse)(nil)).Elem()
}

func (i IPRuleResponseArgs) ToIPRuleResponseOutput() IPRuleResponseOutput {
	return i.ToIPRuleResponseOutputWithContext(context.Background())
}

func (i IPRuleResponseArgs) ToIPRuleResponseOutputWithContext(ctx context.Context) IPRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPRuleResponseOutput)
}

// IPRuleResponseArrayInput is an input type that accepts IPRuleResponseArray and IPRuleResponseArrayOutput values.
// You can construct a concrete instance of `IPRuleResponseArrayInput` via:
//
//          IPRuleResponseArray{ IPRuleResponseArgs{...} }
type IPRuleResponseArrayInput interface {
	pulumi.Input

	ToIPRuleResponseArrayOutput() IPRuleResponseArrayOutput
	ToIPRuleResponseArrayOutputWithContext(context.Context) IPRuleResponseArrayOutput
}

type IPRuleResponseArray []IPRuleResponseInput

func (IPRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPRuleResponse)(nil)).Elem()
}

func (i IPRuleResponseArray) ToIPRuleResponseArrayOutput() IPRuleResponseArrayOutput {
	return i.ToIPRuleResponseArrayOutputWithContext(context.Background())
}

func (i IPRuleResponseArray) ToIPRuleResponseArrayOutputWithContext(ctx context.Context) IPRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPRuleResponseArrayOutput)
}

// IP rule with specific IP or IP range in CIDR format.
type IPRuleResponseOutput struct{ *pulumi.OutputState }

func (IPRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPRuleResponse)(nil)).Elem()
}

func (o IPRuleResponseOutput) ToIPRuleResponseOutput() IPRuleResponseOutput {
	return o
}

func (o IPRuleResponseOutput) ToIPRuleResponseOutputWithContext(ctx context.Context) IPRuleResponseOutput {
	return o
}

// The action of IP ACL rule.
func (o IPRuleResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPRuleResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
func (o IPRuleResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IPRuleResponse) string { return v.Value }).(pulumi.StringOutput)
}

type IPRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (IPRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPRuleResponse)(nil)).Elem()
}

func (o IPRuleResponseArrayOutput) ToIPRuleResponseArrayOutput() IPRuleResponseArrayOutput {
	return o
}

func (o IPRuleResponseArrayOutput) ToIPRuleResponseArrayOutputWithContext(ctx context.Context) IPRuleResponseArrayOutput {
	return o
}

func (o IPRuleResponseArrayOutput) Index(i pulumi.IntInput) IPRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPRuleResponse {
		return vs[0].([]IPRuleResponse)[vs[1].(int)]
	}).(IPRuleResponseOutput)
}

// Managed identity for the resource.
type IdentityProperties struct {
	// The principal ID of resource identity.
	PrincipalId *string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId *string `pulumi:"tenantId"`
	// The identity type.
	Type *string `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity
	// dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
	//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]string `pulumi:"userAssignedIdentities"`
}

// IdentityPropertiesInput is an input type that accepts IdentityPropertiesArgs and IdentityPropertiesOutput values.
// You can construct a concrete instance of `IdentityPropertiesInput` via:
//
//          IdentityPropertiesArgs{...}
type IdentityPropertiesInput interface {
	pulumi.Input

	ToIdentityPropertiesOutput() IdentityPropertiesOutput
	ToIdentityPropertiesOutputWithContext(context.Context) IdentityPropertiesOutput
}

// Managed identity for the resource.
type IdentityPropertiesArgs struct {
	// The principal ID of resource identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The identity type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity
	// dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
	//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities pulumi.StringMapInput `pulumi:"userAssignedIdentities"`
}

func (IdentityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProperties)(nil)).Elem()
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesOutput() IdentityPropertiesOutput {
	return i.ToIdentityPropertiesOutputWithContext(context.Background())
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesOutputWithContext(ctx context.Context) IdentityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesOutput)
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return i.ToIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesOutput).ToIdentityPropertiesPtrOutputWithContext(ctx)
}

// IdentityPropertiesPtrInput is an input type that accepts IdentityPropertiesArgs, IdentityPropertiesPtr and IdentityPropertiesPtrOutput values.
// You can construct a concrete instance of `IdentityPropertiesPtrInput` via:
//
//          IdentityPropertiesArgs{...}
//
//  or:
//
//          nil
type IdentityPropertiesPtrInput interface {
	pulumi.Input

	ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput
	ToIdentityPropertiesPtrOutputWithContext(context.Context) IdentityPropertiesPtrOutput
}

type identityPropertiesPtrType IdentityPropertiesArgs

func IdentityPropertiesPtr(v *IdentityPropertiesArgs) IdentityPropertiesPtrInput {
	return (*identityPropertiesPtrType)(v)
}

func (*identityPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProperties)(nil)).Elem()
}

func (i *identityPropertiesPtrType) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return i.ToIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (i *identityPropertiesPtrType) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesPtrOutput)
}

// Managed identity for the resource.
type IdentityPropertiesOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProperties)(nil)).Elem()
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesOutput() IdentityPropertiesOutput {
	return o
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesOutputWithContext(ctx context.Context) IdentityPropertiesOutput {
	return o
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return o.ToIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return o.ApplyT(func(v IdentityProperties) *IdentityProperties {
		return &v
	}).(IdentityPropertiesPtrOutput)
}

// The principal ID of resource identity.
func (o IdentityPropertiesOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProperties) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityPropertiesOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProperties) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityPropertiesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProperties) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity
// dictionary key references will be ARM resource ids in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityPropertiesOutput) UserAssignedIdentities() pulumi.StringMapOutput {
	return o.ApplyT(func(v IdentityProperties) map[string]string { return v.UserAssignedIdentities }).(pulumi.StringMapOutput)
}

type IdentityPropertiesPtrOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProperties)(nil)).Elem()
}

func (o IdentityPropertiesPtrOutput) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return o
}

func (o IdentityPropertiesPtrOutput) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return o
}

func (o IdentityPropertiesPtrOutput) Elem() IdentityPropertiesOutput {
	return o.ApplyT(func(v *IdentityProperties) IdentityProperties { return *v }).(IdentityPropertiesOutput)
}

// The principal ID of resource identity.
func (o IdentityPropertiesPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityPropertiesPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityPropertiesPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity
// dictionary key references will be ARM resource ids in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityPropertiesPtrOutput) UserAssignedIdentities() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IdentityProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringMapOutput)
}

// Managed identity for the resource.
type IdentityPropertiesResponse struct {
	// The principal ID of resource identity.
	PrincipalId *string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId *string `pulumi:"tenantId"`
	// The identity type.
	Type *string `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity
	// dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
	//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]string `pulumi:"userAssignedIdentities"`
}

// IdentityPropertiesResponseInput is an input type that accepts IdentityPropertiesResponseArgs and IdentityPropertiesResponseOutput values.
// You can construct a concrete instance of `IdentityPropertiesResponseInput` via:
//
//          IdentityPropertiesResponseArgs{...}
type IdentityPropertiesResponseInput interface {
	pulumi.Input

	ToIdentityPropertiesResponseOutput() IdentityPropertiesResponseOutput
	ToIdentityPropertiesResponseOutputWithContext(context.Context) IdentityPropertiesResponseOutput
}

// Managed identity for the resource.
type IdentityPropertiesResponseArgs struct {
	// The principal ID of resource identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The identity type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The list of user identities associated with the resource. The user identity
	// dictionary key references will be ARM resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
	//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities pulumi.StringMapInput `pulumi:"userAssignedIdentities"`
}

func (IdentityPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPropertiesResponse)(nil)).Elem()
}

func (i IdentityPropertiesResponseArgs) ToIdentityPropertiesResponseOutput() IdentityPropertiesResponseOutput {
	return i.ToIdentityPropertiesResponseOutputWithContext(context.Background())
}

func (i IdentityPropertiesResponseArgs) ToIdentityPropertiesResponseOutputWithContext(ctx context.Context) IdentityPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesResponseOutput)
}

func (i IdentityPropertiesResponseArgs) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return i.ToIdentityPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i IdentityPropertiesResponseArgs) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesResponseOutput).ToIdentityPropertiesResponsePtrOutputWithContext(ctx)
}

// IdentityPropertiesResponsePtrInput is an input type that accepts IdentityPropertiesResponseArgs, IdentityPropertiesResponsePtr and IdentityPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `IdentityPropertiesResponsePtrInput` via:
//
//          IdentityPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type IdentityPropertiesResponsePtrInput interface {
	pulumi.Input

	ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput
	ToIdentityPropertiesResponsePtrOutputWithContext(context.Context) IdentityPropertiesResponsePtrOutput
}

type identityPropertiesResponsePtrType IdentityPropertiesResponseArgs

func IdentityPropertiesResponsePtr(v *IdentityPropertiesResponseArgs) IdentityPropertiesResponsePtrInput {
	return (*identityPropertiesResponsePtrType)(v)
}

func (*identityPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPropertiesResponse)(nil)).Elem()
}

func (i *identityPropertiesResponsePtrType) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return i.ToIdentityPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *identityPropertiesResponsePtrType) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesResponsePtrOutput)
}

// Managed identity for the resource.
type IdentityPropertiesResponseOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPropertiesResponse)(nil)).Elem()
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponseOutput() IdentityPropertiesResponseOutput {
	return o
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponseOutputWithContext(ctx context.Context) IdentityPropertiesResponseOutput {
	return o
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return o.ToIdentityPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *IdentityPropertiesResponse {
		return &v
	}).(IdentityPropertiesResponsePtrOutput)
}

// The principal ID of resource identity.
func (o IdentityPropertiesResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityPropertiesResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityPropertiesResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity
// dictionary key references will be ARM resource ids in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityPropertiesResponseOutput) UserAssignedIdentities() pulumi.StringMapOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) map[string]string { return v.UserAssignedIdentities }).(pulumi.StringMapOutput)
}

type IdentityPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPropertiesResponse)(nil)).Elem()
}

func (o IdentityPropertiesResponsePtrOutput) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return o
}

func (o IdentityPropertiesResponsePtrOutput) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return o
}

func (o IdentityPropertiesResponsePtrOutput) Elem() IdentityPropertiesResponseOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) IdentityPropertiesResponse { return *v }).(IdentityPropertiesResponseOutput)
}

// The principal ID of resource identity.
func (o IdentityPropertiesResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityPropertiesResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityPropertiesResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user identities associated with the resource. The user identity
// dictionary key references will be ARM resource ids in the form:
// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
//     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityPropertiesResponsePtrOutput) UserAssignedIdentities() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringMapOutput)
}

// The network rule set for a container registry.
type NetworkRuleSet struct {
	// The default action of allow or deny when no other rules match.
	DefaultAction string `pulumi:"defaultAction"`
	// The IP ACL rules.
	IpRules []IPRule `pulumi:"ipRules"`
	// The virtual network rules.
	VirtualNetworkRules []VirtualNetworkRule `pulumi:"virtualNetworkRules"`
}

// NetworkRuleSetInput is an input type that accepts NetworkRuleSetArgs and NetworkRuleSetOutput values.
// You can construct a concrete instance of `NetworkRuleSetInput` via:
//
//          NetworkRuleSetArgs{...}
type NetworkRuleSetInput interface {
	pulumi.Input

	ToNetworkRuleSetOutput() NetworkRuleSetOutput
	ToNetworkRuleSetOutputWithContext(context.Context) NetworkRuleSetOutput
}

// The network rule set for a container registry.
type NetworkRuleSetArgs struct {
	// The default action of allow or deny when no other rules match.
	DefaultAction pulumi.StringInput `pulumi:"defaultAction"`
	// The IP ACL rules.
	IpRules IPRuleArrayInput `pulumi:"ipRules"`
	// The virtual network rules.
	VirtualNetworkRules VirtualNetworkRuleArrayInput `pulumi:"virtualNetworkRules"`
}

func (NetworkRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSet)(nil)).Elem()
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetOutput() NetworkRuleSetOutput {
	return i.ToNetworkRuleSetOutputWithContext(context.Background())
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetOutputWithContext(ctx context.Context) NetworkRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetOutput)
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return i.ToNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetOutput).ToNetworkRuleSetPtrOutputWithContext(ctx)
}

// NetworkRuleSetPtrInput is an input type that accepts NetworkRuleSetArgs, NetworkRuleSetPtr and NetworkRuleSetPtrOutput values.
// You can construct a concrete instance of `NetworkRuleSetPtrInput` via:
//
//          NetworkRuleSetArgs{...}
//
//  or:
//
//          nil
type NetworkRuleSetPtrInput interface {
	pulumi.Input

	ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput
	ToNetworkRuleSetPtrOutputWithContext(context.Context) NetworkRuleSetPtrOutput
}

type networkRuleSetPtrType NetworkRuleSetArgs

func NetworkRuleSetPtr(v *NetworkRuleSetArgs) NetworkRuleSetPtrInput {
	return (*networkRuleSetPtrType)(v)
}

func (*networkRuleSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSet)(nil)).Elem()
}

func (i *networkRuleSetPtrType) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return i.ToNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (i *networkRuleSetPtrType) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetPtrOutput)
}

// The network rule set for a container registry.
type NetworkRuleSetOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSet)(nil)).Elem()
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetOutput() NetworkRuleSetOutput {
	return o
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetOutputWithContext(ctx context.Context) NetworkRuleSetOutput {
	return o
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return o.ToNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return o.ApplyT(func(v NetworkRuleSet) *NetworkRuleSet {
		return &v
	}).(NetworkRuleSetPtrOutput)
}

// The default action of allow or deny when no other rules match.
func (o NetworkRuleSetOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRuleSet) string { return v.DefaultAction }).(pulumi.StringOutput)
}

// The IP ACL rules.
func (o NetworkRuleSetOutput) IpRules() IPRuleArrayOutput {
	return o.ApplyT(func(v NetworkRuleSet) []IPRule { return v.IpRules }).(IPRuleArrayOutput)
}

// The virtual network rules.
func (o NetworkRuleSetOutput) VirtualNetworkRules() VirtualNetworkRuleArrayOutput {
	return o.ApplyT(func(v NetworkRuleSet) []VirtualNetworkRule { return v.VirtualNetworkRules }).(VirtualNetworkRuleArrayOutput)
}

type NetworkRuleSetPtrOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSet)(nil)).Elem()
}

func (o NetworkRuleSetPtrOutput) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return o
}

func (o NetworkRuleSetPtrOutput) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return o
}

func (o NetworkRuleSetPtrOutput) Elem() NetworkRuleSetOutput {
	return o.ApplyT(func(v *NetworkRuleSet) NetworkRuleSet { return *v }).(NetworkRuleSetOutput)
}

// The default action of allow or deny when no other rules match.
func (o NetworkRuleSetPtrOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleSet) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultAction
	}).(pulumi.StringPtrOutput)
}

// The IP ACL rules.
func (o NetworkRuleSetPtrOutput) IpRules() IPRuleArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSet) []IPRule {
		if v == nil {
			return nil
		}
		return v.IpRules
	}).(IPRuleArrayOutput)
}

// The virtual network rules.
func (o NetworkRuleSetPtrOutput) VirtualNetworkRules() VirtualNetworkRuleArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSet) []VirtualNetworkRule {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkRules
	}).(VirtualNetworkRuleArrayOutput)
}

// The network rule set for a container registry.
type NetworkRuleSetResponse struct {
	// The default action of allow or deny when no other rules match.
	DefaultAction string `pulumi:"defaultAction"`
	// The IP ACL rules.
	IpRules []IPRuleResponse `pulumi:"ipRules"`
	// The virtual network rules.
	VirtualNetworkRules []VirtualNetworkRuleResponse `pulumi:"virtualNetworkRules"`
}

// NetworkRuleSetResponseInput is an input type that accepts NetworkRuleSetResponseArgs and NetworkRuleSetResponseOutput values.
// You can construct a concrete instance of `NetworkRuleSetResponseInput` via:
//
//          NetworkRuleSetResponseArgs{...}
type NetworkRuleSetResponseInput interface {
	pulumi.Input

	ToNetworkRuleSetResponseOutput() NetworkRuleSetResponseOutput
	ToNetworkRuleSetResponseOutputWithContext(context.Context) NetworkRuleSetResponseOutput
}

// The network rule set for a container registry.
type NetworkRuleSetResponseArgs struct {
	// The default action of allow or deny when no other rules match.
	DefaultAction pulumi.StringInput `pulumi:"defaultAction"`
	// The IP ACL rules.
	IpRules IPRuleResponseArrayInput `pulumi:"ipRules"`
	// The virtual network rules.
	VirtualNetworkRules VirtualNetworkRuleResponseArrayInput `pulumi:"virtualNetworkRules"`
}

func (NetworkRuleSetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSetResponse)(nil)).Elem()
}

func (i NetworkRuleSetResponseArgs) ToNetworkRuleSetResponseOutput() NetworkRuleSetResponseOutput {
	return i.ToNetworkRuleSetResponseOutputWithContext(context.Background())
}

func (i NetworkRuleSetResponseArgs) ToNetworkRuleSetResponseOutputWithContext(ctx context.Context) NetworkRuleSetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetResponseOutput)
}

func (i NetworkRuleSetResponseArgs) ToNetworkRuleSetResponsePtrOutput() NetworkRuleSetResponsePtrOutput {
	return i.ToNetworkRuleSetResponsePtrOutputWithContext(context.Background())
}

func (i NetworkRuleSetResponseArgs) ToNetworkRuleSetResponsePtrOutputWithContext(ctx context.Context) NetworkRuleSetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetResponseOutput).ToNetworkRuleSetResponsePtrOutputWithContext(ctx)
}

// NetworkRuleSetResponsePtrInput is an input type that accepts NetworkRuleSetResponseArgs, NetworkRuleSetResponsePtr and NetworkRuleSetResponsePtrOutput values.
// You can construct a concrete instance of `NetworkRuleSetResponsePtrInput` via:
//
//          NetworkRuleSetResponseArgs{...}
//
//  or:
//
//          nil
type NetworkRuleSetResponsePtrInput interface {
	pulumi.Input

	ToNetworkRuleSetResponsePtrOutput() NetworkRuleSetResponsePtrOutput
	ToNetworkRuleSetResponsePtrOutputWithContext(context.Context) NetworkRuleSetResponsePtrOutput
}

type networkRuleSetResponsePtrType NetworkRuleSetResponseArgs

func NetworkRuleSetResponsePtr(v *NetworkRuleSetResponseArgs) NetworkRuleSetResponsePtrInput {
	return (*networkRuleSetResponsePtrType)(v)
}

func (*networkRuleSetResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSetResponse)(nil)).Elem()
}

func (i *networkRuleSetResponsePtrType) ToNetworkRuleSetResponsePtrOutput() NetworkRuleSetResponsePtrOutput {
	return i.ToNetworkRuleSetResponsePtrOutputWithContext(context.Background())
}

func (i *networkRuleSetResponsePtrType) ToNetworkRuleSetResponsePtrOutputWithContext(ctx context.Context) NetworkRuleSetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetResponsePtrOutput)
}

// The network rule set for a container registry.
type NetworkRuleSetResponseOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSetResponse)(nil)).Elem()
}

func (o NetworkRuleSetResponseOutput) ToNetworkRuleSetResponseOutput() NetworkRuleSetResponseOutput {
	return o
}

func (o NetworkRuleSetResponseOutput) ToNetworkRuleSetResponseOutputWithContext(ctx context.Context) NetworkRuleSetResponseOutput {
	return o
}

func (o NetworkRuleSetResponseOutput) ToNetworkRuleSetResponsePtrOutput() NetworkRuleSetResponsePtrOutput {
	return o.ToNetworkRuleSetResponsePtrOutputWithContext(context.Background())
}

func (o NetworkRuleSetResponseOutput) ToNetworkRuleSetResponsePtrOutputWithContext(ctx context.Context) NetworkRuleSetResponsePtrOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) *NetworkRuleSetResponse {
		return &v
	}).(NetworkRuleSetResponsePtrOutput)
}

// The default action of allow or deny when no other rules match.
func (o NetworkRuleSetResponseOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) string { return v.DefaultAction }).(pulumi.StringOutput)
}

// The IP ACL rules.
func (o NetworkRuleSetResponseOutput) IpRules() IPRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) []IPRuleResponse { return v.IpRules }).(IPRuleResponseArrayOutput)
}

// The virtual network rules.
func (o NetworkRuleSetResponseOutput) VirtualNetworkRules() VirtualNetworkRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) []VirtualNetworkRuleResponse { return v.VirtualNetworkRules }).(VirtualNetworkRuleResponseArrayOutput)
}

type NetworkRuleSetResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSetResponse)(nil)).Elem()
}

func (o NetworkRuleSetResponsePtrOutput) ToNetworkRuleSetResponsePtrOutput() NetworkRuleSetResponsePtrOutput {
	return o
}

func (o NetworkRuleSetResponsePtrOutput) ToNetworkRuleSetResponsePtrOutputWithContext(ctx context.Context) NetworkRuleSetResponsePtrOutput {
	return o
}

func (o NetworkRuleSetResponsePtrOutput) Elem() NetworkRuleSetResponseOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) NetworkRuleSetResponse { return *v }).(NetworkRuleSetResponseOutput)
}

// The default action of allow or deny when no other rules match.
func (o NetworkRuleSetResponsePtrOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultAction
	}).(pulumi.StringPtrOutput)
}

// The IP ACL rules.
func (o NetworkRuleSetResponsePtrOutput) IpRules() IPRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) []IPRuleResponse {
		if v == nil {
			return nil
		}
		return v.IpRules
	}).(IPRuleResponseArrayOutput)
}

// The virtual network rules.
func (o NetworkRuleSetResponsePtrOutput) VirtualNetworkRules() VirtualNetworkRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) []VirtualNetworkRuleResponse {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkRules
	}).(VirtualNetworkRuleResponseArrayOutput)
}

// The platform properties against which the run has to happen.
type PlatformProperties struct {
	// The OS architecture.
	Architecture *string `pulumi:"architecture"`
	// The operating system type required for the run.
	Os string `pulumi:"os"`
	// Variant of the CPU.
	Variant *string `pulumi:"variant"`
}

// PlatformPropertiesInput is an input type that accepts PlatformPropertiesArgs and PlatformPropertiesOutput values.
// You can construct a concrete instance of `PlatformPropertiesInput` via:
//
//          PlatformPropertiesArgs{...}
type PlatformPropertiesInput interface {
	pulumi.Input

	ToPlatformPropertiesOutput() PlatformPropertiesOutput
	ToPlatformPropertiesOutputWithContext(context.Context) PlatformPropertiesOutput
}

// The platform properties against which the run has to happen.
type PlatformPropertiesArgs struct {
	// The OS architecture.
	Architecture pulumi.StringPtrInput `pulumi:"architecture"`
	// The operating system type required for the run.
	Os pulumi.StringInput `pulumi:"os"`
	// Variant of the CPU.
	Variant pulumi.StringPtrInput `pulumi:"variant"`
}

func (PlatformPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformProperties)(nil)).Elem()
}

func (i PlatformPropertiesArgs) ToPlatformPropertiesOutput() PlatformPropertiesOutput {
	return i.ToPlatformPropertiesOutputWithContext(context.Background())
}

func (i PlatformPropertiesArgs) ToPlatformPropertiesOutputWithContext(ctx context.Context) PlatformPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformPropertiesOutput)
}

func (i PlatformPropertiesArgs) ToPlatformPropertiesPtrOutput() PlatformPropertiesPtrOutput {
	return i.ToPlatformPropertiesPtrOutputWithContext(context.Background())
}

func (i PlatformPropertiesArgs) ToPlatformPropertiesPtrOutputWithContext(ctx context.Context) PlatformPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformPropertiesOutput).ToPlatformPropertiesPtrOutputWithContext(ctx)
}

// PlatformPropertiesPtrInput is an input type that accepts PlatformPropertiesArgs, PlatformPropertiesPtr and PlatformPropertiesPtrOutput values.
// You can construct a concrete instance of `PlatformPropertiesPtrInput` via:
//
//          PlatformPropertiesArgs{...}
//
//  or:
//
//          nil
type PlatformPropertiesPtrInput interface {
	pulumi.Input

	ToPlatformPropertiesPtrOutput() PlatformPropertiesPtrOutput
	ToPlatformPropertiesPtrOutputWithContext(context.Context) PlatformPropertiesPtrOutput
}

type platformPropertiesPtrType PlatformPropertiesArgs

func PlatformPropertiesPtr(v *PlatformPropertiesArgs) PlatformPropertiesPtrInput {
	return (*platformPropertiesPtrType)(v)
}

func (*platformPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformProperties)(nil)).Elem()
}

func (i *platformPropertiesPtrType) ToPlatformPropertiesPtrOutput() PlatformPropertiesPtrOutput {
	return i.ToPlatformPropertiesPtrOutputWithContext(context.Background())
}

func (i *platformPropertiesPtrType) ToPlatformPropertiesPtrOutputWithContext(ctx context.Context) PlatformPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformPropertiesPtrOutput)
}

// The platform properties against which the run has to happen.
type PlatformPropertiesOutput struct{ *pulumi.OutputState }

func (PlatformPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformProperties)(nil)).Elem()
}

func (o PlatformPropertiesOutput) ToPlatformPropertiesOutput() PlatformPropertiesOutput {
	return o
}

func (o PlatformPropertiesOutput) ToPlatformPropertiesOutputWithContext(ctx context.Context) PlatformPropertiesOutput {
	return o
}

func (o PlatformPropertiesOutput) ToPlatformPropertiesPtrOutput() PlatformPropertiesPtrOutput {
	return o.ToPlatformPropertiesPtrOutputWithContext(context.Background())
}

func (o PlatformPropertiesOutput) ToPlatformPropertiesPtrOutputWithContext(ctx context.Context) PlatformPropertiesPtrOutput {
	return o.ApplyT(func(v PlatformProperties) *PlatformProperties {
		return &v
	}).(PlatformPropertiesPtrOutput)
}

// The OS architecture.
func (o PlatformPropertiesOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlatformProperties) *string { return v.Architecture }).(pulumi.StringPtrOutput)
}

// The operating system type required for the run.
func (o PlatformPropertiesOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v PlatformProperties) string { return v.Os }).(pulumi.StringOutput)
}

// Variant of the CPU.
func (o PlatformPropertiesOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlatformProperties) *string { return v.Variant }).(pulumi.StringPtrOutput)
}

type PlatformPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PlatformPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformProperties)(nil)).Elem()
}

func (o PlatformPropertiesPtrOutput) ToPlatformPropertiesPtrOutput() PlatformPropertiesPtrOutput {
	return o
}

func (o PlatformPropertiesPtrOutput) ToPlatformPropertiesPtrOutputWithContext(ctx context.Context) PlatformPropertiesPtrOutput {
	return o
}

func (o PlatformPropertiesPtrOutput) Elem() PlatformPropertiesOutput {
	return o.ApplyT(func(v *PlatformProperties) PlatformProperties { return *v }).(PlatformPropertiesOutput)
}

// The OS architecture.
func (o PlatformPropertiesPtrOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformProperties) *string {
		if v == nil {
			return nil
		}
		return v.Architecture
	}).(pulumi.StringPtrOutput)
}

// The operating system type required for the run.
func (o PlatformPropertiesPtrOutput) Os() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Os
	}).(pulumi.StringPtrOutput)
}

// Variant of the CPU.
func (o PlatformPropertiesPtrOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformProperties) *string {
		if v == nil {
			return nil
		}
		return v.Variant
	}).(pulumi.StringPtrOutput)
}

// The platform properties against which the run has to happen.
type PlatformPropertiesResponse struct {
	// The OS architecture.
	Architecture *string `pulumi:"architecture"`
	// The operating system type required for the run.
	Os string `pulumi:"os"`
	// Variant of the CPU.
	Variant *string `pulumi:"variant"`
}

// PlatformPropertiesResponseInput is an input type that accepts PlatformPropertiesResponseArgs and PlatformPropertiesResponseOutput values.
// You can construct a concrete instance of `PlatformPropertiesResponseInput` via:
//
//          PlatformPropertiesResponseArgs{...}
type PlatformPropertiesResponseInput interface {
	pulumi.Input

	ToPlatformPropertiesResponseOutput() PlatformPropertiesResponseOutput
	ToPlatformPropertiesResponseOutputWithContext(context.Context) PlatformPropertiesResponseOutput
}

// The platform properties against which the run has to happen.
type PlatformPropertiesResponseArgs struct {
	// The OS architecture.
	Architecture pulumi.StringPtrInput `pulumi:"architecture"`
	// The operating system type required for the run.
	Os pulumi.StringInput `pulumi:"os"`
	// Variant of the CPU.
	Variant pulumi.StringPtrInput `pulumi:"variant"`
}

func (PlatformPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformPropertiesResponse)(nil)).Elem()
}

func (i PlatformPropertiesResponseArgs) ToPlatformPropertiesResponseOutput() PlatformPropertiesResponseOutput {
	return i.ToPlatformPropertiesResponseOutputWithContext(context.Background())
}

func (i PlatformPropertiesResponseArgs) ToPlatformPropertiesResponseOutputWithContext(ctx context.Context) PlatformPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformPropertiesResponseOutput)
}

func (i PlatformPropertiesResponseArgs) ToPlatformPropertiesResponsePtrOutput() PlatformPropertiesResponsePtrOutput {
	return i.ToPlatformPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i PlatformPropertiesResponseArgs) ToPlatformPropertiesResponsePtrOutputWithContext(ctx context.Context) PlatformPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformPropertiesResponseOutput).ToPlatformPropertiesResponsePtrOutputWithContext(ctx)
}

// PlatformPropertiesResponsePtrInput is an input type that accepts PlatformPropertiesResponseArgs, PlatformPropertiesResponsePtr and PlatformPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `PlatformPropertiesResponsePtrInput` via:
//
//          PlatformPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type PlatformPropertiesResponsePtrInput interface {
	pulumi.Input

	ToPlatformPropertiesResponsePtrOutput() PlatformPropertiesResponsePtrOutput
	ToPlatformPropertiesResponsePtrOutputWithContext(context.Context) PlatformPropertiesResponsePtrOutput
}

type platformPropertiesResponsePtrType PlatformPropertiesResponseArgs

func PlatformPropertiesResponsePtr(v *PlatformPropertiesResponseArgs) PlatformPropertiesResponsePtrInput {
	return (*platformPropertiesResponsePtrType)(v)
}

func (*platformPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformPropertiesResponse)(nil)).Elem()
}

func (i *platformPropertiesResponsePtrType) ToPlatformPropertiesResponsePtrOutput() PlatformPropertiesResponsePtrOutput {
	return i.ToPlatformPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *platformPropertiesResponsePtrType) ToPlatformPropertiesResponsePtrOutputWithContext(ctx context.Context) PlatformPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformPropertiesResponsePtrOutput)
}

// The platform properties against which the run has to happen.
type PlatformPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PlatformPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformPropertiesResponse)(nil)).Elem()
}

func (o PlatformPropertiesResponseOutput) ToPlatformPropertiesResponseOutput() PlatformPropertiesResponseOutput {
	return o
}

func (o PlatformPropertiesResponseOutput) ToPlatformPropertiesResponseOutputWithContext(ctx context.Context) PlatformPropertiesResponseOutput {
	return o
}

func (o PlatformPropertiesResponseOutput) ToPlatformPropertiesResponsePtrOutput() PlatformPropertiesResponsePtrOutput {
	return o.ToPlatformPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o PlatformPropertiesResponseOutput) ToPlatformPropertiesResponsePtrOutputWithContext(ctx context.Context) PlatformPropertiesResponsePtrOutput {
	return o.ApplyT(func(v PlatformPropertiesResponse) *PlatformPropertiesResponse {
		return &v
	}).(PlatformPropertiesResponsePtrOutput)
}

// The OS architecture.
func (o PlatformPropertiesResponseOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlatformPropertiesResponse) *string { return v.Architecture }).(pulumi.StringPtrOutput)
}

// The operating system type required for the run.
func (o PlatformPropertiesResponseOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v PlatformPropertiesResponse) string { return v.Os }).(pulumi.StringOutput)
}

// Variant of the CPU.
func (o PlatformPropertiesResponseOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlatformPropertiesResponse) *string { return v.Variant }).(pulumi.StringPtrOutput)
}

type PlatformPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PlatformPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformPropertiesResponse)(nil)).Elem()
}

func (o PlatformPropertiesResponsePtrOutput) ToPlatformPropertiesResponsePtrOutput() PlatformPropertiesResponsePtrOutput {
	return o
}

func (o PlatformPropertiesResponsePtrOutput) ToPlatformPropertiesResponsePtrOutputWithContext(ctx context.Context) PlatformPropertiesResponsePtrOutput {
	return o
}

func (o PlatformPropertiesResponsePtrOutput) Elem() PlatformPropertiesResponseOutput {
	return o.ApplyT(func(v *PlatformPropertiesResponse) PlatformPropertiesResponse { return *v }).(PlatformPropertiesResponseOutput)
}

// The OS architecture.
func (o PlatformPropertiesResponsePtrOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Architecture
	}).(pulumi.StringPtrOutput)
}

// The operating system type required for the run.
func (o PlatformPropertiesResponsePtrOutput) Os() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Os
	}).(pulumi.StringPtrOutput)
}

// Variant of the CPU.
func (o PlatformPropertiesResponsePtrOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Variant
	}).(pulumi.StringPtrOutput)
}

// The policies for a container registry.
type Policies struct {
	// The quarantine policy for a container registry.
	QuarantinePolicy *QuarantinePolicy `pulumi:"quarantinePolicy"`
	// The retention policy for a container registry.
	RetentionPolicy *RetentionPolicy `pulumi:"retentionPolicy"`
	// The content trust policy for a container registry.
	TrustPolicy *TrustPolicy `pulumi:"trustPolicy"`
}

// PoliciesInput is an input type that accepts PoliciesArgs and PoliciesOutput values.
// You can construct a concrete instance of `PoliciesInput` via:
//
//          PoliciesArgs{...}
type PoliciesInput interface {
	pulumi.Input

	ToPoliciesOutput() PoliciesOutput
	ToPoliciesOutputWithContext(context.Context) PoliciesOutput
}

// The policies for a container registry.
type PoliciesArgs struct {
	// The quarantine policy for a container registry.
	QuarantinePolicy QuarantinePolicyPtrInput `pulumi:"quarantinePolicy"`
	// The retention policy for a container registry.
	RetentionPolicy RetentionPolicyPtrInput `pulumi:"retentionPolicy"`
	// The content trust policy for a container registry.
	TrustPolicy TrustPolicyPtrInput `pulumi:"trustPolicy"`
}

func (PoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policies)(nil)).Elem()
}

func (i PoliciesArgs) ToPoliciesOutput() PoliciesOutput {
	return i.ToPoliciesOutputWithContext(context.Background())
}

func (i PoliciesArgs) ToPoliciesOutputWithContext(ctx context.Context) PoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesOutput)
}

func (i PoliciesArgs) ToPoliciesPtrOutput() PoliciesPtrOutput {
	return i.ToPoliciesPtrOutputWithContext(context.Background())
}

func (i PoliciesArgs) ToPoliciesPtrOutputWithContext(ctx context.Context) PoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesOutput).ToPoliciesPtrOutputWithContext(ctx)
}

// PoliciesPtrInput is an input type that accepts PoliciesArgs, PoliciesPtr and PoliciesPtrOutput values.
// You can construct a concrete instance of `PoliciesPtrInput` via:
//
//          PoliciesArgs{...}
//
//  or:
//
//          nil
type PoliciesPtrInput interface {
	pulumi.Input

	ToPoliciesPtrOutput() PoliciesPtrOutput
	ToPoliciesPtrOutputWithContext(context.Context) PoliciesPtrOutput
}

type policiesPtrType PoliciesArgs

func PoliciesPtr(v *PoliciesArgs) PoliciesPtrInput {
	return (*policiesPtrType)(v)
}

func (*policiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Policies)(nil)).Elem()
}

func (i *policiesPtrType) ToPoliciesPtrOutput() PoliciesPtrOutput {
	return i.ToPoliciesPtrOutputWithContext(context.Background())
}

func (i *policiesPtrType) ToPoliciesPtrOutputWithContext(ctx context.Context) PoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesPtrOutput)
}

// The policies for a container registry.
type PoliciesOutput struct{ *pulumi.OutputState }

func (PoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policies)(nil)).Elem()
}

func (o PoliciesOutput) ToPoliciesOutput() PoliciesOutput {
	return o
}

func (o PoliciesOutput) ToPoliciesOutputWithContext(ctx context.Context) PoliciesOutput {
	return o
}

func (o PoliciesOutput) ToPoliciesPtrOutput() PoliciesPtrOutput {
	return o.ToPoliciesPtrOutputWithContext(context.Background())
}

func (o PoliciesOutput) ToPoliciesPtrOutputWithContext(ctx context.Context) PoliciesPtrOutput {
	return o.ApplyT(func(v Policies) *Policies {
		return &v
	}).(PoliciesPtrOutput)
}

// The quarantine policy for a container registry.
func (o PoliciesOutput) QuarantinePolicy() QuarantinePolicyPtrOutput {
	return o.ApplyT(func(v Policies) *QuarantinePolicy { return v.QuarantinePolicy }).(QuarantinePolicyPtrOutput)
}

// The retention policy for a container registry.
func (o PoliciesOutput) RetentionPolicy() RetentionPolicyPtrOutput {
	return o.ApplyT(func(v Policies) *RetentionPolicy { return v.RetentionPolicy }).(RetentionPolicyPtrOutput)
}

// The content trust policy for a container registry.
func (o PoliciesOutput) TrustPolicy() TrustPolicyPtrOutput {
	return o.ApplyT(func(v Policies) *TrustPolicy { return v.TrustPolicy }).(TrustPolicyPtrOutput)
}

type PoliciesPtrOutput struct{ *pulumi.OutputState }

func (PoliciesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Policies)(nil)).Elem()
}

func (o PoliciesPtrOutput) ToPoliciesPtrOutput() PoliciesPtrOutput {
	return o
}

func (o PoliciesPtrOutput) ToPoliciesPtrOutputWithContext(ctx context.Context) PoliciesPtrOutput {
	return o
}

func (o PoliciesPtrOutput) Elem() PoliciesOutput {
	return o.ApplyT(func(v *Policies) Policies { return *v }).(PoliciesOutput)
}

// The quarantine policy for a container registry.
func (o PoliciesPtrOutput) QuarantinePolicy() QuarantinePolicyPtrOutput {
	return o.ApplyT(func(v *Policies) *QuarantinePolicy {
		if v == nil {
			return nil
		}
		return v.QuarantinePolicy
	}).(QuarantinePolicyPtrOutput)
}

// The retention policy for a container registry.
func (o PoliciesPtrOutput) RetentionPolicy() RetentionPolicyPtrOutput {
	return o.ApplyT(func(v *Policies) *RetentionPolicy {
		if v == nil {
			return nil
		}
		return v.RetentionPolicy
	}).(RetentionPolicyPtrOutput)
}

// The content trust policy for a container registry.
func (o PoliciesPtrOutput) TrustPolicy() TrustPolicyPtrOutput {
	return o.ApplyT(func(v *Policies) *TrustPolicy {
		if v == nil {
			return nil
		}
		return v.TrustPolicy
	}).(TrustPolicyPtrOutput)
}

// The policies for a container registry.
type PoliciesResponse struct {
	// The quarantine policy for a container registry.
	QuarantinePolicy *QuarantinePolicyResponse `pulumi:"quarantinePolicy"`
	// The retention policy for a container registry.
	RetentionPolicy *RetentionPolicyResponse `pulumi:"retentionPolicy"`
	// The content trust policy for a container registry.
	TrustPolicy *TrustPolicyResponse `pulumi:"trustPolicy"`
}

// PoliciesResponseInput is an input type that accepts PoliciesResponseArgs and PoliciesResponseOutput values.
// You can construct a concrete instance of `PoliciesResponseInput` via:
//
//          PoliciesResponseArgs{...}
type PoliciesResponseInput interface {
	pulumi.Input

	ToPoliciesResponseOutput() PoliciesResponseOutput
	ToPoliciesResponseOutputWithContext(context.Context) PoliciesResponseOutput
}

// The policies for a container registry.
type PoliciesResponseArgs struct {
	// The quarantine policy for a container registry.
	QuarantinePolicy QuarantinePolicyResponsePtrInput `pulumi:"quarantinePolicy"`
	// The retention policy for a container registry.
	RetentionPolicy RetentionPolicyResponsePtrInput `pulumi:"retentionPolicy"`
	// The content trust policy for a container registry.
	TrustPolicy TrustPolicyResponsePtrInput `pulumi:"trustPolicy"`
}

func (PoliciesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoliciesResponse)(nil)).Elem()
}

func (i PoliciesResponseArgs) ToPoliciesResponseOutput() PoliciesResponseOutput {
	return i.ToPoliciesResponseOutputWithContext(context.Background())
}

func (i PoliciesResponseArgs) ToPoliciesResponseOutputWithContext(ctx context.Context) PoliciesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesResponseOutput)
}

func (i PoliciesResponseArgs) ToPoliciesResponsePtrOutput() PoliciesResponsePtrOutput {
	return i.ToPoliciesResponsePtrOutputWithContext(context.Background())
}

func (i PoliciesResponseArgs) ToPoliciesResponsePtrOutputWithContext(ctx context.Context) PoliciesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesResponseOutput).ToPoliciesResponsePtrOutputWithContext(ctx)
}

// PoliciesResponsePtrInput is an input type that accepts PoliciesResponseArgs, PoliciesResponsePtr and PoliciesResponsePtrOutput values.
// You can construct a concrete instance of `PoliciesResponsePtrInput` via:
//
//          PoliciesResponseArgs{...}
//
//  or:
//
//          nil
type PoliciesResponsePtrInput interface {
	pulumi.Input

	ToPoliciesResponsePtrOutput() PoliciesResponsePtrOutput
	ToPoliciesResponsePtrOutputWithContext(context.Context) PoliciesResponsePtrOutput
}

type policiesResponsePtrType PoliciesResponseArgs

func PoliciesResponsePtr(v *PoliciesResponseArgs) PoliciesResponsePtrInput {
	return (*policiesResponsePtrType)(v)
}

func (*policiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoliciesResponse)(nil)).Elem()
}

func (i *policiesResponsePtrType) ToPoliciesResponsePtrOutput() PoliciesResponsePtrOutput {
	return i.ToPoliciesResponsePtrOutputWithContext(context.Background())
}

func (i *policiesResponsePtrType) ToPoliciesResponsePtrOutputWithContext(ctx context.Context) PoliciesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesResponsePtrOutput)
}

// The policies for a container registry.
type PoliciesResponseOutput struct{ *pulumi.OutputState }

func (PoliciesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoliciesResponse)(nil)).Elem()
}

func (o PoliciesResponseOutput) ToPoliciesResponseOutput() PoliciesResponseOutput {
	return o
}

func (o PoliciesResponseOutput) ToPoliciesResponseOutputWithContext(ctx context.Context) PoliciesResponseOutput {
	return o
}

func (o PoliciesResponseOutput) ToPoliciesResponsePtrOutput() PoliciesResponsePtrOutput {
	return o.ToPoliciesResponsePtrOutputWithContext(context.Background())
}

func (o PoliciesResponseOutput) ToPoliciesResponsePtrOutputWithContext(ctx context.Context) PoliciesResponsePtrOutput {
	return o.ApplyT(func(v PoliciesResponse) *PoliciesResponse {
		return &v
	}).(PoliciesResponsePtrOutput)
}

// The quarantine policy for a container registry.
func (o PoliciesResponseOutput) QuarantinePolicy() QuarantinePolicyResponsePtrOutput {
	return o.ApplyT(func(v PoliciesResponse) *QuarantinePolicyResponse { return v.QuarantinePolicy }).(QuarantinePolicyResponsePtrOutput)
}

// The retention policy for a container registry.
func (o PoliciesResponseOutput) RetentionPolicy() RetentionPolicyResponsePtrOutput {
	return o.ApplyT(func(v PoliciesResponse) *RetentionPolicyResponse { return v.RetentionPolicy }).(RetentionPolicyResponsePtrOutput)
}

// The content trust policy for a container registry.
func (o PoliciesResponseOutput) TrustPolicy() TrustPolicyResponsePtrOutput {
	return o.ApplyT(func(v PoliciesResponse) *TrustPolicyResponse { return v.TrustPolicy }).(TrustPolicyResponsePtrOutput)
}

type PoliciesResponsePtrOutput struct{ *pulumi.OutputState }

func (PoliciesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoliciesResponse)(nil)).Elem()
}

func (o PoliciesResponsePtrOutput) ToPoliciesResponsePtrOutput() PoliciesResponsePtrOutput {
	return o
}

func (o PoliciesResponsePtrOutput) ToPoliciesResponsePtrOutputWithContext(ctx context.Context) PoliciesResponsePtrOutput {
	return o
}

func (o PoliciesResponsePtrOutput) Elem() PoliciesResponseOutput {
	return o.ApplyT(func(v *PoliciesResponse) PoliciesResponse { return *v }).(PoliciesResponseOutput)
}

// The quarantine policy for a container registry.
func (o PoliciesResponsePtrOutput) QuarantinePolicy() QuarantinePolicyResponsePtrOutput {
	return o.ApplyT(func(v *PoliciesResponse) *QuarantinePolicyResponse {
		if v == nil {
			return nil
		}
		return v.QuarantinePolicy
	}).(QuarantinePolicyResponsePtrOutput)
}

// The retention policy for a container registry.
func (o PoliciesResponsePtrOutput) RetentionPolicy() RetentionPolicyResponsePtrOutput {
	return o.ApplyT(func(v *PoliciesResponse) *RetentionPolicyResponse {
		if v == nil {
			return nil
		}
		return v.RetentionPolicy
	}).(RetentionPolicyResponsePtrOutput)
}

// The content trust policy for a container registry.
func (o PoliciesResponsePtrOutput) TrustPolicy() TrustPolicyResponsePtrOutput {
	return o.ApplyT(func(v *PoliciesResponse) *TrustPolicyResponse {
		if v == nil {
			return nil
		}
		return v.TrustPolicy
	}).(TrustPolicyResponsePtrOutput)
}

// The quarantine policy for a container registry.
type QuarantinePolicy struct {
	// The value that indicates whether the policy is enabled or not.
	Status *string `pulumi:"status"`
}

// QuarantinePolicyInput is an input type that accepts QuarantinePolicyArgs and QuarantinePolicyOutput values.
// You can construct a concrete instance of `QuarantinePolicyInput` via:
//
//          QuarantinePolicyArgs{...}
type QuarantinePolicyInput interface {
	pulumi.Input

	ToQuarantinePolicyOutput() QuarantinePolicyOutput
	ToQuarantinePolicyOutputWithContext(context.Context) QuarantinePolicyOutput
}

// The quarantine policy for a container registry.
type QuarantinePolicyArgs struct {
	// The value that indicates whether the policy is enabled or not.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (QuarantinePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuarantinePolicy)(nil)).Elem()
}

func (i QuarantinePolicyArgs) ToQuarantinePolicyOutput() QuarantinePolicyOutput {
	return i.ToQuarantinePolicyOutputWithContext(context.Background())
}

func (i QuarantinePolicyArgs) ToQuarantinePolicyOutputWithContext(ctx context.Context) QuarantinePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuarantinePolicyOutput)
}

func (i QuarantinePolicyArgs) ToQuarantinePolicyPtrOutput() QuarantinePolicyPtrOutput {
	return i.ToQuarantinePolicyPtrOutputWithContext(context.Background())
}

func (i QuarantinePolicyArgs) ToQuarantinePolicyPtrOutputWithContext(ctx context.Context) QuarantinePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuarantinePolicyOutput).ToQuarantinePolicyPtrOutputWithContext(ctx)
}

// QuarantinePolicyPtrInput is an input type that accepts QuarantinePolicyArgs, QuarantinePolicyPtr and QuarantinePolicyPtrOutput values.
// You can construct a concrete instance of `QuarantinePolicyPtrInput` via:
//
//          QuarantinePolicyArgs{...}
//
//  or:
//
//          nil
type QuarantinePolicyPtrInput interface {
	pulumi.Input

	ToQuarantinePolicyPtrOutput() QuarantinePolicyPtrOutput
	ToQuarantinePolicyPtrOutputWithContext(context.Context) QuarantinePolicyPtrOutput
}

type quarantinePolicyPtrType QuarantinePolicyArgs

func QuarantinePolicyPtr(v *QuarantinePolicyArgs) QuarantinePolicyPtrInput {
	return (*quarantinePolicyPtrType)(v)
}

func (*quarantinePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QuarantinePolicy)(nil)).Elem()
}

func (i *quarantinePolicyPtrType) ToQuarantinePolicyPtrOutput() QuarantinePolicyPtrOutput {
	return i.ToQuarantinePolicyPtrOutputWithContext(context.Background())
}

func (i *quarantinePolicyPtrType) ToQuarantinePolicyPtrOutputWithContext(ctx context.Context) QuarantinePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuarantinePolicyPtrOutput)
}

// The quarantine policy for a container registry.
type QuarantinePolicyOutput struct{ *pulumi.OutputState }

func (QuarantinePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuarantinePolicy)(nil)).Elem()
}

func (o QuarantinePolicyOutput) ToQuarantinePolicyOutput() QuarantinePolicyOutput {
	return o
}

func (o QuarantinePolicyOutput) ToQuarantinePolicyOutputWithContext(ctx context.Context) QuarantinePolicyOutput {
	return o
}

func (o QuarantinePolicyOutput) ToQuarantinePolicyPtrOutput() QuarantinePolicyPtrOutput {
	return o.ToQuarantinePolicyPtrOutputWithContext(context.Background())
}

func (o QuarantinePolicyOutput) ToQuarantinePolicyPtrOutputWithContext(ctx context.Context) QuarantinePolicyPtrOutput {
	return o.ApplyT(func(v QuarantinePolicy) *QuarantinePolicy {
		return &v
	}).(QuarantinePolicyPtrOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o QuarantinePolicyOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QuarantinePolicy) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type QuarantinePolicyPtrOutput struct{ *pulumi.OutputState }

func (QuarantinePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuarantinePolicy)(nil)).Elem()
}

func (o QuarantinePolicyPtrOutput) ToQuarantinePolicyPtrOutput() QuarantinePolicyPtrOutput {
	return o
}

func (o QuarantinePolicyPtrOutput) ToQuarantinePolicyPtrOutputWithContext(ctx context.Context) QuarantinePolicyPtrOutput {
	return o
}

func (o QuarantinePolicyPtrOutput) Elem() QuarantinePolicyOutput {
	return o.ApplyT(func(v *QuarantinePolicy) QuarantinePolicy { return *v }).(QuarantinePolicyOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o QuarantinePolicyPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QuarantinePolicy) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The quarantine policy for a container registry.
type QuarantinePolicyResponse struct {
	// The value that indicates whether the policy is enabled or not.
	Status *string `pulumi:"status"`
}

// QuarantinePolicyResponseInput is an input type that accepts QuarantinePolicyResponseArgs and QuarantinePolicyResponseOutput values.
// You can construct a concrete instance of `QuarantinePolicyResponseInput` via:
//
//          QuarantinePolicyResponseArgs{...}
type QuarantinePolicyResponseInput interface {
	pulumi.Input

	ToQuarantinePolicyResponseOutput() QuarantinePolicyResponseOutput
	ToQuarantinePolicyResponseOutputWithContext(context.Context) QuarantinePolicyResponseOutput
}

// The quarantine policy for a container registry.
type QuarantinePolicyResponseArgs struct {
	// The value that indicates whether the policy is enabled or not.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (QuarantinePolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuarantinePolicyResponse)(nil)).Elem()
}

func (i QuarantinePolicyResponseArgs) ToQuarantinePolicyResponseOutput() QuarantinePolicyResponseOutput {
	return i.ToQuarantinePolicyResponseOutputWithContext(context.Background())
}

func (i QuarantinePolicyResponseArgs) ToQuarantinePolicyResponseOutputWithContext(ctx context.Context) QuarantinePolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuarantinePolicyResponseOutput)
}

func (i QuarantinePolicyResponseArgs) ToQuarantinePolicyResponsePtrOutput() QuarantinePolicyResponsePtrOutput {
	return i.ToQuarantinePolicyResponsePtrOutputWithContext(context.Background())
}

func (i QuarantinePolicyResponseArgs) ToQuarantinePolicyResponsePtrOutputWithContext(ctx context.Context) QuarantinePolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuarantinePolicyResponseOutput).ToQuarantinePolicyResponsePtrOutputWithContext(ctx)
}

// QuarantinePolicyResponsePtrInput is an input type that accepts QuarantinePolicyResponseArgs, QuarantinePolicyResponsePtr and QuarantinePolicyResponsePtrOutput values.
// You can construct a concrete instance of `QuarantinePolicyResponsePtrInput` via:
//
//          QuarantinePolicyResponseArgs{...}
//
//  or:
//
//          nil
type QuarantinePolicyResponsePtrInput interface {
	pulumi.Input

	ToQuarantinePolicyResponsePtrOutput() QuarantinePolicyResponsePtrOutput
	ToQuarantinePolicyResponsePtrOutputWithContext(context.Context) QuarantinePolicyResponsePtrOutput
}

type quarantinePolicyResponsePtrType QuarantinePolicyResponseArgs

func QuarantinePolicyResponsePtr(v *QuarantinePolicyResponseArgs) QuarantinePolicyResponsePtrInput {
	return (*quarantinePolicyResponsePtrType)(v)
}

func (*quarantinePolicyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QuarantinePolicyResponse)(nil)).Elem()
}

func (i *quarantinePolicyResponsePtrType) ToQuarantinePolicyResponsePtrOutput() QuarantinePolicyResponsePtrOutput {
	return i.ToQuarantinePolicyResponsePtrOutputWithContext(context.Background())
}

func (i *quarantinePolicyResponsePtrType) ToQuarantinePolicyResponsePtrOutputWithContext(ctx context.Context) QuarantinePolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuarantinePolicyResponsePtrOutput)
}

// The quarantine policy for a container registry.
type QuarantinePolicyResponseOutput struct{ *pulumi.OutputState }

func (QuarantinePolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuarantinePolicyResponse)(nil)).Elem()
}

func (o QuarantinePolicyResponseOutput) ToQuarantinePolicyResponseOutput() QuarantinePolicyResponseOutput {
	return o
}

func (o QuarantinePolicyResponseOutput) ToQuarantinePolicyResponseOutputWithContext(ctx context.Context) QuarantinePolicyResponseOutput {
	return o
}

func (o QuarantinePolicyResponseOutput) ToQuarantinePolicyResponsePtrOutput() QuarantinePolicyResponsePtrOutput {
	return o.ToQuarantinePolicyResponsePtrOutputWithContext(context.Background())
}

func (o QuarantinePolicyResponseOutput) ToQuarantinePolicyResponsePtrOutputWithContext(ctx context.Context) QuarantinePolicyResponsePtrOutput {
	return o.ApplyT(func(v QuarantinePolicyResponse) *QuarantinePolicyResponse {
		return &v
	}).(QuarantinePolicyResponsePtrOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o QuarantinePolicyResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QuarantinePolicyResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type QuarantinePolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (QuarantinePolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuarantinePolicyResponse)(nil)).Elem()
}

func (o QuarantinePolicyResponsePtrOutput) ToQuarantinePolicyResponsePtrOutput() QuarantinePolicyResponsePtrOutput {
	return o
}

func (o QuarantinePolicyResponsePtrOutput) ToQuarantinePolicyResponsePtrOutputWithContext(ctx context.Context) QuarantinePolicyResponsePtrOutput {
	return o
}

func (o QuarantinePolicyResponsePtrOutput) Elem() QuarantinePolicyResponseOutput {
	return o.ApplyT(func(v *QuarantinePolicyResponse) QuarantinePolicyResponse { return *v }).(QuarantinePolicyResponseOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o QuarantinePolicyResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QuarantinePolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// An object that represents a container registry.
type RegistryType struct {
	// The location of the resource. This cannot be changed after the resource is created.
	Location string `pulumi:"location"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The properties of the container registry.
	Properties RegistryPropertiesResponse `pulumi:"properties"`
	// The SKU of the container registry.
	Sku SkuResponse `pulumi:"sku"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type string `pulumi:"type"`
}

// RegistryTypeInput is an input type that accepts RegistryTypeArgs and RegistryTypeOutput values.
// You can construct a concrete instance of `RegistryTypeInput` via:
//
//          RegistryTypeArgs{...}
type RegistryTypeInput interface {
	pulumi.Input

	ToRegistryTypeOutput() RegistryTypeOutput
	ToRegistryTypeOutputWithContext(context.Context) RegistryTypeOutput
}

// An object that represents a container registry.
type RegistryTypeArgs struct {
	// The location of the resource. This cannot be changed after the resource is created.
	Location pulumi.StringInput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of the container registry.
	Properties RegistryPropertiesResponseInput `pulumi:"properties"`
	// The SKU of the container registry.
	Sku SkuResponseInput `pulumi:"sku"`
	// The tags of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RegistryTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryType)(nil)).Elem()
}

func (i RegistryTypeArgs) ToRegistryTypeOutput() RegistryTypeOutput {
	return i.ToRegistryTypeOutputWithContext(context.Background())
}

func (i RegistryTypeArgs) ToRegistryTypeOutputWithContext(ctx context.Context) RegistryTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTypeOutput)
}

// An object that represents a container registry.
type RegistryTypeOutput struct{ *pulumi.OutputState }

func (RegistryTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryType)(nil)).Elem()
}

func (o RegistryTypeOutput) ToRegistryTypeOutput() RegistryTypeOutput {
	return o
}

func (o RegistryTypeOutput) ToRegistryTypeOutputWithContext(ctx context.Context) RegistryTypeOutput {
	return o
}

// The location of the resource. This cannot be changed after the resource is created.
func (o RegistryTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryType) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource.
func (o RegistryTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of the container registry.
func (o RegistryTypeOutput) Properties() RegistryPropertiesResponseOutput {
	return o.ApplyT(func(v RegistryType) RegistryPropertiesResponse { return v.Properties }).(RegistryPropertiesResponseOutput)
}

// The SKU of the container registry.
func (o RegistryTypeOutput) Sku() SkuResponseOutput {
	return o.ApplyT(func(v RegistryType) SkuResponse { return v.Sku }).(SkuResponseOutput)
}

// The tags of the resource.
func (o RegistryTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RegistryType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o RegistryTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryType) string { return v.Type }).(pulumi.StringOutput)
}

// The login password for the container registry.
type RegistryPasswordResponse struct {
	// The password name.
	Name *string `pulumi:"name"`
	// The password value.
	Value *string `pulumi:"value"`
}

// RegistryPasswordResponseInput is an input type that accepts RegistryPasswordResponseArgs and RegistryPasswordResponseOutput values.
// You can construct a concrete instance of `RegistryPasswordResponseInput` via:
//
//          RegistryPasswordResponseArgs{...}
type RegistryPasswordResponseInput interface {
	pulumi.Input

	ToRegistryPasswordResponseOutput() RegistryPasswordResponseOutput
	ToRegistryPasswordResponseOutputWithContext(context.Context) RegistryPasswordResponseOutput
}

// The login password for the container registry.
type RegistryPasswordResponseArgs struct {
	// The password name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The password value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (RegistryPasswordResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryPasswordResponse)(nil)).Elem()
}

func (i RegistryPasswordResponseArgs) ToRegistryPasswordResponseOutput() RegistryPasswordResponseOutput {
	return i.ToRegistryPasswordResponseOutputWithContext(context.Background())
}

func (i RegistryPasswordResponseArgs) ToRegistryPasswordResponseOutputWithContext(ctx context.Context) RegistryPasswordResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryPasswordResponseOutput)
}

// RegistryPasswordResponseArrayInput is an input type that accepts RegistryPasswordResponseArray and RegistryPasswordResponseArrayOutput values.
// You can construct a concrete instance of `RegistryPasswordResponseArrayInput` via:
//
//          RegistryPasswordResponseArray{ RegistryPasswordResponseArgs{...} }
type RegistryPasswordResponseArrayInput interface {
	pulumi.Input

	ToRegistryPasswordResponseArrayOutput() RegistryPasswordResponseArrayOutput
	ToRegistryPasswordResponseArrayOutputWithContext(context.Context) RegistryPasswordResponseArrayOutput
}

type RegistryPasswordResponseArray []RegistryPasswordResponseInput

func (RegistryPasswordResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryPasswordResponse)(nil)).Elem()
}

func (i RegistryPasswordResponseArray) ToRegistryPasswordResponseArrayOutput() RegistryPasswordResponseArrayOutput {
	return i.ToRegistryPasswordResponseArrayOutputWithContext(context.Background())
}

func (i RegistryPasswordResponseArray) ToRegistryPasswordResponseArrayOutputWithContext(ctx context.Context) RegistryPasswordResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryPasswordResponseArrayOutput)
}

// The login password for the container registry.
type RegistryPasswordResponseOutput struct{ *pulumi.OutputState }

func (RegistryPasswordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryPasswordResponse)(nil)).Elem()
}

func (o RegistryPasswordResponseOutput) ToRegistryPasswordResponseOutput() RegistryPasswordResponseOutput {
	return o
}

func (o RegistryPasswordResponseOutput) ToRegistryPasswordResponseOutputWithContext(ctx context.Context) RegistryPasswordResponseOutput {
	return o
}

// The password name.
func (o RegistryPasswordResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryPasswordResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The password value.
func (o RegistryPasswordResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryPasswordResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RegistryPasswordResponseArrayOutput struct{ *pulumi.OutputState }

func (RegistryPasswordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryPasswordResponse)(nil)).Elem()
}

func (o RegistryPasswordResponseArrayOutput) ToRegistryPasswordResponseArrayOutput() RegistryPasswordResponseArrayOutput {
	return o
}

func (o RegistryPasswordResponseArrayOutput) ToRegistryPasswordResponseArrayOutputWithContext(ctx context.Context) RegistryPasswordResponseArrayOutput {
	return o
}

func (o RegistryPasswordResponseArrayOutput) Index(i pulumi.IntInput) RegistryPasswordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegistryPasswordResponse {
		return vs[0].([]RegistryPasswordResponse)[vs[1].(int)]
	}).(RegistryPasswordResponseOutput)
}

// The properties of a container registry.
type RegistryProperties struct {
	// The value that indicates whether the admin user is enabled.
	AdminUserEnabled *bool `pulumi:"adminUserEnabled"`
	// The network rule set for a container registry.
	NetworkRuleSet *NetworkRuleSet `pulumi:"networkRuleSet"`
	// The policies for a container registry.
	Policies *Policies `pulumi:"policies"`
	// The properties of the storage account for the container registry. Only applicable to Classic SKU.
	StorageAccount *StorageAccountProperties `pulumi:"storageAccount"`
}

// RegistryPropertiesInput is an input type that accepts RegistryPropertiesArgs and RegistryPropertiesOutput values.
// You can construct a concrete instance of `RegistryPropertiesInput` via:
//
//          RegistryPropertiesArgs{...}
type RegistryPropertiesInput interface {
	pulumi.Input

	ToRegistryPropertiesOutput() RegistryPropertiesOutput
	ToRegistryPropertiesOutputWithContext(context.Context) RegistryPropertiesOutput
}

// The properties of a container registry.
type RegistryPropertiesArgs struct {
	// The value that indicates whether the admin user is enabled.
	AdminUserEnabled pulumi.BoolPtrInput `pulumi:"adminUserEnabled"`
	// The network rule set for a container registry.
	NetworkRuleSet NetworkRuleSetPtrInput `pulumi:"networkRuleSet"`
	// The policies for a container registry.
	Policies PoliciesPtrInput `pulumi:"policies"`
	// The properties of the storage account for the container registry. Only applicable to Classic SKU.
	StorageAccount StorageAccountPropertiesPtrInput `pulumi:"storageAccount"`
}

func (RegistryPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryProperties)(nil)).Elem()
}

func (i RegistryPropertiesArgs) ToRegistryPropertiesOutput() RegistryPropertiesOutput {
	return i.ToRegistryPropertiesOutputWithContext(context.Background())
}

func (i RegistryPropertiesArgs) ToRegistryPropertiesOutputWithContext(ctx context.Context) RegistryPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryPropertiesOutput)
}

func (i RegistryPropertiesArgs) ToRegistryPropertiesPtrOutput() RegistryPropertiesPtrOutput {
	return i.ToRegistryPropertiesPtrOutputWithContext(context.Background())
}

func (i RegistryPropertiesArgs) ToRegistryPropertiesPtrOutputWithContext(ctx context.Context) RegistryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryPropertiesOutput).ToRegistryPropertiesPtrOutputWithContext(ctx)
}

// RegistryPropertiesPtrInput is an input type that accepts RegistryPropertiesArgs, RegistryPropertiesPtr and RegistryPropertiesPtrOutput values.
// You can construct a concrete instance of `RegistryPropertiesPtrInput` via:
//
//          RegistryPropertiesArgs{...}
//
//  or:
//
//          nil
type RegistryPropertiesPtrInput interface {
	pulumi.Input

	ToRegistryPropertiesPtrOutput() RegistryPropertiesPtrOutput
	ToRegistryPropertiesPtrOutputWithContext(context.Context) RegistryPropertiesPtrOutput
}

type registryPropertiesPtrType RegistryPropertiesArgs

func RegistryPropertiesPtr(v *RegistryPropertiesArgs) RegistryPropertiesPtrInput {
	return (*registryPropertiesPtrType)(v)
}

func (*registryPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryProperties)(nil)).Elem()
}

func (i *registryPropertiesPtrType) ToRegistryPropertiesPtrOutput() RegistryPropertiesPtrOutput {
	return i.ToRegistryPropertiesPtrOutputWithContext(context.Background())
}

func (i *registryPropertiesPtrType) ToRegistryPropertiesPtrOutputWithContext(ctx context.Context) RegistryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryPropertiesPtrOutput)
}

// The properties of a container registry.
type RegistryPropertiesOutput struct{ *pulumi.OutputState }

func (RegistryPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryProperties)(nil)).Elem()
}

func (o RegistryPropertiesOutput) ToRegistryPropertiesOutput() RegistryPropertiesOutput {
	return o
}

func (o RegistryPropertiesOutput) ToRegistryPropertiesOutputWithContext(ctx context.Context) RegistryPropertiesOutput {
	return o
}

func (o RegistryPropertiesOutput) ToRegistryPropertiesPtrOutput() RegistryPropertiesPtrOutput {
	return o.ToRegistryPropertiesPtrOutputWithContext(context.Background())
}

func (o RegistryPropertiesOutput) ToRegistryPropertiesPtrOutputWithContext(ctx context.Context) RegistryPropertiesPtrOutput {
	return o.ApplyT(func(v RegistryProperties) *RegistryProperties {
		return &v
	}).(RegistryPropertiesPtrOutput)
}

// The value that indicates whether the admin user is enabled.
func (o RegistryPropertiesOutput) AdminUserEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RegistryProperties) *bool { return v.AdminUserEnabled }).(pulumi.BoolPtrOutput)
}

// The network rule set for a container registry.
func (o RegistryPropertiesOutput) NetworkRuleSet() NetworkRuleSetPtrOutput {
	return o.ApplyT(func(v RegistryProperties) *NetworkRuleSet { return v.NetworkRuleSet }).(NetworkRuleSetPtrOutput)
}

// The policies for a container registry.
func (o RegistryPropertiesOutput) Policies() PoliciesPtrOutput {
	return o.ApplyT(func(v RegistryProperties) *Policies { return v.Policies }).(PoliciesPtrOutput)
}

// The properties of the storage account for the container registry. Only applicable to Classic SKU.
func (o RegistryPropertiesOutput) StorageAccount() StorageAccountPropertiesPtrOutput {
	return o.ApplyT(func(v RegistryProperties) *StorageAccountProperties { return v.StorageAccount }).(StorageAccountPropertiesPtrOutput)
}

type RegistryPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RegistryPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryProperties)(nil)).Elem()
}

func (o RegistryPropertiesPtrOutput) ToRegistryPropertiesPtrOutput() RegistryPropertiesPtrOutput {
	return o
}

func (o RegistryPropertiesPtrOutput) ToRegistryPropertiesPtrOutputWithContext(ctx context.Context) RegistryPropertiesPtrOutput {
	return o
}

func (o RegistryPropertiesPtrOutput) Elem() RegistryPropertiesOutput {
	return o.ApplyT(func(v *RegistryProperties) RegistryProperties { return *v }).(RegistryPropertiesOutput)
}

// The value that indicates whether the admin user is enabled.
func (o RegistryPropertiesPtrOutput) AdminUserEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RegistryProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AdminUserEnabled
	}).(pulumi.BoolPtrOutput)
}

// The network rule set for a container registry.
func (o RegistryPropertiesPtrOutput) NetworkRuleSet() NetworkRuleSetPtrOutput {
	return o.ApplyT(func(v *RegistryProperties) *NetworkRuleSet {
		if v == nil {
			return nil
		}
		return v.NetworkRuleSet
	}).(NetworkRuleSetPtrOutput)
}

// The policies for a container registry.
func (o RegistryPropertiesPtrOutput) Policies() PoliciesPtrOutput {
	return o.ApplyT(func(v *RegistryProperties) *Policies {
		if v == nil {
			return nil
		}
		return v.Policies
	}).(PoliciesPtrOutput)
}

// The properties of the storage account for the container registry. Only applicable to Classic SKU.
func (o RegistryPropertiesPtrOutput) StorageAccount() StorageAccountPropertiesPtrOutput {
	return o.ApplyT(func(v *RegistryProperties) *StorageAccountProperties {
		if v == nil {
			return nil
		}
		return v.StorageAccount
	}).(StorageAccountPropertiesPtrOutput)
}

// The properties of a container registry.
type RegistryPropertiesResponse struct {
	// The value that indicates whether the admin user is enabled.
	AdminUserEnabled *bool `pulumi:"adminUserEnabled"`
	// The creation date of the container registry in ISO8601 format.
	CreationDate string `pulumi:"creationDate"`
	// The URL that can be used to log into the container registry.
	LoginServer string `pulumi:"loginServer"`
	// The network rule set for a container registry.
	NetworkRuleSet *NetworkRuleSetResponse `pulumi:"networkRuleSet"`
	// The policies for a container registry.
	Policies *PoliciesResponse `pulumi:"policies"`
	// The provisioning state of the container registry at the time the operation was called.
	ProvisioningState string `pulumi:"provisioningState"`
	// The status of the container registry at the time the operation was called.
	Status StatusResponse `pulumi:"status"`
	// The properties of the storage account for the container registry. Only applicable to Classic SKU.
	StorageAccount *StorageAccountPropertiesResponse `pulumi:"storageAccount"`
}

// RegistryPropertiesResponseInput is an input type that accepts RegistryPropertiesResponseArgs and RegistryPropertiesResponseOutput values.
// You can construct a concrete instance of `RegistryPropertiesResponseInput` via:
//
//          RegistryPropertiesResponseArgs{...}
type RegistryPropertiesResponseInput interface {
	pulumi.Input

	ToRegistryPropertiesResponseOutput() RegistryPropertiesResponseOutput
	ToRegistryPropertiesResponseOutputWithContext(context.Context) RegistryPropertiesResponseOutput
}

// The properties of a container registry.
type RegistryPropertiesResponseArgs struct {
	// The value that indicates whether the admin user is enabled.
	AdminUserEnabled pulumi.BoolPtrInput `pulumi:"adminUserEnabled"`
	// The creation date of the container registry in ISO8601 format.
	CreationDate pulumi.StringInput `pulumi:"creationDate"`
	// The URL that can be used to log into the container registry.
	LoginServer pulumi.StringInput `pulumi:"loginServer"`
	// The network rule set for a container registry.
	NetworkRuleSet NetworkRuleSetResponsePtrInput `pulumi:"networkRuleSet"`
	// The policies for a container registry.
	Policies PoliciesResponsePtrInput `pulumi:"policies"`
	// The provisioning state of the container registry at the time the operation was called.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The status of the container registry at the time the operation was called.
	Status StatusResponseInput `pulumi:"status"`
	// The properties of the storage account for the container registry. Only applicable to Classic SKU.
	StorageAccount StorageAccountPropertiesResponsePtrInput `pulumi:"storageAccount"`
}

func (RegistryPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryPropertiesResponse)(nil)).Elem()
}

func (i RegistryPropertiesResponseArgs) ToRegistryPropertiesResponseOutput() RegistryPropertiesResponseOutput {
	return i.ToRegistryPropertiesResponseOutputWithContext(context.Background())
}

func (i RegistryPropertiesResponseArgs) ToRegistryPropertiesResponseOutputWithContext(ctx context.Context) RegistryPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryPropertiesResponseOutput)
}

func (i RegistryPropertiesResponseArgs) ToRegistryPropertiesResponsePtrOutput() RegistryPropertiesResponsePtrOutput {
	return i.ToRegistryPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i RegistryPropertiesResponseArgs) ToRegistryPropertiesResponsePtrOutputWithContext(ctx context.Context) RegistryPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryPropertiesResponseOutput).ToRegistryPropertiesResponsePtrOutputWithContext(ctx)
}

// RegistryPropertiesResponsePtrInput is an input type that accepts RegistryPropertiesResponseArgs, RegistryPropertiesResponsePtr and RegistryPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `RegistryPropertiesResponsePtrInput` via:
//
//          RegistryPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type RegistryPropertiesResponsePtrInput interface {
	pulumi.Input

	ToRegistryPropertiesResponsePtrOutput() RegistryPropertiesResponsePtrOutput
	ToRegistryPropertiesResponsePtrOutputWithContext(context.Context) RegistryPropertiesResponsePtrOutput
}

type registryPropertiesResponsePtrType RegistryPropertiesResponseArgs

func RegistryPropertiesResponsePtr(v *RegistryPropertiesResponseArgs) RegistryPropertiesResponsePtrInput {
	return (*registryPropertiesResponsePtrType)(v)
}

func (*registryPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryPropertiesResponse)(nil)).Elem()
}

func (i *registryPropertiesResponsePtrType) ToRegistryPropertiesResponsePtrOutput() RegistryPropertiesResponsePtrOutput {
	return i.ToRegistryPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *registryPropertiesResponsePtrType) ToRegistryPropertiesResponsePtrOutputWithContext(ctx context.Context) RegistryPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryPropertiesResponsePtrOutput)
}

// The properties of a container registry.
type RegistryPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RegistryPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryPropertiesResponse)(nil)).Elem()
}

func (o RegistryPropertiesResponseOutput) ToRegistryPropertiesResponseOutput() RegistryPropertiesResponseOutput {
	return o
}

func (o RegistryPropertiesResponseOutput) ToRegistryPropertiesResponseOutputWithContext(ctx context.Context) RegistryPropertiesResponseOutput {
	return o
}

func (o RegistryPropertiesResponseOutput) ToRegistryPropertiesResponsePtrOutput() RegistryPropertiesResponsePtrOutput {
	return o.ToRegistryPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o RegistryPropertiesResponseOutput) ToRegistryPropertiesResponsePtrOutputWithContext(ctx context.Context) RegistryPropertiesResponsePtrOutput {
	return o.ApplyT(func(v RegistryPropertiesResponse) *RegistryPropertiesResponse {
		return &v
	}).(RegistryPropertiesResponsePtrOutput)
}

// The value that indicates whether the admin user is enabled.
func (o RegistryPropertiesResponseOutput) AdminUserEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RegistryPropertiesResponse) *bool { return v.AdminUserEnabled }).(pulumi.BoolPtrOutput)
}

// The creation date of the container registry in ISO8601 format.
func (o RegistryPropertiesResponseOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryPropertiesResponse) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The URL that can be used to log into the container registry.
func (o RegistryPropertiesResponseOutput) LoginServer() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryPropertiesResponse) string { return v.LoginServer }).(pulumi.StringOutput)
}

// The network rule set for a container registry.
func (o RegistryPropertiesResponseOutput) NetworkRuleSet() NetworkRuleSetResponsePtrOutput {
	return o.ApplyT(func(v RegistryPropertiesResponse) *NetworkRuleSetResponse { return v.NetworkRuleSet }).(NetworkRuleSetResponsePtrOutput)
}

// The policies for a container registry.
func (o RegistryPropertiesResponseOutput) Policies() PoliciesResponsePtrOutput {
	return o.ApplyT(func(v RegistryPropertiesResponse) *PoliciesResponse { return v.Policies }).(PoliciesResponsePtrOutput)
}

// The provisioning state of the container registry at the time the operation was called.
func (o RegistryPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The status of the container registry at the time the operation was called.
func (o RegistryPropertiesResponseOutput) Status() StatusResponseOutput {
	return o.ApplyT(func(v RegistryPropertiesResponse) StatusResponse { return v.Status }).(StatusResponseOutput)
}

// The properties of the storage account for the container registry. Only applicable to Classic SKU.
func (o RegistryPropertiesResponseOutput) StorageAccount() StorageAccountPropertiesResponsePtrOutput {
	return o.ApplyT(func(v RegistryPropertiesResponse) *StorageAccountPropertiesResponse { return v.StorageAccount }).(StorageAccountPropertiesResponsePtrOutput)
}

type RegistryPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (RegistryPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryPropertiesResponse)(nil)).Elem()
}

func (o RegistryPropertiesResponsePtrOutput) ToRegistryPropertiesResponsePtrOutput() RegistryPropertiesResponsePtrOutput {
	return o
}

func (o RegistryPropertiesResponsePtrOutput) ToRegistryPropertiesResponsePtrOutputWithContext(ctx context.Context) RegistryPropertiesResponsePtrOutput {
	return o
}

func (o RegistryPropertiesResponsePtrOutput) Elem() RegistryPropertiesResponseOutput {
	return o.ApplyT(func(v *RegistryPropertiesResponse) RegistryPropertiesResponse { return *v }).(RegistryPropertiesResponseOutput)
}

// The value that indicates whether the admin user is enabled.
func (o RegistryPropertiesResponsePtrOutput) AdminUserEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RegistryPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AdminUserEnabled
	}).(pulumi.BoolPtrOutput)
}

// The creation date of the container registry in ISO8601 format.
func (o RegistryPropertiesResponsePtrOutput) CreationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreationDate
	}).(pulumi.StringPtrOutput)
}

// The URL that can be used to log into the container registry.
func (o RegistryPropertiesResponsePtrOutput) LoginServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LoginServer
	}).(pulumi.StringPtrOutput)
}

// The network rule set for a container registry.
func (o RegistryPropertiesResponsePtrOutput) NetworkRuleSet() NetworkRuleSetResponsePtrOutput {
	return o.ApplyT(func(v *RegistryPropertiesResponse) *NetworkRuleSetResponse {
		if v == nil {
			return nil
		}
		return v.NetworkRuleSet
	}).(NetworkRuleSetResponsePtrOutput)
}

// The policies for a container registry.
func (o RegistryPropertiesResponsePtrOutput) Policies() PoliciesResponsePtrOutput {
	return o.ApplyT(func(v *RegistryPropertiesResponse) *PoliciesResponse {
		if v == nil {
			return nil
		}
		return v.Policies
	}).(PoliciesResponsePtrOutput)
}

// The provisioning state of the container registry at the time the operation was called.
func (o RegistryPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The status of the container registry at the time the operation was called.
func (o RegistryPropertiesResponsePtrOutput) Status() StatusResponsePtrOutput {
	return o.ApplyT(func(v *RegistryPropertiesResponse) *StatusResponse {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(StatusResponsePtrOutput)
}

// The properties of the storage account for the container registry. Only applicable to Classic SKU.
func (o RegistryPropertiesResponsePtrOutput) StorageAccount() StorageAccountPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *RegistryPropertiesResponse) *StorageAccountPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.StorageAccount
	}).(StorageAccountPropertiesResponsePtrOutput)
}

// An object that represents a replication for a container registry.
type ReplicationType struct {
	// The location of the resource. This cannot be changed after the resource is created.
	Location string `pulumi:"location"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The properties of the replication.
	Properties ReplicationPropertiesResponse `pulumi:"properties"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type string `pulumi:"type"`
}

// ReplicationTypeInput is an input type that accepts ReplicationTypeArgs and ReplicationTypeOutput values.
// You can construct a concrete instance of `ReplicationTypeInput` via:
//
//          ReplicationTypeArgs{...}
type ReplicationTypeInput interface {
	pulumi.Input

	ToReplicationTypeOutput() ReplicationTypeOutput
	ToReplicationTypeOutputWithContext(context.Context) ReplicationTypeOutput
}

// An object that represents a replication for a container registry.
type ReplicationTypeArgs struct {
	// The location of the resource. This cannot be changed after the resource is created.
	Location pulumi.StringInput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of the replication.
	Properties ReplicationPropertiesResponseInput `pulumi:"properties"`
	// The tags of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ReplicationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationType)(nil)).Elem()
}

func (i ReplicationTypeArgs) ToReplicationTypeOutput() ReplicationTypeOutput {
	return i.ToReplicationTypeOutputWithContext(context.Background())
}

func (i ReplicationTypeArgs) ToReplicationTypeOutputWithContext(ctx context.Context) ReplicationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationTypeOutput)
}

// An object that represents a replication for a container registry.
type ReplicationTypeOutput struct{ *pulumi.OutputState }

func (ReplicationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationType)(nil)).Elem()
}

func (o ReplicationTypeOutput) ToReplicationTypeOutput() ReplicationTypeOutput {
	return o
}

func (o ReplicationTypeOutput) ToReplicationTypeOutputWithContext(ctx context.Context) ReplicationTypeOutput {
	return o
}

// The location of the resource. This cannot be changed after the resource is created.
func (o ReplicationTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationType) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource.
func (o ReplicationTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of the replication.
func (o ReplicationTypeOutput) Properties() ReplicationPropertiesResponseOutput {
	return o.ApplyT(func(v ReplicationType) ReplicationPropertiesResponse { return v.Properties }).(ReplicationPropertiesResponseOutput)
}

// The tags of the resource.
func (o ReplicationTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ReplicationType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o ReplicationTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationType) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of a replication.
type ReplicationProperties struct {
}

// ReplicationPropertiesInput is an input type that accepts ReplicationPropertiesArgs and ReplicationPropertiesOutput values.
// You can construct a concrete instance of `ReplicationPropertiesInput` via:
//
//          ReplicationPropertiesArgs{...}
type ReplicationPropertiesInput interface {
	pulumi.Input

	ToReplicationPropertiesOutput() ReplicationPropertiesOutput
	ToReplicationPropertiesOutputWithContext(context.Context) ReplicationPropertiesOutput
}

// The properties of a replication.
type ReplicationPropertiesArgs struct {
}

func (ReplicationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationProperties)(nil)).Elem()
}

func (i ReplicationPropertiesArgs) ToReplicationPropertiesOutput() ReplicationPropertiesOutput {
	return i.ToReplicationPropertiesOutputWithContext(context.Background())
}

func (i ReplicationPropertiesArgs) ToReplicationPropertiesOutputWithContext(ctx context.Context) ReplicationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationPropertiesOutput)
}

func (i ReplicationPropertiesArgs) ToReplicationPropertiesPtrOutput() ReplicationPropertiesPtrOutput {
	return i.ToReplicationPropertiesPtrOutputWithContext(context.Background())
}

func (i ReplicationPropertiesArgs) ToReplicationPropertiesPtrOutputWithContext(ctx context.Context) ReplicationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationPropertiesOutput).ToReplicationPropertiesPtrOutputWithContext(ctx)
}

// ReplicationPropertiesPtrInput is an input type that accepts ReplicationPropertiesArgs, ReplicationPropertiesPtr and ReplicationPropertiesPtrOutput values.
// You can construct a concrete instance of `ReplicationPropertiesPtrInput` via:
//
//          ReplicationPropertiesArgs{...}
//
//  or:
//
//          nil
type ReplicationPropertiesPtrInput interface {
	pulumi.Input

	ToReplicationPropertiesPtrOutput() ReplicationPropertiesPtrOutput
	ToReplicationPropertiesPtrOutputWithContext(context.Context) ReplicationPropertiesPtrOutput
}

type replicationPropertiesPtrType ReplicationPropertiesArgs

func ReplicationPropertiesPtr(v *ReplicationPropertiesArgs) ReplicationPropertiesPtrInput {
	return (*replicationPropertiesPtrType)(v)
}

func (*replicationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationProperties)(nil)).Elem()
}

func (i *replicationPropertiesPtrType) ToReplicationPropertiesPtrOutput() ReplicationPropertiesPtrOutput {
	return i.ToReplicationPropertiesPtrOutputWithContext(context.Background())
}

func (i *replicationPropertiesPtrType) ToReplicationPropertiesPtrOutputWithContext(ctx context.Context) ReplicationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationPropertiesPtrOutput)
}

// The properties of a replication.
type ReplicationPropertiesOutput struct{ *pulumi.OutputState }

func (ReplicationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationProperties)(nil)).Elem()
}

func (o ReplicationPropertiesOutput) ToReplicationPropertiesOutput() ReplicationPropertiesOutput {
	return o
}

func (o ReplicationPropertiesOutput) ToReplicationPropertiesOutputWithContext(ctx context.Context) ReplicationPropertiesOutput {
	return o
}

func (o ReplicationPropertiesOutput) ToReplicationPropertiesPtrOutput() ReplicationPropertiesPtrOutput {
	return o.ToReplicationPropertiesPtrOutputWithContext(context.Background())
}

func (o ReplicationPropertiesOutput) ToReplicationPropertiesPtrOutputWithContext(ctx context.Context) ReplicationPropertiesPtrOutput {
	return o.ApplyT(func(v ReplicationProperties) *ReplicationProperties {
		return &v
	}).(ReplicationPropertiesPtrOutput)
}

type ReplicationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ReplicationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationProperties)(nil)).Elem()
}

func (o ReplicationPropertiesPtrOutput) ToReplicationPropertiesPtrOutput() ReplicationPropertiesPtrOutput {
	return o
}

func (o ReplicationPropertiesPtrOutput) ToReplicationPropertiesPtrOutputWithContext(ctx context.Context) ReplicationPropertiesPtrOutput {
	return o
}

func (o ReplicationPropertiesPtrOutput) Elem() ReplicationPropertiesOutput {
	return o.ApplyT(func(v *ReplicationProperties) ReplicationProperties { return *v }).(ReplicationPropertiesOutput)
}

// The properties of a replication.
type ReplicationPropertiesResponse struct {
	// The provisioning state of the replication at the time the operation was called.
	ProvisioningState string `pulumi:"provisioningState"`
	// The status of the replication at the time the operation was called.
	Status StatusResponse `pulumi:"status"`
}

// ReplicationPropertiesResponseInput is an input type that accepts ReplicationPropertiesResponseArgs and ReplicationPropertiesResponseOutput values.
// You can construct a concrete instance of `ReplicationPropertiesResponseInput` via:
//
//          ReplicationPropertiesResponseArgs{...}
type ReplicationPropertiesResponseInput interface {
	pulumi.Input

	ToReplicationPropertiesResponseOutput() ReplicationPropertiesResponseOutput
	ToReplicationPropertiesResponseOutputWithContext(context.Context) ReplicationPropertiesResponseOutput
}

// The properties of a replication.
type ReplicationPropertiesResponseArgs struct {
	// The provisioning state of the replication at the time the operation was called.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The status of the replication at the time the operation was called.
	Status StatusResponseInput `pulumi:"status"`
}

func (ReplicationPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationPropertiesResponse)(nil)).Elem()
}

func (i ReplicationPropertiesResponseArgs) ToReplicationPropertiesResponseOutput() ReplicationPropertiesResponseOutput {
	return i.ToReplicationPropertiesResponseOutputWithContext(context.Background())
}

func (i ReplicationPropertiesResponseArgs) ToReplicationPropertiesResponseOutputWithContext(ctx context.Context) ReplicationPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationPropertiesResponseOutput)
}

func (i ReplicationPropertiesResponseArgs) ToReplicationPropertiesResponsePtrOutput() ReplicationPropertiesResponsePtrOutput {
	return i.ToReplicationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ReplicationPropertiesResponseArgs) ToReplicationPropertiesResponsePtrOutputWithContext(ctx context.Context) ReplicationPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationPropertiesResponseOutput).ToReplicationPropertiesResponsePtrOutputWithContext(ctx)
}

// ReplicationPropertiesResponsePtrInput is an input type that accepts ReplicationPropertiesResponseArgs, ReplicationPropertiesResponsePtr and ReplicationPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ReplicationPropertiesResponsePtrInput` via:
//
//          ReplicationPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ReplicationPropertiesResponsePtrInput interface {
	pulumi.Input

	ToReplicationPropertiesResponsePtrOutput() ReplicationPropertiesResponsePtrOutput
	ToReplicationPropertiesResponsePtrOutputWithContext(context.Context) ReplicationPropertiesResponsePtrOutput
}

type replicationPropertiesResponsePtrType ReplicationPropertiesResponseArgs

func ReplicationPropertiesResponsePtr(v *ReplicationPropertiesResponseArgs) ReplicationPropertiesResponsePtrInput {
	return (*replicationPropertiesResponsePtrType)(v)
}

func (*replicationPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationPropertiesResponse)(nil)).Elem()
}

func (i *replicationPropertiesResponsePtrType) ToReplicationPropertiesResponsePtrOutput() ReplicationPropertiesResponsePtrOutput {
	return i.ToReplicationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *replicationPropertiesResponsePtrType) ToReplicationPropertiesResponsePtrOutputWithContext(ctx context.Context) ReplicationPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationPropertiesResponsePtrOutput)
}

// The properties of a replication.
type ReplicationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ReplicationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationPropertiesResponse)(nil)).Elem()
}

func (o ReplicationPropertiesResponseOutput) ToReplicationPropertiesResponseOutput() ReplicationPropertiesResponseOutput {
	return o
}

func (o ReplicationPropertiesResponseOutput) ToReplicationPropertiesResponseOutputWithContext(ctx context.Context) ReplicationPropertiesResponseOutput {
	return o
}

func (o ReplicationPropertiesResponseOutput) ToReplicationPropertiesResponsePtrOutput() ReplicationPropertiesResponsePtrOutput {
	return o.ToReplicationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ReplicationPropertiesResponseOutput) ToReplicationPropertiesResponsePtrOutputWithContext(ctx context.Context) ReplicationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ReplicationPropertiesResponse) *ReplicationPropertiesResponse {
		return &v
	}).(ReplicationPropertiesResponsePtrOutput)
}

// The provisioning state of the replication at the time the operation was called.
func (o ReplicationPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The status of the replication at the time the operation was called.
func (o ReplicationPropertiesResponseOutput) Status() StatusResponseOutput {
	return o.ApplyT(func(v ReplicationPropertiesResponse) StatusResponse { return v.Status }).(StatusResponseOutput)
}

type ReplicationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ReplicationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationPropertiesResponse)(nil)).Elem()
}

func (o ReplicationPropertiesResponsePtrOutput) ToReplicationPropertiesResponsePtrOutput() ReplicationPropertiesResponsePtrOutput {
	return o
}

func (o ReplicationPropertiesResponsePtrOutput) ToReplicationPropertiesResponsePtrOutputWithContext(ctx context.Context) ReplicationPropertiesResponsePtrOutput {
	return o
}

func (o ReplicationPropertiesResponsePtrOutput) Elem() ReplicationPropertiesResponseOutput {
	return o.ApplyT(func(v *ReplicationPropertiesResponse) ReplicationPropertiesResponse { return *v }).(ReplicationPropertiesResponseOutput)
}

// The provisioning state of the replication at the time the operation was called.
func (o ReplicationPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The status of the replication at the time the operation was called.
func (o ReplicationPropertiesResponsePtrOutput) Status() StatusResponsePtrOutput {
	return o.ApplyT(func(v *ReplicationPropertiesResponse) *StatusResponse {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(StatusResponsePtrOutput)
}

// The request that generated the event.
type RequestResponse struct {
	// The IP or hostname and possibly port of the client connection that initiated the event. This is the RemoteAddr from the standard http request.
	Addr *string `pulumi:"addr"`
	// The externally accessible hostname of the registry instance, as specified by the http host header on incoming requests.
	Host *string `pulumi:"host"`
	// The ID of the request that initiated the event.
	Id *string `pulumi:"id"`
	// The request method that generated the event.
	Method *string `pulumi:"method"`
	// The user agent header of the request.
	Useragent *string `pulumi:"useragent"`
}

// RequestResponseInput is an input type that accepts RequestResponseArgs and RequestResponseOutput values.
// You can construct a concrete instance of `RequestResponseInput` via:
//
//          RequestResponseArgs{...}
type RequestResponseInput interface {
	pulumi.Input

	ToRequestResponseOutput() RequestResponseOutput
	ToRequestResponseOutputWithContext(context.Context) RequestResponseOutput
}

// The request that generated the event.
type RequestResponseArgs struct {
	// The IP or hostname and possibly port of the client connection that initiated the event. This is the RemoteAddr from the standard http request.
	Addr pulumi.StringPtrInput `pulumi:"addr"`
	// The externally accessible hostname of the registry instance, as specified by the http host header on incoming requests.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The ID of the request that initiated the event.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The request method that generated the event.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// The user agent header of the request.
	Useragent pulumi.StringPtrInput `pulumi:"useragent"`
}

func (RequestResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestResponse)(nil)).Elem()
}

func (i RequestResponseArgs) ToRequestResponseOutput() RequestResponseOutput {
	return i.ToRequestResponseOutputWithContext(context.Background())
}

func (i RequestResponseArgs) ToRequestResponseOutputWithContext(ctx context.Context) RequestResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestResponseOutput)
}

func (i RequestResponseArgs) ToRequestResponsePtrOutput() RequestResponsePtrOutput {
	return i.ToRequestResponsePtrOutputWithContext(context.Background())
}

func (i RequestResponseArgs) ToRequestResponsePtrOutputWithContext(ctx context.Context) RequestResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestResponseOutput).ToRequestResponsePtrOutputWithContext(ctx)
}

// RequestResponsePtrInput is an input type that accepts RequestResponseArgs, RequestResponsePtr and RequestResponsePtrOutput values.
// You can construct a concrete instance of `RequestResponsePtrInput` via:
//
//          RequestResponseArgs{...}
//
//  or:
//
//          nil
type RequestResponsePtrInput interface {
	pulumi.Input

	ToRequestResponsePtrOutput() RequestResponsePtrOutput
	ToRequestResponsePtrOutputWithContext(context.Context) RequestResponsePtrOutput
}

type requestResponsePtrType RequestResponseArgs

func RequestResponsePtr(v *RequestResponseArgs) RequestResponsePtrInput {
	return (*requestResponsePtrType)(v)
}

func (*requestResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestResponse)(nil)).Elem()
}

func (i *requestResponsePtrType) ToRequestResponsePtrOutput() RequestResponsePtrOutput {
	return i.ToRequestResponsePtrOutputWithContext(context.Background())
}

func (i *requestResponsePtrType) ToRequestResponsePtrOutputWithContext(ctx context.Context) RequestResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestResponsePtrOutput)
}

// The request that generated the event.
type RequestResponseOutput struct{ *pulumi.OutputState }

func (RequestResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestResponse)(nil)).Elem()
}

func (o RequestResponseOutput) ToRequestResponseOutput() RequestResponseOutput {
	return o
}

func (o RequestResponseOutput) ToRequestResponseOutputWithContext(ctx context.Context) RequestResponseOutput {
	return o
}

func (o RequestResponseOutput) ToRequestResponsePtrOutput() RequestResponsePtrOutput {
	return o.ToRequestResponsePtrOutputWithContext(context.Background())
}

func (o RequestResponseOutput) ToRequestResponsePtrOutputWithContext(ctx context.Context) RequestResponsePtrOutput {
	return o.ApplyT(func(v RequestResponse) *RequestResponse {
		return &v
	}).(RequestResponsePtrOutput)
}

// The IP or hostname and possibly port of the client connection that initiated the event. This is the RemoteAddr from the standard http request.
func (o RequestResponseOutput) Addr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestResponse) *string { return v.Addr }).(pulumi.StringPtrOutput)
}

// The externally accessible hostname of the registry instance, as specified by the http host header on incoming requests.
func (o RequestResponseOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestResponse) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The ID of the request that initiated the event.
func (o RequestResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The request method that generated the event.
func (o RequestResponseOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestResponse) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// The user agent header of the request.
func (o RequestResponseOutput) Useragent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestResponse) *string { return v.Useragent }).(pulumi.StringPtrOutput)
}

type RequestResponsePtrOutput struct{ *pulumi.OutputState }

func (RequestResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestResponse)(nil)).Elem()
}

func (o RequestResponsePtrOutput) ToRequestResponsePtrOutput() RequestResponsePtrOutput {
	return o
}

func (o RequestResponsePtrOutput) ToRequestResponsePtrOutputWithContext(ctx context.Context) RequestResponsePtrOutput {
	return o
}

func (o RequestResponsePtrOutput) Elem() RequestResponseOutput {
	return o.ApplyT(func(v *RequestResponse) RequestResponse { return *v }).(RequestResponseOutput)
}

// The IP or hostname and possibly port of the client connection that initiated the event. This is the RemoteAddr from the standard http request.
func (o RequestResponsePtrOutput) Addr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestResponse) *string {
		if v == nil {
			return nil
		}
		return v.Addr
	}).(pulumi.StringPtrOutput)
}

// The externally accessible hostname of the registry instance, as specified by the http host header on incoming requests.
func (o RequestResponsePtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestResponse) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The ID of the request that initiated the event.
func (o RequestResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The request method that generated the event.
func (o RequestResponsePtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestResponse) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// The user agent header of the request.
func (o RequestResponsePtrOutput) Useragent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestResponse) *string {
		if v == nil {
			return nil
		}
		return v.Useragent
	}).(pulumi.StringPtrOutput)
}

// The retention policy for a container registry.
type RetentionPolicy struct {
	// The number of days to retain an untagged manifest after which it gets purged.
	Days *int `pulumi:"days"`
	// The value that indicates whether the policy is enabled or not.
	Status *string `pulumi:"status"`
}

// RetentionPolicyInput is an input type that accepts RetentionPolicyArgs and RetentionPolicyOutput values.
// You can construct a concrete instance of `RetentionPolicyInput` via:
//
//          RetentionPolicyArgs{...}
type RetentionPolicyInput interface {
	pulumi.Input

	ToRetentionPolicyOutput() RetentionPolicyOutput
	ToRetentionPolicyOutputWithContext(context.Context) RetentionPolicyOutput
}

// The retention policy for a container registry.
type RetentionPolicyArgs struct {
	// The number of days to retain an untagged manifest after which it gets purged.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// The value that indicates whether the policy is enabled or not.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicy)(nil)).Elem()
}

func (i RetentionPolicyArgs) ToRetentionPolicyOutput() RetentionPolicyOutput {
	return i.ToRetentionPolicyOutputWithContext(context.Background())
}

func (i RetentionPolicyArgs) ToRetentionPolicyOutputWithContext(ctx context.Context) RetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyOutput)
}

func (i RetentionPolicyArgs) ToRetentionPolicyPtrOutput() RetentionPolicyPtrOutput {
	return i.ToRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i RetentionPolicyArgs) ToRetentionPolicyPtrOutputWithContext(ctx context.Context) RetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyOutput).ToRetentionPolicyPtrOutputWithContext(ctx)
}

// RetentionPolicyPtrInput is an input type that accepts RetentionPolicyArgs, RetentionPolicyPtr and RetentionPolicyPtrOutput values.
// You can construct a concrete instance of `RetentionPolicyPtrInput` via:
//
//          RetentionPolicyArgs{...}
//
//  or:
//
//          nil
type RetentionPolicyPtrInput interface {
	pulumi.Input

	ToRetentionPolicyPtrOutput() RetentionPolicyPtrOutput
	ToRetentionPolicyPtrOutputWithContext(context.Context) RetentionPolicyPtrOutput
}

type retentionPolicyPtrType RetentionPolicyArgs

func RetentionPolicyPtr(v *RetentionPolicyArgs) RetentionPolicyPtrInput {
	return (*retentionPolicyPtrType)(v)
}

func (*retentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicy)(nil)).Elem()
}

func (i *retentionPolicyPtrType) ToRetentionPolicyPtrOutput() RetentionPolicyPtrOutput {
	return i.ToRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *retentionPolicyPtrType) ToRetentionPolicyPtrOutputWithContext(ctx context.Context) RetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyPtrOutput)
}

// The retention policy for a container registry.
type RetentionPolicyOutput struct{ *pulumi.OutputState }

func (RetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicy)(nil)).Elem()
}

func (o RetentionPolicyOutput) ToRetentionPolicyOutput() RetentionPolicyOutput {
	return o
}

func (o RetentionPolicyOutput) ToRetentionPolicyOutputWithContext(ctx context.Context) RetentionPolicyOutput {
	return o
}

func (o RetentionPolicyOutput) ToRetentionPolicyPtrOutput() RetentionPolicyPtrOutput {
	return o.ToRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o RetentionPolicyOutput) ToRetentionPolicyPtrOutputWithContext(ctx context.Context) RetentionPolicyPtrOutput {
	return o.ApplyT(func(v RetentionPolicy) *RetentionPolicy {
		return &v
	}).(RetentionPolicyPtrOutput)
}

// The number of days to retain an untagged manifest after which it gets purged.
func (o RetentionPolicyOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionPolicy) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o RetentionPolicyOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RetentionPolicy) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (RetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicy)(nil)).Elem()
}

func (o RetentionPolicyPtrOutput) ToRetentionPolicyPtrOutput() RetentionPolicyPtrOutput {
	return o
}

func (o RetentionPolicyPtrOutput) ToRetentionPolicyPtrOutputWithContext(ctx context.Context) RetentionPolicyPtrOutput {
	return o
}

func (o RetentionPolicyPtrOutput) Elem() RetentionPolicyOutput {
	return o.ApplyT(func(v *RetentionPolicy) RetentionPolicy { return *v }).(RetentionPolicyOutput)
}

// The number of days to retain an untagged manifest after which it gets purged.
func (o RetentionPolicyPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o RetentionPolicyPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RetentionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The retention policy for a container registry.
type RetentionPolicyResponse struct {
	// The number of days to retain an untagged manifest after which it gets purged.
	Days *int `pulumi:"days"`
	// The timestamp when the policy was last updated.
	LastUpdatedTime string `pulumi:"lastUpdatedTime"`
	// The value that indicates whether the policy is enabled or not.
	Status *string `pulumi:"status"`
}

// RetentionPolicyResponseInput is an input type that accepts RetentionPolicyResponseArgs and RetentionPolicyResponseOutput values.
// You can construct a concrete instance of `RetentionPolicyResponseInput` via:
//
//          RetentionPolicyResponseArgs{...}
type RetentionPolicyResponseInput interface {
	pulumi.Input

	ToRetentionPolicyResponseOutput() RetentionPolicyResponseOutput
	ToRetentionPolicyResponseOutputWithContext(context.Context) RetentionPolicyResponseOutput
}

// The retention policy for a container registry.
type RetentionPolicyResponseArgs struct {
	// The number of days to retain an untagged manifest after which it gets purged.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// The timestamp when the policy was last updated.
	LastUpdatedTime pulumi.StringInput `pulumi:"lastUpdatedTime"`
	// The value that indicates whether the policy is enabled or not.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (RetentionPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicyResponse)(nil)).Elem()
}

func (i RetentionPolicyResponseArgs) ToRetentionPolicyResponseOutput() RetentionPolicyResponseOutput {
	return i.ToRetentionPolicyResponseOutputWithContext(context.Background())
}

func (i RetentionPolicyResponseArgs) ToRetentionPolicyResponseOutputWithContext(ctx context.Context) RetentionPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyResponseOutput)
}

func (i RetentionPolicyResponseArgs) ToRetentionPolicyResponsePtrOutput() RetentionPolicyResponsePtrOutput {
	return i.ToRetentionPolicyResponsePtrOutputWithContext(context.Background())
}

func (i RetentionPolicyResponseArgs) ToRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) RetentionPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyResponseOutput).ToRetentionPolicyResponsePtrOutputWithContext(ctx)
}

// RetentionPolicyResponsePtrInput is an input type that accepts RetentionPolicyResponseArgs, RetentionPolicyResponsePtr and RetentionPolicyResponsePtrOutput values.
// You can construct a concrete instance of `RetentionPolicyResponsePtrInput` via:
//
//          RetentionPolicyResponseArgs{...}
//
//  or:
//
//          nil
type RetentionPolicyResponsePtrInput interface {
	pulumi.Input

	ToRetentionPolicyResponsePtrOutput() RetentionPolicyResponsePtrOutput
	ToRetentionPolicyResponsePtrOutputWithContext(context.Context) RetentionPolicyResponsePtrOutput
}

type retentionPolicyResponsePtrType RetentionPolicyResponseArgs

func RetentionPolicyResponsePtr(v *RetentionPolicyResponseArgs) RetentionPolicyResponsePtrInput {
	return (*retentionPolicyResponsePtrType)(v)
}

func (*retentionPolicyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicyResponse)(nil)).Elem()
}

func (i *retentionPolicyResponsePtrType) ToRetentionPolicyResponsePtrOutput() RetentionPolicyResponsePtrOutput {
	return i.ToRetentionPolicyResponsePtrOutputWithContext(context.Background())
}

func (i *retentionPolicyResponsePtrType) ToRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) RetentionPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyResponsePtrOutput)
}

// The retention policy for a container registry.
type RetentionPolicyResponseOutput struct{ *pulumi.OutputState }

func (RetentionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicyResponse)(nil)).Elem()
}

func (o RetentionPolicyResponseOutput) ToRetentionPolicyResponseOutput() RetentionPolicyResponseOutput {
	return o
}

func (o RetentionPolicyResponseOutput) ToRetentionPolicyResponseOutputWithContext(ctx context.Context) RetentionPolicyResponseOutput {
	return o
}

func (o RetentionPolicyResponseOutput) ToRetentionPolicyResponsePtrOutput() RetentionPolicyResponsePtrOutput {
	return o.ToRetentionPolicyResponsePtrOutputWithContext(context.Background())
}

func (o RetentionPolicyResponseOutput) ToRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) RetentionPolicyResponsePtrOutput {
	return o.ApplyT(func(v RetentionPolicyResponse) *RetentionPolicyResponse {
		return &v
	}).(RetentionPolicyResponsePtrOutput)
}

// The number of days to retain an untagged manifest after which it gets purged.
func (o RetentionPolicyResponseOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionPolicyResponse) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// The timestamp when the policy was last updated.
func (o RetentionPolicyResponseOutput) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v RetentionPolicyResponse) string { return v.LastUpdatedTime }).(pulumi.StringOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o RetentionPolicyResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RetentionPolicyResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type RetentionPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (RetentionPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicyResponse)(nil)).Elem()
}

func (o RetentionPolicyResponsePtrOutput) ToRetentionPolicyResponsePtrOutput() RetentionPolicyResponsePtrOutput {
	return o
}

func (o RetentionPolicyResponsePtrOutput) ToRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) RetentionPolicyResponsePtrOutput {
	return o
}

func (o RetentionPolicyResponsePtrOutput) Elem() RetentionPolicyResponseOutput {
	return o.ApplyT(func(v *RetentionPolicyResponse) RetentionPolicyResponse { return *v }).(RetentionPolicyResponseOutput)
}

// The number of days to retain an untagged manifest after which it gets purged.
func (o RetentionPolicyResponsePtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// The timestamp when the policy was last updated.
func (o RetentionPolicyResponsePtrOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastUpdatedTime
	}).(pulumi.StringPtrOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o RetentionPolicyResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The SKU of a container registry.
type Sku struct {
	// The SKU name of the container registry. Required for registry creation.
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The SKU of a container registry.
type SkuArgs struct {
	// The SKU name of the container registry. Required for registry creation.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The SKU of a container registry.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The SKU name of the container registry. Required for registry creation.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// The SKU name of the container registry. Required for registry creation.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU of a container registry.
type SkuResponse struct {
	// The SKU name of the container registry. Required for registry creation.
	Name string `pulumi:"name"`
	// The SKU tier based on the SKU name.
	Tier string `pulumi:"tier"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// The SKU of a container registry.
type SkuResponseArgs struct {
	// The SKU name of the container registry. Required for registry creation.
	Name pulumi.StringInput `pulumi:"name"`
	// The SKU tier based on the SKU name.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// The SKU of a container registry.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// The SKU name of the container registry. Required for registry creation.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU tier based on the SKU name.
func (o SkuResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Tier }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// The SKU name of the container registry. Required for registry creation.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU tier based on the SKU name.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// The properties of the source code repository.
type SourceProperties struct {
	// The branch name of the source code.
	Branch *string `pulumi:"branch"`
	// The full URL to the source code repository
	RepositoryUrl string `pulumi:"repositoryUrl"`
	// The authorization properties for accessing the source code repository and to set up
	// webhooks for notifications.
	SourceControlAuthProperties *AuthInfo `pulumi:"sourceControlAuthProperties"`
	// The type of source control service.
	SourceControlType string `pulumi:"sourceControlType"`
}

// SourcePropertiesInput is an input type that accepts SourcePropertiesArgs and SourcePropertiesOutput values.
// You can construct a concrete instance of `SourcePropertiesInput` via:
//
//          SourcePropertiesArgs{...}
type SourcePropertiesInput interface {
	pulumi.Input

	ToSourcePropertiesOutput() SourcePropertiesOutput
	ToSourcePropertiesOutputWithContext(context.Context) SourcePropertiesOutput
}

// The properties of the source code repository.
type SourcePropertiesArgs struct {
	// The branch name of the source code.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The full URL to the source code repository
	RepositoryUrl pulumi.StringInput `pulumi:"repositoryUrl"`
	// The authorization properties for accessing the source code repository and to set up
	// webhooks for notifications.
	SourceControlAuthProperties AuthInfoPtrInput `pulumi:"sourceControlAuthProperties"`
	// The type of source control service.
	SourceControlType pulumi.StringInput `pulumi:"sourceControlType"`
}

func (SourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceProperties)(nil)).Elem()
}

func (i SourcePropertiesArgs) ToSourcePropertiesOutput() SourcePropertiesOutput {
	return i.ToSourcePropertiesOutputWithContext(context.Background())
}

func (i SourcePropertiesArgs) ToSourcePropertiesOutputWithContext(ctx context.Context) SourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourcePropertiesOutput)
}

// The properties of the source code repository.
type SourcePropertiesOutput struct{ *pulumi.OutputState }

func (SourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceProperties)(nil)).Elem()
}

func (o SourcePropertiesOutput) ToSourcePropertiesOutput() SourcePropertiesOutput {
	return o
}

func (o SourcePropertiesOutput) ToSourcePropertiesOutputWithContext(ctx context.Context) SourcePropertiesOutput {
	return o
}

// The branch name of the source code.
func (o SourcePropertiesOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceProperties) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The full URL to the source code repository
func (o SourcePropertiesOutput) RepositoryUrl() pulumi.StringOutput {
	return o.ApplyT(func(v SourceProperties) string { return v.RepositoryUrl }).(pulumi.StringOutput)
}

// The authorization properties for accessing the source code repository and to set up
// webhooks for notifications.
func (o SourcePropertiesOutput) SourceControlAuthProperties() AuthInfoPtrOutput {
	return o.ApplyT(func(v SourceProperties) *AuthInfo { return v.SourceControlAuthProperties }).(AuthInfoPtrOutput)
}

// The type of source control service.
func (o SourcePropertiesOutput) SourceControlType() pulumi.StringOutput {
	return o.ApplyT(func(v SourceProperties) string { return v.SourceControlType }).(pulumi.StringOutput)
}

// The properties of the source code repository.
type SourcePropertiesResponse struct {
	// The branch name of the source code.
	Branch *string `pulumi:"branch"`
	// The full URL to the source code repository
	RepositoryUrl string `pulumi:"repositoryUrl"`
	// The authorization properties for accessing the source code repository and to set up
	// webhooks for notifications.
	SourceControlAuthProperties *AuthInfoResponse `pulumi:"sourceControlAuthProperties"`
	// The type of source control service.
	SourceControlType string `pulumi:"sourceControlType"`
}

// SourcePropertiesResponseInput is an input type that accepts SourcePropertiesResponseArgs and SourcePropertiesResponseOutput values.
// You can construct a concrete instance of `SourcePropertiesResponseInput` via:
//
//          SourcePropertiesResponseArgs{...}
type SourcePropertiesResponseInput interface {
	pulumi.Input

	ToSourcePropertiesResponseOutput() SourcePropertiesResponseOutput
	ToSourcePropertiesResponseOutputWithContext(context.Context) SourcePropertiesResponseOutput
}

// The properties of the source code repository.
type SourcePropertiesResponseArgs struct {
	// The branch name of the source code.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The full URL to the source code repository
	RepositoryUrl pulumi.StringInput `pulumi:"repositoryUrl"`
	// The authorization properties for accessing the source code repository and to set up
	// webhooks for notifications.
	SourceControlAuthProperties AuthInfoResponsePtrInput `pulumi:"sourceControlAuthProperties"`
	// The type of source control service.
	SourceControlType pulumi.StringInput `pulumi:"sourceControlType"`
}

func (SourcePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourcePropertiesResponse)(nil)).Elem()
}

func (i SourcePropertiesResponseArgs) ToSourcePropertiesResponseOutput() SourcePropertiesResponseOutput {
	return i.ToSourcePropertiesResponseOutputWithContext(context.Background())
}

func (i SourcePropertiesResponseArgs) ToSourcePropertiesResponseOutputWithContext(ctx context.Context) SourcePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourcePropertiesResponseOutput)
}

// The properties of the source code repository.
type SourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourcePropertiesResponse)(nil)).Elem()
}

func (o SourcePropertiesResponseOutput) ToSourcePropertiesResponseOutput() SourcePropertiesResponseOutput {
	return o
}

func (o SourcePropertiesResponseOutput) ToSourcePropertiesResponseOutputWithContext(ctx context.Context) SourcePropertiesResponseOutput {
	return o
}

// The branch name of the source code.
func (o SourcePropertiesResponseOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourcePropertiesResponse) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The full URL to the source code repository
func (o SourcePropertiesResponseOutput) RepositoryUrl() pulumi.StringOutput {
	return o.ApplyT(func(v SourcePropertiesResponse) string { return v.RepositoryUrl }).(pulumi.StringOutput)
}

// The authorization properties for accessing the source code repository and to set up
// webhooks for notifications.
func (o SourcePropertiesResponseOutput) SourceControlAuthProperties() AuthInfoResponsePtrOutput {
	return o.ApplyT(func(v SourcePropertiesResponse) *AuthInfoResponse { return v.SourceControlAuthProperties }).(AuthInfoResponsePtrOutput)
}

// The type of source control service.
func (o SourcePropertiesResponseOutput) SourceControlType() pulumi.StringOutput {
	return o.ApplyT(func(v SourcePropertiesResponse) string { return v.SourceControlType }).(pulumi.StringOutput)
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentials struct {
	// The authentication mode which determines the source registry login scope. The credentials for the source registry
	// will be generated using the given scope. These credentials will be used to login to
	// the source registry during the run.
	LoginMode *string `pulumi:"loginMode"`
}

// SourceRegistryCredentialsInput is an input type that accepts SourceRegistryCredentialsArgs and SourceRegistryCredentialsOutput values.
// You can construct a concrete instance of `SourceRegistryCredentialsInput` via:
//
//          SourceRegistryCredentialsArgs{...}
type SourceRegistryCredentialsInput interface {
	pulumi.Input

	ToSourceRegistryCredentialsOutput() SourceRegistryCredentialsOutput
	ToSourceRegistryCredentialsOutputWithContext(context.Context) SourceRegistryCredentialsOutput
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentialsArgs struct {
	// The authentication mode which determines the source registry login scope. The credentials for the source registry
	// will be generated using the given scope. These credentials will be used to login to
	// the source registry during the run.
	LoginMode pulumi.StringPtrInput `pulumi:"loginMode"`
}

func (SourceRegistryCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceRegistryCredentials)(nil)).Elem()
}

func (i SourceRegistryCredentialsArgs) ToSourceRegistryCredentialsOutput() SourceRegistryCredentialsOutput {
	return i.ToSourceRegistryCredentialsOutputWithContext(context.Background())
}

func (i SourceRegistryCredentialsArgs) ToSourceRegistryCredentialsOutputWithContext(ctx context.Context) SourceRegistryCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsOutput)
}

func (i SourceRegistryCredentialsArgs) ToSourceRegistryCredentialsPtrOutput() SourceRegistryCredentialsPtrOutput {
	return i.ToSourceRegistryCredentialsPtrOutputWithContext(context.Background())
}

func (i SourceRegistryCredentialsArgs) ToSourceRegistryCredentialsPtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsOutput).ToSourceRegistryCredentialsPtrOutputWithContext(ctx)
}

// SourceRegistryCredentialsPtrInput is an input type that accepts SourceRegistryCredentialsArgs, SourceRegistryCredentialsPtr and SourceRegistryCredentialsPtrOutput values.
// You can construct a concrete instance of `SourceRegistryCredentialsPtrInput` via:
//
//          SourceRegistryCredentialsArgs{...}
//
//  or:
//
//          nil
type SourceRegistryCredentialsPtrInput interface {
	pulumi.Input

	ToSourceRegistryCredentialsPtrOutput() SourceRegistryCredentialsPtrOutput
	ToSourceRegistryCredentialsPtrOutputWithContext(context.Context) SourceRegistryCredentialsPtrOutput
}

type sourceRegistryCredentialsPtrType SourceRegistryCredentialsArgs

func SourceRegistryCredentialsPtr(v *SourceRegistryCredentialsArgs) SourceRegistryCredentialsPtrInput {
	return (*sourceRegistryCredentialsPtrType)(v)
}

func (*sourceRegistryCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceRegistryCredentials)(nil)).Elem()
}

func (i *sourceRegistryCredentialsPtrType) ToSourceRegistryCredentialsPtrOutput() SourceRegistryCredentialsPtrOutput {
	return i.ToSourceRegistryCredentialsPtrOutputWithContext(context.Background())
}

func (i *sourceRegistryCredentialsPtrType) ToSourceRegistryCredentialsPtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsPtrOutput)
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentialsOutput struct{ *pulumi.OutputState }

func (SourceRegistryCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceRegistryCredentials)(nil)).Elem()
}

func (o SourceRegistryCredentialsOutput) ToSourceRegistryCredentialsOutput() SourceRegistryCredentialsOutput {
	return o
}

func (o SourceRegistryCredentialsOutput) ToSourceRegistryCredentialsOutputWithContext(ctx context.Context) SourceRegistryCredentialsOutput {
	return o
}

func (o SourceRegistryCredentialsOutput) ToSourceRegistryCredentialsPtrOutput() SourceRegistryCredentialsPtrOutput {
	return o.ToSourceRegistryCredentialsPtrOutputWithContext(context.Background())
}

func (o SourceRegistryCredentialsOutput) ToSourceRegistryCredentialsPtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsPtrOutput {
	return o.ApplyT(func(v SourceRegistryCredentials) *SourceRegistryCredentials {
		return &v
	}).(SourceRegistryCredentialsPtrOutput)
}

// The authentication mode which determines the source registry login scope. The credentials for the source registry
// will be generated using the given scope. These credentials will be used to login to
// the source registry during the run.
func (o SourceRegistryCredentialsOutput) LoginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceRegistryCredentials) *string { return v.LoginMode }).(pulumi.StringPtrOutput)
}

type SourceRegistryCredentialsPtrOutput struct{ *pulumi.OutputState }

func (SourceRegistryCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceRegistryCredentials)(nil)).Elem()
}

func (o SourceRegistryCredentialsPtrOutput) ToSourceRegistryCredentialsPtrOutput() SourceRegistryCredentialsPtrOutput {
	return o
}

func (o SourceRegistryCredentialsPtrOutput) ToSourceRegistryCredentialsPtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsPtrOutput {
	return o
}

func (o SourceRegistryCredentialsPtrOutput) Elem() SourceRegistryCredentialsOutput {
	return o.ApplyT(func(v *SourceRegistryCredentials) SourceRegistryCredentials { return *v }).(SourceRegistryCredentialsOutput)
}

// The authentication mode which determines the source registry login scope. The credentials for the source registry
// will be generated using the given scope. These credentials will be used to login to
// the source registry during the run.
func (o SourceRegistryCredentialsPtrOutput) LoginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceRegistryCredentials) *string {
		if v == nil {
			return nil
		}
		return v.LoginMode
	}).(pulumi.StringPtrOutput)
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentialsResponse struct {
	// The authentication mode which determines the source registry login scope. The credentials for the source registry
	// will be generated using the given scope. These credentials will be used to login to
	// the source registry during the run.
	LoginMode *string `pulumi:"loginMode"`
}

// SourceRegistryCredentialsResponseInput is an input type that accepts SourceRegistryCredentialsResponseArgs and SourceRegistryCredentialsResponseOutput values.
// You can construct a concrete instance of `SourceRegistryCredentialsResponseInput` via:
//
//          SourceRegistryCredentialsResponseArgs{...}
type SourceRegistryCredentialsResponseInput interface {
	pulumi.Input

	ToSourceRegistryCredentialsResponseOutput() SourceRegistryCredentialsResponseOutput
	ToSourceRegistryCredentialsResponseOutputWithContext(context.Context) SourceRegistryCredentialsResponseOutput
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentialsResponseArgs struct {
	// The authentication mode which determines the source registry login scope. The credentials for the source registry
	// will be generated using the given scope. These credentials will be used to login to
	// the source registry during the run.
	LoginMode pulumi.StringPtrInput `pulumi:"loginMode"`
}

func (SourceRegistryCredentialsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceRegistryCredentialsResponse)(nil)).Elem()
}

func (i SourceRegistryCredentialsResponseArgs) ToSourceRegistryCredentialsResponseOutput() SourceRegistryCredentialsResponseOutput {
	return i.ToSourceRegistryCredentialsResponseOutputWithContext(context.Background())
}

func (i SourceRegistryCredentialsResponseArgs) ToSourceRegistryCredentialsResponseOutputWithContext(ctx context.Context) SourceRegistryCredentialsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsResponseOutput)
}

func (i SourceRegistryCredentialsResponseArgs) ToSourceRegistryCredentialsResponsePtrOutput() SourceRegistryCredentialsResponsePtrOutput {
	return i.ToSourceRegistryCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i SourceRegistryCredentialsResponseArgs) ToSourceRegistryCredentialsResponsePtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsResponseOutput).ToSourceRegistryCredentialsResponsePtrOutputWithContext(ctx)
}

// SourceRegistryCredentialsResponsePtrInput is an input type that accepts SourceRegistryCredentialsResponseArgs, SourceRegistryCredentialsResponsePtr and SourceRegistryCredentialsResponsePtrOutput values.
// You can construct a concrete instance of `SourceRegistryCredentialsResponsePtrInput` via:
//
//          SourceRegistryCredentialsResponseArgs{...}
//
//  or:
//
//          nil
type SourceRegistryCredentialsResponsePtrInput interface {
	pulumi.Input

	ToSourceRegistryCredentialsResponsePtrOutput() SourceRegistryCredentialsResponsePtrOutput
	ToSourceRegistryCredentialsResponsePtrOutputWithContext(context.Context) SourceRegistryCredentialsResponsePtrOutput
}

type sourceRegistryCredentialsResponsePtrType SourceRegistryCredentialsResponseArgs

func SourceRegistryCredentialsResponsePtr(v *SourceRegistryCredentialsResponseArgs) SourceRegistryCredentialsResponsePtrInput {
	return (*sourceRegistryCredentialsResponsePtrType)(v)
}

func (*sourceRegistryCredentialsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceRegistryCredentialsResponse)(nil)).Elem()
}

func (i *sourceRegistryCredentialsResponsePtrType) ToSourceRegistryCredentialsResponsePtrOutput() SourceRegistryCredentialsResponsePtrOutput {
	return i.ToSourceRegistryCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i *sourceRegistryCredentialsResponsePtrType) ToSourceRegistryCredentialsResponsePtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRegistryCredentialsResponsePtrOutput)
}

// Describes the credential parameters for accessing the source registry.
type SourceRegistryCredentialsResponseOutput struct{ *pulumi.OutputState }

func (SourceRegistryCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceRegistryCredentialsResponse)(nil)).Elem()
}

func (o SourceRegistryCredentialsResponseOutput) ToSourceRegistryCredentialsResponseOutput() SourceRegistryCredentialsResponseOutput {
	return o
}

func (o SourceRegistryCredentialsResponseOutput) ToSourceRegistryCredentialsResponseOutputWithContext(ctx context.Context) SourceRegistryCredentialsResponseOutput {
	return o
}

func (o SourceRegistryCredentialsResponseOutput) ToSourceRegistryCredentialsResponsePtrOutput() SourceRegistryCredentialsResponsePtrOutput {
	return o.ToSourceRegistryCredentialsResponsePtrOutputWithContext(context.Background())
}

func (o SourceRegistryCredentialsResponseOutput) ToSourceRegistryCredentialsResponsePtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsResponsePtrOutput {
	return o.ApplyT(func(v SourceRegistryCredentialsResponse) *SourceRegistryCredentialsResponse {
		return &v
	}).(SourceRegistryCredentialsResponsePtrOutput)
}

// The authentication mode which determines the source registry login scope. The credentials for the source registry
// will be generated using the given scope. These credentials will be used to login to
// the source registry during the run.
func (o SourceRegistryCredentialsResponseOutput) LoginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceRegistryCredentialsResponse) *string { return v.LoginMode }).(pulumi.StringPtrOutput)
}

type SourceRegistryCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (SourceRegistryCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceRegistryCredentialsResponse)(nil)).Elem()
}

func (o SourceRegistryCredentialsResponsePtrOutput) ToSourceRegistryCredentialsResponsePtrOutput() SourceRegistryCredentialsResponsePtrOutput {
	return o
}

func (o SourceRegistryCredentialsResponsePtrOutput) ToSourceRegistryCredentialsResponsePtrOutputWithContext(ctx context.Context) SourceRegistryCredentialsResponsePtrOutput {
	return o
}

func (o SourceRegistryCredentialsResponsePtrOutput) Elem() SourceRegistryCredentialsResponseOutput {
	return o.ApplyT(func(v *SourceRegistryCredentialsResponse) SourceRegistryCredentialsResponse { return *v }).(SourceRegistryCredentialsResponseOutput)
}

// The authentication mode which determines the source registry login scope. The credentials for the source registry
// will be generated using the given scope. These credentials will be used to login to
// the source registry during the run.
func (o SourceRegistryCredentialsResponsePtrOutput) LoginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceRegistryCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LoginMode
	}).(pulumi.StringPtrOutput)
}

// The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it.
type SourceResponse struct {
	// The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname() along with the running port.
	Addr *string `pulumi:"addr"`
	// The running instance of an application. Changes after each restart.
	InstanceID *string `pulumi:"instanceID"`
}

// SourceResponseInput is an input type that accepts SourceResponseArgs and SourceResponseOutput values.
// You can construct a concrete instance of `SourceResponseInput` via:
//
//          SourceResponseArgs{...}
type SourceResponseInput interface {
	pulumi.Input

	ToSourceResponseOutput() SourceResponseOutput
	ToSourceResponseOutputWithContext(context.Context) SourceResponseOutput
}

// The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it.
type SourceResponseArgs struct {
	// The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname() along with the running port.
	Addr pulumi.StringPtrInput `pulumi:"addr"`
	// The running instance of an application. Changes after each restart.
	InstanceID pulumi.StringPtrInput `pulumi:"instanceID"`
}

func (SourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceResponse)(nil)).Elem()
}

func (i SourceResponseArgs) ToSourceResponseOutput() SourceResponseOutput {
	return i.ToSourceResponseOutputWithContext(context.Background())
}

func (i SourceResponseArgs) ToSourceResponseOutputWithContext(ctx context.Context) SourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceResponseOutput)
}

func (i SourceResponseArgs) ToSourceResponsePtrOutput() SourceResponsePtrOutput {
	return i.ToSourceResponsePtrOutputWithContext(context.Background())
}

func (i SourceResponseArgs) ToSourceResponsePtrOutputWithContext(ctx context.Context) SourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceResponseOutput).ToSourceResponsePtrOutputWithContext(ctx)
}

// SourceResponsePtrInput is an input type that accepts SourceResponseArgs, SourceResponsePtr and SourceResponsePtrOutput values.
// You can construct a concrete instance of `SourceResponsePtrInput` via:
//
//          SourceResponseArgs{...}
//
//  or:
//
//          nil
type SourceResponsePtrInput interface {
	pulumi.Input

	ToSourceResponsePtrOutput() SourceResponsePtrOutput
	ToSourceResponsePtrOutputWithContext(context.Context) SourceResponsePtrOutput
}

type sourceResponsePtrType SourceResponseArgs

func SourceResponsePtr(v *SourceResponseArgs) SourceResponsePtrInput {
	return (*sourceResponsePtrType)(v)
}

func (*sourceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceResponse)(nil)).Elem()
}

func (i *sourceResponsePtrType) ToSourceResponsePtrOutput() SourceResponsePtrOutput {
	return i.ToSourceResponsePtrOutputWithContext(context.Background())
}

func (i *sourceResponsePtrType) ToSourceResponsePtrOutputWithContext(ctx context.Context) SourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceResponsePtrOutput)
}

// The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it.
type SourceResponseOutput struct{ *pulumi.OutputState }

func (SourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceResponse)(nil)).Elem()
}

func (o SourceResponseOutput) ToSourceResponseOutput() SourceResponseOutput {
	return o
}

func (o SourceResponseOutput) ToSourceResponseOutputWithContext(ctx context.Context) SourceResponseOutput {
	return o
}

func (o SourceResponseOutput) ToSourceResponsePtrOutput() SourceResponsePtrOutput {
	return o.ToSourceResponsePtrOutputWithContext(context.Background())
}

func (o SourceResponseOutput) ToSourceResponsePtrOutputWithContext(ctx context.Context) SourceResponsePtrOutput {
	return o.ApplyT(func(v SourceResponse) *SourceResponse {
		return &v
	}).(SourceResponsePtrOutput)
}

// The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname() along with the running port.
func (o SourceResponseOutput) Addr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceResponse) *string { return v.Addr }).(pulumi.StringPtrOutput)
}

// The running instance of an application. Changes after each restart.
func (o SourceResponseOutput) InstanceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceResponse) *string { return v.InstanceID }).(pulumi.StringPtrOutput)
}

type SourceResponsePtrOutput struct{ *pulumi.OutputState }

func (SourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceResponse)(nil)).Elem()
}

func (o SourceResponsePtrOutput) ToSourceResponsePtrOutput() SourceResponsePtrOutput {
	return o
}

func (o SourceResponsePtrOutput) ToSourceResponsePtrOutputWithContext(ctx context.Context) SourceResponsePtrOutput {
	return o
}

func (o SourceResponsePtrOutput) Elem() SourceResponseOutput {
	return o.ApplyT(func(v *SourceResponse) SourceResponse { return *v }).(SourceResponseOutput)
}

// The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname() along with the running port.
func (o SourceResponsePtrOutput) Addr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Addr
	}).(pulumi.StringPtrOutput)
}

// The running instance of an application. Changes after each restart.
func (o SourceResponsePtrOutput) InstanceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.InstanceID
	}).(pulumi.StringPtrOutput)
}

// The properties of a source based trigger.
type SourceTrigger struct {
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The properties that describes the source(code) for the task.
	SourceRepository SourceProperties `pulumi:"sourceRepository"`
	// The source event corresponding to the trigger.
	SourceTriggerEvents []string `pulumi:"sourceTriggerEvents"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
}

// SourceTriggerInput is an input type that accepts SourceTriggerArgs and SourceTriggerOutput values.
// You can construct a concrete instance of `SourceTriggerInput` via:
//
//          SourceTriggerArgs{...}
type SourceTriggerInput interface {
	pulumi.Input

	ToSourceTriggerOutput() SourceTriggerOutput
	ToSourceTriggerOutputWithContext(context.Context) SourceTriggerOutput
}

// The properties of a source based trigger.
type SourceTriggerArgs struct {
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties that describes the source(code) for the task.
	SourceRepository SourcePropertiesInput `pulumi:"sourceRepository"`
	// The source event corresponding to the trigger.
	SourceTriggerEvents pulumi.StringArrayInput `pulumi:"sourceTriggerEvents"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SourceTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTrigger)(nil)).Elem()
}

func (i SourceTriggerArgs) ToSourceTriggerOutput() SourceTriggerOutput {
	return i.ToSourceTriggerOutputWithContext(context.Background())
}

func (i SourceTriggerArgs) ToSourceTriggerOutputWithContext(ctx context.Context) SourceTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTriggerOutput)
}

// SourceTriggerArrayInput is an input type that accepts SourceTriggerArray and SourceTriggerArrayOutput values.
// You can construct a concrete instance of `SourceTriggerArrayInput` via:
//
//          SourceTriggerArray{ SourceTriggerArgs{...} }
type SourceTriggerArrayInput interface {
	pulumi.Input

	ToSourceTriggerArrayOutput() SourceTriggerArrayOutput
	ToSourceTriggerArrayOutputWithContext(context.Context) SourceTriggerArrayOutput
}

type SourceTriggerArray []SourceTriggerInput

func (SourceTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceTrigger)(nil)).Elem()
}

func (i SourceTriggerArray) ToSourceTriggerArrayOutput() SourceTriggerArrayOutput {
	return i.ToSourceTriggerArrayOutputWithContext(context.Background())
}

func (i SourceTriggerArray) ToSourceTriggerArrayOutputWithContext(ctx context.Context) SourceTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTriggerArrayOutput)
}

// The properties of a source based trigger.
type SourceTriggerOutput struct{ *pulumi.OutputState }

func (SourceTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTrigger)(nil)).Elem()
}

func (o SourceTriggerOutput) ToSourceTriggerOutput() SourceTriggerOutput {
	return o
}

func (o SourceTriggerOutput) ToSourceTriggerOutputWithContext(ctx context.Context) SourceTriggerOutput {
	return o
}

// The name of the trigger.
func (o SourceTriggerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SourceTrigger) string { return v.Name }).(pulumi.StringOutput)
}

// The properties that describes the source(code) for the task.
func (o SourceTriggerOutput) SourceRepository() SourcePropertiesOutput {
	return o.ApplyT(func(v SourceTrigger) SourceProperties { return v.SourceRepository }).(SourcePropertiesOutput)
}

// The source event corresponding to the trigger.
func (o SourceTriggerOutput) SourceTriggerEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SourceTrigger) []string { return v.SourceTriggerEvents }).(pulumi.StringArrayOutput)
}

// The current status of trigger.
func (o SourceTriggerOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTrigger) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SourceTriggerArrayOutput struct{ *pulumi.OutputState }

func (SourceTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceTrigger)(nil)).Elem()
}

func (o SourceTriggerArrayOutput) ToSourceTriggerArrayOutput() SourceTriggerArrayOutput {
	return o
}

func (o SourceTriggerArrayOutput) ToSourceTriggerArrayOutputWithContext(ctx context.Context) SourceTriggerArrayOutput {
	return o
}

func (o SourceTriggerArrayOutput) Index(i pulumi.IntInput) SourceTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SourceTrigger {
		return vs[0].([]SourceTrigger)[vs[1].(int)]
	}).(SourceTriggerOutput)
}

// The properties of a source based trigger.
type SourceTriggerResponse struct {
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The properties that describes the source(code) for the task.
	SourceRepository SourcePropertiesResponse `pulumi:"sourceRepository"`
	// The source event corresponding to the trigger.
	SourceTriggerEvents []string `pulumi:"sourceTriggerEvents"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
}

// SourceTriggerResponseInput is an input type that accepts SourceTriggerResponseArgs and SourceTriggerResponseOutput values.
// You can construct a concrete instance of `SourceTriggerResponseInput` via:
//
//          SourceTriggerResponseArgs{...}
type SourceTriggerResponseInput interface {
	pulumi.Input

	ToSourceTriggerResponseOutput() SourceTriggerResponseOutput
	ToSourceTriggerResponseOutputWithContext(context.Context) SourceTriggerResponseOutput
}

// The properties of a source based trigger.
type SourceTriggerResponseArgs struct {
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties that describes the source(code) for the task.
	SourceRepository SourcePropertiesResponseInput `pulumi:"sourceRepository"`
	// The source event corresponding to the trigger.
	SourceTriggerEvents pulumi.StringArrayInput `pulumi:"sourceTriggerEvents"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SourceTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTriggerResponse)(nil)).Elem()
}

func (i SourceTriggerResponseArgs) ToSourceTriggerResponseOutput() SourceTriggerResponseOutput {
	return i.ToSourceTriggerResponseOutputWithContext(context.Background())
}

func (i SourceTriggerResponseArgs) ToSourceTriggerResponseOutputWithContext(ctx context.Context) SourceTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTriggerResponseOutput)
}

// SourceTriggerResponseArrayInput is an input type that accepts SourceTriggerResponseArray and SourceTriggerResponseArrayOutput values.
// You can construct a concrete instance of `SourceTriggerResponseArrayInput` via:
//
//          SourceTriggerResponseArray{ SourceTriggerResponseArgs{...} }
type SourceTriggerResponseArrayInput interface {
	pulumi.Input

	ToSourceTriggerResponseArrayOutput() SourceTriggerResponseArrayOutput
	ToSourceTriggerResponseArrayOutputWithContext(context.Context) SourceTriggerResponseArrayOutput
}

type SourceTriggerResponseArray []SourceTriggerResponseInput

func (SourceTriggerResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceTriggerResponse)(nil)).Elem()
}

func (i SourceTriggerResponseArray) ToSourceTriggerResponseArrayOutput() SourceTriggerResponseArrayOutput {
	return i.ToSourceTriggerResponseArrayOutputWithContext(context.Background())
}

func (i SourceTriggerResponseArray) ToSourceTriggerResponseArrayOutputWithContext(ctx context.Context) SourceTriggerResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTriggerResponseArrayOutput)
}

// The properties of a source based trigger.
type SourceTriggerResponseOutput struct{ *pulumi.OutputState }

func (SourceTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceTriggerResponse)(nil)).Elem()
}

func (o SourceTriggerResponseOutput) ToSourceTriggerResponseOutput() SourceTriggerResponseOutput {
	return o
}

func (o SourceTriggerResponseOutput) ToSourceTriggerResponseOutputWithContext(ctx context.Context) SourceTriggerResponseOutput {
	return o
}

// The name of the trigger.
func (o SourceTriggerResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SourceTriggerResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The properties that describes the source(code) for the task.
func (o SourceTriggerResponseOutput) SourceRepository() SourcePropertiesResponseOutput {
	return o.ApplyT(func(v SourceTriggerResponse) SourcePropertiesResponse { return v.SourceRepository }).(SourcePropertiesResponseOutput)
}

// The source event corresponding to the trigger.
func (o SourceTriggerResponseOutput) SourceTriggerEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SourceTriggerResponse) []string { return v.SourceTriggerEvents }).(pulumi.StringArrayOutput)
}

// The current status of trigger.
func (o SourceTriggerResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceTriggerResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SourceTriggerResponseArrayOutput struct{ *pulumi.OutputState }

func (SourceTriggerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceTriggerResponse)(nil)).Elem()
}

func (o SourceTriggerResponseArrayOutput) ToSourceTriggerResponseArrayOutput() SourceTriggerResponseArrayOutput {
	return o
}

func (o SourceTriggerResponseArrayOutput) ToSourceTriggerResponseArrayOutputWithContext(ctx context.Context) SourceTriggerResponseArrayOutput {
	return o
}

func (o SourceTriggerResponseArrayOutput) Index(i pulumi.IntInput) SourceTriggerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SourceTriggerResponse {
		return vs[0].([]SourceTriggerResponse)[vs[1].(int)]
	}).(SourceTriggerResponseOutput)
}

// The status of an Azure resource at the time the operation was called.
type Status struct {
}

// StatusInput is an input type that accepts StatusArgs and StatusOutput values.
// You can construct a concrete instance of `StatusInput` via:
//
//          StatusArgs{...}
type StatusInput interface {
	pulumi.Input

	ToStatusOutput() StatusOutput
	ToStatusOutputWithContext(context.Context) StatusOutput
}

// The status of an Azure resource at the time the operation was called.
type StatusArgs struct {
}

func (StatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Status)(nil)).Elem()
}

func (i StatusArgs) ToStatusOutput() StatusOutput {
	return i.ToStatusOutputWithContext(context.Background())
}

func (i StatusArgs) ToStatusOutputWithContext(ctx context.Context) StatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusOutput)
}

// The status of an Azure resource at the time the operation was called.
type StatusOutput struct{ *pulumi.OutputState }

func (StatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Status)(nil)).Elem()
}

func (o StatusOutput) ToStatusOutput() StatusOutput {
	return o
}

func (o StatusOutput) ToStatusOutputWithContext(ctx context.Context) StatusOutput {
	return o
}

// The status of an Azure resource at the time the operation was called.
type StatusResponse struct {
	// The short label for the status.
	DisplayStatus string `pulumi:"displayStatus"`
	// The detailed message for the status, including alerts and error messages.
	Message string `pulumi:"message"`
	// The timestamp when the status was changed to the current value.
	Timestamp string `pulumi:"timestamp"`
}

// StatusResponseInput is an input type that accepts StatusResponseArgs and StatusResponseOutput values.
// You can construct a concrete instance of `StatusResponseInput` via:
//
//          StatusResponseArgs{...}
type StatusResponseInput interface {
	pulumi.Input

	ToStatusResponseOutput() StatusResponseOutput
	ToStatusResponseOutputWithContext(context.Context) StatusResponseOutput
}

// The status of an Azure resource at the time the operation was called.
type StatusResponseArgs struct {
	// The short label for the status.
	DisplayStatus pulumi.StringInput `pulumi:"displayStatus"`
	// The detailed message for the status, including alerts and error messages.
	Message pulumi.StringInput `pulumi:"message"`
	// The timestamp when the status was changed to the current value.
	Timestamp pulumi.StringInput `pulumi:"timestamp"`
}

func (StatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusResponse)(nil)).Elem()
}

func (i StatusResponseArgs) ToStatusResponseOutput() StatusResponseOutput {
	return i.ToStatusResponseOutputWithContext(context.Background())
}

func (i StatusResponseArgs) ToStatusResponseOutputWithContext(ctx context.Context) StatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusResponseOutput)
}

func (i StatusResponseArgs) ToStatusResponsePtrOutput() StatusResponsePtrOutput {
	return i.ToStatusResponsePtrOutputWithContext(context.Background())
}

func (i StatusResponseArgs) ToStatusResponsePtrOutputWithContext(ctx context.Context) StatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusResponseOutput).ToStatusResponsePtrOutputWithContext(ctx)
}

// StatusResponsePtrInput is an input type that accepts StatusResponseArgs, StatusResponsePtr and StatusResponsePtrOutput values.
// You can construct a concrete instance of `StatusResponsePtrInput` via:
//
//          StatusResponseArgs{...}
//
//  or:
//
//          nil
type StatusResponsePtrInput interface {
	pulumi.Input

	ToStatusResponsePtrOutput() StatusResponsePtrOutput
	ToStatusResponsePtrOutputWithContext(context.Context) StatusResponsePtrOutput
}

type statusResponsePtrType StatusResponseArgs

func StatusResponsePtr(v *StatusResponseArgs) StatusResponsePtrInput {
	return (*statusResponsePtrType)(v)
}

func (*statusResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusResponse)(nil)).Elem()
}

func (i *statusResponsePtrType) ToStatusResponsePtrOutput() StatusResponsePtrOutput {
	return i.ToStatusResponsePtrOutputWithContext(context.Background())
}

func (i *statusResponsePtrType) ToStatusResponsePtrOutputWithContext(ctx context.Context) StatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusResponsePtrOutput)
}

// The status of an Azure resource at the time the operation was called.
type StatusResponseOutput struct{ *pulumi.OutputState }

func (StatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusResponse)(nil)).Elem()
}

func (o StatusResponseOutput) ToStatusResponseOutput() StatusResponseOutput {
	return o
}

func (o StatusResponseOutput) ToStatusResponseOutputWithContext(ctx context.Context) StatusResponseOutput {
	return o
}

func (o StatusResponseOutput) ToStatusResponsePtrOutput() StatusResponsePtrOutput {
	return o.ToStatusResponsePtrOutputWithContext(context.Background())
}

func (o StatusResponseOutput) ToStatusResponsePtrOutputWithContext(ctx context.Context) StatusResponsePtrOutput {
	return o.ApplyT(func(v StatusResponse) *StatusResponse {
		return &v
	}).(StatusResponsePtrOutput)
}

// The short label for the status.
func (o StatusResponseOutput) DisplayStatus() pulumi.StringOutput {
	return o.ApplyT(func(v StatusResponse) string { return v.DisplayStatus }).(pulumi.StringOutput)
}

// The detailed message for the status, including alerts and error messages.
func (o StatusResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v StatusResponse) string { return v.Message }).(pulumi.StringOutput)
}

// The timestamp when the status was changed to the current value.
func (o StatusResponseOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v StatusResponse) string { return v.Timestamp }).(pulumi.StringOutput)
}

type StatusResponsePtrOutput struct{ *pulumi.OutputState }

func (StatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusResponse)(nil)).Elem()
}

func (o StatusResponsePtrOutput) ToStatusResponsePtrOutput() StatusResponsePtrOutput {
	return o
}

func (o StatusResponsePtrOutput) ToStatusResponsePtrOutputWithContext(ctx context.Context) StatusResponsePtrOutput {
	return o
}

func (o StatusResponsePtrOutput) Elem() StatusResponseOutput {
	return o.ApplyT(func(v *StatusResponse) StatusResponse { return *v }).(StatusResponseOutput)
}

// The short label for the status.
func (o StatusResponsePtrOutput) DisplayStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayStatus
	}).(pulumi.StringPtrOutput)
}

// The detailed message for the status, including alerts and error messages.
func (o StatusResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// The timestamp when the status was changed to the current value.
func (o StatusResponsePtrOutput) Timestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Timestamp
	}).(pulumi.StringPtrOutput)
}

// The properties of a storage account for a container registry. Only applicable to Classic SKU.
type StorageAccountProperties struct {
	// The resource ID of the storage account.
	Id string `pulumi:"id"`
}

// StorageAccountPropertiesInput is an input type that accepts StorageAccountPropertiesArgs and StorageAccountPropertiesOutput values.
// You can construct a concrete instance of `StorageAccountPropertiesInput` via:
//
//          StorageAccountPropertiesArgs{...}
type StorageAccountPropertiesInput interface {
	pulumi.Input

	ToStorageAccountPropertiesOutput() StorageAccountPropertiesOutput
	ToStorageAccountPropertiesOutputWithContext(context.Context) StorageAccountPropertiesOutput
}

// The properties of a storage account for a container registry. Only applicable to Classic SKU.
type StorageAccountPropertiesArgs struct {
	// The resource ID of the storage account.
	Id pulumi.StringInput `pulumi:"id"`
}

func (StorageAccountPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountProperties)(nil)).Elem()
}

func (i StorageAccountPropertiesArgs) ToStorageAccountPropertiesOutput() StorageAccountPropertiesOutput {
	return i.ToStorageAccountPropertiesOutputWithContext(context.Background())
}

func (i StorageAccountPropertiesArgs) ToStorageAccountPropertiesOutputWithContext(ctx context.Context) StorageAccountPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesOutput)
}

func (i StorageAccountPropertiesArgs) ToStorageAccountPropertiesPtrOutput() StorageAccountPropertiesPtrOutput {
	return i.ToStorageAccountPropertiesPtrOutputWithContext(context.Background())
}

func (i StorageAccountPropertiesArgs) ToStorageAccountPropertiesPtrOutputWithContext(ctx context.Context) StorageAccountPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesOutput).ToStorageAccountPropertiesPtrOutputWithContext(ctx)
}

// StorageAccountPropertiesPtrInput is an input type that accepts StorageAccountPropertiesArgs, StorageAccountPropertiesPtr and StorageAccountPropertiesPtrOutput values.
// You can construct a concrete instance of `StorageAccountPropertiesPtrInput` via:
//
//          StorageAccountPropertiesArgs{...}
//
//  or:
//
//          nil
type StorageAccountPropertiesPtrInput interface {
	pulumi.Input

	ToStorageAccountPropertiesPtrOutput() StorageAccountPropertiesPtrOutput
	ToStorageAccountPropertiesPtrOutputWithContext(context.Context) StorageAccountPropertiesPtrOutput
}

type storageAccountPropertiesPtrType StorageAccountPropertiesArgs

func StorageAccountPropertiesPtr(v *StorageAccountPropertiesArgs) StorageAccountPropertiesPtrInput {
	return (*storageAccountPropertiesPtrType)(v)
}

func (*storageAccountPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountProperties)(nil)).Elem()
}

func (i *storageAccountPropertiesPtrType) ToStorageAccountPropertiesPtrOutput() StorageAccountPropertiesPtrOutput {
	return i.ToStorageAccountPropertiesPtrOutputWithContext(context.Background())
}

func (i *storageAccountPropertiesPtrType) ToStorageAccountPropertiesPtrOutputWithContext(ctx context.Context) StorageAccountPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesPtrOutput)
}

// The properties of a storage account for a container registry. Only applicable to Classic SKU.
type StorageAccountPropertiesOutput struct{ *pulumi.OutputState }

func (StorageAccountPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountProperties)(nil)).Elem()
}

func (o StorageAccountPropertiesOutput) ToStorageAccountPropertiesOutput() StorageAccountPropertiesOutput {
	return o
}

func (o StorageAccountPropertiesOutput) ToStorageAccountPropertiesOutputWithContext(ctx context.Context) StorageAccountPropertiesOutput {
	return o
}

func (o StorageAccountPropertiesOutput) ToStorageAccountPropertiesPtrOutput() StorageAccountPropertiesPtrOutput {
	return o.ToStorageAccountPropertiesPtrOutputWithContext(context.Background())
}

func (o StorageAccountPropertiesOutput) ToStorageAccountPropertiesPtrOutputWithContext(ctx context.Context) StorageAccountPropertiesPtrOutput {
	return o.ApplyT(func(v StorageAccountProperties) *StorageAccountProperties {
		return &v
	}).(StorageAccountPropertiesPtrOutput)
}

// The resource ID of the storage account.
func (o StorageAccountPropertiesOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountProperties) string { return v.Id }).(pulumi.StringOutput)
}

type StorageAccountPropertiesPtrOutput struct{ *pulumi.OutputState }

func (StorageAccountPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountProperties)(nil)).Elem()
}

func (o StorageAccountPropertiesPtrOutput) ToStorageAccountPropertiesPtrOutput() StorageAccountPropertiesPtrOutput {
	return o
}

func (o StorageAccountPropertiesPtrOutput) ToStorageAccountPropertiesPtrOutputWithContext(ctx context.Context) StorageAccountPropertiesPtrOutput {
	return o
}

func (o StorageAccountPropertiesPtrOutput) Elem() StorageAccountPropertiesOutput {
	return o.ApplyT(func(v *StorageAccountProperties) StorageAccountProperties { return *v }).(StorageAccountPropertiesOutput)
}

// The resource ID of the storage account.
func (o StorageAccountPropertiesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The properties of a storage account for a container registry. Only applicable to Classic SKU.
type StorageAccountPropertiesResponse struct {
	// The resource ID of the storage account.
	Id string `pulumi:"id"`
}

// StorageAccountPropertiesResponseInput is an input type that accepts StorageAccountPropertiesResponseArgs and StorageAccountPropertiesResponseOutput values.
// You can construct a concrete instance of `StorageAccountPropertiesResponseInput` via:
//
//          StorageAccountPropertiesResponseArgs{...}
type StorageAccountPropertiesResponseInput interface {
	pulumi.Input

	ToStorageAccountPropertiesResponseOutput() StorageAccountPropertiesResponseOutput
	ToStorageAccountPropertiesResponseOutputWithContext(context.Context) StorageAccountPropertiesResponseOutput
}

// The properties of a storage account for a container registry. Only applicable to Classic SKU.
type StorageAccountPropertiesResponseArgs struct {
	// The resource ID of the storage account.
	Id pulumi.StringInput `pulumi:"id"`
}

func (StorageAccountPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountPropertiesResponse)(nil)).Elem()
}

func (i StorageAccountPropertiesResponseArgs) ToStorageAccountPropertiesResponseOutput() StorageAccountPropertiesResponseOutput {
	return i.ToStorageAccountPropertiesResponseOutputWithContext(context.Background())
}

func (i StorageAccountPropertiesResponseArgs) ToStorageAccountPropertiesResponseOutputWithContext(ctx context.Context) StorageAccountPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesResponseOutput)
}

func (i StorageAccountPropertiesResponseArgs) ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput {
	return i.ToStorageAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i StorageAccountPropertiesResponseArgs) ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesResponseOutput).ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx)
}

// StorageAccountPropertiesResponsePtrInput is an input type that accepts StorageAccountPropertiesResponseArgs, StorageAccountPropertiesResponsePtr and StorageAccountPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `StorageAccountPropertiesResponsePtrInput` via:
//
//          StorageAccountPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type StorageAccountPropertiesResponsePtrInput interface {
	pulumi.Input

	ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput
	ToStorageAccountPropertiesResponsePtrOutputWithContext(context.Context) StorageAccountPropertiesResponsePtrOutput
}

type storageAccountPropertiesResponsePtrType StorageAccountPropertiesResponseArgs

func StorageAccountPropertiesResponsePtr(v *StorageAccountPropertiesResponseArgs) StorageAccountPropertiesResponsePtrInput {
	return (*storageAccountPropertiesResponsePtrType)(v)
}

func (*storageAccountPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountPropertiesResponse)(nil)).Elem()
}

func (i *storageAccountPropertiesResponsePtrType) ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput {
	return i.ToStorageAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *storageAccountPropertiesResponsePtrType) ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesResponsePtrOutput)
}

// The properties of a storage account for a container registry. Only applicable to Classic SKU.
type StorageAccountPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountPropertiesResponse)(nil)).Elem()
}

func (o StorageAccountPropertiesResponseOutput) ToStorageAccountPropertiesResponseOutput() StorageAccountPropertiesResponseOutput {
	return o
}

func (o StorageAccountPropertiesResponseOutput) ToStorageAccountPropertiesResponseOutputWithContext(ctx context.Context) StorageAccountPropertiesResponseOutput {
	return o
}

func (o StorageAccountPropertiesResponseOutput) ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput {
	return o.ToStorageAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o StorageAccountPropertiesResponseOutput) ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountPropertiesResponsePtrOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) *StorageAccountPropertiesResponse {
		return &v
	}).(StorageAccountPropertiesResponsePtrOutput)
}

// The resource ID of the storage account.
func (o StorageAccountPropertiesResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) string { return v.Id }).(pulumi.StringOutput)
}

type StorageAccountPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageAccountPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountPropertiesResponse)(nil)).Elem()
}

func (o StorageAccountPropertiesResponsePtrOutput) ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput {
	return o
}

func (o StorageAccountPropertiesResponsePtrOutput) ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountPropertiesResponsePtrOutput {
	return o
}

func (o StorageAccountPropertiesResponsePtrOutput) Elem() StorageAccountPropertiesResponseOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) StorageAccountPropertiesResponse { return *v }).(StorageAccountPropertiesResponseOutput)
}

// The resource ID of the storage account.
func (o StorageAccountPropertiesResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The target of the event.
type TargetResponse struct {
	// The digest of the content, as defined by the Registry V2 HTTP API Specification.
	Digest *string `pulumi:"digest"`
	// The number of bytes of the content. Same as Size field.
	Length *int `pulumi:"length"`
	// The MIME type of the referenced object.
	MediaType *string `pulumi:"mediaType"`
	// The name of the artifact.
	Name *string `pulumi:"name"`
	// The repository name.
	Repository *string `pulumi:"repository"`
	// The number of bytes of the content. Same as Length field.
	Size *int `pulumi:"size"`
	// The tag name.
	Tag *string `pulumi:"tag"`
	// The direct URL to the content.
	Url *string `pulumi:"url"`
	// The version of the artifact.
	Version *string `pulumi:"version"`
}

// TargetResponseInput is an input type that accepts TargetResponseArgs and TargetResponseOutput values.
// You can construct a concrete instance of `TargetResponseInput` via:
//
//          TargetResponseArgs{...}
type TargetResponseInput interface {
	pulumi.Input

	ToTargetResponseOutput() TargetResponseOutput
	ToTargetResponseOutputWithContext(context.Context) TargetResponseOutput
}

// The target of the event.
type TargetResponseArgs struct {
	// The digest of the content, as defined by the Registry V2 HTTP API Specification.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// The number of bytes of the content. Same as Size field.
	Length pulumi.IntPtrInput `pulumi:"length"`
	// The MIME type of the referenced object.
	MediaType pulumi.StringPtrInput `pulumi:"mediaType"`
	// The name of the artifact.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The repository name.
	Repository pulumi.StringPtrInput `pulumi:"repository"`
	// The number of bytes of the content. Same as Length field.
	Size pulumi.IntPtrInput `pulumi:"size"`
	// The tag name.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// The direct URL to the content.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// The version of the artifact.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (TargetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetResponse)(nil)).Elem()
}

func (i TargetResponseArgs) ToTargetResponseOutput() TargetResponseOutput {
	return i.ToTargetResponseOutputWithContext(context.Background())
}

func (i TargetResponseArgs) ToTargetResponseOutputWithContext(ctx context.Context) TargetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetResponseOutput)
}

func (i TargetResponseArgs) ToTargetResponsePtrOutput() TargetResponsePtrOutput {
	return i.ToTargetResponsePtrOutputWithContext(context.Background())
}

func (i TargetResponseArgs) ToTargetResponsePtrOutputWithContext(ctx context.Context) TargetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetResponseOutput).ToTargetResponsePtrOutputWithContext(ctx)
}

// TargetResponsePtrInput is an input type that accepts TargetResponseArgs, TargetResponsePtr and TargetResponsePtrOutput values.
// You can construct a concrete instance of `TargetResponsePtrInput` via:
//
//          TargetResponseArgs{...}
//
//  or:
//
//          nil
type TargetResponsePtrInput interface {
	pulumi.Input

	ToTargetResponsePtrOutput() TargetResponsePtrOutput
	ToTargetResponsePtrOutputWithContext(context.Context) TargetResponsePtrOutput
}

type targetResponsePtrType TargetResponseArgs

func TargetResponsePtr(v *TargetResponseArgs) TargetResponsePtrInput {
	return (*targetResponsePtrType)(v)
}

func (*targetResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetResponse)(nil)).Elem()
}

func (i *targetResponsePtrType) ToTargetResponsePtrOutput() TargetResponsePtrOutput {
	return i.ToTargetResponsePtrOutputWithContext(context.Background())
}

func (i *targetResponsePtrType) ToTargetResponsePtrOutputWithContext(ctx context.Context) TargetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetResponsePtrOutput)
}

// The target of the event.
type TargetResponseOutput struct{ *pulumi.OutputState }

func (TargetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetResponse)(nil)).Elem()
}

func (o TargetResponseOutput) ToTargetResponseOutput() TargetResponseOutput {
	return o
}

func (o TargetResponseOutput) ToTargetResponseOutputWithContext(ctx context.Context) TargetResponseOutput {
	return o
}

func (o TargetResponseOutput) ToTargetResponsePtrOutput() TargetResponsePtrOutput {
	return o.ToTargetResponsePtrOutputWithContext(context.Background())
}

func (o TargetResponseOutput) ToTargetResponsePtrOutputWithContext(ctx context.Context) TargetResponsePtrOutput {
	return o.ApplyT(func(v TargetResponse) *TargetResponse {
		return &v
	}).(TargetResponsePtrOutput)
}

// The digest of the content, as defined by the Registry V2 HTTP API Specification.
func (o TargetResponseOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetResponse) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// The number of bytes of the content. Same as Size field.
func (o TargetResponseOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetResponse) *int { return v.Length }).(pulumi.IntPtrOutput)
}

// The MIME type of the referenced object.
func (o TargetResponseOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetResponse) *string { return v.MediaType }).(pulumi.StringPtrOutput)
}

// The name of the artifact.
func (o TargetResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The repository name.
func (o TargetResponseOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetResponse) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

// The number of bytes of the content. Same as Length field.
func (o TargetResponseOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetResponse) *int { return v.Size }).(pulumi.IntPtrOutput)
}

// The tag name.
func (o TargetResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// The direct URL to the content.
func (o TargetResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// The version of the artifact.
func (o TargetResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type TargetResponsePtrOutput struct{ *pulumi.OutputState }

func (TargetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetResponse)(nil)).Elem()
}

func (o TargetResponsePtrOutput) ToTargetResponsePtrOutput() TargetResponsePtrOutput {
	return o
}

func (o TargetResponsePtrOutput) ToTargetResponsePtrOutputWithContext(ctx context.Context) TargetResponsePtrOutput {
	return o
}

func (o TargetResponsePtrOutput) Elem() TargetResponseOutput {
	return o.ApplyT(func(v *TargetResponse) TargetResponse { return *v }).(TargetResponseOutput)
}

// The digest of the content, as defined by the Registry V2 HTTP API Specification.
func (o TargetResponsePtrOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Digest
	}).(pulumi.StringPtrOutput)
}

// The number of bytes of the content. Same as Size field.
func (o TargetResponsePtrOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetResponse) *int {
		if v == nil {
			return nil
		}
		return v.Length
	}).(pulumi.IntPtrOutput)
}

// The MIME type of the referenced object.
func (o TargetResponsePtrOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetResponse) *string {
		if v == nil {
			return nil
		}
		return v.MediaType
	}).(pulumi.StringPtrOutput)
}

// The name of the artifact.
func (o TargetResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The repository name.
func (o TargetResponsePtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Repository
	}).(pulumi.StringPtrOutput)
}

// The number of bytes of the content. Same as Length field.
func (o TargetResponsePtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetResponse) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

// The tag name.
func (o TargetResponsePtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

// The direct URL to the content.
func (o TargetResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// The version of the artifact.
func (o TargetResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The task that has the ARM resource and task properties.
// The task will have all information to schedule a run against it.
type TaskType struct {
	// Identity for the resource.
	Identity *IdentityPropertiesResponse `pulumi:"identity"`
	// The location of the resource. This cannot be changed after the resource is created.
	Location string `pulumi:"location"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The properties of a task.
	Properties TaskPropertiesResponse `pulumi:"properties"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type string `pulumi:"type"`
}

// TaskTypeInput is an input type that accepts TaskTypeArgs and TaskTypeOutput values.
// You can construct a concrete instance of `TaskTypeInput` via:
//
//          TaskTypeArgs{...}
type TaskTypeInput interface {
	pulumi.Input

	ToTaskTypeOutput() TaskTypeOutput
	ToTaskTypeOutputWithContext(context.Context) TaskTypeOutput
}

// The task that has the ARM resource and task properties.
// The task will have all information to schedule a run against it.
type TaskTypeArgs struct {
	// Identity for the resource.
	Identity IdentityPropertiesResponsePtrInput `pulumi:"identity"`
	// The location of the resource. This cannot be changed after the resource is created.
	Location pulumi.StringInput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of a task.
	Properties TaskPropertiesResponseInput `pulumi:"properties"`
	// The tags of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TaskTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskType)(nil)).Elem()
}

func (i TaskTypeArgs) ToTaskTypeOutput() TaskTypeOutput {
	return i.ToTaskTypeOutputWithContext(context.Background())
}

func (i TaskTypeArgs) ToTaskTypeOutputWithContext(ctx context.Context) TaskTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTypeOutput)
}

// The task that has the ARM resource and task properties.
// The task will have all information to schedule a run against it.
type TaskTypeOutput struct{ *pulumi.OutputState }

func (TaskTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskType)(nil)).Elem()
}

func (o TaskTypeOutput) ToTaskTypeOutput() TaskTypeOutput {
	return o
}

func (o TaskTypeOutput) ToTaskTypeOutputWithContext(ctx context.Context) TaskTypeOutput {
	return o
}

// Identity for the resource.
func (o TaskTypeOutput) Identity() IdentityPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TaskType) *IdentityPropertiesResponse { return v.Identity }).(IdentityPropertiesResponsePtrOutput)
}

// The location of the resource. This cannot be changed after the resource is created.
func (o TaskTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v TaskType) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource.
func (o TaskTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TaskType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of a task.
func (o TaskTypeOutput) Properties() TaskPropertiesResponseOutput {
	return o.ApplyT(func(v TaskType) TaskPropertiesResponse { return v.Properties }).(TaskPropertiesResponseOutput)
}

// The tags of the resource.
func (o TaskTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v TaskType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o TaskTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TaskType) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of a task.
type TaskProperties struct {
	// The machine configuration of the run agent.
	AgentConfiguration *AgentProperties `pulumi:"agentConfiguration"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials *Credentials `pulumi:"credentials"`
	// The platform properties against which the run has to happen.
	Platform PlatformProperties `pulumi:"platform"`
	// The current status of task.
	Status *string `pulumi:"status"`
	// The properties of a task step.
	Step TaskStepProperties `pulumi:"step"`
	// Run timeout in seconds.
	Timeout *int `pulumi:"timeout"`
	// The properties that describe all triggers for the task.
	Trigger *TriggerProperties `pulumi:"trigger"`
}

// TaskPropertiesInput is an input type that accepts TaskPropertiesArgs and TaskPropertiesOutput values.
// You can construct a concrete instance of `TaskPropertiesInput` via:
//
//          TaskPropertiesArgs{...}
type TaskPropertiesInput interface {
	pulumi.Input

	ToTaskPropertiesOutput() TaskPropertiesOutput
	ToTaskPropertiesOutputWithContext(context.Context) TaskPropertiesOutput
}

// The properties of a task.
type TaskPropertiesArgs struct {
	// The machine configuration of the run agent.
	AgentConfiguration AgentPropertiesPtrInput `pulumi:"agentConfiguration"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials CredentialsPtrInput `pulumi:"credentials"`
	// The platform properties against which the run has to happen.
	Platform PlatformPropertiesInput `pulumi:"platform"`
	// The current status of task.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The properties of a task step.
	Step TaskStepPropertiesInput `pulumi:"step"`
	// Run timeout in seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The properties that describe all triggers for the task.
	Trigger TriggerPropertiesPtrInput `pulumi:"trigger"`
}

func (TaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskProperties)(nil)).Elem()
}

func (i TaskPropertiesArgs) ToTaskPropertiesOutput() TaskPropertiesOutput {
	return i.ToTaskPropertiesOutputWithContext(context.Background())
}

func (i TaskPropertiesArgs) ToTaskPropertiesOutputWithContext(ctx context.Context) TaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskPropertiesOutput)
}

func (i TaskPropertiesArgs) ToTaskPropertiesPtrOutput() TaskPropertiesPtrOutput {
	return i.ToTaskPropertiesPtrOutputWithContext(context.Background())
}

func (i TaskPropertiesArgs) ToTaskPropertiesPtrOutputWithContext(ctx context.Context) TaskPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskPropertiesOutput).ToTaskPropertiesPtrOutputWithContext(ctx)
}

// TaskPropertiesPtrInput is an input type that accepts TaskPropertiesArgs, TaskPropertiesPtr and TaskPropertiesPtrOutput values.
// You can construct a concrete instance of `TaskPropertiesPtrInput` via:
//
//          TaskPropertiesArgs{...}
//
//  or:
//
//          nil
type TaskPropertiesPtrInput interface {
	pulumi.Input

	ToTaskPropertiesPtrOutput() TaskPropertiesPtrOutput
	ToTaskPropertiesPtrOutputWithContext(context.Context) TaskPropertiesPtrOutput
}

type taskPropertiesPtrType TaskPropertiesArgs

func TaskPropertiesPtr(v *TaskPropertiesArgs) TaskPropertiesPtrInput {
	return (*taskPropertiesPtrType)(v)
}

func (*taskPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskProperties)(nil)).Elem()
}

func (i *taskPropertiesPtrType) ToTaskPropertiesPtrOutput() TaskPropertiesPtrOutput {
	return i.ToTaskPropertiesPtrOutputWithContext(context.Background())
}

func (i *taskPropertiesPtrType) ToTaskPropertiesPtrOutputWithContext(ctx context.Context) TaskPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskPropertiesPtrOutput)
}

// The properties of a task.
type TaskPropertiesOutput struct{ *pulumi.OutputState }

func (TaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskProperties)(nil)).Elem()
}

func (o TaskPropertiesOutput) ToTaskPropertiesOutput() TaskPropertiesOutput {
	return o
}

func (o TaskPropertiesOutput) ToTaskPropertiesOutputWithContext(ctx context.Context) TaskPropertiesOutput {
	return o
}

func (o TaskPropertiesOutput) ToTaskPropertiesPtrOutput() TaskPropertiesPtrOutput {
	return o.ToTaskPropertiesPtrOutputWithContext(context.Background())
}

func (o TaskPropertiesOutput) ToTaskPropertiesPtrOutputWithContext(ctx context.Context) TaskPropertiesPtrOutput {
	return o.ApplyT(func(v TaskProperties) *TaskProperties {
		return &v
	}).(TaskPropertiesPtrOutput)
}

// The machine configuration of the run agent.
func (o TaskPropertiesOutput) AgentConfiguration() AgentPropertiesPtrOutput {
	return o.ApplyT(func(v TaskProperties) *AgentProperties { return v.AgentConfiguration }).(AgentPropertiesPtrOutput)
}

// The properties that describes a set of credentials that will be used when this run is invoked.
func (o TaskPropertiesOutput) Credentials() CredentialsPtrOutput {
	return o.ApplyT(func(v TaskProperties) *Credentials { return v.Credentials }).(CredentialsPtrOutput)
}

// The platform properties against which the run has to happen.
func (o TaskPropertiesOutput) Platform() PlatformPropertiesOutput {
	return o.ApplyT(func(v TaskProperties) PlatformProperties { return v.Platform }).(PlatformPropertiesOutput)
}

// The current status of task.
func (o TaskPropertiesOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskProperties) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The properties of a task step.
func (o TaskPropertiesOutput) Step() TaskStepPropertiesOutput {
	return o.ApplyT(func(v TaskProperties) TaskStepProperties { return v.Step }).(TaskStepPropertiesOutput)
}

// Run timeout in seconds.
func (o TaskPropertiesOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskProperties) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The properties that describe all triggers for the task.
func (o TaskPropertiesOutput) Trigger() TriggerPropertiesPtrOutput {
	return o.ApplyT(func(v TaskProperties) *TriggerProperties { return v.Trigger }).(TriggerPropertiesPtrOutput)
}

type TaskPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TaskPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskProperties)(nil)).Elem()
}

func (o TaskPropertiesPtrOutput) ToTaskPropertiesPtrOutput() TaskPropertiesPtrOutput {
	return o
}

func (o TaskPropertiesPtrOutput) ToTaskPropertiesPtrOutputWithContext(ctx context.Context) TaskPropertiesPtrOutput {
	return o
}

func (o TaskPropertiesPtrOutput) Elem() TaskPropertiesOutput {
	return o.ApplyT(func(v *TaskProperties) TaskProperties { return *v }).(TaskPropertiesOutput)
}

// The machine configuration of the run agent.
func (o TaskPropertiesPtrOutput) AgentConfiguration() AgentPropertiesPtrOutput {
	return o.ApplyT(func(v *TaskProperties) *AgentProperties {
		if v == nil {
			return nil
		}
		return v.AgentConfiguration
	}).(AgentPropertiesPtrOutput)
}

// The properties that describes a set of credentials that will be used when this run is invoked.
func (o TaskPropertiesPtrOutput) Credentials() CredentialsPtrOutput {
	return o.ApplyT(func(v *TaskProperties) *Credentials {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(CredentialsPtrOutput)
}

// The platform properties against which the run has to happen.
func (o TaskPropertiesPtrOutput) Platform() PlatformPropertiesPtrOutput {
	return o.ApplyT(func(v *TaskProperties) *PlatformProperties {
		if v == nil {
			return nil
		}
		return &v.Platform
	}).(PlatformPropertiesPtrOutput)
}

// The current status of task.
func (o TaskPropertiesPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskProperties) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The properties of a task step.
func (o TaskPropertiesPtrOutput) Step() TaskStepPropertiesPtrOutput {
	return o.ApplyT(func(v *TaskProperties) *TaskStepProperties {
		if v == nil {
			return nil
		}
		return &v.Step
	}).(TaskStepPropertiesPtrOutput)
}

// Run timeout in seconds.
func (o TaskPropertiesPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TaskProperties) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// The properties that describe all triggers for the task.
func (o TaskPropertiesPtrOutput) Trigger() TriggerPropertiesPtrOutput {
	return o.ApplyT(func(v *TaskProperties) *TriggerProperties {
		if v == nil {
			return nil
		}
		return v.Trigger
	}).(TriggerPropertiesPtrOutput)
}

// The properties of a task.
type TaskPropertiesResponse struct {
	// The machine configuration of the run agent.
	AgentConfiguration *AgentPropertiesResponse `pulumi:"agentConfiguration"`
	// The creation date of task.
	CreationDate string `pulumi:"creationDate"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials *CredentialsResponse `pulumi:"credentials"`
	// The platform properties against which the run has to happen.
	Platform PlatformPropertiesResponse `pulumi:"platform"`
	// The provisioning state of the task.
	ProvisioningState string `pulumi:"provisioningState"`
	// The current status of task.
	Status *string `pulumi:"status"`
	// The properties of a task step.
	Step TaskStepPropertiesResponse `pulumi:"step"`
	// Run timeout in seconds.
	Timeout *int `pulumi:"timeout"`
	// The properties that describe all triggers for the task.
	Trigger *TriggerPropertiesResponse `pulumi:"trigger"`
}

// TaskPropertiesResponseInput is an input type that accepts TaskPropertiesResponseArgs and TaskPropertiesResponseOutput values.
// You can construct a concrete instance of `TaskPropertiesResponseInput` via:
//
//          TaskPropertiesResponseArgs{...}
type TaskPropertiesResponseInput interface {
	pulumi.Input

	ToTaskPropertiesResponseOutput() TaskPropertiesResponseOutput
	ToTaskPropertiesResponseOutputWithContext(context.Context) TaskPropertiesResponseOutput
}

// The properties of a task.
type TaskPropertiesResponseArgs struct {
	// The machine configuration of the run agent.
	AgentConfiguration AgentPropertiesResponsePtrInput `pulumi:"agentConfiguration"`
	// The creation date of task.
	CreationDate pulumi.StringInput `pulumi:"creationDate"`
	// The properties that describes a set of credentials that will be used when this run is invoked.
	Credentials CredentialsResponsePtrInput `pulumi:"credentials"`
	// The platform properties against which the run has to happen.
	Platform PlatformPropertiesResponseInput `pulumi:"platform"`
	// The provisioning state of the task.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The current status of task.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The properties of a task step.
	Step TaskStepPropertiesResponseInput `pulumi:"step"`
	// Run timeout in seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The properties that describe all triggers for the task.
	Trigger TriggerPropertiesResponsePtrInput `pulumi:"trigger"`
}

func (TaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskPropertiesResponse)(nil)).Elem()
}

func (i TaskPropertiesResponseArgs) ToTaskPropertiesResponseOutput() TaskPropertiesResponseOutput {
	return i.ToTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i TaskPropertiesResponseArgs) ToTaskPropertiesResponseOutputWithContext(ctx context.Context) TaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskPropertiesResponseOutput)
}

func (i TaskPropertiesResponseArgs) ToTaskPropertiesResponsePtrOutput() TaskPropertiesResponsePtrOutput {
	return i.ToTaskPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i TaskPropertiesResponseArgs) ToTaskPropertiesResponsePtrOutputWithContext(ctx context.Context) TaskPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskPropertiesResponseOutput).ToTaskPropertiesResponsePtrOutputWithContext(ctx)
}

// TaskPropertiesResponsePtrInput is an input type that accepts TaskPropertiesResponseArgs, TaskPropertiesResponsePtr and TaskPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `TaskPropertiesResponsePtrInput` via:
//
//          TaskPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type TaskPropertiesResponsePtrInput interface {
	pulumi.Input

	ToTaskPropertiesResponsePtrOutput() TaskPropertiesResponsePtrOutput
	ToTaskPropertiesResponsePtrOutputWithContext(context.Context) TaskPropertiesResponsePtrOutput
}

type taskPropertiesResponsePtrType TaskPropertiesResponseArgs

func TaskPropertiesResponsePtr(v *TaskPropertiesResponseArgs) TaskPropertiesResponsePtrInput {
	return (*taskPropertiesResponsePtrType)(v)
}

func (*taskPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskPropertiesResponse)(nil)).Elem()
}

func (i *taskPropertiesResponsePtrType) ToTaskPropertiesResponsePtrOutput() TaskPropertiesResponsePtrOutput {
	return i.ToTaskPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *taskPropertiesResponsePtrType) ToTaskPropertiesResponsePtrOutputWithContext(ctx context.Context) TaskPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskPropertiesResponsePtrOutput)
}

// The properties of a task.
type TaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskPropertiesResponse)(nil)).Elem()
}

func (o TaskPropertiesResponseOutput) ToTaskPropertiesResponseOutput() TaskPropertiesResponseOutput {
	return o
}

func (o TaskPropertiesResponseOutput) ToTaskPropertiesResponseOutputWithContext(ctx context.Context) TaskPropertiesResponseOutput {
	return o
}

func (o TaskPropertiesResponseOutput) ToTaskPropertiesResponsePtrOutput() TaskPropertiesResponsePtrOutput {
	return o.ToTaskPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o TaskPropertiesResponseOutput) ToTaskPropertiesResponsePtrOutputWithContext(ctx context.Context) TaskPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TaskPropertiesResponse) *TaskPropertiesResponse {
		return &v
	}).(TaskPropertiesResponsePtrOutput)
}

// The machine configuration of the run agent.
func (o TaskPropertiesResponseOutput) AgentConfiguration() AgentPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TaskPropertiesResponse) *AgentPropertiesResponse { return v.AgentConfiguration }).(AgentPropertiesResponsePtrOutput)
}

// The creation date of task.
func (o TaskPropertiesResponseOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v TaskPropertiesResponse) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The properties that describes a set of credentials that will be used when this run is invoked.
func (o TaskPropertiesResponseOutput) Credentials() CredentialsResponsePtrOutput {
	return o.ApplyT(func(v TaskPropertiesResponse) *CredentialsResponse { return v.Credentials }).(CredentialsResponsePtrOutput)
}

// The platform properties against which the run has to happen.
func (o TaskPropertiesResponseOutput) Platform() PlatformPropertiesResponseOutput {
	return o.ApplyT(func(v TaskPropertiesResponse) PlatformPropertiesResponse { return v.Platform }).(PlatformPropertiesResponseOutput)
}

// The provisioning state of the task.
func (o TaskPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v TaskPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The current status of task.
func (o TaskPropertiesResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskPropertiesResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The properties of a task step.
func (o TaskPropertiesResponseOutput) Step() TaskStepPropertiesResponseOutput {
	return o.ApplyT(func(v TaskPropertiesResponse) TaskStepPropertiesResponse { return v.Step }).(TaskStepPropertiesResponseOutput)
}

// Run timeout in seconds.
func (o TaskPropertiesResponseOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TaskPropertiesResponse) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The properties that describe all triggers for the task.
func (o TaskPropertiesResponseOutput) Trigger() TriggerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TaskPropertiesResponse) *TriggerPropertiesResponse { return v.Trigger }).(TriggerPropertiesResponsePtrOutput)
}

type TaskPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TaskPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskPropertiesResponse)(nil)).Elem()
}

func (o TaskPropertiesResponsePtrOutput) ToTaskPropertiesResponsePtrOutput() TaskPropertiesResponsePtrOutput {
	return o
}

func (o TaskPropertiesResponsePtrOutput) ToTaskPropertiesResponsePtrOutputWithContext(ctx context.Context) TaskPropertiesResponsePtrOutput {
	return o
}

func (o TaskPropertiesResponsePtrOutput) Elem() TaskPropertiesResponseOutput {
	return o.ApplyT(func(v *TaskPropertiesResponse) TaskPropertiesResponse { return *v }).(TaskPropertiesResponseOutput)
}

// The machine configuration of the run agent.
func (o TaskPropertiesResponsePtrOutput) AgentConfiguration() AgentPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *TaskPropertiesResponse) *AgentPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.AgentConfiguration
	}).(AgentPropertiesResponsePtrOutput)
}

// The creation date of task.
func (o TaskPropertiesResponsePtrOutput) CreationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreationDate
	}).(pulumi.StringPtrOutput)
}

// The properties that describes a set of credentials that will be used when this run is invoked.
func (o TaskPropertiesResponsePtrOutput) Credentials() CredentialsResponsePtrOutput {
	return o.ApplyT(func(v *TaskPropertiesResponse) *CredentialsResponse {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(CredentialsResponsePtrOutput)
}

// The platform properties against which the run has to happen.
func (o TaskPropertiesResponsePtrOutput) Platform() PlatformPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *TaskPropertiesResponse) *PlatformPropertiesResponse {
		if v == nil {
			return nil
		}
		return &v.Platform
	}).(PlatformPropertiesResponsePtrOutput)
}

// The provisioning state of the task.
func (o TaskPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The current status of task.
func (o TaskPropertiesResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The properties of a task step.
func (o TaskPropertiesResponsePtrOutput) Step() TaskStepPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *TaskPropertiesResponse) *TaskStepPropertiesResponse {
		if v == nil {
			return nil
		}
		return &v.Step
	}).(TaskStepPropertiesResponsePtrOutput)
}

// Run timeout in seconds.
func (o TaskPropertiesResponsePtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TaskPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// The properties that describe all triggers for the task.
func (o TaskPropertiesResponsePtrOutput) Trigger() TriggerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *TaskPropertiesResponse) *TriggerPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Trigger
	}).(TriggerPropertiesResponsePtrOutput)
}

// Base properties for any task step.
type TaskStepProperties struct {
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken *string `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath *string `pulumi:"contextPath"`
}

// TaskStepPropertiesInput is an input type that accepts TaskStepPropertiesArgs and TaskStepPropertiesOutput values.
// You can construct a concrete instance of `TaskStepPropertiesInput` via:
//
//          TaskStepPropertiesArgs{...}
type TaskStepPropertiesInput interface {
	pulumi.Input

	ToTaskStepPropertiesOutput() TaskStepPropertiesOutput
	ToTaskStepPropertiesOutputWithContext(context.Context) TaskStepPropertiesOutput
}

// Base properties for any task step.
type TaskStepPropertiesArgs struct {
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken pulumi.StringPtrInput `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
}

func (TaskStepPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskStepProperties)(nil)).Elem()
}

func (i TaskStepPropertiesArgs) ToTaskStepPropertiesOutput() TaskStepPropertiesOutput {
	return i.ToTaskStepPropertiesOutputWithContext(context.Background())
}

func (i TaskStepPropertiesArgs) ToTaskStepPropertiesOutputWithContext(ctx context.Context) TaskStepPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskStepPropertiesOutput)
}

func (i TaskStepPropertiesArgs) ToTaskStepPropertiesPtrOutput() TaskStepPropertiesPtrOutput {
	return i.ToTaskStepPropertiesPtrOutputWithContext(context.Background())
}

func (i TaskStepPropertiesArgs) ToTaskStepPropertiesPtrOutputWithContext(ctx context.Context) TaskStepPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskStepPropertiesOutput).ToTaskStepPropertiesPtrOutputWithContext(ctx)
}

// TaskStepPropertiesPtrInput is an input type that accepts TaskStepPropertiesArgs, TaskStepPropertiesPtr and TaskStepPropertiesPtrOutput values.
// You can construct a concrete instance of `TaskStepPropertiesPtrInput` via:
//
//          TaskStepPropertiesArgs{...}
//
//  or:
//
//          nil
type TaskStepPropertiesPtrInput interface {
	pulumi.Input

	ToTaskStepPropertiesPtrOutput() TaskStepPropertiesPtrOutput
	ToTaskStepPropertiesPtrOutputWithContext(context.Context) TaskStepPropertiesPtrOutput
}

type taskStepPropertiesPtrType TaskStepPropertiesArgs

func TaskStepPropertiesPtr(v *TaskStepPropertiesArgs) TaskStepPropertiesPtrInput {
	return (*taskStepPropertiesPtrType)(v)
}

func (*taskStepPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskStepProperties)(nil)).Elem()
}

func (i *taskStepPropertiesPtrType) ToTaskStepPropertiesPtrOutput() TaskStepPropertiesPtrOutput {
	return i.ToTaskStepPropertiesPtrOutputWithContext(context.Background())
}

func (i *taskStepPropertiesPtrType) ToTaskStepPropertiesPtrOutputWithContext(ctx context.Context) TaskStepPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskStepPropertiesPtrOutput)
}

// Base properties for any task step.
type TaskStepPropertiesOutput struct{ *pulumi.OutputState }

func (TaskStepPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskStepProperties)(nil)).Elem()
}

func (o TaskStepPropertiesOutput) ToTaskStepPropertiesOutput() TaskStepPropertiesOutput {
	return o
}

func (o TaskStepPropertiesOutput) ToTaskStepPropertiesOutputWithContext(ctx context.Context) TaskStepPropertiesOutput {
	return o
}

func (o TaskStepPropertiesOutput) ToTaskStepPropertiesPtrOutput() TaskStepPropertiesPtrOutput {
	return o.ToTaskStepPropertiesPtrOutputWithContext(context.Background())
}

func (o TaskStepPropertiesOutput) ToTaskStepPropertiesPtrOutputWithContext(ctx context.Context) TaskStepPropertiesPtrOutput {
	return o.ApplyT(func(v TaskStepProperties) *TaskStepProperties {
		return &v
	}).(TaskStepPropertiesPtrOutput)
}

// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
func (o TaskStepPropertiesOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskStepProperties) *string { return v.ContextAccessToken }).(pulumi.StringPtrOutput)
}

// The URL(absolute or relative) of the source context for the task step.
func (o TaskStepPropertiesOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskStepProperties) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

type TaskStepPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TaskStepPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskStepProperties)(nil)).Elem()
}

func (o TaskStepPropertiesPtrOutput) ToTaskStepPropertiesPtrOutput() TaskStepPropertiesPtrOutput {
	return o
}

func (o TaskStepPropertiesPtrOutput) ToTaskStepPropertiesPtrOutputWithContext(ctx context.Context) TaskStepPropertiesPtrOutput {
	return o
}

func (o TaskStepPropertiesPtrOutput) Elem() TaskStepPropertiesOutput {
	return o.ApplyT(func(v *TaskStepProperties) TaskStepProperties { return *v }).(TaskStepPropertiesOutput)
}

// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
func (o TaskStepPropertiesPtrOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskStepProperties) *string {
		if v == nil {
			return nil
		}
		return v.ContextAccessToken
	}).(pulumi.StringPtrOutput)
}

// The URL(absolute or relative) of the source context for the task step.
func (o TaskStepPropertiesPtrOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskStepProperties) *string {
		if v == nil {
			return nil
		}
		return v.ContextPath
	}).(pulumi.StringPtrOutput)
}

// Base properties for any task step.
type TaskStepPropertiesResponse struct {
	// List of base image dependencies for a step.
	BaseImageDependencies []BaseImageDependencyResponse `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken *string `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath *string `pulumi:"contextPath"`
	// The type of the step.
	Type string `pulumi:"type"`
}

// TaskStepPropertiesResponseInput is an input type that accepts TaskStepPropertiesResponseArgs and TaskStepPropertiesResponseOutput values.
// You can construct a concrete instance of `TaskStepPropertiesResponseInput` via:
//
//          TaskStepPropertiesResponseArgs{...}
type TaskStepPropertiesResponseInput interface {
	pulumi.Input

	ToTaskStepPropertiesResponseOutput() TaskStepPropertiesResponseOutput
	ToTaskStepPropertiesResponseOutputWithContext(context.Context) TaskStepPropertiesResponseOutput
}

// Base properties for any task step.
type TaskStepPropertiesResponseArgs struct {
	// List of base image dependencies for a step.
	BaseImageDependencies BaseImageDependencyResponseArrayInput `pulumi:"baseImageDependencies"`
	// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
	ContextAccessToken pulumi.StringPtrInput `pulumi:"contextAccessToken"`
	// The URL(absolute or relative) of the source context for the task step.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
	// The type of the step.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TaskStepPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskStepPropertiesResponse)(nil)).Elem()
}

func (i TaskStepPropertiesResponseArgs) ToTaskStepPropertiesResponseOutput() TaskStepPropertiesResponseOutput {
	return i.ToTaskStepPropertiesResponseOutputWithContext(context.Background())
}

func (i TaskStepPropertiesResponseArgs) ToTaskStepPropertiesResponseOutputWithContext(ctx context.Context) TaskStepPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskStepPropertiesResponseOutput)
}

func (i TaskStepPropertiesResponseArgs) ToTaskStepPropertiesResponsePtrOutput() TaskStepPropertiesResponsePtrOutput {
	return i.ToTaskStepPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i TaskStepPropertiesResponseArgs) ToTaskStepPropertiesResponsePtrOutputWithContext(ctx context.Context) TaskStepPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskStepPropertiesResponseOutput).ToTaskStepPropertiesResponsePtrOutputWithContext(ctx)
}

// TaskStepPropertiesResponsePtrInput is an input type that accepts TaskStepPropertiesResponseArgs, TaskStepPropertiesResponsePtr and TaskStepPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `TaskStepPropertiesResponsePtrInput` via:
//
//          TaskStepPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type TaskStepPropertiesResponsePtrInput interface {
	pulumi.Input

	ToTaskStepPropertiesResponsePtrOutput() TaskStepPropertiesResponsePtrOutput
	ToTaskStepPropertiesResponsePtrOutputWithContext(context.Context) TaskStepPropertiesResponsePtrOutput
}

type taskStepPropertiesResponsePtrType TaskStepPropertiesResponseArgs

func TaskStepPropertiesResponsePtr(v *TaskStepPropertiesResponseArgs) TaskStepPropertiesResponsePtrInput {
	return (*taskStepPropertiesResponsePtrType)(v)
}

func (*taskStepPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskStepPropertiesResponse)(nil)).Elem()
}

func (i *taskStepPropertiesResponsePtrType) ToTaskStepPropertiesResponsePtrOutput() TaskStepPropertiesResponsePtrOutput {
	return i.ToTaskStepPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *taskStepPropertiesResponsePtrType) ToTaskStepPropertiesResponsePtrOutputWithContext(ctx context.Context) TaskStepPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskStepPropertiesResponsePtrOutput)
}

// Base properties for any task step.
type TaskStepPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TaskStepPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskStepPropertiesResponse)(nil)).Elem()
}

func (o TaskStepPropertiesResponseOutput) ToTaskStepPropertiesResponseOutput() TaskStepPropertiesResponseOutput {
	return o
}

func (o TaskStepPropertiesResponseOutput) ToTaskStepPropertiesResponseOutputWithContext(ctx context.Context) TaskStepPropertiesResponseOutput {
	return o
}

func (o TaskStepPropertiesResponseOutput) ToTaskStepPropertiesResponsePtrOutput() TaskStepPropertiesResponsePtrOutput {
	return o.ToTaskStepPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o TaskStepPropertiesResponseOutput) ToTaskStepPropertiesResponsePtrOutputWithContext(ctx context.Context) TaskStepPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TaskStepPropertiesResponse) *TaskStepPropertiesResponse {
		return &v
	}).(TaskStepPropertiesResponsePtrOutput)
}

// List of base image dependencies for a step.
func (o TaskStepPropertiesResponseOutput) BaseImageDependencies() BaseImageDependencyResponseArrayOutput {
	return o.ApplyT(func(v TaskStepPropertiesResponse) []BaseImageDependencyResponse { return v.BaseImageDependencies }).(BaseImageDependencyResponseArrayOutput)
}

// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
func (o TaskStepPropertiesResponseOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskStepPropertiesResponse) *string { return v.ContextAccessToken }).(pulumi.StringPtrOutput)
}

// The URL(absolute or relative) of the source context for the task step.
func (o TaskStepPropertiesResponseOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskStepPropertiesResponse) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

// The type of the step.
func (o TaskStepPropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TaskStepPropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

type TaskStepPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TaskStepPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskStepPropertiesResponse)(nil)).Elem()
}

func (o TaskStepPropertiesResponsePtrOutput) ToTaskStepPropertiesResponsePtrOutput() TaskStepPropertiesResponsePtrOutput {
	return o
}

func (o TaskStepPropertiesResponsePtrOutput) ToTaskStepPropertiesResponsePtrOutputWithContext(ctx context.Context) TaskStepPropertiesResponsePtrOutput {
	return o
}

func (o TaskStepPropertiesResponsePtrOutput) Elem() TaskStepPropertiesResponseOutput {
	return o.ApplyT(func(v *TaskStepPropertiesResponse) TaskStepPropertiesResponse { return *v }).(TaskStepPropertiesResponseOutput)
}

// List of base image dependencies for a step.
func (o TaskStepPropertiesResponsePtrOutput) BaseImageDependencies() BaseImageDependencyResponseArrayOutput {
	return o.ApplyT(func(v *TaskStepPropertiesResponse) []BaseImageDependencyResponse {
		if v == nil {
			return nil
		}
		return v.BaseImageDependencies
	}).(BaseImageDependencyResponseArrayOutput)
}

// The token (git PAT or SAS token of storage account blob) associated with the context for a step.
func (o TaskStepPropertiesResponsePtrOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskStepPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ContextAccessToken
	}).(pulumi.StringPtrOutput)
}

// The URL(absolute or relative) of the source context for the task step.
func (o TaskStepPropertiesResponsePtrOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskStepPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ContextPath
	}).(pulumi.StringPtrOutput)
}

// The type of the step.
func (o TaskStepPropertiesResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskStepPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The properties of a timer trigger.
type TimerTrigger struct {
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The CRON expression for the task schedule
	Schedule string `pulumi:"schedule"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
}

// TimerTriggerInput is an input type that accepts TimerTriggerArgs and TimerTriggerOutput values.
// You can construct a concrete instance of `TimerTriggerInput` via:
//
//          TimerTriggerArgs{...}
type TimerTriggerInput interface {
	pulumi.Input

	ToTimerTriggerOutput() TimerTriggerOutput
	ToTimerTriggerOutputWithContext(context.Context) TimerTriggerOutput
}

// The properties of a timer trigger.
type TimerTriggerArgs struct {
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The CRON expression for the task schedule
	Schedule pulumi.StringInput `pulumi:"schedule"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (TimerTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimerTrigger)(nil)).Elem()
}

func (i TimerTriggerArgs) ToTimerTriggerOutput() TimerTriggerOutput {
	return i.ToTimerTriggerOutputWithContext(context.Background())
}

func (i TimerTriggerArgs) ToTimerTriggerOutputWithContext(ctx context.Context) TimerTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimerTriggerOutput)
}

// TimerTriggerArrayInput is an input type that accepts TimerTriggerArray and TimerTriggerArrayOutput values.
// You can construct a concrete instance of `TimerTriggerArrayInput` via:
//
//          TimerTriggerArray{ TimerTriggerArgs{...} }
type TimerTriggerArrayInput interface {
	pulumi.Input

	ToTimerTriggerArrayOutput() TimerTriggerArrayOutput
	ToTimerTriggerArrayOutputWithContext(context.Context) TimerTriggerArrayOutput
}

type TimerTriggerArray []TimerTriggerInput

func (TimerTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimerTrigger)(nil)).Elem()
}

func (i TimerTriggerArray) ToTimerTriggerArrayOutput() TimerTriggerArrayOutput {
	return i.ToTimerTriggerArrayOutputWithContext(context.Background())
}

func (i TimerTriggerArray) ToTimerTriggerArrayOutputWithContext(ctx context.Context) TimerTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimerTriggerArrayOutput)
}

// The properties of a timer trigger.
type TimerTriggerOutput struct{ *pulumi.OutputState }

func (TimerTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimerTrigger)(nil)).Elem()
}

func (o TimerTriggerOutput) ToTimerTriggerOutput() TimerTriggerOutput {
	return o
}

func (o TimerTriggerOutput) ToTimerTriggerOutputWithContext(ctx context.Context) TimerTriggerOutput {
	return o
}

// The name of the trigger.
func (o TimerTriggerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TimerTrigger) string { return v.Name }).(pulumi.StringOutput)
}

// The CRON expression for the task schedule
func (o TimerTriggerOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v TimerTrigger) string { return v.Schedule }).(pulumi.StringOutput)
}

// The current status of trigger.
func (o TimerTriggerOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimerTrigger) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type TimerTriggerArrayOutput struct{ *pulumi.OutputState }

func (TimerTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimerTrigger)(nil)).Elem()
}

func (o TimerTriggerArrayOutput) ToTimerTriggerArrayOutput() TimerTriggerArrayOutput {
	return o
}

func (o TimerTriggerArrayOutput) ToTimerTriggerArrayOutputWithContext(ctx context.Context) TimerTriggerArrayOutput {
	return o
}

func (o TimerTriggerArrayOutput) Index(i pulumi.IntInput) TimerTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimerTrigger {
		return vs[0].([]TimerTrigger)[vs[1].(int)]
	}).(TimerTriggerOutput)
}

// The properties of a timer trigger.
type TimerTriggerResponse struct {
	// The name of the trigger.
	Name string `pulumi:"name"`
	// The CRON expression for the task schedule
	Schedule string `pulumi:"schedule"`
	// The current status of trigger.
	Status *string `pulumi:"status"`
}

// TimerTriggerResponseInput is an input type that accepts TimerTriggerResponseArgs and TimerTriggerResponseOutput values.
// You can construct a concrete instance of `TimerTriggerResponseInput` via:
//
//          TimerTriggerResponseArgs{...}
type TimerTriggerResponseInput interface {
	pulumi.Input

	ToTimerTriggerResponseOutput() TimerTriggerResponseOutput
	ToTimerTriggerResponseOutputWithContext(context.Context) TimerTriggerResponseOutput
}

// The properties of a timer trigger.
type TimerTriggerResponseArgs struct {
	// The name of the trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The CRON expression for the task schedule
	Schedule pulumi.StringInput `pulumi:"schedule"`
	// The current status of trigger.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (TimerTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimerTriggerResponse)(nil)).Elem()
}

func (i TimerTriggerResponseArgs) ToTimerTriggerResponseOutput() TimerTriggerResponseOutput {
	return i.ToTimerTriggerResponseOutputWithContext(context.Background())
}

func (i TimerTriggerResponseArgs) ToTimerTriggerResponseOutputWithContext(ctx context.Context) TimerTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimerTriggerResponseOutput)
}

// TimerTriggerResponseArrayInput is an input type that accepts TimerTriggerResponseArray and TimerTriggerResponseArrayOutput values.
// You can construct a concrete instance of `TimerTriggerResponseArrayInput` via:
//
//          TimerTriggerResponseArray{ TimerTriggerResponseArgs{...} }
type TimerTriggerResponseArrayInput interface {
	pulumi.Input

	ToTimerTriggerResponseArrayOutput() TimerTriggerResponseArrayOutput
	ToTimerTriggerResponseArrayOutputWithContext(context.Context) TimerTriggerResponseArrayOutput
}

type TimerTriggerResponseArray []TimerTriggerResponseInput

func (TimerTriggerResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimerTriggerResponse)(nil)).Elem()
}

func (i TimerTriggerResponseArray) ToTimerTriggerResponseArrayOutput() TimerTriggerResponseArrayOutput {
	return i.ToTimerTriggerResponseArrayOutputWithContext(context.Background())
}

func (i TimerTriggerResponseArray) ToTimerTriggerResponseArrayOutputWithContext(ctx context.Context) TimerTriggerResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimerTriggerResponseArrayOutput)
}

// The properties of a timer trigger.
type TimerTriggerResponseOutput struct{ *pulumi.OutputState }

func (TimerTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimerTriggerResponse)(nil)).Elem()
}

func (o TimerTriggerResponseOutput) ToTimerTriggerResponseOutput() TimerTriggerResponseOutput {
	return o
}

func (o TimerTriggerResponseOutput) ToTimerTriggerResponseOutputWithContext(ctx context.Context) TimerTriggerResponseOutput {
	return o
}

// The name of the trigger.
func (o TimerTriggerResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TimerTriggerResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The CRON expression for the task schedule
func (o TimerTriggerResponseOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v TimerTriggerResponse) string { return v.Schedule }).(pulumi.StringOutput)
}

// The current status of trigger.
func (o TimerTriggerResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimerTriggerResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type TimerTriggerResponseArrayOutput struct{ *pulumi.OutputState }

func (TimerTriggerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimerTriggerResponse)(nil)).Elem()
}

func (o TimerTriggerResponseArrayOutput) ToTimerTriggerResponseArrayOutput() TimerTriggerResponseArrayOutput {
	return o
}

func (o TimerTriggerResponseArrayOutput) ToTimerTriggerResponseArrayOutputWithContext(ctx context.Context) TimerTriggerResponseArrayOutput {
	return o
}

func (o TimerTriggerResponseArrayOutput) Index(i pulumi.IntInput) TimerTriggerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimerTriggerResponse {
		return vs[0].([]TimerTriggerResponse)[vs[1].(int)]
	}).(TimerTriggerResponseOutput)
}

// The properties of a trigger.
type TriggerProperties struct {
	// The trigger based on base image dependencies.
	BaseImageTrigger *BaseImageTrigger `pulumi:"baseImageTrigger"`
	// The collection of triggers based on source code repository.
	SourceTriggers []SourceTrigger `pulumi:"sourceTriggers"`
	// The collection of timer triggers.
	TimerTriggers []TimerTrigger `pulumi:"timerTriggers"`
}

// TriggerPropertiesInput is an input type that accepts TriggerPropertiesArgs and TriggerPropertiesOutput values.
// You can construct a concrete instance of `TriggerPropertiesInput` via:
//
//          TriggerPropertiesArgs{...}
type TriggerPropertiesInput interface {
	pulumi.Input

	ToTriggerPropertiesOutput() TriggerPropertiesOutput
	ToTriggerPropertiesOutputWithContext(context.Context) TriggerPropertiesOutput
}

// The properties of a trigger.
type TriggerPropertiesArgs struct {
	// The trigger based on base image dependencies.
	BaseImageTrigger BaseImageTriggerPtrInput `pulumi:"baseImageTrigger"`
	// The collection of triggers based on source code repository.
	SourceTriggers SourceTriggerArrayInput `pulumi:"sourceTriggers"`
	// The collection of timer triggers.
	TimerTriggers TimerTriggerArrayInput `pulumi:"timerTriggers"`
}

func (TriggerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerProperties)(nil)).Elem()
}

func (i TriggerPropertiesArgs) ToTriggerPropertiesOutput() TriggerPropertiesOutput {
	return i.ToTriggerPropertiesOutputWithContext(context.Background())
}

func (i TriggerPropertiesArgs) ToTriggerPropertiesOutputWithContext(ctx context.Context) TriggerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPropertiesOutput)
}

func (i TriggerPropertiesArgs) ToTriggerPropertiesPtrOutput() TriggerPropertiesPtrOutput {
	return i.ToTriggerPropertiesPtrOutputWithContext(context.Background())
}

func (i TriggerPropertiesArgs) ToTriggerPropertiesPtrOutputWithContext(ctx context.Context) TriggerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPropertiesOutput).ToTriggerPropertiesPtrOutputWithContext(ctx)
}

// TriggerPropertiesPtrInput is an input type that accepts TriggerPropertiesArgs, TriggerPropertiesPtr and TriggerPropertiesPtrOutput values.
// You can construct a concrete instance of `TriggerPropertiesPtrInput` via:
//
//          TriggerPropertiesArgs{...}
//
//  or:
//
//          nil
type TriggerPropertiesPtrInput interface {
	pulumi.Input

	ToTriggerPropertiesPtrOutput() TriggerPropertiesPtrOutput
	ToTriggerPropertiesPtrOutputWithContext(context.Context) TriggerPropertiesPtrOutput
}

type triggerPropertiesPtrType TriggerPropertiesArgs

func TriggerPropertiesPtr(v *TriggerPropertiesArgs) TriggerPropertiesPtrInput {
	return (*triggerPropertiesPtrType)(v)
}

func (*triggerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerProperties)(nil)).Elem()
}

func (i *triggerPropertiesPtrType) ToTriggerPropertiesPtrOutput() TriggerPropertiesPtrOutput {
	return i.ToTriggerPropertiesPtrOutputWithContext(context.Background())
}

func (i *triggerPropertiesPtrType) ToTriggerPropertiesPtrOutputWithContext(ctx context.Context) TriggerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPropertiesPtrOutput)
}

// The properties of a trigger.
type TriggerPropertiesOutput struct{ *pulumi.OutputState }

func (TriggerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerProperties)(nil)).Elem()
}

func (o TriggerPropertiesOutput) ToTriggerPropertiesOutput() TriggerPropertiesOutput {
	return o
}

func (o TriggerPropertiesOutput) ToTriggerPropertiesOutputWithContext(ctx context.Context) TriggerPropertiesOutput {
	return o
}

func (o TriggerPropertiesOutput) ToTriggerPropertiesPtrOutput() TriggerPropertiesPtrOutput {
	return o.ToTriggerPropertiesPtrOutputWithContext(context.Background())
}

func (o TriggerPropertiesOutput) ToTriggerPropertiesPtrOutputWithContext(ctx context.Context) TriggerPropertiesPtrOutput {
	return o.ApplyT(func(v TriggerProperties) *TriggerProperties {
		return &v
	}).(TriggerPropertiesPtrOutput)
}

// The trigger based on base image dependencies.
func (o TriggerPropertiesOutput) BaseImageTrigger() BaseImageTriggerPtrOutput {
	return o.ApplyT(func(v TriggerProperties) *BaseImageTrigger { return v.BaseImageTrigger }).(BaseImageTriggerPtrOutput)
}

// The collection of triggers based on source code repository.
func (o TriggerPropertiesOutput) SourceTriggers() SourceTriggerArrayOutput {
	return o.ApplyT(func(v TriggerProperties) []SourceTrigger { return v.SourceTriggers }).(SourceTriggerArrayOutput)
}

// The collection of timer triggers.
func (o TriggerPropertiesOutput) TimerTriggers() TimerTriggerArrayOutput {
	return o.ApplyT(func(v TriggerProperties) []TimerTrigger { return v.TimerTriggers }).(TimerTriggerArrayOutput)
}

type TriggerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TriggerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerProperties)(nil)).Elem()
}

func (o TriggerPropertiesPtrOutput) ToTriggerPropertiesPtrOutput() TriggerPropertiesPtrOutput {
	return o
}

func (o TriggerPropertiesPtrOutput) ToTriggerPropertiesPtrOutputWithContext(ctx context.Context) TriggerPropertiesPtrOutput {
	return o
}

func (o TriggerPropertiesPtrOutput) Elem() TriggerPropertiesOutput {
	return o.ApplyT(func(v *TriggerProperties) TriggerProperties { return *v }).(TriggerPropertiesOutput)
}

// The trigger based on base image dependencies.
func (o TriggerPropertiesPtrOutput) BaseImageTrigger() BaseImageTriggerPtrOutput {
	return o.ApplyT(func(v *TriggerProperties) *BaseImageTrigger {
		if v == nil {
			return nil
		}
		return v.BaseImageTrigger
	}).(BaseImageTriggerPtrOutput)
}

// The collection of triggers based on source code repository.
func (o TriggerPropertiesPtrOutput) SourceTriggers() SourceTriggerArrayOutput {
	return o.ApplyT(func(v *TriggerProperties) []SourceTrigger {
		if v == nil {
			return nil
		}
		return v.SourceTriggers
	}).(SourceTriggerArrayOutput)
}

// The collection of timer triggers.
func (o TriggerPropertiesPtrOutput) TimerTriggers() TimerTriggerArrayOutput {
	return o.ApplyT(func(v *TriggerProperties) []TimerTrigger {
		if v == nil {
			return nil
		}
		return v.TimerTriggers
	}).(TimerTriggerArrayOutput)
}

// The properties of a trigger.
type TriggerPropertiesResponse struct {
	// The trigger based on base image dependencies.
	BaseImageTrigger *BaseImageTriggerResponse `pulumi:"baseImageTrigger"`
	// The collection of triggers based on source code repository.
	SourceTriggers []SourceTriggerResponse `pulumi:"sourceTriggers"`
	// The collection of timer triggers.
	TimerTriggers []TimerTriggerResponse `pulumi:"timerTriggers"`
}

// TriggerPropertiesResponseInput is an input type that accepts TriggerPropertiesResponseArgs and TriggerPropertiesResponseOutput values.
// You can construct a concrete instance of `TriggerPropertiesResponseInput` via:
//
//          TriggerPropertiesResponseArgs{...}
type TriggerPropertiesResponseInput interface {
	pulumi.Input

	ToTriggerPropertiesResponseOutput() TriggerPropertiesResponseOutput
	ToTriggerPropertiesResponseOutputWithContext(context.Context) TriggerPropertiesResponseOutput
}

// The properties of a trigger.
type TriggerPropertiesResponseArgs struct {
	// The trigger based on base image dependencies.
	BaseImageTrigger BaseImageTriggerResponsePtrInput `pulumi:"baseImageTrigger"`
	// The collection of triggers based on source code repository.
	SourceTriggers SourceTriggerResponseArrayInput `pulumi:"sourceTriggers"`
	// The collection of timer triggers.
	TimerTriggers TimerTriggerResponseArrayInput `pulumi:"timerTriggers"`
}

func (TriggerPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerPropertiesResponse)(nil)).Elem()
}

func (i TriggerPropertiesResponseArgs) ToTriggerPropertiesResponseOutput() TriggerPropertiesResponseOutput {
	return i.ToTriggerPropertiesResponseOutputWithContext(context.Background())
}

func (i TriggerPropertiesResponseArgs) ToTriggerPropertiesResponseOutputWithContext(ctx context.Context) TriggerPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPropertiesResponseOutput)
}

func (i TriggerPropertiesResponseArgs) ToTriggerPropertiesResponsePtrOutput() TriggerPropertiesResponsePtrOutput {
	return i.ToTriggerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i TriggerPropertiesResponseArgs) ToTriggerPropertiesResponsePtrOutputWithContext(ctx context.Context) TriggerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPropertiesResponseOutput).ToTriggerPropertiesResponsePtrOutputWithContext(ctx)
}

// TriggerPropertiesResponsePtrInput is an input type that accepts TriggerPropertiesResponseArgs, TriggerPropertiesResponsePtr and TriggerPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `TriggerPropertiesResponsePtrInput` via:
//
//          TriggerPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type TriggerPropertiesResponsePtrInput interface {
	pulumi.Input

	ToTriggerPropertiesResponsePtrOutput() TriggerPropertiesResponsePtrOutput
	ToTriggerPropertiesResponsePtrOutputWithContext(context.Context) TriggerPropertiesResponsePtrOutput
}

type triggerPropertiesResponsePtrType TriggerPropertiesResponseArgs

func TriggerPropertiesResponsePtr(v *TriggerPropertiesResponseArgs) TriggerPropertiesResponsePtrInput {
	return (*triggerPropertiesResponsePtrType)(v)
}

func (*triggerPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerPropertiesResponse)(nil)).Elem()
}

func (i *triggerPropertiesResponsePtrType) ToTriggerPropertiesResponsePtrOutput() TriggerPropertiesResponsePtrOutput {
	return i.ToTriggerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *triggerPropertiesResponsePtrType) ToTriggerPropertiesResponsePtrOutputWithContext(ctx context.Context) TriggerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPropertiesResponsePtrOutput)
}

// The properties of a trigger.
type TriggerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TriggerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerPropertiesResponse)(nil)).Elem()
}

func (o TriggerPropertiesResponseOutput) ToTriggerPropertiesResponseOutput() TriggerPropertiesResponseOutput {
	return o
}

func (o TriggerPropertiesResponseOutput) ToTriggerPropertiesResponseOutputWithContext(ctx context.Context) TriggerPropertiesResponseOutput {
	return o
}

func (o TriggerPropertiesResponseOutput) ToTriggerPropertiesResponsePtrOutput() TriggerPropertiesResponsePtrOutput {
	return o.ToTriggerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o TriggerPropertiesResponseOutput) ToTriggerPropertiesResponsePtrOutputWithContext(ctx context.Context) TriggerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TriggerPropertiesResponse) *TriggerPropertiesResponse {
		return &v
	}).(TriggerPropertiesResponsePtrOutput)
}

// The trigger based on base image dependencies.
func (o TriggerPropertiesResponseOutput) BaseImageTrigger() BaseImageTriggerResponsePtrOutput {
	return o.ApplyT(func(v TriggerPropertiesResponse) *BaseImageTriggerResponse { return v.BaseImageTrigger }).(BaseImageTriggerResponsePtrOutput)
}

// The collection of triggers based on source code repository.
func (o TriggerPropertiesResponseOutput) SourceTriggers() SourceTriggerResponseArrayOutput {
	return o.ApplyT(func(v TriggerPropertiesResponse) []SourceTriggerResponse { return v.SourceTriggers }).(SourceTriggerResponseArrayOutput)
}

// The collection of timer triggers.
func (o TriggerPropertiesResponseOutput) TimerTriggers() TimerTriggerResponseArrayOutput {
	return o.ApplyT(func(v TriggerPropertiesResponse) []TimerTriggerResponse { return v.TimerTriggers }).(TimerTriggerResponseArrayOutput)
}

type TriggerPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TriggerPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerPropertiesResponse)(nil)).Elem()
}

func (o TriggerPropertiesResponsePtrOutput) ToTriggerPropertiesResponsePtrOutput() TriggerPropertiesResponsePtrOutput {
	return o
}

func (o TriggerPropertiesResponsePtrOutput) ToTriggerPropertiesResponsePtrOutputWithContext(ctx context.Context) TriggerPropertiesResponsePtrOutput {
	return o
}

func (o TriggerPropertiesResponsePtrOutput) Elem() TriggerPropertiesResponseOutput {
	return o.ApplyT(func(v *TriggerPropertiesResponse) TriggerPropertiesResponse { return *v }).(TriggerPropertiesResponseOutput)
}

// The trigger based on base image dependencies.
func (o TriggerPropertiesResponsePtrOutput) BaseImageTrigger() BaseImageTriggerResponsePtrOutput {
	return o.ApplyT(func(v *TriggerPropertiesResponse) *BaseImageTriggerResponse {
		if v == nil {
			return nil
		}
		return v.BaseImageTrigger
	}).(BaseImageTriggerResponsePtrOutput)
}

// The collection of triggers based on source code repository.
func (o TriggerPropertiesResponsePtrOutput) SourceTriggers() SourceTriggerResponseArrayOutput {
	return o.ApplyT(func(v *TriggerPropertiesResponse) []SourceTriggerResponse {
		if v == nil {
			return nil
		}
		return v.SourceTriggers
	}).(SourceTriggerResponseArrayOutput)
}

// The collection of timer triggers.
func (o TriggerPropertiesResponsePtrOutput) TimerTriggers() TimerTriggerResponseArrayOutput {
	return o.ApplyT(func(v *TriggerPropertiesResponse) []TimerTriggerResponse {
		if v == nil {
			return nil
		}
		return v.TimerTriggers
	}).(TimerTriggerResponseArrayOutput)
}

// The content trust policy for a container registry.
type TrustPolicy struct {
	// The value that indicates whether the policy is enabled or not.
	Status *string `pulumi:"status"`
	// The type of trust policy.
	Type *string `pulumi:"type"`
}

// TrustPolicyInput is an input type that accepts TrustPolicyArgs and TrustPolicyOutput values.
// You can construct a concrete instance of `TrustPolicyInput` via:
//
//          TrustPolicyArgs{...}
type TrustPolicyInput interface {
	pulumi.Input

	ToTrustPolicyOutput() TrustPolicyOutput
	ToTrustPolicyOutputWithContext(context.Context) TrustPolicyOutput
}

// The content trust policy for a container registry.
type TrustPolicyArgs struct {
	// The value that indicates whether the policy is enabled or not.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The type of trust policy.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (TrustPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustPolicy)(nil)).Elem()
}

func (i TrustPolicyArgs) ToTrustPolicyOutput() TrustPolicyOutput {
	return i.ToTrustPolicyOutputWithContext(context.Background())
}

func (i TrustPolicyArgs) ToTrustPolicyOutputWithContext(ctx context.Context) TrustPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustPolicyOutput)
}

func (i TrustPolicyArgs) ToTrustPolicyPtrOutput() TrustPolicyPtrOutput {
	return i.ToTrustPolicyPtrOutputWithContext(context.Background())
}

func (i TrustPolicyArgs) ToTrustPolicyPtrOutputWithContext(ctx context.Context) TrustPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustPolicyOutput).ToTrustPolicyPtrOutputWithContext(ctx)
}

// TrustPolicyPtrInput is an input type that accepts TrustPolicyArgs, TrustPolicyPtr and TrustPolicyPtrOutput values.
// You can construct a concrete instance of `TrustPolicyPtrInput` via:
//
//          TrustPolicyArgs{...}
//
//  or:
//
//          nil
type TrustPolicyPtrInput interface {
	pulumi.Input

	ToTrustPolicyPtrOutput() TrustPolicyPtrOutput
	ToTrustPolicyPtrOutputWithContext(context.Context) TrustPolicyPtrOutput
}

type trustPolicyPtrType TrustPolicyArgs

func TrustPolicyPtr(v *TrustPolicyArgs) TrustPolicyPtrInput {
	return (*trustPolicyPtrType)(v)
}

func (*trustPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrustPolicy)(nil)).Elem()
}

func (i *trustPolicyPtrType) ToTrustPolicyPtrOutput() TrustPolicyPtrOutput {
	return i.ToTrustPolicyPtrOutputWithContext(context.Background())
}

func (i *trustPolicyPtrType) ToTrustPolicyPtrOutputWithContext(ctx context.Context) TrustPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustPolicyPtrOutput)
}

// The content trust policy for a container registry.
type TrustPolicyOutput struct{ *pulumi.OutputState }

func (TrustPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustPolicy)(nil)).Elem()
}

func (o TrustPolicyOutput) ToTrustPolicyOutput() TrustPolicyOutput {
	return o
}

func (o TrustPolicyOutput) ToTrustPolicyOutputWithContext(ctx context.Context) TrustPolicyOutput {
	return o
}

func (o TrustPolicyOutput) ToTrustPolicyPtrOutput() TrustPolicyPtrOutput {
	return o.ToTrustPolicyPtrOutputWithContext(context.Background())
}

func (o TrustPolicyOutput) ToTrustPolicyPtrOutputWithContext(ctx context.Context) TrustPolicyPtrOutput {
	return o.ApplyT(func(v TrustPolicy) *TrustPolicy {
		return &v
	}).(TrustPolicyPtrOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o TrustPolicyOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrustPolicy) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The type of trust policy.
func (o TrustPolicyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrustPolicy) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TrustPolicyPtrOutput struct{ *pulumi.OutputState }

func (TrustPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrustPolicy)(nil)).Elem()
}

func (o TrustPolicyPtrOutput) ToTrustPolicyPtrOutput() TrustPolicyPtrOutput {
	return o
}

func (o TrustPolicyPtrOutput) ToTrustPolicyPtrOutputWithContext(ctx context.Context) TrustPolicyPtrOutput {
	return o
}

func (o TrustPolicyPtrOutput) Elem() TrustPolicyOutput {
	return o.ApplyT(func(v *TrustPolicy) TrustPolicy { return *v }).(TrustPolicyOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o TrustPolicyPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrustPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The type of trust policy.
func (o TrustPolicyPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrustPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The content trust policy for a container registry.
type TrustPolicyResponse struct {
	// The value that indicates whether the policy is enabled or not.
	Status *string `pulumi:"status"`
	// The type of trust policy.
	Type *string `pulumi:"type"`
}

// TrustPolicyResponseInput is an input type that accepts TrustPolicyResponseArgs and TrustPolicyResponseOutput values.
// You can construct a concrete instance of `TrustPolicyResponseInput` via:
//
//          TrustPolicyResponseArgs{...}
type TrustPolicyResponseInput interface {
	pulumi.Input

	ToTrustPolicyResponseOutput() TrustPolicyResponseOutput
	ToTrustPolicyResponseOutputWithContext(context.Context) TrustPolicyResponseOutput
}

// The content trust policy for a container registry.
type TrustPolicyResponseArgs struct {
	// The value that indicates whether the policy is enabled or not.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The type of trust policy.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (TrustPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustPolicyResponse)(nil)).Elem()
}

func (i TrustPolicyResponseArgs) ToTrustPolicyResponseOutput() TrustPolicyResponseOutput {
	return i.ToTrustPolicyResponseOutputWithContext(context.Background())
}

func (i TrustPolicyResponseArgs) ToTrustPolicyResponseOutputWithContext(ctx context.Context) TrustPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustPolicyResponseOutput)
}

func (i TrustPolicyResponseArgs) ToTrustPolicyResponsePtrOutput() TrustPolicyResponsePtrOutput {
	return i.ToTrustPolicyResponsePtrOutputWithContext(context.Background())
}

func (i TrustPolicyResponseArgs) ToTrustPolicyResponsePtrOutputWithContext(ctx context.Context) TrustPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustPolicyResponseOutput).ToTrustPolicyResponsePtrOutputWithContext(ctx)
}

// TrustPolicyResponsePtrInput is an input type that accepts TrustPolicyResponseArgs, TrustPolicyResponsePtr and TrustPolicyResponsePtrOutput values.
// You can construct a concrete instance of `TrustPolicyResponsePtrInput` via:
//
//          TrustPolicyResponseArgs{...}
//
//  or:
//
//          nil
type TrustPolicyResponsePtrInput interface {
	pulumi.Input

	ToTrustPolicyResponsePtrOutput() TrustPolicyResponsePtrOutput
	ToTrustPolicyResponsePtrOutputWithContext(context.Context) TrustPolicyResponsePtrOutput
}

type trustPolicyResponsePtrType TrustPolicyResponseArgs

func TrustPolicyResponsePtr(v *TrustPolicyResponseArgs) TrustPolicyResponsePtrInput {
	return (*trustPolicyResponsePtrType)(v)
}

func (*trustPolicyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrustPolicyResponse)(nil)).Elem()
}

func (i *trustPolicyResponsePtrType) ToTrustPolicyResponsePtrOutput() TrustPolicyResponsePtrOutput {
	return i.ToTrustPolicyResponsePtrOutputWithContext(context.Background())
}

func (i *trustPolicyResponsePtrType) ToTrustPolicyResponsePtrOutputWithContext(ctx context.Context) TrustPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustPolicyResponsePtrOutput)
}

// The content trust policy for a container registry.
type TrustPolicyResponseOutput struct{ *pulumi.OutputState }

func (TrustPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustPolicyResponse)(nil)).Elem()
}

func (o TrustPolicyResponseOutput) ToTrustPolicyResponseOutput() TrustPolicyResponseOutput {
	return o
}

func (o TrustPolicyResponseOutput) ToTrustPolicyResponseOutputWithContext(ctx context.Context) TrustPolicyResponseOutput {
	return o
}

func (o TrustPolicyResponseOutput) ToTrustPolicyResponsePtrOutput() TrustPolicyResponsePtrOutput {
	return o.ToTrustPolicyResponsePtrOutputWithContext(context.Background())
}

func (o TrustPolicyResponseOutput) ToTrustPolicyResponsePtrOutputWithContext(ctx context.Context) TrustPolicyResponsePtrOutput {
	return o.ApplyT(func(v TrustPolicyResponse) *TrustPolicyResponse {
		return &v
	}).(TrustPolicyResponsePtrOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o TrustPolicyResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrustPolicyResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The type of trust policy.
func (o TrustPolicyResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrustPolicyResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TrustPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (TrustPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrustPolicyResponse)(nil)).Elem()
}

func (o TrustPolicyResponsePtrOutput) ToTrustPolicyResponsePtrOutput() TrustPolicyResponsePtrOutput {
	return o
}

func (o TrustPolicyResponsePtrOutput) ToTrustPolicyResponsePtrOutputWithContext(ctx context.Context) TrustPolicyResponsePtrOutput {
	return o
}

func (o TrustPolicyResponsePtrOutput) Elem() TrustPolicyResponseOutput {
	return o.ApplyT(func(v *TrustPolicyResponse) TrustPolicyResponse { return *v }).(TrustPolicyResponseOutput)
}

// The value that indicates whether the policy is enabled or not.
func (o TrustPolicyResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrustPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The type of trust policy.
func (o TrustPolicyResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrustPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Virtual network rule.
type VirtualNetworkRule struct {
	// The action of virtual network rule.
	Action *string `pulumi:"action"`
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
	Id string `pulumi:"id"`
}

// VirtualNetworkRuleInput is an input type that accepts VirtualNetworkRuleArgs and VirtualNetworkRuleOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleInput` via:
//
//          VirtualNetworkRuleArgs{...}
type VirtualNetworkRuleInput interface {
	pulumi.Input

	ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput
	ToVirtualNetworkRuleOutputWithContext(context.Context) VirtualNetworkRuleOutput
}

// Virtual network rule.
type VirtualNetworkRuleArgs struct {
	// The action of virtual network rule.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
	Id pulumi.StringInput `pulumi:"id"`
}

func (VirtualNetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRule)(nil)).Elem()
}

func (i VirtualNetworkRuleArgs) ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput {
	return i.ToVirtualNetworkRuleOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleArgs) ToVirtualNetworkRuleOutputWithContext(ctx context.Context) VirtualNetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleOutput)
}

// VirtualNetworkRuleArrayInput is an input type that accepts VirtualNetworkRuleArray and VirtualNetworkRuleArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleArrayInput` via:
//
//          VirtualNetworkRuleArray{ VirtualNetworkRuleArgs{...} }
type VirtualNetworkRuleArrayInput interface {
	pulumi.Input

	ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput
	ToVirtualNetworkRuleArrayOutputWithContext(context.Context) VirtualNetworkRuleArrayOutput
}

type VirtualNetworkRuleArray []VirtualNetworkRuleInput

func (VirtualNetworkRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRule)(nil)).Elem()
}

func (i VirtualNetworkRuleArray) ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput {
	return i.ToVirtualNetworkRuleArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleArray) ToVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleArrayOutput)
}

// Virtual network rule.
type VirtualNetworkRuleOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRule)(nil)).Elem()
}

func (o VirtualNetworkRuleOutput) ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput {
	return o
}

func (o VirtualNetworkRuleOutput) ToVirtualNetworkRuleOutputWithContext(ctx context.Context) VirtualNetworkRuleOutput {
	return o
}

// The action of virtual network rule.
func (o VirtualNetworkRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
func (o VirtualNetworkRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkRule) string { return v.Id }).(pulumi.StringOutput)
}

type VirtualNetworkRuleArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRule)(nil)).Elem()
}

func (o VirtualNetworkRuleArrayOutput) ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput {
	return o
}

func (o VirtualNetworkRuleArrayOutput) ToVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleArrayOutput {
	return o
}

func (o VirtualNetworkRuleArrayOutput) Index(i pulumi.IntInput) VirtualNetworkRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkRule {
		return vs[0].([]VirtualNetworkRule)[vs[1].(int)]
	}).(VirtualNetworkRuleOutput)
}

// Virtual network rule.
type VirtualNetworkRuleResponse struct {
	// The action of virtual network rule.
	Action *string `pulumi:"action"`
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
	Id string `pulumi:"id"`
}

// VirtualNetworkRuleResponseInput is an input type that accepts VirtualNetworkRuleResponseArgs and VirtualNetworkRuleResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleResponseInput` via:
//
//          VirtualNetworkRuleResponseArgs{...}
type VirtualNetworkRuleResponseInput interface {
	pulumi.Input

	ToVirtualNetworkRuleResponseOutput() VirtualNetworkRuleResponseOutput
	ToVirtualNetworkRuleResponseOutputWithContext(context.Context) VirtualNetworkRuleResponseOutput
}

// Virtual network rule.
type VirtualNetworkRuleResponseArgs struct {
	// The action of virtual network rule.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
	Id pulumi.StringInput `pulumi:"id"`
}

func (VirtualNetworkRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRuleResponse)(nil)).Elem()
}

func (i VirtualNetworkRuleResponseArgs) ToVirtualNetworkRuleResponseOutput() VirtualNetworkRuleResponseOutput {
	return i.ToVirtualNetworkRuleResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleResponseArgs) ToVirtualNetworkRuleResponseOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleResponseOutput)
}

// VirtualNetworkRuleResponseArrayInput is an input type that accepts VirtualNetworkRuleResponseArray and VirtualNetworkRuleResponseArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleResponseArrayInput` via:
//
//          VirtualNetworkRuleResponseArray{ VirtualNetworkRuleResponseArgs{...} }
type VirtualNetworkRuleResponseArrayInput interface {
	pulumi.Input

	ToVirtualNetworkRuleResponseArrayOutput() VirtualNetworkRuleResponseArrayOutput
	ToVirtualNetworkRuleResponseArrayOutputWithContext(context.Context) VirtualNetworkRuleResponseArrayOutput
}

type VirtualNetworkRuleResponseArray []VirtualNetworkRuleResponseInput

func (VirtualNetworkRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRuleResponse)(nil)).Elem()
}

func (i VirtualNetworkRuleResponseArray) ToVirtualNetworkRuleResponseArrayOutput() VirtualNetworkRuleResponseArrayOutput {
	return i.ToVirtualNetworkRuleResponseArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleResponseArray) ToVirtualNetworkRuleResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleResponseArrayOutput)
}

// Virtual network rule.
type VirtualNetworkRuleResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRuleResponse)(nil)).Elem()
}

func (o VirtualNetworkRuleResponseOutput) ToVirtualNetworkRuleResponseOutput() VirtualNetworkRuleResponseOutput {
	return o
}

func (o VirtualNetworkRuleResponseOutput) ToVirtualNetworkRuleResponseOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseOutput {
	return o
}

// The action of virtual network rule.
func (o VirtualNetworkRuleResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRuleResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
func (o VirtualNetworkRuleResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkRuleResponse) string { return v.Id }).(pulumi.StringOutput)
}

type VirtualNetworkRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRuleResponse)(nil)).Elem()
}

func (o VirtualNetworkRuleResponseArrayOutput) ToVirtualNetworkRuleResponseArrayOutput() VirtualNetworkRuleResponseArrayOutput {
	return o
}

func (o VirtualNetworkRuleResponseArrayOutput) ToVirtualNetworkRuleResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseArrayOutput {
	return o
}

func (o VirtualNetworkRuleResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkRuleResponse {
		return vs[0].([]VirtualNetworkRuleResponse)[vs[1].(int)]
	}).(VirtualNetworkRuleResponseOutput)
}

// An object that represents a webhook for a container registry.
type WebhookType struct {
	// The location of the resource. This cannot be changed after the resource is created.
	Location string `pulumi:"location"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The properties of the webhook.
	Properties WebhookPropertiesResponse `pulumi:"properties"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type string `pulumi:"type"`
}

// WebhookTypeInput is an input type that accepts WebhookTypeArgs and WebhookTypeOutput values.
// You can construct a concrete instance of `WebhookTypeInput` via:
//
//          WebhookTypeArgs{...}
type WebhookTypeInput interface {
	pulumi.Input

	ToWebhookTypeOutput() WebhookTypeOutput
	ToWebhookTypeOutputWithContext(context.Context) WebhookTypeOutput
}

// An object that represents a webhook for a container registry.
type WebhookTypeArgs struct {
	// The location of the resource. This cannot be changed after the resource is created.
	Location pulumi.StringInput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of the webhook.
	Properties WebhookPropertiesResponseInput `pulumi:"properties"`
	// The tags of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebhookTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookType)(nil)).Elem()
}

func (i WebhookTypeArgs) ToWebhookTypeOutput() WebhookTypeOutput {
	return i.ToWebhookTypeOutputWithContext(context.Background())
}

func (i WebhookTypeArgs) ToWebhookTypeOutputWithContext(ctx context.Context) WebhookTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookTypeOutput)
}

// An object that represents a webhook for a container registry.
type WebhookTypeOutput struct{ *pulumi.OutputState }

func (WebhookTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookType)(nil)).Elem()
}

func (o WebhookTypeOutput) ToWebhookTypeOutput() WebhookTypeOutput {
	return o
}

func (o WebhookTypeOutput) ToWebhookTypeOutputWithContext(ctx context.Context) WebhookTypeOutput {
	return o
}

// The location of the resource. This cannot be changed after the resource is created.
func (o WebhookTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookType) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource.
func (o WebhookTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of the webhook.
func (o WebhookTypeOutput) Properties() WebhookPropertiesResponseOutput {
	return o.ApplyT(func(v WebhookType) WebhookPropertiesResponse { return v.Properties }).(WebhookPropertiesResponseOutput)
}

// The tags of the resource.
func (o WebhookTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v WebhookType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o WebhookTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookType) string { return v.Type }).(pulumi.StringOutput)
}

// The parameters for creating the properties of a webhook.
type WebhookPropertiesCreateParameters struct {
	// The list of actions that trigger the webhook to post notifications.
	Actions []string `pulumi:"actions"`
	// Custom headers that will be added to the webhook notifications.
	CustomHeaders map[string]string `pulumi:"customHeaders"`
	// The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.
	Scope *string `pulumi:"scope"`
	// The service URI for the webhook to post notifications.
	ServiceUri string `pulumi:"serviceUri"`
	// The status of the webhook at the time the operation was called.
	Status *string `pulumi:"status"`
}

// WebhookPropertiesCreateParametersInput is an input type that accepts WebhookPropertiesCreateParametersArgs and WebhookPropertiesCreateParametersOutput values.
// You can construct a concrete instance of `WebhookPropertiesCreateParametersInput` via:
//
//          WebhookPropertiesCreateParametersArgs{...}
type WebhookPropertiesCreateParametersInput interface {
	pulumi.Input

	ToWebhookPropertiesCreateParametersOutput() WebhookPropertiesCreateParametersOutput
	ToWebhookPropertiesCreateParametersOutputWithContext(context.Context) WebhookPropertiesCreateParametersOutput
}

// The parameters for creating the properties of a webhook.
type WebhookPropertiesCreateParametersArgs struct {
	// The list of actions that trigger the webhook to post notifications.
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// Custom headers that will be added to the webhook notifications.
	CustomHeaders pulumi.StringMapInput `pulumi:"customHeaders"`
	// The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The service URI for the webhook to post notifications.
	ServiceUri pulumi.StringInput `pulumi:"serviceUri"`
	// The status of the webhook at the time the operation was called.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (WebhookPropertiesCreateParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookPropertiesCreateParameters)(nil)).Elem()
}

func (i WebhookPropertiesCreateParametersArgs) ToWebhookPropertiesCreateParametersOutput() WebhookPropertiesCreateParametersOutput {
	return i.ToWebhookPropertiesCreateParametersOutputWithContext(context.Background())
}

func (i WebhookPropertiesCreateParametersArgs) ToWebhookPropertiesCreateParametersOutputWithContext(ctx context.Context) WebhookPropertiesCreateParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookPropertiesCreateParametersOutput)
}

func (i WebhookPropertiesCreateParametersArgs) ToWebhookPropertiesCreateParametersPtrOutput() WebhookPropertiesCreateParametersPtrOutput {
	return i.ToWebhookPropertiesCreateParametersPtrOutputWithContext(context.Background())
}

func (i WebhookPropertiesCreateParametersArgs) ToWebhookPropertiesCreateParametersPtrOutputWithContext(ctx context.Context) WebhookPropertiesCreateParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookPropertiesCreateParametersOutput).ToWebhookPropertiesCreateParametersPtrOutputWithContext(ctx)
}

// WebhookPropertiesCreateParametersPtrInput is an input type that accepts WebhookPropertiesCreateParametersArgs, WebhookPropertiesCreateParametersPtr and WebhookPropertiesCreateParametersPtrOutput values.
// You can construct a concrete instance of `WebhookPropertiesCreateParametersPtrInput` via:
//
//          WebhookPropertiesCreateParametersArgs{...}
//
//  or:
//
//          nil
type WebhookPropertiesCreateParametersPtrInput interface {
	pulumi.Input

	ToWebhookPropertiesCreateParametersPtrOutput() WebhookPropertiesCreateParametersPtrOutput
	ToWebhookPropertiesCreateParametersPtrOutputWithContext(context.Context) WebhookPropertiesCreateParametersPtrOutput
}

type webhookPropertiesCreateParametersPtrType WebhookPropertiesCreateParametersArgs

func WebhookPropertiesCreateParametersPtr(v *WebhookPropertiesCreateParametersArgs) WebhookPropertiesCreateParametersPtrInput {
	return (*webhookPropertiesCreateParametersPtrType)(v)
}

func (*webhookPropertiesCreateParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookPropertiesCreateParameters)(nil)).Elem()
}

func (i *webhookPropertiesCreateParametersPtrType) ToWebhookPropertiesCreateParametersPtrOutput() WebhookPropertiesCreateParametersPtrOutput {
	return i.ToWebhookPropertiesCreateParametersPtrOutputWithContext(context.Background())
}

func (i *webhookPropertiesCreateParametersPtrType) ToWebhookPropertiesCreateParametersPtrOutputWithContext(ctx context.Context) WebhookPropertiesCreateParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookPropertiesCreateParametersPtrOutput)
}

// The parameters for creating the properties of a webhook.
type WebhookPropertiesCreateParametersOutput struct{ *pulumi.OutputState }

func (WebhookPropertiesCreateParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookPropertiesCreateParameters)(nil)).Elem()
}

func (o WebhookPropertiesCreateParametersOutput) ToWebhookPropertiesCreateParametersOutput() WebhookPropertiesCreateParametersOutput {
	return o
}

func (o WebhookPropertiesCreateParametersOutput) ToWebhookPropertiesCreateParametersOutputWithContext(ctx context.Context) WebhookPropertiesCreateParametersOutput {
	return o
}

func (o WebhookPropertiesCreateParametersOutput) ToWebhookPropertiesCreateParametersPtrOutput() WebhookPropertiesCreateParametersPtrOutput {
	return o.ToWebhookPropertiesCreateParametersPtrOutputWithContext(context.Background())
}

func (o WebhookPropertiesCreateParametersOutput) ToWebhookPropertiesCreateParametersPtrOutputWithContext(ctx context.Context) WebhookPropertiesCreateParametersPtrOutput {
	return o.ApplyT(func(v WebhookPropertiesCreateParameters) *WebhookPropertiesCreateParameters {
		return &v
	}).(WebhookPropertiesCreateParametersPtrOutput)
}

// The list of actions that trigger the webhook to post notifications.
func (o WebhookPropertiesCreateParametersOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WebhookPropertiesCreateParameters) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// Custom headers that will be added to the webhook notifications.
func (o WebhookPropertiesCreateParametersOutput) CustomHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v WebhookPropertiesCreateParameters) map[string]string { return v.CustomHeaders }).(pulumi.StringMapOutput)
}

// The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.
func (o WebhookPropertiesCreateParametersOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookPropertiesCreateParameters) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The service URI for the webhook to post notifications.
func (o WebhookPropertiesCreateParametersOutput) ServiceUri() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookPropertiesCreateParameters) string { return v.ServiceUri }).(pulumi.StringOutput)
}

// The status of the webhook at the time the operation was called.
func (o WebhookPropertiesCreateParametersOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookPropertiesCreateParameters) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type WebhookPropertiesCreateParametersPtrOutput struct{ *pulumi.OutputState }

func (WebhookPropertiesCreateParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookPropertiesCreateParameters)(nil)).Elem()
}

func (o WebhookPropertiesCreateParametersPtrOutput) ToWebhookPropertiesCreateParametersPtrOutput() WebhookPropertiesCreateParametersPtrOutput {
	return o
}

func (o WebhookPropertiesCreateParametersPtrOutput) ToWebhookPropertiesCreateParametersPtrOutputWithContext(ctx context.Context) WebhookPropertiesCreateParametersPtrOutput {
	return o
}

func (o WebhookPropertiesCreateParametersPtrOutput) Elem() WebhookPropertiesCreateParametersOutput {
	return o.ApplyT(func(v *WebhookPropertiesCreateParameters) WebhookPropertiesCreateParameters { return *v }).(WebhookPropertiesCreateParametersOutput)
}

// The list of actions that trigger the webhook to post notifications.
func (o WebhookPropertiesCreateParametersPtrOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WebhookPropertiesCreateParameters) []string {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(pulumi.StringArrayOutput)
}

// Custom headers that will be added to the webhook notifications.
func (o WebhookPropertiesCreateParametersPtrOutput) CustomHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WebhookPropertiesCreateParameters) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomHeaders
	}).(pulumi.StringMapOutput)
}

// The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.
func (o WebhookPropertiesCreateParametersPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookPropertiesCreateParameters) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// The service URI for the webhook to post notifications.
func (o WebhookPropertiesCreateParametersPtrOutput) ServiceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookPropertiesCreateParameters) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceUri
	}).(pulumi.StringPtrOutput)
}

// The status of the webhook at the time the operation was called.
func (o WebhookPropertiesCreateParametersPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookPropertiesCreateParameters) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The properties of a webhook.
type WebhookPropertiesResponse struct {
	// The list of actions that trigger the webhook to post notifications.
	Actions []string `pulumi:"actions"`
	// The provisioning state of the webhook at the time the operation was called.
	ProvisioningState string `pulumi:"provisioningState"`
	// The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.
	Scope *string `pulumi:"scope"`
	// The status of the webhook at the time the operation was called.
	Status *string `pulumi:"status"`
}

// WebhookPropertiesResponseInput is an input type that accepts WebhookPropertiesResponseArgs and WebhookPropertiesResponseOutput values.
// You can construct a concrete instance of `WebhookPropertiesResponseInput` via:
//
//          WebhookPropertiesResponseArgs{...}
type WebhookPropertiesResponseInput interface {
	pulumi.Input

	ToWebhookPropertiesResponseOutput() WebhookPropertiesResponseOutput
	ToWebhookPropertiesResponseOutputWithContext(context.Context) WebhookPropertiesResponseOutput
}

// The properties of a webhook.
type WebhookPropertiesResponseArgs struct {
	// The list of actions that trigger the webhook to post notifications.
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// The provisioning state of the webhook at the time the operation was called.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The status of the webhook at the time the operation was called.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (WebhookPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookPropertiesResponse)(nil)).Elem()
}

func (i WebhookPropertiesResponseArgs) ToWebhookPropertiesResponseOutput() WebhookPropertiesResponseOutput {
	return i.ToWebhookPropertiesResponseOutputWithContext(context.Background())
}

func (i WebhookPropertiesResponseArgs) ToWebhookPropertiesResponseOutputWithContext(ctx context.Context) WebhookPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookPropertiesResponseOutput)
}

func (i WebhookPropertiesResponseArgs) ToWebhookPropertiesResponsePtrOutput() WebhookPropertiesResponsePtrOutput {
	return i.ToWebhookPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i WebhookPropertiesResponseArgs) ToWebhookPropertiesResponsePtrOutputWithContext(ctx context.Context) WebhookPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookPropertiesResponseOutput).ToWebhookPropertiesResponsePtrOutputWithContext(ctx)
}

// WebhookPropertiesResponsePtrInput is an input type that accepts WebhookPropertiesResponseArgs, WebhookPropertiesResponsePtr and WebhookPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `WebhookPropertiesResponsePtrInput` via:
//
//          WebhookPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type WebhookPropertiesResponsePtrInput interface {
	pulumi.Input

	ToWebhookPropertiesResponsePtrOutput() WebhookPropertiesResponsePtrOutput
	ToWebhookPropertiesResponsePtrOutputWithContext(context.Context) WebhookPropertiesResponsePtrOutput
}

type webhookPropertiesResponsePtrType WebhookPropertiesResponseArgs

func WebhookPropertiesResponsePtr(v *WebhookPropertiesResponseArgs) WebhookPropertiesResponsePtrInput {
	return (*webhookPropertiesResponsePtrType)(v)
}

func (*webhookPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookPropertiesResponse)(nil)).Elem()
}

func (i *webhookPropertiesResponsePtrType) ToWebhookPropertiesResponsePtrOutput() WebhookPropertiesResponsePtrOutput {
	return i.ToWebhookPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *webhookPropertiesResponsePtrType) ToWebhookPropertiesResponsePtrOutputWithContext(ctx context.Context) WebhookPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookPropertiesResponsePtrOutput)
}

// The properties of a webhook.
type WebhookPropertiesResponseOutput struct{ *pulumi.OutputState }

func (WebhookPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookPropertiesResponse)(nil)).Elem()
}

func (o WebhookPropertiesResponseOutput) ToWebhookPropertiesResponseOutput() WebhookPropertiesResponseOutput {
	return o
}

func (o WebhookPropertiesResponseOutput) ToWebhookPropertiesResponseOutputWithContext(ctx context.Context) WebhookPropertiesResponseOutput {
	return o
}

func (o WebhookPropertiesResponseOutput) ToWebhookPropertiesResponsePtrOutput() WebhookPropertiesResponsePtrOutput {
	return o.ToWebhookPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o WebhookPropertiesResponseOutput) ToWebhookPropertiesResponsePtrOutputWithContext(ctx context.Context) WebhookPropertiesResponsePtrOutput {
	return o.ApplyT(func(v WebhookPropertiesResponse) *WebhookPropertiesResponse {
		return &v
	}).(WebhookPropertiesResponsePtrOutput)
}

// The list of actions that trigger the webhook to post notifications.
func (o WebhookPropertiesResponseOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WebhookPropertiesResponse) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// The provisioning state of the webhook at the time the operation was called.
func (o WebhookPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.
func (o WebhookPropertiesResponseOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookPropertiesResponse) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The status of the webhook at the time the operation was called.
func (o WebhookPropertiesResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookPropertiesResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type WebhookPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (WebhookPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookPropertiesResponse)(nil)).Elem()
}

func (o WebhookPropertiesResponsePtrOutput) ToWebhookPropertiesResponsePtrOutput() WebhookPropertiesResponsePtrOutput {
	return o
}

func (o WebhookPropertiesResponsePtrOutput) ToWebhookPropertiesResponsePtrOutputWithContext(ctx context.Context) WebhookPropertiesResponsePtrOutput {
	return o
}

func (o WebhookPropertiesResponsePtrOutput) Elem() WebhookPropertiesResponseOutput {
	return o.ApplyT(func(v *WebhookPropertiesResponse) WebhookPropertiesResponse { return *v }).(WebhookPropertiesResponseOutput)
}

// The list of actions that trigger the webhook to post notifications.
func (o WebhookPropertiesResponsePtrOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WebhookPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(pulumi.StringArrayOutput)
}

// The provisioning state of the webhook at the time the operation was called.
func (o WebhookPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.
func (o WebhookPropertiesResponsePtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// The status of the webhook at the time the operation was called.
func (o WebhookPropertiesResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ActorResponseOutput{})
	pulumi.RegisterOutputType(ActorResponsePtrOutput{})
	pulumi.RegisterOutputType(AgentPropertiesOutput{})
	pulumi.RegisterOutputType(AgentPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AgentPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AgentPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AuthInfoOutput{})
	pulumi.RegisterOutputType(AuthInfoPtrOutput{})
	pulumi.RegisterOutputType(AuthInfoResponseOutput{})
	pulumi.RegisterOutputType(AuthInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(BaseImageDependencyOutput{})
	pulumi.RegisterOutputType(BaseImageDependencyResponseOutput{})
	pulumi.RegisterOutputType(BaseImageDependencyResponseArrayOutput{})
	pulumi.RegisterOutputType(BaseImageTriggerOutput{})
	pulumi.RegisterOutputType(BaseImageTriggerPtrOutput{})
	pulumi.RegisterOutputType(BaseImageTriggerResponseOutput{})
	pulumi.RegisterOutputType(BaseImageTriggerResponsePtrOutput{})
	pulumi.RegisterOutputType(CredentialsOutput{})
	pulumi.RegisterOutputType(CredentialsPtrOutput{})
	pulumi.RegisterOutputType(CredentialsResponseOutput{})
	pulumi.RegisterOutputType(CredentialsResponsePtrOutput{})
	pulumi.RegisterOutputType(EventContentResponseOutput{})
	pulumi.RegisterOutputType(EventContentResponsePtrOutput{})
	pulumi.RegisterOutputType(EventRequestMessageResponseOutput{})
	pulumi.RegisterOutputType(EventRequestMessageResponsePtrOutput{})
	pulumi.RegisterOutputType(EventResponseOutput{})
	pulumi.RegisterOutputType(EventResponseArrayOutput{})
	pulumi.RegisterOutputType(EventResponseMessageResponseOutput{})
	pulumi.RegisterOutputType(EventResponseMessageResponsePtrOutput{})
	pulumi.RegisterOutputType(IPRuleOutput{})
	pulumi.RegisterOutputType(IPRuleArrayOutput{})
	pulumi.RegisterOutputType(IPRuleResponseOutput{})
	pulumi.RegisterOutputType(IPRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesPtrOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesResponseOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetPtrOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetResponseOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetResponsePtrOutput{})
	pulumi.RegisterOutputType(PlatformPropertiesOutput{})
	pulumi.RegisterOutputType(PlatformPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PlatformPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PlatformPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(PoliciesOutput{})
	pulumi.RegisterOutputType(PoliciesPtrOutput{})
	pulumi.RegisterOutputType(PoliciesResponseOutput{})
	pulumi.RegisterOutputType(PoliciesResponsePtrOutput{})
	pulumi.RegisterOutputType(QuarantinePolicyOutput{})
	pulumi.RegisterOutputType(QuarantinePolicyPtrOutput{})
	pulumi.RegisterOutputType(QuarantinePolicyResponseOutput{})
	pulumi.RegisterOutputType(QuarantinePolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(RegistryTypeOutput{})
	pulumi.RegisterOutputType(RegistryPasswordResponseOutput{})
	pulumi.RegisterOutputType(RegistryPasswordResponseArrayOutput{})
	pulumi.RegisterOutputType(RegistryPropertiesOutput{})
	pulumi.RegisterOutputType(RegistryPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RegistryPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RegistryPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ReplicationTypeOutput{})
	pulumi.RegisterOutputType(ReplicationPropertiesOutput{})
	pulumi.RegisterOutputType(ReplicationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ReplicationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ReplicationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(RequestResponseOutput{})
	pulumi.RegisterOutputType(RequestResponsePtrOutput{})
	pulumi.RegisterOutputType(RetentionPolicyOutput{})
	pulumi.RegisterOutputType(RetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(RetentionPolicyResponseOutput{})
	pulumi.RegisterOutputType(RetentionPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SourcePropertiesOutput{})
	pulumi.RegisterOutputType(SourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SourceRegistryCredentialsOutput{})
	pulumi.RegisterOutputType(SourceRegistryCredentialsPtrOutput{})
	pulumi.RegisterOutputType(SourceRegistryCredentialsResponseOutput{})
	pulumi.RegisterOutputType(SourceRegistryCredentialsResponsePtrOutput{})
	pulumi.RegisterOutputType(SourceResponseOutput{})
	pulumi.RegisterOutputType(SourceResponsePtrOutput{})
	pulumi.RegisterOutputType(SourceTriggerOutput{})
	pulumi.RegisterOutputType(SourceTriggerArrayOutput{})
	pulumi.RegisterOutputType(SourceTriggerResponseOutput{})
	pulumi.RegisterOutputType(SourceTriggerResponseArrayOutput{})
	pulumi.RegisterOutputType(StatusOutput{})
	pulumi.RegisterOutputType(StatusResponseOutput{})
	pulumi.RegisterOutputType(StatusResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageAccountPropertiesOutput{})
	pulumi.RegisterOutputType(StorageAccountPropertiesPtrOutput{})
	pulumi.RegisterOutputType(StorageAccountPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TargetResponseOutput{})
	pulumi.RegisterOutputType(TargetResponsePtrOutput{})
	pulumi.RegisterOutputType(TaskTypeOutput{})
	pulumi.RegisterOutputType(TaskPropertiesOutput{})
	pulumi.RegisterOutputType(TaskPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TaskPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TaskStepPropertiesOutput{})
	pulumi.RegisterOutputType(TaskStepPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TaskStepPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TaskStepPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TimerTriggerOutput{})
	pulumi.RegisterOutputType(TimerTriggerArrayOutput{})
	pulumi.RegisterOutputType(TimerTriggerResponseOutput{})
	pulumi.RegisterOutputType(TimerTriggerResponseArrayOutput{})
	pulumi.RegisterOutputType(TriggerPropertiesOutput{})
	pulumi.RegisterOutputType(TriggerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TriggerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TriggerPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TrustPolicyOutput{})
	pulumi.RegisterOutputType(TrustPolicyPtrOutput{})
	pulumi.RegisterOutputType(TrustPolicyResponseOutput{})
	pulumi.RegisterOutputType(TrustPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(WebhookTypeOutput{})
	pulumi.RegisterOutputType(WebhookPropertiesCreateParametersOutput{})
	pulumi.RegisterOutputType(WebhookPropertiesCreateParametersPtrOutput{})
	pulumi.RegisterOutputType(WebhookPropertiesResponseOutput{})
	pulumi.RegisterOutputType(WebhookPropertiesResponsePtrOutput{})
}
