// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170301

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An object that represents a container registry.
type RegistryType struct {
	// The location of the resource. This cannot be changed after the resource is created.
	Location string `pulumi:"location"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The properties of the container registry.
	Properties RegistryPropertiesResponse `pulumi:"properties"`
	// The SKU of the container registry.
	Sku SkuResponse `pulumi:"sku"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type string `pulumi:"type"`
}

// RegistryTypeInput is an input type that accepts RegistryTypeArgs and RegistryTypeOutput values.
// You can construct a concrete instance of `RegistryTypeInput` via:
//
//          RegistryTypeArgs{...}
type RegistryTypeInput interface {
	pulumi.Input

	ToRegistryTypeOutput() RegistryTypeOutput
	ToRegistryTypeOutputWithContext(context.Context) RegistryTypeOutput
}

// An object that represents a container registry.
type RegistryTypeArgs struct {
	// The location of the resource. This cannot be changed after the resource is created.
	Location pulumi.StringInput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The properties of the container registry.
	Properties RegistryPropertiesResponseInput `pulumi:"properties"`
	// The SKU of the container registry.
	Sku SkuResponseInput `pulumi:"sku"`
	// The tags of the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RegistryTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryType)(nil)).Elem()
}

func (i RegistryTypeArgs) ToRegistryTypeOutput() RegistryTypeOutput {
	return i.ToRegistryTypeOutputWithContext(context.Background())
}

func (i RegistryTypeArgs) ToRegistryTypeOutputWithContext(ctx context.Context) RegistryTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTypeOutput)
}

// An object that represents a container registry.
type RegistryTypeOutput struct{ *pulumi.OutputState }

func (RegistryTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryType)(nil)).Elem()
}

func (o RegistryTypeOutput) ToRegistryTypeOutput() RegistryTypeOutput {
	return o
}

func (o RegistryTypeOutput) ToRegistryTypeOutputWithContext(ctx context.Context) RegistryTypeOutput {
	return o
}

// The location of the resource. This cannot be changed after the resource is created.
func (o RegistryTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryType) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource.
func (o RegistryTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryType) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of the container registry.
func (o RegistryTypeOutput) Properties() RegistryPropertiesResponseOutput {
	return o.ApplyT(func(v RegistryType) RegistryPropertiesResponse { return v.Properties }).(RegistryPropertiesResponseOutput)
}

// The SKU of the container registry.
func (o RegistryTypeOutput) Sku() SkuResponseOutput {
	return o.ApplyT(func(v RegistryType) SkuResponse { return v.Sku }).(SkuResponseOutput)
}

// The tags of the resource.
func (o RegistryTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RegistryType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o RegistryTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryType) string { return v.Type }).(pulumi.StringOutput)
}

// The login password for the container registry.
type RegistryPasswordResponse struct {
	// The password name.
	Name *string `pulumi:"name"`
	// The password value.
	Value *string `pulumi:"value"`
}

// RegistryPasswordResponseInput is an input type that accepts RegistryPasswordResponseArgs and RegistryPasswordResponseOutput values.
// You can construct a concrete instance of `RegistryPasswordResponseInput` via:
//
//          RegistryPasswordResponseArgs{...}
type RegistryPasswordResponseInput interface {
	pulumi.Input

	ToRegistryPasswordResponseOutput() RegistryPasswordResponseOutput
	ToRegistryPasswordResponseOutputWithContext(context.Context) RegistryPasswordResponseOutput
}

// The login password for the container registry.
type RegistryPasswordResponseArgs struct {
	// The password name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The password value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (RegistryPasswordResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryPasswordResponse)(nil)).Elem()
}

func (i RegistryPasswordResponseArgs) ToRegistryPasswordResponseOutput() RegistryPasswordResponseOutput {
	return i.ToRegistryPasswordResponseOutputWithContext(context.Background())
}

func (i RegistryPasswordResponseArgs) ToRegistryPasswordResponseOutputWithContext(ctx context.Context) RegistryPasswordResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryPasswordResponseOutput)
}

// RegistryPasswordResponseArrayInput is an input type that accepts RegistryPasswordResponseArray and RegistryPasswordResponseArrayOutput values.
// You can construct a concrete instance of `RegistryPasswordResponseArrayInput` via:
//
//          RegistryPasswordResponseArray{ RegistryPasswordResponseArgs{...} }
type RegistryPasswordResponseArrayInput interface {
	pulumi.Input

	ToRegistryPasswordResponseArrayOutput() RegistryPasswordResponseArrayOutput
	ToRegistryPasswordResponseArrayOutputWithContext(context.Context) RegistryPasswordResponseArrayOutput
}

type RegistryPasswordResponseArray []RegistryPasswordResponseInput

func (RegistryPasswordResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryPasswordResponse)(nil)).Elem()
}

func (i RegistryPasswordResponseArray) ToRegistryPasswordResponseArrayOutput() RegistryPasswordResponseArrayOutput {
	return i.ToRegistryPasswordResponseArrayOutputWithContext(context.Background())
}

func (i RegistryPasswordResponseArray) ToRegistryPasswordResponseArrayOutputWithContext(ctx context.Context) RegistryPasswordResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryPasswordResponseArrayOutput)
}

// The login password for the container registry.
type RegistryPasswordResponseOutput struct{ *pulumi.OutputState }

func (RegistryPasswordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryPasswordResponse)(nil)).Elem()
}

func (o RegistryPasswordResponseOutput) ToRegistryPasswordResponseOutput() RegistryPasswordResponseOutput {
	return o
}

func (o RegistryPasswordResponseOutput) ToRegistryPasswordResponseOutputWithContext(ctx context.Context) RegistryPasswordResponseOutput {
	return o
}

// The password name.
func (o RegistryPasswordResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryPasswordResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The password value.
func (o RegistryPasswordResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryPasswordResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RegistryPasswordResponseArrayOutput struct{ *pulumi.OutputState }

func (RegistryPasswordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryPasswordResponse)(nil)).Elem()
}

func (o RegistryPasswordResponseArrayOutput) ToRegistryPasswordResponseArrayOutput() RegistryPasswordResponseArrayOutput {
	return o
}

func (o RegistryPasswordResponseArrayOutput) ToRegistryPasswordResponseArrayOutputWithContext(ctx context.Context) RegistryPasswordResponseArrayOutput {
	return o
}

func (o RegistryPasswordResponseArrayOutput) Index(i pulumi.IntInput) RegistryPasswordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegistryPasswordResponse {
		return vs[0].([]RegistryPasswordResponse)[vs[1].(int)]
	}).(RegistryPasswordResponseOutput)
}

// The properties of a container registry.
type RegistryPropertiesResponse struct {
	// The value that indicates whether the admin user is enabled.
	AdminUserEnabled *bool `pulumi:"adminUserEnabled"`
	// The creation date of the container registry in ISO8601 format.
	CreationDate string `pulumi:"creationDate"`
	// The URL that can be used to log into the container registry.
	LoginServer string `pulumi:"loginServer"`
	// The provisioning state of the container registry at the time the operation was called.
	ProvisioningState string `pulumi:"provisioningState"`
	// The properties of the storage account for the container registry.
	StorageAccount *StorageAccountPropertiesResponse `pulumi:"storageAccount"`
}

// RegistryPropertiesResponseInput is an input type that accepts RegistryPropertiesResponseArgs and RegistryPropertiesResponseOutput values.
// You can construct a concrete instance of `RegistryPropertiesResponseInput` via:
//
//          RegistryPropertiesResponseArgs{...}
type RegistryPropertiesResponseInput interface {
	pulumi.Input

	ToRegistryPropertiesResponseOutput() RegistryPropertiesResponseOutput
	ToRegistryPropertiesResponseOutputWithContext(context.Context) RegistryPropertiesResponseOutput
}

// The properties of a container registry.
type RegistryPropertiesResponseArgs struct {
	// The value that indicates whether the admin user is enabled.
	AdminUserEnabled pulumi.BoolPtrInput `pulumi:"adminUserEnabled"`
	// The creation date of the container registry in ISO8601 format.
	CreationDate pulumi.StringInput `pulumi:"creationDate"`
	// The URL that can be used to log into the container registry.
	LoginServer pulumi.StringInput `pulumi:"loginServer"`
	// The provisioning state of the container registry at the time the operation was called.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The properties of the storage account for the container registry.
	StorageAccount StorageAccountPropertiesResponsePtrInput `pulumi:"storageAccount"`
}

func (RegistryPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryPropertiesResponse)(nil)).Elem()
}

func (i RegistryPropertiesResponseArgs) ToRegistryPropertiesResponseOutput() RegistryPropertiesResponseOutput {
	return i.ToRegistryPropertiesResponseOutputWithContext(context.Background())
}

func (i RegistryPropertiesResponseArgs) ToRegistryPropertiesResponseOutputWithContext(ctx context.Context) RegistryPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryPropertiesResponseOutput)
}

func (i RegistryPropertiesResponseArgs) ToRegistryPropertiesResponsePtrOutput() RegistryPropertiesResponsePtrOutput {
	return i.ToRegistryPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i RegistryPropertiesResponseArgs) ToRegistryPropertiesResponsePtrOutputWithContext(ctx context.Context) RegistryPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryPropertiesResponseOutput).ToRegistryPropertiesResponsePtrOutputWithContext(ctx)
}

// RegistryPropertiesResponsePtrInput is an input type that accepts RegistryPropertiesResponseArgs, RegistryPropertiesResponsePtr and RegistryPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `RegistryPropertiesResponsePtrInput` via:
//
//          RegistryPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type RegistryPropertiesResponsePtrInput interface {
	pulumi.Input

	ToRegistryPropertiesResponsePtrOutput() RegistryPropertiesResponsePtrOutput
	ToRegistryPropertiesResponsePtrOutputWithContext(context.Context) RegistryPropertiesResponsePtrOutput
}

type registryPropertiesResponsePtrType RegistryPropertiesResponseArgs

func RegistryPropertiesResponsePtr(v *RegistryPropertiesResponseArgs) RegistryPropertiesResponsePtrInput {
	return (*registryPropertiesResponsePtrType)(v)
}

func (*registryPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryPropertiesResponse)(nil)).Elem()
}

func (i *registryPropertiesResponsePtrType) ToRegistryPropertiesResponsePtrOutput() RegistryPropertiesResponsePtrOutput {
	return i.ToRegistryPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *registryPropertiesResponsePtrType) ToRegistryPropertiesResponsePtrOutputWithContext(ctx context.Context) RegistryPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryPropertiesResponsePtrOutput)
}

// The properties of a container registry.
type RegistryPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RegistryPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryPropertiesResponse)(nil)).Elem()
}

func (o RegistryPropertiesResponseOutput) ToRegistryPropertiesResponseOutput() RegistryPropertiesResponseOutput {
	return o
}

func (o RegistryPropertiesResponseOutput) ToRegistryPropertiesResponseOutputWithContext(ctx context.Context) RegistryPropertiesResponseOutput {
	return o
}

func (o RegistryPropertiesResponseOutput) ToRegistryPropertiesResponsePtrOutput() RegistryPropertiesResponsePtrOutput {
	return o.ToRegistryPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o RegistryPropertiesResponseOutput) ToRegistryPropertiesResponsePtrOutputWithContext(ctx context.Context) RegistryPropertiesResponsePtrOutput {
	return o.ApplyT(func(v RegistryPropertiesResponse) *RegistryPropertiesResponse {
		return &v
	}).(RegistryPropertiesResponsePtrOutput)
}

// The value that indicates whether the admin user is enabled.
func (o RegistryPropertiesResponseOutput) AdminUserEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RegistryPropertiesResponse) *bool { return v.AdminUserEnabled }).(pulumi.BoolPtrOutput)
}

// The creation date of the container registry in ISO8601 format.
func (o RegistryPropertiesResponseOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryPropertiesResponse) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The URL that can be used to log into the container registry.
func (o RegistryPropertiesResponseOutput) LoginServer() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryPropertiesResponse) string { return v.LoginServer }).(pulumi.StringOutput)
}

// The provisioning state of the container registry at the time the operation was called.
func (o RegistryPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The properties of the storage account for the container registry.
func (o RegistryPropertiesResponseOutput) StorageAccount() StorageAccountPropertiesResponsePtrOutput {
	return o.ApplyT(func(v RegistryPropertiesResponse) *StorageAccountPropertiesResponse { return v.StorageAccount }).(StorageAccountPropertiesResponsePtrOutput)
}

type RegistryPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (RegistryPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryPropertiesResponse)(nil)).Elem()
}

func (o RegistryPropertiesResponsePtrOutput) ToRegistryPropertiesResponsePtrOutput() RegistryPropertiesResponsePtrOutput {
	return o
}

func (o RegistryPropertiesResponsePtrOutput) ToRegistryPropertiesResponsePtrOutputWithContext(ctx context.Context) RegistryPropertiesResponsePtrOutput {
	return o
}

func (o RegistryPropertiesResponsePtrOutput) Elem() RegistryPropertiesResponseOutput {
	return o.ApplyT(func(v *RegistryPropertiesResponse) RegistryPropertiesResponse { return *v }).(RegistryPropertiesResponseOutput)
}

// The value that indicates whether the admin user is enabled.
func (o RegistryPropertiesResponsePtrOutput) AdminUserEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RegistryPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AdminUserEnabled
	}).(pulumi.BoolPtrOutput)
}

// The creation date of the container registry in ISO8601 format.
func (o RegistryPropertiesResponsePtrOutput) CreationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreationDate
	}).(pulumi.StringPtrOutput)
}

// The URL that can be used to log into the container registry.
func (o RegistryPropertiesResponsePtrOutput) LoginServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LoginServer
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the container registry at the time the operation was called.
func (o RegistryPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The properties of the storage account for the container registry.
func (o RegistryPropertiesResponsePtrOutput) StorageAccount() StorageAccountPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *RegistryPropertiesResponse) *StorageAccountPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.StorageAccount
	}).(StorageAccountPropertiesResponsePtrOutput)
}

// The SKU of a container registry.
type Sku struct {
	// The SKU name of the container registry. Required for registry creation. Allowed value: Basic.
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The SKU of a container registry.
type SkuArgs struct {
	// The SKU name of the container registry. Required for registry creation. Allowed value: Basic.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The SKU of a container registry.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The SKU name of the container registry. Required for registry creation. Allowed value: Basic.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// The SKU name of the container registry. Required for registry creation. Allowed value: Basic.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU of a container registry.
type SkuResponse struct {
	// The SKU name of the container registry. Required for registry creation. Allowed value: Basic.
	Name string `pulumi:"name"`
	// The SKU tier based on the SKU name.
	Tier string `pulumi:"tier"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// The SKU of a container registry.
type SkuResponseArgs struct {
	// The SKU name of the container registry. Required for registry creation. Allowed value: Basic.
	Name pulumi.StringInput `pulumi:"name"`
	// The SKU tier based on the SKU name.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// The SKU of a container registry.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// The SKU name of the container registry. Required for registry creation. Allowed value: Basic.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU tier based on the SKU name.
func (o SkuResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Tier }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// The SKU name of the container registry. Required for registry creation. Allowed value: Basic.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU tier based on the SKU name.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// The parameters of a storage account for a container registry.
type StorageAccountParameters struct {
	// The access key to the storage account.
	AccessKey string `pulumi:"accessKey"`
	// The name of the storage account.
	Name string `pulumi:"name"`
}

// StorageAccountParametersInput is an input type that accepts StorageAccountParametersArgs and StorageAccountParametersOutput values.
// You can construct a concrete instance of `StorageAccountParametersInput` via:
//
//          StorageAccountParametersArgs{...}
type StorageAccountParametersInput interface {
	pulumi.Input

	ToStorageAccountParametersOutput() StorageAccountParametersOutput
	ToStorageAccountParametersOutputWithContext(context.Context) StorageAccountParametersOutput
}

// The parameters of a storage account for a container registry.
type StorageAccountParametersArgs struct {
	// The access key to the storage account.
	AccessKey pulumi.StringInput `pulumi:"accessKey"`
	// The name of the storage account.
	Name pulumi.StringInput `pulumi:"name"`
}

func (StorageAccountParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountParameters)(nil)).Elem()
}

func (i StorageAccountParametersArgs) ToStorageAccountParametersOutput() StorageAccountParametersOutput {
	return i.ToStorageAccountParametersOutputWithContext(context.Background())
}

func (i StorageAccountParametersArgs) ToStorageAccountParametersOutputWithContext(ctx context.Context) StorageAccountParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountParametersOutput)
}

func (i StorageAccountParametersArgs) ToStorageAccountParametersPtrOutput() StorageAccountParametersPtrOutput {
	return i.ToStorageAccountParametersPtrOutputWithContext(context.Background())
}

func (i StorageAccountParametersArgs) ToStorageAccountParametersPtrOutputWithContext(ctx context.Context) StorageAccountParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountParametersOutput).ToStorageAccountParametersPtrOutputWithContext(ctx)
}

// StorageAccountParametersPtrInput is an input type that accepts StorageAccountParametersArgs, StorageAccountParametersPtr and StorageAccountParametersPtrOutput values.
// You can construct a concrete instance of `StorageAccountParametersPtrInput` via:
//
//          StorageAccountParametersArgs{...}
//
//  or:
//
//          nil
type StorageAccountParametersPtrInput interface {
	pulumi.Input

	ToStorageAccountParametersPtrOutput() StorageAccountParametersPtrOutput
	ToStorageAccountParametersPtrOutputWithContext(context.Context) StorageAccountParametersPtrOutput
}

type storageAccountParametersPtrType StorageAccountParametersArgs

func StorageAccountParametersPtr(v *StorageAccountParametersArgs) StorageAccountParametersPtrInput {
	return (*storageAccountParametersPtrType)(v)
}

func (*storageAccountParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountParameters)(nil)).Elem()
}

func (i *storageAccountParametersPtrType) ToStorageAccountParametersPtrOutput() StorageAccountParametersPtrOutput {
	return i.ToStorageAccountParametersPtrOutputWithContext(context.Background())
}

func (i *storageAccountParametersPtrType) ToStorageAccountParametersPtrOutputWithContext(ctx context.Context) StorageAccountParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountParametersPtrOutput)
}

// The parameters of a storage account for a container registry.
type StorageAccountParametersOutput struct{ *pulumi.OutputState }

func (StorageAccountParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountParameters)(nil)).Elem()
}

func (o StorageAccountParametersOutput) ToStorageAccountParametersOutput() StorageAccountParametersOutput {
	return o
}

func (o StorageAccountParametersOutput) ToStorageAccountParametersOutputWithContext(ctx context.Context) StorageAccountParametersOutput {
	return o
}

func (o StorageAccountParametersOutput) ToStorageAccountParametersPtrOutput() StorageAccountParametersPtrOutput {
	return o.ToStorageAccountParametersPtrOutputWithContext(context.Background())
}

func (o StorageAccountParametersOutput) ToStorageAccountParametersPtrOutputWithContext(ctx context.Context) StorageAccountParametersPtrOutput {
	return o.ApplyT(func(v StorageAccountParameters) *StorageAccountParameters {
		return &v
	}).(StorageAccountParametersPtrOutput)
}

// The access key to the storage account.
func (o StorageAccountParametersOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountParameters) string { return v.AccessKey }).(pulumi.StringOutput)
}

// The name of the storage account.
func (o StorageAccountParametersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountParameters) string { return v.Name }).(pulumi.StringOutput)
}

type StorageAccountParametersPtrOutput struct{ *pulumi.OutputState }

func (StorageAccountParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountParameters)(nil)).Elem()
}

func (o StorageAccountParametersPtrOutput) ToStorageAccountParametersPtrOutput() StorageAccountParametersPtrOutput {
	return o
}

func (o StorageAccountParametersPtrOutput) ToStorageAccountParametersPtrOutputWithContext(ctx context.Context) StorageAccountParametersPtrOutput {
	return o
}

func (o StorageAccountParametersPtrOutput) Elem() StorageAccountParametersOutput {
	return o.ApplyT(func(v *StorageAccountParameters) StorageAccountParameters { return *v }).(StorageAccountParametersOutput)
}

// The access key to the storage account.
func (o StorageAccountParametersPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountParameters) *string {
		if v == nil {
			return nil
		}
		return &v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// The name of the storage account.
func (o StorageAccountParametersPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The properties of a storage account for a container registry.
type StorageAccountPropertiesResponse struct {
	// The name of the storage account.
	Name *string `pulumi:"name"`
}

// StorageAccountPropertiesResponseInput is an input type that accepts StorageAccountPropertiesResponseArgs and StorageAccountPropertiesResponseOutput values.
// You can construct a concrete instance of `StorageAccountPropertiesResponseInput` via:
//
//          StorageAccountPropertiesResponseArgs{...}
type StorageAccountPropertiesResponseInput interface {
	pulumi.Input

	ToStorageAccountPropertiesResponseOutput() StorageAccountPropertiesResponseOutput
	ToStorageAccountPropertiesResponseOutputWithContext(context.Context) StorageAccountPropertiesResponseOutput
}

// The properties of a storage account for a container registry.
type StorageAccountPropertiesResponseArgs struct {
	// The name of the storage account.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StorageAccountPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountPropertiesResponse)(nil)).Elem()
}

func (i StorageAccountPropertiesResponseArgs) ToStorageAccountPropertiesResponseOutput() StorageAccountPropertiesResponseOutput {
	return i.ToStorageAccountPropertiesResponseOutputWithContext(context.Background())
}

func (i StorageAccountPropertiesResponseArgs) ToStorageAccountPropertiesResponseOutputWithContext(ctx context.Context) StorageAccountPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesResponseOutput)
}

func (i StorageAccountPropertiesResponseArgs) ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput {
	return i.ToStorageAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i StorageAccountPropertiesResponseArgs) ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesResponseOutput).ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx)
}

// StorageAccountPropertiesResponsePtrInput is an input type that accepts StorageAccountPropertiesResponseArgs, StorageAccountPropertiesResponsePtr and StorageAccountPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `StorageAccountPropertiesResponsePtrInput` via:
//
//          StorageAccountPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type StorageAccountPropertiesResponsePtrInput interface {
	pulumi.Input

	ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput
	ToStorageAccountPropertiesResponsePtrOutputWithContext(context.Context) StorageAccountPropertiesResponsePtrOutput
}

type storageAccountPropertiesResponsePtrType StorageAccountPropertiesResponseArgs

func StorageAccountPropertiesResponsePtr(v *StorageAccountPropertiesResponseArgs) StorageAccountPropertiesResponsePtrInput {
	return (*storageAccountPropertiesResponsePtrType)(v)
}

func (*storageAccountPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountPropertiesResponse)(nil)).Elem()
}

func (i *storageAccountPropertiesResponsePtrType) ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput {
	return i.ToStorageAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *storageAccountPropertiesResponsePtrType) ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPropertiesResponsePtrOutput)
}

// The properties of a storage account for a container registry.
type StorageAccountPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountPropertiesResponse)(nil)).Elem()
}

func (o StorageAccountPropertiesResponseOutput) ToStorageAccountPropertiesResponseOutput() StorageAccountPropertiesResponseOutput {
	return o
}

func (o StorageAccountPropertiesResponseOutput) ToStorageAccountPropertiesResponseOutputWithContext(ctx context.Context) StorageAccountPropertiesResponseOutput {
	return o
}

func (o StorageAccountPropertiesResponseOutput) ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput {
	return o.ToStorageAccountPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o StorageAccountPropertiesResponseOutput) ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountPropertiesResponsePtrOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) *StorageAccountPropertiesResponse {
		return &v
	}).(StorageAccountPropertiesResponsePtrOutput)
}

// The name of the storage account.
func (o StorageAccountPropertiesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccountPropertiesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StorageAccountPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageAccountPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountPropertiesResponse)(nil)).Elem()
}

func (o StorageAccountPropertiesResponsePtrOutput) ToStorageAccountPropertiesResponsePtrOutput() StorageAccountPropertiesResponsePtrOutput {
	return o
}

func (o StorageAccountPropertiesResponsePtrOutput) ToStorageAccountPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageAccountPropertiesResponsePtrOutput {
	return o
}

func (o StorageAccountPropertiesResponsePtrOutput) Elem() StorageAccountPropertiesResponseOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) StorageAccountPropertiesResponse { return *v }).(StorageAccountPropertiesResponseOutput)
}

// The name of the storage account.
func (o StorageAccountPropertiesResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(RegistryTypeOutput{})
	pulumi.RegisterOutputType(RegistryPasswordResponseOutput{})
	pulumi.RegisterOutputType(RegistryPasswordResponseArrayOutput{})
	pulumi.RegisterOutputType(RegistryPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RegistryPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageAccountParametersOutput{})
	pulumi.RegisterOutputType(StorageAccountParametersPtrOutput{})
	pulumi.RegisterOutputType(StorageAccountPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountPropertiesResponsePtrOutput{})
}
