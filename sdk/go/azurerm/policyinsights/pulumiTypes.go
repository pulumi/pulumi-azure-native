// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package policyinsights

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The remediation definition.
type RemediationType struct {
	// The name of the remediation.
	Name string `pulumi:"name"`
	// Properties for the remediation.
	Properties RemediationPropertiesResponse `pulumi:"properties"`
	// The type of the remediation.
	Type string `pulumi:"type"`
}

// RemediationTypeInput is an input type that accepts RemediationTypeArgs and RemediationTypeOutput values.
// You can construct a concrete instance of `RemediationTypeInput` via:
//
//          RemediationTypeArgs{...}
type RemediationTypeInput interface {
	pulumi.Input

	ToRemediationTypeOutput() RemediationTypeOutput
	ToRemediationTypeOutputWithContext(context.Context) RemediationTypeOutput
}

// The remediation definition.
type RemediationTypeArgs struct {
	// The name of the remediation.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties for the remediation.
	Properties RemediationPropertiesResponseInput `pulumi:"properties"`
	// The type of the remediation.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RemediationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RemediationType)(nil)).Elem()
}

func (i RemediationTypeArgs) ToRemediationTypeOutput() RemediationTypeOutput {
	return i.ToRemediationTypeOutputWithContext(context.Background())
}

func (i RemediationTypeArgs) ToRemediationTypeOutputWithContext(ctx context.Context) RemediationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationTypeOutput)
}

// The remediation definition.
type RemediationTypeOutput struct{ *pulumi.OutputState }

func (RemediationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemediationType)(nil)).Elem()
}

func (o RemediationTypeOutput) ToRemediationTypeOutput() RemediationTypeOutput {
	return o
}

func (o RemediationTypeOutput) ToRemediationTypeOutputWithContext(ctx context.Context) RemediationTypeOutput {
	return o
}

// The name of the remediation.
func (o RemediationTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RemediationType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties for the remediation.
func (o RemediationTypeOutput) Properties() RemediationPropertiesResponseOutput {
	return o.ApplyT(func(v RemediationType) RemediationPropertiesResponse { return v.Properties }).(RemediationPropertiesResponseOutput)
}

// The type of the remediation.
func (o RemediationTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RemediationType) string { return v.Type }).(pulumi.StringOutput)
}

// The deployment status summary for all deployments created by the remediation.
type RemediationDeploymentSummary struct {
}

// RemediationDeploymentSummaryInput is an input type that accepts RemediationDeploymentSummaryArgs and RemediationDeploymentSummaryOutput values.
// You can construct a concrete instance of `RemediationDeploymentSummaryInput` via:
//
//          RemediationDeploymentSummaryArgs{...}
type RemediationDeploymentSummaryInput interface {
	pulumi.Input

	ToRemediationDeploymentSummaryOutput() RemediationDeploymentSummaryOutput
	ToRemediationDeploymentSummaryOutputWithContext(context.Context) RemediationDeploymentSummaryOutput
}

// The deployment status summary for all deployments created by the remediation.
type RemediationDeploymentSummaryArgs struct {
}

func (RemediationDeploymentSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RemediationDeploymentSummary)(nil)).Elem()
}

func (i RemediationDeploymentSummaryArgs) ToRemediationDeploymentSummaryOutput() RemediationDeploymentSummaryOutput {
	return i.ToRemediationDeploymentSummaryOutputWithContext(context.Background())
}

func (i RemediationDeploymentSummaryArgs) ToRemediationDeploymentSummaryOutputWithContext(ctx context.Context) RemediationDeploymentSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationDeploymentSummaryOutput)
}

// The deployment status summary for all deployments created by the remediation.
type RemediationDeploymentSummaryOutput struct{ *pulumi.OutputState }

func (RemediationDeploymentSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemediationDeploymentSummary)(nil)).Elem()
}

func (o RemediationDeploymentSummaryOutput) ToRemediationDeploymentSummaryOutput() RemediationDeploymentSummaryOutput {
	return o
}

func (o RemediationDeploymentSummaryOutput) ToRemediationDeploymentSummaryOutputWithContext(ctx context.Context) RemediationDeploymentSummaryOutput {
	return o
}

// The deployment status summary for all deployments created by the remediation.
type RemediationDeploymentSummaryResponse struct {
	// The number of deployments required by the remediation that have failed.
	FailedDeployments int `pulumi:"failedDeployments"`
	// The number of deployments required by the remediation that have succeeded.
	SuccessfulDeployments int `pulumi:"successfulDeployments"`
	// The number of deployments required by the remediation.
	TotalDeployments int `pulumi:"totalDeployments"`
}

// RemediationDeploymentSummaryResponseInput is an input type that accepts RemediationDeploymentSummaryResponseArgs and RemediationDeploymentSummaryResponseOutput values.
// You can construct a concrete instance of `RemediationDeploymentSummaryResponseInput` via:
//
//          RemediationDeploymentSummaryResponseArgs{...}
type RemediationDeploymentSummaryResponseInput interface {
	pulumi.Input

	ToRemediationDeploymentSummaryResponseOutput() RemediationDeploymentSummaryResponseOutput
	ToRemediationDeploymentSummaryResponseOutputWithContext(context.Context) RemediationDeploymentSummaryResponseOutput
}

// The deployment status summary for all deployments created by the remediation.
type RemediationDeploymentSummaryResponseArgs struct {
	// The number of deployments required by the remediation that have failed.
	FailedDeployments pulumi.IntInput `pulumi:"failedDeployments"`
	// The number of deployments required by the remediation that have succeeded.
	SuccessfulDeployments pulumi.IntInput `pulumi:"successfulDeployments"`
	// The number of deployments required by the remediation.
	TotalDeployments pulumi.IntInput `pulumi:"totalDeployments"`
}

func (RemediationDeploymentSummaryResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RemediationDeploymentSummaryResponse)(nil)).Elem()
}

func (i RemediationDeploymentSummaryResponseArgs) ToRemediationDeploymentSummaryResponseOutput() RemediationDeploymentSummaryResponseOutput {
	return i.ToRemediationDeploymentSummaryResponseOutputWithContext(context.Background())
}

func (i RemediationDeploymentSummaryResponseArgs) ToRemediationDeploymentSummaryResponseOutputWithContext(ctx context.Context) RemediationDeploymentSummaryResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationDeploymentSummaryResponseOutput)
}

func (i RemediationDeploymentSummaryResponseArgs) ToRemediationDeploymentSummaryResponsePtrOutput() RemediationDeploymentSummaryResponsePtrOutput {
	return i.ToRemediationDeploymentSummaryResponsePtrOutputWithContext(context.Background())
}

func (i RemediationDeploymentSummaryResponseArgs) ToRemediationDeploymentSummaryResponsePtrOutputWithContext(ctx context.Context) RemediationDeploymentSummaryResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationDeploymentSummaryResponseOutput).ToRemediationDeploymentSummaryResponsePtrOutputWithContext(ctx)
}

// RemediationDeploymentSummaryResponsePtrInput is an input type that accepts RemediationDeploymentSummaryResponseArgs, RemediationDeploymentSummaryResponsePtr and RemediationDeploymentSummaryResponsePtrOutput values.
// You can construct a concrete instance of `RemediationDeploymentSummaryResponsePtrInput` via:
//
//          RemediationDeploymentSummaryResponseArgs{...}
//
//  or:
//
//          nil
type RemediationDeploymentSummaryResponsePtrInput interface {
	pulumi.Input

	ToRemediationDeploymentSummaryResponsePtrOutput() RemediationDeploymentSummaryResponsePtrOutput
	ToRemediationDeploymentSummaryResponsePtrOutputWithContext(context.Context) RemediationDeploymentSummaryResponsePtrOutput
}

type remediationDeploymentSummaryResponsePtrType RemediationDeploymentSummaryResponseArgs

func RemediationDeploymentSummaryResponsePtr(v *RemediationDeploymentSummaryResponseArgs) RemediationDeploymentSummaryResponsePtrInput {
	return (*remediationDeploymentSummaryResponsePtrType)(v)
}

func (*remediationDeploymentSummaryResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RemediationDeploymentSummaryResponse)(nil)).Elem()
}

func (i *remediationDeploymentSummaryResponsePtrType) ToRemediationDeploymentSummaryResponsePtrOutput() RemediationDeploymentSummaryResponsePtrOutput {
	return i.ToRemediationDeploymentSummaryResponsePtrOutputWithContext(context.Background())
}

func (i *remediationDeploymentSummaryResponsePtrType) ToRemediationDeploymentSummaryResponsePtrOutputWithContext(ctx context.Context) RemediationDeploymentSummaryResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationDeploymentSummaryResponsePtrOutput)
}

// The deployment status summary for all deployments created by the remediation.
type RemediationDeploymentSummaryResponseOutput struct{ *pulumi.OutputState }

func (RemediationDeploymentSummaryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemediationDeploymentSummaryResponse)(nil)).Elem()
}

func (o RemediationDeploymentSummaryResponseOutput) ToRemediationDeploymentSummaryResponseOutput() RemediationDeploymentSummaryResponseOutput {
	return o
}

func (o RemediationDeploymentSummaryResponseOutput) ToRemediationDeploymentSummaryResponseOutputWithContext(ctx context.Context) RemediationDeploymentSummaryResponseOutput {
	return o
}

func (o RemediationDeploymentSummaryResponseOutput) ToRemediationDeploymentSummaryResponsePtrOutput() RemediationDeploymentSummaryResponsePtrOutput {
	return o.ToRemediationDeploymentSummaryResponsePtrOutputWithContext(context.Background())
}

func (o RemediationDeploymentSummaryResponseOutput) ToRemediationDeploymentSummaryResponsePtrOutputWithContext(ctx context.Context) RemediationDeploymentSummaryResponsePtrOutput {
	return o.ApplyT(func(v RemediationDeploymentSummaryResponse) *RemediationDeploymentSummaryResponse {
		return &v
	}).(RemediationDeploymentSummaryResponsePtrOutput)
}

// The number of deployments required by the remediation that have failed.
func (o RemediationDeploymentSummaryResponseOutput) FailedDeployments() pulumi.IntOutput {
	return o.ApplyT(func(v RemediationDeploymentSummaryResponse) int { return v.FailedDeployments }).(pulumi.IntOutput)
}

// The number of deployments required by the remediation that have succeeded.
func (o RemediationDeploymentSummaryResponseOutput) SuccessfulDeployments() pulumi.IntOutput {
	return o.ApplyT(func(v RemediationDeploymentSummaryResponse) int { return v.SuccessfulDeployments }).(pulumi.IntOutput)
}

// The number of deployments required by the remediation.
func (o RemediationDeploymentSummaryResponseOutput) TotalDeployments() pulumi.IntOutput {
	return o.ApplyT(func(v RemediationDeploymentSummaryResponse) int { return v.TotalDeployments }).(pulumi.IntOutput)
}

type RemediationDeploymentSummaryResponsePtrOutput struct{ *pulumi.OutputState }

func (RemediationDeploymentSummaryResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemediationDeploymentSummaryResponse)(nil)).Elem()
}

func (o RemediationDeploymentSummaryResponsePtrOutput) ToRemediationDeploymentSummaryResponsePtrOutput() RemediationDeploymentSummaryResponsePtrOutput {
	return o
}

func (o RemediationDeploymentSummaryResponsePtrOutput) ToRemediationDeploymentSummaryResponsePtrOutputWithContext(ctx context.Context) RemediationDeploymentSummaryResponsePtrOutput {
	return o
}

func (o RemediationDeploymentSummaryResponsePtrOutput) Elem() RemediationDeploymentSummaryResponseOutput {
	return o.ApplyT(func(v *RemediationDeploymentSummaryResponse) RemediationDeploymentSummaryResponse { return *v }).(RemediationDeploymentSummaryResponseOutput)
}

// The number of deployments required by the remediation that have failed.
func (o RemediationDeploymentSummaryResponsePtrOutput) FailedDeployments() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemediationDeploymentSummaryResponse) *int {
		if v == nil {
			return nil
		}
		return &v.FailedDeployments
	}).(pulumi.IntPtrOutput)
}

// The number of deployments required by the remediation that have succeeded.
func (o RemediationDeploymentSummaryResponsePtrOutput) SuccessfulDeployments() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemediationDeploymentSummaryResponse) *int {
		if v == nil {
			return nil
		}
		return &v.SuccessfulDeployments
	}).(pulumi.IntPtrOutput)
}

// The number of deployments required by the remediation.
func (o RemediationDeploymentSummaryResponsePtrOutput) TotalDeployments() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemediationDeploymentSummaryResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TotalDeployments
	}).(pulumi.IntPtrOutput)
}

// The filters that will be applied to determine which resources to remediate.
type RemediationFilters struct {
	// The resource locations that will be remediated.
	Locations []string `pulumi:"locations"`
}

// RemediationFiltersInput is an input type that accepts RemediationFiltersArgs and RemediationFiltersOutput values.
// You can construct a concrete instance of `RemediationFiltersInput` via:
//
//          RemediationFiltersArgs{...}
type RemediationFiltersInput interface {
	pulumi.Input

	ToRemediationFiltersOutput() RemediationFiltersOutput
	ToRemediationFiltersOutputWithContext(context.Context) RemediationFiltersOutput
}

// The filters that will be applied to determine which resources to remediate.
type RemediationFiltersArgs struct {
	// The resource locations that will be remediated.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
}

func (RemediationFiltersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RemediationFilters)(nil)).Elem()
}

func (i RemediationFiltersArgs) ToRemediationFiltersOutput() RemediationFiltersOutput {
	return i.ToRemediationFiltersOutputWithContext(context.Background())
}

func (i RemediationFiltersArgs) ToRemediationFiltersOutputWithContext(ctx context.Context) RemediationFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationFiltersOutput)
}

func (i RemediationFiltersArgs) ToRemediationFiltersPtrOutput() RemediationFiltersPtrOutput {
	return i.ToRemediationFiltersPtrOutputWithContext(context.Background())
}

func (i RemediationFiltersArgs) ToRemediationFiltersPtrOutputWithContext(ctx context.Context) RemediationFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationFiltersOutput).ToRemediationFiltersPtrOutputWithContext(ctx)
}

// RemediationFiltersPtrInput is an input type that accepts RemediationFiltersArgs, RemediationFiltersPtr and RemediationFiltersPtrOutput values.
// You can construct a concrete instance of `RemediationFiltersPtrInput` via:
//
//          RemediationFiltersArgs{...}
//
//  or:
//
//          nil
type RemediationFiltersPtrInput interface {
	pulumi.Input

	ToRemediationFiltersPtrOutput() RemediationFiltersPtrOutput
	ToRemediationFiltersPtrOutputWithContext(context.Context) RemediationFiltersPtrOutput
}

type remediationFiltersPtrType RemediationFiltersArgs

func RemediationFiltersPtr(v *RemediationFiltersArgs) RemediationFiltersPtrInput {
	return (*remediationFiltersPtrType)(v)
}

func (*remediationFiltersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RemediationFilters)(nil)).Elem()
}

func (i *remediationFiltersPtrType) ToRemediationFiltersPtrOutput() RemediationFiltersPtrOutput {
	return i.ToRemediationFiltersPtrOutputWithContext(context.Background())
}

func (i *remediationFiltersPtrType) ToRemediationFiltersPtrOutputWithContext(ctx context.Context) RemediationFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationFiltersPtrOutput)
}

// The filters that will be applied to determine which resources to remediate.
type RemediationFiltersOutput struct{ *pulumi.OutputState }

func (RemediationFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemediationFilters)(nil)).Elem()
}

func (o RemediationFiltersOutput) ToRemediationFiltersOutput() RemediationFiltersOutput {
	return o
}

func (o RemediationFiltersOutput) ToRemediationFiltersOutputWithContext(ctx context.Context) RemediationFiltersOutput {
	return o
}

func (o RemediationFiltersOutput) ToRemediationFiltersPtrOutput() RemediationFiltersPtrOutput {
	return o.ToRemediationFiltersPtrOutputWithContext(context.Background())
}

func (o RemediationFiltersOutput) ToRemediationFiltersPtrOutputWithContext(ctx context.Context) RemediationFiltersPtrOutput {
	return o.ApplyT(func(v RemediationFilters) *RemediationFilters {
		return &v
	}).(RemediationFiltersPtrOutput)
}

// The resource locations that will be remediated.
func (o RemediationFiltersOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RemediationFilters) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

type RemediationFiltersPtrOutput struct{ *pulumi.OutputState }

func (RemediationFiltersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemediationFilters)(nil)).Elem()
}

func (o RemediationFiltersPtrOutput) ToRemediationFiltersPtrOutput() RemediationFiltersPtrOutput {
	return o
}

func (o RemediationFiltersPtrOutput) ToRemediationFiltersPtrOutputWithContext(ctx context.Context) RemediationFiltersPtrOutput {
	return o
}

func (o RemediationFiltersPtrOutput) Elem() RemediationFiltersOutput {
	return o.ApplyT(func(v *RemediationFilters) RemediationFilters { return *v }).(RemediationFiltersOutput)
}

// The resource locations that will be remediated.
func (o RemediationFiltersPtrOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RemediationFilters) []string {
		if v == nil {
			return nil
		}
		return v.Locations
	}).(pulumi.StringArrayOutput)
}

// The filters that will be applied to determine which resources to remediate.
type RemediationFiltersResponse struct {
	// The resource locations that will be remediated.
	Locations []string `pulumi:"locations"`
}

// RemediationFiltersResponseInput is an input type that accepts RemediationFiltersResponseArgs and RemediationFiltersResponseOutput values.
// You can construct a concrete instance of `RemediationFiltersResponseInput` via:
//
//          RemediationFiltersResponseArgs{...}
type RemediationFiltersResponseInput interface {
	pulumi.Input

	ToRemediationFiltersResponseOutput() RemediationFiltersResponseOutput
	ToRemediationFiltersResponseOutputWithContext(context.Context) RemediationFiltersResponseOutput
}

// The filters that will be applied to determine which resources to remediate.
type RemediationFiltersResponseArgs struct {
	// The resource locations that will be remediated.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
}

func (RemediationFiltersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RemediationFiltersResponse)(nil)).Elem()
}

func (i RemediationFiltersResponseArgs) ToRemediationFiltersResponseOutput() RemediationFiltersResponseOutput {
	return i.ToRemediationFiltersResponseOutputWithContext(context.Background())
}

func (i RemediationFiltersResponseArgs) ToRemediationFiltersResponseOutputWithContext(ctx context.Context) RemediationFiltersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationFiltersResponseOutput)
}

func (i RemediationFiltersResponseArgs) ToRemediationFiltersResponsePtrOutput() RemediationFiltersResponsePtrOutput {
	return i.ToRemediationFiltersResponsePtrOutputWithContext(context.Background())
}

func (i RemediationFiltersResponseArgs) ToRemediationFiltersResponsePtrOutputWithContext(ctx context.Context) RemediationFiltersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationFiltersResponseOutput).ToRemediationFiltersResponsePtrOutputWithContext(ctx)
}

// RemediationFiltersResponsePtrInput is an input type that accepts RemediationFiltersResponseArgs, RemediationFiltersResponsePtr and RemediationFiltersResponsePtrOutput values.
// You can construct a concrete instance of `RemediationFiltersResponsePtrInput` via:
//
//          RemediationFiltersResponseArgs{...}
//
//  or:
//
//          nil
type RemediationFiltersResponsePtrInput interface {
	pulumi.Input

	ToRemediationFiltersResponsePtrOutput() RemediationFiltersResponsePtrOutput
	ToRemediationFiltersResponsePtrOutputWithContext(context.Context) RemediationFiltersResponsePtrOutput
}

type remediationFiltersResponsePtrType RemediationFiltersResponseArgs

func RemediationFiltersResponsePtr(v *RemediationFiltersResponseArgs) RemediationFiltersResponsePtrInput {
	return (*remediationFiltersResponsePtrType)(v)
}

func (*remediationFiltersResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RemediationFiltersResponse)(nil)).Elem()
}

func (i *remediationFiltersResponsePtrType) ToRemediationFiltersResponsePtrOutput() RemediationFiltersResponsePtrOutput {
	return i.ToRemediationFiltersResponsePtrOutputWithContext(context.Background())
}

func (i *remediationFiltersResponsePtrType) ToRemediationFiltersResponsePtrOutputWithContext(ctx context.Context) RemediationFiltersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationFiltersResponsePtrOutput)
}

// The filters that will be applied to determine which resources to remediate.
type RemediationFiltersResponseOutput struct{ *pulumi.OutputState }

func (RemediationFiltersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemediationFiltersResponse)(nil)).Elem()
}

func (o RemediationFiltersResponseOutput) ToRemediationFiltersResponseOutput() RemediationFiltersResponseOutput {
	return o
}

func (o RemediationFiltersResponseOutput) ToRemediationFiltersResponseOutputWithContext(ctx context.Context) RemediationFiltersResponseOutput {
	return o
}

func (o RemediationFiltersResponseOutput) ToRemediationFiltersResponsePtrOutput() RemediationFiltersResponsePtrOutput {
	return o.ToRemediationFiltersResponsePtrOutputWithContext(context.Background())
}

func (o RemediationFiltersResponseOutput) ToRemediationFiltersResponsePtrOutputWithContext(ctx context.Context) RemediationFiltersResponsePtrOutput {
	return o.ApplyT(func(v RemediationFiltersResponse) *RemediationFiltersResponse {
		return &v
	}).(RemediationFiltersResponsePtrOutput)
}

// The resource locations that will be remediated.
func (o RemediationFiltersResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RemediationFiltersResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

type RemediationFiltersResponsePtrOutput struct{ *pulumi.OutputState }

func (RemediationFiltersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemediationFiltersResponse)(nil)).Elem()
}

func (o RemediationFiltersResponsePtrOutput) ToRemediationFiltersResponsePtrOutput() RemediationFiltersResponsePtrOutput {
	return o
}

func (o RemediationFiltersResponsePtrOutput) ToRemediationFiltersResponsePtrOutputWithContext(ctx context.Context) RemediationFiltersResponsePtrOutput {
	return o
}

func (o RemediationFiltersResponsePtrOutput) Elem() RemediationFiltersResponseOutput {
	return o.ApplyT(func(v *RemediationFiltersResponse) RemediationFiltersResponse { return *v }).(RemediationFiltersResponseOutput)
}

// The resource locations that will be remediated.
func (o RemediationFiltersResponsePtrOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RemediationFiltersResponse) []string {
		if v == nil {
			return nil
		}
		return v.Locations
	}).(pulumi.StringArrayOutput)
}

// The remediation properties.
type RemediationProperties struct {
	// The filters that will be applied to determine which resources to remediate.
	Filters *RemediationFilters `pulumi:"filters"`
	// The resource ID of the policy assignment that should be remediated.
	PolicyAssignmentId *string `pulumi:"policyAssignmentId"`
	// The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition.
	PolicyDefinitionReferenceId *string `pulumi:"policyDefinitionReferenceId"`
	// The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
	ResourceDiscoveryMode *string `pulumi:"resourceDiscoveryMode"`
}

// RemediationPropertiesInput is an input type that accepts RemediationPropertiesArgs and RemediationPropertiesOutput values.
// You can construct a concrete instance of `RemediationPropertiesInput` via:
//
//          RemediationPropertiesArgs{...}
type RemediationPropertiesInput interface {
	pulumi.Input

	ToRemediationPropertiesOutput() RemediationPropertiesOutput
	ToRemediationPropertiesOutputWithContext(context.Context) RemediationPropertiesOutput
}

// The remediation properties.
type RemediationPropertiesArgs struct {
	// The filters that will be applied to determine which resources to remediate.
	Filters RemediationFiltersPtrInput `pulumi:"filters"`
	// The resource ID of the policy assignment that should be remediated.
	PolicyAssignmentId pulumi.StringPtrInput `pulumi:"policyAssignmentId"`
	// The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition.
	PolicyDefinitionReferenceId pulumi.StringPtrInput `pulumi:"policyDefinitionReferenceId"`
	// The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
	ResourceDiscoveryMode pulumi.StringPtrInput `pulumi:"resourceDiscoveryMode"`
}

func (RemediationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RemediationProperties)(nil)).Elem()
}

func (i RemediationPropertiesArgs) ToRemediationPropertiesOutput() RemediationPropertiesOutput {
	return i.ToRemediationPropertiesOutputWithContext(context.Background())
}

func (i RemediationPropertiesArgs) ToRemediationPropertiesOutputWithContext(ctx context.Context) RemediationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationPropertiesOutput)
}

func (i RemediationPropertiesArgs) ToRemediationPropertiesPtrOutput() RemediationPropertiesPtrOutput {
	return i.ToRemediationPropertiesPtrOutputWithContext(context.Background())
}

func (i RemediationPropertiesArgs) ToRemediationPropertiesPtrOutputWithContext(ctx context.Context) RemediationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationPropertiesOutput).ToRemediationPropertiesPtrOutputWithContext(ctx)
}

// RemediationPropertiesPtrInput is an input type that accepts RemediationPropertiesArgs, RemediationPropertiesPtr and RemediationPropertiesPtrOutput values.
// You can construct a concrete instance of `RemediationPropertiesPtrInput` via:
//
//          RemediationPropertiesArgs{...}
//
//  or:
//
//          nil
type RemediationPropertiesPtrInput interface {
	pulumi.Input

	ToRemediationPropertiesPtrOutput() RemediationPropertiesPtrOutput
	ToRemediationPropertiesPtrOutputWithContext(context.Context) RemediationPropertiesPtrOutput
}

type remediationPropertiesPtrType RemediationPropertiesArgs

func RemediationPropertiesPtr(v *RemediationPropertiesArgs) RemediationPropertiesPtrInput {
	return (*remediationPropertiesPtrType)(v)
}

func (*remediationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RemediationProperties)(nil)).Elem()
}

func (i *remediationPropertiesPtrType) ToRemediationPropertiesPtrOutput() RemediationPropertiesPtrOutput {
	return i.ToRemediationPropertiesPtrOutputWithContext(context.Background())
}

func (i *remediationPropertiesPtrType) ToRemediationPropertiesPtrOutputWithContext(ctx context.Context) RemediationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationPropertiesPtrOutput)
}

// The remediation properties.
type RemediationPropertiesOutput struct{ *pulumi.OutputState }

func (RemediationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemediationProperties)(nil)).Elem()
}

func (o RemediationPropertiesOutput) ToRemediationPropertiesOutput() RemediationPropertiesOutput {
	return o
}

func (o RemediationPropertiesOutput) ToRemediationPropertiesOutputWithContext(ctx context.Context) RemediationPropertiesOutput {
	return o
}

func (o RemediationPropertiesOutput) ToRemediationPropertiesPtrOutput() RemediationPropertiesPtrOutput {
	return o.ToRemediationPropertiesPtrOutputWithContext(context.Background())
}

func (o RemediationPropertiesOutput) ToRemediationPropertiesPtrOutputWithContext(ctx context.Context) RemediationPropertiesPtrOutput {
	return o.ApplyT(func(v RemediationProperties) *RemediationProperties {
		return &v
	}).(RemediationPropertiesPtrOutput)
}

// The filters that will be applied to determine which resources to remediate.
func (o RemediationPropertiesOutput) Filters() RemediationFiltersPtrOutput {
	return o.ApplyT(func(v RemediationProperties) *RemediationFilters { return v.Filters }).(RemediationFiltersPtrOutput)
}

// The resource ID of the policy assignment that should be remediated.
func (o RemediationPropertiesOutput) PolicyAssignmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RemediationProperties) *string { return v.PolicyAssignmentId }).(pulumi.StringPtrOutput)
}

// The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition.
func (o RemediationPropertiesOutput) PolicyDefinitionReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RemediationProperties) *string { return v.PolicyDefinitionReferenceId }).(pulumi.StringPtrOutput)
}

// The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
func (o RemediationPropertiesOutput) ResourceDiscoveryMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RemediationProperties) *string { return v.ResourceDiscoveryMode }).(pulumi.StringPtrOutput)
}

type RemediationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RemediationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemediationProperties)(nil)).Elem()
}

func (o RemediationPropertiesPtrOutput) ToRemediationPropertiesPtrOutput() RemediationPropertiesPtrOutput {
	return o
}

func (o RemediationPropertiesPtrOutput) ToRemediationPropertiesPtrOutputWithContext(ctx context.Context) RemediationPropertiesPtrOutput {
	return o
}

func (o RemediationPropertiesPtrOutput) Elem() RemediationPropertiesOutput {
	return o.ApplyT(func(v *RemediationProperties) RemediationProperties { return *v }).(RemediationPropertiesOutput)
}

// The filters that will be applied to determine which resources to remediate.
func (o RemediationPropertiesPtrOutput) Filters() RemediationFiltersPtrOutput {
	return o.ApplyT(func(v *RemediationProperties) *RemediationFilters {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(RemediationFiltersPtrOutput)
}

// The resource ID of the policy assignment that should be remediated.
func (o RemediationPropertiesPtrOutput) PolicyAssignmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemediationProperties) *string {
		if v == nil {
			return nil
		}
		return v.PolicyAssignmentId
	}).(pulumi.StringPtrOutput)
}

// The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition.
func (o RemediationPropertiesPtrOutput) PolicyDefinitionReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemediationProperties) *string {
		if v == nil {
			return nil
		}
		return v.PolicyDefinitionReferenceId
	}).(pulumi.StringPtrOutput)
}

// The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
func (o RemediationPropertiesPtrOutput) ResourceDiscoveryMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemediationProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourceDiscoveryMode
	}).(pulumi.StringPtrOutput)
}

// The remediation properties.
type RemediationPropertiesResponse struct {
	// The time at which the remediation was created.
	CreatedOn string `pulumi:"createdOn"`
	// The deployment status summary for all deployments created by the remediation.
	DeploymentStatus RemediationDeploymentSummaryResponse `pulumi:"deploymentStatus"`
	// The filters that will be applied to determine which resources to remediate.
	Filters *RemediationFiltersResponse `pulumi:"filters"`
	// The time at which the remediation was last updated.
	LastUpdatedOn string `pulumi:"lastUpdatedOn"`
	// The resource ID of the policy assignment that should be remediated.
	PolicyAssignmentId *string `pulumi:"policyAssignmentId"`
	// The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition.
	PolicyDefinitionReferenceId *string `pulumi:"policyDefinitionReferenceId"`
	// The status of the remediation.
	ProvisioningState string `pulumi:"provisioningState"`
	// The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
	ResourceDiscoveryMode *string `pulumi:"resourceDiscoveryMode"`
}

// RemediationPropertiesResponseInput is an input type that accepts RemediationPropertiesResponseArgs and RemediationPropertiesResponseOutput values.
// You can construct a concrete instance of `RemediationPropertiesResponseInput` via:
//
//          RemediationPropertiesResponseArgs{...}
type RemediationPropertiesResponseInput interface {
	pulumi.Input

	ToRemediationPropertiesResponseOutput() RemediationPropertiesResponseOutput
	ToRemediationPropertiesResponseOutputWithContext(context.Context) RemediationPropertiesResponseOutput
}

// The remediation properties.
type RemediationPropertiesResponseArgs struct {
	// The time at which the remediation was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The deployment status summary for all deployments created by the remediation.
	DeploymentStatus RemediationDeploymentSummaryResponseInput `pulumi:"deploymentStatus"`
	// The filters that will be applied to determine which resources to remediate.
	Filters RemediationFiltersResponsePtrInput `pulumi:"filters"`
	// The time at which the remediation was last updated.
	LastUpdatedOn pulumi.StringInput `pulumi:"lastUpdatedOn"`
	// The resource ID of the policy assignment that should be remediated.
	PolicyAssignmentId pulumi.StringPtrInput `pulumi:"policyAssignmentId"`
	// The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition.
	PolicyDefinitionReferenceId pulumi.StringPtrInput `pulumi:"policyDefinitionReferenceId"`
	// The status of the remediation.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
	ResourceDiscoveryMode pulumi.StringPtrInput `pulumi:"resourceDiscoveryMode"`
}

func (RemediationPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RemediationPropertiesResponse)(nil)).Elem()
}

func (i RemediationPropertiesResponseArgs) ToRemediationPropertiesResponseOutput() RemediationPropertiesResponseOutput {
	return i.ToRemediationPropertiesResponseOutputWithContext(context.Background())
}

func (i RemediationPropertiesResponseArgs) ToRemediationPropertiesResponseOutputWithContext(ctx context.Context) RemediationPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationPropertiesResponseOutput)
}

func (i RemediationPropertiesResponseArgs) ToRemediationPropertiesResponsePtrOutput() RemediationPropertiesResponsePtrOutput {
	return i.ToRemediationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i RemediationPropertiesResponseArgs) ToRemediationPropertiesResponsePtrOutputWithContext(ctx context.Context) RemediationPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationPropertiesResponseOutput).ToRemediationPropertiesResponsePtrOutputWithContext(ctx)
}

// RemediationPropertiesResponsePtrInput is an input type that accepts RemediationPropertiesResponseArgs, RemediationPropertiesResponsePtr and RemediationPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `RemediationPropertiesResponsePtrInput` via:
//
//          RemediationPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type RemediationPropertiesResponsePtrInput interface {
	pulumi.Input

	ToRemediationPropertiesResponsePtrOutput() RemediationPropertiesResponsePtrOutput
	ToRemediationPropertiesResponsePtrOutputWithContext(context.Context) RemediationPropertiesResponsePtrOutput
}

type remediationPropertiesResponsePtrType RemediationPropertiesResponseArgs

func RemediationPropertiesResponsePtr(v *RemediationPropertiesResponseArgs) RemediationPropertiesResponsePtrInput {
	return (*remediationPropertiesResponsePtrType)(v)
}

func (*remediationPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RemediationPropertiesResponse)(nil)).Elem()
}

func (i *remediationPropertiesResponsePtrType) ToRemediationPropertiesResponsePtrOutput() RemediationPropertiesResponsePtrOutput {
	return i.ToRemediationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *remediationPropertiesResponsePtrType) ToRemediationPropertiesResponsePtrOutputWithContext(ctx context.Context) RemediationPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationPropertiesResponsePtrOutput)
}

// The remediation properties.
type RemediationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RemediationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemediationPropertiesResponse)(nil)).Elem()
}

func (o RemediationPropertiesResponseOutput) ToRemediationPropertiesResponseOutput() RemediationPropertiesResponseOutput {
	return o
}

func (o RemediationPropertiesResponseOutput) ToRemediationPropertiesResponseOutputWithContext(ctx context.Context) RemediationPropertiesResponseOutput {
	return o
}

func (o RemediationPropertiesResponseOutput) ToRemediationPropertiesResponsePtrOutput() RemediationPropertiesResponsePtrOutput {
	return o.ToRemediationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o RemediationPropertiesResponseOutput) ToRemediationPropertiesResponsePtrOutputWithContext(ctx context.Context) RemediationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v RemediationPropertiesResponse) *RemediationPropertiesResponse {
		return &v
	}).(RemediationPropertiesResponsePtrOutput)
}

// The time at which the remediation was created.
func (o RemediationPropertiesResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v RemediationPropertiesResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The deployment status summary for all deployments created by the remediation.
func (o RemediationPropertiesResponseOutput) DeploymentStatus() RemediationDeploymentSummaryResponseOutput {
	return o.ApplyT(func(v RemediationPropertiesResponse) RemediationDeploymentSummaryResponse { return v.DeploymentStatus }).(RemediationDeploymentSummaryResponseOutput)
}

// The filters that will be applied to determine which resources to remediate.
func (o RemediationPropertiesResponseOutput) Filters() RemediationFiltersResponsePtrOutput {
	return o.ApplyT(func(v RemediationPropertiesResponse) *RemediationFiltersResponse { return v.Filters }).(RemediationFiltersResponsePtrOutput)
}

// The time at which the remediation was last updated.
func (o RemediationPropertiesResponseOutput) LastUpdatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v RemediationPropertiesResponse) string { return v.LastUpdatedOn }).(pulumi.StringOutput)
}

// The resource ID of the policy assignment that should be remediated.
func (o RemediationPropertiesResponseOutput) PolicyAssignmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RemediationPropertiesResponse) *string { return v.PolicyAssignmentId }).(pulumi.StringPtrOutput)
}

// The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition.
func (o RemediationPropertiesResponseOutput) PolicyDefinitionReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RemediationPropertiesResponse) *string { return v.PolicyDefinitionReferenceId }).(pulumi.StringPtrOutput)
}

// The status of the remediation.
func (o RemediationPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RemediationPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
func (o RemediationPropertiesResponseOutput) ResourceDiscoveryMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RemediationPropertiesResponse) *string { return v.ResourceDiscoveryMode }).(pulumi.StringPtrOutput)
}

type RemediationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (RemediationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemediationPropertiesResponse)(nil)).Elem()
}

func (o RemediationPropertiesResponsePtrOutput) ToRemediationPropertiesResponsePtrOutput() RemediationPropertiesResponsePtrOutput {
	return o
}

func (o RemediationPropertiesResponsePtrOutput) ToRemediationPropertiesResponsePtrOutputWithContext(ctx context.Context) RemediationPropertiesResponsePtrOutput {
	return o
}

func (o RemediationPropertiesResponsePtrOutput) Elem() RemediationPropertiesResponseOutput {
	return o.ApplyT(func(v *RemediationPropertiesResponse) RemediationPropertiesResponse { return *v }).(RemediationPropertiesResponseOutput)
}

// The time at which the remediation was created.
func (o RemediationPropertiesResponsePtrOutput) CreatedOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemediationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedOn
	}).(pulumi.StringPtrOutput)
}

// The deployment status summary for all deployments created by the remediation.
func (o RemediationPropertiesResponsePtrOutput) DeploymentStatus() RemediationDeploymentSummaryResponsePtrOutput {
	return o.ApplyT(func(v *RemediationPropertiesResponse) *RemediationDeploymentSummaryResponse {
		if v == nil {
			return nil
		}
		return &v.DeploymentStatus
	}).(RemediationDeploymentSummaryResponsePtrOutput)
}

// The filters that will be applied to determine which resources to remediate.
func (o RemediationPropertiesResponsePtrOutput) Filters() RemediationFiltersResponsePtrOutput {
	return o.ApplyT(func(v *RemediationPropertiesResponse) *RemediationFiltersResponse {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(RemediationFiltersResponsePtrOutput)
}

// The time at which the remediation was last updated.
func (o RemediationPropertiesResponsePtrOutput) LastUpdatedOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemediationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastUpdatedOn
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the policy assignment that should be remediated.
func (o RemediationPropertiesResponsePtrOutput) PolicyAssignmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemediationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyAssignmentId
	}).(pulumi.StringPtrOutput)
}

// The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition.
func (o RemediationPropertiesResponsePtrOutput) PolicyDefinitionReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemediationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyDefinitionReferenceId
	}).(pulumi.StringPtrOutput)
}

// The status of the remediation.
func (o RemediationPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemediationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
func (o RemediationPropertiesResponsePtrOutput) ResourceDiscoveryMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemediationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceDiscoveryMode
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(RemediationTypeOutput{})
	pulumi.RegisterOutputType(RemediationDeploymentSummaryOutput{})
	pulumi.RegisterOutputType(RemediationDeploymentSummaryResponseOutput{})
	pulumi.RegisterOutputType(RemediationDeploymentSummaryResponsePtrOutput{})
	pulumi.RegisterOutputType(RemediationFiltersOutput{})
	pulumi.RegisterOutputType(RemediationFiltersPtrOutput{})
	pulumi.RegisterOutputType(RemediationFiltersResponseOutput{})
	pulumi.RegisterOutputType(RemediationFiltersResponsePtrOutput{})
	pulumi.RegisterOutputType(RemediationPropertiesOutput{})
	pulumi.RegisterOutputType(RemediationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RemediationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RemediationPropertiesResponsePtrOutput{})
}
