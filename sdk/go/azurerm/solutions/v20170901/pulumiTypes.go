// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170901

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Information about managed application.
type ApplicationType struct {
	// The identity of the resource.
	Identity *IdentityResponse `pulumi:"identity"`
	// The kind of the managed application. Allowed values are MarketPlace and ServiceCatalog.
	Kind string `pulumi:"kind"`
	// Resource location
	Location *string `pulumi:"location"`
	// ID of the resource that manages this resource.
	ManagedBy *string `pulumi:"managedBy"`
	// Resource name
	Name string `pulumi:"name"`
	// The plan information.
	Plan *PlanResponse `pulumi:"plan"`
	// The managed application properties.
	Properties ApplicationPropertiesResponse `pulumi:"properties"`
	// The SKU of the resource.
	Sku *SkuResponse `pulumi:"sku"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

// ApplicationTypeInput is an input type that accepts ApplicationTypeArgs and ApplicationTypeOutput values.
// You can construct a concrete instance of `ApplicationTypeInput` via:
//
//          ApplicationTypeArgs{...}
type ApplicationTypeInput interface {
	pulumi.Input

	ToApplicationTypeOutput() ApplicationTypeOutput
	ToApplicationTypeOutputWithContext(context.Context) ApplicationTypeOutput
}

// Information about managed application.
type ApplicationTypeArgs struct {
	// The identity of the resource.
	Identity IdentityResponsePtrInput `pulumi:"identity"`
	// The kind of the managed application. Allowed values are MarketPlace and ServiceCatalog.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Resource location
	Location pulumi.StringPtrInput `pulumi:"location"`
	// ID of the resource that manages this resource.
	ManagedBy pulumi.StringPtrInput `pulumi:"managedBy"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// The plan information.
	Plan PlanResponsePtrInput `pulumi:"plan"`
	// The managed application properties.
	Properties ApplicationPropertiesResponseInput `pulumi:"properties"`
	// The SKU of the resource.
	Sku SkuResponsePtrInput `pulumi:"sku"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationType)(nil)).Elem()
}

func (i ApplicationTypeArgs) ToApplicationTypeOutput() ApplicationTypeOutput {
	return i.ToApplicationTypeOutputWithContext(context.Background())
}

func (i ApplicationTypeArgs) ToApplicationTypeOutputWithContext(ctx context.Context) ApplicationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationTypeOutput)
}

// Information about managed application.
type ApplicationTypeOutput struct{ *pulumi.OutputState }

func (ApplicationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationType)(nil)).Elem()
}

func (o ApplicationTypeOutput) ToApplicationTypeOutput() ApplicationTypeOutput {
	return o
}

func (o ApplicationTypeOutput) ToApplicationTypeOutputWithContext(ctx context.Context) ApplicationTypeOutput {
	return o
}

// The identity of the resource.
func (o ApplicationTypeOutput) Identity() IdentityResponsePtrOutput {
	return o.ApplyT(func(v ApplicationType) *IdentityResponse { return v.Identity }).(IdentityResponsePtrOutput)
}

// The kind of the managed application. Allowed values are MarketPlace and ServiceCatalog.
func (o ApplicationTypeOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationType) string { return v.Kind }).(pulumi.StringOutput)
}

// Resource location
func (o ApplicationTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// ID of the resource that manages this resource.
func (o ApplicationTypeOutput) ManagedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationType) *string { return v.ManagedBy }).(pulumi.StringPtrOutput)
}

// Resource name
func (o ApplicationTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationType) string { return v.Name }).(pulumi.StringOutput)
}

// The plan information.
func (o ApplicationTypeOutput) Plan() PlanResponsePtrOutput {
	return o.ApplyT(func(v ApplicationType) *PlanResponse { return v.Plan }).(PlanResponsePtrOutput)
}

// The managed application properties.
func (o ApplicationTypeOutput) Properties() ApplicationPropertiesResponseOutput {
	return o.ApplyT(func(v ApplicationType) ApplicationPropertiesResponse { return v.Properties }).(ApplicationPropertiesResponseOutput)
}

// The SKU of the resource.
func (o ApplicationTypeOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v ApplicationType) *SkuResponse { return v.Sku }).(SkuResponsePtrOutput)
}

// Resource tags
func (o ApplicationTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o ApplicationTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationType) string { return v.Type }).(pulumi.StringOutput)
}

// Managed application artifact.
type ApplicationArtifact struct {
	// The managed application artifact name.
	Name *string `pulumi:"name"`
	// The managed application artifact type.
	Type *string `pulumi:"type"`
	// The managed application artifact blob uri.
	Uri *string `pulumi:"uri"`
}

// ApplicationArtifactInput is an input type that accepts ApplicationArtifactArgs and ApplicationArtifactOutput values.
// You can construct a concrete instance of `ApplicationArtifactInput` via:
//
//          ApplicationArtifactArgs{...}
type ApplicationArtifactInput interface {
	pulumi.Input

	ToApplicationArtifactOutput() ApplicationArtifactOutput
	ToApplicationArtifactOutputWithContext(context.Context) ApplicationArtifactOutput
}

// Managed application artifact.
type ApplicationArtifactArgs struct {
	// The managed application artifact name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The managed application artifact type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The managed application artifact blob uri.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (ApplicationArtifactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationArtifact)(nil)).Elem()
}

func (i ApplicationArtifactArgs) ToApplicationArtifactOutput() ApplicationArtifactOutput {
	return i.ToApplicationArtifactOutputWithContext(context.Background())
}

func (i ApplicationArtifactArgs) ToApplicationArtifactOutputWithContext(ctx context.Context) ApplicationArtifactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationArtifactOutput)
}

// ApplicationArtifactArrayInput is an input type that accepts ApplicationArtifactArray and ApplicationArtifactArrayOutput values.
// You can construct a concrete instance of `ApplicationArtifactArrayInput` via:
//
//          ApplicationArtifactArray{ ApplicationArtifactArgs{...} }
type ApplicationArtifactArrayInput interface {
	pulumi.Input

	ToApplicationArtifactArrayOutput() ApplicationArtifactArrayOutput
	ToApplicationArtifactArrayOutputWithContext(context.Context) ApplicationArtifactArrayOutput
}

type ApplicationArtifactArray []ApplicationArtifactInput

func (ApplicationArtifactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationArtifact)(nil)).Elem()
}

func (i ApplicationArtifactArray) ToApplicationArtifactArrayOutput() ApplicationArtifactArrayOutput {
	return i.ToApplicationArtifactArrayOutputWithContext(context.Background())
}

func (i ApplicationArtifactArray) ToApplicationArtifactArrayOutputWithContext(ctx context.Context) ApplicationArtifactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationArtifactArrayOutput)
}

// Managed application artifact.
type ApplicationArtifactOutput struct{ *pulumi.OutputState }

func (ApplicationArtifactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationArtifact)(nil)).Elem()
}

func (o ApplicationArtifactOutput) ToApplicationArtifactOutput() ApplicationArtifactOutput {
	return o
}

func (o ApplicationArtifactOutput) ToApplicationArtifactOutputWithContext(ctx context.Context) ApplicationArtifactOutput {
	return o
}

// The managed application artifact name.
func (o ApplicationArtifactOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationArtifact) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The managed application artifact type.
func (o ApplicationArtifactOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationArtifact) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The managed application artifact blob uri.
func (o ApplicationArtifactOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationArtifact) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type ApplicationArtifactArrayOutput struct{ *pulumi.OutputState }

func (ApplicationArtifactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationArtifact)(nil)).Elem()
}

func (o ApplicationArtifactArrayOutput) ToApplicationArtifactArrayOutput() ApplicationArtifactArrayOutput {
	return o
}

func (o ApplicationArtifactArrayOutput) ToApplicationArtifactArrayOutputWithContext(ctx context.Context) ApplicationArtifactArrayOutput {
	return o
}

func (o ApplicationArtifactArrayOutput) Index(i pulumi.IntInput) ApplicationArtifactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationArtifact {
		return vs[0].([]ApplicationArtifact)[vs[1].(int)]
	}).(ApplicationArtifactOutput)
}

// Managed application artifact.
type ApplicationArtifactResponse struct {
	// The managed application artifact name.
	Name *string `pulumi:"name"`
	// The managed application artifact type.
	Type *string `pulumi:"type"`
	// The managed application artifact blob uri.
	Uri *string `pulumi:"uri"`
}

// ApplicationArtifactResponseInput is an input type that accepts ApplicationArtifactResponseArgs and ApplicationArtifactResponseOutput values.
// You can construct a concrete instance of `ApplicationArtifactResponseInput` via:
//
//          ApplicationArtifactResponseArgs{...}
type ApplicationArtifactResponseInput interface {
	pulumi.Input

	ToApplicationArtifactResponseOutput() ApplicationArtifactResponseOutput
	ToApplicationArtifactResponseOutputWithContext(context.Context) ApplicationArtifactResponseOutput
}

// Managed application artifact.
type ApplicationArtifactResponseArgs struct {
	// The managed application artifact name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The managed application artifact type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The managed application artifact blob uri.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (ApplicationArtifactResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationArtifactResponse)(nil)).Elem()
}

func (i ApplicationArtifactResponseArgs) ToApplicationArtifactResponseOutput() ApplicationArtifactResponseOutput {
	return i.ToApplicationArtifactResponseOutputWithContext(context.Background())
}

func (i ApplicationArtifactResponseArgs) ToApplicationArtifactResponseOutputWithContext(ctx context.Context) ApplicationArtifactResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationArtifactResponseOutput)
}

// ApplicationArtifactResponseArrayInput is an input type that accepts ApplicationArtifactResponseArray and ApplicationArtifactResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationArtifactResponseArrayInput` via:
//
//          ApplicationArtifactResponseArray{ ApplicationArtifactResponseArgs{...} }
type ApplicationArtifactResponseArrayInput interface {
	pulumi.Input

	ToApplicationArtifactResponseArrayOutput() ApplicationArtifactResponseArrayOutput
	ToApplicationArtifactResponseArrayOutputWithContext(context.Context) ApplicationArtifactResponseArrayOutput
}

type ApplicationArtifactResponseArray []ApplicationArtifactResponseInput

func (ApplicationArtifactResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationArtifactResponse)(nil)).Elem()
}

func (i ApplicationArtifactResponseArray) ToApplicationArtifactResponseArrayOutput() ApplicationArtifactResponseArrayOutput {
	return i.ToApplicationArtifactResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationArtifactResponseArray) ToApplicationArtifactResponseArrayOutputWithContext(ctx context.Context) ApplicationArtifactResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationArtifactResponseArrayOutput)
}

// Managed application artifact.
type ApplicationArtifactResponseOutput struct{ *pulumi.OutputState }

func (ApplicationArtifactResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationArtifactResponse)(nil)).Elem()
}

func (o ApplicationArtifactResponseOutput) ToApplicationArtifactResponseOutput() ApplicationArtifactResponseOutput {
	return o
}

func (o ApplicationArtifactResponseOutput) ToApplicationArtifactResponseOutputWithContext(ctx context.Context) ApplicationArtifactResponseOutput {
	return o
}

// The managed application artifact name.
func (o ApplicationArtifactResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationArtifactResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The managed application artifact type.
func (o ApplicationArtifactResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationArtifactResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The managed application artifact blob uri.
func (o ApplicationArtifactResponseOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationArtifactResponse) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type ApplicationArtifactResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationArtifactResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationArtifactResponse)(nil)).Elem()
}

func (o ApplicationArtifactResponseArrayOutput) ToApplicationArtifactResponseArrayOutput() ApplicationArtifactResponseArrayOutput {
	return o
}

func (o ApplicationArtifactResponseArrayOutput) ToApplicationArtifactResponseArrayOutputWithContext(ctx context.Context) ApplicationArtifactResponseArrayOutput {
	return o
}

func (o ApplicationArtifactResponseArrayOutput) Index(i pulumi.IntInput) ApplicationArtifactResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationArtifactResponse {
		return vs[0].([]ApplicationArtifactResponse)[vs[1].(int)]
	}).(ApplicationArtifactResponseOutput)
}

// Information about managed application definition.
type ApplicationDefinitionType struct {
	// The identity of the resource.
	Identity *IdentityResponse `pulumi:"identity"`
	// Resource location
	Location *string `pulumi:"location"`
	// ID of the resource that manages this resource.
	ManagedBy *string `pulumi:"managedBy"`
	// Resource name
	Name string `pulumi:"name"`
	// The managed application definition properties.
	Properties ApplicationDefinitionPropertiesResponse `pulumi:"properties"`
	// The SKU of the resource.
	Sku *SkuResponse `pulumi:"sku"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

// ApplicationDefinitionTypeInput is an input type that accepts ApplicationDefinitionTypeArgs and ApplicationDefinitionTypeOutput values.
// You can construct a concrete instance of `ApplicationDefinitionTypeInput` via:
//
//          ApplicationDefinitionTypeArgs{...}
type ApplicationDefinitionTypeInput interface {
	pulumi.Input

	ToApplicationDefinitionTypeOutput() ApplicationDefinitionTypeOutput
	ToApplicationDefinitionTypeOutputWithContext(context.Context) ApplicationDefinitionTypeOutput
}

// Information about managed application definition.
type ApplicationDefinitionTypeArgs struct {
	// The identity of the resource.
	Identity IdentityResponsePtrInput `pulumi:"identity"`
	// Resource location
	Location pulumi.StringPtrInput `pulumi:"location"`
	// ID of the resource that manages this resource.
	ManagedBy pulumi.StringPtrInput `pulumi:"managedBy"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// The managed application definition properties.
	Properties ApplicationDefinitionPropertiesResponseInput `pulumi:"properties"`
	// The SKU of the resource.
	Sku SkuResponsePtrInput `pulumi:"sku"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationDefinitionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationDefinitionType)(nil)).Elem()
}

func (i ApplicationDefinitionTypeArgs) ToApplicationDefinitionTypeOutput() ApplicationDefinitionTypeOutput {
	return i.ToApplicationDefinitionTypeOutputWithContext(context.Background())
}

func (i ApplicationDefinitionTypeArgs) ToApplicationDefinitionTypeOutputWithContext(ctx context.Context) ApplicationDefinitionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationDefinitionTypeOutput)
}

// Information about managed application definition.
type ApplicationDefinitionTypeOutput struct{ *pulumi.OutputState }

func (ApplicationDefinitionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationDefinitionType)(nil)).Elem()
}

func (o ApplicationDefinitionTypeOutput) ToApplicationDefinitionTypeOutput() ApplicationDefinitionTypeOutput {
	return o
}

func (o ApplicationDefinitionTypeOutput) ToApplicationDefinitionTypeOutputWithContext(ctx context.Context) ApplicationDefinitionTypeOutput {
	return o
}

// The identity of the resource.
func (o ApplicationDefinitionTypeOutput) Identity() IdentityResponsePtrOutput {
	return o.ApplyT(func(v ApplicationDefinitionType) *IdentityResponse { return v.Identity }).(IdentityResponsePtrOutput)
}

// Resource location
func (o ApplicationDefinitionTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationDefinitionType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// ID of the resource that manages this resource.
func (o ApplicationDefinitionTypeOutput) ManagedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationDefinitionType) *string { return v.ManagedBy }).(pulumi.StringPtrOutput)
}

// Resource name
func (o ApplicationDefinitionTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationDefinitionType) string { return v.Name }).(pulumi.StringOutput)
}

// The managed application definition properties.
func (o ApplicationDefinitionTypeOutput) Properties() ApplicationDefinitionPropertiesResponseOutput {
	return o.ApplyT(func(v ApplicationDefinitionType) ApplicationDefinitionPropertiesResponse { return v.Properties }).(ApplicationDefinitionPropertiesResponseOutput)
}

// The SKU of the resource.
func (o ApplicationDefinitionTypeOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v ApplicationDefinitionType) *SkuResponse { return v.Sku }).(SkuResponsePtrOutput)
}

// Resource tags
func (o ApplicationDefinitionTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationDefinitionType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o ApplicationDefinitionTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationDefinitionType) string { return v.Type }).(pulumi.StringOutput)
}

// The managed application definition properties.
type ApplicationDefinitionProperties struct {
	// The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
	Artifacts []ApplicationArtifact `pulumi:"artifacts"`
	// The managed application provider authorizations.
	Authorizations []ApplicationProviderAuthorization `pulumi:"authorizations"`
	// The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
	CreateUiDefinition map[string]string `pulumi:"createUiDefinition"`
	// The managed application definition description.
	Description *string `pulumi:"description"`
	// The managed application definition display name.
	DisplayName *string `pulumi:"displayName"`
	// A value indicating whether the package is enabled or not.
	IsEnabled *string `pulumi:"isEnabled"`
	// The managed application lock level.
	LockLevel string `pulumi:"lockLevel"`
	// The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
	MainTemplate map[string]string `pulumi:"mainTemplate"`
	// The managed application definition package file Uri. Use this element
	PackageFileUri *string `pulumi:"packageFileUri"`
}

// ApplicationDefinitionPropertiesInput is an input type that accepts ApplicationDefinitionPropertiesArgs and ApplicationDefinitionPropertiesOutput values.
// You can construct a concrete instance of `ApplicationDefinitionPropertiesInput` via:
//
//          ApplicationDefinitionPropertiesArgs{...}
type ApplicationDefinitionPropertiesInput interface {
	pulumi.Input

	ToApplicationDefinitionPropertiesOutput() ApplicationDefinitionPropertiesOutput
	ToApplicationDefinitionPropertiesOutputWithContext(context.Context) ApplicationDefinitionPropertiesOutput
}

// The managed application definition properties.
type ApplicationDefinitionPropertiesArgs struct {
	// The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
	Artifacts ApplicationArtifactArrayInput `pulumi:"artifacts"`
	// The managed application provider authorizations.
	Authorizations ApplicationProviderAuthorizationArrayInput `pulumi:"authorizations"`
	// The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
	CreateUiDefinition pulumi.StringMapInput `pulumi:"createUiDefinition"`
	// The managed application definition description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The managed application definition display name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A value indicating whether the package is enabled or not.
	IsEnabled pulumi.StringPtrInput `pulumi:"isEnabled"`
	// The managed application lock level.
	LockLevel pulumi.StringInput `pulumi:"lockLevel"`
	// The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
	MainTemplate pulumi.StringMapInput `pulumi:"mainTemplate"`
	// The managed application definition package file Uri. Use this element
	PackageFileUri pulumi.StringPtrInput `pulumi:"packageFileUri"`
}

func (ApplicationDefinitionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationDefinitionProperties)(nil)).Elem()
}

func (i ApplicationDefinitionPropertiesArgs) ToApplicationDefinitionPropertiesOutput() ApplicationDefinitionPropertiesOutput {
	return i.ToApplicationDefinitionPropertiesOutputWithContext(context.Background())
}

func (i ApplicationDefinitionPropertiesArgs) ToApplicationDefinitionPropertiesOutputWithContext(ctx context.Context) ApplicationDefinitionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationDefinitionPropertiesOutput)
}

func (i ApplicationDefinitionPropertiesArgs) ToApplicationDefinitionPropertiesPtrOutput() ApplicationDefinitionPropertiesPtrOutput {
	return i.ToApplicationDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (i ApplicationDefinitionPropertiesArgs) ToApplicationDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ApplicationDefinitionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationDefinitionPropertiesOutput).ToApplicationDefinitionPropertiesPtrOutputWithContext(ctx)
}

// ApplicationDefinitionPropertiesPtrInput is an input type that accepts ApplicationDefinitionPropertiesArgs, ApplicationDefinitionPropertiesPtr and ApplicationDefinitionPropertiesPtrOutput values.
// You can construct a concrete instance of `ApplicationDefinitionPropertiesPtrInput` via:
//
//          ApplicationDefinitionPropertiesArgs{...}
//
//  or:
//
//          nil
type ApplicationDefinitionPropertiesPtrInput interface {
	pulumi.Input

	ToApplicationDefinitionPropertiesPtrOutput() ApplicationDefinitionPropertiesPtrOutput
	ToApplicationDefinitionPropertiesPtrOutputWithContext(context.Context) ApplicationDefinitionPropertiesPtrOutput
}

type applicationDefinitionPropertiesPtrType ApplicationDefinitionPropertiesArgs

func ApplicationDefinitionPropertiesPtr(v *ApplicationDefinitionPropertiesArgs) ApplicationDefinitionPropertiesPtrInput {
	return (*applicationDefinitionPropertiesPtrType)(v)
}

func (*applicationDefinitionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationDefinitionProperties)(nil)).Elem()
}

func (i *applicationDefinitionPropertiesPtrType) ToApplicationDefinitionPropertiesPtrOutput() ApplicationDefinitionPropertiesPtrOutput {
	return i.ToApplicationDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (i *applicationDefinitionPropertiesPtrType) ToApplicationDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ApplicationDefinitionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationDefinitionPropertiesPtrOutput)
}

// The managed application definition properties.
type ApplicationDefinitionPropertiesOutput struct{ *pulumi.OutputState }

func (ApplicationDefinitionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationDefinitionProperties)(nil)).Elem()
}

func (o ApplicationDefinitionPropertiesOutput) ToApplicationDefinitionPropertiesOutput() ApplicationDefinitionPropertiesOutput {
	return o
}

func (o ApplicationDefinitionPropertiesOutput) ToApplicationDefinitionPropertiesOutputWithContext(ctx context.Context) ApplicationDefinitionPropertiesOutput {
	return o
}

func (o ApplicationDefinitionPropertiesOutput) ToApplicationDefinitionPropertiesPtrOutput() ApplicationDefinitionPropertiesPtrOutput {
	return o.ToApplicationDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (o ApplicationDefinitionPropertiesOutput) ToApplicationDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ApplicationDefinitionPropertiesPtrOutput {
	return o.ApplyT(func(v ApplicationDefinitionProperties) *ApplicationDefinitionProperties {
		return &v
	}).(ApplicationDefinitionPropertiesPtrOutput)
}

// The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
func (o ApplicationDefinitionPropertiesOutput) Artifacts() ApplicationArtifactArrayOutput {
	return o.ApplyT(func(v ApplicationDefinitionProperties) []ApplicationArtifact { return v.Artifacts }).(ApplicationArtifactArrayOutput)
}

// The managed application provider authorizations.
func (o ApplicationDefinitionPropertiesOutput) Authorizations() ApplicationProviderAuthorizationArrayOutput {
	return o.ApplyT(func(v ApplicationDefinitionProperties) []ApplicationProviderAuthorization { return v.Authorizations }).(ApplicationProviderAuthorizationArrayOutput)
}

// The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
func (o ApplicationDefinitionPropertiesOutput) CreateUiDefinition() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationDefinitionProperties) map[string]string { return v.CreateUiDefinition }).(pulumi.StringMapOutput)
}

// The managed application definition description.
func (o ApplicationDefinitionPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationDefinitionProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The managed application definition display name.
func (o ApplicationDefinitionPropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationDefinitionProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// A value indicating whether the package is enabled or not.
func (o ApplicationDefinitionPropertiesOutput) IsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationDefinitionProperties) *string { return v.IsEnabled }).(pulumi.StringPtrOutput)
}

// The managed application lock level.
func (o ApplicationDefinitionPropertiesOutput) LockLevel() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationDefinitionProperties) string { return v.LockLevel }).(pulumi.StringOutput)
}

// The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
func (o ApplicationDefinitionPropertiesOutput) MainTemplate() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationDefinitionProperties) map[string]string { return v.MainTemplate }).(pulumi.StringMapOutput)
}

// The managed application definition package file Uri. Use this element
func (o ApplicationDefinitionPropertiesOutput) PackageFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationDefinitionProperties) *string { return v.PackageFileUri }).(pulumi.StringPtrOutput)
}

type ApplicationDefinitionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ApplicationDefinitionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationDefinitionProperties)(nil)).Elem()
}

func (o ApplicationDefinitionPropertiesPtrOutput) ToApplicationDefinitionPropertiesPtrOutput() ApplicationDefinitionPropertiesPtrOutput {
	return o
}

func (o ApplicationDefinitionPropertiesPtrOutput) ToApplicationDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ApplicationDefinitionPropertiesPtrOutput {
	return o
}

func (o ApplicationDefinitionPropertiesPtrOutput) Elem() ApplicationDefinitionPropertiesOutput {
	return o.ApplyT(func(v *ApplicationDefinitionProperties) ApplicationDefinitionProperties { return *v }).(ApplicationDefinitionPropertiesOutput)
}

// The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
func (o ApplicationDefinitionPropertiesPtrOutput) Artifacts() ApplicationArtifactArrayOutput {
	return o.ApplyT(func(v *ApplicationDefinitionProperties) []ApplicationArtifact {
		if v == nil {
			return nil
		}
		return v.Artifacts
	}).(ApplicationArtifactArrayOutput)
}

// The managed application provider authorizations.
func (o ApplicationDefinitionPropertiesPtrOutput) Authorizations() ApplicationProviderAuthorizationArrayOutput {
	return o.ApplyT(func(v *ApplicationDefinitionProperties) []ApplicationProviderAuthorization {
		if v == nil {
			return nil
		}
		return v.Authorizations
	}).(ApplicationProviderAuthorizationArrayOutput)
}

// The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
func (o ApplicationDefinitionPropertiesPtrOutput) CreateUiDefinition() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApplicationDefinitionProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.CreateUiDefinition
	}).(pulumi.StringMapOutput)
}

// The managed application definition description.
func (o ApplicationDefinitionPropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The managed application definition display name.
func (o ApplicationDefinitionPropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether the package is enabled or not.
func (o ApplicationDefinitionPropertiesPtrOutput) IsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.StringPtrOutput)
}

// The managed application lock level.
func (o ApplicationDefinitionPropertiesPtrOutput) LockLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.LockLevel
	}).(pulumi.StringPtrOutput)
}

// The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
func (o ApplicationDefinitionPropertiesPtrOutput) MainTemplate() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApplicationDefinitionProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.MainTemplate
	}).(pulumi.StringMapOutput)
}

// The managed application definition package file Uri. Use this element
func (o ApplicationDefinitionPropertiesPtrOutput) PackageFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.PackageFileUri
	}).(pulumi.StringPtrOutput)
}

// The managed application definition properties.
type ApplicationDefinitionPropertiesResponse struct {
	// The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
	Artifacts []ApplicationArtifactResponse `pulumi:"artifacts"`
	// The managed application provider authorizations.
	Authorizations []ApplicationProviderAuthorizationResponse `pulumi:"authorizations"`
	// The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
	CreateUiDefinition map[string]string `pulumi:"createUiDefinition"`
	// The managed application definition description.
	Description *string `pulumi:"description"`
	// The managed application definition display name.
	DisplayName *string `pulumi:"displayName"`
	// A value indicating whether the package is enabled or not.
	IsEnabled *string `pulumi:"isEnabled"`
	// The managed application lock level.
	LockLevel string `pulumi:"lockLevel"`
	// The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
	MainTemplate map[string]string `pulumi:"mainTemplate"`
	// The managed application definition package file Uri. Use this element
	PackageFileUri *string `pulumi:"packageFileUri"`
}

// ApplicationDefinitionPropertiesResponseInput is an input type that accepts ApplicationDefinitionPropertiesResponseArgs and ApplicationDefinitionPropertiesResponseOutput values.
// You can construct a concrete instance of `ApplicationDefinitionPropertiesResponseInput` via:
//
//          ApplicationDefinitionPropertiesResponseArgs{...}
type ApplicationDefinitionPropertiesResponseInput interface {
	pulumi.Input

	ToApplicationDefinitionPropertiesResponseOutput() ApplicationDefinitionPropertiesResponseOutput
	ToApplicationDefinitionPropertiesResponseOutputWithContext(context.Context) ApplicationDefinitionPropertiesResponseOutput
}

// The managed application definition properties.
type ApplicationDefinitionPropertiesResponseArgs struct {
	// The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
	Artifacts ApplicationArtifactResponseArrayInput `pulumi:"artifacts"`
	// The managed application provider authorizations.
	Authorizations ApplicationProviderAuthorizationResponseArrayInput `pulumi:"authorizations"`
	// The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
	CreateUiDefinition pulumi.StringMapInput `pulumi:"createUiDefinition"`
	// The managed application definition description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The managed application definition display name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A value indicating whether the package is enabled or not.
	IsEnabled pulumi.StringPtrInput `pulumi:"isEnabled"`
	// The managed application lock level.
	LockLevel pulumi.StringInput `pulumi:"lockLevel"`
	// The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
	MainTemplate pulumi.StringMapInput `pulumi:"mainTemplate"`
	// The managed application definition package file Uri. Use this element
	PackageFileUri pulumi.StringPtrInput `pulumi:"packageFileUri"`
}

func (ApplicationDefinitionPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationDefinitionPropertiesResponse)(nil)).Elem()
}

func (i ApplicationDefinitionPropertiesResponseArgs) ToApplicationDefinitionPropertiesResponseOutput() ApplicationDefinitionPropertiesResponseOutput {
	return i.ToApplicationDefinitionPropertiesResponseOutputWithContext(context.Background())
}

func (i ApplicationDefinitionPropertiesResponseArgs) ToApplicationDefinitionPropertiesResponseOutputWithContext(ctx context.Context) ApplicationDefinitionPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationDefinitionPropertiesResponseOutput)
}

func (i ApplicationDefinitionPropertiesResponseArgs) ToApplicationDefinitionPropertiesResponsePtrOutput() ApplicationDefinitionPropertiesResponsePtrOutput {
	return i.ToApplicationDefinitionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationDefinitionPropertiesResponseArgs) ToApplicationDefinitionPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationDefinitionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationDefinitionPropertiesResponseOutput).ToApplicationDefinitionPropertiesResponsePtrOutputWithContext(ctx)
}

// ApplicationDefinitionPropertiesResponsePtrInput is an input type that accepts ApplicationDefinitionPropertiesResponseArgs, ApplicationDefinitionPropertiesResponsePtr and ApplicationDefinitionPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationDefinitionPropertiesResponsePtrInput` via:
//
//          ApplicationDefinitionPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationDefinitionPropertiesResponsePtrInput interface {
	pulumi.Input

	ToApplicationDefinitionPropertiesResponsePtrOutput() ApplicationDefinitionPropertiesResponsePtrOutput
	ToApplicationDefinitionPropertiesResponsePtrOutputWithContext(context.Context) ApplicationDefinitionPropertiesResponsePtrOutput
}

type applicationDefinitionPropertiesResponsePtrType ApplicationDefinitionPropertiesResponseArgs

func ApplicationDefinitionPropertiesResponsePtr(v *ApplicationDefinitionPropertiesResponseArgs) ApplicationDefinitionPropertiesResponsePtrInput {
	return (*applicationDefinitionPropertiesResponsePtrType)(v)
}

func (*applicationDefinitionPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationDefinitionPropertiesResponse)(nil)).Elem()
}

func (i *applicationDefinitionPropertiesResponsePtrType) ToApplicationDefinitionPropertiesResponsePtrOutput() ApplicationDefinitionPropertiesResponsePtrOutput {
	return i.ToApplicationDefinitionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *applicationDefinitionPropertiesResponsePtrType) ToApplicationDefinitionPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationDefinitionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationDefinitionPropertiesResponsePtrOutput)
}

// The managed application definition properties.
type ApplicationDefinitionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApplicationDefinitionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationDefinitionPropertiesResponse)(nil)).Elem()
}

func (o ApplicationDefinitionPropertiesResponseOutput) ToApplicationDefinitionPropertiesResponseOutput() ApplicationDefinitionPropertiesResponseOutput {
	return o
}

func (o ApplicationDefinitionPropertiesResponseOutput) ToApplicationDefinitionPropertiesResponseOutputWithContext(ctx context.Context) ApplicationDefinitionPropertiesResponseOutput {
	return o
}

func (o ApplicationDefinitionPropertiesResponseOutput) ToApplicationDefinitionPropertiesResponsePtrOutput() ApplicationDefinitionPropertiesResponsePtrOutput {
	return o.ToApplicationDefinitionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationDefinitionPropertiesResponseOutput) ToApplicationDefinitionPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationDefinitionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ApplicationDefinitionPropertiesResponse) *ApplicationDefinitionPropertiesResponse {
		return &v
	}).(ApplicationDefinitionPropertiesResponsePtrOutput)
}

// The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
func (o ApplicationDefinitionPropertiesResponseOutput) Artifacts() ApplicationArtifactResponseArrayOutput {
	return o.ApplyT(func(v ApplicationDefinitionPropertiesResponse) []ApplicationArtifactResponse { return v.Artifacts }).(ApplicationArtifactResponseArrayOutput)
}

// The managed application provider authorizations.
func (o ApplicationDefinitionPropertiesResponseOutput) Authorizations() ApplicationProviderAuthorizationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationDefinitionPropertiesResponse) []ApplicationProviderAuthorizationResponse {
		return v.Authorizations
	}).(ApplicationProviderAuthorizationResponseArrayOutput)
}

// The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
func (o ApplicationDefinitionPropertiesResponseOutput) CreateUiDefinition() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationDefinitionPropertiesResponse) map[string]string { return v.CreateUiDefinition }).(pulumi.StringMapOutput)
}

// The managed application definition description.
func (o ApplicationDefinitionPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationDefinitionPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The managed application definition display name.
func (o ApplicationDefinitionPropertiesResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationDefinitionPropertiesResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// A value indicating whether the package is enabled or not.
func (o ApplicationDefinitionPropertiesResponseOutput) IsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationDefinitionPropertiesResponse) *string { return v.IsEnabled }).(pulumi.StringPtrOutput)
}

// The managed application lock level.
func (o ApplicationDefinitionPropertiesResponseOutput) LockLevel() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationDefinitionPropertiesResponse) string { return v.LockLevel }).(pulumi.StringOutput)
}

// The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
func (o ApplicationDefinitionPropertiesResponseOutput) MainTemplate() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationDefinitionPropertiesResponse) map[string]string { return v.MainTemplate }).(pulumi.StringMapOutput)
}

// The managed application definition package file Uri. Use this element
func (o ApplicationDefinitionPropertiesResponseOutput) PackageFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationDefinitionPropertiesResponse) *string { return v.PackageFileUri }).(pulumi.StringPtrOutput)
}

type ApplicationDefinitionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationDefinitionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationDefinitionPropertiesResponse)(nil)).Elem()
}

func (o ApplicationDefinitionPropertiesResponsePtrOutput) ToApplicationDefinitionPropertiesResponsePtrOutput() ApplicationDefinitionPropertiesResponsePtrOutput {
	return o
}

func (o ApplicationDefinitionPropertiesResponsePtrOutput) ToApplicationDefinitionPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationDefinitionPropertiesResponsePtrOutput {
	return o
}

func (o ApplicationDefinitionPropertiesResponsePtrOutput) Elem() ApplicationDefinitionPropertiesResponseOutput {
	return o.ApplyT(func(v *ApplicationDefinitionPropertiesResponse) ApplicationDefinitionPropertiesResponse { return *v }).(ApplicationDefinitionPropertiesResponseOutput)
}

// The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
func (o ApplicationDefinitionPropertiesResponsePtrOutput) Artifacts() ApplicationArtifactResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationDefinitionPropertiesResponse) []ApplicationArtifactResponse {
		if v == nil {
			return nil
		}
		return v.Artifacts
	}).(ApplicationArtifactResponseArrayOutput)
}

// The managed application provider authorizations.
func (o ApplicationDefinitionPropertiesResponsePtrOutput) Authorizations() ApplicationProviderAuthorizationResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationDefinitionPropertiesResponse) []ApplicationProviderAuthorizationResponse {
		if v == nil {
			return nil
		}
		return v.Authorizations
	}).(ApplicationProviderAuthorizationResponseArrayOutput)
}

// The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
func (o ApplicationDefinitionPropertiesResponsePtrOutput) CreateUiDefinition() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApplicationDefinitionPropertiesResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.CreateUiDefinition
	}).(pulumi.StringMapOutput)
}

// The managed application definition description.
func (o ApplicationDefinitionPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationDefinitionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The managed application definition display name.
func (o ApplicationDefinitionPropertiesResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationDefinitionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether the package is enabled or not.
func (o ApplicationDefinitionPropertiesResponsePtrOutput) IsEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationDefinitionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IsEnabled
	}).(pulumi.StringPtrOutput)
}

// The managed application lock level.
func (o ApplicationDefinitionPropertiesResponsePtrOutput) LockLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationDefinitionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LockLevel
	}).(pulumi.StringPtrOutput)
}

// The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
func (o ApplicationDefinitionPropertiesResponsePtrOutput) MainTemplate() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApplicationDefinitionPropertiesResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.MainTemplate
	}).(pulumi.StringMapOutput)
}

// The managed application definition package file Uri. Use this element
func (o ApplicationDefinitionPropertiesResponsePtrOutput) PackageFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationDefinitionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PackageFileUri
	}).(pulumi.StringPtrOutput)
}

// The managed application properties.
type ApplicationProperties struct {
	// The fully qualified path of managed application definition Id.
	ApplicationDefinitionId *string `pulumi:"applicationDefinitionId"`
	// The managed resource group Id.
	ManagedResourceGroupId string `pulumi:"managedResourceGroupId"`
	// Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string.
	Parameters map[string]string `pulumi:"parameters"`
	// The blob URI where the UI definition file is located.
	UiDefinitionUri *string `pulumi:"uiDefinitionUri"`
}

// ApplicationPropertiesInput is an input type that accepts ApplicationPropertiesArgs and ApplicationPropertiesOutput values.
// You can construct a concrete instance of `ApplicationPropertiesInput` via:
//
//          ApplicationPropertiesArgs{...}
type ApplicationPropertiesInput interface {
	pulumi.Input

	ToApplicationPropertiesOutput() ApplicationPropertiesOutput
	ToApplicationPropertiesOutputWithContext(context.Context) ApplicationPropertiesOutput
}

// The managed application properties.
type ApplicationPropertiesArgs struct {
	// The fully qualified path of managed application definition Id.
	ApplicationDefinitionId pulumi.StringPtrInput `pulumi:"applicationDefinitionId"`
	// The managed resource group Id.
	ManagedResourceGroupId pulumi.StringInput `pulumi:"managedResourceGroupId"`
	// Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// The blob URI where the UI definition file is located.
	UiDefinitionUri pulumi.StringPtrInput `pulumi:"uiDefinitionUri"`
}

func (ApplicationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationProperties)(nil)).Elem()
}

func (i ApplicationPropertiesArgs) ToApplicationPropertiesOutput() ApplicationPropertiesOutput {
	return i.ToApplicationPropertiesOutputWithContext(context.Background())
}

func (i ApplicationPropertiesArgs) ToApplicationPropertiesOutputWithContext(ctx context.Context) ApplicationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPropertiesOutput)
}

func (i ApplicationPropertiesArgs) ToApplicationPropertiesPtrOutput() ApplicationPropertiesPtrOutput {
	return i.ToApplicationPropertiesPtrOutputWithContext(context.Background())
}

func (i ApplicationPropertiesArgs) ToApplicationPropertiesPtrOutputWithContext(ctx context.Context) ApplicationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPropertiesOutput).ToApplicationPropertiesPtrOutputWithContext(ctx)
}

// ApplicationPropertiesPtrInput is an input type that accepts ApplicationPropertiesArgs, ApplicationPropertiesPtr and ApplicationPropertiesPtrOutput values.
// You can construct a concrete instance of `ApplicationPropertiesPtrInput` via:
//
//          ApplicationPropertiesArgs{...}
//
//  or:
//
//          nil
type ApplicationPropertiesPtrInput interface {
	pulumi.Input

	ToApplicationPropertiesPtrOutput() ApplicationPropertiesPtrOutput
	ToApplicationPropertiesPtrOutputWithContext(context.Context) ApplicationPropertiesPtrOutput
}

type applicationPropertiesPtrType ApplicationPropertiesArgs

func ApplicationPropertiesPtr(v *ApplicationPropertiesArgs) ApplicationPropertiesPtrInput {
	return (*applicationPropertiesPtrType)(v)
}

func (*applicationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationProperties)(nil)).Elem()
}

func (i *applicationPropertiesPtrType) ToApplicationPropertiesPtrOutput() ApplicationPropertiesPtrOutput {
	return i.ToApplicationPropertiesPtrOutputWithContext(context.Background())
}

func (i *applicationPropertiesPtrType) ToApplicationPropertiesPtrOutputWithContext(ctx context.Context) ApplicationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPropertiesPtrOutput)
}

// The managed application properties.
type ApplicationPropertiesOutput struct{ *pulumi.OutputState }

func (ApplicationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationProperties)(nil)).Elem()
}

func (o ApplicationPropertiesOutput) ToApplicationPropertiesOutput() ApplicationPropertiesOutput {
	return o
}

func (o ApplicationPropertiesOutput) ToApplicationPropertiesOutputWithContext(ctx context.Context) ApplicationPropertiesOutput {
	return o
}

func (o ApplicationPropertiesOutput) ToApplicationPropertiesPtrOutput() ApplicationPropertiesPtrOutput {
	return o.ToApplicationPropertiesPtrOutputWithContext(context.Background())
}

func (o ApplicationPropertiesOutput) ToApplicationPropertiesPtrOutputWithContext(ctx context.Context) ApplicationPropertiesPtrOutput {
	return o.ApplyT(func(v ApplicationProperties) *ApplicationProperties {
		return &v
	}).(ApplicationPropertiesPtrOutput)
}

// The fully qualified path of managed application definition Id.
func (o ApplicationPropertiesOutput) ApplicationDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationProperties) *string { return v.ApplicationDefinitionId }).(pulumi.StringPtrOutput)
}

// The managed resource group Id.
func (o ApplicationPropertiesOutput) ManagedResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationProperties) string { return v.ManagedResourceGroupId }).(pulumi.StringOutput)
}

// Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string.
func (o ApplicationPropertiesOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationProperties) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

// The blob URI where the UI definition file is located.
func (o ApplicationPropertiesOutput) UiDefinitionUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationProperties) *string { return v.UiDefinitionUri }).(pulumi.StringPtrOutput)
}

type ApplicationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ApplicationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationProperties)(nil)).Elem()
}

func (o ApplicationPropertiesPtrOutput) ToApplicationPropertiesPtrOutput() ApplicationPropertiesPtrOutput {
	return o
}

func (o ApplicationPropertiesPtrOutput) ToApplicationPropertiesPtrOutputWithContext(ctx context.Context) ApplicationPropertiesPtrOutput {
	return o
}

func (o ApplicationPropertiesPtrOutput) Elem() ApplicationPropertiesOutput {
	return o.ApplyT(func(v *ApplicationProperties) ApplicationProperties { return *v }).(ApplicationPropertiesOutput)
}

// The fully qualified path of managed application definition Id.
func (o ApplicationPropertiesPtrOutput) ApplicationDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationProperties) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationDefinitionId
	}).(pulumi.StringPtrOutput)
}

// The managed resource group Id.
func (o ApplicationPropertiesPtrOutput) ManagedResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ManagedResourceGroupId
	}).(pulumi.StringPtrOutput)
}

// Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string.
func (o ApplicationPropertiesPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApplicationProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

// The blob URI where the UI definition file is located.
func (o ApplicationPropertiesPtrOutput) UiDefinitionUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationProperties) *string {
		if v == nil {
			return nil
		}
		return v.UiDefinitionUri
	}).(pulumi.StringPtrOutput)
}

// The managed application properties.
type ApplicationPropertiesResponse struct {
	// The fully qualified path of managed application definition Id.
	ApplicationDefinitionId *string `pulumi:"applicationDefinitionId"`
	// The managed resource group Id.
	ManagedResourceGroupId string `pulumi:"managedResourceGroupId"`
	// Name and value pairs that define the managed application outputs.
	Outputs map[string]string `pulumi:"outputs"`
	// Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string.
	Parameters map[string]string `pulumi:"parameters"`
	// The managed application provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// The blob URI where the UI definition file is located.
	UiDefinitionUri *string `pulumi:"uiDefinitionUri"`
}

// ApplicationPropertiesResponseInput is an input type that accepts ApplicationPropertiesResponseArgs and ApplicationPropertiesResponseOutput values.
// You can construct a concrete instance of `ApplicationPropertiesResponseInput` via:
//
//          ApplicationPropertiesResponseArgs{...}
type ApplicationPropertiesResponseInput interface {
	pulumi.Input

	ToApplicationPropertiesResponseOutput() ApplicationPropertiesResponseOutput
	ToApplicationPropertiesResponseOutputWithContext(context.Context) ApplicationPropertiesResponseOutput
}

// The managed application properties.
type ApplicationPropertiesResponseArgs struct {
	// The fully qualified path of managed application definition Id.
	ApplicationDefinitionId pulumi.StringPtrInput `pulumi:"applicationDefinitionId"`
	// The managed resource group Id.
	ManagedResourceGroupId pulumi.StringInput `pulumi:"managedResourceGroupId"`
	// Name and value pairs that define the managed application outputs.
	Outputs pulumi.StringMapInput `pulumi:"outputs"`
	// Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// The managed application provisioning state.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The blob URI where the UI definition file is located.
	UiDefinitionUri pulumi.StringPtrInput `pulumi:"uiDefinitionUri"`
}

func (ApplicationPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationPropertiesResponse)(nil)).Elem()
}

func (i ApplicationPropertiesResponseArgs) ToApplicationPropertiesResponseOutput() ApplicationPropertiesResponseOutput {
	return i.ToApplicationPropertiesResponseOutputWithContext(context.Background())
}

func (i ApplicationPropertiesResponseArgs) ToApplicationPropertiesResponseOutputWithContext(ctx context.Context) ApplicationPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPropertiesResponseOutput)
}

func (i ApplicationPropertiesResponseArgs) ToApplicationPropertiesResponsePtrOutput() ApplicationPropertiesResponsePtrOutput {
	return i.ToApplicationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationPropertiesResponseArgs) ToApplicationPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPropertiesResponseOutput).ToApplicationPropertiesResponsePtrOutputWithContext(ctx)
}

// ApplicationPropertiesResponsePtrInput is an input type that accepts ApplicationPropertiesResponseArgs, ApplicationPropertiesResponsePtr and ApplicationPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationPropertiesResponsePtrInput` via:
//
//          ApplicationPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationPropertiesResponsePtrInput interface {
	pulumi.Input

	ToApplicationPropertiesResponsePtrOutput() ApplicationPropertiesResponsePtrOutput
	ToApplicationPropertiesResponsePtrOutputWithContext(context.Context) ApplicationPropertiesResponsePtrOutput
}

type applicationPropertiesResponsePtrType ApplicationPropertiesResponseArgs

func ApplicationPropertiesResponsePtr(v *ApplicationPropertiesResponseArgs) ApplicationPropertiesResponsePtrInput {
	return (*applicationPropertiesResponsePtrType)(v)
}

func (*applicationPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationPropertiesResponse)(nil)).Elem()
}

func (i *applicationPropertiesResponsePtrType) ToApplicationPropertiesResponsePtrOutput() ApplicationPropertiesResponsePtrOutput {
	return i.ToApplicationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *applicationPropertiesResponsePtrType) ToApplicationPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPropertiesResponsePtrOutput)
}

// The managed application properties.
type ApplicationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApplicationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationPropertiesResponse)(nil)).Elem()
}

func (o ApplicationPropertiesResponseOutput) ToApplicationPropertiesResponseOutput() ApplicationPropertiesResponseOutput {
	return o
}

func (o ApplicationPropertiesResponseOutput) ToApplicationPropertiesResponseOutputWithContext(ctx context.Context) ApplicationPropertiesResponseOutput {
	return o
}

func (o ApplicationPropertiesResponseOutput) ToApplicationPropertiesResponsePtrOutput() ApplicationPropertiesResponsePtrOutput {
	return o.ToApplicationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationPropertiesResponseOutput) ToApplicationPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ApplicationPropertiesResponse) *ApplicationPropertiesResponse {
		return &v
	}).(ApplicationPropertiesResponsePtrOutput)
}

// The fully qualified path of managed application definition Id.
func (o ApplicationPropertiesResponseOutput) ApplicationDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationPropertiesResponse) *string { return v.ApplicationDefinitionId }).(pulumi.StringPtrOutput)
}

// The managed resource group Id.
func (o ApplicationPropertiesResponseOutput) ManagedResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationPropertiesResponse) string { return v.ManagedResourceGroupId }).(pulumi.StringOutput)
}

// Name and value pairs that define the managed application outputs.
func (o ApplicationPropertiesResponseOutput) Outputs() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationPropertiesResponse) map[string]string { return v.Outputs }).(pulumi.StringMapOutput)
}

// Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string.
func (o ApplicationPropertiesResponseOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationPropertiesResponse) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

// The managed application provisioning state.
func (o ApplicationPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The blob URI where the UI definition file is located.
func (o ApplicationPropertiesResponseOutput) UiDefinitionUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationPropertiesResponse) *string { return v.UiDefinitionUri }).(pulumi.StringPtrOutput)
}

type ApplicationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationPropertiesResponse)(nil)).Elem()
}

func (o ApplicationPropertiesResponsePtrOutput) ToApplicationPropertiesResponsePtrOutput() ApplicationPropertiesResponsePtrOutput {
	return o
}

func (o ApplicationPropertiesResponsePtrOutput) ToApplicationPropertiesResponsePtrOutputWithContext(ctx context.Context) ApplicationPropertiesResponsePtrOutput {
	return o
}

func (o ApplicationPropertiesResponsePtrOutput) Elem() ApplicationPropertiesResponseOutput {
	return o.ApplyT(func(v *ApplicationPropertiesResponse) ApplicationPropertiesResponse { return *v }).(ApplicationPropertiesResponseOutput)
}

// The fully qualified path of managed application definition Id.
func (o ApplicationPropertiesResponsePtrOutput) ApplicationDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationDefinitionId
	}).(pulumi.StringPtrOutput)
}

// The managed resource group Id.
func (o ApplicationPropertiesResponsePtrOutput) ManagedResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ManagedResourceGroupId
	}).(pulumi.StringPtrOutput)
}

// Name and value pairs that define the managed application outputs.
func (o ApplicationPropertiesResponsePtrOutput) Outputs() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApplicationPropertiesResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Outputs
	}).(pulumi.StringMapOutput)
}

// Name and value pairs that define the managed application parameters. It can be a JObject or a well formed JSON string.
func (o ApplicationPropertiesResponsePtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApplicationPropertiesResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

// The managed application provisioning state.
func (o ApplicationPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The blob URI where the UI definition file is located.
func (o ApplicationPropertiesResponsePtrOutput) UiDefinitionUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.UiDefinitionUri
	}).(pulumi.StringPtrOutput)
}

// The managed application provider authorization.
type ApplicationProviderAuthorization struct {
	// The provider's principal identifier. This is the identity that the provider will use to call ARM to manage the managed application resources.
	PrincipalId string `pulumi:"principalId"`
	// The provider's role definition identifier. This role will define all the permissions that the provider must have on the managed application's container resource group. This role definition cannot have permission to delete the resource group.
	RoleDefinitionId string `pulumi:"roleDefinitionId"`
}

// ApplicationProviderAuthorizationInput is an input type that accepts ApplicationProviderAuthorizationArgs and ApplicationProviderAuthorizationOutput values.
// You can construct a concrete instance of `ApplicationProviderAuthorizationInput` via:
//
//          ApplicationProviderAuthorizationArgs{...}
type ApplicationProviderAuthorizationInput interface {
	pulumi.Input

	ToApplicationProviderAuthorizationOutput() ApplicationProviderAuthorizationOutput
	ToApplicationProviderAuthorizationOutputWithContext(context.Context) ApplicationProviderAuthorizationOutput
}

// The managed application provider authorization.
type ApplicationProviderAuthorizationArgs struct {
	// The provider's principal identifier. This is the identity that the provider will use to call ARM to manage the managed application resources.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The provider's role definition identifier. This role will define all the permissions that the provider must have on the managed application's container resource group. This role definition cannot have permission to delete the resource group.
	RoleDefinitionId pulumi.StringInput `pulumi:"roleDefinitionId"`
}

func (ApplicationProviderAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationProviderAuthorization)(nil)).Elem()
}

func (i ApplicationProviderAuthorizationArgs) ToApplicationProviderAuthorizationOutput() ApplicationProviderAuthorizationOutput {
	return i.ToApplicationProviderAuthorizationOutputWithContext(context.Background())
}

func (i ApplicationProviderAuthorizationArgs) ToApplicationProviderAuthorizationOutputWithContext(ctx context.Context) ApplicationProviderAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationProviderAuthorizationOutput)
}

// ApplicationProviderAuthorizationArrayInput is an input type that accepts ApplicationProviderAuthorizationArray and ApplicationProviderAuthorizationArrayOutput values.
// You can construct a concrete instance of `ApplicationProviderAuthorizationArrayInput` via:
//
//          ApplicationProviderAuthorizationArray{ ApplicationProviderAuthorizationArgs{...} }
type ApplicationProviderAuthorizationArrayInput interface {
	pulumi.Input

	ToApplicationProviderAuthorizationArrayOutput() ApplicationProviderAuthorizationArrayOutput
	ToApplicationProviderAuthorizationArrayOutputWithContext(context.Context) ApplicationProviderAuthorizationArrayOutput
}

type ApplicationProviderAuthorizationArray []ApplicationProviderAuthorizationInput

func (ApplicationProviderAuthorizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationProviderAuthorization)(nil)).Elem()
}

func (i ApplicationProviderAuthorizationArray) ToApplicationProviderAuthorizationArrayOutput() ApplicationProviderAuthorizationArrayOutput {
	return i.ToApplicationProviderAuthorizationArrayOutputWithContext(context.Background())
}

func (i ApplicationProviderAuthorizationArray) ToApplicationProviderAuthorizationArrayOutputWithContext(ctx context.Context) ApplicationProviderAuthorizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationProviderAuthorizationArrayOutput)
}

// The managed application provider authorization.
type ApplicationProviderAuthorizationOutput struct{ *pulumi.OutputState }

func (ApplicationProviderAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationProviderAuthorization)(nil)).Elem()
}

func (o ApplicationProviderAuthorizationOutput) ToApplicationProviderAuthorizationOutput() ApplicationProviderAuthorizationOutput {
	return o
}

func (o ApplicationProviderAuthorizationOutput) ToApplicationProviderAuthorizationOutputWithContext(ctx context.Context) ApplicationProviderAuthorizationOutput {
	return o
}

// The provider's principal identifier. This is the identity that the provider will use to call ARM to manage the managed application resources.
func (o ApplicationProviderAuthorizationOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationProviderAuthorization) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The provider's role definition identifier. This role will define all the permissions that the provider must have on the managed application's container resource group. This role definition cannot have permission to delete the resource group.
func (o ApplicationProviderAuthorizationOutput) RoleDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationProviderAuthorization) string { return v.RoleDefinitionId }).(pulumi.StringOutput)
}

type ApplicationProviderAuthorizationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationProviderAuthorizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationProviderAuthorization)(nil)).Elem()
}

func (o ApplicationProviderAuthorizationArrayOutput) ToApplicationProviderAuthorizationArrayOutput() ApplicationProviderAuthorizationArrayOutput {
	return o
}

func (o ApplicationProviderAuthorizationArrayOutput) ToApplicationProviderAuthorizationArrayOutputWithContext(ctx context.Context) ApplicationProviderAuthorizationArrayOutput {
	return o
}

func (o ApplicationProviderAuthorizationArrayOutput) Index(i pulumi.IntInput) ApplicationProviderAuthorizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationProviderAuthorization {
		return vs[0].([]ApplicationProviderAuthorization)[vs[1].(int)]
	}).(ApplicationProviderAuthorizationOutput)
}

// The managed application provider authorization.
type ApplicationProviderAuthorizationResponse struct {
	// The provider's principal identifier. This is the identity that the provider will use to call ARM to manage the managed application resources.
	PrincipalId string `pulumi:"principalId"`
	// The provider's role definition identifier. This role will define all the permissions that the provider must have on the managed application's container resource group. This role definition cannot have permission to delete the resource group.
	RoleDefinitionId string `pulumi:"roleDefinitionId"`
}

// ApplicationProviderAuthorizationResponseInput is an input type that accepts ApplicationProviderAuthorizationResponseArgs and ApplicationProviderAuthorizationResponseOutput values.
// You can construct a concrete instance of `ApplicationProviderAuthorizationResponseInput` via:
//
//          ApplicationProviderAuthorizationResponseArgs{...}
type ApplicationProviderAuthorizationResponseInput interface {
	pulumi.Input

	ToApplicationProviderAuthorizationResponseOutput() ApplicationProviderAuthorizationResponseOutput
	ToApplicationProviderAuthorizationResponseOutputWithContext(context.Context) ApplicationProviderAuthorizationResponseOutput
}

// The managed application provider authorization.
type ApplicationProviderAuthorizationResponseArgs struct {
	// The provider's principal identifier. This is the identity that the provider will use to call ARM to manage the managed application resources.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The provider's role definition identifier. This role will define all the permissions that the provider must have on the managed application's container resource group. This role definition cannot have permission to delete the resource group.
	RoleDefinitionId pulumi.StringInput `pulumi:"roleDefinitionId"`
}

func (ApplicationProviderAuthorizationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationProviderAuthorizationResponse)(nil)).Elem()
}

func (i ApplicationProviderAuthorizationResponseArgs) ToApplicationProviderAuthorizationResponseOutput() ApplicationProviderAuthorizationResponseOutput {
	return i.ToApplicationProviderAuthorizationResponseOutputWithContext(context.Background())
}

func (i ApplicationProviderAuthorizationResponseArgs) ToApplicationProviderAuthorizationResponseOutputWithContext(ctx context.Context) ApplicationProviderAuthorizationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationProviderAuthorizationResponseOutput)
}

// ApplicationProviderAuthorizationResponseArrayInput is an input type that accepts ApplicationProviderAuthorizationResponseArray and ApplicationProviderAuthorizationResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationProviderAuthorizationResponseArrayInput` via:
//
//          ApplicationProviderAuthorizationResponseArray{ ApplicationProviderAuthorizationResponseArgs{...} }
type ApplicationProviderAuthorizationResponseArrayInput interface {
	pulumi.Input

	ToApplicationProviderAuthorizationResponseArrayOutput() ApplicationProviderAuthorizationResponseArrayOutput
	ToApplicationProviderAuthorizationResponseArrayOutputWithContext(context.Context) ApplicationProviderAuthorizationResponseArrayOutput
}

type ApplicationProviderAuthorizationResponseArray []ApplicationProviderAuthorizationResponseInput

func (ApplicationProviderAuthorizationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationProviderAuthorizationResponse)(nil)).Elem()
}

func (i ApplicationProviderAuthorizationResponseArray) ToApplicationProviderAuthorizationResponseArrayOutput() ApplicationProviderAuthorizationResponseArrayOutput {
	return i.ToApplicationProviderAuthorizationResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationProviderAuthorizationResponseArray) ToApplicationProviderAuthorizationResponseArrayOutputWithContext(ctx context.Context) ApplicationProviderAuthorizationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationProviderAuthorizationResponseArrayOutput)
}

// The managed application provider authorization.
type ApplicationProviderAuthorizationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationProviderAuthorizationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationProviderAuthorizationResponse)(nil)).Elem()
}

func (o ApplicationProviderAuthorizationResponseOutput) ToApplicationProviderAuthorizationResponseOutput() ApplicationProviderAuthorizationResponseOutput {
	return o
}

func (o ApplicationProviderAuthorizationResponseOutput) ToApplicationProviderAuthorizationResponseOutputWithContext(ctx context.Context) ApplicationProviderAuthorizationResponseOutput {
	return o
}

// The provider's principal identifier. This is the identity that the provider will use to call ARM to manage the managed application resources.
func (o ApplicationProviderAuthorizationResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationProviderAuthorizationResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The provider's role definition identifier. This role will define all the permissions that the provider must have on the managed application's container resource group. This role definition cannot have permission to delete the resource group.
func (o ApplicationProviderAuthorizationResponseOutput) RoleDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationProviderAuthorizationResponse) string { return v.RoleDefinitionId }).(pulumi.StringOutput)
}

type ApplicationProviderAuthorizationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationProviderAuthorizationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationProviderAuthorizationResponse)(nil)).Elem()
}

func (o ApplicationProviderAuthorizationResponseArrayOutput) ToApplicationProviderAuthorizationResponseArrayOutput() ApplicationProviderAuthorizationResponseArrayOutput {
	return o
}

func (o ApplicationProviderAuthorizationResponseArrayOutput) ToApplicationProviderAuthorizationResponseArrayOutputWithContext(ctx context.Context) ApplicationProviderAuthorizationResponseArrayOutput {
	return o
}

func (o ApplicationProviderAuthorizationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationProviderAuthorizationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationProviderAuthorizationResponse {
		return vs[0].([]ApplicationProviderAuthorizationResponse)[vs[1].(int)]
	}).(ApplicationProviderAuthorizationResponseOutput)
}

// Identity for the resource.
type Identity struct {
	// The identity type.
	Type *string `pulumi:"type"`
}

// IdentityInput is an input type that accepts IdentityArgs and IdentityOutput values.
// You can construct a concrete instance of `IdentityInput` via:
//
//          IdentityArgs{...}
type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(context.Context) IdentityOutput
}

// Identity for the resource.
type IdentityArgs struct {
	// The identity type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (i IdentityArgs) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

func (i IdentityArgs) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput).ToIdentityPtrOutputWithContext(ctx)
}

// IdentityPtrInput is an input type that accepts IdentityArgs, IdentityPtr and IdentityPtrOutput values.
// You can construct a concrete instance of `IdentityPtrInput` via:
//
//          IdentityArgs{...}
//
//  or:
//
//          nil
type IdentityPtrInput interface {
	pulumi.Input

	ToIdentityPtrOutput() IdentityPtrOutput
	ToIdentityPtrOutputWithContext(context.Context) IdentityPtrOutput
}

type identityPtrType IdentityArgs

func IdentityPtr(v *IdentityArgs) IdentityPtrInput {
	return (*identityPtrType)(v)
}

func (*identityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *identityPtrType) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i *identityPtrType) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPtrOutput)
}

// Identity for the resource.
type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o.ToIdentityPtrOutputWithContext(context.Background())
}

func (o IdentityOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o.ApplyT(func(v Identity) *Identity {
		return &v
	}).(IdentityPtrOutput)
}

// The identity type.
func (o IdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Identity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IdentityPtrOutput struct{ *pulumi.OutputState }

func (IdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityPtrOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) Elem() IdentityOutput {
	return o.ApplyT(func(v *Identity) Identity { return *v }).(IdentityOutput)
}

// The identity type.
func (o IdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity for the resource.
type IdentityResponse struct {
	// The principal ID of resource identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId string `pulumi:"tenantId"`
	// The identity type.
	Type *string `pulumi:"type"`
}

// IdentityResponseInput is an input type that accepts IdentityResponseArgs and IdentityResponseOutput values.
// You can construct a concrete instance of `IdentityResponseInput` via:
//
//          IdentityResponseArgs{...}
type IdentityResponseInput interface {
	pulumi.Input

	ToIdentityResponseOutput() IdentityResponseOutput
	ToIdentityResponseOutputWithContext(context.Context) IdentityResponseOutput
}

// Identity for the resource.
type IdentityResponseArgs struct {
	// The principal ID of resource identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The identity type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (i IdentityResponseArgs) ToIdentityResponseOutput() IdentityResponseOutput {
	return i.ToIdentityResponseOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput)
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput).ToIdentityResponsePtrOutputWithContext(ctx)
}

// IdentityResponsePtrInput is an input type that accepts IdentityResponseArgs, IdentityResponsePtr and IdentityResponsePtrOutput values.
// You can construct a concrete instance of `IdentityResponsePtrInput` via:
//
//          IdentityResponseArgs{...}
//
//  or:
//
//          nil
type IdentityResponsePtrInput interface {
	pulumi.Input

	ToIdentityResponsePtrOutput() IdentityResponsePtrOutput
	ToIdentityResponsePtrOutputWithContext(context.Context) IdentityResponsePtrOutput
}

type identityResponsePtrType IdentityResponseArgs

func IdentityResponsePtr(v *IdentityResponseArgs) IdentityResponsePtrInput {
	return (*identityResponsePtrType)(v)
}

func (*identityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponsePtrOutput)
}

// Identity for the resource.
type IdentityResponseOutput struct{ *pulumi.OutputState }

func (IdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (o IdentityResponseOutput) ToIdentityResponseOutput() IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o.ApplyT(func(v IdentityResponse) *IdentityResponse {
		return &v
	}).(IdentityResponsePtrOutput)
}

// The principal ID of resource identity.
func (o IdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of resource.
func (o IdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type.
func (o IdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) Elem() IdentityResponseOutput {
	return o.ApplyT(func(v *IdentityResponse) IdentityResponse { return *v }).(IdentityResponseOutput)
}

// The principal ID of resource identity.
func (o IdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Plan for the managed application.
type Plan struct {
	// The plan name.
	Name string `pulumi:"name"`
	// The product code.
	Product string `pulumi:"product"`
	// The promotion code.
	PromotionCode *string `pulumi:"promotionCode"`
	// The publisher ID.
	Publisher string `pulumi:"publisher"`
	// The plan's version.
	Version string `pulumi:"version"`
}

// PlanInput is an input type that accepts PlanArgs and PlanOutput values.
// You can construct a concrete instance of `PlanInput` via:
//
//          PlanArgs{...}
type PlanInput interface {
	pulumi.Input

	ToPlanOutput() PlanOutput
	ToPlanOutputWithContext(context.Context) PlanOutput
}

// Plan for the managed application.
type PlanArgs struct {
	// The plan name.
	Name pulumi.StringInput `pulumi:"name"`
	// The product code.
	Product pulumi.StringInput `pulumi:"product"`
	// The promotion code.
	PromotionCode pulumi.StringPtrInput `pulumi:"promotionCode"`
	// The publisher ID.
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// The plan's version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (PlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Plan)(nil)).Elem()
}

func (i PlanArgs) ToPlanOutput() PlanOutput {
	return i.ToPlanOutputWithContext(context.Background())
}

func (i PlanArgs) ToPlanOutputWithContext(ctx context.Context) PlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanOutput)
}

func (i PlanArgs) ToPlanPtrOutput() PlanPtrOutput {
	return i.ToPlanPtrOutputWithContext(context.Background())
}

func (i PlanArgs) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanOutput).ToPlanPtrOutputWithContext(ctx)
}

// PlanPtrInput is an input type that accepts PlanArgs, PlanPtr and PlanPtrOutput values.
// You can construct a concrete instance of `PlanPtrInput` via:
//
//          PlanArgs{...}
//
//  or:
//
//          nil
type PlanPtrInput interface {
	pulumi.Input

	ToPlanPtrOutput() PlanPtrOutput
	ToPlanPtrOutputWithContext(context.Context) PlanPtrOutput
}

type planPtrType PlanArgs

func PlanPtr(v *PlanArgs) PlanPtrInput {
	return (*planPtrType)(v)
}

func (*planPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Plan)(nil)).Elem()
}

func (i *planPtrType) ToPlanPtrOutput() PlanPtrOutput {
	return i.ToPlanPtrOutputWithContext(context.Background())
}

func (i *planPtrType) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanPtrOutput)
}

// Plan for the managed application.
type PlanOutput struct{ *pulumi.OutputState }

func (PlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Plan)(nil)).Elem()
}

func (o PlanOutput) ToPlanOutput() PlanOutput {
	return o
}

func (o PlanOutput) ToPlanOutputWithContext(ctx context.Context) PlanOutput {
	return o
}

func (o PlanOutput) ToPlanPtrOutput() PlanPtrOutput {
	return o.ToPlanPtrOutputWithContext(context.Background())
}

func (o PlanOutput) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return o.ApplyT(func(v Plan) *Plan {
		return &v
	}).(PlanPtrOutput)
}

// The plan name.
func (o PlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Plan) string { return v.Name }).(pulumi.StringOutput)
}

// The product code.
func (o PlanOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v Plan) string { return v.Product }).(pulumi.StringOutput)
}

// The promotion code.
func (o PlanOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Plan) *string { return v.PromotionCode }).(pulumi.StringPtrOutput)
}

// The publisher ID.
func (o PlanOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v Plan) string { return v.Publisher }).(pulumi.StringOutput)
}

// The plan's version.
func (o PlanOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v Plan) string { return v.Version }).(pulumi.StringOutput)
}

type PlanPtrOutput struct{ *pulumi.OutputState }

func (PlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Plan)(nil)).Elem()
}

func (o PlanPtrOutput) ToPlanPtrOutput() PlanPtrOutput {
	return o
}

func (o PlanPtrOutput) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return o
}

func (o PlanPtrOutput) Elem() PlanOutput {
	return o.ApplyT(func(v *Plan) Plan { return *v }).(PlanOutput)
}

// The plan name.
func (o PlanPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The product code.
func (o PlanPtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return &v.Product
	}).(pulumi.StringPtrOutput)
}

// The promotion code.
func (o PlanPtrOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return v.PromotionCode
	}).(pulumi.StringPtrOutput)
}

// The publisher ID.
func (o PlanPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The plan's version.
func (o PlanPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

// Plan for the managed application.
type PlanResponse struct {
	// The plan name.
	Name string `pulumi:"name"`
	// The product code.
	Product string `pulumi:"product"`
	// The promotion code.
	PromotionCode *string `pulumi:"promotionCode"`
	// The publisher ID.
	Publisher string `pulumi:"publisher"`
	// The plan's version.
	Version string `pulumi:"version"`
}

// PlanResponseInput is an input type that accepts PlanResponseArgs and PlanResponseOutput values.
// You can construct a concrete instance of `PlanResponseInput` via:
//
//          PlanResponseArgs{...}
type PlanResponseInput interface {
	pulumi.Input

	ToPlanResponseOutput() PlanResponseOutput
	ToPlanResponseOutputWithContext(context.Context) PlanResponseOutput
}

// Plan for the managed application.
type PlanResponseArgs struct {
	// The plan name.
	Name pulumi.StringInput `pulumi:"name"`
	// The product code.
	Product pulumi.StringInput `pulumi:"product"`
	// The promotion code.
	PromotionCode pulumi.StringPtrInput `pulumi:"promotionCode"`
	// The publisher ID.
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// The plan's version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (PlanResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlanResponse)(nil)).Elem()
}

func (i PlanResponseArgs) ToPlanResponseOutput() PlanResponseOutput {
	return i.ToPlanResponseOutputWithContext(context.Background())
}

func (i PlanResponseArgs) ToPlanResponseOutputWithContext(ctx context.Context) PlanResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanResponseOutput)
}

func (i PlanResponseArgs) ToPlanResponsePtrOutput() PlanResponsePtrOutput {
	return i.ToPlanResponsePtrOutputWithContext(context.Background())
}

func (i PlanResponseArgs) ToPlanResponsePtrOutputWithContext(ctx context.Context) PlanResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanResponseOutput).ToPlanResponsePtrOutputWithContext(ctx)
}

// PlanResponsePtrInput is an input type that accepts PlanResponseArgs, PlanResponsePtr and PlanResponsePtrOutput values.
// You can construct a concrete instance of `PlanResponsePtrInput` via:
//
//          PlanResponseArgs{...}
//
//  or:
//
//          nil
type PlanResponsePtrInput interface {
	pulumi.Input

	ToPlanResponsePtrOutput() PlanResponsePtrOutput
	ToPlanResponsePtrOutputWithContext(context.Context) PlanResponsePtrOutput
}

type planResponsePtrType PlanResponseArgs

func PlanResponsePtr(v *PlanResponseArgs) PlanResponsePtrInput {
	return (*planResponsePtrType)(v)
}

func (*planResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PlanResponse)(nil)).Elem()
}

func (i *planResponsePtrType) ToPlanResponsePtrOutput() PlanResponsePtrOutput {
	return i.ToPlanResponsePtrOutputWithContext(context.Background())
}

func (i *planResponsePtrType) ToPlanResponsePtrOutputWithContext(ctx context.Context) PlanResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanResponsePtrOutput)
}

// Plan for the managed application.
type PlanResponseOutput struct{ *pulumi.OutputState }

func (PlanResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlanResponse)(nil)).Elem()
}

func (o PlanResponseOutput) ToPlanResponseOutput() PlanResponseOutput {
	return o
}

func (o PlanResponseOutput) ToPlanResponseOutputWithContext(ctx context.Context) PlanResponseOutput {
	return o
}

func (o PlanResponseOutput) ToPlanResponsePtrOutput() PlanResponsePtrOutput {
	return o.ToPlanResponsePtrOutputWithContext(context.Background())
}

func (o PlanResponseOutput) ToPlanResponsePtrOutputWithContext(ctx context.Context) PlanResponsePtrOutput {
	return o.ApplyT(func(v PlanResponse) *PlanResponse {
		return &v
	}).(PlanResponsePtrOutput)
}

// The plan name.
func (o PlanResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PlanResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The product code.
func (o PlanResponseOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v PlanResponse) string { return v.Product }).(pulumi.StringOutput)
}

// The promotion code.
func (o PlanResponseOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlanResponse) *string { return v.PromotionCode }).(pulumi.StringPtrOutput)
}

// The publisher ID.
func (o PlanResponseOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v PlanResponse) string { return v.Publisher }).(pulumi.StringOutput)
}

// The plan's version.
func (o PlanResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v PlanResponse) string { return v.Version }).(pulumi.StringOutput)
}

type PlanResponsePtrOutput struct{ *pulumi.OutputState }

func (PlanResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlanResponse)(nil)).Elem()
}

func (o PlanResponsePtrOutput) ToPlanResponsePtrOutput() PlanResponsePtrOutput {
	return o
}

func (o PlanResponsePtrOutput) ToPlanResponsePtrOutputWithContext(ctx context.Context) PlanResponsePtrOutput {
	return o
}

func (o PlanResponsePtrOutput) Elem() PlanResponseOutput {
	return o.ApplyT(func(v *PlanResponse) PlanResponse { return *v }).(PlanResponseOutput)
}

// The plan name.
func (o PlanResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The product code.
func (o PlanResponsePtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Product
	}).(pulumi.StringPtrOutput)
}

// The promotion code.
func (o PlanResponsePtrOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.PromotionCode
	}).(pulumi.StringPtrOutput)
}

// The publisher ID.
func (o PlanResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The plan's version.
func (o PlanResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

// SKU for the resource.
type Sku struct {
	// The SKU capacity.
	Capacity *int `pulumi:"capacity"`
	// The SKU family.
	Family *string `pulumi:"family"`
	// The SKU model.
	Model *string `pulumi:"model"`
	// The SKU name.
	Name string `pulumi:"name"`
	// The SKU size.
	Size *string `pulumi:"size"`
	// The SKU tier.
	Tier *string `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// SKU for the resource.
type SkuArgs struct {
	// The SKU capacity.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// The SKU family.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The SKU model.
	Model pulumi.StringPtrInput `pulumi:"model"`
	// The SKU name.
	Name pulumi.StringInput `pulumi:"name"`
	// The SKU size.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// The SKU tier.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// SKU for the resource.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The SKU capacity.
func (o SkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Sku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// The SKU family.
func (o SkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The SKU model.
func (o SkuOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Model }).(pulumi.StringPtrOutput)
}

// The SKU name.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU size.
func (o SkuOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The SKU tier.
func (o SkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// The SKU capacity.
func (o SkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Sku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The SKU family.
func (o SkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The SKU model.
func (o SkuPtrOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Model
	}).(pulumi.StringPtrOutput)
}

// The SKU name.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU size.
func (o SkuPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The SKU tier.
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SKU for the resource.
type SkuResponse struct {
	// The SKU capacity.
	Capacity *int `pulumi:"capacity"`
	// The SKU family.
	Family *string `pulumi:"family"`
	// The SKU model.
	Model *string `pulumi:"model"`
	// The SKU name.
	Name string `pulumi:"name"`
	// The SKU size.
	Size *string `pulumi:"size"`
	// The SKU tier.
	Tier *string `pulumi:"tier"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// SKU for the resource.
type SkuResponseArgs struct {
	// The SKU capacity.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// The SKU family.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The SKU model.
	Model pulumi.StringPtrInput `pulumi:"model"`
	// The SKU name.
	Name pulumi.StringInput `pulumi:"name"`
	// The SKU size.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// The SKU tier.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// SKU for the resource.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// The SKU capacity.
func (o SkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// The SKU family.
func (o SkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The SKU model.
func (o SkuResponseOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Model }).(pulumi.StringPtrOutput)
}

// The SKU name.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU size.
func (o SkuResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The SKU tier.
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// The SKU capacity.
func (o SkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The SKU family.
func (o SkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The SKU model.
func (o SkuResponsePtrOutput) Model() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Model
	}).(pulumi.StringPtrOutput)
}

// The SKU name.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU size.
func (o SkuResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The SKU tier.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationTypeOutput{})
	pulumi.RegisterOutputType(ApplicationArtifactOutput{})
	pulumi.RegisterOutputType(ApplicationArtifactArrayOutput{})
	pulumi.RegisterOutputType(ApplicationArtifactResponseOutput{})
	pulumi.RegisterOutputType(ApplicationArtifactResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationDefinitionTypeOutput{})
	pulumi.RegisterOutputType(ApplicationDefinitionPropertiesOutput{})
	pulumi.RegisterOutputType(ApplicationDefinitionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ApplicationDefinitionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApplicationDefinitionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationPropertiesOutput{})
	pulumi.RegisterOutputType(ApplicationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ApplicationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApplicationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationProviderAuthorizationOutput{})
	pulumi.RegisterOutputType(ApplicationProviderAuthorizationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationProviderAuthorizationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationProviderAuthorizationResponseArrayOutput{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityPtrOutput{})
	pulumi.RegisterOutputType(IdentityResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(PlanOutput{})
	pulumi.RegisterOutputType(PlanPtrOutput{})
	pulumi.RegisterOutputType(PlanResponseOutput{})
	pulumi.RegisterOutputType(PlanResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
}
