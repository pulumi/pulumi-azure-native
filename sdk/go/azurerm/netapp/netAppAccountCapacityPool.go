// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package netapp

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Capacity pool resource
type NetAppAccountCapacityPool struct {
	pulumi.CustomResourceState

	// Resource location
	Location pulumi.StringOutput `pulumi:"location"`
	// Resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// Capacity pool properties
	Properties PoolPropertiesResponseOutput `pulumi:"properties"`
	// Resource tags
	Tags ResourceTagsResponsePtrOutput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewNetAppAccountCapacityPool registers a new resource with the given unique name, arguments, and options.
func NewNetAppAccountCapacityPool(ctx *pulumi.Context,
	name string, args *NetAppAccountCapacityPoolArgs, opts ...pulumi.ResourceOption) (*NetAppAccountCapacityPool, error) {
	if args == nil || args.AccountName == nil {
		return nil, errors.New("missing required argument 'AccountName'")
	}
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.Properties == nil {
		return nil, errors.New("missing required argument 'Properties'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &NetAppAccountCapacityPoolArgs{}
	}
	var resource NetAppAccountCapacityPool
	err := ctx.RegisterResource("azurerm:netapp:NetAppAccountCapacityPool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetAppAccountCapacityPool gets an existing NetAppAccountCapacityPool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetAppAccountCapacityPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetAppAccountCapacityPoolState, opts ...pulumi.ResourceOption) (*NetAppAccountCapacityPool, error) {
	var resource NetAppAccountCapacityPool
	err := ctx.ReadResource("azurerm:netapp:NetAppAccountCapacityPool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetAppAccountCapacityPool resources.
type netAppAccountCapacityPoolState struct {
	// Resource location
	Location *string `pulumi:"location"`
	// Resource name
	Name *string `pulumi:"name"`
	// Capacity pool properties
	Properties *PoolPropertiesResponse `pulumi:"properties"`
	// Resource tags
	Tags *ResourceTagsResponse `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

type NetAppAccountCapacityPoolState struct {
	// Resource location
	Location pulumi.StringPtrInput
	// Resource name
	Name pulumi.StringPtrInput
	// Capacity pool properties
	Properties PoolPropertiesResponsePtrInput
	// Resource tags
	Tags ResourceTagsResponsePtrInput
	// Resource type
	Type pulumi.StringPtrInput
}

func (NetAppAccountCapacityPoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*netAppAccountCapacityPoolState)(nil)).Elem()
}

type netAppAccountCapacityPoolArgs struct {
	// The name of the NetApp account
	AccountName string `pulumi:"accountName"`
	// Resource location
	Location string `pulumi:"location"`
	// The name of the capacity pool
	Name string `pulumi:"name"`
	// Capacity pool properties
	Properties PoolProperties `pulumi:"properties"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags
	Tags *ResourceTags `pulumi:"tags"`
}

// The set of arguments for constructing a NetAppAccountCapacityPool resource.
type NetAppAccountCapacityPoolArgs struct {
	// The name of the NetApp account
	AccountName pulumi.StringInput
	// Resource location
	Location pulumi.StringInput
	// The name of the capacity pool
	Name pulumi.StringInput
	// Capacity pool properties
	Properties PoolPropertiesInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// Resource tags
	Tags ResourceTagsPtrInput
}

func (NetAppAccountCapacityPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*netAppAccountCapacityPoolArgs)(nil)).Elem()
}
